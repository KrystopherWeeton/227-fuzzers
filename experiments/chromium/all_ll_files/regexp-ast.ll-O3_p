; ModuleID = '../../v8/src/regexp/regexp-ast.cc'
source_filename = "../../v8/src/regexp/regexp-ast.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.v8::internal::RegExpDisjunction" = type { %"class.v8::internal::RegExpTree", %"class.v8::internal::ZoneList"*, i32, i32 }
%"class.v8::internal::RegExpTree" = type { i32 (...)** }
%"class.v8::internal::ZoneList" = type { %"class.v8::internal::RegExpTree"**, i32, i32 }
%"class.v8::internal::RegExpAlternative" = type { %"class.v8::internal::RegExpTree", %"class.v8::internal::ZoneList"*, i32, i32 }
%"class.v8::internal::RegExpVisitor" = type { i32 (...)** }
%"class.v8::internal::RegExpAssertion" = type { %"class.v8::internal::RegExpTree", i32, %"class.v8::base::Flags" }
%"class.v8::base::Flags" = type { i32 }
%"class.v8::internal::RegExpCharacterClass" = type { %"class.v8::internal::RegExpTree", %"class.v8::internal::CharacterSet", %"class.v8::base::Flags", %"class.v8::base::Flags.1" }
%"class.v8::internal::CharacterSet" = type <{ %"class.v8::internal::ZoneList.0"*, i16, [6 x i8] }>
%"class.v8::internal::ZoneList.0" = type { %"class.v8::internal::CharacterRange"*, i32, i32 }
%"class.v8::internal::CharacterRange" = type { i32, i32 }
%"class.v8::base::Flags.1" = type { i32 }
%"class.v8::internal::RegExpAtom" = type <{ %"class.v8::internal::RegExpTree", %"class.v8::internal::Vector", %"class.v8::base::Flags", [4 x i8] }>
%"class.v8::internal::Vector" = type { i16*, i64 }
%"class.v8::internal::RegExpQuantifier" = type <{ %"class.v8::internal::RegExpTree", %"class.v8::internal::RegExpTree"*, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.v8::internal::RegExpCapture" = type { %"class.v8::internal::RegExpTree", %"class.v8::internal::RegExpTree"*, i32, i32, i32, %"class.v8::internal::ZoneVector"* }
%"class.v8::internal::ZoneVector" = type opaque
%"class.v8::internal::RegExpGroup" = type { %"class.v8::internal::RegExpTree", %"class.v8::internal::RegExpTree"*, i32, i32 }
%"class.v8::internal::RegExpLookaround" = type { %"class.v8::internal::RegExpTree", %"class.v8::internal::RegExpTree"*, i8, i32, i32, i32 }
%"class.v8::internal::RegExpBackReference" = type <{ %"class.v8::internal::RegExpTree", %"class.v8::internal::RegExpCapture"*, %"class.v8::internal::ZoneVector"*, %"class.v8::base::Flags", [4 x i8] }>
%"class.v8::internal::RegExpEmpty" = type { %"class.v8::internal::RegExpTree" }
%"class.v8::internal::RegExpText" = type <{ %"class.v8::internal::RegExpTree", %"class.v8::internal::ZoneList.2", i32, [4 x i8] }>
%"class.v8::internal::ZoneList.2" = type { %"class.v8::internal::TextElement"*, i32, i32 }
%"class.v8::internal::TextElement" = type { i32, i32, %"class.v8::internal::RegExpTree"* }
%"class.v8::internal::RegExpUnparser" = type { %"class.v8::internal::RegExpVisitor", %"class.std::__1::basic_ostream"*, %"class.v8::internal::Zone"* }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.5" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type opaque
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"struct.v8::internal::AsUC32" = type { i32 }
%"struct.v8::internal::AsUC16" = type { i16 }
%"class.v8::internal::RegExpCompiler" = type opaque
%"class.v8::internal::RegExpNode" = type opaque
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN2v88internal15RegExpAssertionD0Ev = comdat any

$_ZN2v88internal10RegExpTree13IsTextElementEv = comdat any

$_ZN2v88internal15RegExpAssertion9min_matchEv = comdat any

$_ZN2v88internal15RegExpAssertion9max_matchEv = comdat any

$_ZN2v88internal10RegExpTree16CaptureRegistersEv = comdat any

$_ZN2v88internal20RegExpCharacterClassD0Ev = comdat any

$_ZN2v88internal20RegExpCharacterClass13IsTextElementEv = comdat any

$_ZN2v88internal10RegExpTree17IsAnchoredAtStartEv = comdat any

$_ZN2v88internal10RegExpTree15IsAnchoredAtEndEv = comdat any

$_ZN2v88internal20RegExpCharacterClass9min_matchEv = comdat any

$_ZN2v88internal20RegExpCharacterClass9max_matchEv = comdat any

$_ZN2v88internal10RegExpAtomD0Ev = comdat any

$_ZN2v88internal10RegExpAtom13IsTextElementEv = comdat any

$_ZN2v88internal10RegExpAtom9min_matchEv = comdat any

$_ZN2v88internal10RegExpAtom9max_matchEv = comdat any

$_ZN2v88internal10RegExpTextD0Ev = comdat any

$_ZN2v88internal10RegExpText13IsTextElementEv = comdat any

$_ZN2v88internal10RegExpText9min_matchEv = comdat any

$_ZN2v88internal10RegExpText9max_matchEv = comdat any

$_ZN2v88internal16RegExpQuantifierD0Ev = comdat any

$_ZN2v88internal16RegExpQuantifier9min_matchEv = comdat any

$_ZN2v88internal16RegExpQuantifier9max_matchEv = comdat any

$_ZN2v88internal13RegExpCaptureD0Ev = comdat any

$_ZN2v88internal13RegExpCapture9min_matchEv = comdat any

$_ZN2v88internal13RegExpCapture9max_matchEv = comdat any

$_ZN2v88internal11RegExpGroupD0Ev = comdat any

$_ZN2v88internal11RegExpGroup6ToNodeEPNS0_14RegExpCompilerEPNS0_10RegExpNodeE = comdat any

$_ZN2v88internal11RegExpGroup17IsAnchoredAtStartEv = comdat any

$_ZN2v88internal11RegExpGroup15IsAnchoredAtEndEv = comdat any

$_ZN2v88internal11RegExpGroup9min_matchEv = comdat any

$_ZN2v88internal11RegExpGroup9max_matchEv = comdat any

$_ZN2v88internal11RegExpGroup16CaptureRegistersEv = comdat any

$_ZN2v88internal16RegExpLookaroundD0Ev = comdat any

$_ZN2v88internal16RegExpLookaround9min_matchEv = comdat any

$_ZN2v88internal16RegExpLookaround9max_matchEv = comdat any

$_ZN2v88internal19RegExpBackReferenceD0Ev = comdat any

$_ZN2v88internal19RegExpBackReference9min_matchEv = comdat any

$_ZN2v88internal19RegExpBackReference9max_matchEv = comdat any

$_ZN2v88internal17RegExpDisjunctionD0Ev = comdat any

$_ZN2v88internal17RegExpDisjunction9min_matchEv = comdat any

$_ZN2v88internal17RegExpDisjunction9max_matchEv = comdat any

$_ZN2v88internal10RegExpTreeD2Ev = comdat any

$_ZN2v88internal17RegExpAlternativeD0Ev = comdat any

$_ZN2v88internal17RegExpAlternative9min_matchEv = comdat any

$_ZN2v88internal17RegExpAlternative9max_matchEv = comdat any

$_ZN2v88internal11RegExpEmptyD0Ev = comdat any

$_ZN2v88internal11RegExpEmpty9min_matchEv = comdat any

$_ZN2v88internal11RegExpEmpty9max_matchEv = comdat any

$_ZN2v88internal14RegExpUnparserD0Ev = comdat any

$_ZN2v88internal13RegExpVisitorD2Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [3 x i8] c"(|\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"(:\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"^\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"@^i\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"@$i\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"@^l\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"@$l\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c"@b\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c"@B\00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.15 = private unnamed_addr constant [3 x i8] c"(!\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"(# \00", align 1
@.str.17 = private unnamed_addr constant [3 x i8] c"- \00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"g \00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c"p \00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"n \00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"(^ \00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"(?: \00", align 1
@.str.23 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.24 = private unnamed_addr constant [3 x i8] c"->\00", align 1
@.str.25 = private unnamed_addr constant [3 x i8] c"<-\00", align 1
@.str.26 = private unnamed_addr constant [4 x i8] c" + \00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c" - \00", align 1
@.str.28 = private unnamed_addr constant [5 x i8] c"(<- \00", align 1
@_ZTVN2v88internal17RegExpDisjunctionE = hidden unnamed_addr constant { [37 x i8*] } { [37 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTreeD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::RegExpDisjunction"*)* @_ZN2v88internal17RegExpDisjunctionD0Ev to i8*), i8* bitcast (i8* (%"class.v8::internal::RegExpDisjunction"*, %"class.v8::internal::RegExpVisitor"*, i8*)* @_ZN2v88internal17RegExpDisjunction6AcceptEPNS0_13RegExpVisitorEPv to i8*), i8* bitcast (%"class.v8::internal::RegExpNode"* (%"class.v8::internal::RegExpDisjunction"*, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::RegExpNode"*)* @_ZN2v88internal17RegExpDisjunction6ToNodeEPNS0_14RegExpCompilerEPNS0_10RegExpNodeE to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13IsTextElementEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpDisjunction"*)* @_ZN2v88internal17RegExpDisjunction17IsAnchoredAtStartEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpDisjunction"*)* @_ZN2v88internal17RegExpDisjunction15IsAnchoredAtEndEv to i8*), i8* bitcast (i32 (%"class.v8::internal::RegExpDisjunction"*)* @_ZN2v88internal17RegExpDisjunction9min_matchEv to i8*), i8* bitcast (i32 (%"class.v8::internal::RegExpDisjunction"*)* @_ZN2v88internal17RegExpDisjunction9max_matchEv to i8*), i8* bitcast (i64 (%"class.v8::internal::RegExpDisjunction"*)* @_ZN2v88internal17RegExpDisjunction16CaptureRegistersEv to i8*), i8* bitcast (void (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpText"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal10RegExpTree12AppendToTextEPNS0_10RegExpTextEPNS0_4ZoneE to i8*), i8* bitcast (%"class.v8::internal::RegExpDisjunction"* (%"class.v8::internal::RegExpDisjunction"*)* @_ZN2v88internal17RegExpDisjunction13AsDisjunctionEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpDisjunction"*)* @_ZN2v88internal17RegExpDisjunction13IsDisjunctionEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAlternative"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13AsAlternativeEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13IsAlternativeEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAssertion"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree11AsAssertionEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree11IsAssertionEv to i8*), i8* bitcast (%"class.v8::internal::RegExpCharacterClass"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree16AsCharacterClassEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree16IsCharacterClassEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAtom"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6AsAtomEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6IsAtomEv to i8*), i8* bitcast (%"class.v8::internal::RegExpQuantifier"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12AsQuantifierEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12IsQuantifierEv to i8*), i8* bitcast (%"class.v8::internal::RegExpCapture"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree9AsCaptureEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree9IsCaptureEv to i8*), i8* bitcast (%"class.v8::internal::RegExpGroup"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7AsGroupEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7IsGroupEv to i8*), i8* bitcast (%"class.v8::internal::RegExpLookaround"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12AsLookaroundEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12IsLookaroundEv to i8*), i8* bitcast (%"class.v8::internal::RegExpBackReference"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree15AsBackReferenceEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree15IsBackReferenceEv to i8*), i8* bitcast (%"class.v8::internal::RegExpEmpty"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7AsEmptyEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7IsEmptyEv to i8*), i8* bitcast (%"class.v8::internal::RegExpText"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6AsTextEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6IsTextEv to i8*)] }, align 8
@_ZTVN2v88internal17RegExpAlternativeE = hidden unnamed_addr constant { [37 x i8*] } { [37 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTreeD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::RegExpAlternative"*)* @_ZN2v88internal17RegExpAlternativeD0Ev to i8*), i8* bitcast (i8* (%"class.v8::internal::RegExpAlternative"*, %"class.v8::internal::RegExpVisitor"*, i8*)* @_ZN2v88internal17RegExpAlternative6AcceptEPNS0_13RegExpVisitorEPv to i8*), i8* bitcast (%"class.v8::internal::RegExpNode"* (%"class.v8::internal::RegExpAlternative"*, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::RegExpNode"*)* @_ZN2v88internal17RegExpAlternative6ToNodeEPNS0_14RegExpCompilerEPNS0_10RegExpNodeE to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13IsTextElementEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpAlternative"*)* @_ZN2v88internal17RegExpAlternative17IsAnchoredAtStartEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpAlternative"*)* @_ZN2v88internal17RegExpAlternative15IsAnchoredAtEndEv to i8*), i8* bitcast (i32 (%"class.v8::internal::RegExpAlternative"*)* @_ZN2v88internal17RegExpAlternative9min_matchEv to i8*), i8* bitcast (i32 (%"class.v8::internal::RegExpAlternative"*)* @_ZN2v88internal17RegExpAlternative9max_matchEv to i8*), i8* bitcast (i64 (%"class.v8::internal::RegExpAlternative"*)* @_ZN2v88internal17RegExpAlternative16CaptureRegistersEv to i8*), i8* bitcast (void (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpText"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal10RegExpTree12AppendToTextEPNS0_10RegExpTextEPNS0_4ZoneE to i8*), i8* bitcast (%"class.v8::internal::RegExpDisjunction"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13AsDisjunctionEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13IsDisjunctionEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAlternative"* (%"class.v8::internal::RegExpAlternative"*)* @_ZN2v88internal17RegExpAlternative13AsAlternativeEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpAlternative"*)* @_ZN2v88internal17RegExpAlternative13IsAlternativeEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAssertion"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree11AsAssertionEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree11IsAssertionEv to i8*), i8* bitcast (%"class.v8::internal::RegExpCharacterClass"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree16AsCharacterClassEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree16IsCharacterClassEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAtom"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6AsAtomEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6IsAtomEv to i8*), i8* bitcast (%"class.v8::internal::RegExpQuantifier"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12AsQuantifierEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12IsQuantifierEv to i8*), i8* bitcast (%"class.v8::internal::RegExpCapture"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree9AsCaptureEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree9IsCaptureEv to i8*), i8* bitcast (%"class.v8::internal::RegExpGroup"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7AsGroupEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7IsGroupEv to i8*), i8* bitcast (%"class.v8::internal::RegExpLookaround"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12AsLookaroundEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12IsLookaroundEv to i8*), i8* bitcast (%"class.v8::internal::RegExpBackReference"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree15AsBackReferenceEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree15IsBackReferenceEv to i8*), i8* bitcast (%"class.v8::internal::RegExpEmpty"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7AsEmptyEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7IsEmptyEv to i8*), i8* bitcast (%"class.v8::internal::RegExpText"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6AsTextEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6IsTextEv to i8*)] }, align 8
@_ZTVN2v88internal15RegExpAssertionE = hidden unnamed_addr constant { [37 x i8*] } { [37 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTreeD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::RegExpAssertion"*)* @_ZN2v88internal15RegExpAssertionD0Ev to i8*), i8* bitcast (i8* (%"class.v8::internal::RegExpAssertion"*, %"class.v8::internal::RegExpVisitor"*, i8*)* @_ZN2v88internal15RegExpAssertion6AcceptEPNS0_13RegExpVisitorEPv to i8*), i8* bitcast (%"class.v8::internal::RegExpNode"* (%"class.v8::internal::RegExpAssertion"*, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::RegExpNode"*)* @_ZN2v88internal15RegExpAssertion6ToNodeEPNS0_14RegExpCompilerEPNS0_10RegExpNodeE to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13IsTextElementEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpAssertion"*)* @_ZN2v88internal15RegExpAssertion17IsAnchoredAtStartEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpAssertion"*)* @_ZN2v88internal15RegExpAssertion15IsAnchoredAtEndEv to i8*), i8* bitcast (i32 (%"class.v8::internal::RegExpAssertion"*)* @_ZN2v88internal15RegExpAssertion9min_matchEv to i8*), i8* bitcast (i32 (%"class.v8::internal::RegExpAssertion"*)* @_ZN2v88internal15RegExpAssertion9max_matchEv to i8*), i8* bitcast (i64 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree16CaptureRegistersEv to i8*), i8* bitcast (void (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpText"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal10RegExpTree12AppendToTextEPNS0_10RegExpTextEPNS0_4ZoneE to i8*), i8* bitcast (%"class.v8::internal::RegExpDisjunction"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13AsDisjunctionEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13IsDisjunctionEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAlternative"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13AsAlternativeEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13IsAlternativeEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAssertion"* (%"class.v8::internal::RegExpAssertion"*)* @_ZN2v88internal15RegExpAssertion11AsAssertionEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpAssertion"*)* @_ZN2v88internal15RegExpAssertion11IsAssertionEv to i8*), i8* bitcast (%"class.v8::internal::RegExpCharacterClass"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree16AsCharacterClassEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree16IsCharacterClassEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAtom"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6AsAtomEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6IsAtomEv to i8*), i8* bitcast (%"class.v8::internal::RegExpQuantifier"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12AsQuantifierEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12IsQuantifierEv to i8*), i8* bitcast (%"class.v8::internal::RegExpCapture"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree9AsCaptureEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree9IsCaptureEv to i8*), i8* bitcast (%"class.v8::internal::RegExpGroup"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7AsGroupEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7IsGroupEv to i8*), i8* bitcast (%"class.v8::internal::RegExpLookaround"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12AsLookaroundEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12IsLookaroundEv to i8*), i8* bitcast (%"class.v8::internal::RegExpBackReference"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree15AsBackReferenceEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree15IsBackReferenceEv to i8*), i8* bitcast (%"class.v8::internal::RegExpEmpty"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7AsEmptyEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7IsEmptyEv to i8*), i8* bitcast (%"class.v8::internal::RegExpText"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6AsTextEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6IsTextEv to i8*)] }, align 8
@_ZTVN2v88internal20RegExpCharacterClassE = hidden unnamed_addr constant { [37 x i8*] } { [37 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTreeD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::RegExpCharacterClass"*)* @_ZN2v88internal20RegExpCharacterClassD0Ev to i8*), i8* bitcast (i8* (%"class.v8::internal::RegExpCharacterClass"*, %"class.v8::internal::RegExpVisitor"*, i8*)* @_ZN2v88internal20RegExpCharacterClass6AcceptEPNS0_13RegExpVisitorEPv to i8*), i8* bitcast (%"class.v8::internal::RegExpNode"* (%"class.v8::internal::RegExpCharacterClass"*, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::RegExpNode"*)* @_ZN2v88internal20RegExpCharacterClass6ToNodeEPNS0_14RegExpCompilerEPNS0_10RegExpNodeE to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpCharacterClass"*)* @_ZN2v88internal20RegExpCharacterClass13IsTextElementEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree17IsAnchoredAtStartEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree15IsAnchoredAtEndEv to i8*), i8* bitcast (i32 (%"class.v8::internal::RegExpCharacterClass"*)* @_ZN2v88internal20RegExpCharacterClass9min_matchEv to i8*), i8* bitcast (i32 (%"class.v8::internal::RegExpCharacterClass"*)* @_ZN2v88internal20RegExpCharacterClass9max_matchEv to i8*), i8* bitcast (i64 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree16CaptureRegistersEv to i8*), i8* bitcast (void (%"class.v8::internal::RegExpCharacterClass"*, %"class.v8::internal::RegExpText"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal20RegExpCharacterClass12AppendToTextEPNS0_10RegExpTextEPNS0_4ZoneE to i8*), i8* bitcast (%"class.v8::internal::RegExpDisjunction"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13AsDisjunctionEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13IsDisjunctionEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAlternative"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13AsAlternativeEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13IsAlternativeEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAssertion"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree11AsAssertionEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree11IsAssertionEv to i8*), i8* bitcast (%"class.v8::internal::RegExpCharacterClass"* (%"class.v8::internal::RegExpCharacterClass"*)* @_ZN2v88internal20RegExpCharacterClass16AsCharacterClassEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpCharacterClass"*)* @_ZN2v88internal20RegExpCharacterClass16IsCharacterClassEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAtom"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6AsAtomEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6IsAtomEv to i8*), i8* bitcast (%"class.v8::internal::RegExpQuantifier"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12AsQuantifierEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12IsQuantifierEv to i8*), i8* bitcast (%"class.v8::internal::RegExpCapture"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree9AsCaptureEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree9IsCaptureEv to i8*), i8* bitcast (%"class.v8::internal::RegExpGroup"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7AsGroupEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7IsGroupEv to i8*), i8* bitcast (%"class.v8::internal::RegExpLookaround"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12AsLookaroundEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12IsLookaroundEv to i8*), i8* bitcast (%"class.v8::internal::RegExpBackReference"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree15AsBackReferenceEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree15IsBackReferenceEv to i8*), i8* bitcast (%"class.v8::internal::RegExpEmpty"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7AsEmptyEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7IsEmptyEv to i8*), i8* bitcast (%"class.v8::internal::RegExpText"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6AsTextEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6IsTextEv to i8*)] }, align 8
@_ZTVN2v88internal10RegExpAtomE = hidden unnamed_addr constant { [37 x i8*] } { [37 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTreeD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::RegExpAtom"*)* @_ZN2v88internal10RegExpAtomD0Ev to i8*), i8* bitcast (i8* (%"class.v8::internal::RegExpAtom"*, %"class.v8::internal::RegExpVisitor"*, i8*)* @_ZN2v88internal10RegExpAtom6AcceptEPNS0_13RegExpVisitorEPv to i8*), i8* bitcast (%"class.v8::internal::RegExpNode"* (%"class.v8::internal::RegExpAtom"*, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::RegExpNode"*)* @_ZN2v88internal10RegExpAtom6ToNodeEPNS0_14RegExpCompilerEPNS0_10RegExpNodeE to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpAtom"*)* @_ZN2v88internal10RegExpAtom13IsTextElementEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree17IsAnchoredAtStartEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree15IsAnchoredAtEndEv to i8*), i8* bitcast (i32 (%"class.v8::internal::RegExpAtom"*)* @_ZN2v88internal10RegExpAtom9min_matchEv to i8*), i8* bitcast (i32 (%"class.v8::internal::RegExpAtom"*)* @_ZN2v88internal10RegExpAtom9max_matchEv to i8*), i8* bitcast (i64 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree16CaptureRegistersEv to i8*), i8* bitcast (void (%"class.v8::internal::RegExpAtom"*, %"class.v8::internal::RegExpText"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal10RegExpAtom12AppendToTextEPNS0_10RegExpTextEPNS0_4ZoneE to i8*), i8* bitcast (%"class.v8::internal::RegExpDisjunction"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13AsDisjunctionEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13IsDisjunctionEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAlternative"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13AsAlternativeEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13IsAlternativeEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAssertion"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree11AsAssertionEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree11IsAssertionEv to i8*), i8* bitcast (%"class.v8::internal::RegExpCharacterClass"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree16AsCharacterClassEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree16IsCharacterClassEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAtom"* (%"class.v8::internal::RegExpAtom"*)* @_ZN2v88internal10RegExpAtom6AsAtomEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpAtom"*)* @_ZN2v88internal10RegExpAtom6IsAtomEv to i8*), i8* bitcast (%"class.v8::internal::RegExpQuantifier"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12AsQuantifierEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12IsQuantifierEv to i8*), i8* bitcast (%"class.v8::internal::RegExpCapture"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree9AsCaptureEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree9IsCaptureEv to i8*), i8* bitcast (%"class.v8::internal::RegExpGroup"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7AsGroupEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7IsGroupEv to i8*), i8* bitcast (%"class.v8::internal::RegExpLookaround"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12AsLookaroundEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12IsLookaroundEv to i8*), i8* bitcast (%"class.v8::internal::RegExpBackReference"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree15AsBackReferenceEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree15IsBackReferenceEv to i8*), i8* bitcast (%"class.v8::internal::RegExpEmpty"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7AsEmptyEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7IsEmptyEv to i8*), i8* bitcast (%"class.v8::internal::RegExpText"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6AsTextEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6IsTextEv to i8*)] }, align 8
@_ZTVN2v88internal10RegExpTextE = hidden unnamed_addr constant { [37 x i8*] } { [37 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTreeD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::RegExpText"*)* @_ZN2v88internal10RegExpTextD0Ev to i8*), i8* bitcast (i8* (%"class.v8::internal::RegExpText"*, %"class.v8::internal::RegExpVisitor"*, i8*)* @_ZN2v88internal10RegExpText6AcceptEPNS0_13RegExpVisitorEPv to i8*), i8* bitcast (%"class.v8::internal::RegExpNode"* (%"class.v8::internal::RegExpText"*, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::RegExpNode"*)* @_ZN2v88internal10RegExpText6ToNodeEPNS0_14RegExpCompilerEPNS0_10RegExpNodeE to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpText"*)* @_ZN2v88internal10RegExpText13IsTextElementEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree17IsAnchoredAtStartEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree15IsAnchoredAtEndEv to i8*), i8* bitcast (i32 (%"class.v8::internal::RegExpText"*)* @_ZN2v88internal10RegExpText9min_matchEv to i8*), i8* bitcast (i32 (%"class.v8::internal::RegExpText"*)* @_ZN2v88internal10RegExpText9max_matchEv to i8*), i8* bitcast (i64 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree16CaptureRegistersEv to i8*), i8* bitcast (void (%"class.v8::internal::RegExpText"*, %"class.v8::internal::RegExpText"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal10RegExpText12AppendToTextEPS1_PNS0_4ZoneE to i8*), i8* bitcast (%"class.v8::internal::RegExpDisjunction"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13AsDisjunctionEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13IsDisjunctionEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAlternative"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13AsAlternativeEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13IsAlternativeEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAssertion"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree11AsAssertionEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree11IsAssertionEv to i8*), i8* bitcast (%"class.v8::internal::RegExpCharacterClass"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree16AsCharacterClassEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree16IsCharacterClassEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAtom"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6AsAtomEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6IsAtomEv to i8*), i8* bitcast (%"class.v8::internal::RegExpQuantifier"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12AsQuantifierEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12IsQuantifierEv to i8*), i8* bitcast (%"class.v8::internal::RegExpCapture"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree9AsCaptureEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree9IsCaptureEv to i8*), i8* bitcast (%"class.v8::internal::RegExpGroup"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7AsGroupEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7IsGroupEv to i8*), i8* bitcast (%"class.v8::internal::RegExpLookaround"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12AsLookaroundEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12IsLookaroundEv to i8*), i8* bitcast (%"class.v8::internal::RegExpBackReference"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree15AsBackReferenceEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree15IsBackReferenceEv to i8*), i8* bitcast (%"class.v8::internal::RegExpEmpty"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7AsEmptyEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7IsEmptyEv to i8*), i8* bitcast (%"class.v8::internal::RegExpText"* (%"class.v8::internal::RegExpText"*)* @_ZN2v88internal10RegExpText6AsTextEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpText"*)* @_ZN2v88internal10RegExpText6IsTextEv to i8*)] }, align 8
@_ZTVN2v88internal16RegExpQuantifierE = hidden unnamed_addr constant { [37 x i8*] } { [37 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTreeD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::RegExpQuantifier"*)* @_ZN2v88internal16RegExpQuantifierD0Ev to i8*), i8* bitcast (i8* (%"class.v8::internal::RegExpQuantifier"*, %"class.v8::internal::RegExpVisitor"*, i8*)* @_ZN2v88internal16RegExpQuantifier6AcceptEPNS0_13RegExpVisitorEPv to i8*), i8* bitcast (%"class.v8::internal::RegExpNode"* (%"class.v8::internal::RegExpQuantifier"*, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::RegExpNode"*)* @_ZN2v88internal16RegExpQuantifier6ToNodeEPNS0_14RegExpCompilerEPNS0_10RegExpNodeE to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13IsTextElementEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree17IsAnchoredAtStartEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree15IsAnchoredAtEndEv to i8*), i8* bitcast (i32 (%"class.v8::internal::RegExpQuantifier"*)* @_ZN2v88internal16RegExpQuantifier9min_matchEv to i8*), i8* bitcast (i32 (%"class.v8::internal::RegExpQuantifier"*)* @_ZN2v88internal16RegExpQuantifier9max_matchEv to i8*), i8* bitcast (i64 (%"class.v8::internal::RegExpQuantifier"*)* @_ZN2v88internal16RegExpQuantifier16CaptureRegistersEv to i8*), i8* bitcast (void (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpText"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal10RegExpTree12AppendToTextEPNS0_10RegExpTextEPNS0_4ZoneE to i8*), i8* bitcast (%"class.v8::internal::RegExpDisjunction"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13AsDisjunctionEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13IsDisjunctionEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAlternative"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13AsAlternativeEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13IsAlternativeEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAssertion"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree11AsAssertionEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree11IsAssertionEv to i8*), i8* bitcast (%"class.v8::internal::RegExpCharacterClass"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree16AsCharacterClassEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree16IsCharacterClassEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAtom"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6AsAtomEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6IsAtomEv to i8*), i8* bitcast (%"class.v8::internal::RegExpQuantifier"* (%"class.v8::internal::RegExpQuantifier"*)* @_ZN2v88internal16RegExpQuantifier12AsQuantifierEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpQuantifier"*)* @_ZN2v88internal16RegExpQuantifier12IsQuantifierEv to i8*), i8* bitcast (%"class.v8::internal::RegExpCapture"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree9AsCaptureEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree9IsCaptureEv to i8*), i8* bitcast (%"class.v8::internal::RegExpGroup"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7AsGroupEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7IsGroupEv to i8*), i8* bitcast (%"class.v8::internal::RegExpLookaround"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12AsLookaroundEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12IsLookaroundEv to i8*), i8* bitcast (%"class.v8::internal::RegExpBackReference"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree15AsBackReferenceEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree15IsBackReferenceEv to i8*), i8* bitcast (%"class.v8::internal::RegExpEmpty"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7AsEmptyEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7IsEmptyEv to i8*), i8* bitcast (%"class.v8::internal::RegExpText"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6AsTextEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6IsTextEv to i8*)] }, align 8
@_ZTVN2v88internal13RegExpCaptureE = hidden unnamed_addr constant { [37 x i8*] } { [37 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTreeD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::RegExpCapture"*)* @_ZN2v88internal13RegExpCaptureD0Ev to i8*), i8* bitcast (i8* (%"class.v8::internal::RegExpCapture"*, %"class.v8::internal::RegExpVisitor"*, i8*)* @_ZN2v88internal13RegExpCapture6AcceptEPNS0_13RegExpVisitorEPv to i8*), i8* bitcast (%"class.v8::internal::RegExpNode"* (%"class.v8::internal::RegExpCapture"*, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::RegExpNode"*)* @_ZN2v88internal13RegExpCapture6ToNodeEPNS0_14RegExpCompilerEPNS0_10RegExpNodeE to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13IsTextElementEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpCapture"*)* @_ZN2v88internal13RegExpCapture17IsAnchoredAtStartEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpCapture"*)* @_ZN2v88internal13RegExpCapture15IsAnchoredAtEndEv to i8*), i8* bitcast (i32 (%"class.v8::internal::RegExpCapture"*)* @_ZN2v88internal13RegExpCapture9min_matchEv to i8*), i8* bitcast (i32 (%"class.v8::internal::RegExpCapture"*)* @_ZN2v88internal13RegExpCapture9max_matchEv to i8*), i8* bitcast (i64 (%"class.v8::internal::RegExpCapture"*)* @_ZN2v88internal13RegExpCapture16CaptureRegistersEv to i8*), i8* bitcast (void (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpText"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal10RegExpTree12AppendToTextEPNS0_10RegExpTextEPNS0_4ZoneE to i8*), i8* bitcast (%"class.v8::internal::RegExpDisjunction"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13AsDisjunctionEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13IsDisjunctionEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAlternative"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13AsAlternativeEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13IsAlternativeEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAssertion"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree11AsAssertionEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree11IsAssertionEv to i8*), i8* bitcast (%"class.v8::internal::RegExpCharacterClass"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree16AsCharacterClassEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree16IsCharacterClassEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAtom"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6AsAtomEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6IsAtomEv to i8*), i8* bitcast (%"class.v8::internal::RegExpQuantifier"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12AsQuantifierEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12IsQuantifierEv to i8*), i8* bitcast (%"class.v8::internal::RegExpCapture"* (%"class.v8::internal::RegExpCapture"*)* @_ZN2v88internal13RegExpCapture9AsCaptureEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpCapture"*)* @_ZN2v88internal13RegExpCapture9IsCaptureEv to i8*), i8* bitcast (%"class.v8::internal::RegExpGroup"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7AsGroupEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7IsGroupEv to i8*), i8* bitcast (%"class.v8::internal::RegExpLookaround"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12AsLookaroundEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12IsLookaroundEv to i8*), i8* bitcast (%"class.v8::internal::RegExpBackReference"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree15AsBackReferenceEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree15IsBackReferenceEv to i8*), i8* bitcast (%"class.v8::internal::RegExpEmpty"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7AsEmptyEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7IsEmptyEv to i8*), i8* bitcast (%"class.v8::internal::RegExpText"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6AsTextEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6IsTextEv to i8*)] }, align 8
@_ZTVN2v88internal11RegExpGroupE = hidden unnamed_addr constant { [37 x i8*] } { [37 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTreeD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::RegExpGroup"*)* @_ZN2v88internal11RegExpGroupD0Ev to i8*), i8* bitcast (i8* (%"class.v8::internal::RegExpGroup"*, %"class.v8::internal::RegExpVisitor"*, i8*)* @_ZN2v88internal11RegExpGroup6AcceptEPNS0_13RegExpVisitorEPv to i8*), i8* bitcast (%"class.v8::internal::RegExpNode"* (%"class.v8::internal::RegExpGroup"*, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::RegExpNode"*)* @_ZN2v88internal11RegExpGroup6ToNodeEPNS0_14RegExpCompilerEPNS0_10RegExpNodeE to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13IsTextElementEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpGroup"*)* @_ZN2v88internal11RegExpGroup17IsAnchoredAtStartEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpGroup"*)* @_ZN2v88internal11RegExpGroup15IsAnchoredAtEndEv to i8*), i8* bitcast (i32 (%"class.v8::internal::RegExpGroup"*)* @_ZN2v88internal11RegExpGroup9min_matchEv to i8*), i8* bitcast (i32 (%"class.v8::internal::RegExpGroup"*)* @_ZN2v88internal11RegExpGroup9max_matchEv to i8*), i8* bitcast (i64 (%"class.v8::internal::RegExpGroup"*)* @_ZN2v88internal11RegExpGroup16CaptureRegistersEv to i8*), i8* bitcast (void (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpText"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal10RegExpTree12AppendToTextEPNS0_10RegExpTextEPNS0_4ZoneE to i8*), i8* bitcast (%"class.v8::internal::RegExpDisjunction"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13AsDisjunctionEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13IsDisjunctionEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAlternative"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13AsAlternativeEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13IsAlternativeEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAssertion"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree11AsAssertionEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree11IsAssertionEv to i8*), i8* bitcast (%"class.v8::internal::RegExpCharacterClass"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree16AsCharacterClassEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree16IsCharacterClassEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAtom"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6AsAtomEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6IsAtomEv to i8*), i8* bitcast (%"class.v8::internal::RegExpQuantifier"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12AsQuantifierEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12IsQuantifierEv to i8*), i8* bitcast (%"class.v8::internal::RegExpCapture"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree9AsCaptureEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree9IsCaptureEv to i8*), i8* bitcast (%"class.v8::internal::RegExpGroup"* (%"class.v8::internal::RegExpGroup"*)* @_ZN2v88internal11RegExpGroup7AsGroupEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpGroup"*)* @_ZN2v88internal11RegExpGroup7IsGroupEv to i8*), i8* bitcast (%"class.v8::internal::RegExpLookaround"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12AsLookaroundEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12IsLookaroundEv to i8*), i8* bitcast (%"class.v8::internal::RegExpBackReference"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree15AsBackReferenceEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree15IsBackReferenceEv to i8*), i8* bitcast (%"class.v8::internal::RegExpEmpty"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7AsEmptyEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7IsEmptyEv to i8*), i8* bitcast (%"class.v8::internal::RegExpText"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6AsTextEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6IsTextEv to i8*)] }, align 8
@_ZTVN2v88internal16RegExpLookaroundE = hidden unnamed_addr constant { [37 x i8*] } { [37 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTreeD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::RegExpLookaround"*)* @_ZN2v88internal16RegExpLookaroundD0Ev to i8*), i8* bitcast (i8* (%"class.v8::internal::RegExpLookaround"*, %"class.v8::internal::RegExpVisitor"*, i8*)* @_ZN2v88internal16RegExpLookaround6AcceptEPNS0_13RegExpVisitorEPv to i8*), i8* bitcast (%"class.v8::internal::RegExpNode"* (%"class.v8::internal::RegExpLookaround"*, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::RegExpNode"*)* @_ZN2v88internal16RegExpLookaround6ToNodeEPNS0_14RegExpCompilerEPNS0_10RegExpNodeE to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13IsTextElementEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpLookaround"*)* @_ZN2v88internal16RegExpLookaround17IsAnchoredAtStartEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree15IsAnchoredAtEndEv to i8*), i8* bitcast (i32 (%"class.v8::internal::RegExpLookaround"*)* @_ZN2v88internal16RegExpLookaround9min_matchEv to i8*), i8* bitcast (i32 (%"class.v8::internal::RegExpLookaround"*)* @_ZN2v88internal16RegExpLookaround9max_matchEv to i8*), i8* bitcast (i64 (%"class.v8::internal::RegExpLookaround"*)* @_ZN2v88internal16RegExpLookaround16CaptureRegistersEv to i8*), i8* bitcast (void (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpText"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal10RegExpTree12AppendToTextEPNS0_10RegExpTextEPNS0_4ZoneE to i8*), i8* bitcast (%"class.v8::internal::RegExpDisjunction"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13AsDisjunctionEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13IsDisjunctionEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAlternative"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13AsAlternativeEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13IsAlternativeEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAssertion"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree11AsAssertionEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree11IsAssertionEv to i8*), i8* bitcast (%"class.v8::internal::RegExpCharacterClass"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree16AsCharacterClassEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree16IsCharacterClassEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAtom"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6AsAtomEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6IsAtomEv to i8*), i8* bitcast (%"class.v8::internal::RegExpQuantifier"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12AsQuantifierEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12IsQuantifierEv to i8*), i8* bitcast (%"class.v8::internal::RegExpCapture"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree9AsCaptureEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree9IsCaptureEv to i8*), i8* bitcast (%"class.v8::internal::RegExpGroup"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7AsGroupEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7IsGroupEv to i8*), i8* bitcast (%"class.v8::internal::RegExpLookaround"* (%"class.v8::internal::RegExpLookaround"*)* @_ZN2v88internal16RegExpLookaround12AsLookaroundEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpLookaround"*)* @_ZN2v88internal16RegExpLookaround12IsLookaroundEv to i8*), i8* bitcast (%"class.v8::internal::RegExpBackReference"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree15AsBackReferenceEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree15IsBackReferenceEv to i8*), i8* bitcast (%"class.v8::internal::RegExpEmpty"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7AsEmptyEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7IsEmptyEv to i8*), i8* bitcast (%"class.v8::internal::RegExpText"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6AsTextEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6IsTextEv to i8*)] }, align 8
@_ZTVN2v88internal19RegExpBackReferenceE = hidden unnamed_addr constant { [37 x i8*] } { [37 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTreeD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBackReference"*)* @_ZN2v88internal19RegExpBackReferenceD0Ev to i8*), i8* bitcast (i8* (%"class.v8::internal::RegExpBackReference"*, %"class.v8::internal::RegExpVisitor"*, i8*)* @_ZN2v88internal19RegExpBackReference6AcceptEPNS0_13RegExpVisitorEPv to i8*), i8* bitcast (%"class.v8::internal::RegExpNode"* (%"class.v8::internal::RegExpBackReference"*, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::RegExpNode"*)* @_ZN2v88internal19RegExpBackReference6ToNodeEPNS0_14RegExpCompilerEPNS0_10RegExpNodeE to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13IsTextElementEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree17IsAnchoredAtStartEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree15IsAnchoredAtEndEv to i8*), i8* bitcast (i32 (%"class.v8::internal::RegExpBackReference"*)* @_ZN2v88internal19RegExpBackReference9min_matchEv to i8*), i8* bitcast (i32 (%"class.v8::internal::RegExpBackReference"*)* @_ZN2v88internal19RegExpBackReference9max_matchEv to i8*), i8* bitcast (i64 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree16CaptureRegistersEv to i8*), i8* bitcast (void (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpText"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal10RegExpTree12AppendToTextEPNS0_10RegExpTextEPNS0_4ZoneE to i8*), i8* bitcast (%"class.v8::internal::RegExpDisjunction"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13AsDisjunctionEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13IsDisjunctionEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAlternative"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13AsAlternativeEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13IsAlternativeEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAssertion"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree11AsAssertionEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree11IsAssertionEv to i8*), i8* bitcast (%"class.v8::internal::RegExpCharacterClass"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree16AsCharacterClassEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree16IsCharacterClassEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAtom"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6AsAtomEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6IsAtomEv to i8*), i8* bitcast (%"class.v8::internal::RegExpQuantifier"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12AsQuantifierEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12IsQuantifierEv to i8*), i8* bitcast (%"class.v8::internal::RegExpCapture"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree9AsCaptureEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree9IsCaptureEv to i8*), i8* bitcast (%"class.v8::internal::RegExpGroup"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7AsGroupEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7IsGroupEv to i8*), i8* bitcast (%"class.v8::internal::RegExpLookaround"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12AsLookaroundEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12IsLookaroundEv to i8*), i8* bitcast (%"class.v8::internal::RegExpBackReference"* (%"class.v8::internal::RegExpBackReference"*)* @_ZN2v88internal19RegExpBackReference15AsBackReferenceEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpBackReference"*)* @_ZN2v88internal19RegExpBackReference15IsBackReferenceEv to i8*), i8* bitcast (%"class.v8::internal::RegExpEmpty"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7AsEmptyEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7IsEmptyEv to i8*), i8* bitcast (%"class.v8::internal::RegExpText"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6AsTextEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6IsTextEv to i8*)] }, align 8
@_ZTVN2v88internal11RegExpEmptyE = hidden unnamed_addr constant { [37 x i8*] } { [37 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTreeD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::RegExpEmpty"*)* @_ZN2v88internal11RegExpEmptyD0Ev to i8*), i8* bitcast (i8* (%"class.v8::internal::RegExpEmpty"*, %"class.v8::internal::RegExpVisitor"*, i8*)* @_ZN2v88internal11RegExpEmpty6AcceptEPNS0_13RegExpVisitorEPv to i8*), i8* bitcast (%"class.v8::internal::RegExpNode"* (%"class.v8::internal::RegExpEmpty"*, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::RegExpNode"*)* @_ZN2v88internal11RegExpEmpty6ToNodeEPNS0_14RegExpCompilerEPNS0_10RegExpNodeE to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13IsTextElementEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree17IsAnchoredAtStartEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree15IsAnchoredAtEndEv to i8*), i8* bitcast (i32 (%"class.v8::internal::RegExpEmpty"*)* @_ZN2v88internal11RegExpEmpty9min_matchEv to i8*), i8* bitcast (i32 (%"class.v8::internal::RegExpEmpty"*)* @_ZN2v88internal11RegExpEmpty9max_matchEv to i8*), i8* bitcast (i64 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree16CaptureRegistersEv to i8*), i8* bitcast (void (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpText"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal10RegExpTree12AppendToTextEPNS0_10RegExpTextEPNS0_4ZoneE to i8*), i8* bitcast (%"class.v8::internal::RegExpDisjunction"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13AsDisjunctionEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13IsDisjunctionEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAlternative"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13AsAlternativeEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree13IsAlternativeEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAssertion"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree11AsAssertionEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree11IsAssertionEv to i8*), i8* bitcast (%"class.v8::internal::RegExpCharacterClass"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree16AsCharacterClassEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree16IsCharacterClassEv to i8*), i8* bitcast (%"class.v8::internal::RegExpAtom"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6AsAtomEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6IsAtomEv to i8*), i8* bitcast (%"class.v8::internal::RegExpQuantifier"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12AsQuantifierEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12IsQuantifierEv to i8*), i8* bitcast (%"class.v8::internal::RegExpCapture"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree9AsCaptureEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree9IsCaptureEv to i8*), i8* bitcast (%"class.v8::internal::RegExpGroup"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7AsGroupEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree7IsGroupEv to i8*), i8* bitcast (%"class.v8::internal::RegExpLookaround"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12AsLookaroundEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree12IsLookaroundEv to i8*), i8* bitcast (%"class.v8::internal::RegExpBackReference"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree15AsBackReferenceEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree15IsBackReferenceEv to i8*), i8* bitcast (%"class.v8::internal::RegExpEmpty"* (%"class.v8::internal::RegExpEmpty"*)* @_ZN2v88internal11RegExpEmpty7AsEmptyEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpEmpty"*)* @_ZN2v88internal11RegExpEmpty7IsEmptyEv to i8*), i8* bitcast (%"class.v8::internal::RegExpText"* (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6AsTextEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpTree"*)* @_ZN2v88internal10RegExpTree6IsTextEv to i8*)] }, align 8
@_ZTVN2v88internal14RegExpUnparserE = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::RegExpVisitor"*)* @_ZN2v88internal13RegExpVisitorD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::RegExpUnparser"*)* @_ZN2v88internal14RegExpUnparserD0Ev to i8*), i8* bitcast (i8* (%"class.v8::internal::RegExpUnparser"*, %"class.v8::internal::RegExpDisjunction"*, i8*)* @_ZN2v88internal14RegExpUnparser16VisitDisjunctionEPNS0_17RegExpDisjunctionEPv to i8*), i8* bitcast (i8* (%"class.v8::internal::RegExpUnparser"*, %"class.v8::internal::RegExpAlternative"*, i8*)* @_ZN2v88internal14RegExpUnparser16VisitAlternativeEPNS0_17RegExpAlternativeEPv to i8*), i8* bitcast (i8* (%"class.v8::internal::RegExpUnparser"*, %"class.v8::internal::RegExpAssertion"*, i8*)* @_ZN2v88internal14RegExpUnparser14VisitAssertionEPNS0_15RegExpAssertionEPv to i8*), i8* bitcast (i8* (%"class.v8::internal::RegExpUnparser"*, %"class.v8::internal::RegExpCharacterClass"*, i8*)* @_ZN2v88internal14RegExpUnparser19VisitCharacterClassEPNS0_20RegExpCharacterClassEPv to i8*), i8* bitcast (i8* (%"class.v8::internal::RegExpUnparser"*, %"class.v8::internal::RegExpAtom"*, i8*)* @_ZN2v88internal14RegExpUnparser9VisitAtomEPNS0_10RegExpAtomEPv to i8*), i8* bitcast (i8* (%"class.v8::internal::RegExpUnparser"*, %"class.v8::internal::RegExpQuantifier"*, i8*)* @_ZN2v88internal14RegExpUnparser15VisitQuantifierEPNS0_16RegExpQuantifierEPv to i8*), i8* bitcast (i8* (%"class.v8::internal::RegExpUnparser"*, %"class.v8::internal::RegExpCapture"*, i8*)* @_ZN2v88internal14RegExpUnparser12VisitCaptureEPNS0_13RegExpCaptureEPv to i8*), i8* bitcast (i8* (%"class.v8::internal::RegExpUnparser"*, %"class.v8::internal::RegExpGroup"*, i8*)* @_ZN2v88internal14RegExpUnparser10VisitGroupEPNS0_11RegExpGroupEPv to i8*), i8* bitcast (i8* (%"class.v8::internal::RegExpUnparser"*, %"class.v8::internal::RegExpLookaround"*, i8*)* @_ZN2v88internal14RegExpUnparser15VisitLookaroundEPNS0_16RegExpLookaroundEPv to i8*), i8* bitcast (i8* (%"class.v8::internal::RegExpUnparser"*, %"class.v8::internal::RegExpBackReference"*, i8*)* @_ZN2v88internal14RegExpUnparser18VisitBackReferenceEPNS0_19RegExpBackReferenceEPv to i8*), i8* bitcast (i8* (%"class.v8::internal::RegExpUnparser"*, %"class.v8::internal::RegExpEmpty"*, i8*)* @_ZN2v88internal14RegExpUnparser10VisitEmptyEPNS0_11RegExpEmptyEPv to i8*), i8* bitcast (i8* (%"class.v8::internal::RegExpUnparser"*, %"class.v8::internal::RegExpText"*, i8*)* @_ZN2v88internal14RegExpUnparser9VisitTextEPNS0_10RegExpTextEPv to i8*)] }, align 8
@.str.29 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN2v88internal17RegExpDisjunctionC1EPNS0_8ZoneListIPNS0_10RegExpTreeEEE = hidden unnamed_addr alias void (%"class.v8::internal::RegExpDisjunction"*, %"class.v8::internal::ZoneList"*), void (%"class.v8::internal::RegExpDisjunction"*, %"class.v8::internal::ZoneList"*)* @_ZN2v88internal17RegExpDisjunctionC2EPNS0_8ZoneListIPNS0_10RegExpTreeEEE
@_ZN2v88internal17RegExpAlternativeC1EPNS0_8ZoneListIPNS0_10RegExpTreeEEE = hidden unnamed_addr alias void (%"class.v8::internal::RegExpAlternative"*, %"class.v8::internal::ZoneList"*), void (%"class.v8::internal::RegExpAlternative"*, %"class.v8::internal::ZoneList"*)* @_ZN2v88internal17RegExpAlternativeC2EPNS0_8ZoneListIPNS0_10RegExpTreeEEE

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal17RegExpDisjunction6AcceptEPNS0_13RegExpVisitorEPv(%"class.v8::internal::RegExpDisjunction"*, %"class.v8::internal::RegExpVisitor"*, i8*) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.v8::internal::RegExpVisitor"* %1 to i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpDisjunction"*, i8*)***
  %5 = load i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpDisjunction"*, i8*)**, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpDisjunction"*, i8*)*** %4, align 8
  %6 = getelementptr inbounds i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpDisjunction"*, i8*)*, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpDisjunction"*, i8*)** %5, i64 2
  %7 = load i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpDisjunction"*, i8*)*, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpDisjunction"*, i8*)** %6, align 8
  %8 = tail call i8* %7(%"class.v8::internal::RegExpVisitor"* %1, %"class.v8::internal::RegExpDisjunction"* %0, i8* %2) #10
  ret i8* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal17RegExpAlternative6AcceptEPNS0_13RegExpVisitorEPv(%"class.v8::internal::RegExpAlternative"*, %"class.v8::internal::RegExpVisitor"*, i8*) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.v8::internal::RegExpVisitor"* %1 to i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpAlternative"*, i8*)***
  %5 = load i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpAlternative"*, i8*)**, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpAlternative"*, i8*)*** %4, align 8
  %6 = getelementptr inbounds i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpAlternative"*, i8*)*, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpAlternative"*, i8*)** %5, i64 3
  %7 = load i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpAlternative"*, i8*)*, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpAlternative"*, i8*)** %6, align 8
  %8 = tail call i8* %7(%"class.v8::internal::RegExpVisitor"* %1, %"class.v8::internal::RegExpAlternative"* %0, i8* %2) #10
  ret i8* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal15RegExpAssertion6AcceptEPNS0_13RegExpVisitorEPv(%"class.v8::internal::RegExpAssertion"*, %"class.v8::internal::RegExpVisitor"*, i8*) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.v8::internal::RegExpVisitor"* %1 to i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpAssertion"*, i8*)***
  %5 = load i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpAssertion"*, i8*)**, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpAssertion"*, i8*)*** %4, align 8
  %6 = getelementptr inbounds i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpAssertion"*, i8*)*, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpAssertion"*, i8*)** %5, i64 4
  %7 = load i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpAssertion"*, i8*)*, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpAssertion"*, i8*)** %6, align 8
  %8 = tail call i8* %7(%"class.v8::internal::RegExpVisitor"* %1, %"class.v8::internal::RegExpAssertion"* %0, i8* %2) #10
  ret i8* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal20RegExpCharacterClass6AcceptEPNS0_13RegExpVisitorEPv(%"class.v8::internal::RegExpCharacterClass"*, %"class.v8::internal::RegExpVisitor"*, i8*) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.v8::internal::RegExpVisitor"* %1 to i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpCharacterClass"*, i8*)***
  %5 = load i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpCharacterClass"*, i8*)**, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpCharacterClass"*, i8*)*** %4, align 8
  %6 = getelementptr inbounds i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpCharacterClass"*, i8*)*, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpCharacterClass"*, i8*)** %5, i64 5
  %7 = load i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpCharacterClass"*, i8*)*, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpCharacterClass"*, i8*)** %6, align 8
  %8 = tail call i8* %7(%"class.v8::internal::RegExpVisitor"* %1, %"class.v8::internal::RegExpCharacterClass"* %0, i8* %2) #10
  ret i8* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal10RegExpAtom6AcceptEPNS0_13RegExpVisitorEPv(%"class.v8::internal::RegExpAtom"*, %"class.v8::internal::RegExpVisitor"*, i8*) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.v8::internal::RegExpVisitor"* %1 to i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpAtom"*, i8*)***
  %5 = load i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpAtom"*, i8*)**, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpAtom"*, i8*)*** %4, align 8
  %6 = getelementptr inbounds i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpAtom"*, i8*)*, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpAtom"*, i8*)** %5, i64 6
  %7 = load i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpAtom"*, i8*)*, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpAtom"*, i8*)** %6, align 8
  %8 = tail call i8* %7(%"class.v8::internal::RegExpVisitor"* %1, %"class.v8::internal::RegExpAtom"* %0, i8* %2) #10
  ret i8* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal16RegExpQuantifier6AcceptEPNS0_13RegExpVisitorEPv(%"class.v8::internal::RegExpQuantifier"*, %"class.v8::internal::RegExpVisitor"*, i8*) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.v8::internal::RegExpVisitor"* %1 to i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpQuantifier"*, i8*)***
  %5 = load i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpQuantifier"*, i8*)**, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpQuantifier"*, i8*)*** %4, align 8
  %6 = getelementptr inbounds i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpQuantifier"*, i8*)*, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpQuantifier"*, i8*)** %5, i64 7
  %7 = load i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpQuantifier"*, i8*)*, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpQuantifier"*, i8*)** %6, align 8
  %8 = tail call i8* %7(%"class.v8::internal::RegExpVisitor"* %1, %"class.v8::internal::RegExpQuantifier"* %0, i8* %2) #10
  ret i8* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal13RegExpCapture6AcceptEPNS0_13RegExpVisitorEPv(%"class.v8::internal::RegExpCapture"*, %"class.v8::internal::RegExpVisitor"*, i8*) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.v8::internal::RegExpVisitor"* %1 to i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpCapture"*, i8*)***
  %5 = load i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpCapture"*, i8*)**, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpCapture"*, i8*)*** %4, align 8
  %6 = getelementptr inbounds i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpCapture"*, i8*)*, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpCapture"*, i8*)** %5, i64 8
  %7 = load i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpCapture"*, i8*)*, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpCapture"*, i8*)** %6, align 8
  %8 = tail call i8* %7(%"class.v8::internal::RegExpVisitor"* %1, %"class.v8::internal::RegExpCapture"* %0, i8* %2) #10
  ret i8* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal11RegExpGroup6AcceptEPNS0_13RegExpVisitorEPv(%"class.v8::internal::RegExpGroup"*, %"class.v8::internal::RegExpVisitor"*, i8*) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.v8::internal::RegExpVisitor"* %1 to i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpGroup"*, i8*)***
  %5 = load i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpGroup"*, i8*)**, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpGroup"*, i8*)*** %4, align 8
  %6 = getelementptr inbounds i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpGroup"*, i8*)*, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpGroup"*, i8*)** %5, i64 9
  %7 = load i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpGroup"*, i8*)*, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpGroup"*, i8*)** %6, align 8
  %8 = tail call i8* %7(%"class.v8::internal::RegExpVisitor"* %1, %"class.v8::internal::RegExpGroup"* %0, i8* %2) #10
  ret i8* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal16RegExpLookaround6AcceptEPNS0_13RegExpVisitorEPv(%"class.v8::internal::RegExpLookaround"*, %"class.v8::internal::RegExpVisitor"*, i8*) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.v8::internal::RegExpVisitor"* %1 to i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpLookaround"*, i8*)***
  %5 = load i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpLookaround"*, i8*)**, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpLookaround"*, i8*)*** %4, align 8
  %6 = getelementptr inbounds i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpLookaround"*, i8*)*, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpLookaround"*, i8*)** %5, i64 10
  %7 = load i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpLookaround"*, i8*)*, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpLookaround"*, i8*)** %6, align 8
  %8 = tail call i8* %7(%"class.v8::internal::RegExpVisitor"* %1, %"class.v8::internal::RegExpLookaround"* %0, i8* %2) #10
  ret i8* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal19RegExpBackReference6AcceptEPNS0_13RegExpVisitorEPv(%"class.v8::internal::RegExpBackReference"*, %"class.v8::internal::RegExpVisitor"*, i8*) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.v8::internal::RegExpVisitor"* %1 to i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpBackReference"*, i8*)***
  %5 = load i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpBackReference"*, i8*)**, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpBackReference"*, i8*)*** %4, align 8
  %6 = getelementptr inbounds i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpBackReference"*, i8*)*, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpBackReference"*, i8*)** %5, i64 11
  %7 = load i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpBackReference"*, i8*)*, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpBackReference"*, i8*)** %6, align 8
  %8 = tail call i8* %7(%"class.v8::internal::RegExpVisitor"* %1, %"class.v8::internal::RegExpBackReference"* %0, i8* %2) #10
  ret i8* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal11RegExpEmpty6AcceptEPNS0_13RegExpVisitorEPv(%"class.v8::internal::RegExpEmpty"*, %"class.v8::internal::RegExpVisitor"*, i8*) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.v8::internal::RegExpVisitor"* %1 to i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpEmpty"*, i8*)***
  %5 = load i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpEmpty"*, i8*)**, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpEmpty"*, i8*)*** %4, align 8
  %6 = getelementptr inbounds i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpEmpty"*, i8*)*, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpEmpty"*, i8*)** %5, i64 12
  %7 = load i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpEmpty"*, i8*)*, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpEmpty"*, i8*)** %6, align 8
  %8 = tail call i8* %7(%"class.v8::internal::RegExpVisitor"* %1, %"class.v8::internal::RegExpEmpty"* %0, i8* %2) #10
  ret i8* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal10RegExpText6AcceptEPNS0_13RegExpVisitorEPv(%"class.v8::internal::RegExpText"*, %"class.v8::internal::RegExpVisitor"*, i8*) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.v8::internal::RegExpVisitor"* %1 to i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpText"*, i8*)***
  %5 = load i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpText"*, i8*)**, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpText"*, i8*)*** %4, align 8
  %6 = getelementptr inbounds i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpText"*, i8*)*, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpText"*, i8*)** %5, i64 13
  %7 = load i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpText"*, i8*)*, i8* (%"class.v8::internal::RegExpVisitor"*, %"class.v8::internal::RegExpText"*, i8*)** %6, align 8
  %8 = tail call i8* %7(%"class.v8::internal::RegExpVisitor"* %1, %"class.v8::internal::RegExpText"* %0, i8* %2) #10
  ret i8* %8
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.v8::internal::RegExpDisjunction"* @_ZN2v88internal10RegExpTree13AsDisjunctionEv(%"class.v8::internal::RegExpTree"* nocapture readnone) unnamed_addr #1 align 2 {
  ret %"class.v8::internal::RegExpDisjunction"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10RegExpTree13IsDisjunctionEv(%"class.v8::internal::RegExpTree"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.v8::internal::RegExpAlternative"* @_ZN2v88internal10RegExpTree13AsAlternativeEv(%"class.v8::internal::RegExpTree"* nocapture readnone) unnamed_addr #1 align 2 {
  ret %"class.v8::internal::RegExpAlternative"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10RegExpTree13IsAlternativeEv(%"class.v8::internal::RegExpTree"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.v8::internal::RegExpAssertion"* @_ZN2v88internal10RegExpTree11AsAssertionEv(%"class.v8::internal::RegExpTree"* nocapture readnone) unnamed_addr #1 align 2 {
  ret %"class.v8::internal::RegExpAssertion"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10RegExpTree11IsAssertionEv(%"class.v8::internal::RegExpTree"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.v8::internal::RegExpCharacterClass"* @_ZN2v88internal10RegExpTree16AsCharacterClassEv(%"class.v8::internal::RegExpTree"* nocapture readnone) unnamed_addr #1 align 2 {
  ret %"class.v8::internal::RegExpCharacterClass"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10RegExpTree16IsCharacterClassEv(%"class.v8::internal::RegExpTree"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.v8::internal::RegExpAtom"* @_ZN2v88internal10RegExpTree6AsAtomEv(%"class.v8::internal::RegExpTree"* nocapture readnone) unnamed_addr #1 align 2 {
  ret %"class.v8::internal::RegExpAtom"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10RegExpTree6IsAtomEv(%"class.v8::internal::RegExpTree"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.v8::internal::RegExpQuantifier"* @_ZN2v88internal10RegExpTree12AsQuantifierEv(%"class.v8::internal::RegExpTree"* nocapture readnone) unnamed_addr #1 align 2 {
  ret %"class.v8::internal::RegExpQuantifier"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10RegExpTree12IsQuantifierEv(%"class.v8::internal::RegExpTree"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.v8::internal::RegExpCapture"* @_ZN2v88internal10RegExpTree9AsCaptureEv(%"class.v8::internal::RegExpTree"* nocapture readnone) unnamed_addr #1 align 2 {
  ret %"class.v8::internal::RegExpCapture"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10RegExpTree9IsCaptureEv(%"class.v8::internal::RegExpTree"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.v8::internal::RegExpGroup"* @_ZN2v88internal10RegExpTree7AsGroupEv(%"class.v8::internal::RegExpTree"* nocapture readnone) unnamed_addr #1 align 2 {
  ret %"class.v8::internal::RegExpGroup"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10RegExpTree7IsGroupEv(%"class.v8::internal::RegExpTree"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.v8::internal::RegExpLookaround"* @_ZN2v88internal10RegExpTree12AsLookaroundEv(%"class.v8::internal::RegExpTree"* nocapture readnone) unnamed_addr #1 align 2 {
  ret %"class.v8::internal::RegExpLookaround"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10RegExpTree12IsLookaroundEv(%"class.v8::internal::RegExpTree"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.v8::internal::RegExpBackReference"* @_ZN2v88internal10RegExpTree15AsBackReferenceEv(%"class.v8::internal::RegExpTree"* nocapture readnone) unnamed_addr #1 align 2 {
  ret %"class.v8::internal::RegExpBackReference"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10RegExpTree15IsBackReferenceEv(%"class.v8::internal::RegExpTree"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.v8::internal::RegExpEmpty"* @_ZN2v88internal10RegExpTree7AsEmptyEv(%"class.v8::internal::RegExpTree"* nocapture readnone) unnamed_addr #1 align 2 {
  ret %"class.v8::internal::RegExpEmpty"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10RegExpTree7IsEmptyEv(%"class.v8::internal::RegExpTree"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.v8::internal::RegExpText"* @_ZN2v88internal10RegExpTree6AsTextEv(%"class.v8::internal::RegExpTree"* nocapture readnone) unnamed_addr #1 align 2 {
  ret %"class.v8::internal::RegExpText"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10RegExpTree6IsTextEv(%"class.v8::internal::RegExpTree"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.v8::internal::RegExpDisjunction"* @_ZN2v88internal17RegExpDisjunction13AsDisjunctionEv(%"class.v8::internal::RegExpDisjunction"* readnone returned) unnamed_addr #1 align 2 {
  ret %"class.v8::internal::RegExpDisjunction"* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internal17RegExpDisjunction13IsDisjunctionEv(%"class.v8::internal::RegExpDisjunction"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.v8::internal::RegExpAlternative"* @_ZN2v88internal17RegExpAlternative13AsAlternativeEv(%"class.v8::internal::RegExpAlternative"* readnone returned) unnamed_addr #1 align 2 {
  ret %"class.v8::internal::RegExpAlternative"* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internal17RegExpAlternative13IsAlternativeEv(%"class.v8::internal::RegExpAlternative"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.v8::internal::RegExpAssertion"* @_ZN2v88internal15RegExpAssertion11AsAssertionEv(%"class.v8::internal::RegExpAssertion"* readnone returned) unnamed_addr #1 align 2 {
  ret %"class.v8::internal::RegExpAssertion"* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internal15RegExpAssertion11IsAssertionEv(%"class.v8::internal::RegExpAssertion"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.v8::internal::RegExpCharacterClass"* @_ZN2v88internal20RegExpCharacterClass16AsCharacterClassEv(%"class.v8::internal::RegExpCharacterClass"* readnone returned) unnamed_addr #1 align 2 {
  ret %"class.v8::internal::RegExpCharacterClass"* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internal20RegExpCharacterClass16IsCharacterClassEv(%"class.v8::internal::RegExpCharacterClass"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.v8::internal::RegExpAtom"* @_ZN2v88internal10RegExpAtom6AsAtomEv(%"class.v8::internal::RegExpAtom"* readnone returned) unnamed_addr #1 align 2 {
  ret %"class.v8::internal::RegExpAtom"* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10RegExpAtom6IsAtomEv(%"class.v8::internal::RegExpAtom"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.v8::internal::RegExpQuantifier"* @_ZN2v88internal16RegExpQuantifier12AsQuantifierEv(%"class.v8::internal::RegExpQuantifier"* readnone returned) unnamed_addr #1 align 2 {
  ret %"class.v8::internal::RegExpQuantifier"* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internal16RegExpQuantifier12IsQuantifierEv(%"class.v8::internal::RegExpQuantifier"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.v8::internal::RegExpCapture"* @_ZN2v88internal13RegExpCapture9AsCaptureEv(%"class.v8::internal::RegExpCapture"* readnone returned) unnamed_addr #1 align 2 {
  ret %"class.v8::internal::RegExpCapture"* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internal13RegExpCapture9IsCaptureEv(%"class.v8::internal::RegExpCapture"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.v8::internal::RegExpGroup"* @_ZN2v88internal11RegExpGroup7AsGroupEv(%"class.v8::internal::RegExpGroup"* readnone returned) unnamed_addr #1 align 2 {
  ret %"class.v8::internal::RegExpGroup"* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internal11RegExpGroup7IsGroupEv(%"class.v8::internal::RegExpGroup"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.v8::internal::RegExpLookaround"* @_ZN2v88internal16RegExpLookaround12AsLookaroundEv(%"class.v8::internal::RegExpLookaround"* readnone returned) unnamed_addr #1 align 2 {
  ret %"class.v8::internal::RegExpLookaround"* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internal16RegExpLookaround12IsLookaroundEv(%"class.v8::internal::RegExpLookaround"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.v8::internal::RegExpBackReference"* @_ZN2v88internal19RegExpBackReference15AsBackReferenceEv(%"class.v8::internal::RegExpBackReference"* readnone returned) unnamed_addr #1 align 2 {
  ret %"class.v8::internal::RegExpBackReference"* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internal19RegExpBackReference15IsBackReferenceEv(%"class.v8::internal::RegExpBackReference"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.v8::internal::RegExpEmpty"* @_ZN2v88internal11RegExpEmpty7AsEmptyEv(%"class.v8::internal::RegExpEmpty"* readnone returned) unnamed_addr #1 align 2 {
  ret %"class.v8::internal::RegExpEmpty"* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internal11RegExpEmpty7IsEmptyEv(%"class.v8::internal::RegExpEmpty"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.v8::internal::RegExpText"* @_ZN2v88internal10RegExpText6AsTextEv(%"class.v8::internal::RegExpText"* readnone returned) unnamed_addr #1 align 2 {
  ret %"class.v8::internal::RegExpText"* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10RegExpText6IsTextEv(%"class.v8::internal::RegExpText"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal17RegExpAlternative16CaptureRegistersEv(%"class.v8::internal::RegExpAlternative"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpAlternative", %"class.v8::internal::RegExpAlternative"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::ZoneList"*, %"class.v8::internal::ZoneList"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::ZoneList", %"class.v8::internal::ZoneList"* %3, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %39

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::ZoneList", %"class.v8::internal::ZoneList"* %3, i64 0, i32 0
  br label %9

9:                                                ; preds = %32, %7
  %10 = phi i64 [ 0, %7 ], [ %35, %32 ]
  %11 = phi i32 [ -1, %7 ], [ %33, %32 ]
  %12 = phi i32 [ -2, %7 ], [ %34, %32 ]
  %13 = load %"class.v8::internal::RegExpTree"**, %"class.v8::internal::RegExpTree"*** %8, align 8
  %14 = getelementptr inbounds %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %13, i64 %10
  %15 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %14, align 8
  %16 = bitcast %"class.v8::internal::RegExpTree"* %15 to i64 (%"class.v8::internal::RegExpTree"*)***
  %17 = load i64 (%"class.v8::internal::RegExpTree"*)**, i64 (%"class.v8::internal::RegExpTree"*)*** %16, align 8
  %18 = getelementptr inbounds i64 (%"class.v8::internal::RegExpTree"*)*, i64 (%"class.v8::internal::RegExpTree"*)** %17, i64 9
  %19 = load i64 (%"class.v8::internal::RegExpTree"*)*, i64 (%"class.v8::internal::RegExpTree"*)** %18, align 8
  %20 = tail call i64 %19(%"class.v8::internal::RegExpTree"* %15) #10
  %21 = trunc i64 %20 to i32
  %22 = lshr i64 %20, 32
  %23 = trunc i64 %22 to i32
  %24 = icmp eq i32 %21, -1
  br i1 %24, label %32, label %25

25:                                               ; preds = %9
  %26 = icmp eq i32 %11, -1
  br i1 %26, label %32, label %27

27:                                               ; preds = %25
  %28 = icmp sgt i32 %11, %21
  %29 = select i1 %28, i32 %21, i32 %11
  %30 = icmp slt i32 %12, %23
  %31 = select i1 %30, i32 %23, i32 %12
  br label %32

32:                                               ; preds = %27, %25, %9
  %33 = phi i32 [ %29, %27 ], [ %21, %25 ], [ %11, %9 ]
  %34 = phi i32 [ %31, %27 ], [ %23, %25 ], [ %12, %9 ]
  %35 = add nuw nsw i64 %10, 1
  %36 = load i32, i32* %4, align 4
  %37 = sext i32 %36 to i64
  %38 = icmp slt i64 %35, %37
  br i1 %38, label %9, label %39

39:                                               ; preds = %32, %1
  %40 = phi i32 [ -2, %1 ], [ %34, %32 ]
  %41 = phi i32 [ -1, %1 ], [ %33, %32 ]
  %42 = zext i32 %40 to i64
  %43 = shl nuw i64 %42, 32
  %44 = zext i32 %41 to i64
  %45 = or i64 %43, %44
  ret i64 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal17RegExpDisjunction16CaptureRegistersEv(%"class.v8::internal::RegExpDisjunction"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpDisjunction", %"class.v8::internal::RegExpDisjunction"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::ZoneList"*, %"class.v8::internal::ZoneList"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::ZoneList", %"class.v8::internal::ZoneList"* %3, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %39

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::ZoneList", %"class.v8::internal::ZoneList"* %3, i64 0, i32 0
  br label %9

9:                                                ; preds = %32, %7
  %10 = phi i64 [ 0, %7 ], [ %35, %32 ]
  %11 = phi i32 [ -1, %7 ], [ %33, %32 ]
  %12 = phi i32 [ -2, %7 ], [ %34, %32 ]
  %13 = load %"class.v8::internal::RegExpTree"**, %"class.v8::internal::RegExpTree"*** %8, align 8
  %14 = getelementptr inbounds %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %13, i64 %10
  %15 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %14, align 8
  %16 = bitcast %"class.v8::internal::RegExpTree"* %15 to i64 (%"class.v8::internal::RegExpTree"*)***
  %17 = load i64 (%"class.v8::internal::RegExpTree"*)**, i64 (%"class.v8::internal::RegExpTree"*)*** %16, align 8
  %18 = getelementptr inbounds i64 (%"class.v8::internal::RegExpTree"*)*, i64 (%"class.v8::internal::RegExpTree"*)** %17, i64 9
  %19 = load i64 (%"class.v8::internal::RegExpTree"*)*, i64 (%"class.v8::internal::RegExpTree"*)** %18, align 8
  %20 = tail call i64 %19(%"class.v8::internal::RegExpTree"* %15) #10
  %21 = trunc i64 %20 to i32
  %22 = lshr i64 %20, 32
  %23 = trunc i64 %22 to i32
  %24 = icmp eq i32 %21, -1
  br i1 %24, label %32, label %25

25:                                               ; preds = %9
  %26 = icmp eq i32 %11, -1
  br i1 %26, label %32, label %27

27:                                               ; preds = %25
  %28 = icmp sgt i32 %11, %21
  %29 = select i1 %28, i32 %21, i32 %11
  %30 = icmp slt i32 %12, %23
  %31 = select i1 %30, i32 %23, i32 %12
  br label %32

32:                                               ; preds = %27, %25, %9
  %33 = phi i32 [ %29, %27 ], [ %21, %25 ], [ %11, %9 ]
  %34 = phi i32 [ %31, %27 ], [ %23, %25 ], [ %12, %9 ]
  %35 = add nuw nsw i64 %10, 1
  %36 = load i32, i32* %4, align 4
  %37 = sext i32 %36 to i64
  %38 = icmp slt i64 %35, %37
  br i1 %38, label %9, label %39

39:                                               ; preds = %32, %1
  %40 = phi i32 [ -2, %1 ], [ %34, %32 ]
  %41 = phi i32 [ -1, %1 ], [ %33, %32 ]
  %42 = zext i32 %40 to i64
  %43 = shl nuw i64 %42, 32
  %44 = zext i32 %41 to i64
  %45 = or i64 %43, %44
  ret i64 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal16RegExpLookaround16CaptureRegistersEv(%"class.v8::internal::RegExpLookaround"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpLookaround", %"class.v8::internal::RegExpLookaround"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %2, align 8
  %4 = bitcast %"class.v8::internal::RegExpTree"* %3 to i64 (%"class.v8::internal::RegExpTree"*)***
  %5 = load i64 (%"class.v8::internal::RegExpTree"*)**, i64 (%"class.v8::internal::RegExpTree"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.v8::internal::RegExpTree"*)*, i64 (%"class.v8::internal::RegExpTree"*)** %5, i64 9
  %7 = load i64 (%"class.v8::internal::RegExpTree"*)*, i64 (%"class.v8::internal::RegExpTree"*)** %6, align 8
  %8 = tail call i64 %7(%"class.v8::internal::RegExpTree"* %3) #10
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal13RegExpCapture16CaptureRegistersEv(%"class.v8::internal::RegExpCapture"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpCapture", %"class.v8::internal::RegExpCapture"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = shl nsw i32 %3, 1
  %5 = or i32 %4, 1
  %6 = getelementptr inbounds %"class.v8::internal::RegExpCapture", %"class.v8::internal::RegExpCapture"* %0, i64 0, i32 1
  %7 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %6, align 8
  %8 = bitcast %"class.v8::internal::RegExpTree"* %7 to i64 (%"class.v8::internal::RegExpTree"*)***
  %9 = load i64 (%"class.v8::internal::RegExpTree"*)**, i64 (%"class.v8::internal::RegExpTree"*)*** %8, align 8
  %10 = getelementptr inbounds i64 (%"class.v8::internal::RegExpTree"*)*, i64 (%"class.v8::internal::RegExpTree"*)** %9, i64 9
  %11 = load i64 (%"class.v8::internal::RegExpTree"*)*, i64 (%"class.v8::internal::RegExpTree"*)** %10, align 8
  %12 = tail call i64 %11(%"class.v8::internal::RegExpTree"* %7) #10
  %13 = trunc i64 %12 to i32
  %14 = lshr i64 %12, 32
  %15 = trunc i64 %14 to i32
  %16 = icmp eq i32 %13, -1
  br i1 %16, label %22, label %17

17:                                               ; preds = %1
  %18 = icmp sgt i32 %4, %13
  %19 = select i1 %18, i32 %13, i32 %4
  %20 = icmp slt i32 %5, %15
  %21 = select i1 %20, i32 %15, i32 %5
  br label %22

22:                                               ; preds = %1, %17
  %23 = phi i32 [ %19, %17 ], [ %4, %1 ]
  %24 = phi i32 [ %21, %17 ], [ %5, %1 ]
  %25 = zext i32 %24 to i64
  %26 = shl nuw i64 %25, 32
  %27 = zext i32 %23 to i64
  %28 = or i64 %26, %27
  ret i64 %28
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal16RegExpQuantifier16CaptureRegistersEv(%"class.v8::internal::RegExpQuantifier"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpQuantifier", %"class.v8::internal::RegExpQuantifier"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %2, align 8
  %4 = bitcast %"class.v8::internal::RegExpTree"* %3 to i64 (%"class.v8::internal::RegExpTree"*)***
  %5 = load i64 (%"class.v8::internal::RegExpTree"*)**, i64 (%"class.v8::internal::RegExpTree"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.v8::internal::RegExpTree"*)*, i64 (%"class.v8::internal::RegExpTree"*)** %5, i64 9
  %7 = load i64 (%"class.v8::internal::RegExpTree"*)*, i64 (%"class.v8::internal::RegExpTree"*)** %6, align 8
  %8 = tail call i64 %7(%"class.v8::internal::RegExpTree"* %3) #10
  ret i64 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal15RegExpAssertion17IsAnchoredAtStartEv(%"class.v8::internal::RegExpAssertion"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpAssertion", %"class.v8::internal::RegExpAssertion"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 1
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal15RegExpAssertion15IsAnchoredAtEndEv(%"class.v8::internal::RegExpAssertion"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpAssertion", %"class.v8::internal::RegExpAssertion"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 3
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal17RegExpAlternative17IsAnchoredAtStartEv(%"class.v8::internal::RegExpAlternative"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpAlternative", %"class.v8::internal::RegExpAlternative"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::ZoneList"*, %"class.v8::internal::ZoneList"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::ZoneList", %"class.v8::internal::ZoneList"* %3, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %31

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::ZoneList", %"class.v8::internal::ZoneList"* %3, i64 0, i32 0
  br label %13

9:                                                ; preds = %23
  %10 = load i32, i32* %4, align 4
  %11 = sext i32 %10 to i64
  %12 = icmp slt i64 %30, %11
  br i1 %12, label %13, label %31

13:                                               ; preds = %7, %9
  %14 = phi i64 [ 0, %7 ], [ %30, %9 ]
  %15 = load %"class.v8::internal::RegExpTree"**, %"class.v8::internal::RegExpTree"*** %8, align 8
  %16 = getelementptr inbounds %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %15, i64 %14
  %17 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %16, align 8
  %18 = bitcast %"class.v8::internal::RegExpTree"* %17 to i1 (%"class.v8::internal::RegExpTree"*)***
  %19 = load i1 (%"class.v8::internal::RegExpTree"*)**, i1 (%"class.v8::internal::RegExpTree"*)*** %18, align 8
  %20 = getelementptr inbounds i1 (%"class.v8::internal::RegExpTree"*)*, i1 (%"class.v8::internal::RegExpTree"*)** %19, i64 5
  %21 = load i1 (%"class.v8::internal::RegExpTree"*)*, i1 (%"class.v8::internal::RegExpTree"*)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.v8::internal::RegExpTree"* %17) #10
  br i1 %22, label %31, label %23

23:                                               ; preds = %13
  %24 = bitcast %"class.v8::internal::RegExpTree"* %17 to i32 (%"class.v8::internal::RegExpTree"*)***
  %25 = load i32 (%"class.v8::internal::RegExpTree"*)**, i32 (%"class.v8::internal::RegExpTree"*)*** %24, align 8
  %26 = getelementptr inbounds i32 (%"class.v8::internal::RegExpTree"*)*, i32 (%"class.v8::internal::RegExpTree"*)** %25, i64 8
  %27 = load i32 (%"class.v8::internal::RegExpTree"*)*, i32 (%"class.v8::internal::RegExpTree"*)** %26, align 8
  %28 = tail call i32 %27(%"class.v8::internal::RegExpTree"* %17) #10
  %29 = icmp sgt i32 %28, 0
  %30 = add nuw nsw i64 %14, 1
  br i1 %29, label %31, label %9

31:                                               ; preds = %13, %9, %23, %1
  %32 = phi i1 [ false, %1 ], [ false, %23 ], [ false, %9 ], [ true, %13 ]
  ret i1 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal17RegExpAlternative15IsAnchoredAtEndEv(%"class.v8::internal::RegExpAlternative"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpAlternative", %"class.v8::internal::RegExpAlternative"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::ZoneList"*, %"class.v8::internal::ZoneList"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::ZoneList", %"class.v8::internal::ZoneList"* %3, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.v8::internal::ZoneList", %"class.v8::internal::ZoneList"* %3, i64 0, i32 0
  %7 = sext i32 %5 to i64
  br label %8

8:                                                ; preds = %21, %1
  %9 = phi i64 [ %10, %21 ], [ %7, %1 ]
  %10 = add nsw i64 %9, -1
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %28

12:                                               ; preds = %8
  %13 = load %"class.v8::internal::RegExpTree"**, %"class.v8::internal::RegExpTree"*** %6, align 8
  %14 = getelementptr inbounds %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %13, i64 %10
  %15 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %14, align 8
  %16 = bitcast %"class.v8::internal::RegExpTree"* %15 to i1 (%"class.v8::internal::RegExpTree"*)***
  %17 = load i1 (%"class.v8::internal::RegExpTree"*)**, i1 (%"class.v8::internal::RegExpTree"*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.v8::internal::RegExpTree"*)*, i1 (%"class.v8::internal::RegExpTree"*)** %17, i64 6
  %19 = load i1 (%"class.v8::internal::RegExpTree"*)*, i1 (%"class.v8::internal::RegExpTree"*)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.v8::internal::RegExpTree"* %15) #10
  br i1 %20, label %28, label %21

21:                                               ; preds = %12
  %22 = bitcast %"class.v8::internal::RegExpTree"* %15 to i32 (%"class.v8::internal::RegExpTree"*)***
  %23 = load i32 (%"class.v8::internal::RegExpTree"*)**, i32 (%"class.v8::internal::RegExpTree"*)*** %22, align 8
  %24 = getelementptr inbounds i32 (%"class.v8::internal::RegExpTree"*)*, i32 (%"class.v8::internal::RegExpTree"*)** %23, i64 8
  %25 = load i32 (%"class.v8::internal::RegExpTree"*)*, i32 (%"class.v8::internal::RegExpTree"*)** %24, align 8
  %26 = tail call i32 %25(%"class.v8::internal::RegExpTree"* %15) #10
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %28, label %8

28:                                               ; preds = %21, %8, %12
  %29 = phi i1 [ true, %12 ], [ false, %8 ], [ false, %21 ]
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal17RegExpDisjunction17IsAnchoredAtStartEv(%"class.v8::internal::RegExpDisjunction"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpDisjunction", %"class.v8::internal::RegExpDisjunction"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::ZoneList"*, %"class.v8::internal::ZoneList"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::ZoneList", %"class.v8::internal::ZoneList"* %3, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %24

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::ZoneList", %"class.v8::internal::ZoneList"* %3, i64 0, i32 0
  br label %13

9:                                                ; preds = %13
  %10 = load i32, i32* %4, align 4
  %11 = sext i32 %10 to i64
  %12 = icmp slt i64 %23, %11
  br i1 %12, label %13, label %24

13:                                               ; preds = %7, %9
  %14 = phi i64 [ 0, %7 ], [ %23, %9 ]
  %15 = load %"class.v8::internal::RegExpTree"**, %"class.v8::internal::RegExpTree"*** %8, align 8
  %16 = getelementptr inbounds %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %15, i64 %14
  %17 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %16, align 8
  %18 = bitcast %"class.v8::internal::RegExpTree"* %17 to i1 (%"class.v8::internal::RegExpTree"*)***
  %19 = load i1 (%"class.v8::internal::RegExpTree"*)**, i1 (%"class.v8::internal::RegExpTree"*)*** %18, align 8
  %20 = getelementptr inbounds i1 (%"class.v8::internal::RegExpTree"*)*, i1 (%"class.v8::internal::RegExpTree"*)** %19, i64 5
  %21 = load i1 (%"class.v8::internal::RegExpTree"*)*, i1 (%"class.v8::internal::RegExpTree"*)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.v8::internal::RegExpTree"* %17) #10
  %23 = add nuw nsw i64 %14, 1
  br i1 %22, label %9, label %24

24:                                               ; preds = %13, %9, %1
  %25 = phi i1 [ true, %1 ], [ true, %9 ], [ false, %13 ]
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal17RegExpDisjunction15IsAnchoredAtEndEv(%"class.v8::internal::RegExpDisjunction"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpDisjunction", %"class.v8::internal::RegExpDisjunction"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::ZoneList"*, %"class.v8::internal::ZoneList"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::ZoneList", %"class.v8::internal::ZoneList"* %3, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %24

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::ZoneList", %"class.v8::internal::ZoneList"* %3, i64 0, i32 0
  br label %13

9:                                                ; preds = %13
  %10 = load i32, i32* %4, align 4
  %11 = sext i32 %10 to i64
  %12 = icmp slt i64 %23, %11
  br i1 %12, label %13, label %24

13:                                               ; preds = %7, %9
  %14 = phi i64 [ 0, %7 ], [ %23, %9 ]
  %15 = load %"class.v8::internal::RegExpTree"**, %"class.v8::internal::RegExpTree"*** %8, align 8
  %16 = getelementptr inbounds %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %15, i64 %14
  %17 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %16, align 8
  %18 = bitcast %"class.v8::internal::RegExpTree"* %17 to i1 (%"class.v8::internal::RegExpTree"*)***
  %19 = load i1 (%"class.v8::internal::RegExpTree"*)**, i1 (%"class.v8::internal::RegExpTree"*)*** %18, align 8
  %20 = getelementptr inbounds i1 (%"class.v8::internal::RegExpTree"*)*, i1 (%"class.v8::internal::RegExpTree"*)** %19, i64 6
  %21 = load i1 (%"class.v8::internal::RegExpTree"*)*, i1 (%"class.v8::internal::RegExpTree"*)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.v8::internal::RegExpTree"* %17) #10
  %23 = add nuw nsw i64 %14, 1
  br i1 %22, label %9, label %24

24:                                               ; preds = %13, %9, %1
  %25 = phi i1 [ true, %1 ], [ true, %9 ], [ false, %13 ]
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal16RegExpLookaround17IsAnchoredAtStartEv(%"class.v8::internal::RegExpLookaround"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpLookaround", %"class.v8::internal::RegExpLookaround"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::RegExpLookaround", %"class.v8::internal::RegExpLookaround"* %0, i64 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.v8::internal::RegExpLookaround", %"class.v8::internal::RegExpLookaround"* %0, i64 0, i32 1
  %11 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %10, align 8
  %12 = bitcast %"class.v8::internal::RegExpTree"* %11 to i1 (%"class.v8::internal::RegExpTree"*)***
  %13 = load i1 (%"class.v8::internal::RegExpTree"*)**, i1 (%"class.v8::internal::RegExpTree"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.v8::internal::RegExpTree"*)*, i1 (%"class.v8::internal::RegExpTree"*)** %13, i64 5
  %15 = load i1 (%"class.v8::internal::RegExpTree"*)*, i1 (%"class.v8::internal::RegExpTree"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.v8::internal::RegExpTree"* %11) #10
  br label %17

17:                                               ; preds = %1, %9, %5
  %18 = phi i1 [ false, %5 ], [ false, %1 ], [ %16, %9 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal13RegExpCapture17IsAnchoredAtStartEv(%"class.v8::internal::RegExpCapture"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpCapture", %"class.v8::internal::RegExpCapture"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %2, align 8
  %4 = bitcast %"class.v8::internal::RegExpTree"* %3 to i1 (%"class.v8::internal::RegExpTree"*)***
  %5 = load i1 (%"class.v8::internal::RegExpTree"*)**, i1 (%"class.v8::internal::RegExpTree"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.v8::internal::RegExpTree"*)*, i1 (%"class.v8::internal::RegExpTree"*)** %5, i64 5
  %7 = load i1 (%"class.v8::internal::RegExpTree"*)*, i1 (%"class.v8::internal::RegExpTree"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.v8::internal::RegExpTree"* %3) #10
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal13RegExpCapture15IsAnchoredAtEndEv(%"class.v8::internal::RegExpCapture"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpCapture", %"class.v8::internal::RegExpCapture"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %2, align 8
  %4 = bitcast %"class.v8::internal::RegExpTree"* %3 to i1 (%"class.v8::internal::RegExpTree"*)***
  %5 = load i1 (%"class.v8::internal::RegExpTree"*)**, i1 (%"class.v8::internal::RegExpTree"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.v8::internal::RegExpTree"*)*, i1 (%"class.v8::internal::RegExpTree"*)** %5, i64 6
  %7 = load i1 (%"class.v8::internal::RegExpTree"*)*, i1 (%"class.v8::internal::RegExpTree"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.v8::internal::RegExpTree"* %3) #10
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @_ZN2v88internal14RegExpUnparser16VisitDisjunctionEPNS0_17RegExpDisjunctionEPv(%"class.v8::internal::RegExpUnparser"*, %"class.v8::internal::RegExpDisjunction"* nocapture readonly, i8*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %0, i64 0, i32 1
  %5 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %4, align 8
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2) #10
  %7 = getelementptr inbounds %"class.v8::internal::RegExpDisjunction", %"class.v8::internal::RegExpDisjunction"* %1, i64 0, i32 1
  %8 = load %"class.v8::internal::ZoneList"*, %"class.v8::internal::ZoneList"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::ZoneList", %"class.v8::internal::ZoneList"* %8, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  %12 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %4, align 8
  br i1 %11, label %13, label %15

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %0, i64 0, i32 0
  br label %18

15:                                               ; preds = %18, %3
  %16 = phi %"class.std::__1::basic_ostream"* [ %12, %3 ], [ %38, %18 ]
  %17 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1) #10
  ret i8* null

18:                                               ; preds = %13, %18
  %19 = phi i64 [ 0, %13 ], [ %32, %18 ]
  %20 = phi %"class.std::__1::basic_ostream"* [ %12, %13 ], [ %38, %18 ]
  %21 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %20, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #10
  %22 = load %"class.v8::internal::ZoneList"*, %"class.v8::internal::ZoneList"** %7, align 8
  %23 = getelementptr inbounds %"class.v8::internal::ZoneList", %"class.v8::internal::ZoneList"* %22, i64 0, i32 0
  %24 = load %"class.v8::internal::RegExpTree"**, %"class.v8::internal::RegExpTree"*** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %24, i64 %19
  %26 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %25, align 8
  %27 = bitcast %"class.v8::internal::RegExpTree"* %26 to i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)***
  %28 = load i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)**, i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)*** %27, align 8
  %29 = getelementptr inbounds i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)*, i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)** %28, i64 2
  %30 = load i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)*, i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)** %29, align 8
  %31 = tail call i8* %30(%"class.v8::internal::RegExpTree"* %26, %"class.v8::internal::RegExpVisitor"* %14, i8* %2) #10
  %32 = add nuw nsw i64 %19, 1
  %33 = load %"class.v8::internal::ZoneList"*, %"class.v8::internal::ZoneList"** %7, align 8
  %34 = getelementptr inbounds %"class.v8::internal::ZoneList", %"class.v8::internal::ZoneList"* %33, i64 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = sext i32 %35 to i64
  %37 = icmp slt i64 %32, %36
  %38 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %4, align 8
  br i1 %37, label %18, label %15
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @_ZN2v88internal14RegExpUnparser16VisitAlternativeEPNS0_17RegExpAlternativeEPv(%"class.v8::internal::RegExpUnparser"*, %"class.v8::internal::RegExpAlternative"* nocapture readonly, i8*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %0, i64 0, i32 1
  %5 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %4, align 8
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i64 2) #10
  %7 = getelementptr inbounds %"class.v8::internal::RegExpAlternative", %"class.v8::internal::RegExpAlternative"* %1, i64 0, i32 1
  %8 = load %"class.v8::internal::ZoneList"*, %"class.v8::internal::ZoneList"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::ZoneList", %"class.v8::internal::ZoneList"* %8, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  %12 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %4, align 8
  br i1 %11, label %13, label %15

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %0, i64 0, i32 0
  br label %18

15:                                               ; preds = %18, %3
  %16 = phi %"class.std::__1::basic_ostream"* [ %12, %3 ], [ %38, %18 ]
  %17 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1) #10
  ret i8* null

18:                                               ; preds = %13, %18
  %19 = phi i64 [ 0, %13 ], [ %32, %18 ]
  %20 = phi %"class.std::__1::basic_ostream"* [ %12, %13 ], [ %38, %18 ]
  %21 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %20, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #10
  %22 = load %"class.v8::internal::ZoneList"*, %"class.v8::internal::ZoneList"** %7, align 8
  %23 = getelementptr inbounds %"class.v8::internal::ZoneList", %"class.v8::internal::ZoneList"* %22, i64 0, i32 0
  %24 = load %"class.v8::internal::RegExpTree"**, %"class.v8::internal::RegExpTree"*** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %24, i64 %19
  %26 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %25, align 8
  %27 = bitcast %"class.v8::internal::RegExpTree"* %26 to i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)***
  %28 = load i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)**, i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)*** %27, align 8
  %29 = getelementptr inbounds i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)*, i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)** %28, i64 2
  %30 = load i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)*, i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)** %29, align 8
  %31 = tail call i8* %30(%"class.v8::internal::RegExpTree"* %26, %"class.v8::internal::RegExpVisitor"* %14, i8* %2) #10
  %32 = add nuw nsw i64 %19, 1
  %33 = load %"class.v8::internal::ZoneList"*, %"class.v8::internal::ZoneList"** %7, align 8
  %34 = getelementptr inbounds %"class.v8::internal::ZoneList", %"class.v8::internal::ZoneList"* %33, i64 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = sext i32 %35 to i64
  %37 = icmp slt i64 %32, %36
  %38 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %4, align 8
  br i1 %37, label %18, label %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14RegExpUnparser19VisitCharacterRangeENS0_14CharacterRangeE(%"class.v8::internal::RegExpUnparser"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.v8::internal::AsUC32", align 4
  %4 = alloca %"struct.v8::internal::AsUC32", align 4
  %5 = trunc i64 %1 to i32
  %6 = lshr i64 %1, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %0, i64 0, i32 1
  %9 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %8, align 8
  %10 = bitcast %"struct.v8::internal::AsUC32"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"struct.v8::internal::AsUC32", %"struct.v8::internal::AsUC32"* %3, i64 0, i32 0
  store i32 %5, i32* %11, align 4
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_6AsUC32E(%"class.std::__1::basic_ostream"* dereferenceable(160) %9, %"struct.v8::internal::AsUC32"* nonnull dereferenceable(4) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #10
  %13 = icmp eq i32 %5, %7
  br i1 %13, label %20, label %14

14:                                               ; preds = %2
  %15 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %8, align 8
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #10
  %17 = bitcast %"struct.v8::internal::AsUC32"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"struct.v8::internal::AsUC32", %"struct.v8::internal::AsUC32"* %4, i64 0, i32 0
  store i32 %7, i32* %18, align 4
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_6AsUC32E(%"class.std::__1::basic_ostream"* dereferenceable(160) %16, %"struct.v8::internal::AsUC32"* nonnull dereferenceable(4) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #10
  br label %20

20:                                               ; preds = %14, %2
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_6AsUC32E(%"class.std::__1::basic_ostream"* dereferenceable(160), %"struct.v8::internal::AsUC32"* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @_ZN2v88internal14RegExpUnparser19VisitCharacterClassEPNS0_20RegExpCharacterClassEPv(%"class.v8::internal::RegExpUnparser"* nocapture readonly, %"class.v8::internal::RegExpCharacterClass"*, i8* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.v8::internal::AsUC32", align 4
  %5 = alloca %"struct.v8::internal::AsUC32", align 4
  %6 = getelementptr inbounds %"class.v8::internal::RegExpCharacterClass", %"class.v8::internal::RegExpCharacterClass"* %1, i64 0, i32 3, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %0, i64 0, i32 1
  %12 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %11, align 8
  %13 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i64 1) #10
  br label %14

14:                                               ; preds = %3, %10
  %15 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %0, i64 0, i32 1
  %16 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %15, align 8
  %17 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i64 1) #10
  %18 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %0, i64 0, i32 2
  %19 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::RegExpCharacterClass", %"class.v8::internal::RegExpCharacterClass"* %1, i64 0, i32 1
  %21 = call %"class.v8::internal::ZoneList.0"* @_ZN2v88internal12CharacterSet6rangesEPNS0_4ZoneE(%"class.v8::internal::CharacterSet"* %20, %"class.v8::internal::Zone"* %19) #10
  %22 = getelementptr inbounds %"class.v8::internal::ZoneList.0", %"class.v8::internal::ZoneList.0"* %21, i64 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %14
  %26 = bitcast %"struct.v8::internal::AsUC32"* %4 to i8*
  %27 = getelementptr inbounds %"struct.v8::internal::AsUC32", %"struct.v8::internal::AsUC32"* %4, i64 0, i32 0
  %28 = bitcast %"struct.v8::internal::AsUC32"* %5 to i8*
  %29 = getelementptr inbounds %"struct.v8::internal::AsUC32", %"struct.v8::internal::AsUC32"* %5, i64 0, i32 0
  br label %33

30:                                               ; preds = %57, %14
  %31 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %15, align 8
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %31, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 1) #10
  ret i8* null

33:                                               ; preds = %25, %57
  %34 = phi i64 [ 0, %25 ], [ %58, %57 ]
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %33
  %37 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %15, align 8
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %37, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #10
  br label %39

39:                                               ; preds = %33, %36
  %40 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %18, align 8
  %41 = call %"class.v8::internal::ZoneList.0"* @_ZN2v88internal12CharacterSet6rangesEPNS0_4ZoneE(%"class.v8::internal::CharacterSet"* %20, %"class.v8::internal::Zone"* %40) #10
  %42 = getelementptr inbounds %"class.v8::internal::ZoneList.0", %"class.v8::internal::ZoneList.0"* %41, i64 0, i32 0
  %43 = load %"class.v8::internal::CharacterRange"*, %"class.v8::internal::CharacterRange"** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::CharacterRange", %"class.v8::internal::CharacterRange"* %43, i64 %34
  %45 = bitcast %"class.v8::internal::CharacterRange"* %44 to i64*
  %46 = load i64, i64* %45, align 4
  %47 = trunc i64 %46 to i32
  %48 = lshr i64 %46, 32
  %49 = trunc i64 %48 to i32
  %50 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %15, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #10
  store i32 %47, i32* %27, align 4
  %51 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_6AsUC32E(%"class.std::__1::basic_ostream"* dereferenceable(160) %50, %"struct.v8::internal::AsUC32"* nonnull dereferenceable(4) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #10
  %52 = icmp eq i32 %47, %49
  br i1 %52, label %57, label %53

53:                                               ; preds = %39
  %54 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %15, align 8
  %55 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %54, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #10
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #10
  store i32 %49, i32* %29, align 4
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_6AsUC32E(%"class.std::__1::basic_ostream"* dereferenceable(160) %55, %"struct.v8::internal::AsUC32"* nonnull dereferenceable(4) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #10
  br label %57

57:                                               ; preds = %39, %53
  %58 = add nuw nsw i64 %34, 1
  %59 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %18, align 8
  %60 = call %"class.v8::internal::ZoneList.0"* @_ZN2v88internal12CharacterSet6rangesEPNS0_4ZoneE(%"class.v8::internal::CharacterSet"* %20, %"class.v8::internal::Zone"* %59) #10
  %61 = getelementptr inbounds %"class.v8::internal::ZoneList.0", %"class.v8::internal::ZoneList.0"* %60, i64 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = sext i32 %62 to i64
  %64 = icmp slt i64 %58, %63
  br i1 %64, label %33, label %30
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @_ZN2v88internal14RegExpUnparser14VisitAssertionEPNS0_15RegExpAssertionEPv(%"class.v8::internal::RegExpUnparser"* nocapture readonly, %"class.v8::internal::RegExpAssertion"* nocapture readonly, i8* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::RegExpAssertion", %"class.v8::internal::RegExpAssertion"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %30 [
    i32 1, label %6
    i32 3, label %10
    i32 0, label %14
    i32 2, label %18
    i32 4, label %22
    i32 5, label %26
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %0, i64 0, i32 1
  %8 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %7, align 8
  %9 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i64 3) #10
  br label %30

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %0, i64 0, i32 1
  %12 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %11, align 8
  %13 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), i64 3) #10
  br label %30

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %0, i64 0, i32 1
  %16 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %15, align 8
  %17 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), i64 3) #10
  br label %30

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %0, i64 0, i32 1
  %20 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %19, align 8
  %21 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %20, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0), i64 3) #10
  br label %30

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %0, i64 0, i32 1
  %24 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %23, align 8
  %25 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i64 2) #10
  br label %30

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %0, i64 0, i32 1
  %28 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %27, align 8
  %29 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0), i64 2) #10
  br label %30

30:                                               ; preds = %3, %26, %22, %18, %14, %10, %6
  ret i8* null
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @_ZN2v88internal14RegExpUnparser9VisitAtomEPNS0_10RegExpAtomEPv(%"class.v8::internal::RegExpUnparser"* nocapture readonly, %"class.v8::internal::RegExpAtom"* nocapture readonly, i8* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.v8::internal::AsUC16", align 2
  %5 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %0, i64 0, i32 1
  %6 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %5, align 8
  %7 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0), i64 1) #10
  %8 = getelementptr inbounds %"class.v8::internal::RegExpAtom", %"class.v8::internal::RegExpAtom"* %1, i64 0, i32 1, i32 0
  %9 = load i16*, i16** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::RegExpAtom", %"class.v8::internal::RegExpAtom"* %1, i64 0, i32 1, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  %13 = icmp sgt i32 %12, 0
  %14 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %5, align 8
  br i1 %13, label %15, label %19

15:                                               ; preds = %3
  %16 = bitcast %"struct.v8::internal::AsUC16"* %4 to i8*
  %17 = getelementptr inbounds %"struct.v8::internal::AsUC16", %"struct.v8::internal::AsUC16"* %4, i64 0, i32 0
  %18 = and i64 %11, 4294967295
  br label %22

19:                                               ; preds = %22, %3
  %20 = phi %"class.std::__1::basic_ostream"* [ %14, %3 ], [ %29, %22 ]
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %20, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0), i64 1) #10
  ret i8* null

22:                                               ; preds = %22, %15
  %23 = phi i64 [ 0, %15 ], [ %28, %22 ]
  %24 = phi %"class.std::__1::basic_ostream"* [ %14, %15 ], [ %29, %22 ]
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %16) #10
  %25 = getelementptr inbounds i16, i16* %9, i64 %23
  %26 = load i16, i16* %25, align 2
  store i16 %26, i16* %17, align 2
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_6AsUC16E(%"class.std::__1::basic_ostream"* dereferenceable(160) %24, %"struct.v8::internal::AsUC16"* nonnull dereferenceable(2) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %16) #10
  %28 = add nuw nsw i64 %23, 1
  %29 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %5, align 8
  %30 = icmp eq i64 %28, %18
  br i1 %30, label %19, label %22
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_6AsUC16E(%"class.std::__1::basic_ostream"* dereferenceable(160), %"struct.v8::internal::AsUC16"* dereferenceable(2)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @_ZN2v88internal14RegExpUnparser9VisitTextEPNS0_10RegExpTextEPv(%"class.v8::internal::RegExpUnparser"*, %"class.v8::internal::RegExpText"* nocapture readonly, i8*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::RegExpText", %"class.v8::internal::RegExpText"* %1, i64 0, i32 1
  %5 = getelementptr inbounds %"class.v8::internal::RegExpText", %"class.v8::internal::RegExpText"* %1, i64 0, i32 1, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::ZoneList.2", %"class.v8::internal::ZoneList.2"* %4, i64 0, i32 0
  %10 = load %"class.v8::internal::TextElement"*, %"class.v8::internal::TextElement"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::TextElement", %"class.v8::internal::TextElement"* %10, i64 0, i32 2
  %12 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %0, i64 0, i32 0
  %14 = bitcast %"class.v8::internal::RegExpTree"* %12 to i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)***
  %15 = load i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)**, i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)*** %14, align 8
  %16 = getelementptr inbounds i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)*, i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)** %15, i64 2
  %17 = load i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)*, i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)** %16, align 8
  %18 = tail call i8* %17(%"class.v8::internal::RegExpTree"* %12, %"class.v8::internal::RegExpVisitor"* %13, i8* %2) #10
  br label %49

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %0, i64 0, i32 1
  %21 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %20, align 8
  %22 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i64 0, i64 0), i64 2) #10
  %23 = load i32, i32* %5, align 4
  %24 = icmp sgt i32 %23, 0
  %25 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %20, align 8
  br i1 %24, label %26, label %29

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.v8::internal::ZoneList.2", %"class.v8::internal::ZoneList.2"* %4, i64 0, i32 0
  %28 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %0, i64 0, i32 0
  br label %32

29:                                               ; preds = %32, %19
  %30 = phi %"class.std::__1::basic_ostream"* [ %25, %19 ], [ %48, %32 ]
  %31 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %30, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1) #10
  br label %49

32:                                               ; preds = %26, %32
  %33 = phi i64 [ 0, %26 ], [ %44, %32 ]
  %34 = phi %"class.std::__1::basic_ostream"* [ %25, %26 ], [ %48, %32 ]
  %35 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %34, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #10
  %36 = load %"class.v8::internal::TextElement"*, %"class.v8::internal::TextElement"** %27, align 8
  %37 = getelementptr inbounds %"class.v8::internal::TextElement", %"class.v8::internal::TextElement"* %36, i64 %33, i32 2
  %38 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %37, align 8
  %39 = bitcast %"class.v8::internal::RegExpTree"* %38 to i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)***
  %40 = load i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)**, i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)*** %39, align 8
  %41 = getelementptr inbounds i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)*, i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)** %40, i64 2
  %42 = load i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)*, i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)** %41, align 8
  %43 = tail call i8* %42(%"class.v8::internal::RegExpTree"* %38, %"class.v8::internal::RegExpVisitor"* %28, i8* %2) #10
  %44 = add nuw nsw i64 %33, 1
  %45 = load i32, i32* %5, align 4
  %46 = sext i32 %45 to i64
  %47 = icmp slt i64 %44, %46
  %48 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %20, align 8
  br i1 %47, label %32, label %29

49:                                               ; preds = %29, %8
  ret i8* null
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @_ZN2v88internal14RegExpUnparser15VisitQuantifierEPNS0_16RegExpQuantifierEPv(%"class.v8::internal::RegExpUnparser"*, %"class.v8::internal::RegExpQuantifier"* nocapture readonly, i8*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %0, i64 0, i32 1
  %5 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %4, align 8
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i64 0, i64 0), i64 3) #10
  %7 = getelementptr inbounds %"class.v8::internal::RegExpQuantifier", %"class.v8::internal::RegExpQuantifier"* %1, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %6, i32 %8) #10
  %10 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #10
  %11 = getelementptr inbounds %"class.v8::internal::RegExpQuantifier", %"class.v8::internal::RegExpQuantifier"* %1, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 2147483647
  %14 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %4, align 8
  br i1 %13, label %15, label %17

15:                                               ; preds = %3
  %16 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %14, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i64 0, i64 0), i64 2) #10
  br label %20

17:                                               ; preds = %3
  %18 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %14, i32 %12) #10
  %19 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #10
  br label %20

20:                                               ; preds = %17, %15
  %21 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %4, align 8
  %22 = getelementptr inbounds %"class.v8::internal::RegExpQuantifier", %"class.v8::internal::RegExpQuantifier"* %1, i64 0, i32 6
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  %25 = icmp eq i32 %23, 2
  %26 = select i1 %25, [3 x i8]* @.str.19, [3 x i8]* @.str.20
  %27 = select i1 %24, [3 x i8]* @.str.18, [3 x i8]* %26
  %28 = getelementptr inbounds [3 x i8], [3 x i8]* %27, i64 0, i64 0
  %29 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %21, i8* nonnull %28, i64 2) #10
  %30 = getelementptr inbounds %"class.v8::internal::RegExpQuantifier", %"class.v8::internal::RegExpQuantifier"* %1, i64 0, i32 1
  %31 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %0, i64 0, i32 0
  %33 = bitcast %"class.v8::internal::RegExpTree"* %31 to i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)***
  %34 = load i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)**, i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)*** %33, align 8
  %35 = getelementptr inbounds i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)*, i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)** %34, i64 2
  %36 = load i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)*, i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)** %35, align 8
  %37 = tail call i8* %36(%"class.v8::internal::RegExpTree"* %31, %"class.v8::internal::RegExpVisitor"* %32, i8* %2) #10
  %38 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %4, align 8
  %39 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1) #10
  ret i8* null
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @_ZN2v88internal14RegExpUnparser12VisitCaptureEPNS0_13RegExpCaptureEPv(%"class.v8::internal::RegExpUnparser"*, %"class.v8::internal::RegExpCapture"* nocapture readonly, i8*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %0, i64 0, i32 1
  %5 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %4, align 8
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0), i64 3) #10
  %7 = getelementptr inbounds %"class.v8::internal::RegExpCapture", %"class.v8::internal::RegExpCapture"* %1, i64 0, i32 1
  %8 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %0, i64 0, i32 0
  %10 = bitcast %"class.v8::internal::RegExpTree"* %8 to i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)***
  %11 = load i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)**, i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)*** %10, align 8
  %12 = getelementptr inbounds i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)*, i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)** %11, i64 2
  %13 = load i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)*, i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)** %12, align 8
  %14 = tail call i8* %13(%"class.v8::internal::RegExpTree"* %8, %"class.v8::internal::RegExpVisitor"* %9, i8* %2) #10
  %15 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %4, align 8
  %16 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1) #10
  ret i8* null
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @_ZN2v88internal14RegExpUnparser10VisitGroupEPNS0_11RegExpGroupEPv(%"class.v8::internal::RegExpUnparser"*, %"class.v8::internal::RegExpGroup"* nocapture readonly, i8*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %0, i64 0, i32 1
  %5 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %4, align 8
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0), i64 4) #10
  %7 = getelementptr inbounds %"class.v8::internal::RegExpGroup", %"class.v8::internal::RegExpGroup"* %1, i64 0, i32 1
  %8 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %0, i64 0, i32 0
  %10 = bitcast %"class.v8::internal::RegExpTree"* %8 to i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)***
  %11 = load i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)**, i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)*** %10, align 8
  %12 = getelementptr inbounds i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)*, i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)** %11, i64 2
  %13 = load i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)*, i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)** %12, align 8
  %14 = tail call i8* %13(%"class.v8::internal::RegExpTree"* %8, %"class.v8::internal::RegExpVisitor"* %9, i8* %2) #10
  %15 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %4, align 8
  %16 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1) #10
  ret i8* null
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @_ZN2v88internal14RegExpUnparser15VisitLookaroundEPNS0_16RegExpLookaroundEPv(%"class.v8::internal::RegExpUnparser"*, %"class.v8::internal::RegExpLookaround"* nocapture readonly, i8*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %0, i64 0, i32 1
  %5 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %4, align 8
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 1) #10
  %7 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %4, align 8
  %8 = getelementptr inbounds %"class.v8::internal::RegExpLookaround", %"class.v8::internal::RegExpLookaround"* %1, i64 0, i32 5
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  %11 = select i1 %10, [3 x i8]* @.str.24, [3 x i8]* @.str.25
  %12 = getelementptr inbounds [3 x i8], [3 x i8]* %11, i64 0, i64 0
  %13 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %7, i8* nonnull %12, i64 2) #10
  %14 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %4, align 8
  %15 = getelementptr inbounds %"class.v8::internal::RegExpLookaround", %"class.v8::internal::RegExpLookaround"* %1, i64 0, i32 2
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  %18 = select i1 %17, [4 x i8]* @.str.27, [4 x i8]* @.str.26
  %19 = getelementptr inbounds [4 x i8], [4 x i8]* %18, i64 0, i64 0
  %20 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %14, i8* nonnull %19, i64 3) #10
  %21 = getelementptr inbounds %"class.v8::internal::RegExpLookaround", %"class.v8::internal::RegExpLookaround"* %1, i64 0, i32 1
  %22 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %0, i64 0, i32 0
  %24 = bitcast %"class.v8::internal::RegExpTree"* %22 to i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)***
  %25 = load i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)**, i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)*** %24, align 8
  %26 = getelementptr inbounds i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)*, i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)** %25, i64 2
  %27 = load i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)*, i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)** %26, align 8
  %28 = tail call i8* %27(%"class.v8::internal::RegExpTree"* %22, %"class.v8::internal::RegExpVisitor"* %23, i8* %2) #10
  %29 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %4, align 8
  %30 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1) #10
  ret i8* null
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @_ZN2v88internal14RegExpUnparser18VisitBackReferenceEPNS0_19RegExpBackReferenceEPv(%"class.v8::internal::RegExpUnparser"* nocapture readonly, %"class.v8::internal::RegExpBackReference"* nocapture readonly, i8* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %0, i64 0, i32 1
  %5 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %4, align 8
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i64 0, i64 0), i64 4) #10
  %7 = getelementptr inbounds %"class.v8::internal::RegExpBackReference", %"class.v8::internal::RegExpBackReference"* %1, i64 0, i32 1
  %8 = load %"class.v8::internal::RegExpCapture"*, %"class.v8::internal::RegExpCapture"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::RegExpCapture", %"class.v8::internal::RegExpCapture"* %8, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %6, i32 %10) #10
  %12 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1) #10
  ret i8* null
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @_ZN2v88internal14RegExpUnparser10VisitEmptyEPNS0_11RegExpEmptyEPv(%"class.v8::internal::RegExpUnparser"* nocapture readonly, %"class.v8::internal::RegExpEmpty"* nocapture readnone, i8* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %0, i64 0, i32 1
  %6 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %5, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4)
  store i8 37, i8* %4, align 1
  %7 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %6, i8* nonnull %4, i64 1) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4)
  ret i8* null
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal10RegExpTree5PrintERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEEPNS0_4ZoneE(%"class.v8::internal::RegExpTree"*, %"class.std::__1::basic_ostream"* returned dereferenceable(160), %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::RegExpUnparser", align 8
  %5 = bitcast %"class.v8::internal::RegExpUnparser"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %4, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN2v88internal14RegExpUnparserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %4, i64 0, i32 1
  store %"class.std::__1::basic_ostream"* %1, %"class.std::__1::basic_ostream"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %4, i64 0, i32 2
  store %"class.v8::internal::Zone"* %2, %"class.v8::internal::Zone"** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::RegExpUnparser", %"class.v8::internal::RegExpUnparser"* %4, i64 0, i32 0
  %10 = bitcast %"class.v8::internal::RegExpTree"* %0 to i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)***
  %11 = load i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)**, i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)*** %10, align 8
  %12 = getelementptr inbounds i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)*, i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)** %11, i64 2
  %13 = load i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)*, i8* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpVisitor"*, i8*)** %12, align 8
  %14 = call i8* %13(%"class.v8::internal::RegExpTree"* %0, %"class.v8::internal::RegExpVisitor"* nonnull %9, i8* null) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  ret %"class.std::__1::basic_ostream"* %1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17RegExpDisjunctionC2EPNS0_8ZoneListIPNS0_10RegExpTreeEEE(%"class.v8::internal::RegExpDisjunction"* nocapture, %"class.v8::internal::ZoneList"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::RegExpDisjunction", %"class.v8::internal::RegExpDisjunction"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [37 x i8*] }, { [37 x i8*] }* @_ZTVN2v88internal17RegExpDisjunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::RegExpDisjunction", %"class.v8::internal::RegExpDisjunction"* %0, i64 0, i32 1
  store %"class.v8::internal::ZoneList"* %1, %"class.v8::internal::ZoneList"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::ZoneList", %"class.v8::internal::ZoneList"* %1, i64 0, i32 0
  %6 = load %"class.v8::internal::RegExpTree"**, %"class.v8::internal::RegExpTree"*** %5, align 8
  %7 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %6, align 8
  %8 = bitcast %"class.v8::internal::RegExpTree"* %7 to i32 (%"class.v8::internal::RegExpTree"*)***
  %9 = load i32 (%"class.v8::internal::RegExpTree"*)**, i32 (%"class.v8::internal::RegExpTree"*)*** %8, align 8
  %10 = getelementptr inbounds i32 (%"class.v8::internal::RegExpTree"*)*, i32 (%"class.v8::internal::RegExpTree"*)** %9, i64 7
  %11 = load i32 (%"class.v8::internal::RegExpTree"*)*, i32 (%"class.v8::internal::RegExpTree"*)** %10, align 8
  %12 = tail call i32 %11(%"class.v8::internal::RegExpTree"* %7) #10
  %13 = getelementptr inbounds %"class.v8::internal::RegExpDisjunction", %"class.v8::internal::RegExpDisjunction"* %0, i64 0, i32 2
  store i32 %12, i32* %13, align 8
  %14 = load i32 (%"class.v8::internal::RegExpTree"*)**, i32 (%"class.v8::internal::RegExpTree"*)*** %8, align 8
  %15 = getelementptr inbounds i32 (%"class.v8::internal::RegExpTree"*)*, i32 (%"class.v8::internal::RegExpTree"*)** %14, i64 8
  %16 = load i32 (%"class.v8::internal::RegExpTree"*)*, i32 (%"class.v8::internal::RegExpTree"*)** %15, align 8
  %17 = tail call i32 %16(%"class.v8::internal::RegExpTree"* %7) #10
  %18 = getelementptr inbounds %"class.v8::internal::RegExpDisjunction", %"class.v8::internal::RegExpDisjunction"* %0, i64 0, i32 3
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds %"class.v8::internal::ZoneList", %"class.v8::internal::ZoneList"* %1, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, 1
  br i1 %21, label %23, label %22

22:                                               ; preds = %23, %2
  ret void

23:                                               ; preds = %2, %23
  %24 = phi i64 [ %43, %23 ], [ 1, %2 ]
  %25 = load %"class.v8::internal::RegExpTree"**, %"class.v8::internal::RegExpTree"*** %5, align 8
  %26 = getelementptr inbounds %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %25, i64 %24
  %27 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %26, align 8
  %28 = bitcast %"class.v8::internal::RegExpTree"* %27 to i32 (%"class.v8::internal::RegExpTree"*)***
  %29 = load i32 (%"class.v8::internal::RegExpTree"*)**, i32 (%"class.v8::internal::RegExpTree"*)*** %28, align 8
  %30 = getelementptr inbounds i32 (%"class.v8::internal::RegExpTree"*)*, i32 (%"class.v8::internal::RegExpTree"*)** %29, i64 7
  %31 = load i32 (%"class.v8::internal::RegExpTree"*)*, i32 (%"class.v8::internal::RegExpTree"*)** %30, align 8
  %32 = tail call i32 %31(%"class.v8::internal::RegExpTree"* %27) #10
  %33 = load i32, i32* %13, align 4
  %34 = icmp slt i32 %32, %33
  %35 = select i1 %34, i32 %32, i32 %33
  store i32 %35, i32* %13, align 8
  %36 = load i32 (%"class.v8::internal::RegExpTree"*)**, i32 (%"class.v8::internal::RegExpTree"*)*** %28, align 8
  %37 = getelementptr inbounds i32 (%"class.v8::internal::RegExpTree"*)*, i32 (%"class.v8::internal::RegExpTree"*)** %36, i64 8
  %38 = load i32 (%"class.v8::internal::RegExpTree"*)*, i32 (%"class.v8::internal::RegExpTree"*)** %37, align 8
  %39 = tail call i32 %38(%"class.v8::internal::RegExpTree"* %27) #10
  %40 = load i32, i32* %18, align 4
  %41 = icmp slt i32 %40, %39
  %42 = select i1 %41, i32 %39, i32 %40
  store i32 %42, i32* %18, align 4
  %43 = add nuw nsw i64 %24, 1
  %44 = load i32, i32* %19, align 4
  %45 = sext i32 %44 to i64
  %46 = icmp slt i64 %43, %45
  br i1 %46, label %23, label %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17RegExpAlternativeC2EPNS0_8ZoneListIPNS0_10RegExpTreeEEE(%"class.v8::internal::RegExpAlternative"* nocapture, %"class.v8::internal::ZoneList"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::RegExpAlternative", %"class.v8::internal::RegExpAlternative"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [37 x i8*] }, { [37 x i8*] }* @_ZTVN2v88internal17RegExpAlternativeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::RegExpAlternative", %"class.v8::internal::RegExpAlternative"* %0, i64 0, i32 1
  store %"class.v8::internal::ZoneList"* %1, %"class.v8::internal::ZoneList"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::RegExpAlternative", %"class.v8::internal::RegExpAlternative"* %0, i64 0, i32 2
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::RegExpAlternative", %"class.v8::internal::RegExpAlternative"* %0, i64 0, i32 3
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %"class.v8::internal::ZoneList", %"class.v8::internal::ZoneList"* %1, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::ZoneList", %"class.v8::internal::ZoneList"* %1, i64 0, i32 0
  br label %13

12:                                               ; preds = %13, %2
  ret void

13:                                               ; preds = %10, %13
  %14 = phi i64 [ 0, %10 ], [ %37, %13 ]
  %15 = load %"class.v8::internal::RegExpTree"**, %"class.v8::internal::RegExpTree"*** %11, align 8
  %16 = getelementptr inbounds %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %15, i64 %14
  %17 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %16, align 8
  %18 = bitcast %"class.v8::internal::RegExpTree"* %17 to i32 (%"class.v8::internal::RegExpTree"*)***
  %19 = load i32 (%"class.v8::internal::RegExpTree"*)**, i32 (%"class.v8::internal::RegExpTree"*)*** %18, align 8
  %20 = getelementptr inbounds i32 (%"class.v8::internal::RegExpTree"*)*, i32 (%"class.v8::internal::RegExpTree"*)** %19, i64 7
  %21 = load i32 (%"class.v8::internal::RegExpTree"*)*, i32 (%"class.v8::internal::RegExpTree"*)** %20, align 8
  %22 = tail call i32 %21(%"class.v8::internal::RegExpTree"* %17) #10
  %23 = load i32, i32* %5, align 8
  %24 = sub nsw i32 2147483647, %23
  %25 = icmp slt i32 %24, %22
  %26 = add nsw i32 %23, %22
  %27 = select i1 %25, i32 2147483647, i32 %26
  store i32 %27, i32* %5, align 8
  %28 = load i32 (%"class.v8::internal::RegExpTree"*)**, i32 (%"class.v8::internal::RegExpTree"*)*** %18, align 8
  %29 = getelementptr inbounds i32 (%"class.v8::internal::RegExpTree"*)*, i32 (%"class.v8::internal::RegExpTree"*)** %28, i64 8
  %30 = load i32 (%"class.v8::internal::RegExpTree"*)*, i32 (%"class.v8::internal::RegExpTree"*)** %29, align 8
  %31 = tail call i32 %30(%"class.v8::internal::RegExpTree"* %17) #10
  %32 = load i32, i32* %6, align 4
  %33 = sub nsw i32 2147483647, %32
  %34 = icmp slt i32 %33, %31
  %35 = add nsw i32 %32, %31
  %36 = select i1 %34, i32 2147483647, i32 %35
  store i32 %36, i32* %6, align 4
  %37 = add nuw nsw i64 %14, 1
  %38 = load i32, i32* %7, align 4
  %39 = sext i32 %38 to i64
  %40 = icmp slt i64 %37, %39
  br i1 %40, label %13, label %12
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15RegExpAssertionD0Ev(%"class.v8::internal::RegExpAssertion"*) unnamed_addr #5 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i64 0, i64 0)) #11
  unreachable
}

declare %"class.v8::internal::RegExpNode"* @_ZN2v88internal15RegExpAssertion6ToNodeEPNS0_14RegExpCompilerEPNS0_10RegExpNodeE(%"class.v8::internal::RegExpAssertion"*, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::RegExpNode"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal10RegExpTree13IsTextElementEv(%"class.v8::internal::RegExpTree"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal15RegExpAssertion9min_matchEv(%"class.v8::internal::RegExpAssertion"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal15RegExpAssertion9max_matchEv(%"class.v8::internal::RegExpAssertion"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal10RegExpTree16CaptureRegistersEv(%"class.v8::internal::RegExpTree"*) unnamed_addr #0 comdat align 2 {
  ret i64 -4294967297
}

declare void @_ZN2v88internal10RegExpTree12AppendToTextEPNS0_10RegExpTextEPNS0_4ZoneE(%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpText"*, %"class.v8::internal::Zone"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal20RegExpCharacterClassD0Ev(%"class.v8::internal::RegExpCharacterClass"*) unnamed_addr #5 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i64 0, i64 0)) #11
  unreachable
}

declare %"class.v8::internal::RegExpNode"* @_ZN2v88internal20RegExpCharacterClass6ToNodeEPNS0_14RegExpCompilerEPNS0_10RegExpNodeE(%"class.v8::internal::RegExpCharacterClass"*, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::RegExpNode"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal20RegExpCharacterClass13IsTextElementEv(%"class.v8::internal::RegExpCharacterClass"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal10RegExpTree17IsAnchoredAtStartEv(%"class.v8::internal::RegExpTree"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal10RegExpTree15IsAnchoredAtEndEv(%"class.v8::internal::RegExpTree"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal20RegExpCharacterClass9min_matchEv(%"class.v8::internal::RegExpCharacterClass"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal20RegExpCharacterClass9max_matchEv(%"class.v8::internal::RegExpCharacterClass"*) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

declare void @_ZN2v88internal20RegExpCharacterClass12AppendToTextEPNS0_10RegExpTextEPNS0_4ZoneE(%"class.v8::internal::RegExpCharacterClass"*, %"class.v8::internal::RegExpText"*, %"class.v8::internal::Zone"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal10RegExpAtomD0Ev(%"class.v8::internal::RegExpAtom"*) unnamed_addr #5 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i64 0, i64 0)) #11
  unreachable
}

declare %"class.v8::internal::RegExpNode"* @_ZN2v88internal10RegExpAtom6ToNodeEPNS0_14RegExpCompilerEPNS0_10RegExpNodeE(%"class.v8::internal::RegExpAtom"*, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::RegExpNode"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal10RegExpAtom13IsTextElementEv(%"class.v8::internal::RegExpAtom"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal10RegExpAtom9min_matchEv(%"class.v8::internal::RegExpAtom"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpAtom", %"class.v8::internal::RegExpAtom"* %0, i64 0, i32 1, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal10RegExpAtom9max_matchEv(%"class.v8::internal::RegExpAtom"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpAtom", %"class.v8::internal::RegExpAtom"* %0, i64 0, i32 1, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  ret i32 %4
}

declare void @_ZN2v88internal10RegExpAtom12AppendToTextEPNS0_10RegExpTextEPNS0_4ZoneE(%"class.v8::internal::RegExpAtom"*, %"class.v8::internal::RegExpText"*, %"class.v8::internal::Zone"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal10RegExpTextD0Ev(%"class.v8::internal::RegExpText"*) unnamed_addr #5 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i64 0, i64 0)) #11
  unreachable
}

declare %"class.v8::internal::RegExpNode"* @_ZN2v88internal10RegExpText6ToNodeEPNS0_14RegExpCompilerEPNS0_10RegExpNodeE(%"class.v8::internal::RegExpText"*, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::RegExpNode"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal10RegExpText13IsTextElementEv(%"class.v8::internal::RegExpText"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal10RegExpText9min_matchEv(%"class.v8::internal::RegExpText"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpText", %"class.v8::internal::RegExpText"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal10RegExpText9max_matchEv(%"class.v8::internal::RegExpText"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpText", %"class.v8::internal::RegExpText"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

declare void @_ZN2v88internal10RegExpText12AppendToTextEPS1_PNS0_4ZoneE(%"class.v8::internal::RegExpText"*, %"class.v8::internal::RegExpText"*, %"class.v8::internal::Zone"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal16RegExpQuantifierD0Ev(%"class.v8::internal::RegExpQuantifier"*) unnamed_addr #5 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i64 0, i64 0)) #11
  unreachable
}

declare %"class.v8::internal::RegExpNode"* @_ZN2v88internal16RegExpQuantifier6ToNodeEPNS0_14RegExpCompilerEPNS0_10RegExpNodeE(%"class.v8::internal::RegExpQuantifier"*, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::RegExpNode"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal16RegExpQuantifier9min_matchEv(%"class.v8::internal::RegExpQuantifier"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpQuantifier", %"class.v8::internal::RegExpQuantifier"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal16RegExpQuantifier9max_matchEv(%"class.v8::internal::RegExpQuantifier"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpQuantifier", %"class.v8::internal::RegExpQuantifier"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13RegExpCaptureD0Ev(%"class.v8::internal::RegExpCapture"*) unnamed_addr #5 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i64 0, i64 0)) #11
  unreachable
}

declare %"class.v8::internal::RegExpNode"* @_ZN2v88internal13RegExpCapture6ToNodeEPNS0_14RegExpCompilerEPNS0_10RegExpNodeE(%"class.v8::internal::RegExpCapture"*, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::RegExpNode"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal13RegExpCapture9min_matchEv(%"class.v8::internal::RegExpCapture"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpCapture", %"class.v8::internal::RegExpCapture"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal13RegExpCapture9max_matchEv(%"class.v8::internal::RegExpCapture"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpCapture", %"class.v8::internal::RegExpCapture"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RegExpGroupD0Ev(%"class.v8::internal::RegExpGroup"*) unnamed_addr #5 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i64 0, i64 0)) #11
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::RegExpNode"* @_ZN2v88internal11RegExpGroup6ToNodeEPNS0_14RegExpCompilerEPNS0_10RegExpNodeE(%"class.v8::internal::RegExpGroup"*, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::RegExpNode"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::RegExpGroup", %"class.v8::internal::RegExpGroup"* %0, i64 0, i32 1
  %5 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %4, align 8
  %6 = bitcast %"class.v8::internal::RegExpTree"* %5 to %"class.v8::internal::RegExpNode"* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::RegExpNode"*)***
  %7 = load %"class.v8::internal::RegExpNode"* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::RegExpNode"*)**, %"class.v8::internal::RegExpNode"* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::RegExpNode"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::RegExpNode"* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::RegExpNode"*)*, %"class.v8::internal::RegExpNode"* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::RegExpNode"*)** %7, i64 3
  %9 = load %"class.v8::internal::RegExpNode"* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::RegExpNode"*)*, %"class.v8::internal::RegExpNode"* (%"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::RegExpNode"*)** %8, align 8
  %10 = tail call %"class.v8::internal::RegExpNode"* %9(%"class.v8::internal::RegExpTree"* %5, %"class.v8::internal::RegExpCompiler"* %1, %"class.v8::internal::RegExpNode"* %2) #10
  ret %"class.v8::internal::RegExpNode"* %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal11RegExpGroup17IsAnchoredAtStartEv(%"class.v8::internal::RegExpGroup"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpGroup", %"class.v8::internal::RegExpGroup"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %2, align 8
  %4 = bitcast %"class.v8::internal::RegExpTree"* %3 to i1 (%"class.v8::internal::RegExpTree"*)***
  %5 = load i1 (%"class.v8::internal::RegExpTree"*)**, i1 (%"class.v8::internal::RegExpTree"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.v8::internal::RegExpTree"*)*, i1 (%"class.v8::internal::RegExpTree"*)** %5, i64 5
  %7 = load i1 (%"class.v8::internal::RegExpTree"*)*, i1 (%"class.v8::internal::RegExpTree"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.v8::internal::RegExpTree"* %3) #10
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal11RegExpGroup15IsAnchoredAtEndEv(%"class.v8::internal::RegExpGroup"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpGroup", %"class.v8::internal::RegExpGroup"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %2, align 8
  %4 = bitcast %"class.v8::internal::RegExpTree"* %3 to i1 (%"class.v8::internal::RegExpTree"*)***
  %5 = load i1 (%"class.v8::internal::RegExpTree"*)**, i1 (%"class.v8::internal::RegExpTree"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.v8::internal::RegExpTree"*)*, i1 (%"class.v8::internal::RegExpTree"*)** %5, i64 6
  %7 = load i1 (%"class.v8::internal::RegExpTree"*)*, i1 (%"class.v8::internal::RegExpTree"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.v8::internal::RegExpTree"* %3) #10
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal11RegExpGroup9min_matchEv(%"class.v8::internal::RegExpGroup"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpGroup", %"class.v8::internal::RegExpGroup"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal11RegExpGroup9max_matchEv(%"class.v8::internal::RegExpGroup"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpGroup", %"class.v8::internal::RegExpGroup"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal11RegExpGroup16CaptureRegistersEv(%"class.v8::internal::RegExpGroup"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpGroup", %"class.v8::internal::RegExpGroup"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %2, align 8
  %4 = bitcast %"class.v8::internal::RegExpTree"* %3 to i64 (%"class.v8::internal::RegExpTree"*)***
  %5 = load i64 (%"class.v8::internal::RegExpTree"*)**, i64 (%"class.v8::internal::RegExpTree"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.v8::internal::RegExpTree"*)*, i64 (%"class.v8::internal::RegExpTree"*)** %5, i64 9
  %7 = load i64 (%"class.v8::internal::RegExpTree"*)*, i64 (%"class.v8::internal::RegExpTree"*)** %6, align 8
  %8 = tail call i64 %7(%"class.v8::internal::RegExpTree"* %3) #10
  ret i64 %8
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal16RegExpLookaroundD0Ev(%"class.v8::internal::RegExpLookaround"*) unnamed_addr #5 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i64 0, i64 0)) #11
  unreachable
}

declare %"class.v8::internal::RegExpNode"* @_ZN2v88internal16RegExpLookaround6ToNodeEPNS0_14RegExpCompilerEPNS0_10RegExpNodeE(%"class.v8::internal::RegExpLookaround"*, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::RegExpNode"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal16RegExpLookaround9min_matchEv(%"class.v8::internal::RegExpLookaround"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal16RegExpLookaround9max_matchEv(%"class.v8::internal::RegExpLookaround"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal19RegExpBackReferenceD0Ev(%"class.v8::internal::RegExpBackReference"*) unnamed_addr #5 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i64 0, i64 0)) #11
  unreachable
}

declare %"class.v8::internal::RegExpNode"* @_ZN2v88internal19RegExpBackReference6ToNodeEPNS0_14RegExpCompilerEPNS0_10RegExpNodeE(%"class.v8::internal::RegExpBackReference"*, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::RegExpNode"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal19RegExpBackReference9min_matchEv(%"class.v8::internal::RegExpBackReference"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal19RegExpBackReference9max_matchEv(%"class.v8::internal::RegExpBackReference"*) unnamed_addr #0 comdat align 2 {
  ret i32 2147483647
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal17RegExpDisjunctionD0Ev(%"class.v8::internal::RegExpDisjunction"*) unnamed_addr #5 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i64 0, i64 0)) #11
  unreachable
}

declare %"class.v8::internal::RegExpNode"* @_ZN2v88internal17RegExpDisjunction6ToNodeEPNS0_14RegExpCompilerEPNS0_10RegExpNodeE(%"class.v8::internal::RegExpDisjunction"*, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::RegExpNode"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal17RegExpDisjunction9min_matchEv(%"class.v8::internal::RegExpDisjunction"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpDisjunction", %"class.v8::internal::RegExpDisjunction"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal17RegExpDisjunction9max_matchEv(%"class.v8::internal::RegExpDisjunction"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpDisjunction", %"class.v8::internal::RegExpDisjunction"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal10RegExpTreeD2Ev(%"class.v8::internal::RegExpTree"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal17RegExpAlternativeD0Ev(%"class.v8::internal::RegExpAlternative"*) unnamed_addr #5 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i64 0, i64 0)) #11
  unreachable
}

declare %"class.v8::internal::RegExpNode"* @_ZN2v88internal17RegExpAlternative6ToNodeEPNS0_14RegExpCompilerEPNS0_10RegExpNodeE(%"class.v8::internal::RegExpAlternative"*, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::RegExpNode"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal17RegExpAlternative9min_matchEv(%"class.v8::internal::RegExpAlternative"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpAlternative", %"class.v8::internal::RegExpAlternative"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal17RegExpAlternative9max_matchEv(%"class.v8::internal::RegExpAlternative"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpAlternative", %"class.v8::internal::RegExpAlternative"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RegExpEmptyD0Ev(%"class.v8::internal::RegExpEmpty"*) unnamed_addr #5 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i64 0, i64 0)) #11
  unreachable
}

declare %"class.v8::internal::RegExpNode"* @_ZN2v88internal11RegExpEmpty6ToNodeEPNS0_14RegExpCompilerEPNS0_10RegExpNodeE(%"class.v8::internal::RegExpEmpty"*, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::RegExpNode"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal11RegExpEmpty9min_matchEv(%"class.v8::internal::RegExpEmpty"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal11RegExpEmpty9max_matchEv(%"class.v8::internal::RegExpEmpty"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14RegExpUnparserD0Ev(%"class.v8::internal::RegExpUnparser"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.v8::internal::RegExpUnparser"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

declare %"class.v8::internal::ZoneList.0"* @_ZN2v88internal12CharacterSet6rangesEPNS0_4ZoneE(%"class.v8::internal::CharacterSet"*, %"class.v8::internal::Zone"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13RegExpVisitorD2Ev(%"class.v8::internal::RegExpVisitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #12
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #10
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %50, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %46
  %65 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %46, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #8

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
