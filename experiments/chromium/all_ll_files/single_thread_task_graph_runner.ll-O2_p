; ModuleID = '../../cc/raster/single_thread_task_graph_runner.cc'
source_filename = "../../cc/raster/single_thread_task_graph_runner.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.cc::SingleThreadTaskGraphRunner" = type <{ %"class.cc::TaskGraphRunner", %"class.base::DelegateSimpleThread::Delegate", %"class.std::__1::unique_ptr", %"class.base::Lock", %"class.cc::TaskGraphWorkQueue", %"class.base::ConditionVariable", %"class.base::ConditionVariable", i8, [7 x i8] }>
%"class.cc::TaskGraphRunner" = type { i32 (...)** }
%"class.base::DelegateSimpleThread::Delegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::SimpleThread"* }
%"class.base::SimpleThread" = type <{ %"class.base::PlatformThread::Delegate", %"class.std::__1::basic_string", %"struct.base::SimpleThread::Options", %"class.base::PlatformThreadHandle", %"class.base::WaitableEvent", i32, i8, i8, [2 x i8] }>
%"class.base::PlatformThread::Delegate" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.base::SimpleThread::Options" = type <{ i64, i32, i8, [3 x i8] }>
%"class.base::PlatformThreadHandle" = type { i64 }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr, i8, [7 x i8] }>
%class.scoped_refptr = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.4" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i64 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.cc::TaskGraphWorkQueue" = type <{ i32 (...)**, %"class.std::__1::map", %"class.std::__1::map.17", i32, [4 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::map.17" = type { %"class.std::__1::__tree.18" }
%"class.std::__1::__tree.18" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.19", %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.base::ConditionVariable" = type <{ %union.pthread_cond_t, %union.pthread_mutex_t*, i8, [7 x i8] }>
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.26, %union.anon.28, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.26 = type { i64 }
%union.anon.28 = type { i64 }
%"class.base::DelegateSimpleThread" = type { %"class.base::SimpleThread.base", %"class.base::DelegateSimpleThread::Delegate"* }
%"class.base::SimpleThread.base" = type <{ %"class.base::PlatformThread::Delegate", %"class.std::__1::basic_string", %"struct.base::SimpleThread::Options", %"class.base::PlatformThreadHandle", %"class.base::WaitableEvent", i32, i8, i8 }>
%"class.cc::NamespaceToken" = type { i32 }
%"struct.cc::TaskGraph" = type { %"class.std::__1::vector", %"class.std::__1::vector.43" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::TaskGraph::Node"*, %"struct.cc::TaskGraph::Node"*, %"class.std::__1::__compressed_pair.38" }
%"struct.cc::TaskGraph::Node" = type { %class.scoped_refptr.36, i16, i16, i32 }
%class.scoped_refptr.36 = type { %"class.cc::Task"* }
%"class.cc::Task" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.37", %"class.cc::TaskState", i64 }
%"class.base::RefCountedThreadSafe.37" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::TaskState" = type { i16 }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.cc::TaskGraph::Node"* }
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.44" }
%"class.std::__1::__vector_base.44" = type { %"struct.cc::TaskGraph::Edge"*, %"struct.cc::TaskGraph::Edge"*, %"class.std::__1::__compressed_pair.45" }
%"struct.cc::TaskGraph::Edge" = type { %"class.cc::Task"*, %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.cc::TaskGraph::Edge"* }
%"struct.cc::TaskGraphWorkQueue::TaskNamespace" = type { %"struct.cc::TaskGraph", %"class.std::__1::map.50", %"class.std::__1::vector.59", %"class.std::__1::vector.66" }
%"class.std::__1::map.50" = type { %"class.std::__1::__tree.51" }
%"class.std::__1::__tree.51" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { %class.scoped_refptr.36*, %class.scoped_refptr.36*, %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %class.scoped_refptr.36* }
%"class.std::__1::vector.66" = type { %"class.std::__1::__vector_base.67" }
%"class.std::__1::__vector_base.67" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.68" }
%"struct.std::__1::pair" = type { i16, %class.scoped_refptr.36 }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.std::__1::pair"* }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.83", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.83" = type { %"class.std::__1::__vector_base.84" }
%"class.std::__1::__vector_base.84" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.85", i64, i64 }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list.96" }
%"class.std::__1::list.96" = type { %"class.std::__1::__list_imp.97" }
%"class.std::__1::__list_imp.97" = type { %"struct.std::__1::__list_node_base.98", %"class.std::__1::__compressed_pair.99" }
%"struct.std::__1::__list_node_base.98" = type { %"struct.std::__1::__list_node_base.98"*, %"struct.std::__1::__list_node_base.98"* }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__tree_node.104" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.105" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type.105" = type { %"struct.std::__1::pair.103" }
%"struct.std::__1::pair.103" = type { %"class.cc::NamespaceToken", %"struct.cc::TaskGraphWorkQueue::TaskNamespace" }
%"struct.cc::TaskGraphWorkQueue::PrioritizedTask" = type <{ %class.scoped_refptr.36, %"struct.cc::TaskGraphWorkQueue::TaskNamespace"*, i16, i16, [4 x i8] }>

$_ZN20trace_event_internal13AddTraceEventImmEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_ = comdat any

@_ZTVN2cc27SingleThreadTaskGraphRunnerE = hidden unnamed_addr constant { [9 x i8*], [5 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::SingleThreadTaskGraphRunner"*)* @_ZN2cc27SingleThreadTaskGraphRunnerD2Ev to i8*), i8* bitcast (void (%"class.cc::SingleThreadTaskGraphRunner"*)* @_ZN2cc27SingleThreadTaskGraphRunnerD0Ev to i8*), i8* bitcast (void (%"class.cc::NamespaceToken"*, %"class.cc::SingleThreadTaskGraphRunner"*)* @_ZN2cc27SingleThreadTaskGraphRunner22GenerateNamespaceTokenEv to i8*), i8* bitcast (void (%"class.cc::SingleThreadTaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"struct.cc::TaskGraph"*)* @_ZN2cc27SingleThreadTaskGraphRunner13ScheduleTasksENS_14NamespaceTokenEPNS_9TaskGraphE to i8*), i8* bitcast (void (%"class.cc::SingleThreadTaskGraphRunner"*, %"class.cc::NamespaceToken"*)* @_ZN2cc27SingleThreadTaskGraphRunner27WaitForTasksToFinishRunningENS_14NamespaceTokenE to i8*), i8* bitcast (void (%"class.cc::SingleThreadTaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.59"*)* @_ZN2cc27SingleThreadTaskGraphRunner21CollectCompletedTasksENS_14NamespaceTokenEPNSt3__16vectorI13scoped_refptrINS_4TaskEENS2_9allocatorIS6_EEEE to i8*), i8* bitcast (void (%"class.cc::SingleThreadTaskGraphRunner"*)* @_ZN2cc27SingleThreadTaskGraphRunner3RunEv to i8*)], [5 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.cc::SingleThreadTaskGraphRunner"*)* @_ZThn8_N2cc27SingleThreadTaskGraphRunnerD1Ev to i8*), i8* bitcast (void (%"class.cc::SingleThreadTaskGraphRunner"*)* @_ZThn8_N2cc27SingleThreadTaskGraphRunnerD0Ev to i8*), i8* bitcast (void (%"class.cc::SingleThreadTaskGraphRunner"*)* @_ZThn8_N2cc27SingleThreadTaskGraphRunner3RunEv to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [43 x i8] c"SingleThreadTaskGraphRunner::ScheduleTasks\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"num_nodes\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"num_edges\00", align 1
@.str.3 = private unnamed_addr constant [57 x i8] c"SingleThreadTaskGraphRunner::WaitForTasksToFinishRunning\00", align 1
@.str.4 = private unnamed_addr constant [51 x i8] c"SingleThreadTaskGraphRunner::CollectCompletedTasks\00", align 1
@.str.5 = private unnamed_addr constant [53 x i8] c"SingleThreadTaskGraphRunner::RunTaskWithLockAcquired\00", align 1

@_ZN2cc27SingleThreadTaskGraphRunnerC1Ev = hidden unnamed_addr alias void (%"class.cc::SingleThreadTaskGraphRunner"*), void (%"class.cc::SingleThreadTaskGraphRunner"*)* @_ZN2cc27SingleThreadTaskGraphRunnerC2Ev
@_ZN2cc27SingleThreadTaskGraphRunnerD1Ev = hidden unnamed_addr alias void (%"class.cc::SingleThreadTaskGraphRunner"*), void (%"class.cc::SingleThreadTaskGraphRunner"*)* @_ZN2cc27SingleThreadTaskGraphRunnerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc27SingleThreadTaskGraphRunnerC2Ev(%"class.cc::SingleThreadTaskGraphRunner"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.cc::SingleThreadTaskGraphRunner"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [5 x i8*] }, { [9 x i8*], [5 x i8*] }* @_ZTVN2cc27SingleThreadTaskGraphRunnerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [5 x i8*] }, { [9 x i8*], [5 x i8*] }* @_ZTVN2cc27SingleThreadTaskGraphRunnerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %5, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %6) #7
  %7 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 4
  tail call void @_ZN2cc18TaskGraphWorkQueueC1Ev(%"class.cc::TaskGraphWorkQueue"* %7) #7
  %8 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 5
  tail call void @_ZN4base17ConditionVariableC1EPNS_4LockE(%"class.base::ConditionVariable"* %8, %"class.base::Lock"* %5) #7
  %9 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 6
  tail call void @_ZN4base17ConditionVariableC1EPNS_4LockE(%"class.base::ConditionVariable"* %9, %"class.base::Lock"* %5) #7
  %10 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 7
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 5, i32 2
  store i8 0, i8* %11, align 8
  ret void
}

declare void @_ZN2cc18TaskGraphWorkQueueC1Ev(%"class.cc::TaskGraphWorkQueue"*) unnamed_addr #1

declare void @_ZN4base17ConditionVariableC1EPNS_4LockE(%"class.base::ConditionVariable"*, %"class.base::Lock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc27SingleThreadTaskGraphRunnerD2Ev(%"class.cc::SingleThreadTaskGraphRunner"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.cc::SingleThreadTaskGraphRunner"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [5 x i8*] }, { [9 x i8*], [5 x i8*] }* @_ZTVN2cc27SingleThreadTaskGraphRunnerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [5 x i8*] }, { [9 x i8*], [5 x i8*] }* @_ZTVN2cc27SingleThreadTaskGraphRunnerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 6
  tail call void @_ZN4base17ConditionVariableD1Ev(%"class.base::ConditionVariable"* %3) #7
  %4 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 5
  tail call void @_ZN4base17ConditionVariableD1Ev(%"class.base::ConditionVariable"* %4) #7
  %5 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 4
  tail call void @_ZN2cc18TaskGraphWorkQueueD1Ev(%"class.cc::TaskGraphWorkQueue"* %5) #7
  %6 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %6) #7
  %7 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.base::SimpleThread"*, %"class.base::SimpleThread"** %7, align 8
  store %"class.base::SimpleThread"* null, %"class.base::SimpleThread"** %7, align 8
  %9 = icmp eq %"class.base::SimpleThread"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.base::SimpleThread"* %8 to void (%"class.base::SimpleThread"*)***
  %12 = load void (%"class.base::SimpleThread"*)**, void (%"class.base::SimpleThread"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.base::SimpleThread"*)*, void (%"class.base::SimpleThread"*)** %12, i64 3
  %14 = load void (%"class.base::SimpleThread"*)*, void (%"class.base::SimpleThread"*)** %13, align 8
  tail call void %14(%"class.base::SimpleThread"* nonnull %8) #7
  br label %15

15:                                               ; preds = %1, %10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base17ConditionVariableD1Ev(%"class.base::ConditionVariable"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc18TaskGraphWorkQueueD1Ev(%"class.cc::TaskGraphWorkQueue"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2cc27SingleThreadTaskGraphRunnerD1Ev(%"class.cc::SingleThreadTaskGraphRunner"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 -1, i32 7
  %3 = bitcast i8* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [5 x i8*] }, { [9 x i8*], [5 x i8*] }* @_ZTVN2cc27SingleThreadTaskGraphRunnerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [5 x i8*] }, { [9 x i8*], [5 x i8*] }* @_ZTVN2cc27SingleThreadTaskGraphRunnerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 192
  %5 = bitcast i8* %4 to %"class.base::ConditionVariable"*
  tail call void @_ZN4base17ConditionVariableD1Ev(%"class.base::ConditionVariable"* %5) #7
  %6 = getelementptr inbounds i8, i8* %2, i64 128
  %7 = bitcast i8* %6 to %"class.base::ConditionVariable"*
  tail call void @_ZN4base17ConditionVariableD1Ev(%"class.base::ConditionVariable"* %7) #7
  %8 = getelementptr inbounds i8, i8* %2, i64 64
  %9 = bitcast i8* %8 to %"class.cc::TaskGraphWorkQueue"*
  tail call void @_ZN2cc18TaskGraphWorkQueueD1Ev(%"class.cc::TaskGraphWorkQueue"* %9) #7
  %10 = getelementptr inbounds i8, i8* %2, i64 24
  %11 = bitcast i8* %10 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %11) #7
  %12 = getelementptr inbounds i8, i8* %2, i64 16
  %13 = bitcast i8* %12 to %"class.base::SimpleThread"**
  %14 = load %"class.base::SimpleThread"*, %"class.base::SimpleThread"** %13, align 8
  store %"class.base::SimpleThread"* null, %"class.base::SimpleThread"** %13, align 8
  %15 = icmp eq %"class.base::SimpleThread"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %1
  %17 = bitcast %"class.base::SimpleThread"* %14 to void (%"class.base::SimpleThread"*)***
  %18 = load void (%"class.base::SimpleThread"*)**, void (%"class.base::SimpleThread"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.base::SimpleThread"*)*, void (%"class.base::SimpleThread"*)** %18, i64 3
  %20 = load void (%"class.base::SimpleThread"*)*, void (%"class.base::SimpleThread"*)** %19, align 8
  tail call void %20(%"class.base::SimpleThread"* nonnull %14) #7
  br label %21

21:                                               ; preds = %1, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc27SingleThreadTaskGraphRunnerD0Ev(%"class.cc::SingleThreadTaskGraphRunner"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.cc::SingleThreadTaskGraphRunner"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [5 x i8*] }, { [9 x i8*], [5 x i8*] }* @_ZTVN2cc27SingleThreadTaskGraphRunnerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [5 x i8*] }, { [9 x i8*], [5 x i8*] }* @_ZTVN2cc27SingleThreadTaskGraphRunnerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 6
  tail call void @_ZN4base17ConditionVariableD1Ev(%"class.base::ConditionVariable"* %3) #7
  %4 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 5
  tail call void @_ZN4base17ConditionVariableD1Ev(%"class.base::ConditionVariable"* %4) #7
  %5 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 4
  tail call void @_ZN2cc18TaskGraphWorkQueueD1Ev(%"class.cc::TaskGraphWorkQueue"* %5) #7
  %6 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %6) #7
  %7 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.base::SimpleThread"*, %"class.base::SimpleThread"** %7, align 8
  store %"class.base::SimpleThread"* null, %"class.base::SimpleThread"** %7, align 8
  %9 = icmp eq %"class.base::SimpleThread"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.base::SimpleThread"* %8 to void (%"class.base::SimpleThread"*)***
  %12 = load void (%"class.base::SimpleThread"*)**, void (%"class.base::SimpleThread"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.base::SimpleThread"*)*, void (%"class.base::SimpleThread"*)** %12, i64 3
  %14 = load void (%"class.base::SimpleThread"*)*, void (%"class.base::SimpleThread"*)** %13, align 8
  tail call void %14(%"class.base::SimpleThread"* nonnull %8) #7
  br label %15

15:                                               ; preds = %1, %10
  %16 = bitcast %"class.cc::SingleThreadTaskGraphRunner"* %0 to i8*
  tail call void @_ZdlPv(i8* %16) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2cc27SingleThreadTaskGraphRunnerD0Ev(%"class.cc::SingleThreadTaskGraphRunner"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 -1, i32 7
  %3 = bitcast i8* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [5 x i8*] }, { [9 x i8*], [5 x i8*] }* @_ZTVN2cc27SingleThreadTaskGraphRunnerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [5 x i8*] }, { [9 x i8*], [5 x i8*] }* @_ZTVN2cc27SingleThreadTaskGraphRunnerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 192
  %5 = bitcast i8* %4 to %"class.base::ConditionVariable"*
  tail call void @_ZN4base17ConditionVariableD1Ev(%"class.base::ConditionVariable"* %5) #7
  %6 = getelementptr inbounds i8, i8* %2, i64 128
  %7 = bitcast i8* %6 to %"class.base::ConditionVariable"*
  tail call void @_ZN4base17ConditionVariableD1Ev(%"class.base::ConditionVariable"* %7) #7
  %8 = getelementptr inbounds i8, i8* %2, i64 64
  %9 = bitcast i8* %8 to %"class.cc::TaskGraphWorkQueue"*
  tail call void @_ZN2cc18TaskGraphWorkQueueD1Ev(%"class.cc::TaskGraphWorkQueue"* %9) #7
  %10 = getelementptr inbounds i8, i8* %2, i64 24
  %11 = bitcast i8* %10 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %11) #7
  %12 = getelementptr inbounds i8, i8* %2, i64 16
  %13 = bitcast i8* %12 to %"class.base::SimpleThread"**
  %14 = load %"class.base::SimpleThread"*, %"class.base::SimpleThread"** %13, align 8
  store %"class.base::SimpleThread"* null, %"class.base::SimpleThread"** %13, align 8
  %15 = icmp eq %"class.base::SimpleThread"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %1
  %17 = bitcast %"class.base::SimpleThread"* %14 to void (%"class.base::SimpleThread"*)***
  %18 = load void (%"class.base::SimpleThread"*)**, void (%"class.base::SimpleThread"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.base::SimpleThread"*)*, void (%"class.base::SimpleThread"*)** %18, i64 3
  %20 = load void (%"class.base::SimpleThread"*)*, void (%"class.base::SimpleThread"*)** %19, align 8
  tail call void %20(%"class.base::SimpleThread"* nonnull %14) #7
  br label %21

21:                                               ; preds = %1, %16
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc27SingleThreadTaskGraphRunner5StartERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKN4base12SimpleThread7OptionsE(%"class.cc::SingleThreadTaskGraphRunner"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.base::SimpleThread::Options"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 88) #8
  %5 = bitcast i8* %4 to %"class.base::DelegateSimpleThread"*
  %6 = icmp eq %"class.cc::SingleThreadTaskGraphRunner"* %0, null
  %7 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 1
  %8 = select i1 %6, %"class.base::DelegateSimpleThread::Delegate"* null, %"class.base::DelegateSimpleThread::Delegate"* %7
  tail call void @_ZN4base20DelegateSimpleThreadC1EPNS0_8DelegateERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS_12SimpleThread7OptionsE(%"class.base::DelegateSimpleThread"* nonnull %5, %"class.base::DelegateSimpleThread::Delegate"* %8, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"struct.base::SimpleThread::Options"* dereferenceable(16) %2) #7
  %9 = ptrtoint i8* %4 to i64
  %10 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.base::SimpleThread"*, %"class.base::SimpleThread"** %11, align 8
  %13 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  store i64 %9, i64* %13, align 8
  %14 = icmp eq %"class.base::SimpleThread"* %12, null
  %15 = bitcast i8* %4 to %"class.base::SimpleThread"*
  br i1 %14, label %22, label %16

16:                                               ; preds = %3
  %17 = bitcast %"class.base::SimpleThread"* %12 to void (%"class.base::SimpleThread"*)***
  %18 = load void (%"class.base::SimpleThread"*)**, void (%"class.base::SimpleThread"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.base::SimpleThread"*)*, void (%"class.base::SimpleThread"*)** %18, i64 3
  %20 = load void (%"class.base::SimpleThread"*)*, void (%"class.base::SimpleThread"*)** %19, align 8
  tail call void %20(%"class.base::SimpleThread"* nonnull %12) #7
  %21 = load %"class.base::SimpleThread"*, %"class.base::SimpleThread"** %11, align 8
  br label %22

22:                                               ; preds = %16, %3
  %23 = phi %"class.base::SimpleThread"* [ %21, %16 ], [ %15, %3 ]
  tail call void @_ZN4base12SimpleThread10StartAsyncEv(%"class.base::SimpleThread"* %23) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base12SimpleThread10StartAsyncEv(%"class.base::SimpleThread"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc27SingleThreadTaskGraphRunner8ShutdownEv(%"class.cc::SingleThreadTaskGraphRunner"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #7
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 7
  store i8 1, i8* %9, align 8
  %10 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 5
  tail call void @_ZN4base17ConditionVariable6SignalEv(%"class.base::ConditionVariable"* %10) #7
  %11 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #7
  %12 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %13 = load %"class.base::SimpleThread"*, %"class.base::SimpleThread"** %12, align 8
  tail call void @_ZN4base12SimpleThread4JoinEv(%"class.base::SimpleThread"* %13) #7
  ret void
}

declare void @_ZN4base17ConditionVariable6SignalEv(%"class.base::ConditionVariable"*) local_unnamed_addr #1

declare void @_ZN4base12SimpleThread4JoinEv(%"class.base::SimpleThread"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc27SingleThreadTaskGraphRunner22GenerateNamespaceTokenEv(%"class.cc::NamespaceToken"* noalias sret, %"class.cc::SingleThreadTaskGraphRunner"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %1, i64 0, i32 3
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #7
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #7
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %1, i64 0, i32 4
  tail call void @_ZN2cc18TaskGraphWorkQueue22GenerateNamespaceTokenEv(%"class.cc::NamespaceToken"* sret %0, %"class.cc::TaskGraphWorkQueue"* %10) #7
  %11 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #7
  ret void
}

declare void @_ZN2cc18TaskGraphWorkQueue22GenerateNamespaceTokenEv(%"class.cc::NamespaceToken"* sret, %"class.cc::TaskGraphWorkQueue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc27SingleThreadTaskGraphRunner13ScheduleTasksENS_14NamespaceTokenEPNS_9TaskGraphE(%"class.cc::SingleThreadTaskGraphRunner"*, %"class.cc::NamespaceToken"* nocapture readonly, %"struct.cc::TaskGraph"*) unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.cc::NamespaceToken", align 4
  %7 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %8 = and i8 %7, 25
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %29, label %10, !prof !2

10:                                               ; preds = %3
  %11 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #7
  %12 = getelementptr inbounds %"struct.cc::TaskGraph", %"struct.cc::TaskGraph"* %2, i64 0, i32 0, i32 0, i32 1
  %13 = bitcast %"struct.cc::TaskGraph::Node"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"struct.cc::TaskGraph"* %2 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 4
  store i64 %18, i64* %4, align 8
  %19 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #7
  %20 = getelementptr inbounds %"struct.cc::TaskGraph", %"struct.cc::TaskGraph"* %2, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.cc::TaskGraph", %"struct.cc::TaskGraph"* %2, i64 0, i32 1, i32 0, i32 1
  %22 = bitcast %"struct.cc::TaskGraph::Edge"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector.43"* %20 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = ashr exact i64 %26, 4
  store i64 %27, i64* %5, align 8
  %28 = call i64 @_ZN20trace_event_internal13AddTraceEventImmEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i64* nonnull dereferenceable(8) %4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i64* nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #7
  br label %29

29:                                               ; preds = %3, %10
  %30 = phi i64 [ -6148914691236517206, %3 ], [ %28, %10 ]
  %31 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), %10 ]
  %32 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %10 ]
  %33 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 3
  %34 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %33, i64 0, i32 0, i32 0
  %35 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %34) #7
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %39, label %37, !prof !2

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %33, i64 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %38) #7
  br label %39

39:                                               ; preds = %29, %37
  %40 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 4
  %41 = getelementptr inbounds %"class.cc::NamespaceToken", %"class.cc::NamespaceToken"* %1, i64 0, i32 0
  %42 = getelementptr inbounds %"class.cc::NamespaceToken", %"class.cc::NamespaceToken"* %6, i64 0, i32 0
  %43 = load i32, i32* %41, align 4
  store i32 %43, i32* %42, align 4
  call void @_ZN2cc18TaskGraphWorkQueue13ScheduleTasksENS_14NamespaceTokenEPNS_9TaskGraphE(%"class.cc::TaskGraphWorkQueue"* %40, %"class.cc::NamespaceToken"* nonnull %6, %"struct.cc::TaskGraph"* %2) #7
  %44 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 4, i32 2, i32 0, i32 0
  %45 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %44, align 8
  %46 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 4, i32 2, i32 0, i32 1, i32 0, i32 0
  %47 = icmp eq %"class.std::__1::__tree_end_node"* %45, %46
  br i1 %47, label %88, label %48

48:                                               ; preds = %39, %85
  %49 = phi %"class.std::__1::__tree_end_node"* [ %86, %85 ], [ %45, %39 ]
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %49, i64 5
  %51 = bitcast %"class.std::__1::__tree_end_node"* %50 to %"struct.cc::TaskGraphWorkQueue::TaskNamespace"***
  %52 = load %"struct.cc::TaskGraphWorkQueue::TaskNamespace"**, %"struct.cc::TaskGraphWorkQueue::TaskNamespace"*** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %49, i64 6
  %54 = bitcast %"class.std::__1::__tree_end_node"* %53 to %"struct.cc::TaskGraphWorkQueue::TaskNamespace"***
  %55 = load %"struct.cc::TaskGraphWorkQueue::TaskNamespace"**, %"struct.cc::TaskGraphWorkQueue::TaskNamespace"*** %54, align 8
  %56 = icmp eq %"struct.cc::TaskGraphWorkQueue::TaskNamespace"** %52, %55
  br i1 %56, label %57, label %88

57:                                               ; preds = %48
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %49, i64 1, i32 0
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  %60 = icmp eq %"class.std::__1::__tree_node_base"* %59, null
  br i1 %60, label %61, label %69

61:                                               ; preds = %57
  %62 = bitcast %"class.std::__1::__tree_end_node"* %49 to %"class.std::__1::__tree_node_base"*
  %63 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %49, i64 2
  %64 = bitcast %"class.std::__1::__tree_end_node"* %63 to %"class.std::__1::__tree_end_node"**
  %65 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %64, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %65, i64 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = icmp eq %"class.std::__1::__tree_node_base"* %67, %62
  br i1 %68, label %85, label %76

69:                                               ; preds = %57, %69
  %70 = phi %"class.std::__1::__tree_node_base"* [ %72, %69 ], [ %59, %57 ]
  %71 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %70, i64 0, i32 0, i32 0
  %72 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  %73 = icmp eq %"class.std::__1::__tree_node_base"* %72, null
  br i1 %73, label %74, label %69

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %70, i64 0, i32 0
  br label %85

76:                                               ; preds = %61, %76
  %77 = phi %"class.std::__1::__tree_end_node"** [ %80, %76 ], [ %64, %61 ]
  %78 = bitcast %"class.std::__1::__tree_end_node"** %77 to %"class.std::__1::__tree_node_base"**
  %79 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %78, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %79, i64 0, i32 2
  %81 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %80, align 8
  %82 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %81, i64 0, i32 0
  %83 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %82, align 8
  %84 = icmp eq %"class.std::__1::__tree_node_base"* %83, %79
  br i1 %84, label %85, label %76

85:                                               ; preds = %76, %74, %61
  %86 = phi %"class.std::__1::__tree_end_node"* [ %75, %74 ], [ %65, %61 ], [ %81, %76 ]
  %87 = icmp eq %"class.std::__1::__tree_end_node"* %86, %46
  br i1 %87, label %93, label %48

88:                                               ; preds = %48, %39
  %89 = phi %"class.std::__1::__tree_end_node"* [ %45, %39 ], [ %49, %48 ]
  %90 = icmp eq %"class.std::__1::__tree_end_node"* %89, %46
  br i1 %90, label %93, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 5
  call void @_ZN4base17ConditionVariable6SignalEv(%"class.base::ConditionVariable"* %92) #7
  br label %93

93:                                               ; preds = %85, %88, %91
  %94 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %34) #7
  %95 = icmp eq i8* %32, null
  br i1 %95, label %100, label %96

96:                                               ; preds = %93
  %97 = load i8, i8* %32, align 1
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %100, label %99

99:                                               ; preds = %96
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %32, i8* %31, i64 %30) #7
  br label %100

100:                                              ; preds = %93, %96, %99
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventImmEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i64* dereferenceable(8), i8*, i64* dereferenceable(8)) local_unnamed_addr #5 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #7
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #7
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #7
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #7
  %19 = bitcast %"class.base::trace_event::TraceArguments"* %12 to i64*
  store i64 -6148914691247570430, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %21, align 8
  %22 = load i64, i64* %8, align 8
  %23 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = load i64, i64* %10, align 8
  %25 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1, i32 0
  store i64 %24, i64* %25, align 8
  %26 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #7
  %27 = load i8, i8* %18, align 8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %63, label %29

29:                                               ; preds = %11, %58
  %30 = phi i64 [ %59, %58 ], [ 0, %11 ]
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 8
  br i1 %33, label %34, label %45

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %30
  %36 = bitcast %"union.base::trace_event::TraceValue"* %35 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %37 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %36, align 8
  %38 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %37 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %41 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %41, i64 1
  %43 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %42, align 8
  call void %43(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %37) #7
  %44 = load i8, i8* %31, align 1
  br label %45

45:                                               ; preds = %39, %29
  %46 = phi i8 [ %32, %29 ], [ %44, %39 ]
  %47 = icmp eq i8 %46, 9
  br i1 %47, label %48, label %58

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %30
  %50 = bitcast %"union.base::trace_event::TraceValue"* %49 to %"class.protozero::HeapBuffered"**
  %51 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %50, align 8
  %52 = icmp eq %"class.protozero::HeapBuffered"* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %51, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %54) #7
  %55 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %51, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %55) #7
  %56 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %51, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %56) #7
  %57 = bitcast %"class.protozero::HeapBuffered"* %51 to i8*
  call void @_ZdlPv(i8* %57) #8
  br label %58

58:                                               ; preds = %53, %48, %45, %34
  %59 = add nuw nsw i64 %30, 1
  %60 = load i8, i8* %18, align 8
  %61 = zext i8 %60 to i64
  %62 = icmp ult i64 %59, %61
  br i1 %62, label %29, label %63

63:                                               ; preds = %58, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #7
  ret i64 %26
}

declare void @_ZN2cc18TaskGraphWorkQueue13ScheduleTasksENS_14NamespaceTokenEPNS_9TaskGraphE(%"class.cc::TaskGraphWorkQueue"*, %"class.cc::NamespaceToken"*, %"struct.cc::TaskGraph"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc27SingleThreadTaskGraphRunner27WaitForTasksToFinishRunningENS_14NamespaceTokenE(%"class.cc::SingleThreadTaskGraphRunner"*, %"class.cc::NamespaceToken"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %5 = and i8 %4, 25
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %13, label %7, !prof !2

7:                                                ; preds = %2
  %8 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #7
  %9 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7
  %10 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %11 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #7
  store i64 %11, i64* %10, align 8
  %12 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %8, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7
  br label %13

13:                                               ; preds = %2, %7
  %14 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3, i64 0, i64 0), %7 ]
  %15 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %7 ]
  %16 = phi i64 [ -6148914691236517206, %2 ], [ %12, %7 ]
  %17 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 3
  %18 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %17, i64 0, i32 0, i32 0
  %19 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %18) #7
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %23, label %21, !prof !2

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %17, i64 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %22) #7
  br label %23

23:                                               ; preds = %13, %21
  %24 = getelementptr inbounds %"class.cc::NamespaceToken", %"class.cc::NamespaceToken"* %1, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 4, i32 1, i32 0, i32 1, i32 0, i32 0
  %27 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"class.std::__1::__tree_node.104"**
  %28 = load %"class.std::__1::__tree_node.104"*, %"class.std::__1::__tree_node.104"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node.104"* %28, null
  br i1 %29, label %114, label %30

30:                                               ; preds = %23, %30
  %31 = phi %"class.std::__1::__tree_end_node"* [ %41, %30 ], [ %26, %23 ]
  %32 = phi %"class.std::__1::__tree_node.104"* [ %42, %30 ], [ %28, %23 ]
  %33 = getelementptr inbounds %"class.std::__1::__tree_node.104", %"class.std::__1::__tree_node.104"* %32, i64 0, i32 1, i32 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp slt i32 %34, %25
  %36 = getelementptr inbounds %"class.std::__1::__tree_node.104", %"class.std::__1::__tree_node.104"* %32, i64 0, i32 0, i32 1
  %37 = bitcast %"class.std::__1::__tree_node_base"** %36 to %"class.std::__1::__tree_node.104"**
  %38 = getelementptr inbounds %"class.std::__1::__tree_node.104", %"class.std::__1::__tree_node.104"* %32, i64 0, i32 0, i32 0
  %39 = bitcast %"class.std::__1::__tree_node.104"* %32 to %"class.std::__1::__tree_node.104"**
  %40 = select i1 %35, %"class.std::__1::__tree_node.104"** %37, %"class.std::__1::__tree_node.104"** %39
  %41 = select i1 %35, %"class.std::__1::__tree_end_node"* %31, %"class.std::__1::__tree_end_node"* %38
  %42 = load %"class.std::__1::__tree_node.104"*, %"class.std::__1::__tree_node.104"** %40, align 8
  %43 = icmp eq %"class.std::__1::__tree_node.104"* %42, null
  br i1 %43, label %44, label %30

44:                                               ; preds = %30
  %45 = icmp eq %"class.std::__1::__tree_end_node"* %41, %26
  br i1 %45, label %114, label %46

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 4
  %48 = bitcast %"class.std::__1::__tree_end_node"* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = icmp slt i32 %25, %49
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 5
  %52 = icmp eq %"class.std::__1::__tree_end_node"* %51, null
  %53 = or i1 %52, %50
  br i1 %53, label %114, label %54

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 17
  %56 = bitcast %"class.std::__1::__tree_end_node"* %55 to %"struct.std::__1::pair"**
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 18
  %58 = bitcast %"class.std::__1::__tree_end_node"* %57 to %"struct.std::__1::pair"**
  %59 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 6
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 11
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"class.std::__1::__tree_end_node"**
  %62 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 12
  br label %63

63:                                               ; preds = %54, %112
  %64 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %56, align 8
  %65 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %58, align 8
  %66 = icmp eq %"struct.std::__1::pair"* %64, %65
  br i1 %66, label %67, label %112

67:                                               ; preds = %63
  %68 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %61, align 8
  %69 = icmp eq %"class.std::__1::__tree_end_node"* %68, %62
  br i1 %69, label %113, label %70

70:                                               ; preds = %67, %107
  %71 = phi %"class.std::__1::__tree_end_node"* [ %108, %107 ], [ %68, %67 ]
  %72 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %71, i64 5
  %73 = bitcast %"class.std::__1::__tree_end_node"* %72 to %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"**
  %74 = load %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"*, %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"** %73, align 8
  %75 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %71, i64 6
  %76 = bitcast %"class.std::__1::__tree_end_node"* %75 to %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"**
  %77 = load %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"*, %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"** %76, align 8
  %78 = icmp eq %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"* %74, %77
  br i1 %78, label %79, label %110

79:                                               ; preds = %70
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %71, i64 1, i32 0
  %81 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %80, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %81, null
  br i1 %82, label %83, label %91

83:                                               ; preds = %79
  %84 = bitcast %"class.std::__1::__tree_end_node"* %71 to %"class.std::__1::__tree_node_base"*
  %85 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %71, i64 2
  %86 = bitcast %"class.std::__1::__tree_end_node"* %85 to %"class.std::__1::__tree_end_node"**
  %87 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %86, align 8
  %88 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %87, i64 0, i32 0
  %89 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %88, align 8
  %90 = icmp eq %"class.std::__1::__tree_node_base"* %89, %84
  br i1 %90, label %107, label %98

91:                                               ; preds = %79, %91
  %92 = phi %"class.std::__1::__tree_node_base"* [ %94, %91 ], [ %81, %79 ]
  %93 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %92, i64 0, i32 0, i32 0
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %93, align 8
  %95 = icmp eq %"class.std::__1::__tree_node_base"* %94, null
  br i1 %95, label %96, label %91

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %92, i64 0, i32 0
  br label %107

98:                                               ; preds = %83, %98
  %99 = phi %"class.std::__1::__tree_end_node"** [ %102, %98 ], [ %86, %83 ]
  %100 = bitcast %"class.std::__1::__tree_end_node"** %99 to %"class.std::__1::__tree_node_base"**
  %101 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %101, i64 0, i32 2
  %103 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %102, align 8
  %104 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %103, i64 0, i32 0
  %105 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %104, align 8
  %106 = icmp eq %"class.std::__1::__tree_node_base"* %105, %101
  br i1 %106, label %107, label %98

107:                                              ; preds = %98, %96, %83
  %108 = phi %"class.std::__1::__tree_end_node"* [ %97, %96 ], [ %87, %83 ], [ %103, %98 ]
  %109 = icmp eq %"class.std::__1::__tree_end_node"* %108, %62
  br i1 %109, label %113, label %70

110:                                              ; preds = %70
  %111 = icmp eq %"class.std::__1::__tree_end_node"* %71, %62
  br i1 %111, label %113, label %112

112:                                              ; preds = %63, %110
  notail call void @_ZN4base17ConditionVariable4WaitEv(%"class.base::ConditionVariable"* %59) #7
  br label %63

113:                                              ; preds = %67, %110, %107
  call void @_ZN4base17ConditionVariable6SignalEv(%"class.base::ConditionVariable"* %59) #7
  br label %114

114:                                              ; preds = %23, %44, %46, %113
  %115 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %18) #7
  %116 = icmp eq i8* %15, null
  br i1 %116, label %121, label %117

117:                                              ; preds = %114
  %118 = load i8, i8* %15, align 1
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %121, label %120

120:                                              ; preds = %117
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %15, i8* %14, i64 %16) #7
  br label %121

121:                                              ; preds = %114, %117, %120
  ret void
}

declare void @_ZN4base17ConditionVariable4WaitEv(%"class.base::ConditionVariable"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc27SingleThreadTaskGraphRunner21CollectCompletedTasksENS_14NamespaceTokenEPNSt3__16vectorI13scoped_refptrINS_4TaskEENS2_9allocatorIS6_EEEE(%"class.cc::SingleThreadTaskGraphRunner"*, %"class.cc::NamespaceToken"* nocapture readonly, %"class.std::__1::vector.59"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca %"class.cc::NamespaceToken", align 4
  %6 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %7 = and i8 %6, 25
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %15, label %9, !prof !2

9:                                                ; preds = %3
  %10 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #7
  %11 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #7
  %12 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %13 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #7
  store i64 %13, i64* %12, align 8
  %14 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %10, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 0) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #7
  br label %15

15:                                               ; preds = %3, %9
  %16 = phi i64 [ -6148914691236517206, %3 ], [ %14, %9 ]
  %17 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4, i64 0, i64 0), %9 ]
  %18 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %9 ]
  %19 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 3
  %20 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %19, i64 0, i32 0, i32 0
  %21 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %20) #7
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %19, i64 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %24) #7
  br label %25

25:                                               ; preds = %15, %23
  %26 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 4
  %27 = getelementptr inbounds %"class.cc::NamespaceToken", %"class.cc::NamespaceToken"* %1, i64 0, i32 0
  %28 = getelementptr inbounds %"class.cc::NamespaceToken", %"class.cc::NamespaceToken"* %5, i64 0, i32 0
  %29 = load i32, i32* %27, align 4
  store i32 %29, i32* %28, align 4
  call void @_ZN2cc18TaskGraphWorkQueue21CollectCompletedTasksENS_14NamespaceTokenEPNSt3__16vectorI13scoped_refptrINS_4TaskEENS2_9allocatorIS6_EEEE(%"class.cc::TaskGraphWorkQueue"* %26, %"class.cc::NamespaceToken"* nonnull %5, %"class.std::__1::vector.59"* %2) #7
  %30 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %20) #7
  %31 = icmp eq i8* %18, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %25
  %33 = load i8, i8* %18, align 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %36, label %35

35:                                               ; preds = %32
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %18, i8* %17, i64 %16) #7
  br label %36

36:                                               ; preds = %25, %32, %35
  ret void
}

declare void @_ZN2cc18TaskGraphWorkQueue21CollectCompletedTasksENS_14NamespaceTokenEPNSt3__16vectorI13scoped_refptrINS_4TaskEENS2_9allocatorIS6_EEEE(%"class.cc::TaskGraphWorkQueue"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.59"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc27SingleThreadTaskGraphRunner3RunEv(%"class.cc::SingleThreadTaskGraphRunner"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #7
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 7
  %10 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 5
  br label %11

11:                                               ; preds = %17, %8
  %12 = tail call zeroext i1 @_ZN2cc27SingleThreadTaskGraphRunner23RunTaskWithLockAcquiredEv(%"class.cc::SingleThreadTaskGraphRunner"* %0)
  br i1 %12, label %17, label %13

13:                                               ; preds = %11
  %14 = load i8, i8* %9, align 8, !range !3
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %13
  notail call void @_ZN4base17ConditionVariable4WaitEv(%"class.base::ConditionVariable"* %10) #7
  br label %17

17:                                               ; preds = %16, %11
  br label %11

18:                                               ; preds = %13
  %19 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc27SingleThreadTaskGraphRunner23RunTaskWithLockAcquiredEv(%"class.cc::SingleThreadTaskGraphRunner"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = alloca %"struct.cc::TaskGraphWorkQueue::PrioritizedTask", align 8
  %4 = alloca %"struct.cc::TaskGraphWorkQueue::PrioritizedTask", align 8
  %5 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 127, i32 0), align 16
  %6 = and i8 %5, 25
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %14, label %8, !prof !2

8:                                                ; preds = %1
  %9 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #7
  %10 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #7
  %11 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %12 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #7
  store i64 %12, i64* %11, align 8
  %13 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 127, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.5, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %9, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #7
  br label %14

14:                                               ; preds = %1, %8
  %15 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 127, i32 0), %8 ]
  %16 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([53 x i8], [53 x i8]* @.str.5, i64 0, i64 0), %8 ]
  %17 = phi i64 [ -6148914691236517206, %1 ], [ %13, %8 ]
  %18 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 4
  %19 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 4, i32 2, i32 0, i32 0
  %20 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %19, align 8
  %21 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 4, i32 2, i32 0, i32 1, i32 0, i32 0
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %20, %21
  br i1 %22, label %63, label %23

23:                                               ; preds = %14, %60
  %24 = phi %"class.std::__1::__tree_end_node"* [ %61, %60 ], [ %20, %14 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 5
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"struct.cc::TaskGraphWorkQueue::TaskNamespace"***
  %27 = load %"struct.cc::TaskGraphWorkQueue::TaskNamespace"**, %"struct.cc::TaskGraphWorkQueue::TaskNamespace"*** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 6
  %29 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"struct.cc::TaskGraphWorkQueue::TaskNamespace"***
  %30 = load %"struct.cc::TaskGraphWorkQueue::TaskNamespace"**, %"struct.cc::TaskGraphWorkQueue::TaskNamespace"*** %29, align 8
  %31 = icmp eq %"struct.cc::TaskGraphWorkQueue::TaskNamespace"** %27, %30
  br i1 %31, label %32, label %63

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 1, i32 0
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %34, null
  br i1 %35, label %36, label %44

36:                                               ; preds = %32
  %37 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.std::__1::__tree_node_base"*
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 2
  %39 = bitcast %"class.std::__1::__tree_end_node"* %38 to %"class.std::__1::__tree_end_node"**
  %40 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, %37
  br i1 %43, label %60, label %51

44:                                               ; preds = %32, %44
  %45 = phi %"class.std::__1::__tree_node_base"* [ %47, %44 ], [ %34, %32 ]
  %46 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node_base"* %47, null
  br i1 %48, label %49, label %44

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %45, i64 0, i32 0
  br label %60

51:                                               ; preds = %36, %51
  %52 = phi %"class.std::__1::__tree_end_node"** [ %55, %51 ], [ %39, %36 ]
  %53 = bitcast %"class.std::__1::__tree_end_node"** %52 to %"class.std::__1::__tree_node_base"**
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %54, i64 0, i32 2
  %56 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %56, i64 0, i32 0
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node_base"* %58, %54
  br i1 %59, label %60, label %51

60:                                               ; preds = %51, %49, %36
  %61 = phi %"class.std::__1::__tree_end_node"* [ %50, %49 ], [ %40, %36 ], [ %56, %51 ]
  %62 = icmp eq %"class.std::__1::__tree_end_node"* %61, %21
  br i1 %62, label %143, label %23

63:                                               ; preds = %23, %14
  %64 = phi %"class.std::__1::__tree_end_node"* [ %20, %14 ], [ %24, %23 ]
  %65 = icmp eq %"class.std::__1::__tree_end_node"* %64, %21
  br i1 %65, label %143, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 4
  %68 = bitcast %"class.std::__1::__tree_end_node"* %67 to i16*
  %69 = load i16, i16* %68, align 8
  %70 = bitcast %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #7
  %71 = getelementptr inbounds %"struct.cc::TaskGraphWorkQueue::PrioritizedTask", %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"* %3, i64 0, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.cc::TaskGraphWorkQueue::PrioritizedTask", %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"* %3, i64 0, i32 1
  %73 = bitcast %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 24, i1 false)
  call void @_ZN2cc18TaskGraphWorkQueue16GetNextTaskToRunEt(%"struct.cc::TaskGraphWorkQueue::PrioritizedTask"* nonnull sret %3, %"class.cc::TaskGraphWorkQueue"* %18, i16 zeroext %69) #7
  %74 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 3
  %75 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %74, i64 0, i32 0, i32 0
  %76 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %75) #7
  %77 = load %"class.cc::Task"*, %"class.cc::Task"** %71, align 8
  %78 = bitcast %"class.cc::Task"* %77 to void (%"class.cc::Task"*)***
  %79 = load void (%"class.cc::Task"*)**, void (%"class.cc::Task"*)*** %78, align 8
  %80 = load void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %79, align 8
  call void %80(%"class.cc::Task"* %77) #7
  %81 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %75) #7
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %85, label %83, !prof !2

83:                                               ; preds = %66
  %84 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %74, i64 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %84) #7
  br label %85

85:                                               ; preds = %66, %83
  %86 = load %"struct.cc::TaskGraphWorkQueue::TaskNamespace"*, %"struct.cc::TaskGraphWorkQueue::TaskNamespace"** %72, align 8
  call void @_ZN2cc18TaskGraphWorkQueue15PrioritizedTaskC1EOS1_(%"struct.cc::TaskGraphWorkQueue::PrioritizedTask"* nonnull %4, %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"* nonnull dereferenceable(24) %3) #7
  call void @_ZN2cc18TaskGraphWorkQueue12CompleteTaskENS0_15PrioritizedTaskE(%"class.cc::TaskGraphWorkQueue"* %18, %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"* nonnull %4) #7
  call void @_ZN2cc18TaskGraphWorkQueue15PrioritizedTaskD1Ev(%"struct.cc::TaskGraphWorkQueue::PrioritizedTask"* nonnull %4) #7
  %87 = getelementptr inbounds %"struct.cc::TaskGraphWorkQueue::TaskNamespace", %"struct.cc::TaskGraphWorkQueue::TaskNamespace"* %86, i64 0, i32 3, i32 0, i32 0
  %88 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %87, align 8
  %89 = getelementptr inbounds %"struct.cc::TaskGraphWorkQueue::TaskNamespace", %"struct.cc::TaskGraphWorkQueue::TaskNamespace"* %86, i64 0, i32 3, i32 0, i32 1
  %90 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %89, align 8
  %91 = icmp eq %"struct.std::__1::pair"* %88, %90
  br i1 %91, label %92, label %142

92:                                               ; preds = %85
  %93 = getelementptr inbounds %"struct.cc::TaskGraphWorkQueue::TaskNamespace", %"struct.cc::TaskGraphWorkQueue::TaskNamespace"* %86, i64 0, i32 1, i32 0, i32 0
  %94 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %93, align 8
  %95 = getelementptr inbounds %"struct.cc::TaskGraphWorkQueue::TaskNamespace", %"struct.cc::TaskGraphWorkQueue::TaskNamespace"* %86, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %96 = icmp eq %"class.std::__1::__tree_end_node"* %94, %95
  br i1 %96, label %137, label %97

97:                                               ; preds = %92, %134
  %98 = phi %"class.std::__1::__tree_end_node"* [ %135, %134 ], [ %94, %92 ]
  %99 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %98, i64 5
  %100 = bitcast %"class.std::__1::__tree_end_node"* %99 to %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"**
  %101 = load %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"*, %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %98, i64 6
  %103 = bitcast %"class.std::__1::__tree_end_node"* %102 to %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"**
  %104 = load %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"*, %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"** %103, align 8
  %105 = icmp eq %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"* %101, %104
  br i1 %105, label %106, label %137

106:                                              ; preds = %97
  %107 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %98, i64 1, i32 0
  %108 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %107, align 8
  %109 = icmp eq %"class.std::__1::__tree_node_base"* %108, null
  br i1 %109, label %110, label %118

110:                                              ; preds = %106
  %111 = bitcast %"class.std::__1::__tree_end_node"* %98 to %"class.std::__1::__tree_node_base"*
  %112 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %98, i64 2
  %113 = bitcast %"class.std::__1::__tree_end_node"* %112 to %"class.std::__1::__tree_end_node"**
  %114 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %113, align 8
  %115 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %114, i64 0, i32 0
  %116 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %115, align 8
  %117 = icmp eq %"class.std::__1::__tree_node_base"* %116, %111
  br i1 %117, label %134, label %125

118:                                              ; preds = %106, %118
  %119 = phi %"class.std::__1::__tree_node_base"* [ %121, %118 ], [ %108, %106 ]
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %119, i64 0, i32 0, i32 0
  %121 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %120, align 8
  %122 = icmp eq %"class.std::__1::__tree_node_base"* %121, null
  br i1 %122, label %123, label %118

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %119, i64 0, i32 0
  br label %134

125:                                              ; preds = %110, %125
  %126 = phi %"class.std::__1::__tree_end_node"** [ %129, %125 ], [ %113, %110 ]
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to %"class.std::__1::__tree_node_base"**
  %128 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %127, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %128, i64 0, i32 2
  %130 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %129, align 8
  %131 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %130, i64 0, i32 0
  %132 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %131, align 8
  %133 = icmp eq %"class.std::__1::__tree_node_base"* %132, %128
  br i1 %133, label %134, label %125

134:                                              ; preds = %125, %123, %110
  %135 = phi %"class.std::__1::__tree_end_node"* [ %124, %123 ], [ %114, %110 ], [ %130, %125 ]
  %136 = icmp eq %"class.std::__1::__tree_end_node"* %135, %95
  br i1 %136, label %140, label %97

137:                                              ; preds = %97, %92
  %138 = phi %"class.std::__1::__tree_end_node"* [ %94, %92 ], [ %98, %97 ]
  %139 = icmp eq %"class.std::__1::__tree_end_node"* %138, %95
  br i1 %139, label %140, label %142

140:                                              ; preds = %134, %137
  %141 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 0, i32 6
  call void @_ZN4base17ConditionVariable6SignalEv(%"class.base::ConditionVariable"* %141) #7
  br label %142

142:                                              ; preds = %85, %140, %137
  call void @_ZN2cc18TaskGraphWorkQueue15PrioritizedTaskD1Ev(%"struct.cc::TaskGraphWorkQueue::PrioritizedTask"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #7
  br label %143

143:                                              ; preds = %60, %63, %142
  %144 = phi i1 [ true, %142 ], [ false, %63 ], [ false, %60 ]
  %145 = icmp eq i8* %15, null
  br i1 %145, label %150, label %146

146:                                              ; preds = %143
  %147 = load i8, i8* %15, align 1
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %150, label %149

149:                                              ; preds = %146
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %15, i8* %16, i64 %17) #7
  br label %150

150:                                              ; preds = %143, %146, %149
  ret i1 %144
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2cc27SingleThreadTaskGraphRunner3RunEv(%"class.cc::SingleThreadTaskGraphRunner"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::SingleThreadTaskGraphRunner", %"class.cc::SingleThreadTaskGraphRunner"* %0, i64 -1, i32 7
  %3 = bitcast i8* %2 to %"class.cc::SingleThreadTaskGraphRunner"*
  %4 = getelementptr inbounds i8, i8* %2, i64 24
  %5 = bitcast i8* %4 to %union.pthread_mutex_t*
  %6 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %5) #7
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !2

8:                                                ; preds = %1
  %9 = bitcast i8* %4 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %9) #7
  br label %10

10:                                               ; preds = %8, %1
  %11 = getelementptr inbounds i8, i8* %2, i64 256
  %12 = getelementptr inbounds i8, i8* %2, i64 128
  %13 = bitcast i8* %12 to %"class.base::ConditionVariable"*
  br label %14

14:                                               ; preds = %20, %10
  %15 = tail call zeroext i1 @_ZN2cc27SingleThreadTaskGraphRunner23RunTaskWithLockAcquiredEv(%"class.cc::SingleThreadTaskGraphRunner"* %3) #7
  br i1 %15, label %20, label %16

16:                                               ; preds = %14
  %17 = load i8, i8* %11, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %16
  notail call void @_ZN4base17ConditionVariable4WaitEv(%"class.base::ConditionVariable"* %13) #7
  br label %20

20:                                               ; preds = %19, %14
  br label %14

21:                                               ; preds = %16
  %22 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #7
  ret void
}

declare void @_ZN2cc18TaskGraphWorkQueue16GetNextTaskToRunEt(%"struct.cc::TaskGraphWorkQueue::PrioritizedTask"* sret, %"class.cc::TaskGraphWorkQueue"*, i16 zeroext) local_unnamed_addr #1

declare void @_ZN2cc18TaskGraphWorkQueue12CompleteTaskENS0_15PrioritizedTaskE(%"class.cc::TaskGraphWorkQueue"*, %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"*) local_unnamed_addr #1

declare void @_ZN2cc18TaskGraphWorkQueue15PrioritizedTaskC1EOS1_(%"struct.cc::TaskGraphWorkQueue::PrioritizedTask"*, %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc18TaskGraphWorkQueue15PrioritizedTaskD1Ev(%"struct.cc::TaskGraphWorkQueue::PrioritizedTask"*) unnamed_addr #2

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #2

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN4base20DelegateSimpleThreadC1EPNS0_8DelegateERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS_12SimpleThread7OptionsE(%"class.base::DelegateSimpleThread"*, %"class.base::DelegateSimpleThread::Delegate"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.base::SimpleThread::Options"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
