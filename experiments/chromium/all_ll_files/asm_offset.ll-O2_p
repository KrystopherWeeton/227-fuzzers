; ModuleID = '../../third_party/vulkan-deps/vulkan-loader/src/loader/asm_offset.c'
source_filename = "../../third_party/vulkan-deps/vulkan-loader/src/loader/asm_offset.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ValueInfo = type { i8*, i64, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque

@.str = private unnamed_addr constant [5 x i8] c"MASM\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"GAS\00", align 1
@.str.2 = private unnamed_addr constant [30 x i8] c"VK_DEBUG_REPORT_ERROR_BIT_EXT\00", align 1
@.str.3 = private unnamed_addr constant [70 x i8] c"The numerical value of the enum value 'VK_DEBUG_REPORT_ERROR_BIT_EXT'\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"PTR_SIZE\00", align 1
@.str.5 = private unnamed_addr constant [22 x i8] c"The size of a pointer\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"HASH_SIZE\00", align 1
@.str.7 = private unnamed_addr constant [50 x i8] c"The size of a 'loader_dispatch_hash_entry' struct\00", align 1
@.str.8 = private unnamed_addr constant [21 x i8] c"HASH_OFFSET_INSTANCE\00", align 1
@.str.9 = private unnamed_addr constant [73 x i8] c"The offset of 'phys_dev_ext_disp_hash' within a 'loader_instance' struct\00", align 1
@.str.10 = private unnamed_addr constant [30 x i8] c"PHYS_DEV_OFFSET_INST_DISPATCH\00", align 1
@.str.11 = private unnamed_addr constant [79 x i8] c"The offset of 'phys_dev_ext' within in 'loader_instance_dispatch_table' struct\00", align 1
@.str.12 = private unnamed_addr constant [31 x i8] c"PHYS_DEV_OFFSET_PHYS_DEV_TRAMP\00", align 1
@.str.13 = private unnamed_addr constant [72 x i8] c"The offset of 'phys_dev' within a 'loader_physical_device_tramp' struct\00", align 1
@.str.14 = private unnamed_addr constant [30 x i8] c"ICD_TERM_OFFSET_PHYS_DEV_TERM\00", align 1
@.str.15 = private unnamed_addr constant [76 x i8] c"The offset of 'this_icd_term' within a 'loader_physical_device_term' struct\00", align 1
@.str.16 = private unnamed_addr constant [30 x i8] c"PHYS_DEV_OFFSET_PHYS_DEV_TERM\00", align 1
@.str.17 = private unnamed_addr constant [71 x i8] c"The offset of 'phys_dev' within a 'loader_physical_device_term' struct\00", align 1
@.str.18 = private unnamed_addr constant [25 x i8] c"INSTANCE_OFFSET_ICD_TERM\00", align 1
@.str.19 = private unnamed_addr constant [64 x i8] c"The offset of 'this_instance' within a 'loader_icd_term' struct\00", align 1
@.str.20 = private unnamed_addr constant [25 x i8] c"DISPATCH_OFFSET_ICD_TERM\00", align 1
@.str.21 = private unnamed_addr constant [63 x i8] c"The offset of 'phys_dev_ext' within a 'loader_icd_term' struct\00", align 1
@.str.22 = private unnamed_addr constant [22 x i8] c"FUNC_NAME_OFFSET_HASH\00", align 1
@.str.23 = private unnamed_addr constant [71 x i8] c"The offset of 'func_name' within a 'loader_dispatch_hash_entry' struct\00", align 1
@.str.24 = private unnamed_addr constant [27 x i8] c"EXT_OFFSET_DEVICE_DISPATCH\00", align 1
@.str.25 = private unnamed_addr constant [73 x i8] c"The offset of 'ext_dispatch' within a 'loader_dev_dispatch_table' struct\00", align 1
@__const.main.values = private unnamed_addr constant [12 x %struct.ValueInfo] [%struct.ValueInfo { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i32 0, i32 0), i64 8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.3, i32 0, i32 0) }, %struct.ValueInfo { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i32 0, i32 0), i64 8, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i32 0, i32 0) }, %struct.ValueInfo { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i32 0, i32 0), i64 32, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.7, i32 0, i32 0) }, %struct.ValueInfo { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i32 0, i32 0), i64 8128, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.9, i32 0, i32 0) }, %struct.ValueInfo { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i32 0, i32 0), i64 648, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.11, i32 0, i32 0) }, %struct.ValueInfo { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12, i32 0, i32 0), i64 16, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.13, i32 0, i32 0) }, %struct.ValueInfo { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i32 0, i32 0), i64 8, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.15, i32 0, i32 0) }, %struct.ValueInfo { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.16, i32 0, i32 0), i64 24, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.17, i32 0, i32 0) }, %struct.ValueInfo { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.18, i32 0, i32 0), i64 8, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.19, i32 0, i32 0) }, %struct.ValueInfo { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0), i64 776, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.21, i32 0, i32 0) }, %struct.ValueInfo { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.22, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.23, i32 0, i32 0) }, %struct.ValueInfo { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i32 0, i32 0), i64 2944, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.25, i32 0, i32 0) }], align 16
@.str.26 = private unnamed_addr constant [16 x i8] c"gen_defines.asm\00", align 1
@.str.27 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.29 = private unnamed_addr constant [21 x i8] c"%-32s equ %-8zu; %s\0A\00", align 1
@.str.30 = private unnamed_addr constant [16 x i8] c".set X86_64, 1\0A\00", align 1
@.str.31 = private unnamed_addr constant [23 x i8] c".set %-32s, %-8zu# %s\0A\00", align 1

; Function Attrs: nofree nounwind ssp uwtable
define hidden i32 @main(i32, i8** nocapture readonly) local_unnamed_addr #0 {
  %3 = icmp sgt i32 %0, 0
  br i1 %3, label %4, label %57

4:                                                ; preds = %2
  %5 = zext i32 %0 to i64
  br label %8

6:                                                ; preds = %19
  %7 = icmp eq i8* %20, null
  br i1 %7, label %57, label %23

8:                                                ; preds = %19, %4
  %9 = phi i64 [ 0, %4 ], [ %21, %19 ]
  %10 = phi i8* [ null, %4 ], [ %20, %19 ]
  %11 = getelementptr inbounds i8*, i8** %1, i64 %9
  %12 = load i8*, i8** %11, align 8
  %13 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %8
  %16 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0)) #4
  %17 = icmp eq i32 %16, 0
  %18 = select i1 %17, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i8* %10
  br label %19

19:                                               ; preds = %15, %8
  %20 = phi i8* [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), %8 ], [ %18, %15 ]
  %21 = add nuw nsw i64 %9, 1
  %22 = icmp eq i64 %21, %5
  br i1 %22, label %6, label %8

23:                                               ; preds = %6
  %24 = tail call %struct._IO_FILE* @fopen64(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i64 0, i64 0))
  %25 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %24)
  %26 = tail call i32 @strcmp(i8* nonnull %20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %39

28:                                               ; preds = %23, %28
  %29 = phi i64 [ %37, %28 ], [ 0, %23 ]
  %30 = getelementptr inbounds [12 x %struct.ValueInfo], [12 x %struct.ValueInfo]* @__const.main.values, i64 0, i64 %29, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds [12 x %struct.ValueInfo], [12 x %struct.ValueInfo]* @__const.main.values, i64 0, i64 %29, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds [12 x %struct.ValueInfo], [12 x %struct.ValueInfo]* @__const.main.values, i64 0, i64 %29, i32 2
  %35 = load i8*, i8** %34, align 8
  %36 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.29, i64 0, i64 0), i8* %31, i64 %33, i8* %35)
  %37 = add nuw nsw i64 %29, 1
  %38 = icmp eq i64 %37, 12
  br i1 %38, label %55, label %28

39:                                               ; preds = %23
  %40 = tail call i32 @strcmp(i8* nonnull %20, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0)) #4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %55

42:                                               ; preds = %39
  %43 = tail call i64 @fwrite(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i64 0, i64 0), i64 15, i64 1, %struct._IO_FILE* %24)
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %53, %44 ]
  %46 = getelementptr inbounds [12 x %struct.ValueInfo], [12 x %struct.ValueInfo]* @__const.main.values, i64 0, i64 %45, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds [12 x %struct.ValueInfo], [12 x %struct.ValueInfo]* @__const.main.values, i64 0, i64 %45, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds [12 x %struct.ValueInfo], [12 x %struct.ValueInfo]* @__const.main.values, i64 0, i64 %45, i32 2
  %51 = load i8*, i8** %50, align 8
  %52 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31, i64 0, i64 0), i8* %47, i64 %49, i8* %51)
  %53 = add nuw nsw i64 %45, 1
  %54 = icmp eq i64 %53, 12
  br i1 %54, label %55, label %44

55:                                               ; preds = %44, %28, %39
  %56 = tail call i32 @fclose(%struct._IO_FILE* %24)
  br label %57

57:                                               ; preds = %2, %6, %55
  %58 = phi i32 [ %56, %55 ], [ 1, %6 ], [ 1, %2 ]
  ret i32 %58
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias %struct._IO_FILE* @fopen64(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @fputc(i32, %struct._IO_FILE* nocapture) local_unnamed_addr #3

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
