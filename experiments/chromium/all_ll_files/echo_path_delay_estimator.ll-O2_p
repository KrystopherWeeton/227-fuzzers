; ModuleID = '../../third_party/webrtc/modules/audio_processing/aec3/echo_path_delay_estimator.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/aec3/echo_path_delay_estimator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::EchoPathDelayEstimator" = type { %"class.webrtc::ApmDataDumper"*, i64, i64, %"class.webrtc::AlignmentMixer", %"class.webrtc::Decimator", %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilterLagAggregator", %"class.absl::optional", i64, %"class.webrtc::ClockdriftDetector" }
%"class.webrtc::AlignmentMixer" = type { i64, float, float, i8, i32, %"struct.std::__1::array", %"class.std::__1::vector", i32, i64 }
%"struct.std::__1::array" = type { [2 x i64] }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float*, float*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { float* }
%"class.webrtc::Decimator" = type { i64, %"class.webrtc::CascadedBiQuadFilter", %"class.webrtc::CascadedBiQuadFilter" }
%"class.webrtc::CascadedBiQuadFilter" = type { %"class.std::__1::vector.1" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.webrtc::CascadedBiQuadFilter::BiQuad"*, %"struct.webrtc::CascadedBiQuadFilter::BiQuad"*, %"class.std::__1::__compressed_pair.3" }
%"struct.webrtc::CascadedBiQuadFilter::BiQuad" = type { %"struct.webrtc::CascadedBiQuadFilter::BiQuadCoefficients", [2 x float], [2 x float] }
%"struct.webrtc::CascadedBiQuadFilter::BiQuadCoefficients" = type { [3 x float], [2 x float] }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.webrtc::CascadedBiQuadFilter::BiQuad"* }
%"class.webrtc::MatchedFilter" = type { %"class.webrtc::ApmDataDumper"*, i32, i64, i64, %"class.std::__1::vector.8", %"class.std::__1::vector.15", %"class.std::__1::vector.22", float, float, float, float }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.std::__1::vector"*, %"class.std::__1::vector"*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::vector"* }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"struct.webrtc::MatchedFilter::LagEstimate"*, %"struct.webrtc::MatchedFilter::LagEstimate"*, %"class.std::__1::__compressed_pair.17" }
%"struct.webrtc::MatchedFilter::LagEstimate" = type <{ float, i8, [3 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.webrtc::MatchedFilter::LagEstimate"* }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { i64*, i64*, %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { i64* }
%"class.webrtc::MatchedFilterLagAggregator" = type { %"class.webrtc::ApmDataDumper"*, %"class.std::__1::vector.29", %"struct.std::__1::array.36", i32, i8, %"struct.webrtc::EchoCanceller3Config::Delay::DelaySelectionThresholds" }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { i32*, i32*, %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { i32* }
%"struct.std::__1::array.36" = type { [250 x i32] }
%"struct.webrtc::EchoCanceller3Config::Delay::DelaySelectionThresholds" = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.webrtc::DelayEstimate" }
%"struct.webrtc::DelayEstimate" = type { i32, i64, i64, i64 }
%"class.webrtc::ClockdriftDetector" = type { %"struct.std::__1::array.37", i32, i64 }
%"struct.std::__1::array.37" = type { [3 x i32] }
%"class.webrtc::ApmDataDumper" = type { i8 }
%"struct.webrtc::EchoCanceller3Config" = type { %"struct.webrtc::EchoCanceller3Config::Buffering", %"struct.webrtc::EchoCanceller3Config::Delay", %"struct.webrtc::EchoCanceller3Config::Filter", %"struct.webrtc::EchoCanceller3Config::Erle", %"struct.webrtc::EchoCanceller3Config::EpStrength", %"struct.webrtc::EchoCanceller3Config::EchoAudibility", %"struct.webrtc::EchoCanceller3Config::RenderLevels", %"struct.webrtc::EchoCanceller3Config::EchoRemovalControl", [6 x i8], %"struct.webrtc::EchoCanceller3Config::EchoModel", %"struct.webrtc::EchoCanceller3Config::ComfortNoise", [4 x i8], %"struct.webrtc::EchoCanceller3Config::Suppressor" }
%"struct.webrtc::EchoCanceller3Config::Buffering" = type { i64, i64 }
%"struct.webrtc::EchoCanceller3Config::Delay" = type { i64, i64, i64, i64, i64, i64, float, float, float, %"struct.webrtc::EchoCanceller3Config::Delay::DelaySelectionThresholds", i8, i8, %"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing", %"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing" }
%"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing" = type { i8, i8, float, i8 }
%"struct.webrtc::EchoCanceller3Config::Filter" = type <{ %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration", i64, float, i32, i8, i8, i8, i8, i8, [3 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration" = type { i64, float, float, float, float, float }
%"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration" = type { i64, float, float }
%"struct.webrtc::EchoCanceller3Config::Erle" = type <{ float, float, float, i8, [3 x i8], i64, i8, i8, [6 x i8] }>
%"struct.webrtc::EchoCanceller3Config::EpStrength" = type <{ float, float, i8, i8, i8, i8 }>
%"struct.webrtc::EchoCanceller3Config::EchoAudibility" = type <{ float, float, float, float, float, float, i8, i8, [2 x i8] }>
%"struct.webrtc::EchoCanceller3Config::RenderLevels" = type { float, float, float, float }
%"struct.webrtc::EchoCanceller3Config::EchoRemovalControl" = type { i8, i8 }
%"struct.webrtc::EchoCanceller3Config::EchoModel" = type <{ i64, float, float, float, float, i64, i64, i8, [7 x i8] }>
%"struct.webrtc::EchoCanceller3Config::ComfortNoise" = type { float }
%"struct.webrtc::EchoCanceller3Config::Suppressor" = type <{ i64, %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning", %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning", %"struct.webrtc::EchoCanceller3Config::Suppressor::DominantNearendDetection", %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection", i8, [3 x i8], %"struct.webrtc::EchoCanceller3Config::Suppressor::HighBandsSuppression", float, i8, [7 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning" = type { %"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds", %"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds", float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds" = type { float, float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::DominantNearendDetection" = type <{ float, float, float, i32, i32, i8, [3 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection" = type { i64, %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion", %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion", float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion" = type { i64, i64 }
%"struct.webrtc::EchoCanceller3Config::Suppressor::HighBandsSuppression" = type { float, float, float, float }
%"struct.webrtc::DownsampledRenderBuffer" = type { i32, %"class.std::__1::vector", i32, i32 }
%"struct.std::__1::array.38" = type { [64 x float] }

@_ZN6webrtc22EchoPathDelayEstimatorC1EPNS_13ApmDataDumperERKNS_20EchoCanceller3ConfigEm = hidden unnamed_addr alias void (%"class.webrtc::EchoPathDelayEstimator"*, %"class.webrtc::ApmDataDumper"*, %"struct.webrtc::EchoCanceller3Config"*, i64), void (%"class.webrtc::EchoPathDelayEstimator"*, %"class.webrtc::ApmDataDumper"*, %"struct.webrtc::EchoCanceller3Config"*, i64)* @_ZN6webrtc22EchoPathDelayEstimatorC2EPNS_13ApmDataDumperERKNS_20EchoCanceller3ConfigEm
@_ZN6webrtc22EchoPathDelayEstimatorD1Ev = hidden unnamed_addr alias void (%"class.webrtc::EchoPathDelayEstimator"*), void (%"class.webrtc::EchoPathDelayEstimator"*)* @_ZN6webrtc22EchoPathDelayEstimatorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc22EchoPathDelayEstimatorC2EPNS_13ApmDataDumperERKNS_20EchoCanceller3ConfigEm(%"class.webrtc::EchoPathDelayEstimator"*, %"class.webrtc::ApmDataDumper"*, %"struct.webrtc::EchoCanceller3Config"* dereferenceable(560), i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %0, i64 0, i32 0
  store %"class.webrtc::ApmDataDumper"* %1, %"class.webrtc::ApmDataDumper"** %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config", %"struct.webrtc::EchoCanceller3Config"* %2, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %0, i64 0, i32 2
  %10 = icmp eq i64 %8, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %4
  %12 = udiv i64 64, %8
  br label %13

13:                                               ; preds = %4, %11
  %14 = phi i64 [ %12, %11 ], [ 64, %4 ]
  store i64 %14, i64* %9, align 8
  %15 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config", %"struct.webrtc::EchoCanceller3Config"* %2, i64 0, i32 1, i32 13
  tail call void @_ZN6webrtc14AlignmentMixerC1EmRKNS_20EchoCanceller3Config5Delay15AlignmentMixingE(%"class.webrtc::AlignmentMixer"* %15, i64 %3, %"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing"* dereferenceable(12) %16) #5
  %17 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %0, i64 0, i32 4
  %18 = load i64, i64* %6, align 8
  tail call void @_ZN6webrtc9DecimatorC1Em(%"class.webrtc::Decimator"* %17, i64 %18) #5
  %19 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %0, i64 0, i32 5
  %20 = load %"class.webrtc::ApmDataDumper"*, %"class.webrtc::ApmDataDumper"** %5, align 8
  %21 = tail call i32 @_ZN6webrtc18DetectOptimizationEv() #5
  %22 = load i64, i64* %9, align 8
  %23 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config", %"struct.webrtc::EchoCanceller3Config"* %2, i64 0, i32 1, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = trunc i64 %24 to i32
  %26 = load i64, i64* %7, align 8
  %27 = icmp eq i64 %26, 8
  %28 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config", %"struct.webrtc::EchoCanceller3Config"* %2, i64 0, i32 6, i32 2
  %29 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config", %"struct.webrtc::EchoCanceller3Config"* %2, i64 0, i32 6, i32 1
  %30 = load float, float* %28, align 4
  %31 = load float, float* %29, align 4
  %32 = select i1 %27, float %30, float %31
  %33 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config", %"struct.webrtc::EchoCanceller3Config"* %2, i64 0, i32 1, i32 6
  %34 = load float, float* %33, align 8
  %35 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config", %"struct.webrtc::EchoCanceller3Config"* %2, i64 0, i32 1, i32 7
  %36 = load float, float* %35, align 4
  %37 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config", %"struct.webrtc::EchoCanceller3Config"* %2, i64 0, i32 1, i32 8
  %38 = load float, float* %37, align 8
  tail call void @_ZN6webrtc13MatchedFilterC1EPNS_13ApmDataDumperENS_16Aec3OptimizationEmmimffff(%"class.webrtc::MatchedFilter"* %19, %"class.webrtc::ApmDataDumper"* %20, i32 %21, i64 %22, i64 32, i32 %25, i64 24, float %32, float %34, float %36, float %38) #5
  %39 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %0, i64 0, i32 6
  %40 = load %"class.webrtc::ApmDataDumper"*, %"class.webrtc::ApmDataDumper"** %5, align 8
  %41 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %0, i64 0, i32 5, i32 4
  %42 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %0, i64 0, i32 5, i32 4, i32 0, i32 1
  %43 = bitcast %"class.std::__1::vector"** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.std::__1::vector.8"* %41 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %44, %46
  %48 = sdiv exact i64 %47, 24
  %49 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %0, i64 0, i32 5, i32 3
  %50 = load i64, i64* %49, align 8
  %51 = mul i64 %48, %50
  %52 = inttoptr i64 %46 to %"class.std::__1::vector"*
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %52, i64 0, i32 0, i32 1
  %54 = bitcast float** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = inttoptr i64 %46 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = sub i64 %55, %57
  %59 = ashr exact i64 %58, 2
  %60 = add i64 %59, %51
  %61 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config", %"struct.webrtc::EchoCanceller3Config"* %2, i64 0, i32 1, i32 9
  tail call void @_ZN6webrtc26MatchedFilterLagAggregatorC1EPNS_13ApmDataDumperEmRKNS_20EchoCanceller3Config5Delay24DelaySelectionThresholdsE(%"class.webrtc::MatchedFilterLagAggregator"* %39, %"class.webrtc::ApmDataDumper"* %40, i64 %60, %"struct.webrtc::EchoCanceller3Config::Delay::DelaySelectionThresholds"* dereferenceable(8) %61) #5
  %62 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %62, align 8
  %63 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %0, i64 0, i32 9
  %65 = bitcast %union.anon* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 40, i1 false)
  tail call void @_ZN6webrtc18ClockdriftDetectorC1Ev(%"class.webrtc::ClockdriftDetector"* %64) #5
  ret void
}

declare void @_ZN6webrtc14AlignmentMixerC1EmRKNS_20EchoCanceller3Config5Delay15AlignmentMixingE(%"class.webrtc::AlignmentMixer"*, i64, %"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing"* dereferenceable(12)) unnamed_addr #1

declare void @_ZN6webrtc9DecimatorC1Em(%"class.webrtc::Decimator"*, i64) unnamed_addr #1

declare i32 @_ZN6webrtc18DetectOptimizationEv() local_unnamed_addr #1

declare void @_ZN6webrtc13MatchedFilterC1EPNS_13ApmDataDumperENS_16Aec3OptimizationEmmimffff(%"class.webrtc::MatchedFilter"*, %"class.webrtc::ApmDataDumper"*, i32, i64, i64, i32, i64, float, float, float, float) unnamed_addr #1

declare void @_ZN6webrtc26MatchedFilterLagAggregatorC1EPNS_13ApmDataDumperEmRKNS_20EchoCanceller3Config5Delay24DelaySelectionThresholdsE(%"class.webrtc::MatchedFilterLagAggregator"*, %"class.webrtc::ApmDataDumper"*, i64, %"struct.webrtc::EchoCanceller3Config::Delay::DelaySelectionThresholds"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN6webrtc18ClockdriftDetectorC1Ev(%"class.webrtc::ClockdriftDetector"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc22EchoPathDelayEstimatorD2Ev(%"class.webrtc::EchoPathDelayEstimator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %0, i64 0, i32 9
  tail call void @_ZN6webrtc18ClockdriftDetectorD1Ev(%"class.webrtc::ClockdriftDetector"* %2) #5
  %3 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %0, i64 0, i32 6
  tail call void @_ZN6webrtc26MatchedFilterLagAggregatorD1Ev(%"class.webrtc::MatchedFilterLagAggregator"* %3) #5
  %4 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %0, i64 0, i32 5
  tail call void @_ZN6webrtc13MatchedFilterD1Ev(%"class.webrtc::MatchedFilter"* %4) #5
  %5 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %0, i64 0, i32 4, i32 2
  tail call void @_ZN6webrtc20CascadedBiQuadFilterD1Ev(%"class.webrtc::CascadedBiQuadFilter"* %5) #5
  %6 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %0, i64 0, i32 4, i32 1
  tail call void @_ZN6webrtc20CascadedBiQuadFilterD1Ev(%"class.webrtc::CascadedBiQuadFilter"* %6) #5
  %7 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %0, i64 0, i32 3, i32 6, i32 0, i32 0
  %8 = load float*, float** %7, align 8
  %9 = icmp eq float* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = ptrtoint float* %8 to i64
  %12 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %0, i64 0, i32 3, i32 6, i32 0, i32 1
  %13 = bitcast float** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast float* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #6
  br label %15

15:                                               ; preds = %1, %10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6webrtc18ClockdriftDetectorD1Ev(%"class.webrtc::ClockdriftDetector"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6webrtc26MatchedFilterLagAggregatorD1Ev(%"class.webrtc::MatchedFilterLagAggregator"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6webrtc13MatchedFilterD1Ev(%"class.webrtc::MatchedFilter"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc22EchoPathDelayEstimator5ResetEb(%"class.webrtc::EchoPathDelayEstimator"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %0, i64 0, i32 6
  tail call void @_ZN6webrtc26MatchedFilterLagAggregator5ResetEb(%"class.webrtc::MatchedFilterLagAggregator"* %3, i1 zeroext %1) #5
  %4 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %0, i64 0, i32 5
  tail call void @_ZN6webrtc13MatchedFilter5ResetEv(%"class.webrtc::MatchedFilter"* %4) #5
  %5 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %0, i64 0, i32 8
  store i64 0, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc22EchoPathDelayEstimator5ResetEbb(%"class.webrtc::EchoPathDelayEstimator"*, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  br i1 %1, label %4, label %6

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %0, i64 0, i32 6
  tail call void @_ZN6webrtc26MatchedFilterLagAggregator5ResetEb(%"class.webrtc::MatchedFilterLagAggregator"* %5, i1 zeroext %2) #5
  br label %6

6:                                                ; preds = %4, %3
  %7 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %0, i64 0, i32 5
  tail call void @_ZN6webrtc13MatchedFilter5ResetEv(%"class.webrtc::MatchedFilter"* %7) #5
  %8 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %0, i64 0, i32 8
  store i64 0, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc22EchoPathDelayEstimator13EstimateDelayERKNS_23DownsampledRenderBufferERKNSt3__16vectorINS5_IfNS4_9allocatorIfEEEENS6_IS8_EEEE(%"class.absl::optional"* noalias sret, %"class.webrtc::EchoPathDelayEstimator"*, %"struct.webrtc::DownsampledRenderBuffer"* dereferenceable(40), %"class.std::__1::vector.8"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.std::__1::array.38", align 4
  %6 = alloca %"struct.std::__1::array.38", align 4
  %7 = bitcast %"struct.std::__1::array.38"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %7, i8 -1, i64 256, i1 false)
  %8 = getelementptr inbounds %"struct.std::__1::array.38", %"struct.std::__1::array.38"* %5, i64 0, i32 0, i64 0
  %9 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %1, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  %12 = bitcast %"struct.std::__1::array.38"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %12) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %12, i8 -1, i64 256, i1 false)
  %13 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %1, i64 0, i32 3
  %14 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %3, i64 0, i32 0, i32 0
  %15 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %3, i64 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::vector"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = ptrtoint %"class.std::__1::vector"* %15 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 24
  %22 = icmp eq i64 %20, 0
  %23 = select i1 %22, %"class.std::__1::vector"* null, %"class.std::__1::vector"* %15
  %24 = getelementptr inbounds %"struct.std::__1::array.38", %"struct.std::__1::array.38"* %6, i64 0, i32 0, i64 0
  call void @_ZN6webrtc14AlignmentMixer13ProduceOutputEN3rtc9ArrayViewIKNSt3__16vectorIfNS3_9allocatorIfEEEELln4711EEENS2_IfLl64EEE(%"class.webrtc::AlignmentMixer"* %13, %"class.std::__1::vector"* %23, i64 %21, float* nonnull %24) #5
  %25 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %1, i64 0, i32 4
  %26 = select i1 %11, float* null, float* %8
  call void @_ZN6webrtc9Decimator8DecimateEN3rtc9ArrayViewIKfLln4711EEENS2_IfLln4711EEE(%"class.webrtc::Decimator"* %25, float* nonnull %24, i64 64, float* %26, i64 %10) #5
  %27 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %1, i64 0, i32 1
  %28 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %1, i64 0, i32 5
  %29 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %1, i64 0, i32 6
  %30 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %1, i64 0, i32 6, i32 4
  %31 = load i8, i8* %30, align 4, !range !2
  %32 = icmp ne i8 %31, 0
  call void @_ZN6webrtc13MatchedFilter6UpdateERKNS_23DownsampledRenderBufferEN3rtc9ArrayViewIKfLln4711EEEb(%"class.webrtc::MatchedFilter"* %28, %"struct.webrtc::DownsampledRenderBuffer"* dereferenceable(40) %2, float* %26, i64 %10, i1 zeroext %32) #5
  %33 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 -86, i64 40, i1 false)
  %34 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %1, i64 0, i32 5, i32 5, i32 0, i32 0
  %35 = load %"struct.webrtc::MatchedFilter::LagEstimate"*, %"struct.webrtc::MatchedFilter::LagEstimate"** %34, align 8
  %36 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %1, i64 0, i32 5, i32 5, i32 0, i32 1
  %37 = bitcast %"struct.webrtc::MatchedFilter::LagEstimate"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = ptrtoint %"struct.webrtc::MatchedFilter::LagEstimate"* %35 to i64
  %40 = sub i64 %38, %39
  %41 = sdiv exact i64 %40, 24
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, %"struct.webrtc::MatchedFilter::LagEstimate"* null, %"struct.webrtc::MatchedFilter::LagEstimate"* %35
  call void @_ZN6webrtc26MatchedFilterLagAggregator9AggregateEN3rtc9ArrayViewIKNS_13MatchedFilter11LagEstimateELln4711EEE(%"class.absl::optional"* sret %0, %"class.webrtc::MatchedFilterLagAggregator"* %29, %"struct.webrtc::MatchedFilter::LagEstimate"* %43, i64 %41) #5
  %44 = load i8, i8* %33, align 8, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %57, label %46

46:                                               ; preds = %4
  %47 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %59

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %1, i64 0, i32 9
  %52 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = trunc i64 %53 to i32
  call void @_ZN6webrtc18ClockdriftDetector6UpdateEi(%"class.webrtc::ClockdriftDetector"* %51, i32 %54) #5
  %55 = load i8, i8* %33, align 8
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %4, %50
  %58 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  br label %73

59:                                               ; preds = %46, %50
  %60 = load i64, i64* %27, align 8
  %61 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = mul i64 %62, %60
  store i64 %63, i64* %61, align 8
  %64 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %65 = load i8, i8* %64, align 8, !range !2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %73, label %67

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %69, %71
  br i1 %72, label %76, label %73

73:                                               ; preds = %67, %59, %57
  %74 = phi i8* [ %58, %57 ], [ %64, %59 ], [ %64, %67 ]
  %75 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %1, i64 0, i32 8
  store i64 0, i64* %75, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %33, i64 40, i1 false)
  br label %83

76:                                               ; preds = %67
  %77 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %1, i64 0, i32 8
  %78 = load i64, i64* %77, align 8
  %79 = add i64 %78, 1
  store i64 %79, i64* %77, align 8
  %80 = icmp ugt i64 %79, 125
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %33, i64 40, i1 false)
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.webrtc::EchoPathDelayEstimator", %"class.webrtc::EchoPathDelayEstimator"* %1, i64 0, i32 8
  call void @_ZN6webrtc13MatchedFilter5ResetEv(%"class.webrtc::MatchedFilter"* %28) #5
  store i8 0, i8* %64, align 8
  store i64 0, i64* %82, align 8
  br label %83

83:                                               ; preds = %73, %81, %76
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %7) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN6webrtc14AlignmentMixer13ProduceOutputEN3rtc9ArrayViewIKNSt3__16vectorIfNS3_9allocatorIfEEEELln4711EEENS2_IfLl64EEE(%"class.webrtc::AlignmentMixer"*, %"class.std::__1::vector"*, i64, float*) local_unnamed_addr #1

declare void @_ZN6webrtc9Decimator8DecimateEN3rtc9ArrayViewIKfLln4711EEENS2_IfLln4711EEE(%"class.webrtc::Decimator"*, float*, i64, float*, i64) local_unnamed_addr #1

declare void @_ZN6webrtc13MatchedFilter6UpdateERKNS_23DownsampledRenderBufferEN3rtc9ArrayViewIKfLln4711EEEb(%"class.webrtc::MatchedFilter"*, %"struct.webrtc::DownsampledRenderBuffer"* dereferenceable(40), float*, i64, i1 zeroext) local_unnamed_addr #1

declare void @_ZN6webrtc26MatchedFilterLagAggregator9AggregateEN3rtc9ArrayViewIKNS_13MatchedFilter11LagEstimateELln4711EEE(%"class.absl::optional"* sret, %"class.webrtc::MatchedFilterLagAggregator"*, %"struct.webrtc::MatchedFilter::LagEstimate"*, i64) local_unnamed_addr #1

declare void @_ZN6webrtc18ClockdriftDetector6UpdateEi(%"class.webrtc::ClockdriftDetector"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN6webrtc26MatchedFilterLagAggregator5ResetEb(%"class.webrtc::MatchedFilterLagAggregator"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN6webrtc13MatchedFilter5ResetEv(%"class.webrtc::MatchedFilter"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6webrtc20CascadedBiQuadFilterD1Ev(%"class.webrtc::CascadedBiQuadFilter"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
