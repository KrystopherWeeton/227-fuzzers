; ModuleID = '../../ui/gfx/render_text.cc'
source_filename = "../../ui/gfx/render_text.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.73" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { i8* }
%struct.SkRect = type { float, float, float, float }
%"struct.SkTextBlobBuilder::RunBuffer" = type { i16*, float*, i8*, i32* }
%"class.gfx::internal::SkiaTextRenderer" = type { i32 (...)**, %"class.gfx::Canvas"*, %"class.cc::PaintCanvas"*, %"class.cc::PaintFlags", %class.SkFont }
%"class.gfx::Canvas" = type { i32 (...)**, float, %"class.absl::optional", %"class.absl::optional.8", %"class.cc::PaintCanvas"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.SkBitmap }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.7 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.0, i32, i32 }
%class.sk_sp.0 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.7 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.absl::optional.8" = type { %"class.absl::optional_internal::optional_data.9" }
%"class.absl::optional_internal::optional_data.9" = type { %"class.absl::optional_internal::optional_data_base.10" }
%"class.absl::optional_internal::optional_data_base.10" = type { %"class.absl::optional_internal::optional_data_dtor_base.11" }
%"class.absl::optional_internal::optional_data_dtor_base.11" = type { i8, [7 x i8], %union.anon.12 }
%union.anon.12 = type { %"class.cc::SkiaPaintCanvas" }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.22", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.13, [384 x i64], %class.sk_sp.14, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.16" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.13 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.14 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type opaque
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.cc::PaintFlags" = type <{ %class.sk_sp.32, %class.sk_sp.33, %class.sk_sp.67, %class.sk_sp.68, %class.sk_sp.69, %class.sk_sp.70, i32, float, float, i32, %union.anon.71, [4 x i8] }>
%class.sk_sp.32 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.33 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.34", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.40, i32, %"class.absl::optional.47", %"class.std::__1::vector", %"class.std::__1::vector.55", %class.sk_sp.62, %class.sk_sp.39, i32, [4 x i8] }>
%"class.absl::optional.34" = type { %"class.absl::optional_internal::optional_data.35" }
%"class.absl::optional_internal::optional_data.35" = type { %"class.absl::optional_internal::optional_data_base.36" }
%"class.absl::optional_internal::optional_data_base.36" = type { %"class.absl::optional_internal::optional_data_dtor_base.37" }
%"class.absl::optional_internal::optional_data_dtor_base.37" = type { i8, %union.anon.38 }
%union.anon.38 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.39, %class.sk_sp.40, %"class.gfx::Rect", i32, %class.sk_sp.45, %class.sk_sp.46, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.39, %class.scoped_refptr }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.45 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.46 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.scoped_refptr = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type opaque
%class.sk_sp.40 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.41", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { i8* }
%"class.absl::optional.47" = type { %"class.absl::optional_internal::optional_data.48" }
%"class.absl::optional_internal::optional_data.48" = type { %"class.absl::optional_internal::optional_data_base.49" }
%"class.absl::optional_internal::optional_data_base.49" = type { %"class.absl::optional_internal::optional_data_dtor_base.50" }
%"class.absl::optional_internal::optional_data_dtor_base.50" = type { i8, %union.anon.51 }
%union.anon.51 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { i32* }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { float*, float*, %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { float* }
%class.sk_sp.62 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.63", [7 x i8] }>
%"struct.std::__1::atomic.63" = type { %"struct.std::__1::__atomic_base.64" }
%"struct.std::__1::__atomic_base.64" = type { %"struct.std::__1::__cxx_atomic_impl.65" }
%"struct.std::__1::__cxx_atomic_impl.65" = type { %"struct.std::__1::__cxx_atomic_base_impl.66" }
%"struct.std::__1::__cxx_atomic_base_impl.66" = type { i8 }
%class.sk_sp.39 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.sk_sp.67 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.68 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.69 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.70 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type opaque
%union.anon.71 = type { i32 }
%class.SkFont = type <{ %class.sk_sp.72, float, float, float, i8, i8, i8, i8 }>
%class.sk_sp.72 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.gfx::internal::StyleIterator" = type { %"class.gfx::BreakList"*, %"class.gfx::BreakList.91"*, %"class.gfx::BreakList.101"*, %"class.gfx::BreakList.111"*, %"struct.std::__1::array"*, %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter.131", %"class.std::__1::__wrap_iter.132", %"class.std::__1::__wrap_iter.133", %"struct.std::__1::array.134" }
%"class.std::__1::__wrap_iter" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::pair" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__wrap_iter.131" = type { %"struct.std::__1::pair.94"* }
%"struct.std::__1::pair.94" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__wrap_iter.132" = type { %"struct.std::__1::pair.104"* }
%"struct.std::__1::pair.104" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__wrap_iter.133" = type { %"struct.std::__1::pair.114"* }
%"struct.std::__1::pair.114" = type <{ i64, i32, [4 x i8] }>
%"struct.std::__1::array.134" = type { [4 x %"class.std::__1::__wrap_iter.135"] }
%"class.std::__1::__wrap_iter.135" = type { %"struct.std::__1::pair.124"* }
%"struct.std::__1::pair.124" = type <{ i64, i8, [7 x i8] }>
%"class.gfx::BreakList" = type { %"class.std::__1::vector.84", i64 }
%"class.std::__1::vector.84" = type { %"class.std::__1::__vector_base.85" }
%"class.std::__1::__vector_base.85" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"struct.std::__1::pair"* }
%"class.gfx::BreakList.91" = type { %"class.std::__1::vector.92", i64 }
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"*, %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"struct.std::__1::pair.94"* }
%"class.gfx::BreakList.101" = type { %"class.std::__1::vector.102", i64 }
%"class.std::__1::vector.102" = type { %"class.std::__1::__vector_base.103" }
%"class.std::__1::__vector_base.103" = type { %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"*, %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.104"* }
%"class.gfx::BreakList.111" = type { %"class.std::__1::vector.112", i64 }
%"class.std::__1::vector.112" = type { %"class.std::__1::__vector_base.113" }
%"class.std::__1::__vector_base.113" = type { %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"*, %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"struct.std::__1::pair.114"* }
%"struct.std::__1::array" = type { [4 x %"class.gfx::BreakList.121"] }
%"class.gfx::BreakList.121" = type { %"class.std::__1::vector.122", i64 }
%"class.std::__1::vector.122" = type { %"class.std::__1::__vector_base.123" }
%"class.std::__1::__vector_base.123" = type { %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"*, %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"struct.std::__1::pair.124"* }
%"struct.gfx::internal::LineSegment" = type { %"class.gfx::RangeF", %"class.gfx::Range", i64 }
%"class.gfx::RangeF" = type { float, float }
%"class.gfx::Range" = type { i32, i32 }
%"struct.gfx::internal::Line" = type <{ %"class.std::__1::vector.136", %"class.gfx::SizeF", i32, i32, i32, [4 x i8] }>
%"class.std::__1::vector.136" = type { %"class.std::__1::__vector_base.137" }
%"class.std::__1::__vector_base.137" = type { %"struct.gfx::internal::LineSegment"*, %"struct.gfx::internal::LineSegment"*, %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"struct.gfx::internal::LineSegment"* }
%"class.gfx::internal::ShapedText" = type { %"class.std::__1::vector.143" }
%"class.std::__1::vector.143" = type { %"class.std::__1::__vector_base.144" }
%"class.std::__1::__vector_base.144" = type { %"struct.gfx::internal::Line"*, %"struct.gfx::internal::Line"*, %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"struct.gfx::internal::Line"* }
%"class.gfx::RenderText" = type <{ i32 (...)**, float, float, %"class.std::__1::basic_string", i32, i32, i32, i32, i32, [4 x i8], %"class.gfx::FontList", %"class.gfx::SelectionModel", %"class.gfx::Rect", i8, i8, [2 x i8], i32, i32, i8, i8, [2 x i8], %"class.gfx::Range", %"class.gfx::BreakList", %"class.gfx::BreakList.91", %"class.gfx::BreakList.101", %"class.gfx::BreakList.111", %"struct.std::__1::array", %"class.gfx::BreakList", %"class.gfx::BreakList.91", %"class.gfx::BreakList.101", %"class.gfx::BreakList.111", %"struct.std::__1::array", %"class.std::__1::vector.164", i8, [3 x i8], i32, i64, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.absl::optional.171", i8, i8, i32, i8, [3 x i8], i64, i32, i8, [3 x i8], %"class.gfx::Rect", i8, [3 x i8], %"class.gfx::Vector2d", i32, i8, [7 x i8], %"class.std::__1::vector.176", %"class.gfx::BreakList.183", %"class.std::__1::unique_ptr.192", float, i32, %"class.absl::optional.198", i8, [7 x i8] }>
%"class.gfx::FontList" = type { %class.scoped_refptr.156 }
%class.scoped_refptr.156 = type { %"class.gfx::FontListImpl"* }
%"class.gfx::FontListImpl" = type opaque
%"class.gfx::SelectionModel" = type <{ %"class.gfx::Range", %"class.std::__1::vector.157", i32, [4 x i8] }>
%"class.std::__1::vector.157" = type { %"class.std::__1::__vector_base.158" }
%"class.std::__1::__vector_base.158" = type { %"class.gfx::Range"*, %"class.gfx::Range"*, %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.gfx::Range"* }
%"class.std::__1::vector.164" = type { %"class.std::__1::__vector_base.165" }
%"class.std::__1::__vector_base.165" = type { %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"*, %"class.std::__1::__compressed_pair.166" }
%"struct.gfx::internal::TextToDisplayIndex" = type { i64, i64 }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"struct.gfx::internal::TextToDisplayIndex"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.152 }
%union.anon.152 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.absl::optional.171" = type { %"class.absl::optional_internal::optional_data.172" }
%"class.absl::optional_internal::optional_data.172" = type { %"class.absl::optional_internal::optional_data_base.173" }
%"class.absl::optional_internal::optional_data_base.173" = type { %"class.absl::optional_internal::optional_data_dtor_base.174" }
%"class.absl::optional_internal::optional_data_dtor_base.174" = type { i8, %union.anon.175 }
%union.anon.175 = type { i8 }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.std::__1::vector.176" = type { %"class.std::__1::__vector_base.177" }
%"class.std::__1::__vector_base.177" = type { %"class.gfx::ShadowValue"*, %"class.gfx::ShadowValue"*, %"class.std::__1::__compressed_pair.178" }
%"class.gfx::ShadowValue" = type <{ %"class.gfx::Vector2d", double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.gfx::ShadowValue"* }
%"class.gfx::BreakList.183" = type { %"class.std::__1::vector.184", i64 }
%"class.std::__1::vector.184" = type { %"class.std::__1::__vector_base.185" }
%"class.std::__1::__vector_base.185" = type { %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"*, %"class.std::__1::__compressed_pair.187" }
%"struct.std::__1::pair.186" = type { i64, i64 }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"struct.std::__1::pair.186"* }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.gfx::internal::ShapedText"* }
%"class.absl::optional.198" = type { %"class.absl::optional_internal::optional_data.199" }
%"class.absl::optional_internal::optional_data.199" = type { %"class.absl::optional_internal::optional_data_base.200" }
%"class.absl::optional_internal::optional_data_base.200" = type { %"class.absl::optional_internal::optional_data_dtor_base.201" }
%"class.absl::optional_internal::optional_data_dtor_base.201" = type { i8, %union.anon.202 }
%union.anon.202 = type { i32 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"struct.gfx::FontRenderParams" = type { i8, i8, i8, i8, i32, i32 }
%class.SkTextBlobBuilder = type { %class.SkAutoTMalloc, i64, i64, %struct.SkRect, i32, i8, i64, %"struct.SkTextBlobBuilder::RunBuffer" }
%class.sk_sp.77 = type { %class.SkTextBlob* }
%class.SkTextBlob = type { %class.SkNVRefCnt.78, %struct.SkRect, i32, %"struct.std::__1::atomic.79" }
%class.SkNVRefCnt.78 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.79" = type { %"struct.std::__1::__atomic_base.80" }
%"struct.std::__1::__atomic_base.80" = type { %"struct.std::__1::__atomic_base.81" }
%"struct.std::__1::__atomic_base.81" = type { %"struct.std::__1::__cxx_atomic_impl.82" }
%"struct.std::__1::__cxx_atomic_impl.82" = type { %"struct.std::__1::__cxx_atomic_base_impl.83" }
%"struct.std::__1::__cxx_atomic_base_impl.83" = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.gfx::RenderTextHarfBuzz" = type { %"class.gfx::RenderText.base", [7 x i8], %"class.gfx::internal::TextRunList", %"class.std::__1::unique_ptr.247", i8, float, %"class.gfx::SizeF", %"class.std::__1::basic_string.253" }
%"class.gfx::RenderText.base" = type <{ i32 (...)**, float, float, %"class.std::__1::basic_string", i32, i32, i32, i32, i32, [4 x i8], %"class.gfx::FontList", %"class.gfx::SelectionModel", %"class.gfx::Rect", i8, i8, [2 x i8], i32, i32, i8, i8, [2 x i8], %"class.gfx::Range", %"class.gfx::BreakList", %"class.gfx::BreakList.91", %"class.gfx::BreakList.101", %"class.gfx::BreakList.111", %"struct.std::__1::array", %"class.gfx::BreakList", %"class.gfx::BreakList.91", %"class.gfx::BreakList.101", %"class.gfx::BreakList.111", %"struct.std::__1::array", %"class.std::__1::vector.164", i8, [3 x i8], i32, i64, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.absl::optional.171", i8, i8, i32, i8, [3 x i8], i64, i32, i8, [3 x i8], %"class.gfx::Rect", i8, [3 x i8], %"class.gfx::Vector2d", i32, i8, [7 x i8], %"class.std::__1::vector.176", %"class.gfx::BreakList.183", %"class.std::__1::unique_ptr.192", float, i32, %"class.absl::optional.198", i8 }>
%"class.gfx::internal::TextRunList" = type <{ %"class.std::__1::vector.212", %"class.std::__1::vector.240", %"class.std::__1::vector.240", float, [4 x i8] }>
%"class.std::__1::vector.212" = type { %"class.std::__1::__vector_base.213" }
%"class.std::__1::__vector_base.213" = type { %"class.std::__1::unique_ptr.214"*, %"class.std::__1::unique_ptr.214"*, %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"struct.gfx::internal::TextRunHarfBuzz"* }
%"struct.gfx::internal::TextRunHarfBuzz" = type <{ %"class.gfx::Range", %"struct.gfx::internal::TextRunHarfBuzz::FontParams", %"struct.gfx::internal::TextRunHarfBuzz::ShapeOutput", float, [4 x i8] }>
%"struct.gfx::internal::TextRunHarfBuzz::FontParams" = type { %"class.gfx::Font", %class.sk_sp.72, %"struct.gfx::FontRenderParams", i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i32 }
%"class.gfx::Font" = type { %class.scoped_refptr.217 }
%class.scoped_refptr.217 = type { %"class.gfx::PlatformFont"* }
%"class.gfx::PlatformFont" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"struct.gfx::internal::TextRunHarfBuzz::ShapeOutput" = type { float, %"class.std::__1::vector.218", %"class.std::__1::vector.225", %"class.std::__1::vector", i64, i64 }
%"class.std::__1::vector.218" = type { %"class.std::__1::__vector_base.219" }
%"class.std::__1::__vector_base.219" = type { i16*, i16*, %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { i16* }
%"class.std::__1::vector.225" = type { %"class.std::__1::__vector_base.226" }
%"class.std::__1::__vector_base.226" = type { %struct.SkPoint*, %struct.SkPoint*, %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %struct.SkPoint* }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.std::__1::unique_ptr.214"* }
%"class.std::__1::vector.240" = type { %"class.std::__1::__vector_base.241" }
%"class.std::__1::__vector_base.241" = type { i32*, i32*, %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { i32* }
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.gfx::internal::TextRunList"* }
%"class.std::__1::basic_string.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.256 }
%union.anon.256 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.gfx::PointF" = type { float, float }
%"class.base::i18n::BreakIterator" = type { i8*, %"class.base::BasicStringPiece", %"class.std::__1::basic_string", i32, i64, i64 }
%"class.base::BasicStringPiece" = type { i16*, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.gfx::Insets" = type { i32, i32, i32, i32 }
%"class.std::__1::vector.269" = type { %"class.std::__1::__vector_base.270" }
%"class.std::__1::__vector_base.270" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.gfx::Rect"* }
%"class.base::i18n::UTF16CharIterator" = type { %"class.base::BasicStringPiece", i64, i64, i32, i32 }
%"struct.gfx::DecoratedText" = type opaque
%"class.std::__1::allocator.154" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.gfx::StringSlicer" = type <{ %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i8, i8, i8, [5 x i8] }>
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"struct.std::__1::__split_buffer.321" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.87", %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.std::__1::allocator.89"* }
%"class.std::__1::allocator.89" = type { i8 }
%"struct.std::__1::__split_buffer.324" = type { %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"*, %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.97", %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.std::__1::allocator.99"* }
%"class.std::__1::allocator.99" = type { i8 }
%"struct.std::__1::__split_buffer.327" = type { %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"*, %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.107", %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"class.std::__1::allocator.109"* }
%"class.std::__1::allocator.109" = type { i8 }
%"struct.std::__1::__split_buffer.333" = type { %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"*, %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.127", %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.std::__1::allocator.129"* }
%"class.std::__1::allocator.129" = type { i8 }
%"struct.std::__1::__split_buffer.330" = type { %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"*, %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.117", %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.std::__1::allocator.119"* }
%"class.std::__1::allocator.119" = type { i8 }
%"struct.std::__1::__split_buffer.350" = type { %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"*, %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.188", %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"class.std::__1::allocator.190"* }
%"class.std::__1::allocator.190" = type { i8 }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZN3gfx9BreakListIbE8SetValueEb = comdat any

$_ZN3gfx9BreakListIjE10ApplyValueEjRKNS_5RangeE = comdat any

$_ZN3gfx9BreakListINS_13BaselineStyleEE10ApplyValueES1_RKNS_5RangeE = comdat any

$_ZN3gfx9BreakListIiE10ApplyValueEiRKNS_5RangeE = comdat any

$_ZN3gfx9BreakListIbE10ApplyValueEbRKNS_5RangeE = comdat any

$_ZN3gfx9BreakListINS_4Font6WeightEE10ApplyValueES2_RKNS_5RangeE = comdat any

$_ZN3gfx9BreakListImE10ApplyValueEmRKNS_5RangeE = comdat any

$_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_ = comdat any

$_ZNSt3__16vectorINS_4pairImbEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorINS_4pairImN3gfx13BaselineStyleEEENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_ = comdat any

$_ZNSt3__16vectorINS_4pairImiEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorINS_4pairImjEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorINS_4pairImN3gfx4Font6WeightEEENS_9allocatorIS5_EEE6assignIPS5_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16vectorIN3gfx5RangeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorINS_4pairImjEENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EEOS2_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairImjEERNS_9allocatorIS2_EEE9push_backEOS2_ = comdat any

$_ZNSt3__16vectorINS_4pairImN3gfx13BaselineStyleEEENS_9allocatorIS4_EEE6insertENS_11__wrap_iterIPKS4_EEOS4_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairImN3gfx13BaselineStyleEEERNS_9allocatorIS4_EEE9push_backEOS4_ = comdat any

$_ZNSt3__16vectorINS_4pairImiEENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EEOS2_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairImiEERNS_9allocatorIS2_EEE9push_backEOS2_ = comdat any

$_ZNSt3__16vectorINS_4pairImbEENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EEOS2_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairImbEERNS_9allocatorIS2_EEE9push_backEOS2_ = comdat any

$_ZNSt3__16vectorINS_4pairImN3gfx4Font6WeightEEENS_9allocatorIS5_EEE6insertENS_11__wrap_iterIPKS5_EEOS5_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairImN3gfx4Font6WeightEEERNS_9allocatorIS5_EEE9push_backEOS5_ = comdat any

$_ZNSt3__16vectorIN3gfx5RangeENS_9allocatorIS2_EEE6assignIPKS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm = comdat any

$_ZNSt3__16vectorINS_4pairImmEENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EEOS2_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairImmEERNS_9allocatorIS2_EEE9push_backEOS2_ = comdat any

$_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE8__appendEm = comdat any

@_ZTVN3gfx8internal16SkiaTextRendererE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gfx::internal::SkiaTextRenderer"*)* @_ZN3gfx8internal16SkiaTextRendererD2Ev to i8*), i8* bitcast (void (%"class.gfx::internal::SkiaTextRenderer"*)* @_ZN3gfx8internal16SkiaTextRendererD0Ev to i8*), i8* bitcast (void (%"class.gfx::internal::SkiaTextRenderer"*, %struct.SkPoint*, i16*, i64)* @_ZN3gfx8internal16SkiaTextRenderer11DrawPosTextEPK7SkPointPKtm to i8*)] }, align 8
@__const._ZN3gfx8internal16SkiaTextRenderer11DrawPosTextEPK7SkPointPKtm.builder = private unnamed_addr constant { %class.SkAutoTMalloc, i64, i64, %struct.SkRect, i32, i8, [3 x i8], i64, %"struct.SkTextBlobBuilder::RunBuffer" } { %class.SkAutoTMalloc { %"class.std::__1::unique_ptr.73" { %"class.std::__1::__compressed_pair.74" { %"struct.std::__1::__compressed_pair_elem.75" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } }, i64 -6148914691236517206, i64 -6148914691236517206, %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i64 -6148914691236517206, %"struct.SkTextBlobBuilder::RunBuffer" { i16* inttoptr (i64 -6148914691236517206 to i16*), float* inttoptr (i64 -6148914691236517206 to float*), i8* inttoptr (i64 -6148914691236517206 to i8*), i32* inttoptr (i64 -6148914691236517206 to i32*) } }, align 8
@_ZN3gfx10RenderText24kPasswordReplacementCharE = hidden local_unnamed_addr constant i16 8226, align 2
@_ZN3gfx10RenderText33kDragToEndIfOutsideVerticalBoundsE = hidden local_unnamed_addr constant i8 0, align 1
@_ZN3gfx10RenderText16kInvalidBaselineE = hidden local_unnamed_addr constant i32 2147483647, align 4
@_ZN3gfx10RenderText20kLineThicknessFactorE = hidden local_unnamed_addr constant float 0x3FAC71C720000000, align 4
@_ZTVN3gfx10RenderTextE = hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gfx::RenderText"*)* @_ZN3gfx10RenderTextD2Ev to i8*), i8* bitcast (void (%"class.gfx::RenderText"*)* @_ZN3gfx10RenderTextD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.gfx::RenderText"*, i1)* @_ZN3gfx10RenderText28OnLayoutTextAttributeChangedEb to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str = private unnamed_addr constant [28 x i8] c"../../ui/gfx/render_text.cc\00", align 1
@.str.1 = private unnamed_addr constant [85 x i8] c"!composition_range.IsValid() || Range(0, text_.length()).Contains(composition_range)\00", align 1
@__const._ZN3gfx10RenderText4DrawEPNS_6CanvasEb.renderer = private unnamed_addr constant %"class.gfx::internal::SkiaTextRenderer" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %"class.gfx::Canvas"* inttoptr (i64 -6148914691236517206 to %"class.gfx::Canvas"*), %"class.cc::PaintCanvas"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintCanvas"*), %"class.cc::PaintFlags" <{ %class.sk_sp.32 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.33 { %"class.cc::PaintShader"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintShader"*) }, %class.sk_sp.67 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.68 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.69 { %class.SkDrawLooper* inttoptr (i64 -6148914691236517206 to %class.SkDrawLooper*) }, %class.sk_sp.70 { %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*) }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, %union.anon.71 { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }>, %class.SkFont <{ %class.sk_sp.72 { %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*) }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, i8 -86, i8 -86, i8 -86 }> }, align 8
@_ZN3gfx14kEllipsisUTF16E = external constant [0 x i16], align 2
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.2 = private unnamed_addr constant [18 x i8] c"RenderText::Elide\00", align 1

@_ZN3gfx8internal16SkiaTextRendererC1EPNS_6CanvasE = hidden unnamed_addr alias void (%"class.gfx::internal::SkiaTextRenderer"*, %"class.gfx::Canvas"*), void (%"class.gfx::internal::SkiaTextRenderer"*, %"class.gfx::Canvas"*)* @_ZN3gfx8internal16SkiaTextRendererC2EPNS_6CanvasE
@_ZN3gfx8internal16SkiaTextRendererD1Ev = hidden unnamed_addr alias void (%"class.gfx::internal::SkiaTextRenderer"*), void (%"class.gfx::internal::SkiaTextRenderer"*)* @_ZN3gfx8internal16SkiaTextRendererD2Ev
@_ZN3gfx8internal13StyleIteratorC1EPKNS_9BreakListIjEEPKNS2_INS_13BaselineStyleEEEPKNS2_IiEEPKNS2_INS_4Font6WeightEEEPKNSt3__15arrayINS2_IbEELm4EEE = hidden unnamed_addr alias void (%"class.gfx::internal::StyleIterator"*, %"class.gfx::BreakList"*, %"class.gfx::BreakList.91"*, %"class.gfx::BreakList.101"*, %"class.gfx::BreakList.111"*, %"struct.std::__1::array"*), void (%"class.gfx::internal::StyleIterator"*, %"class.gfx::BreakList"*, %"class.gfx::BreakList.91"*, %"class.gfx::BreakList.101"*, %"class.gfx::BreakList.111"*, %"struct.std::__1::array"*)* @_ZN3gfx8internal13StyleIteratorC2EPKNS_9BreakListIjEEPKNS2_INS_13BaselineStyleEEEPKNS2_IiEEPKNS2_INS_4Font6WeightEEEPKNSt3__15arrayINS2_IbEELm4EEE
@_ZN3gfx8internal13StyleIteratorC1ERKS1_ = hidden unnamed_addr alias void (%"class.gfx::internal::StyleIterator"*, %"class.gfx::internal::StyleIterator"*), void (%"class.gfx::internal::StyleIterator"*, %"class.gfx::internal::StyleIterator"*)* @_ZN3gfx8internal13StyleIteratorC2ERKS1_
@_ZN3gfx8internal13StyleIteratorD1Ev = hidden unnamed_addr alias void (%"class.gfx::internal::StyleIterator"*), void (%"class.gfx::internal::StyleIterator"*)* @_ZN3gfx8internal13StyleIteratorD2Ev
@_ZN3gfx8internal11LineSegmentC1Ev = hidden unnamed_addr alias void (%"struct.gfx::internal::LineSegment"*), void (%"struct.gfx::internal::LineSegment"*)* @_ZN3gfx8internal11LineSegmentC2Ev
@_ZN3gfx8internal11LineSegmentD1Ev = hidden unnamed_addr alias void (%"struct.gfx::internal::LineSegment"*), void (%"struct.gfx::internal::LineSegment"*)* @_ZN3gfx8internal11LineSegmentD2Ev
@_ZN3gfx8internal4LineC1Ev = hidden unnamed_addr alias void (%"struct.gfx::internal::Line"*), void (%"struct.gfx::internal::Line"*)* @_ZN3gfx8internal4LineC2Ev
@_ZN3gfx8internal4LineC1ERKS1_ = hidden unnamed_addr alias void (%"struct.gfx::internal::Line"*, %"struct.gfx::internal::Line"*), void (%"struct.gfx::internal::Line"*, %"struct.gfx::internal::Line"*)* @_ZN3gfx8internal4LineC2ERKS1_
@_ZN3gfx8internal4LineD1Ev = hidden unnamed_addr alias void (%"struct.gfx::internal::Line"*), void (%"struct.gfx::internal::Line"*)* @_ZN3gfx8internal4LineD2Ev
@_ZN3gfx8internal10ShapedTextC1ENSt3__16vectorINS0_4LineENS2_9allocatorIS4_EEEE = hidden unnamed_addr alias void (%"class.gfx::internal::ShapedText"*, %"class.std::__1::vector.143"*), void (%"class.gfx::internal::ShapedText"*, %"class.std::__1::vector.143"*)* @_ZN3gfx8internal10ShapedTextC2ENSt3__16vectorINS0_4LineENS2_9allocatorIS4_EEEE
@_ZN3gfx8internal10ShapedTextD1Ev = hidden unnamed_addr alias void (%"class.gfx::internal::ShapedText"*), void (%"class.gfx::internal::ShapedText"*)* @_ZN3gfx8internal10ShapedTextD2Ev
@_ZN3gfx10RenderTextD1Ev = hidden unnamed_addr alias void (%"class.gfx::RenderText"*), void (%"class.gfx::RenderText"*)* @_ZN3gfx10RenderTextD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx8internal16SkiaTextRendererC2EPNS_6CanvasE(%"class.gfx::internal::SkiaTextRenderer"*, %"class.gfx::Canvas"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3gfx8internal16SkiaTextRendererE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %0, i64 0, i32 1
  store %"class.gfx::Canvas"* %1, %"class.gfx::Canvas"** %4, align 8
  %5 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %1, i64 0, i32 4
  %7 = bitcast %"class.cc::PaintCanvas"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.cc::PaintCanvas"** %5 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %0, i64 0, i32 3
  tail call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* %10) #17
  %11 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %0, i64 0, i32 4
  tail call void @_ZN6SkFontC1Ev(%class.SkFont* %11) #17
  %12 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %0, i64 0, i32 3, i32 10
  %13 = bitcast %union.anon.71* %12 to i16*
  %14 = load i16, i16* %13, align 8
  %15 = and i16 %14, -193
  store i16 %15, i16* %13, align 8
  tail call void @_ZN6SkFont9setEdgingENS_6EdgingE(%class.SkFont* %11, i32 2) #17
  tail call void @_ZN6SkFont11setSubpixelEb(%class.SkFont* %11, i1 zeroext true) #17
  tail call void @_ZN6SkFont10setHintingE13SkFontHinting(%class.SkFont* %11, i32 2) #17
  ret void
}

declare void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"*) unnamed_addr #1

declare void @_ZN6SkFontC1Ev(%class.SkFont*) unnamed_addr #1

declare void @_ZN6SkFont9setEdgingENS_6EdgingE(%class.SkFont*, i32) local_unnamed_addr #1

declare void @_ZN6SkFont11setSubpixelEb(%class.SkFont*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN6SkFont10setHintingE13SkFontHinting(%class.SkFont*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx8internal16SkiaTextRendererD2Ev(%"class.gfx::internal::SkiaTextRenderer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3gfx8internal16SkiaTextRendererE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load %class.SkTypeface*, %class.SkTypeface** %3, align 8
  %5 = icmp eq %class.SkTypeface* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkTypeface* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkTypeface* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #17
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %0, i64 0, i32 3
  tail call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* %17) #17
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx8internal16SkiaTextRendererD0Ev(%"class.gfx::internal::SkiaTextRenderer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3gfx8internal16SkiaTextRendererE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load %class.SkTypeface*, %class.SkTypeface** %3, align 8
  %5 = icmp eq %class.SkTypeface* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkTypeface* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkTypeface* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #17
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %0, i64 0, i32 3
  tail call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* %17) #17
  %18 = bitcast %"class.gfx::internal::SkiaTextRenderer"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #18
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx8internal16SkiaTextRenderer13SetDrawLooperE5sk_spI12SkDrawLooperE(%"class.gfx::internal::SkiaTextRenderer"* nocapture, %class.sk_sp.69* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.sk_sp.69, %class.sk_sp.69* %1, i64 0, i32 0
  %4 = bitcast %class.sk_sp.69* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %class.SkDrawLooper* null, %class.SkDrawLooper** %3, align 8
  %6 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %0, i64 0, i32 3, i32 4
  %7 = getelementptr inbounds %class.sk_sp.69, %class.sk_sp.69* %6, i64 0, i32 0
  %8 = load %class.SkDrawLooper*, %class.SkDrawLooper** %7, align 8
  %9 = bitcast %class.sk_sp.69* %6 to i64*
  store i64 %5, i64* %9, align 8
  %10 = icmp eq %class.SkDrawLooper* %8, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.SkDrawLooper, %class.SkDrawLooper* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 -1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = bitcast %class.SkDrawLooper* %8 to %class.SkRefCntBase*
  %17 = bitcast %class.SkDrawLooper* %8 to void (%class.SkRefCntBase*)***
  %18 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, i64 2
  %20 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, align 8
  tail call void %20(%class.SkRefCntBase* nonnull %16) #17
  br label %21

21:                                               ; preds = %15, %11, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx8internal16SkiaTextRenderer19SetFontRenderParamsERKNS_16FontRenderParamsEb(%"class.gfx::internal::SkiaTextRenderer"*, %"struct.gfx::FontRenderParams"* nocapture readonly dereferenceable(12), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %0, i64 0, i32 4
  tail call void @_ZN3gfx8internal17ApplyRenderParamsERKNS_16FontRenderParamsEbP6SkFont(%"struct.gfx::FontRenderParams"* dereferenceable(12) %1, i1 zeroext %2, %class.SkFont* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx8internal17ApplyRenderParamsERKNS_16FontRenderParamsEbP6SkFont(%"struct.gfx::FontRenderParams"* nocapture readonly dereferenceable(12), i1 zeroext, %class.SkFont*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"struct.gfx::FontRenderParams", %"struct.gfx::FontRenderParams"* %0, i64 0, i32 0
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  %7 = or i1 %6, %1
  %8 = xor i1 %6, true
  %9 = zext i1 %8 to i32
  br i1 %7, label %15, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.gfx::FontRenderParams", %"struct.gfx::FontRenderParams"* %0, i64 0, i32 5
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  %14 = select i1 %13, i32 1, i32 2
  br label %15

15:                                               ; preds = %10, %3
  %16 = phi i32 [ %9, %3 ], [ %14, %10 ]
  tail call void @_ZN6SkFont9setEdgingENS_6EdgingE(%class.SkFont* %2, i32 %16) #17
  %17 = getelementptr inbounds %"struct.gfx::FontRenderParams", %"struct.gfx::FontRenderParams"* %0, i64 0, i32 1
  %18 = load i8, i8* %17, align 1, !range !2
  %19 = icmp ne i8 %18, 0
  tail call void @_ZN6SkFont11setSubpixelEb(%class.SkFont* %2, i1 zeroext %19) #17
  %20 = getelementptr inbounds %"struct.gfx::FontRenderParams", %"struct.gfx::FontRenderParams"* %0, i64 0, i32 2
  %21 = load i8, i8* %20, align 2, !range !2
  %22 = icmp ne i8 %21, 0
  tail call void @_ZN6SkFont19setForceAutoHintingEb(%class.SkFont* %2, i1 zeroext %22) #17
  %23 = getelementptr inbounds %"struct.gfx::FontRenderParams", %"struct.gfx::FontRenderParams"* %0, i64 0, i32 4
  %24 = load i32, i32* %23, align 4
  %25 = add i32 %24, -1
  %26 = icmp ult i32 %25, 3
  %27 = select i1 %26, i32 %24, i32 0
  tail call void @_ZN6SkFont10setHintingE13SkFontHinting(%class.SkFont* %2, i32 %27) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx8internal16SkiaTextRenderer11SetTypefaceE5sk_spI10SkTypefaceE(%"class.gfx::internal::SkiaTextRenderer"*, %class.sk_sp.72* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.72, align 8
  %4 = getelementptr inbounds %class.sk_sp.72, %class.sk_sp.72* %1, i64 0, i32 0
  %5 = bitcast %class.sk_sp.72* %1 to i64*
  %6 = load i64, i64* %5, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %4, align 8
  %7 = bitcast %class.sk_sp.72* %3 to i64*
  store i64 %6, i64* %7, align 8
  %8 = inttoptr i64 %6 to %class.SkTypeface*
  %9 = icmp eq i64 %6, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  br label %13

13:                                               ; preds = %10, %2
  %14 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %0, i64 0, i32 4, i32 0, i32 0
  %15 = load %class.SkTypeface*, %class.SkTypeface** %14, align 8
  store %class.SkTypeface* %8, %class.SkTypeface** %14, align 8
  %16 = icmp eq %class.SkTypeface* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = bitcast %class.SkTypeface* %15 to %class.SkRefCntBase*
  %23 = bitcast %class.SkTypeface* %15 to void (%class.SkRefCntBase*)***
  %24 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, i64 2
  %26 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, align 8
  tail call void %26(%class.SkRefCntBase* nonnull %22) #17
  br label %27

27:                                               ; preds = %13, %17, %21
  %28 = getelementptr inbounds %class.sk_sp.72, %class.sk_sp.72* %3, i64 0, i32 0
  %29 = load %class.SkTypeface*, %class.SkTypeface** %28, align 8
  %30 = icmp eq %class.SkTypeface* %29, null
  br i1 %30, label %41, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %29, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = bitcast %class.SkTypeface* %29 to %class.SkRefCntBase*
  %37 = bitcast %class.SkTypeface* %29 to void (%class.SkRefCntBase*)***
  %38 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, i64 2
  %40 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, align 8
  tail call void %40(%class.SkRefCntBase* nonnull %36) #17
  br label %41

41:                                               ; preds = %27, %31, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx8internal16SkiaTextRenderer11SetTextSizeEf(%"class.gfx::internal::SkiaTextRenderer"*, float) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %0, i64 0, i32 4
  tail call void @_ZN6SkFont7setSizeEf(%class.SkFont* %3, float %1) #17
  ret void
}

declare void @_ZN6SkFont7setSizeEf(%class.SkFont*, float) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3gfx8internal16SkiaTextRenderer18SetForegroundColorEj(%"class.gfx::internal::SkiaTextRenderer"* nocapture, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %0, i64 0, i32 3, i32 6
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx8internal16SkiaTextRenderer9SetShaderE5sk_spIN2cc11PaintShaderEE(%"class.gfx::internal::SkiaTextRenderer"* nocapture, %class.sk_sp.33* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.sk_sp.33, %class.sk_sp.33* %1, i64 0, i32 0
  %4 = bitcast %class.sk_sp.33* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %"class.cc::PaintShader"* null, %"class.cc::PaintShader"** %3, align 8
  %6 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %0, i64 0, i32 3, i32 1
  %7 = getelementptr inbounds %class.sk_sp.33, %class.sk_sp.33* %6, i64 0, i32 0
  %8 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %7, align 8
  %9 = bitcast %class.sk_sp.33* %6 to i64*
  store i64 %5, i64* %9, align 8
  %10 = icmp eq %"class.cc::PaintShader"* %8, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 -1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = bitcast %"class.cc::PaintShader"* %8 to %class.SkRefCntBase*
  %17 = bitcast %"class.cc::PaintShader"* %8 to void (%class.SkRefCntBase*)***
  %18 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, i64 2
  %20 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, align 8
  tail call void %20(%class.SkRefCntBase* nonnull %16) #17
  br label %21

21:                                               ; preds = %15, %11, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx8internal16SkiaTextRenderer11DrawPosTextEPK7SkPointPKtm(%"class.gfx::internal::SkiaTextRenderer"*, %struct.SkPoint* nocapture readonly, i16* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %5 = alloca %class.SkTextBlobBuilder, align 8
  %6 = alloca %class.sk_sp.77, align 8
  %7 = bitcast %class.SkTextBlobBuilder* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %7) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast ({ %class.SkAutoTMalloc, i64, i64, %struct.SkRect, i32, i8, [3 x i8], i64, %"struct.SkTextBlobBuilder::RunBuffer" }* @__const._ZN3gfx8internal16SkiaTextRenderer11DrawPosTextEPK7SkPointPKtm.builder to i8*), i64 88, i1 false)
  call void @_ZN17SkTextBlobBuilderC1Ev(%class.SkTextBlobBuilder* nonnull %5) #17
  %8 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %0, i64 0, i32 4
  %9 = trunc i64 %3 to i32
  %10 = call dereferenceable(32) %"struct.SkTextBlobBuilder::RunBuffer"* @_ZN17SkTextBlobBuilder11allocRunPosERK6SkFontiPK6SkRect(%class.SkTextBlobBuilder* nonnull %5, %class.SkFont* dereferenceable(24) %8, i32 %9, %struct.SkRect* null) #17
  %11 = bitcast %"struct.SkTextBlobBuilder::RunBuffer"* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = bitcast i16* %2 to i8*
  %14 = shl i64 %3, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %12, i8* align 2 %13, i64 %14, i1 false)
  %15 = getelementptr inbounds %"struct.SkTextBlobBuilder::RunBuffer", %"struct.SkTextBlobBuilder::RunBuffer"* %10, i64 0, i32 1
  %16 = bitcast float** %15 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %struct.SkPoint* %1 to i8*
  %19 = shl i64 %3, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 4 %18, i64 %19, i1 false)
  %20 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %0, i64 0, i32 2
  %21 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %20, align 8
  call void @_ZN17SkTextBlobBuilder4makeEv(%class.sk_sp.77* nonnull sret %6, %class.SkTextBlobBuilder* nonnull %5) #17
  %22 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %0, i64 0, i32 3
  %23 = bitcast %"class.cc::PaintCanvas"* %21 to void (%"class.cc::PaintCanvas"*, %class.sk_sp.77*, float, float, %"class.cc::PaintFlags"*)***
  %24 = load void (%"class.cc::PaintCanvas"*, %class.sk_sp.77*, float, float, %"class.cc::PaintFlags"*)**, void (%"class.cc::PaintCanvas"*, %class.sk_sp.77*, float, float, %"class.cc::PaintFlags"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %class.sk_sp.77*, float, float, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %class.sk_sp.77*, float, float, %"class.cc::PaintFlags"*)** %24, i64 38
  %26 = load void (%"class.cc::PaintCanvas"*, %class.sk_sp.77*, float, float, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %class.sk_sp.77*, float, float, %"class.cc::PaintFlags"*)** %25, align 8
  call void %26(%"class.cc::PaintCanvas"* %21, %class.sk_sp.77* nonnull %6, float 0.000000e+00, float 0.000000e+00, %"class.cc::PaintFlags"* dereferenceable(72) %22) #17
  %27 = getelementptr inbounds %class.sk_sp.77, %class.sk_sp.77* %6, i64 0, i32 0
  %28 = load %class.SkTextBlob*, %class.SkTextBlob** %27, align 8
  %29 = icmp eq %class.SkTextBlob* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %4
  %31 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  call void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob* nonnull %28) #17
  %35 = bitcast %class.SkTextBlob* %28 to i8*
  call void @_ZN10SkTextBlobdlEPv(i8* nonnull %35) #17
  br label %36

36:                                               ; preds = %4, %30, %34
  call void @_ZN17SkTextBlobBuilderD1Ev(%class.SkTextBlobBuilder* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %7) #17
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

declare void @_ZN17SkTextBlobBuilderC1Ev(%class.SkTextBlobBuilder*) unnamed_addr #1

declare dereferenceable(32) %"struct.SkTextBlobBuilder::RunBuffer"* @_ZN17SkTextBlobBuilder11allocRunPosERK6SkFontiPK6SkRect(%class.SkTextBlobBuilder*, %class.SkFont* dereferenceable(24), i32, %struct.SkRect*) local_unnamed_addr #1

declare void @_ZN17SkTextBlobBuilder4makeEv(%class.sk_sp.77* sret, %class.SkTextBlobBuilder*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind
declare void @_ZN17SkTextBlobBuilderD1Ev(%class.SkTextBlobBuilder*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx8internal16SkiaTextRenderer13DrawUnderlineEiiif(%"class.gfx::internal::SkiaTextRenderer"*, i32, i32, i32, float) local_unnamed_addr #0 align 2 {
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRect*
  %8 = sitofp i32 %1 to float
  %9 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %0, i64 0, i32 4, i32 1
  %10 = load float, float* %9, align 8
  %11 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #17
  %12 = sitofp i32 %2 to float
  %13 = fmul float %10, 0x3FBC71C720000000
  %14 = fadd float %13, %12
  %15 = sitofp i32 %3 to float
  %16 = fadd float %8, %15
  %17 = fmul float %4, 0x3FAC71C720000000
  %18 = fadd float %17, 0x3FBC71C720000000
  %19 = fmul float %18, %10
  %20 = fadd float %19, %12
  %21 = insertelement <2 x float> undef, float %8, i32 0
  %22 = insertelement <2 x float> %21, float %14, i32 1
  %23 = insertelement <2 x float> undef, float %16, i32 0
  %24 = insertelement <2 x float> %23, float %20, i32 1
  %25 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  store <2 x float> %22, <2 x float>* %25, align 8
  %26 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  store <2 x float> %24, <2 x float>* %26, align 8
  %27 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %0, i64 0, i32 2
  %28 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %27, align 8
  %29 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %0, i64 0, i32 3
  %30 = bitcast %"class.cc::PaintCanvas"* %28 to void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)***
  %31 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)**, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %31, i64 28
  %33 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %32, align 8
  call void %33(%"class.cc::PaintCanvas"* %28, %struct.SkRect* nonnull dereferenceable(16) %7, %"class.cc::PaintFlags"* dereferenceable(72) %29) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx8internal16SkiaTextRenderer10DrawStrikeEiiif(%"class.gfx::internal::SkiaTextRenderer"*, i32, i32, i32, float) local_unnamed_addr #0 align 2 {
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRect*
  %8 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %0, i64 0, i32 4, i32 1
  %9 = load float, float* %8, align 8
  %10 = fmul float %9, %4
  %11 = sitofp i32 %2 to float
  %12 = fmul float %9, 0x3FD0820820000000
  %13 = fsub float %11, %12
  %14 = fmul float %10, 5.000000e-01
  %15 = fsub float %13, %14
  %16 = sitofp i32 %1 to float
  %17 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #17
  %18 = sitofp i32 %3 to float
  %19 = fadd float %16, %18
  %20 = fadd float %10, %15
  %21 = insertelement <2 x float> undef, float %16, i32 0
  %22 = insertelement <2 x float> %21, float %15, i32 1
  %23 = insertelement <2 x float> undef, float %19, i32 0
  %24 = insertelement <2 x float> %23, float %20, i32 1
  %25 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  store <2 x float> %22, <2 x float>* %25, align 8
  %26 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  store <2 x float> %24, <2 x float>* %26, align 8
  %27 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %0, i64 0, i32 2
  %28 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %27, align 8
  %29 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %0, i64 0, i32 3
  %30 = bitcast %"class.cc::PaintCanvas"* %28 to void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)***
  %31 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)**, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %31, i64 28
  %33 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %32, align 8
  call void %33(%"class.cc::PaintCanvas"* %28, %struct.SkRect* nonnull dereferenceable(16) %7, %"class.cc::PaintFlags"* dereferenceable(72) %29) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx8internal13StyleIteratorC2EPKNS_9BreakListIjEEPKNS2_INS_13BaselineStyleEEEPKNS2_IiEEPKNS2_INS_4Font6WeightEEEPKNSt3__15arrayINS2_IbEELm4EEE(%"class.gfx::internal::StyleIterator"* nocapture, %"class.gfx::BreakList"*, %"class.gfx::BreakList.91"*, %"class.gfx::BreakList.101"*, %"class.gfx::BreakList.111"*, %"struct.std::__1::array"*) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 0
  store %"class.gfx::BreakList"* %1, %"class.gfx::BreakList"** %7, align 8
  %8 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 1
  store %"class.gfx::BreakList.91"* %2, %"class.gfx::BreakList.91"** %8, align 8
  %9 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 2
  store %"class.gfx::BreakList.101"* %3, %"class.gfx::BreakList.101"** %9, align 8
  %10 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 3
  store %"class.gfx::BreakList.111"* %4, %"class.gfx::BreakList.111"** %10, align 8
  %11 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 4
  store %"struct.std::__1::array"* %5, %"struct.std::__1::array"** %11, align 8
  %12 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 5, i32 0
  %13 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 6, i32 0
  %14 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 7, i32 0
  %15 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 8, i32 0
  %16 = bitcast %"class.gfx::BreakList"* %1 to i64*
  %17 = bitcast %"struct.std::__1::pair"** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 64, i1 false)
  %18 = load i64, i64* %16, align 8
  %19 = bitcast %"struct.std::__1::pair"** %12 to i64*
  store i64 %18, i64* %19, align 8
  %20 = bitcast %"class.gfx::BreakList.91"* %2 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"struct.std::__1::pair.94"** %13 to i64*
  store i64 %21, i64* %22, align 8
  %23 = bitcast %"class.gfx::BreakList.101"* %3 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"struct.std::__1::pair.104"** %14 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"class.gfx::BreakList.111"* %4 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"struct.std::__1::pair.114"** %15 to i64*
  store i64 %27, i64* %28, align 8
  %29 = bitcast %"struct.std::__1::array"* %5 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 9, i32 0, i64 0
  %32 = bitcast %"class.std::__1::__wrap_iter.135"* %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %5, i64 0, i32 0, i64 1, i32 0, i32 0, i32 0
  %34 = bitcast %"struct.std::__1::pair.124"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 9, i32 0, i64 1
  %37 = bitcast %"class.std::__1::__wrap_iter.135"* %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %5, i64 0, i32 0, i64 2, i32 0, i32 0, i32 0
  %39 = bitcast %"struct.std::__1::pair.124"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 9, i32 0, i64 2
  %42 = bitcast %"class.std::__1::__wrap_iter.135"* %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %5, i64 0, i32 0, i64 3, i32 0, i32 0, i32 0
  %44 = bitcast %"struct.std::__1::pair.124"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 9, i32 0, i64 3
  %47 = bitcast %"class.std::__1::__wrap_iter.135"* %46 to i64*
  store i64 %45, i64* %47, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx8internal13StyleIteratorC2ERKS1_(%"class.gfx::internal::StyleIterator"* nocapture, %"class.gfx::internal::StyleIterator"* nocapture readonly dereferenceable(104)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.gfx::internal::StyleIterator"* %0 to i8*
  %4 = bitcast %"class.gfx::internal::StyleIterator"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 104, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3gfx8internal13StyleIteratorD2Ev(%"class.gfx::internal::StyleIterator"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(104) %"class.gfx::internal::StyleIterator"* @_ZN3gfx8internal13StyleIteratoraSERKS1_(%"class.gfx::internal::StyleIterator"* returned, %"class.gfx::internal::StyleIterator"* nocapture readonly dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.gfx::internal::StyleIterator"* %0 to i8*
  %4 = bitcast %"class.gfx::internal::StyleIterator"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 104, i1 false)
  ret %"class.gfx::internal::StyleIterator"* %0
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK3gfx8internal13StyleIterator8GetRangeEv(%"class.gfx::internal::StyleIterator"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = tail call i64 @_ZNK3gfx8internal13StyleIterator20GetTextBreakingRangeEv(%"class.gfx::internal::StyleIterator"* %0)
  %3 = trunc i64 %2 to i32
  %4 = lshr i64 %2, 32
  %5 = trunc i64 %4 to i32
  %6 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 0
  %7 = load %"class.gfx::BreakList"*, %"class.gfx::BreakList"** %6, align 8
  %8 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 5, i32 0
  %9 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %9, i64 1
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %9, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.gfx::BreakList", %"class.gfx::BreakList"* %7, i64 0, i32 0, i32 0, i32 1
  %14 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %13, align 8
  %15 = icmp eq %"struct.std::__1::pair"* %10, %14
  %16 = getelementptr inbounds %"class.gfx::BreakList", %"class.gfx::BreakList"* %7, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %10, i64 0, i32 0
  %18 = select i1 %15, i64* %16, i64* %17
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %12 to i32
  %21 = trunc i64 %19 to i32
  %22 = icmp ult i32 %3, %5
  %23 = select i1 %22, i32 %3, i32 %5
  %24 = icmp ult i32 %20, %21
  %25 = select i1 %24, i32 %20, i32 %21
  %26 = icmp ult i32 %23, %25
  %27 = select i1 %26, i32 %25, i32 %23
  %28 = icmp ugt i32 %3, %5
  %29 = select i1 %28, i32 %3, i32 %5
  %30 = icmp ugt i32 %20, %21
  %31 = select i1 %30, i32 %20, i32 %21
  %32 = icmp ult i32 %31, %29
  %33 = select i1 %32, i32 %31, i32 %29
  %34 = icmp ult i32 %27, %33
  br i1 %34, label %62, label %35

35:                                               ; preds = %1
  %36 = and i64 %19, %12
  %37 = trunc i64 %36 to i32
  %38 = icmp eq i32 %37, -1
  %39 = and i64 %4, %2
  %40 = icmp eq i64 %39, 4294967295
  %41 = or i1 %40, %38
  %42 = icmp ult i32 %25, %23
  %43 = or i1 %41, %42
  %44 = icmp ugt i32 %31, %29
  %45 = or i1 %44, %43
  br i1 %45, label %52, label %46

46:                                               ; preds = %35
  %47 = icmp eq i32 %31, %29
  br i1 %47, label %48, label %62

48:                                               ; preds = %46
  %49 = icmp ne i32 %20, %21
  %50 = icmp eq i32 %3, %5
  %51 = xor i1 %50, %49
  br i1 %51, label %62, label %52

52:                                               ; preds = %48, %35
  %53 = or i1 %41, %26
  %54 = or i1 %32, %53
  br i1 %54, label %61, label %55

55:                                               ; preds = %52
  %56 = icmp eq i32 %29, %31
  br i1 %56, label %57, label %62

57:                                               ; preds = %55
  %58 = icmp ne i32 %3, %5
  %59 = icmp eq i32 %20, %21
  %60 = xor i1 %58, %59
  br i1 %60, label %62, label %61

61:                                               ; preds = %57, %52
  br label %62

62:                                               ; preds = %1, %46, %48, %55, %57, %61
  %63 = phi i32 [ -1, %61 ], [ %23, %57 ], [ %27, %48 ], [ %27, %1 ], [ %27, %46 ], [ %23, %55 ]
  %64 = phi i32 [ -1, %61 ], [ %29, %57 ], [ %33, %48 ], [ %33, %1 ], [ %33, %46 ], [ %29, %55 ]
  %65 = zext i32 %64 to i64
  %66 = shl nuw i64 %65, 32
  %67 = zext i32 %63 to i64
  %68 = or i64 %66, %67
  ret i64 %68
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK3gfx8internal13StyleIterator20GetTextBreakingRangeEv(%"class.gfx::internal::StyleIterator"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 1
  %3 = load %"class.gfx::BreakList.91"*, %"class.gfx::BreakList.91"** %2, align 8
  %4 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 6, i32 0
  %5 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %5, i64 1
  %7 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %5, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.gfx::BreakList.91", %"class.gfx::BreakList.91"* %3, i64 0, i32 0, i32 0, i32 1
  %10 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %9, align 8
  %11 = icmp eq %"struct.std::__1::pair.94"* %6, %10
  %12 = getelementptr inbounds %"class.gfx::BreakList.91", %"class.gfx::BreakList.91"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %6, i64 0, i32 0
  %14 = select i1 %11, i64* %12, i64* %13
  %15 = load i64, i64* %14, align 8
  %16 = trunc i64 %8 to i32
  %17 = trunc i64 %15 to i32
  %18 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 2
  %19 = load %"class.gfx::BreakList.101"*, %"class.gfx::BreakList.101"** %18, align 8
  %20 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 7, i32 0
  %21 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %21, i64 1
  %23 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %21, i64 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.gfx::BreakList.101", %"class.gfx::BreakList.101"* %19, i64 0, i32 0, i32 0, i32 1
  %26 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %25, align 8
  %27 = icmp eq %"struct.std::__1::pair.104"* %22, %26
  %28 = getelementptr inbounds %"class.gfx::BreakList.101", %"class.gfx::BreakList.101"* %19, i64 0, i32 1
  %29 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %22, i64 0, i32 0
  %30 = select i1 %27, i64* %28, i64* %29
  %31 = load i64, i64* %30, align 8
  %32 = trunc i64 %24 to i32
  %33 = trunc i64 %31 to i32
  %34 = icmp ult i32 %16, %17
  %35 = select i1 %34, i32 %16, i32 %17
  %36 = icmp ult i32 %32, %33
  %37 = select i1 %36, i32 %32, i32 %33
  %38 = icmp ult i32 %35, %37
  %39 = select i1 %38, i32 %37, i32 %35
  %40 = icmp ugt i32 %16, %17
  %41 = select i1 %40, i32 %16, i32 %17
  %42 = icmp ugt i32 %32, %33
  %43 = select i1 %42, i32 %32, i32 %33
  %44 = icmp ult i32 %43, %41
  %45 = select i1 %44, i32 %43, i32 %41
  %46 = icmp ult i32 %39, %45
  br i1 %46, label %75, label %47

47:                                               ; preds = %1
  %48 = and i64 %31, %24
  %49 = trunc i64 %48 to i32
  %50 = icmp eq i32 %49, -1
  %51 = and i64 %15, %8
  %52 = trunc i64 %51 to i32
  %53 = icmp eq i32 %52, -1
  %54 = or i1 %53, %50
  %55 = icmp ult i32 %37, %35
  %56 = or i1 %54, %55
  %57 = icmp ugt i32 %43, %41
  %58 = or i1 %57, %56
  br i1 %58, label %65, label %59

59:                                               ; preds = %47
  %60 = icmp eq i32 %43, %41
  br i1 %60, label %61, label %75

61:                                               ; preds = %59
  %62 = icmp ne i32 %32, %33
  %63 = icmp eq i32 %16, %17
  %64 = xor i1 %63, %62
  br i1 %64, label %75, label %65

65:                                               ; preds = %61, %47
  %66 = or i1 %54, %38
  %67 = or i1 %44, %66
  br i1 %67, label %74, label %68

68:                                               ; preds = %65
  %69 = icmp eq i32 %41, %43
  br i1 %69, label %70, label %75

70:                                               ; preds = %68
  %71 = icmp ne i32 %16, %17
  %72 = icmp eq i32 %32, %33
  %73 = xor i1 %71, %72
  br i1 %73, label %75, label %74

74:                                               ; preds = %70, %65
  br label %75

75:                                               ; preds = %1, %59, %61, %68, %70, %74
  %76 = phi i32 [ -1, %74 ], [ %35, %70 ], [ %39, %61 ], [ %39, %1 ], [ %39, %59 ], [ %35, %68 ]
  %77 = phi i32 [ -1, %74 ], [ %41, %70 ], [ %45, %61 ], [ %45, %1 ], [ %45, %59 ], [ %41, %68 ]
  %78 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 3
  %79 = load %"class.gfx::BreakList.111"*, %"class.gfx::BreakList.111"** %78, align 8
  %80 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 8, i32 0
  %81 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %80, align 8
  %82 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %81, i64 1
  %83 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %81, i64 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %"class.gfx::BreakList.111", %"class.gfx::BreakList.111"* %79, i64 0, i32 0, i32 0, i32 1
  %86 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %85, align 8
  %87 = icmp eq %"struct.std::__1::pair.114"* %82, %86
  %88 = getelementptr inbounds %"class.gfx::BreakList.111", %"class.gfx::BreakList.111"* %79, i64 0, i32 1
  %89 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %82, i64 0, i32 0
  %90 = select i1 %87, i64* %88, i64* %89
  %91 = load i64, i64* %90, align 8
  %92 = trunc i64 %84 to i32
  %93 = trunc i64 %91 to i32
  %94 = icmp ult i32 %76, %77
  %95 = select i1 %94, i32 %76, i32 %77
  %96 = icmp ult i32 %92, %93
  %97 = select i1 %96, i32 %92, i32 %93
  %98 = icmp ult i32 %95, %97
  %99 = select i1 %98, i32 %97, i32 %95
  %100 = icmp ugt i32 %76, %77
  %101 = select i1 %100, i32 %76, i32 %77
  %102 = icmp ugt i32 %92, %93
  %103 = select i1 %102, i32 %92, i32 %93
  %104 = icmp ult i32 %103, %101
  %105 = select i1 %104, i32 %103, i32 %101
  %106 = icmp ult i32 %99, %105
  br i1 %106, label %134, label %107

107:                                              ; preds = %75
  %108 = and i64 %91, %84
  %109 = trunc i64 %108 to i32
  %110 = icmp eq i32 %109, -1
  %111 = and i32 %77, %76
  %112 = icmp eq i32 %111, -1
  %113 = or i1 %112, %110
  %114 = icmp ult i32 %97, %95
  %115 = or i1 %113, %114
  %116 = icmp ugt i32 %103, %101
  %117 = or i1 %116, %115
  br i1 %117, label %124, label %118

118:                                              ; preds = %107
  %119 = icmp eq i32 %103, %101
  br i1 %119, label %120, label %134

120:                                              ; preds = %118
  %121 = icmp ne i32 %92, %93
  %122 = icmp eq i32 %76, %77
  %123 = xor i1 %122, %121
  br i1 %123, label %134, label %124

124:                                              ; preds = %120, %107
  %125 = or i1 %113, %98
  %126 = or i1 %104, %125
  br i1 %126, label %133, label %127

127:                                              ; preds = %124
  %128 = icmp eq i32 %101, %103
  br i1 %128, label %129, label %134

129:                                              ; preds = %127
  %130 = icmp ne i32 %76, %77
  %131 = icmp eq i32 %92, %93
  %132 = xor i1 %130, %131
  br i1 %132, label %134, label %133

133:                                              ; preds = %129, %124
  br label %134

134:                                              ; preds = %75, %118, %120, %127, %129, %133
  %135 = phi i32 [ -1, %133 ], [ %95, %129 ], [ %99, %120 ], [ %99, %75 ], [ %99, %118 ], [ %95, %127 ]
  %136 = phi i32 [ -1, %133 ], [ %101, %129 ], [ %105, %120 ], [ %105, %75 ], [ %105, %118 ], [ %101, %127 ]
  %137 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 4
  %138 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %137, align 8
  br label %144

139:                                              ; preds = %202
  %140 = zext i32 %204 to i64
  %141 = shl nuw i64 %140, 32
  %142 = zext i32 %203 to i64
  %143 = or i64 %141, %142
  ret i64 %143

144:                                              ; preds = %202, %134
  %145 = phi i64 [ 0, %134 ], [ %205, %202 ]
  %146 = phi i32 [ %136, %134 ], [ %204, %202 ]
  %147 = phi i32 [ %135, %134 ], [ %203, %202 ]
  %148 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 9, i32 0, i64 %145, i32 0
  %149 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %148, align 8
  %150 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %149, i64 1
  %151 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %149, i64 0, i32 0
  %152 = load i64, i64* %151, align 8
  %153 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %138, i64 0, i32 0, i64 %145, i32 0, i32 0, i32 1
  %154 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %153, align 8
  %155 = icmp eq %"struct.std::__1::pair.124"* %150, %154
  %156 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %138, i64 0, i32 0, i64 %145, i32 1
  %157 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %150, i64 0, i32 0
  %158 = select i1 %155, i64* %156, i64* %157
  %159 = load i64, i64* %158, align 8
  %160 = trunc i64 %152 to i32
  %161 = trunc i64 %159 to i32
  %162 = icmp ult i32 %147, %146
  %163 = select i1 %162, i32 %147, i32 %146
  %164 = icmp ult i32 %160, %161
  %165 = select i1 %164, i32 %160, i32 %161
  %166 = icmp ult i32 %163, %165
  %167 = select i1 %166, i32 %165, i32 %163
  %168 = icmp ugt i32 %147, %146
  %169 = select i1 %168, i32 %147, i32 %146
  %170 = icmp ugt i32 %160, %161
  %171 = select i1 %170, i32 %160, i32 %161
  %172 = icmp ult i32 %171, %169
  %173 = select i1 %172, i32 %171, i32 %169
  %174 = icmp ult i32 %167, %173
  br i1 %174, label %202, label %175

175:                                              ; preds = %144
  %176 = and i64 %159, %152
  %177 = trunc i64 %176 to i32
  %178 = icmp eq i32 %177, -1
  %179 = and i32 %146, %147
  %180 = icmp eq i32 %179, -1
  %181 = or i1 %180, %178
  %182 = icmp ult i32 %165, %163
  %183 = or i1 %181, %182
  %184 = icmp ugt i32 %171, %169
  %185 = or i1 %184, %183
  br i1 %185, label %192, label %186

186:                                              ; preds = %175
  %187 = icmp eq i32 %171, %169
  br i1 %187, label %188, label %202

188:                                              ; preds = %186
  %189 = icmp ne i32 %160, %161
  %190 = icmp eq i32 %147, %146
  %191 = xor i1 %190, %189
  br i1 %191, label %202, label %192

192:                                              ; preds = %188, %175
  %193 = or i1 %181, %166
  %194 = or i1 %172, %193
  br i1 %194, label %201, label %195

195:                                              ; preds = %192
  %196 = icmp eq i32 %169, %171
  br i1 %196, label %197, label %202

197:                                              ; preds = %195
  %198 = icmp ne i32 %147, %146
  %199 = icmp eq i32 %160, %161
  %200 = xor i1 %198, %199
  br i1 %200, label %202, label %201

201:                                              ; preds = %197, %192
  br label %202

202:                                              ; preds = %144, %186, %188, %195, %197, %201
  %203 = phi i32 [ -1, %201 ], [ %163, %197 ], [ %167, %188 ], [ %167, %144 ], [ %167, %186 ], [ %163, %195 ]
  %204 = phi i32 [ -1, %201 ], [ %169, %197 ], [ %173, %188 ], [ %173, %144 ], [ %173, %186 ], [ %169, %195 ]
  %205 = add nuw nsw i64 %145, 1
  %206 = icmp eq i64 %205, 4
  br i1 %206, label %139, label %144
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gfx8internal13StyleIterator19IncrementToPositionEm(%"class.gfx::internal::StyleIterator"* nocapture, i64) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 0
  %4 = load %"class.gfx::BreakList"*, %"class.gfx::BreakList"** %3, align 8
  %5 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 5, i32 0
  %6 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %7 = getelementptr inbounds %"class.gfx::BreakList", %"class.gfx::BreakList"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %7, align 8
  %9 = getelementptr inbounds %"class.gfx::BreakList", %"class.gfx::BreakList"* %4, i64 0, i32 1
  br label %10

10:                                               ; preds = %13, %2
  %11 = phi %"struct.std::__1::pair"* [ %6, %2 ], [ %14, %13 ]
  %12 = icmp eq %"struct.std::__1::pair"* %11, %8
  br i1 %12, label %26, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 1
  %15 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq %"struct.std::__1::pair"* %14, %8
  %18 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %14, i64 0, i32 0
  %19 = select i1 %17, i64* %9, i64* %18
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %16, 4294967295
  %22 = icmp ule i64 %21, %1
  %23 = and i64 %20, 4294967295
  %24 = icmp ugt i64 %23, %1
  %25 = and i1 %22, %24
  br i1 %25, label %26, label %10

26:                                               ; preds = %10, %13
  %27 = phi %"struct.std::__1::pair"* [ %8, %10 ], [ %11, %13 ]
  store %"struct.std::__1::pair"* %27, %"struct.std::__1::pair"** %5, align 8
  %28 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 1
  %29 = load %"class.gfx::BreakList.91"*, %"class.gfx::BreakList.91"** %28, align 8
  %30 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 6, i32 0
  %31 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %30, align 8
  %32 = getelementptr inbounds %"class.gfx::BreakList.91", %"class.gfx::BreakList.91"* %29, i64 0, i32 0, i32 0, i32 1
  %33 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %32, align 8
  %34 = getelementptr inbounds %"class.gfx::BreakList.91", %"class.gfx::BreakList.91"* %29, i64 0, i32 1
  br label %35

35:                                               ; preds = %38, %26
  %36 = phi %"struct.std::__1::pair.94"* [ %31, %26 ], [ %39, %38 ]
  %37 = icmp eq %"struct.std::__1::pair.94"* %36, %33
  br i1 %37, label %51, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %36, i64 1
  %40 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %36, i64 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq %"struct.std::__1::pair.94"* %39, %33
  %43 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %39, i64 0, i32 0
  %44 = select i1 %42, i64* %34, i64* %43
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %41, 4294967295
  %47 = icmp ule i64 %46, %1
  %48 = and i64 %45, 4294967295
  %49 = icmp ugt i64 %48, %1
  %50 = and i1 %47, %49
  br i1 %50, label %51, label %35

51:                                               ; preds = %35, %38
  %52 = phi %"struct.std::__1::pair.94"* [ %33, %35 ], [ %36, %38 ]
  store %"struct.std::__1::pair.94"* %52, %"struct.std::__1::pair.94"** %30, align 8
  %53 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 2
  %54 = load %"class.gfx::BreakList.101"*, %"class.gfx::BreakList.101"** %53, align 8
  %55 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 7, i32 0
  %56 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %55, align 8
  %57 = getelementptr inbounds %"class.gfx::BreakList.101", %"class.gfx::BreakList.101"* %54, i64 0, i32 0, i32 0, i32 1
  %58 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %57, align 8
  %59 = getelementptr inbounds %"class.gfx::BreakList.101", %"class.gfx::BreakList.101"* %54, i64 0, i32 1
  br label %60

60:                                               ; preds = %63, %51
  %61 = phi %"struct.std::__1::pair.104"* [ %56, %51 ], [ %64, %63 ]
  %62 = icmp eq %"struct.std::__1::pair.104"* %61, %58
  br i1 %62, label %76, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %61, i64 1
  %65 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %61, i64 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = icmp eq %"struct.std::__1::pair.104"* %64, %58
  %68 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %64, i64 0, i32 0
  %69 = select i1 %67, i64* %59, i64* %68
  %70 = load i64, i64* %69, align 8
  %71 = and i64 %66, 4294967295
  %72 = icmp ule i64 %71, %1
  %73 = and i64 %70, 4294967295
  %74 = icmp ugt i64 %73, %1
  %75 = and i1 %72, %74
  br i1 %75, label %76, label %60

76:                                               ; preds = %60, %63
  %77 = phi %"struct.std::__1::pair.104"* [ %58, %60 ], [ %61, %63 ]
  store %"struct.std::__1::pair.104"* %77, %"struct.std::__1::pair.104"** %55, align 8
  %78 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 3
  %79 = load %"class.gfx::BreakList.111"*, %"class.gfx::BreakList.111"** %78, align 8
  %80 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 8, i32 0
  %81 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %80, align 8
  %82 = getelementptr inbounds %"class.gfx::BreakList.111", %"class.gfx::BreakList.111"* %79, i64 0, i32 0, i32 0, i32 1
  %83 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %82, align 8
  %84 = getelementptr inbounds %"class.gfx::BreakList.111", %"class.gfx::BreakList.111"* %79, i64 0, i32 1
  br label %85

85:                                               ; preds = %88, %76
  %86 = phi %"struct.std::__1::pair.114"* [ %81, %76 ], [ %89, %88 ]
  %87 = icmp eq %"struct.std::__1::pair.114"* %86, %83
  br i1 %87, label %101, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %86, i64 1
  %90 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %86, i64 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = icmp eq %"struct.std::__1::pair.114"* %89, %83
  %93 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %89, i64 0, i32 0
  %94 = select i1 %92, i64* %84, i64* %93
  %95 = load i64, i64* %94, align 8
  %96 = and i64 %91, 4294967295
  %97 = icmp ule i64 %96, %1
  %98 = and i64 %95, 4294967295
  %99 = icmp ugt i64 %98, %1
  %100 = and i1 %97, %99
  br i1 %100, label %101, label %85

101:                                              ; preds = %85, %88
  %102 = phi %"struct.std::__1::pair.114"* [ %83, %85 ], [ %86, %88 ]
  store %"struct.std::__1::pair.114"* %102, %"struct.std::__1::pair.114"** %80, align 8
  %103 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 4
  %104 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %103, align 8
  %105 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 9, i32 0, i64 0, i32 0
  %106 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %105, align 8
  %107 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %104, i64 0, i32 0, i64 0, i32 0, i32 0, i32 1
  %108 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %107, align 8
  %109 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %104, i64 0, i32 0, i64 0, i32 1
  br label %110

110:                                              ; preds = %113, %101
  %111 = phi %"struct.std::__1::pair.124"* [ %106, %101 ], [ %114, %113 ]
  %112 = icmp eq %"struct.std::__1::pair.124"* %111, %108
  br i1 %112, label %126, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %111, i64 1
  %115 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %111, i64 0, i32 0
  %116 = load i64, i64* %115, align 8
  %117 = icmp eq %"struct.std::__1::pair.124"* %114, %108
  %118 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %114, i64 0, i32 0
  %119 = select i1 %117, i64* %109, i64* %118
  %120 = load i64, i64* %119, align 8
  %121 = and i64 %116, 4294967295
  %122 = icmp ule i64 %121, %1
  %123 = and i64 %120, 4294967295
  %124 = icmp ugt i64 %123, %1
  %125 = and i1 %122, %124
  br i1 %125, label %126, label %110

126:                                              ; preds = %110, %113
  %127 = phi %"struct.std::__1::pair.124"* [ %108, %110 ], [ %111, %113 ]
  store %"struct.std::__1::pair.124"* %127, %"struct.std::__1::pair.124"** %105, align 8
  %128 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 9, i32 0, i64 1, i32 0
  %129 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %128, align 8
  %130 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %104, i64 0, i32 0, i64 1, i32 0, i32 0, i32 1
  %131 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %130, align 8
  %132 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %104, i64 0, i32 0, i64 1, i32 1
  br label %133

133:                                              ; preds = %136, %126
  %134 = phi %"struct.std::__1::pair.124"* [ %129, %126 ], [ %137, %136 ]
  %135 = icmp eq %"struct.std::__1::pair.124"* %134, %131
  br i1 %135, label %149, label %136

136:                                              ; preds = %133
  %137 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %134, i64 1
  %138 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %134, i64 0, i32 0
  %139 = load i64, i64* %138, align 8
  %140 = icmp eq %"struct.std::__1::pair.124"* %137, %131
  %141 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %137, i64 0, i32 0
  %142 = select i1 %140, i64* %132, i64* %141
  %143 = load i64, i64* %142, align 8
  %144 = and i64 %139, 4294967295
  %145 = icmp ule i64 %144, %1
  %146 = and i64 %143, 4294967295
  %147 = icmp ugt i64 %146, %1
  %148 = and i1 %145, %147
  br i1 %148, label %149, label %133

149:                                              ; preds = %136, %133
  %150 = phi %"struct.std::__1::pair.124"* [ %131, %133 ], [ %134, %136 ]
  store %"struct.std::__1::pair.124"* %150, %"struct.std::__1::pair.124"** %128, align 8
  %151 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 9, i32 0, i64 2, i32 0
  %152 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %151, align 8
  %153 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %104, i64 0, i32 0, i64 2, i32 0, i32 0, i32 1
  %154 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %153, align 8
  %155 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %104, i64 0, i32 0, i64 2, i32 1
  br label %156

156:                                              ; preds = %159, %149
  %157 = phi %"struct.std::__1::pair.124"* [ %152, %149 ], [ %160, %159 ]
  %158 = icmp eq %"struct.std::__1::pair.124"* %157, %154
  br i1 %158, label %172, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %157, i64 1
  %161 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %157, i64 0, i32 0
  %162 = load i64, i64* %161, align 8
  %163 = icmp eq %"struct.std::__1::pair.124"* %160, %154
  %164 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %160, i64 0, i32 0
  %165 = select i1 %163, i64* %155, i64* %164
  %166 = load i64, i64* %165, align 8
  %167 = and i64 %162, 4294967295
  %168 = icmp ule i64 %167, %1
  %169 = and i64 %166, 4294967295
  %170 = icmp ugt i64 %169, %1
  %171 = and i1 %168, %170
  br i1 %171, label %172, label %156

172:                                              ; preds = %159, %156
  %173 = phi %"struct.std::__1::pair.124"* [ %154, %156 ], [ %157, %159 ]
  store %"struct.std::__1::pair.124"* %173, %"struct.std::__1::pair.124"** %151, align 8
  %174 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 9, i32 0, i64 3, i32 0
  %175 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %174, align 8
  %176 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %104, i64 0, i32 0, i64 3, i32 0, i32 0, i32 1
  %177 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %176, align 8
  %178 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %104, i64 0, i32 0, i64 3, i32 1
  br label %179

179:                                              ; preds = %182, %172
  %180 = phi %"struct.std::__1::pair.124"* [ %175, %172 ], [ %183, %182 ]
  %181 = icmp eq %"struct.std::__1::pair.124"* %180, %177
  br i1 %181, label %195, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %180, i64 1
  %184 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %180, i64 0, i32 0
  %185 = load i64, i64* %184, align 8
  %186 = icmp eq %"struct.std::__1::pair.124"* %183, %177
  %187 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %183, i64 0, i32 0
  %188 = select i1 %186, i64* %178, i64* %187
  %189 = load i64, i64* %188, align 8
  %190 = and i64 %185, 4294967295
  %191 = icmp ule i64 %190, %1
  %192 = and i64 %189, 4294967295
  %193 = icmp ugt i64 %192, %1
  %194 = and i1 %191, %193
  br i1 %194, label %195, label %179

195:                                              ; preds = %182, %179
  %196 = phi %"struct.std::__1::pair.124"* [ %177, %179 ], [ %180, %182 ]
  store %"struct.std::__1::pair.124"* %196, %"struct.std::__1::pair.124"** %174, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3gfx8internal11LineSegmentC2Ev(%"struct.gfx::internal::LineSegment"* nocapture) unnamed_addr #4 align 2 {
  %2 = bitcast %"struct.gfx::internal::LineSegment"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3gfx8internal11LineSegmentD2Ev(%"struct.gfx::internal::LineSegment"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx8internal4LineC2Ev(%"struct.gfx::internal::Line"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.gfx::internal::Line"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 44, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx8internal4LineC2ERKS1_(%"struct.gfx::internal::Line"*, %"struct.gfx::internal::Line"* nocapture readonly dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.gfx::internal::Line"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #17
  %4 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"struct.gfx::internal::LineSegment"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"struct.gfx::internal::Line"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 24
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %42, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 768614336404564650
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"struct.gfx::internal::Line"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #19
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #18
  %18 = bitcast i8* %17 to %"struct.gfx::internal::LineSegment"*
  %19 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %0, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast %"struct.gfx::internal::LineSegment"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"struct.gfx::internal::Line"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"struct.gfx::internal::LineSegment", %"struct.gfx::internal::LineSegment"* %18, i64 %10
  %23 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.gfx::internal::LineSegment"* %22, %"struct.gfx::internal::LineSegment"** %23, align 8
  %24 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %1, i64 0, i32 0, i32 0, i32 0
  %25 = load %"struct.gfx::internal::LineSegment"*, %"struct.gfx::internal::LineSegment"** %24, align 8
  %26 = load %"struct.gfx::internal::LineSegment"*, %"struct.gfx::internal::LineSegment"** %4, align 8
  %27 = bitcast %"struct.gfx::internal::LineSegment"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = icmp eq %"struct.gfx::internal::LineSegment"* %25, %26
  br i1 %29, label %40, label %30

30:                                               ; preds = %16, %30
  %31 = phi %"struct.gfx::internal::LineSegment"* [ %36, %30 ], [ %18, %16 ]
  %32 = phi %"struct.gfx::internal::LineSegment"* [ %35, %30 ], [ %25, %16 ]
  %33 = bitcast %"struct.gfx::internal::LineSegment"* %31 to i8*
  %34 = bitcast %"struct.gfx::internal::LineSegment"* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 24, i1 false) #17
  %35 = getelementptr inbounds %"struct.gfx::internal::LineSegment", %"struct.gfx::internal::LineSegment"* %32, i64 1
  %36 = getelementptr inbounds %"struct.gfx::internal::LineSegment", %"struct.gfx::internal::LineSegment"* %31, i64 1
  %37 = icmp eq %"struct.gfx::internal::LineSegment"* %35, %26
  br i1 %37, label %38, label %30

38:                                               ; preds = %30
  %39 = ptrtoint %"struct.gfx::internal::LineSegment"* %36 to i64
  br label %40

40:                                               ; preds = %38, %16
  %41 = phi i64 [ %28, %16 ], [ %39, %38 ]
  store i64 %41, i64* %27, align 8
  br label %42

42:                                               ; preds = %2, %40
  %43 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %1, i64 0, i32 1
  %45 = bitcast %"class.gfx::SizeF"* %43 to i8*
  %46 = bitcast %"class.gfx::SizeF"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 20, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx8internal4LineD2Ev(%"struct.gfx::internal::Line"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"struct.gfx::internal::LineSegment"*, %"struct.gfx::internal::LineSegment"** %2, align 8
  %4 = icmp eq %"struct.gfx::internal::LineSegment"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.gfx::internal::LineSegment"* %3 to i64
  %7 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.gfx::internal::LineSegment"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.gfx::internal::LineSegment"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #18
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx8internal10ShapedTextC2ENSt3__16vectorINS0_4LineENS2_9allocatorIS4_EEEE(%"class.gfx::internal::ShapedText"* nocapture, %"class.std::__1::vector.143"* nocapture) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.gfx::internal::ShapedText"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #17
  %4 = bitcast %"class.std::__1::vector.143"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.gfx::internal::ShapedText"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.143", %"class.std::__1::vector.143"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"struct.gfx::internal::Line"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.gfx::internal::ShapedText", %"class.gfx::internal::ShapedText"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast %"struct.gfx::internal::Line"** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.143", %"class.std::__1::vector.143"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"struct.gfx::internal::Line"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.gfx::internal::ShapedText", %"class.gfx::internal::ShapedText"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.gfx::internal::Line"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"class.std::__1::vector.143"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx8internal10ShapedTextD2Ev(%"class.gfx::internal::ShapedText"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::internal::ShapedText", %"class.gfx::internal::ShapedText"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"struct.gfx::internal::Line"*, %"struct.gfx::internal::Line"** %2, align 8
  %4 = icmp eq %"struct.gfx::internal::Line"* %3, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.gfx::internal::Line"* %3 to i8*
  %7 = getelementptr inbounds %"class.gfx::internal::ShapedText", %"class.gfx::internal::ShapedText"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"struct.gfx::internal::Line"*, %"struct.gfx::internal::Line"** %7, align 8
  %9 = icmp eq %"struct.gfx::internal::Line"* %8, %3
  br i1 %9, label %26, label %10

10:                                               ; preds = %5, %21
  %11 = phi %"struct.gfx::internal::Line"* [ %12, %21 ], [ %8, %5 ]
  %12 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %11, i64 -1
  %13 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"struct.gfx::internal::LineSegment"*, %"struct.gfx::internal::LineSegment"** %13, align 8
  %15 = icmp eq %"struct.gfx::internal::LineSegment"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %10
  %17 = ptrtoint %"struct.gfx::internal::LineSegment"* %14 to i64
  %18 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %11, i64 -1, i32 0, i32 0, i32 1
  %19 = bitcast %"struct.gfx::internal::LineSegment"** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast %"struct.gfx::internal::LineSegment"* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #18
  br label %21

21:                                               ; preds = %16, %10
  %22 = icmp eq %"struct.gfx::internal::Line"* %12, %3
  br i1 %22, label %23, label %10

23:                                               ; preds = %21
  %24 = bitcast %"class.gfx::internal::ShapedText"* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %5
  %27 = phi i8* [ %25, %23 ], [ %6, %5 ]
  store %"struct.gfx::internal::Line"* %3, %"struct.gfx::internal::Line"** %7, align 8
  tail call void @_ZdlPv(i8* %27) #18
  br label %28

28:                                               ; preds = %1, %26
  ret void
}

declare void @_ZN6SkFont19setForceAutoHintingEb(%class.SkFont*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderTextD2Ev(%"class.gfx::RenderText"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN3gfx10RenderTextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 59, i32 0, i32 0, i32 0
  %4 = load %"class.gfx::internal::ShapedText"*, %"class.gfx::internal::ShapedText"** %3, align 8
  store %"class.gfx::internal::ShapedText"* null, %"class.gfx::internal::ShapedText"** %3, align 8
  %5 = icmp eq %"class.gfx::internal::ShapedText"* %4, null
  br i1 %5, label %35, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gfx::internal::ShapedText", %"class.gfx::internal::ShapedText"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.gfx::internal::Line"*, %"struct.gfx::internal::Line"** %7, align 8
  %9 = icmp eq %"struct.gfx::internal::Line"* %8, null
  br i1 %9, label %33, label %10

10:                                               ; preds = %6
  %11 = bitcast %"struct.gfx::internal::Line"* %8 to i8*
  %12 = getelementptr inbounds %"class.gfx::internal::ShapedText", %"class.gfx::internal::ShapedText"* %4, i64 0, i32 0, i32 0, i32 1
  %13 = load %"struct.gfx::internal::Line"*, %"struct.gfx::internal::Line"** %12, align 8
  %14 = icmp eq %"struct.gfx::internal::Line"* %13, %8
  br i1 %14, label %31, label %15

15:                                               ; preds = %10, %26
  %16 = phi %"struct.gfx::internal::Line"* [ %17, %26 ], [ %13, %10 ]
  %17 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %16, i64 -1
  %18 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"struct.gfx::internal::LineSegment"*, %"struct.gfx::internal::LineSegment"** %18, align 8
  %20 = icmp eq %"struct.gfx::internal::LineSegment"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = ptrtoint %"struct.gfx::internal::LineSegment"* %19 to i64
  %23 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %16, i64 -1, i32 0, i32 0, i32 1
  %24 = bitcast %"struct.gfx::internal::LineSegment"** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = bitcast %"struct.gfx::internal::LineSegment"* %19 to i8*
  tail call void @_ZdlPv(i8* %25) #18
  br label %26

26:                                               ; preds = %21, %15
  %27 = icmp eq %"struct.gfx::internal::Line"* %17, %8
  br i1 %27, label %28, label %15

28:                                               ; preds = %26
  %29 = bitcast %"class.gfx::internal::ShapedText"* %4 to i8**
  %30 = load i8*, i8** %29, align 8
  br label %31

31:                                               ; preds = %28, %10
  %32 = phi i8* [ %30, %28 ], [ %11, %10 ]
  store %"struct.gfx::internal::Line"* %8, %"struct.gfx::internal::Line"** %12, align 8
  tail call void @_ZdlPv(i8* %32) #18
  br label %33

33:                                               ; preds = %31, %6
  %34 = bitcast %"class.gfx::internal::ShapedText"* %4 to i8*
  tail call void @_ZdlPv(i8* %34) #18
  br label %35

35:                                               ; preds = %1, %33
  %36 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %36, align 8
  %38 = icmp eq %"struct.std::__1::pair.186"* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %35
  %40 = ptrtoint %"struct.std::__1::pair.186"* %37 to i64
  %41 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 0, i32 0, i32 1
  %42 = bitcast %"struct.std::__1::pair.186"** %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = bitcast %"struct.std::__1::pair.186"* %37 to i8*
  tail call void @_ZdlPv(i8* %43) #18
  br label %44

44:                                               ; preds = %35, %39
  %45 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 57, i32 0, i32 0
  %46 = load %"class.gfx::ShadowValue"*, %"class.gfx::ShadowValue"** %45, align 8
  %47 = icmp eq %"class.gfx::ShadowValue"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %44
  %49 = ptrtoint %"class.gfx::ShadowValue"* %46 to i64
  %50 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 57, i32 0, i32 1
  %51 = bitcast %"class.gfx::ShadowValue"** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = bitcast %"class.gfx::ShadowValue"* %46 to i8*
  tail call void @_ZdlPv(i8* %52) #18
  br label %53

53:                                               ; preds = %44, %48
  %54 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 38
  %55 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %55, i64 0, i32 1, i32 1
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %53
  %60 = bitcast %"class.std::__1::basic_string"* %54 to i8**
  %61 = load i8*, i8** %60, align 8
  tail call void @_ZdlPv(i8* %61) #18
  br label %62

62:                                               ; preds = %53, %59
  %63 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37
  %64 = bitcast %"class.std::__1::basic_string"* %63 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %64, i64 0, i32 1, i32 1
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %62
  %69 = bitcast %"class.std::__1::basic_string"* %63 to i8**
  %70 = load i8*, i8** %69, align 8
  tail call void @_ZdlPv(i8* %70) #18
  br label %71

71:                                               ; preds = %62, %68
  %72 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 32, i32 0, i32 0
  %73 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %72, align 8
  %74 = icmp eq %"struct.gfx::internal::TextToDisplayIndex"* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %71
  %76 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %73 to i64
  %77 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 32, i32 0, i32 1
  %78 = bitcast %"struct.gfx::internal::TextToDisplayIndex"** %77 to i64*
  store i64 %76, i64* %78, align 8
  %79 = bitcast %"struct.gfx::internal::TextToDisplayIndex"* %73 to i8*
  tail call void @_ZdlPv(i8* %79) #18
  br label %80

80:                                               ; preds = %71, %75
  %81 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 3, i32 0, i32 0, i32 0
  %82 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %81, align 8
  %83 = icmp eq %"struct.std::__1::pair.124"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %80
  %85 = ptrtoint %"struct.std::__1::pair.124"* %82 to i64
  %86 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 3, i32 0, i32 0, i32 1
  %87 = bitcast %"struct.std::__1::pair.124"** %86 to i64*
  store i64 %85, i64* %87, align 8
  %88 = bitcast %"struct.std::__1::pair.124"* %82 to i8*
  tail call void @_ZdlPv(i8* %88) #18
  br label %89

89:                                               ; preds = %84, %80
  %90 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 2, i32 0, i32 0, i32 0
  %91 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %90, align 8
  %92 = icmp eq %"struct.std::__1::pair.124"* %91, null
  br i1 %92, label %98, label %93

93:                                               ; preds = %89
  %94 = ptrtoint %"struct.std::__1::pair.124"* %91 to i64
  %95 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 2, i32 0, i32 0, i32 1
  %96 = bitcast %"struct.std::__1::pair.124"** %95 to i64*
  store i64 %94, i64* %96, align 8
  %97 = bitcast %"struct.std::__1::pair.124"* %91 to i8*
  tail call void @_ZdlPv(i8* %97) #18
  br label %98

98:                                               ; preds = %93, %89
  %99 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 1, i32 0, i32 0, i32 0
  %100 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %99, align 8
  %101 = icmp eq %"struct.std::__1::pair.124"* %100, null
  br i1 %101, label %107, label %102

102:                                              ; preds = %98
  %103 = ptrtoint %"struct.std::__1::pair.124"* %100 to i64
  %104 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 1, i32 0, i32 0, i32 1
  %105 = bitcast %"struct.std::__1::pair.124"** %104 to i64*
  store i64 %103, i64* %105, align 8
  %106 = bitcast %"struct.std::__1::pair.124"* %100 to i8*
  tail call void @_ZdlPv(i8* %106) #18
  br label %107

107:                                              ; preds = %102, %98
  %108 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 0, i32 0, i32 0, i32 0
  %109 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %108, align 8
  %110 = icmp eq %"struct.std::__1::pair.124"* %109, null
  br i1 %110, label %116, label %111

111:                                              ; preds = %107
  %112 = ptrtoint %"struct.std::__1::pair.124"* %109 to i64
  %113 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 0, i32 0, i32 0, i32 1
  %114 = bitcast %"struct.std::__1::pair.124"** %113 to i64*
  store i64 %112, i64* %114, align 8
  %115 = bitcast %"struct.std::__1::pair.124"* %109 to i8*
  tail call void @_ZdlPv(i8* %115) #18
  br label %116

116:                                              ; preds = %107, %111
  %117 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 30, i32 0, i32 0, i32 0
  %118 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %117, align 8
  %119 = icmp eq %"struct.std::__1::pair.114"* %118, null
  br i1 %119, label %125, label %120

120:                                              ; preds = %116
  %121 = ptrtoint %"struct.std::__1::pair.114"* %118 to i64
  %122 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 30, i32 0, i32 0, i32 1
  %123 = bitcast %"struct.std::__1::pair.114"** %122 to i64*
  store i64 %121, i64* %123, align 8
  %124 = bitcast %"struct.std::__1::pair.114"* %118 to i8*
  tail call void @_ZdlPv(i8* %124) #18
  br label %125

125:                                              ; preds = %116, %120
  %126 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 29, i32 0, i32 0, i32 0
  %127 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %126, align 8
  %128 = icmp eq %"struct.std::__1::pair.104"* %127, null
  br i1 %128, label %134, label %129

129:                                              ; preds = %125
  %130 = ptrtoint %"struct.std::__1::pair.104"* %127 to i64
  %131 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 29, i32 0, i32 0, i32 1
  %132 = bitcast %"struct.std::__1::pair.104"** %131 to i64*
  store i64 %130, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::pair.104"* %127 to i8*
  tail call void @_ZdlPv(i8* %133) #18
  br label %134

134:                                              ; preds = %125, %129
  %135 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 28, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %135, align 8
  %137 = icmp eq %"struct.std::__1::pair.94"* %136, null
  br i1 %137, label %143, label %138

138:                                              ; preds = %134
  %139 = ptrtoint %"struct.std::__1::pair.94"* %136 to i64
  %140 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 28, i32 0, i32 0, i32 1
  %141 = bitcast %"struct.std::__1::pair.94"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = bitcast %"struct.std::__1::pair.94"* %136 to i8*
  tail call void @_ZdlPv(i8* %142) #18
  br label %143

143:                                              ; preds = %134, %138
  %144 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 27, i32 0, i32 0, i32 0
  %145 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %144, align 8
  %146 = icmp eq %"struct.std::__1::pair"* %145, null
  br i1 %146, label %152, label %147

147:                                              ; preds = %143
  %148 = ptrtoint %"struct.std::__1::pair"* %145 to i64
  %149 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 27, i32 0, i32 0, i32 1
  %150 = bitcast %"struct.std::__1::pair"** %149 to i64*
  store i64 %148, i64* %150, align 8
  %151 = bitcast %"struct.std::__1::pair"* %145 to i8*
  tail call void @_ZdlPv(i8* %151) #18
  br label %152

152:                                              ; preds = %143, %147
  %153 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 3, i32 0, i32 0, i32 0
  %154 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %153, align 8
  %155 = icmp eq %"struct.std::__1::pair.124"* %154, null
  br i1 %155, label %161, label %156

156:                                              ; preds = %152
  %157 = ptrtoint %"struct.std::__1::pair.124"* %154 to i64
  %158 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 3, i32 0, i32 0, i32 1
  %159 = bitcast %"struct.std::__1::pair.124"** %158 to i64*
  store i64 %157, i64* %159, align 8
  %160 = bitcast %"struct.std::__1::pair.124"* %154 to i8*
  tail call void @_ZdlPv(i8* %160) #18
  br label %161

161:                                              ; preds = %156, %152
  %162 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 2, i32 0, i32 0, i32 0
  %163 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %162, align 8
  %164 = icmp eq %"struct.std::__1::pair.124"* %163, null
  br i1 %164, label %170, label %165

165:                                              ; preds = %161
  %166 = ptrtoint %"struct.std::__1::pair.124"* %163 to i64
  %167 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 2, i32 0, i32 0, i32 1
  %168 = bitcast %"struct.std::__1::pair.124"** %167 to i64*
  store i64 %166, i64* %168, align 8
  %169 = bitcast %"struct.std::__1::pair.124"* %163 to i8*
  tail call void @_ZdlPv(i8* %169) #18
  br label %170

170:                                              ; preds = %165, %161
  %171 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 1, i32 0, i32 0, i32 0
  %172 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %171, align 8
  %173 = icmp eq %"struct.std::__1::pair.124"* %172, null
  br i1 %173, label %179, label %174

174:                                              ; preds = %170
  %175 = ptrtoint %"struct.std::__1::pair.124"* %172 to i64
  %176 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 1, i32 0, i32 0, i32 1
  %177 = bitcast %"struct.std::__1::pair.124"** %176 to i64*
  store i64 %175, i64* %177, align 8
  %178 = bitcast %"struct.std::__1::pair.124"* %172 to i8*
  tail call void @_ZdlPv(i8* %178) #18
  br label %179

179:                                              ; preds = %174, %170
  %180 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %180, align 8
  %182 = icmp eq %"struct.std::__1::pair.124"* %181, null
  br i1 %182, label %188, label %183

183:                                              ; preds = %179
  %184 = ptrtoint %"struct.std::__1::pair.124"* %181 to i64
  %185 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 0, i32 0, i32 0, i32 1
  %186 = bitcast %"struct.std::__1::pair.124"** %185 to i64*
  store i64 %184, i64* %186, align 8
  %187 = bitcast %"struct.std::__1::pair.124"* %181 to i8*
  tail call void @_ZdlPv(i8* %187) #18
  br label %188

188:                                              ; preds = %179, %183
  %189 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %190 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %189, align 8
  %191 = icmp eq %"struct.std::__1::pair.114"* %190, null
  br i1 %191, label %197, label %192

192:                                              ; preds = %188
  %193 = ptrtoint %"struct.std::__1::pair.114"* %190 to i64
  %194 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 25, i32 0, i32 0, i32 1
  %195 = bitcast %"struct.std::__1::pair.114"** %194 to i64*
  store i64 %193, i64* %195, align 8
  %196 = bitcast %"struct.std::__1::pair.114"* %190 to i8*
  tail call void @_ZdlPv(i8* %196) #18
  br label %197

197:                                              ; preds = %188, %192
  %198 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 24, i32 0, i32 0, i32 0
  %199 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %198, align 8
  %200 = icmp eq %"struct.std::__1::pair.104"* %199, null
  br i1 %200, label %206, label %201

201:                                              ; preds = %197
  %202 = ptrtoint %"struct.std::__1::pair.104"* %199 to i64
  %203 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 24, i32 0, i32 0, i32 1
  %204 = bitcast %"struct.std::__1::pair.104"** %203 to i64*
  store i64 %202, i64* %204, align 8
  %205 = bitcast %"struct.std::__1::pair.104"* %199 to i8*
  tail call void @_ZdlPv(i8* %205) #18
  br label %206

206:                                              ; preds = %197, %201
  %207 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %208 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %207, align 8
  %209 = icmp eq %"struct.std::__1::pair.94"* %208, null
  br i1 %209, label %215, label %210

210:                                              ; preds = %206
  %211 = ptrtoint %"struct.std::__1::pair.94"* %208 to i64
  %212 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 23, i32 0, i32 0, i32 1
  %213 = bitcast %"struct.std::__1::pair.94"** %212 to i64*
  store i64 %211, i64* %213, align 8
  %214 = bitcast %"struct.std::__1::pair.94"* %208 to i8*
  tail call void @_ZdlPv(i8* %214) #18
  br label %215

215:                                              ; preds = %206, %210
  %216 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %217 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %216, align 8
  %218 = icmp eq %"struct.std::__1::pair"* %217, null
  br i1 %218, label %224, label %219

219:                                              ; preds = %215
  %220 = ptrtoint %"struct.std::__1::pair"* %217 to i64
  %221 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 22, i32 0, i32 0, i32 1
  %222 = bitcast %"struct.std::__1::pair"** %221 to i64*
  store i64 %220, i64* %222, align 8
  %223 = bitcast %"struct.std::__1::pair"* %217 to i8*
  tail call void @_ZdlPv(i8* %223) #18
  br label %224

224:                                              ; preds = %215, %219
  %225 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11
  tail call void @_ZN3gfx14SelectionModelD1Ev(%"class.gfx::SelectionModel"* %225) #17
  %226 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 10
  tail call void @_ZN3gfx8FontListD1Ev(%"class.gfx::FontList"* %226) #17
  %227 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3
  %228 = bitcast %"class.std::__1::basic_string"* %227 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %229 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %228, i64 0, i32 1, i32 1
  %230 = load i8, i8* %229, align 1
  %231 = icmp slt i8 %230, 0
  br i1 %231, label %232, label %235

232:                                              ; preds = %224
  %233 = bitcast %"class.std::__1::basic_string"* %227 to i8**
  %234 = load i8*, i8** %233, align 8
  tail call void @_ZdlPv(i8* %234) #18
  br label %235

235:                                              ; preds = %224, %232
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3gfx14SelectionModelD1Ev(%"class.gfx::SelectionModel"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gfx8FontListD1Ev(%"class.gfx::FontList"*) unnamed_addr #2

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderTextD0Ev(%"class.gfx::RenderText"* nocapture readnone) unnamed_addr #9 align 2 {
  tail call void @llvm.trap() #19
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gfx::RenderText"* @_ZN3gfx10RenderText16CreateRenderTextEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_Znwm(i64 1040) #18
  %2 = bitcast i8* %1 to %"class.gfx::RenderTextHarfBuzz"*
  tail call void @_ZN3gfx18RenderTextHarfBuzzC1Ev(%"class.gfx::RenderTextHarfBuzz"* nonnull %2) #17
  %3 = bitcast i8* %1 to %"class.gfx::RenderText"*
  ret %"class.gfx::RenderText"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gfx::RenderText"* @_ZNK3gfx10RenderText25CreateInstanceOfSameStyleERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.gfx::RenderText"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 1040) #18
  %4 = bitcast i8* %3 to %"class.gfx::RenderTextHarfBuzz"*
  tail call void @_ZN3gfx18RenderTextHarfBuzzC1Ev(%"class.gfx::RenderTextHarfBuzz"* nonnull %4) #17
  %5 = bitcast i8* %3 to %"class.gfx::RenderText"*
  tail call void @_ZN3gfx10RenderText7SetTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.gfx::RenderText"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %6 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 10
  tail call void @_ZN3gfx10RenderText11SetFontListERKNS_8FontListE(%"class.gfx::RenderText"* nonnull %5, %"class.gfx::FontList"* dereferenceable(8) %6)
  %7 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 6
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 48
  %10 = bitcast i8* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, %8
  br i1 %12, label %21, label %13

13:                                               ; preds = %2
  store i32 %8, i32* %10, align 8
  %14 = getelementptr inbounds i8, i8* %3, i64 52
  %15 = bitcast i8* %14 to i32*
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %3, i64 816
  store i8 0, i8* %16, align 8
  %17 = bitcast i8* %3 to void (%"class.gfx::RenderText"*, i1)***
  %18 = load void (%"class.gfx::RenderText"*, i1)**, void (%"class.gfx::RenderText"*, i1)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %18, i64 11
  %20 = load void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %19, align 8
  tail call void %20(%"class.gfx::RenderText"* nonnull %5, i1 zeroext false) #17
  br label %21

21:                                               ; preds = %2, %13
  %22 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 13
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = getelementptr inbounds i8, i8* %3, i64 128
  store i8 %23, i8* %24, align 8
  %25 = getelementptr inbounds i8, i8* %3, i64 816
  store i8 0, i8* %25, align 8
  %26 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 36
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds i8, i8* %3, i64 696
  %29 = bitcast i8* %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26
  %31 = getelementptr inbounds i8, i8* %3, i64 280
  %32 = bitcast i8* %31 to %"struct.std::__1::array"*
  %33 = icmp eq %"struct.std::__1::array"* %30, %32
  br i1 %33, label %34, label %47

34:                                               ; preds = %21
  %35 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds i8, i8* %3, i64 304
  %38 = bitcast i8* %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 1, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds i8, i8* %3, i64 336
  %42 = bitcast i8* %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 2, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds i8, i8* %3, i64 368
  %46 = bitcast i8* %45 to i64*
  store i64 %44, i64* %46, align 8
  br label %83

47:                                               ; preds = %21
  %48 = bitcast i8* %31 to %"class.std::__1::vector.122"*
  %49 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %30, i64 0, i32 0, i64 0, i32 0, i32 0, i32 0
  %50 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %49, align 8
  %51 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 0, i32 0, i32 0, i32 1
  %52 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %51, align 8
  tail call void @_ZNSt3__16vectorINS_4pairImbEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.122"* %48, %"struct.std::__1::pair.124"* %50, %"struct.std::__1::pair.124"* %52) #17
  %53 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds i8, i8* %3, i64 304
  %56 = bitcast i8* %55 to i64*
  store i64 %54, i64* %56, align 8
  %57 = getelementptr inbounds i8, i8* %3, i64 312
  %58 = bitcast i8* %57 to %"class.std::__1::vector.122"*
  %59 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 1, i32 0, i32 0, i32 0
  %60 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %59, align 8
  %61 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 1, i32 0, i32 0, i32 1
  %62 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %61, align 8
  tail call void @_ZNSt3__16vectorINS_4pairImbEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.122"* %58, %"struct.std::__1::pair.124"* %60, %"struct.std::__1::pair.124"* %62) #17
  %63 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 1, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds i8, i8* %3, i64 336
  %66 = bitcast i8* %65 to i64*
  store i64 %64, i64* %66, align 8
  %67 = getelementptr inbounds i8, i8* %3, i64 344
  %68 = bitcast i8* %67 to %"class.std::__1::vector.122"*
  %69 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 2, i32 0, i32 0, i32 0
  %70 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %69, align 8
  %71 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 2, i32 0, i32 0, i32 1
  %72 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %71, align 8
  tail call void @_ZNSt3__16vectorINS_4pairImbEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.122"* %68, %"struct.std::__1::pair.124"* %70, %"struct.std::__1::pair.124"* %72) #17
  %73 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 2, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds i8, i8* %3, i64 368
  %76 = bitcast i8* %75 to i64*
  store i64 %74, i64* %76, align 8
  %77 = getelementptr inbounds i8, i8* %3, i64 376
  %78 = bitcast i8* %77 to %"class.std::__1::vector.122"*
  %79 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 3, i32 0, i32 0, i32 0
  %80 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %79, align 8
  %81 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 3, i32 0, i32 0, i32 1
  %82 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %81, align 8
  tail call void @_ZNSt3__16vectorINS_4pairImbEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.122"* %78, %"struct.std::__1::pair.124"* %80, %"struct.std::__1::pair.124"* %82) #17
  br label %83

83:                                               ; preds = %34, %47
  %84 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 3, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds i8, i8* %3, i64 400
  %87 = bitcast i8* %86 to i64*
  store i64 %85, i64* %87, align 8
  %88 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 23
  %89 = getelementptr inbounds i8, i8* %3, i64 184
  %90 = bitcast i8* %89 to %"class.gfx::BreakList.91"*
  %91 = icmp eq %"class.gfx::BreakList.91"* %88, %90
  br i1 %91, label %98, label %92

92:                                               ; preds = %83
  %93 = bitcast i8* %89 to %"class.std::__1::vector.92"*
  %94 = getelementptr inbounds %"class.gfx::BreakList.91", %"class.gfx::BreakList.91"* %88, i64 0, i32 0, i32 0, i32 0
  %95 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %94, align 8
  %96 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 23, i32 0, i32 0, i32 1
  %97 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %96, align 8
  tail call void @_ZNSt3__16vectorINS_4pairImN3gfx13BaselineStyleEEENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.92"* %93, %"struct.std::__1::pair.94"* %95, %"struct.std::__1::pair.94"* %97) #17
  br label %98

98:                                               ; preds = %83, %92
  %99 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 23, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = getelementptr inbounds i8, i8* %3, i64 208
  %102 = bitcast i8* %101 to i64*
  store i64 %100, i64* %102, align 8
  %103 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 24
  %104 = getelementptr inbounds i8, i8* %3, i64 216
  %105 = bitcast i8* %104 to %"class.gfx::BreakList.101"*
  %106 = icmp eq %"class.gfx::BreakList.101"* %103, %105
  br i1 %106, label %113, label %107

107:                                              ; preds = %98
  %108 = bitcast i8* %104 to %"class.std::__1::vector.102"*
  %109 = getelementptr inbounds %"class.gfx::BreakList.101", %"class.gfx::BreakList.101"* %103, i64 0, i32 0, i32 0, i32 0
  %110 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %109, align 8
  %111 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 24, i32 0, i32 0, i32 1
  %112 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %111, align 8
  tail call void @_ZNSt3__16vectorINS_4pairImiEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.102"* %108, %"struct.std::__1::pair.104"* %110, %"struct.std::__1::pair.104"* %112) #17
  br label %113

113:                                              ; preds = %98, %107
  %114 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 24, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = getelementptr inbounds i8, i8* %3, i64 240
  %117 = bitcast i8* %116 to i64*
  store i64 %115, i64* %117, align 8
  %118 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 22
  %119 = getelementptr inbounds i8, i8* %3, i64 152
  %120 = bitcast i8* %119 to %"class.gfx::BreakList"*
  %121 = icmp eq %"class.gfx::BreakList"* %118, %120
  br i1 %121, label %128, label %122

122:                                              ; preds = %113
  %123 = bitcast i8* %119 to %"class.std::__1::vector.84"*
  %124 = getelementptr inbounds %"class.gfx::BreakList", %"class.gfx::BreakList"* %118, i64 0, i32 0, i32 0, i32 0
  %125 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %124, align 8
  %126 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 22, i32 0, i32 0, i32 1
  %127 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %126, align 8
  tail call void @_ZNSt3__16vectorINS_4pairImjEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.84"* %123, %"struct.std::__1::pair"* %125, %"struct.std::__1::pair"* %127) #17
  br label %128

128:                                              ; preds = %113, %122
  %129 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 22, i32 1
  %130 = load i64, i64* %129, align 8
  %131 = getelementptr inbounds i8, i8* %3, i64 176
  %132 = bitcast i8* %131 to i64*
  store i64 %130, i64* %132, align 8
  %133 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 25
  %134 = getelementptr inbounds i8, i8* %3, i64 248
  %135 = bitcast i8* %134 to %"class.gfx::BreakList.111"*
  %136 = icmp eq %"class.gfx::BreakList.111"* %133, %135
  br i1 %136, label %143, label %137

137:                                              ; preds = %128
  %138 = bitcast i8* %134 to %"class.std::__1::vector.112"*
  %139 = getelementptr inbounds %"class.gfx::BreakList.111", %"class.gfx::BreakList.111"* %133, i64 0, i32 0, i32 0, i32 0
  %140 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %139, align 8
  %141 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 25, i32 0, i32 0, i32 1
  %142 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %141, align 8
  tail call void @_ZNSt3__16vectorINS_4pairImN3gfx4Font6WeightEEENS_9allocatorIS5_EEE6assignIPS5_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.112"* %138, %"struct.std::__1::pair.114"* %140, %"struct.std::__1::pair.114"* %142) #17
  br label %143

143:                                              ; preds = %128, %137
  %144 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 25, i32 1
  %145 = load i64, i64* %144, align 8
  %146 = getelementptr inbounds i8, i8* %3, i64 272
  %147 = bitcast i8* %146 to i64*
  store i64 %145, i64* %147, align 8
  %148 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 1
  %149 = bitcast float* %148 to i32*
  %150 = load i32, i32* %149, align 8
  %151 = getelementptr inbounds i8, i8* %3, i64 8
  %152 = bitcast i8* %151 to i32*
  store i32 %150, i32* %152, align 8
  ret %"class.gfx::RenderText"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText7SetTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.gfx::RenderText"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::SelectionModel", align 8
  %4 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = zext i8 %7 to i64
  %12 = select i1 %8, i64 %10, i64 %11
  %13 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %15 to i64
  %20 = select i1 %16, i64 %18, i64 %19
  %21 = icmp eq i64 %12, %20
  br i1 %21, label %22, label %45

22:                                               ; preds = %2
  %23 = icmp eq i64 %12, 0
  br i1 %23, label %326, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i16*, i16** %25, align 8
  %27 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %28 = select i1 %16, i16* %26, i16* %27
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i16*, i16** %29, align 8
  %31 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  %32 = select i1 %8, i16* %30, i16* %31
  br label %33

33:                                               ; preds = %40, %24
  %34 = phi i64 [ %41, %40 ], [ %12, %24 ]
  %35 = phi i16* [ %43, %40 ], [ %28, %24 ]
  %36 = phi i16* [ %42, %40 ], [ %32, %24 ]
  %37 = load i16, i16* %36, align 2
  %38 = load i16, i16* %35, align 2
  %39 = icmp eq i16 %38, %37
  br i1 %39, label %40, label %45

40:                                               ; preds = %33
  %41 = add i64 %34, -1
  %42 = getelementptr inbounds i16, i16* %36, i64 1
  %43 = getelementptr inbounds i16, i16* %35, i64 1
  %44 = icmp eq i64 %41, 0
  br i1 %44, label %326, label %33

45:                                               ; preds = %33, %2
  %46 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  tail call void @_ZN3gfx10RenderText18UpdateStyleLengthsEv(%"class.gfx::RenderText"* %0)
  %47 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 22
  %48 = getelementptr inbounds %"class.gfx::BreakList", %"class.gfx::BreakList"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %48, align 8
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %49, i64 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = ptrtoint %"struct.std::__1::pair"* %49 to i64
  %53 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 22, i32 0, i32 0, i32 1
  %54 = bitcast %"struct.std::__1::pair"** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 22, i32 0, i32 0, i32 2, i32 0, i32 0
  %56 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %55, align 8
  %57 = icmp ult %"struct.std::__1::pair"* %49, %56
  br i1 %57, label %58, label %62

58:                                               ; preds = %45
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %49, i64 0, i32 0
  store i64 0, i64* %59, align 8
  store i32 %51, i32* %50, align 8
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %49, i64 1
  %61 = ptrtoint %"struct.std::__1::pair"* %60 to i64
  store i64 %61, i64* %54, align 8
  br label %91

62:                                               ; preds = %45
  %63 = ptrtoint %"struct.std::__1::pair"* %56 to i64
  %64 = bitcast %"class.gfx::BreakList"* %47 to i64*
  %65 = bitcast %"struct.std::__1::pair"** %55 to i64*
  %66 = sub i64 %63, %52
  %67 = ashr exact i64 %66, 4
  %68 = icmp ult i64 %67, 576460752303423487
  br i1 %68, label %69, label %75

69:                                               ; preds = %62
  %70 = ashr exact i64 %66, 3
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 1, i64 %70
  %73 = icmp ugt i64 %72, 1152921504606846975
  br i1 %73, label %74, label %75

74:                                               ; preds = %69
  tail call void @abort() #19
  unreachable

75:                                               ; preds = %69, %62
  %76 = phi i64 [ %72, %69 ], [ 1152921504606846975, %62 ]
  %77 = shl i64 %76, 4
  %78 = tail call i8* @_Znwm(i64 %77) #18
  %79 = bitcast i8* %78 to %"struct.std::__1::pair"*
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %79, i64 %76
  %81 = ptrtoint %"struct.std::__1::pair"* %80 to i64
  %82 = bitcast i8* %78 to i64*
  store i64 0, i64* %82, align 8
  %83 = getelementptr inbounds i8, i8* %78, i64 8
  %84 = bitcast i8* %83 to i32*
  store i32 %51, i32* %84, align 8
  %85 = getelementptr inbounds i8, i8* %78, i64 16
  %86 = ptrtoint i8* %85 to i64
  %87 = ptrtoint i8* %78 to i64
  store i64 %87, i64* %64, align 8
  store i64 %86, i64* %54, align 8
  store i64 %81, i64* %65, align 8
  %88 = icmp eq %"struct.std::__1::pair"* %49, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %75
  %90 = bitcast %"struct.std::__1::pair"* %49 to i8*
  tail call void @_ZdlPv(i8* %90) #18
  br label %91

91:                                               ; preds = %58, %75, %89
  %92 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 23
  %93 = getelementptr inbounds %"class.gfx::BreakList.91", %"class.gfx::BreakList.91"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %93, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %94, i64 0, i32 1
  %96 = load i32, i32* %95, align 8
  %97 = ptrtoint %"struct.std::__1::pair.94"* %94 to i64
  %98 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 23, i32 0, i32 0, i32 1
  %99 = bitcast %"struct.std::__1::pair.94"** %98 to i64*
  store i64 %97, i64* %99, align 8
  %100 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 23, i32 0, i32 0, i32 2, i32 0, i32 0
  %101 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %100, align 8
  %102 = icmp ult %"struct.std::__1::pair.94"* %94, %101
  br i1 %102, label %103, label %107

103:                                              ; preds = %91
  %104 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %94, i64 0, i32 0
  store i64 0, i64* %104, align 8
  store i32 %96, i32* %95, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %94, i64 1
  %106 = ptrtoint %"struct.std::__1::pair.94"* %105 to i64
  store i64 %106, i64* %99, align 8
  br label %136

107:                                              ; preds = %91
  %108 = ptrtoint %"struct.std::__1::pair.94"* %101 to i64
  %109 = bitcast %"class.gfx::BreakList.91"* %92 to i64*
  %110 = bitcast %"struct.std::__1::pair.94"** %100 to i64*
  %111 = sub i64 %108, %97
  %112 = ashr exact i64 %111, 4
  %113 = icmp ult i64 %112, 576460752303423487
  br i1 %113, label %114, label %120

114:                                              ; preds = %107
  %115 = ashr exact i64 %111, 3
  %116 = icmp eq i64 %111, 0
  %117 = select i1 %116, i64 1, i64 %115
  %118 = icmp ugt i64 %117, 1152921504606846975
  br i1 %118, label %119, label %120

119:                                              ; preds = %114
  tail call void @abort() #19
  unreachable

120:                                              ; preds = %114, %107
  %121 = phi i64 [ %117, %114 ], [ 1152921504606846975, %107 ]
  %122 = shl i64 %121, 4
  %123 = tail call i8* @_Znwm(i64 %122) #18
  %124 = bitcast i8* %123 to %"struct.std::__1::pair.94"*
  %125 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %124, i64 %121
  %126 = ptrtoint %"struct.std::__1::pair.94"* %125 to i64
  %127 = bitcast i8* %123 to i64*
  store i64 0, i64* %127, align 8
  %128 = getelementptr inbounds i8, i8* %123, i64 8
  %129 = bitcast i8* %128 to i32*
  store i32 %96, i32* %129, align 8
  %130 = getelementptr inbounds i8, i8* %123, i64 16
  %131 = ptrtoint i8* %130 to i64
  %132 = ptrtoint i8* %123 to i64
  store i64 %132, i64* %109, align 8
  store i64 %131, i64* %99, align 8
  store i64 %126, i64* %110, align 8
  %133 = icmp eq %"struct.std::__1::pair.94"* %94, null
  br i1 %133, label %136, label %134

134:                                              ; preds = %120
  %135 = bitcast %"struct.std::__1::pair.94"* %94 to i8*
  tail call void @_ZdlPv(i8* %135) #18
  br label %136

136:                                              ; preds = %103, %120, %134
  %137 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 24
  %138 = getelementptr inbounds %"class.gfx::BreakList.101", %"class.gfx::BreakList.101"* %137, i64 0, i32 0, i32 0, i32 0
  %139 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %138, align 8
  %140 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %139, i64 0, i32 1
  %141 = load i32, i32* %140, align 8
  %142 = ptrtoint %"struct.std::__1::pair.104"* %139 to i64
  %143 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 24, i32 0, i32 0, i32 1
  %144 = bitcast %"struct.std::__1::pair.104"** %143 to i64*
  store i64 %142, i64* %144, align 8
  %145 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 24, i32 0, i32 0, i32 2, i32 0, i32 0
  %146 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %145, align 8
  %147 = icmp ult %"struct.std::__1::pair.104"* %139, %146
  br i1 %147, label %148, label %152

148:                                              ; preds = %136
  %149 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %139, i64 0, i32 0
  store i64 0, i64* %149, align 8
  store i32 %141, i32* %140, align 8
  %150 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %139, i64 1
  %151 = ptrtoint %"struct.std::__1::pair.104"* %150 to i64
  store i64 %151, i64* %144, align 8
  br label %181

152:                                              ; preds = %136
  %153 = ptrtoint %"struct.std::__1::pair.104"* %146 to i64
  %154 = bitcast %"class.gfx::BreakList.101"* %137 to i64*
  %155 = bitcast %"struct.std::__1::pair.104"** %145 to i64*
  %156 = sub i64 %153, %142
  %157 = ashr exact i64 %156, 4
  %158 = icmp ult i64 %157, 576460752303423487
  br i1 %158, label %159, label %165

159:                                              ; preds = %152
  %160 = ashr exact i64 %156, 3
  %161 = icmp eq i64 %156, 0
  %162 = select i1 %161, i64 1, i64 %160
  %163 = icmp ugt i64 %162, 1152921504606846975
  br i1 %163, label %164, label %165

164:                                              ; preds = %159
  tail call void @abort() #19
  unreachable

165:                                              ; preds = %159, %152
  %166 = phi i64 [ %162, %159 ], [ 1152921504606846975, %152 ]
  %167 = shl i64 %166, 4
  %168 = tail call i8* @_Znwm(i64 %167) #18
  %169 = bitcast i8* %168 to %"struct.std::__1::pair.104"*
  %170 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %169, i64 %166
  %171 = ptrtoint %"struct.std::__1::pair.104"* %170 to i64
  %172 = bitcast i8* %168 to i64*
  store i64 0, i64* %172, align 8
  %173 = getelementptr inbounds i8, i8* %168, i64 8
  %174 = bitcast i8* %173 to i32*
  store i32 %141, i32* %174, align 8
  %175 = getelementptr inbounds i8, i8* %168, i64 16
  %176 = ptrtoint i8* %175 to i64
  %177 = ptrtoint i8* %168 to i64
  store i64 %177, i64* %154, align 8
  store i64 %176, i64* %144, align 8
  store i64 %171, i64* %155, align 8
  %178 = icmp eq %"struct.std::__1::pair.104"* %139, null
  br i1 %178, label %181, label %179

179:                                              ; preds = %165
  %180 = bitcast %"struct.std::__1::pair.104"* %139 to i8*
  tail call void @_ZdlPv(i8* %180) #18
  br label %181

181:                                              ; preds = %148, %165, %179
  %182 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 25
  %183 = getelementptr inbounds %"class.gfx::BreakList.111", %"class.gfx::BreakList.111"* %182, i64 0, i32 0, i32 0, i32 0
  %184 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %183, align 8
  %185 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %184, i64 0, i32 1
  %186 = load i32, i32* %185, align 8
  %187 = ptrtoint %"struct.std::__1::pair.114"* %184 to i64
  %188 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 25, i32 0, i32 0, i32 1
  %189 = bitcast %"struct.std::__1::pair.114"** %188 to i64*
  store i64 %187, i64* %189, align 8
  %190 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 25, i32 0, i32 0, i32 2, i32 0, i32 0
  %191 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %190, align 8
  %192 = icmp ult %"struct.std::__1::pair.114"* %184, %191
  br i1 %192, label %193, label %197

193:                                              ; preds = %181
  %194 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %184, i64 0, i32 0
  store i64 0, i64* %194, align 8
  store i32 %186, i32* %185, align 8
  %195 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %184, i64 1
  %196 = ptrtoint %"struct.std::__1::pair.114"* %195 to i64
  store i64 %196, i64* %189, align 8
  br label %226

197:                                              ; preds = %181
  %198 = ptrtoint %"struct.std::__1::pair.114"* %191 to i64
  %199 = bitcast %"class.gfx::BreakList.111"* %182 to i64*
  %200 = bitcast %"struct.std::__1::pair.114"** %190 to i64*
  %201 = sub i64 %198, %187
  %202 = ashr exact i64 %201, 4
  %203 = icmp ult i64 %202, 576460752303423487
  br i1 %203, label %204, label %210

204:                                              ; preds = %197
  %205 = ashr exact i64 %201, 3
  %206 = icmp eq i64 %201, 0
  %207 = select i1 %206, i64 1, i64 %205
  %208 = icmp ugt i64 %207, 1152921504606846975
  br i1 %208, label %209, label %210

209:                                              ; preds = %204
  tail call void @abort() #19
  unreachable

210:                                              ; preds = %204, %197
  %211 = phi i64 [ %207, %204 ], [ 1152921504606846975, %197 ]
  %212 = shl i64 %211, 4
  %213 = tail call i8* @_Znwm(i64 %212) #18
  %214 = bitcast i8* %213 to %"struct.std::__1::pair.114"*
  %215 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %214, i64 %211
  %216 = ptrtoint %"struct.std::__1::pair.114"* %215 to i64
  %217 = bitcast i8* %213 to i64*
  store i64 0, i64* %217, align 8
  %218 = getelementptr inbounds i8, i8* %213, i64 8
  %219 = bitcast i8* %218 to i32*
  store i32 %186, i32* %219, align 8
  %220 = getelementptr inbounds i8, i8* %213, i64 16
  %221 = ptrtoint i8* %220 to i64
  %222 = ptrtoint i8* %213 to i64
  store i64 %222, i64* %199, align 8
  store i64 %221, i64* %189, align 8
  store i64 %216, i64* %200, align 8
  %223 = icmp eq %"struct.std::__1::pair.114"* %184, null
  br i1 %223, label %226, label %224

224:                                              ; preds = %210
  %225 = bitcast %"struct.std::__1::pair.114"* %184 to i8*
  tail call void @_ZdlPv(i8* %225) #18
  br label %226

226:                                              ; preds = %193, %210, %224
  %227 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 0
  %228 = getelementptr inbounds %"class.gfx::BreakList.121", %"class.gfx::BreakList.121"* %227, i64 0, i32 0, i32 0, i32 0
  %229 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %228, align 8
  %230 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %229, i64 0, i32 1
  %231 = load i8, i8* %230, align 8, !range !2
  %232 = icmp ne i8 %231, 0
  tail call void @_ZN3gfx9BreakListIbE8SetValueEb(%"class.gfx::BreakList.121"* %227, i1 zeroext %232)
  %233 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 1
  %234 = getelementptr inbounds %"class.gfx::BreakList.121", %"class.gfx::BreakList.121"* %233, i64 0, i32 0, i32 0, i32 0
  %235 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %234, align 8
  %236 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %235, i64 0, i32 1
  %237 = load i8, i8* %236, align 8, !range !2
  %238 = icmp ne i8 %237, 0
  tail call void @_ZN3gfx9BreakListIbE8SetValueEb(%"class.gfx::BreakList.121"* %233, i1 zeroext %238)
  %239 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 2
  %240 = getelementptr inbounds %"class.gfx::BreakList.121", %"class.gfx::BreakList.121"* %239, i64 0, i32 0, i32 0, i32 0
  %241 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %240, align 8
  %242 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %241, i64 0, i32 1
  %243 = load i8, i8* %242, align 8, !range !2
  %244 = icmp ne i8 %243, 0
  tail call void @_ZN3gfx9BreakListIbE8SetValueEb(%"class.gfx::BreakList.121"* %239, i1 zeroext %244)
  %245 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 3
  %246 = getelementptr inbounds %"class.gfx::BreakList.121", %"class.gfx::BreakList.121"* %245, i64 0, i32 0, i32 0, i32 0
  %247 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %246, align 8
  %248 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %247, i64 0, i32 1
  %249 = load i8, i8* %248, align 8, !range !2
  %250 = icmp ne i8 %249, 0
  tail call void @_ZN3gfx9BreakListIbE8SetValueEb(%"class.gfx::BreakList.121"* %245, i1 zeroext %250)
  %251 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 55
  store i8 0, i8* %251, align 8
  %252 = bitcast %"class.gfx::SelectionModel"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %252) #17
  call void @_ZN3gfx14SelectionModelC1Ev(%"class.gfx::SelectionModel"* nonnull %3) #17
  %253 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11
  %254 = bitcast %"class.gfx::SelectionModel"* %3 to i64*
  %255 = bitcast %"class.gfx::SelectionModel"* %253 to i64*
  %256 = load i64, i64* %254, align 8
  store i64 %256, i64* %255, align 8
  %257 = icmp eq %"class.gfx::SelectionModel"* %253, %3
  br i1 %257, label %264, label %258

258:                                              ; preds = %226
  %259 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11, i32 1
  %260 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %3, i64 0, i32 1, i32 0, i32 0
  %261 = load %"class.gfx::Range"*, %"class.gfx::Range"** %260, align 8
  %262 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %3, i64 0, i32 1, i32 0, i32 1
  %263 = load %"class.gfx::Range"*, %"class.gfx::Range"** %262, align 8
  call void @_ZNSt3__16vectorIN3gfx5RangeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.157"* %259, %"class.gfx::Range"* %261, %"class.gfx::Range"* %263) #17
  br label %264

264:                                              ; preds = %226, %258
  %265 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %3, i64 0, i32 2
  %266 = load i32, i32* %265, align 8
  %267 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11, i32 2
  store i32 %266, i32* %267, align 8
  store i8 0, i8* %251, align 8
  %268 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 14
  store i8 1, i8* %268, align 1
  call void @_ZN3gfx14SelectionModelD1Ev(%"class.gfx::SelectionModel"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %252) #17
  %269 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 6
  %270 = load i32, i32* %269, align 8
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %274

272:                                              ; preds = %264
  %273 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 7
  store i32 0, i32* %273, align 4
  br label %274

274:                                              ; preds = %272, %264
  %275 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 35
  store i32 -1, i32* %275, align 4
  %276 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37
  %277 = bitcast %"class.std::__1::basic_string"* %276 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %278 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %277, i64 0, i32 1, i32 1
  %279 = load i8, i8* %278, align 1
  %280 = icmp slt i8 %279, 0
  br i1 %280, label %281, label %285

281:                                              ; preds = %274
  %282 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %276, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %283 = load i16*, i16** %282, align 8
  store i16 0, i16* %283, align 2
  %284 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %284, align 8
  br label %287

285:                                              ; preds = %274
  %286 = bitcast %"class.std::__1::basic_string"* %276 to i16*
  store i16 0, i16* %286, align 2
  store i8 0, i8* %278, align 1
  br label %287

287:                                              ; preds = %285, %281
  %288 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 38
  %289 = bitcast %"class.std::__1::basic_string"* %288 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %290 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %289, i64 0, i32 1, i32 1
  %291 = load i8, i8* %290, align 1
  %292 = icmp slt i8 %291, 0
  br i1 %292, label %293, label %297

293:                                              ; preds = %287
  %294 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %288, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = load i16*, i16** %294, align 8
  store i16 0, i16* %295, align 2
  %296 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 38, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %296, align 8
  br label %299

297:                                              ; preds = %287
  %298 = bitcast %"class.std::__1::basic_string"* %288 to i16*
  store i16 0, i16* %298, align 2
  store i8 0, i8* %290, align 1
  br label %299

299:                                              ; preds = %297, %293
  %300 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 41
  store i8 0, i8* %300, align 2
  %301 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 0, i32 0, i32 1
  %302 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %301, align 8
  %303 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 0, i32 0, i32 0
  %304 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %303, align 8
  br label %305

305:                                              ; preds = %309, %299
  %306 = phi %"struct.std::__1::pair.186"* [ %302, %299 ], [ %307, %309 ]
  %307 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %306, i64 -1
  %308 = icmp eq %"struct.std::__1::pair.186"* %307, %304
  br i1 %308, label %313, label %309

309:                                              ; preds = %305
  %310 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %307, i64 0, i32 0
  %311 = load i64, i64* %310, align 8
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %313, label %305

313:                                              ; preds = %309, %305
  %314 = phi %"struct.std::__1::pair.186"* [ %304, %305 ], [ %307, %309 ]
  %315 = phi i64 [ 1, %305 ], [ 0, %309 ]
  %316 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %314, i64 %315
  %317 = icmp eq %"struct.std::__1::pair.186"* %316, %302
  br i1 %317, label %319, label %318

318:                                              ; preds = %313
  store %"struct.std::__1::pair.186"* %316, %"struct.std::__1::pair.186"** %301, align 8
  br label %319

319:                                              ; preds = %313, %318
  %320 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 1
  store i64 0, i64* %320, align 8
  %321 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 63
  store i8 0, i8* %321, align 8
  %322 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*, i1)***
  %323 = load void (%"class.gfx::RenderText"*, i1)**, void (%"class.gfx::RenderText"*, i1)*** %322, align 8
  %324 = getelementptr inbounds void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %323, i64 11
  %325 = load void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %324, align 8
  call void %325(%"class.gfx::RenderText"* %0, i1 zeroext true) #17
  br label %326

326:                                              ; preds = %40, %22, %319
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText11SetFontListERKNS_8FontListE(%"class.gfx::RenderText"*, %"class.gfx::FontList"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 10
  %4 = tail call dereferenceable(8) %"class.gfx::FontList"* @_ZN3gfx8FontListaSERKS0_(%"class.gfx::FontList"* %3, %"class.gfx::FontList"* dereferenceable(8) %1) #17
  %5 = tail call i32 @_ZNK3gfx8FontList12GetFontStyleEv(%"class.gfx::FontList"* %1) #17
  %6 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 25
  %7 = tail call i32 @_ZNK3gfx8FontList13GetFontWeightEv(%"class.gfx::FontList"* %1) #17
  %8 = bitcast %"class.gfx::BreakList.111"* %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 25, i32 0, i32 0, i32 1
  %11 = bitcast %"struct.std::__1::pair.114"** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = inttoptr i64 %9 to %"struct.std::__1::pair.114"*
  %13 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 25, i32 0, i32 0, i32 2, i32 0, i32 0
  %14 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %13, align 8
  %15 = icmp ugt %"struct.std::__1::pair.114"* %14, %12
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %12, i64 0, i32 0
  store i64 0, i64* %17, align 8
  %18 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %12, i64 0, i32 1
  store i32 %7, i32* %18, align 8
  %19 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %12, i64 1
  %20 = ptrtoint %"struct.std::__1::pair.114"* %19 to i64
  store i64 %20, i64* %11, align 8
  br label %49

21:                                               ; preds = %2
  %22 = ptrtoint %"struct.std::__1::pair.114"* %14 to i64
  %23 = bitcast %"struct.std::__1::pair.114"** %13 to i64*
  %24 = sub i64 %22, %9
  %25 = ashr exact i64 %24, 4
  %26 = icmp ult i64 %25, 576460752303423487
  br i1 %26, label %27, label %33

27:                                               ; preds = %21
  %28 = ashr exact i64 %24, 3
  %29 = icmp eq i64 %24, 0
  %30 = select i1 %29, i64 1, i64 %28
  %31 = icmp ugt i64 %30, 1152921504606846975
  br i1 %31, label %32, label %33

32:                                               ; preds = %27
  tail call void @abort() #19
  unreachable

33:                                               ; preds = %27, %21
  %34 = phi i64 [ %30, %27 ], [ 1152921504606846975, %21 ]
  %35 = shl i64 %34, 4
  %36 = tail call i8* @_Znwm(i64 %35) #18
  %37 = bitcast i8* %36 to %"struct.std::__1::pair.114"*
  %38 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %37, i64 %34
  %39 = ptrtoint %"struct.std::__1::pair.114"* %38 to i64
  %40 = bitcast i8* %36 to i64*
  store i64 0, i64* %40, align 8
  %41 = getelementptr inbounds i8, i8* %36, i64 8
  %42 = bitcast i8* %41 to i32*
  store i32 %7, i32* %42, align 8
  %43 = getelementptr inbounds i8, i8* %36, i64 16
  %44 = ptrtoint i8* %43 to i64
  %45 = ptrtoint i8* %36 to i64
  store i64 %45, i64* %8, align 8
  store i64 %44, i64* %11, align 8
  store i64 %39, i64* %23, align 8
  %46 = icmp eq i64 %9, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %33
  %48 = inttoptr i64 %9 to i8*
  tail call void @_ZdlPv(i8* %48) #18
  br label %49

49:                                               ; preds = %16, %33, %47
  %50 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 0
  %51 = and i32 %5, 1
  %52 = icmp ne i32 %51, 0
  tail call void @_ZN3gfx9BreakListIbE8SetValueEb(%"class.gfx::BreakList.121"* %50, i1 zeroext %52)
  %53 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 2
  %54 = and i32 %5, 2
  %55 = icmp ne i32 %54, 0
  tail call void @_ZN3gfx9BreakListIbE8SetValueEb(%"class.gfx::BreakList.121"* %53, i1 zeroext %55)
  %56 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 3
  tail call void @_ZN3gfx9BreakListIbE8SetValueEb(%"class.gfx::BreakList.121"* %56, i1 zeroext false)
  %57 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 54
  store i32 2147483647, i32* %57, align 4
  %58 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 55
  store i8 0, i8* %58, align 8
  %59 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*, i1)***
  %60 = load void (%"class.gfx::RenderText"*, i1)**, void (%"class.gfx::RenderText"*, i1)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %60, i64 11
  %62 = load void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %61, align 8
  tail call void %62(%"class.gfx::RenderText"* %0, i1 zeroext false) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText21SetDirectionalityModeENS_18DirectionalityModeE(%"class.gfx::RenderText"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 8
  %7 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 7
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 55
  store i8 0, i8* %8, align 8
  %9 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*, i1)***
  %10 = load void (%"class.gfx::RenderText"*, i1)**, void (%"class.gfx::RenderText"*, i1)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %10, i64 11
  %12 = load void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %11, align 8
  tail call void %12(%"class.gfx::RenderText"* %0, i1 zeroext false) #17
  br label %13

13:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3gfx10RenderText16SetCursorEnabledEb(%"class.gfx::RenderText"* nocapture, i1 zeroext) local_unnamed_addr #4 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 13
  store i8 %3, i8* %4, align 8
  %5 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 55
  store i8 0, i8* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !3
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !3
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !6, !noalias !3
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !6, !noalias !3
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !3
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !3
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !6, !noalias !3
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !6, !noalias !3
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !3
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !3
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !6, !noalias !3
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !6, !noalias !3
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !3
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !3
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !6, !noalias !3
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !6, !noalias !3
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !8

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !3
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !3
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !6, !noalias !3
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !6, !noalias !3
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !10

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !12

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !13

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #19
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #19
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #18
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !14
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !14
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !17, !noalias !14
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !17, !noalias !14
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !14
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !14
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !17, !noalias !14
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !17, !noalias !14
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !14
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !14
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !17, !noalias !14
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !17, !noalias !14
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !14
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !14
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !17, !noalias !14
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !17, !noalias !14
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !19

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !14
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !14
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !17, !noalias !14
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !17, !noalias !14
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !20

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !21

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !22

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !23
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !23
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !26, !noalias !23
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !26, !noalias !23
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !23
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !23
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !26, !noalias !23
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !26, !noalias !23
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !23
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !23
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !26, !noalias !23
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !26, !noalias !23
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !23
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !23
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !26, !noalias !23
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !26, !noalias !23
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !28

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !23
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !23
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !26, !noalias !23
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !26, !noalias !23
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !29

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !30

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !31

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #17
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText18UpdateStyleLengthsEv(%"class.gfx::RenderText"*) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  br label %12

10:                                               ; preds = %1
  %11 = zext i8 %5 to i64
  br label %12

12:                                               ; preds = %7, %10
  %13 = phi i64 [ %9, %7 ], [ %11, %10 ]
  %14 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 22, i32 0, i32 0, i32 1
  %15 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %14, align 8
  %16 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %17 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %16, align 8
  br label %18

18:                                               ; preds = %22, %12
  %19 = phi %"struct.std::__1::pair"* [ %15, %12 ], [ %20, %22 ]
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 -1
  %21 = icmp eq %"struct.std::__1::pair"* %20, %17
  br i1 %21, label %29, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp ugt i64 %24, %13
  br i1 %25, label %18, label %26

26:                                               ; preds = %22
  %27 = icmp ult i64 %24, %13
  %28 = zext i1 %27 to i64
  br label %29

29:                                               ; preds = %18, %26
  %30 = phi %"struct.std::__1::pair"* [ %20, %26 ], [ %17, %18 ]
  %31 = phi i64 [ %28, %26 ], [ 1, %18 ]
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %31
  %33 = icmp eq %"struct.std::__1::pair"* %32, %15
  br i1 %33, label %35, label %34

34:                                               ; preds = %29
  store %"struct.std::__1::pair"* %32, %"struct.std::__1::pair"** %14, align 8
  br label %35

35:                                               ; preds = %29, %34
  %36 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 22, i32 1
  store i64 %13, i64* %36, align 8
  %37 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 23, i32 0, i32 0, i32 1
  %38 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %37, align 8
  %39 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %40 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %39, align 8
  br label %41

41:                                               ; preds = %45, %35
  %42 = phi %"struct.std::__1::pair.94"* [ %38, %35 ], [ %43, %45 ]
  %43 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %42, i64 -1
  %44 = icmp eq %"struct.std::__1::pair.94"* %43, %40
  br i1 %44, label %52, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %43, i64 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = icmp ugt i64 %47, %13
  br i1 %48, label %41, label %49

49:                                               ; preds = %45
  %50 = icmp ult i64 %47, %13
  %51 = zext i1 %50 to i64
  br label %52

52:                                               ; preds = %41, %49
  %53 = phi %"struct.std::__1::pair.94"* [ %43, %49 ], [ %40, %41 ]
  %54 = phi i64 [ %51, %49 ], [ 1, %41 ]
  %55 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %53, i64 %54
  %56 = icmp eq %"struct.std::__1::pair.94"* %55, %38
  br i1 %56, label %58, label %57

57:                                               ; preds = %52
  store %"struct.std::__1::pair.94"* %55, %"struct.std::__1::pair.94"** %37, align 8
  br label %58

58:                                               ; preds = %52, %57
  %59 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 23, i32 1
  store i64 %13, i64* %59, align 8
  %60 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 24, i32 0, i32 0, i32 1
  %61 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %60, align 8
  %62 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 24, i32 0, i32 0, i32 0
  %63 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %62, align 8
  br label %64

64:                                               ; preds = %68, %58
  %65 = phi %"struct.std::__1::pair.104"* [ %61, %58 ], [ %66, %68 ]
  %66 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %65, i64 -1
  %67 = icmp eq %"struct.std::__1::pair.104"* %66, %63
  br i1 %67, label %75, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %66, i64 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = icmp ugt i64 %70, %13
  br i1 %71, label %64, label %72

72:                                               ; preds = %68
  %73 = icmp ult i64 %70, %13
  %74 = zext i1 %73 to i64
  br label %75

75:                                               ; preds = %64, %72
  %76 = phi %"struct.std::__1::pair.104"* [ %66, %72 ], [ %63, %64 ]
  %77 = phi i64 [ %74, %72 ], [ 1, %64 ]
  %78 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %76, i64 %77
  %79 = icmp eq %"struct.std::__1::pair.104"* %78, %61
  br i1 %79, label %81, label %80

80:                                               ; preds = %75
  store %"struct.std::__1::pair.104"* %78, %"struct.std::__1::pair.104"** %60, align 8
  br label %81

81:                                               ; preds = %75, %80
  %82 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 24, i32 1
  store i64 %13, i64* %82, align 8
  %83 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 25, i32 0, i32 0, i32 1
  %84 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %83, align 8
  %85 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %86 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %85, align 8
  br label %87

87:                                               ; preds = %91, %81
  %88 = phi %"struct.std::__1::pair.114"* [ %84, %81 ], [ %89, %91 ]
  %89 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %88, i64 -1
  %90 = icmp eq %"struct.std::__1::pair.114"* %89, %86
  br i1 %90, label %98, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %89, i64 0, i32 0
  %93 = load i64, i64* %92, align 8
  %94 = icmp ugt i64 %93, %13
  br i1 %94, label %87, label %95

95:                                               ; preds = %91
  %96 = icmp ult i64 %93, %13
  %97 = zext i1 %96 to i64
  br label %98

98:                                               ; preds = %87, %95
  %99 = phi %"struct.std::__1::pair.114"* [ %89, %95 ], [ %86, %87 ]
  %100 = phi i64 [ %97, %95 ], [ 1, %87 ]
  %101 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %99, i64 %100
  %102 = icmp eq %"struct.std::__1::pair.114"* %101, %84
  br i1 %102, label %104, label %103

103:                                              ; preds = %98
  store %"struct.std::__1::pair.114"* %101, %"struct.std::__1::pair.114"** %83, align 8
  br label %104

104:                                              ; preds = %98, %103
  %105 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 25, i32 1
  store i64 %13, i64* %105, align 8
  %106 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 0, i32 0, i32 0, i32 1
  %107 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %106, align 8
  %108 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 0, i32 0, i32 0, i32 0
  %109 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %108, align 8
  br label %110

110:                                              ; preds = %114, %104
  %111 = phi %"struct.std::__1::pair.124"* [ %107, %104 ], [ %112, %114 ]
  %112 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %111, i64 -1
  %113 = icmp eq %"struct.std::__1::pair.124"* %112, %109
  br i1 %113, label %121, label %114

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %112, i64 0, i32 0
  %116 = load i64, i64* %115, align 8
  %117 = icmp ugt i64 %116, %13
  br i1 %117, label %110, label %118

118:                                              ; preds = %114
  %119 = icmp ult i64 %116, %13
  %120 = zext i1 %119 to i64
  br label %121

121:                                              ; preds = %110, %118
  %122 = phi %"struct.std::__1::pair.124"* [ %112, %118 ], [ %109, %110 ]
  %123 = phi i64 [ %120, %118 ], [ 1, %110 ]
  %124 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %122, i64 %123
  %125 = icmp eq %"struct.std::__1::pair.124"* %124, %107
  br i1 %125, label %127, label %126

126:                                              ; preds = %121
  store %"struct.std::__1::pair.124"* %124, %"struct.std::__1::pair.124"** %106, align 8
  br label %127

127:                                              ; preds = %121, %126
  %128 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 0, i32 1
  store i64 %13, i64* %128, align 8
  %129 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 1, i32 0, i32 0, i32 1
  %130 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %129, align 8
  %131 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 1, i32 0, i32 0, i32 0
  %132 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %131, align 8
  br label %133

133:                                              ; preds = %137, %127
  %134 = phi %"struct.std::__1::pair.124"* [ %130, %127 ], [ %135, %137 ]
  %135 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %134, i64 -1
  %136 = icmp eq %"struct.std::__1::pair.124"* %135, %132
  br i1 %136, label %144, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %135, i64 0, i32 0
  %139 = load i64, i64* %138, align 8
  %140 = icmp ugt i64 %139, %13
  br i1 %140, label %133, label %141

141:                                              ; preds = %137
  %142 = icmp ult i64 %139, %13
  %143 = zext i1 %142 to i64
  br label %144

144:                                              ; preds = %133, %141
  %145 = phi %"struct.std::__1::pair.124"* [ %135, %141 ], [ %132, %133 ]
  %146 = phi i64 [ %143, %141 ], [ 1, %133 ]
  %147 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %145, i64 %146
  %148 = icmp eq %"struct.std::__1::pair.124"* %147, %130
  br i1 %148, label %150, label %149

149:                                              ; preds = %144
  store %"struct.std::__1::pair.124"* %147, %"struct.std::__1::pair.124"** %129, align 8
  br label %150

150:                                              ; preds = %149, %144
  %151 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 1, i32 1
  store i64 %13, i64* %151, align 8
  %152 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 2, i32 0, i32 0, i32 1
  %153 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %152, align 8
  %154 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 2, i32 0, i32 0, i32 0
  %155 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %154, align 8
  br label %156

156:                                              ; preds = %160, %150
  %157 = phi %"struct.std::__1::pair.124"* [ %153, %150 ], [ %158, %160 ]
  %158 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %157, i64 -1
  %159 = icmp eq %"struct.std::__1::pair.124"* %158, %155
  br i1 %159, label %167, label %160

160:                                              ; preds = %156
  %161 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %158, i64 0, i32 0
  %162 = load i64, i64* %161, align 8
  %163 = icmp ugt i64 %162, %13
  br i1 %163, label %156, label %164

164:                                              ; preds = %160
  %165 = icmp ult i64 %162, %13
  %166 = zext i1 %165 to i64
  br label %167

167:                                              ; preds = %156, %164
  %168 = phi %"struct.std::__1::pair.124"* [ %158, %164 ], [ %155, %156 ]
  %169 = phi i64 [ %166, %164 ], [ 1, %156 ]
  %170 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %168, i64 %169
  %171 = icmp eq %"struct.std::__1::pair.124"* %170, %153
  br i1 %171, label %173, label %172

172:                                              ; preds = %167
  store %"struct.std::__1::pair.124"* %170, %"struct.std::__1::pair.124"** %152, align 8
  br label %173

173:                                              ; preds = %172, %167
  %174 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 2, i32 1
  store i64 %13, i64* %174, align 8
  %175 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 3, i32 0, i32 0, i32 1
  %176 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %175, align 8
  %177 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 3, i32 0, i32 0, i32 0
  %178 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %177, align 8
  br label %179

179:                                              ; preds = %183, %173
  %180 = phi %"struct.std::__1::pair.124"* [ %176, %173 ], [ %181, %183 ]
  %181 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %180, i64 -1
  %182 = icmp eq %"struct.std::__1::pair.124"* %181, %178
  br i1 %182, label %190, label %183

183:                                              ; preds = %179
  %184 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %181, i64 0, i32 0
  %185 = load i64, i64* %184, align 8
  %186 = icmp ugt i64 %185, %13
  br i1 %186, label %179, label %187

187:                                              ; preds = %183
  %188 = icmp ult i64 %185, %13
  %189 = zext i1 %188 to i64
  br label %190

190:                                              ; preds = %179, %187
  %191 = phi %"struct.std::__1::pair.124"* [ %181, %187 ], [ %178, %179 ]
  %192 = phi i64 [ %189, %187 ], [ 1, %179 ]
  %193 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %191, i64 %192
  %194 = icmp eq %"struct.std::__1::pair.124"* %193, %176
  br i1 %194, label %196, label %195

195:                                              ; preds = %190
  store %"struct.std::__1::pair.124"* %193, %"struct.std::__1::pair.124"** %175, align 8
  br label %196

196:                                              ; preds = %195, %190
  %197 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 3, i32 1
  store i64 %13, i64* %197, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gfx9BreakListIbE8SetValueEb(%"class.gfx::BreakList.121"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca [7 x i8], align 1
  %4 = zext i1 %1 to i8
  %5 = bitcast %"class.gfx::BreakList.121"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.gfx::BreakList.121", %"class.gfx::BreakList.121"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.std::__1::pair.124"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = getelementptr inbounds [7 x i8], [7 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %9)
  %10 = inttoptr i64 %6 to %"struct.std::__1::pair.124"*
  %11 = getelementptr inbounds %"class.gfx::BreakList.121", %"class.gfx::BreakList.121"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %11, align 8
  %13 = icmp ugt %"struct.std::__1::pair.124"* %12, %10
  br i1 %13, label %14, label %20

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %10, i64 0, i32 0
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %10, i64 0, i32 1
  store i8 %4, i8* %16, align 8
  %17 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %10, i64 0, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %17, i8* nonnull align 1 %9, i64 7, i1 false)
  %18 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %10, i64 1
  %19 = ptrtoint %"struct.std::__1::pair.124"* %18 to i64
  store i64 %19, i64* %8, align 8
  br label %68

20:                                               ; preds = %2
  %21 = ptrtoint %"struct.std::__1::pair.124"* %12 to i64
  %22 = bitcast %"struct.std::__1::pair.124"** %11 to i64*
  %23 = sub i64 %21, %6
  %24 = ashr exact i64 %23, 4
  %25 = icmp ult i64 %24, 576460752303423487
  br i1 %25, label %26, label %34

26:                                               ; preds = %20
  %27 = ashr exact i64 %23, 3
  %28 = icmp eq i64 %23, 0
  %29 = select i1 %28, i64 1, i64 %27
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %39, label %31

31:                                               ; preds = %26
  %32 = icmp ugt i64 %29, 1152921504606846975
  br i1 %32, label %33, label %34

33:                                               ; preds = %31
  tail call void @abort() #19
  unreachable

34:                                               ; preds = %31, %20
  %35 = phi i64 [ %29, %31 ], [ 1152921504606846975, %20 ]
  %36 = shl i64 %35, 4
  %37 = tail call i8* @_Znwm(i64 %36) #18
  %38 = bitcast i8* %37 to %"struct.std::__1::pair.124"*
  br label %39

39:                                               ; preds = %34, %26
  %40 = phi i64 [ %35, %34 ], [ 0, %26 ]
  %41 = phi %"struct.std::__1::pair.124"* [ %38, %34 ], [ null, %26 ]
  %42 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %41, i64 %40
  %43 = ptrtoint %"struct.std::__1::pair.124"* %42 to i64
  %44 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %41, i64 0, i32 0
  store i64 0, i64* %44, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %41, i64 0, i32 1
  store i8 %4, i8* %45, align 8
  %46 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %41, i64 0, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %46, i8* nonnull align 1 %9, i64 7, i1 false)
  %47 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %41, i64 1
  %48 = ptrtoint %"struct.std::__1::pair.124"* %47 to i64
  %49 = getelementptr inbounds %"class.gfx::BreakList.121", %"class.gfx::BreakList.121"* %0, i64 0, i32 0, i32 0, i32 0
  %50 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %49, align 8
  %51 = load i64, i64* %8, align 8
  %52 = ptrtoint %"struct.std::__1::pair.124"* %50 to i64
  %53 = sub i64 %51, %52
  %54 = ashr exact i64 %53, 4
  %55 = sub nsw i64 0, %54
  %56 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %41, i64 %55
  %57 = ptrtoint %"struct.std::__1::pair.124"* %56 to i64
  %58 = icmp sgt i64 %53, 0
  br i1 %58, label %59, label %63

59:                                               ; preds = %39
  %60 = bitcast %"struct.std::__1::pair.124"* %56 to i8*
  %61 = bitcast %"struct.std::__1::pair.124"* %50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 %53, i1 false) #17
  %62 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %49, align 8
  br label %63

63:                                               ; preds = %59, %39
  %64 = phi %"struct.std::__1::pair.124"* [ %50, %39 ], [ %62, %59 ]
  store i64 %57, i64* %5, align 8
  store i64 %48, i64* %8, align 8
  store i64 %43, i64* %22, align 8
  %65 = icmp eq %"struct.std::__1::pair.124"* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %63
  %67 = bitcast %"struct.std::__1::pair.124"* %64 to i8*
  tail call void @_ZdlPv(i8* %67) #18
  br label %68

68:                                               ; preds = %14, %63, %66
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %9)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText17SetSelectionModelERKNS_14SelectionModelE(%"class.gfx::RenderText"*, %"class.gfx::SelectionModel"* readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11
  %4 = bitcast %"class.gfx::SelectionModel"* %1 to i64*
  %5 = bitcast %"class.gfx::SelectionModel"* %3 to i64*
  %6 = load i64, i64* %4, align 8
  store i64 %6, i64* %5, align 8
  %7 = icmp eq %"class.gfx::SelectionModel"* %3, %1
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11, i32 1
  %10 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %1, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.gfx::Range"*, %"class.gfx::Range"** %10, align 8
  %12 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %1, i64 0, i32 1, i32 0, i32 1
  %13 = load %"class.gfx::Range"*, %"class.gfx::Range"** %12, align 8
  tail call void @_ZNSt3__16vectorIN3gfx5RangeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.157"* %9, %"class.gfx::Range"* %11, %"class.gfx::Range"* %13) #17
  br label %14

14:                                               ; preds = %2, %8
  %15 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %1, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11, i32 2
  store i32 %16, i32* %17, align 8
  %18 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 55
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 14
  store i8 1, i8* %19, align 1
  ret void
}

declare void @_ZN3gfx14SelectionModelC1Ev(%"class.gfx::SelectionModel"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText22OnTextAttributeChangedEv(%"class.gfx::RenderText"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i16*, i16** %8, align 8
  store i16 0, i16* %9, align 2
  %10 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %10, align 8
  br label %13

11:                                               ; preds = %1
  %12 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  store i16 0, i16* %12, align 2
  store i8 0, i8* %4, align 1
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 38
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %15, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i16*, i16** %20, align 8
  store i16 0, i16* %21, align 2
  %22 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 38, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %22, align 8
  br label %25

23:                                               ; preds = %13
  %24 = bitcast %"class.std::__1::basic_string"* %14 to i16*
  store i16 0, i16* %24, align 2
  store i8 0, i8* %16, align 1
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 41
  store i8 0, i8* %26, align 2
  %27 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 0, i32 0, i32 1
  %28 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %27, align 8
  %29 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %29, align 8
  br label %31

31:                                               ; preds = %35, %25
  %32 = phi %"struct.std::__1::pair.186"* [ %28, %25 ], [ %33, %35 ]
  %33 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %32, i64 -1
  %34 = icmp eq %"struct.std::__1::pair.186"* %33, %30
  br i1 %34, label %39, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %33, i64 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %31

39:                                               ; preds = %35, %31
  %40 = phi %"struct.std::__1::pair.186"* [ %30, %31 ], [ %33, %35 ]
  %41 = phi i64 [ 1, %31 ], [ 0, %35 ]
  %42 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %40, i64 %41
  %43 = icmp eq %"struct.std::__1::pair.186"* %42, %28
  br i1 %43, label %45, label %44

44:                                               ; preds = %39
  store %"struct.std::__1::pair.186"* %42, %"struct.std::__1::pair.186"** %27, align 8
  br label %45

45:                                               ; preds = %39, %44
  %46 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 1
  store i64 0, i64* %46, align 8
  %47 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 63
  store i8 0, i8* %47, align 8
  %48 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*, i1)***
  %49 = load void (%"class.gfx::RenderText"*, i1)**, void (%"class.gfx::RenderText"*, i1)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %49, i64 11
  %51 = load void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %50, align 8
  tail call void %51(%"class.gfx::RenderText"* %0, i1 zeroext true) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText10AppendTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.gfx::RenderText"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i16*, i16** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i16* %9, i16* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %27

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 9223372036854775807
  %24 = add nsw i64 %23, -1
  %25 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  br label %29

27:                                               ; preds = %2
  %28 = zext i8 %18 to i64
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i64 [ %24, %20 ], [ 10, %27 ]
  %31 = phi i64 [ %26, %20 ], [ %28, %27 ]
  %32 = sub i64 %30, %31
  %33 = icmp ult i64 %32, %15
  br i1 %33, label %198, label %34

34:                                               ; preds = %29
  %35 = icmp eq i64 %15, 0
  br i1 %35, label %201, label %36

36:                                               ; preds = %34
  br i1 %19, label %37, label %40

37:                                               ; preds = %36
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i16*, i16** %38, align 8
  br label %42

40:                                               ; preds = %36
  %41 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  br label %42

42:                                               ; preds = %40, %37
  %43 = phi i16* [ %39, %37 ], [ %41, %40 ]
  %44 = getelementptr inbounds i16, i16* %43, i64 %31
  %45 = icmp ult i64 %15, 16
  br i1 %45, label %135, label %46

46:                                               ; preds = %42
  %47 = add i64 %15, %31
  %48 = getelementptr i16, i16* %43, i64 %47
  %49 = getelementptr i16, i16* %14, i64 %15
  %50 = icmp ult i16* %44, %49
  %51 = icmp ult i16* %14, %48
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %46
  %54 = and i64 %15, -16
  %55 = sub i64 %15, %54
  %56 = getelementptr i16, i16* %14, i64 %54
  %57 = getelementptr i16, i16* %44, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %14, i64 %66
  %69 = getelementptr i16, i16* %44, i64 %66
  %70 = bitcast i16* %68 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !32
  %72 = getelementptr i16, i16* %68, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !32
  %75 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !35, !noalias !32
  %76 = getelementptr i16, i16* %69, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !35, !noalias !32
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %14, i64 %78
  %80 = getelementptr i16, i16* %44, i64 %78
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !32
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !32
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !35, !noalias !32
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !35, !noalias !32
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %14, i64 %89
  %91 = getelementptr i16, i16* %44, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !32
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !32
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !35, !noalias !32
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !35, !noalias !32
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %14, i64 %100
  %102 = getelementptr i16, i16* %44, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !32
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !32
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !35, !noalias !32
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !35, !noalias !32
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !37

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %14, i64 %118
  %121 = getelementptr i16, i16* %44, i64 %118
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !32
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !32
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !35, !noalias !32
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !35, !noalias !32
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !38

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %15, %54
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %46, %42
  %136 = phi i64 [ %15, %46 ], [ %15, %42 ], [ %55, %133 ]
  %137 = phi i16* [ %14, %46 ], [ %14, %42 ], [ %56, %133 ]
  %138 = phi i16* [ %44, %46 ], [ %44, %42 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i16* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %144, align 2
  store i16 %147, i16* %145, align 2
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !39

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i16* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i16* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %185, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %160, align 2
  store i16 %162, i16* %161, align 2
  %163 = getelementptr inbounds i16, i16* %161, i64 1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %161, i64 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %161, i64 3
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %161, i64 4
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %161, i64 5
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %161, i64 6
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %161, i64 7
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i16, i16* %161, i64 8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !40

188:                                              ; preds = %153, %158, %133
  %189 = add i64 %31, %15
  %190 = load i8, i8* %17, align 1
  %191 = icmp slt i8 %190, 0
  br i1 %191, label %192, label %194

192:                                              ; preds = %188
  %193 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %189, i64* %193, align 8
  br label %196

194:                                              ; preds = %188
  %195 = trunc i64 %189 to i8
  store i8 %195, i8* %17, align 1
  br label %196

196:                                              ; preds = %194, %192
  %197 = getelementptr inbounds i16, i16* %43, i64 %189
  store i16 0, i16* %197, align 2
  br label %201

198:                                              ; preds = %29
  %199 = add i64 %31, %15
  %200 = sub i64 %199, %30
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %3, i64 %30, i64 %200, i64 %31, i64 %31, i64 0, i64 %15, i16* %14) #17
  br label %201

201:                                              ; preds = %34, %196, %198
  tail call void @_ZN3gfx10RenderText18UpdateStyleLengthsEv(%"class.gfx::RenderText"* %0)
  %202 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 55
  store i8 0, i8* %202, align 8
  %203 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 35
  store i32 -1, i32* %203, align 4
  %204 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 6
  %205 = load i32, i32* %204, align 8
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %209

207:                                              ; preds = %201
  %208 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 7
  store i32 0, i32* %208, align 4
  br label %209

209:                                              ; preds = %207, %201
  %210 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37
  %211 = bitcast %"class.std::__1::basic_string"* %210 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %212 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %211, i64 0, i32 1, i32 1
  %213 = load i8, i8* %212, align 1
  %214 = icmp slt i8 %213, 0
  br i1 %214, label %215, label %219

215:                                              ; preds = %209
  %216 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %210, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load i16*, i16** %216, align 8
  store i16 0, i16* %217, align 2
  %218 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %218, align 8
  br label %221

219:                                              ; preds = %209
  %220 = bitcast %"class.std::__1::basic_string"* %210 to i16*
  store i16 0, i16* %220, align 2
  store i8 0, i8* %212, align 1
  br label %221

221:                                              ; preds = %219, %215
  %222 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 38
  %223 = bitcast %"class.std::__1::basic_string"* %222 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %224 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %223, i64 0, i32 1, i32 1
  %225 = load i8, i8* %224, align 1
  %226 = icmp slt i8 %225, 0
  br i1 %226, label %227, label %231

227:                                              ; preds = %221
  %228 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %222, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = load i16*, i16** %228, align 8
  store i16 0, i16* %229, align 2
  %230 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 38, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %230, align 8
  br label %233

231:                                              ; preds = %221
  %232 = bitcast %"class.std::__1::basic_string"* %222 to i16*
  store i16 0, i16* %232, align 2
  store i8 0, i8* %224, align 1
  br label %233

233:                                              ; preds = %231, %227
  %234 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 41
  store i8 0, i8* %234, align 2
  %235 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 0, i32 0, i32 1
  %236 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %235, align 8
  %237 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 0, i32 0, i32 0
  %238 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %237, align 8
  br label %239

239:                                              ; preds = %243, %233
  %240 = phi %"struct.std::__1::pair.186"* [ %236, %233 ], [ %241, %243 ]
  %241 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %240, i64 -1
  %242 = icmp eq %"struct.std::__1::pair.186"* %241, %238
  br i1 %242, label %247, label %243

243:                                              ; preds = %239
  %244 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %241, i64 0, i32 0
  %245 = load i64, i64* %244, align 8
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %247, label %239

247:                                              ; preds = %243, %239
  %248 = phi %"struct.std::__1::pair.186"* [ %238, %239 ], [ %241, %243 ]
  %249 = phi i64 [ 1, %239 ], [ 0, %243 ]
  %250 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %248, i64 %249
  %251 = icmp eq %"struct.std::__1::pair.186"* %250, %236
  br i1 %251, label %253, label %252

252:                                              ; preds = %247
  store %"struct.std::__1::pair.186"* %250, %"struct.std::__1::pair.186"** %235, align 8
  br label %253

253:                                              ; preds = %247, %252
  %254 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 1
  store i64 0, i64* %254, align 8
  %255 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 63
  store i8 0, i8* %255, align 8
  %256 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*, i1)***
  %257 = load void (%"class.gfx::RenderText"*, i1)**, void (%"class.gfx::RenderText"*, i1)*** %256, align 8
  %258 = getelementptr inbounds void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %257, i64 11
  %259 = load void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %258, align 8
  tail call void %259(%"class.gfx::RenderText"* %0, i1 zeroext true) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText22SetHorizontalAlignmentENS_19HorizontalAlignmentE(%"class.gfx::RenderText"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 8
  %7 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 53
  %8 = bitcast %"class.gfx::Vector2d"* %7 to i64*
  store i64 0, i64* %8, align 4
  %9 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 55
  store i8 0, i8* %9, align 8
  br label %10

10:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText20SetVerticalAlignmentENS_17VerticalAlignmentE(%"class.gfx::RenderText"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 4
  %7 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 53
  %8 = bitcast %"class.gfx::Vector2d"* %7 to i64*
  store i64 0, i64* %8, align 4
  %9 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 55
  store i8 0, i8* %9, align 8
  br label %10

10:                                               ; preds = %2, %6
  ret void
}

declare dereferenceable(8) %"class.gfx::FontList"* @_ZN3gfx8FontListaSERKS0_(%"class.gfx::FontList"*, %"class.gfx::FontList"* dereferenceable(8)) local_unnamed_addr #1

declare i32 @_ZNK3gfx8FontList12GetFontStyleEv(%"class.gfx::FontList"*) local_unnamed_addr #1

declare i32 @_ZNK3gfx8FontList13GetFontWeightEv(%"class.gfx::FontList"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText11SetObscuredEb(%"class.gfx::RenderText"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i32
  %4 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 33
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = zext i8 %5 to i32
  %7 = icmp eq i32 %3, %6
  br i1 %7, label %62, label %8

8:                                                ; preds = %2
  %9 = zext i1 %1 to i8
  store i8 %9, i8* %4, align 8
  %10 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 35
  store i32 -1, i32* %10, align 4
  %11 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 55
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  store i16 0, i16* %19, align 2
  %20 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %20, align 8
  br label %23

21:                                               ; preds = %8
  %22 = bitcast %"class.std::__1::basic_string"* %12 to i16*
  store i16 0, i16* %22, align 2
  store i8 0, i8* %14, align 1
  br label %23

23:                                               ; preds = %21, %17
  %24 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 38
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %25, i64 0, i32 1, i32 1
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i16*, i16** %30, align 8
  store i16 0, i16* %31, align 2
  %32 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 38, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %32, align 8
  br label %35

33:                                               ; preds = %23
  %34 = bitcast %"class.std::__1::basic_string"* %24 to i16*
  store i16 0, i16* %34, align 2
  store i8 0, i8* %26, align 1
  br label %35

35:                                               ; preds = %33, %29
  %36 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 41
  store i8 0, i8* %36, align 2
  %37 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 0, i32 0, i32 1
  %38 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %37, align 8
  %39 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 0, i32 0, i32 0
  %40 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %39, align 8
  br label %41

41:                                               ; preds = %45, %35
  %42 = phi %"struct.std::__1::pair.186"* [ %38, %35 ], [ %43, %45 ]
  %43 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %42, i64 -1
  %44 = icmp eq %"struct.std::__1::pair.186"* %43, %40
  br i1 %44, label %49, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %43, i64 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %41

49:                                               ; preds = %45, %41
  %50 = phi %"struct.std::__1::pair.186"* [ %40, %41 ], [ %43, %45 ]
  %51 = phi i64 [ 1, %41 ], [ 0, %45 ]
  %52 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %50, i64 %51
  %53 = icmp eq %"struct.std::__1::pair.186"* %52, %38
  br i1 %53, label %55, label %54

54:                                               ; preds = %49
  store %"struct.std::__1::pair.186"* %52, %"struct.std::__1::pair.186"** %37, align 8
  br label %55

55:                                               ; preds = %49, %54
  %56 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 1
  store i64 0, i64* %56, align 8
  %57 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 63
  store i8 0, i8* %57, align 8
  %58 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*, i1)***
  %59 = load void (%"class.gfx::RenderText"*, i1)**, void (%"class.gfx::RenderText"*, i1)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %59, i64 11
  %61 = load void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %60, align 8
  tail call void %61(%"class.gfx::RenderText"* %0, i1 zeroext true) #17
  br label %62

62:                                               ; preds = %2, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText22SetObscuredRevealIndexEi(%"class.gfx::RenderText"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 35
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %58, label %6

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 4
  %7 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 55
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37
  %9 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  store i16 0, i16* %15, align 2
  %16 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %16, align 8
  br label %19

17:                                               ; preds = %6
  %18 = bitcast %"class.std::__1::basic_string"* %8 to i16*
  store i16 0, i16* %18, align 2
  store i8 0, i8* %10, align 1
  br label %19

19:                                               ; preds = %17, %13
  %20 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 38
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %21, i64 0, i32 1, i32 1
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %29

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i16*, i16** %26, align 8
  store i16 0, i16* %27, align 2
  %28 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 38, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %28, align 8
  br label %31

29:                                               ; preds = %19
  %30 = bitcast %"class.std::__1::basic_string"* %20 to i16*
  store i16 0, i16* %30, align 2
  store i8 0, i8* %22, align 1
  br label %31

31:                                               ; preds = %29, %25
  %32 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 41
  store i8 0, i8* %32, align 2
  %33 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 0, i32 0, i32 1
  %34 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %33, align 8
  %35 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %35, align 8
  br label %37

37:                                               ; preds = %41, %31
  %38 = phi %"struct.std::__1::pair.186"* [ %34, %31 ], [ %39, %41 ]
  %39 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %38, i64 -1
  %40 = icmp eq %"struct.std::__1::pair.186"* %39, %36
  br i1 %40, label %45, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %39, i64 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %37

45:                                               ; preds = %41, %37
  %46 = phi %"struct.std::__1::pair.186"* [ %36, %37 ], [ %39, %41 ]
  %47 = phi i64 [ 1, %37 ], [ 0, %41 ]
  %48 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %46, i64 %47
  %49 = icmp eq %"struct.std::__1::pair.186"* %48, %34
  br i1 %49, label %51, label %50

50:                                               ; preds = %45
  store %"struct.std::__1::pair.186"* %48, %"struct.std::__1::pair.186"** %33, align 8
  br label %51

51:                                               ; preds = %45, %50
  %52 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 1
  store i64 0, i64* %52, align 8
  %53 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 63
  store i8 0, i8* %53, align 8
  %54 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*, i1)***
  %55 = load void (%"class.gfx::RenderText"*, i1)**, void (%"class.gfx::RenderText"*, i1)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %55, i64 11
  %57 = load void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %56, align 8
  tail call void %57(%"class.gfx::RenderText"* %0, i1 zeroext true) #17
  br label %58

58:                                               ; preds = %2, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText23SetObscuredGlyphSpacingEi(%"class.gfx::RenderText"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 61
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 4
  %7 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*, i1)***
  %8 = load void (%"class.gfx::RenderText"*, i1)**, void (%"class.gfx::RenderText"*, i1)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %8, i64 11
  %10 = load void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %9, align 8
  tail call void %10(%"class.gfx::RenderText"* %0, i1 zeroext true) #17
  br label %11

11:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText12SetMultilineEb(%"class.gfx::RenderText"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i32
  %4 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 44
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = zext i8 %5 to i32
  %7 = icmp eq i32 %3, %6
  br i1 %7, label %61, label %8

8:                                                ; preds = %2
  %9 = zext i1 %1 to i8
  store i8 %9, i8* %4, align 4
  %10 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 55
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i16*, i16** %17, align 8
  store i16 0, i16* %18, align 2
  %19 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %19, align 8
  br label %22

20:                                               ; preds = %8
  %21 = bitcast %"class.std::__1::basic_string"* %11 to i16*
  store i16 0, i16* %21, align 2
  store i8 0, i8* %13, align 1
  br label %22

22:                                               ; preds = %20, %16
  %23 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 38
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %24, i64 0, i32 1, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i16*, i16** %29, align 8
  store i16 0, i16* %30, align 2
  %31 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 38, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %31, align 8
  br label %34

32:                                               ; preds = %22
  %33 = bitcast %"class.std::__1::basic_string"* %23 to i16*
  store i16 0, i16* %33, align 2
  store i8 0, i8* %25, align 1
  br label %34

34:                                               ; preds = %32, %28
  %35 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 41
  store i8 0, i8* %35, align 2
  %36 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 0, i32 0, i32 1
  %37 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %36, align 8
  %38 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %38, align 8
  br label %40

40:                                               ; preds = %44, %34
  %41 = phi %"struct.std::__1::pair.186"* [ %37, %34 ], [ %42, %44 ]
  %42 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %41, i64 -1
  %43 = icmp eq %"struct.std::__1::pair.186"* %42, %39
  br i1 %43, label %48, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %42, i64 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %40

48:                                               ; preds = %44, %40
  %49 = phi %"struct.std::__1::pair.186"* [ %39, %40 ], [ %42, %44 ]
  %50 = phi i64 [ 1, %40 ], [ 0, %44 ]
  %51 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %49, i64 %50
  %52 = icmp eq %"struct.std::__1::pair.186"* %51, %37
  br i1 %52, label %54, label %53

53:                                               ; preds = %48
  store %"struct.std::__1::pair.186"* %51, %"struct.std::__1::pair.186"** %36, align 8
  br label %54

54:                                               ; preds = %48, %53
  %55 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 1
  store i64 0, i64* %55, align 8
  %56 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 63
  store i8 0, i8* %56, align 8
  %57 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*, i1)***
  %58 = load void (%"class.gfx::RenderText"*, i1)**, void (%"class.gfx::RenderText"*, i1)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %58, i64 11
  %60 = load void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %59, align 8
  tail call void %60(%"class.gfx::RenderText"* %0, i1 zeroext true) #17
  br label %61

61:                                               ; preds = %2, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText11SetMaxLinesEm(%"class.gfx::RenderText"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 46
  store i64 %1, i64* %3, align 8
  %4 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*)***
  %5 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %5, i64 12
  %7 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %6, align 8
  tail call void %7(%"class.gfx::RenderText"* %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3gfx10RenderText11GetNumLinesEv(%"class.gfx::RenderText"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*)***
  %3 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %2, align 8
  %4 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %3, i64 13
  %5 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %4, align 8
  tail call void %5(%"class.gfx::RenderText"* %0) #17
  %6 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 59, i32 0, i32 0, i32 0
  %7 = load %"class.gfx::internal::ShapedText"*, %"class.gfx::internal::ShapedText"** %6, align 8
  %8 = getelementptr inbounds %"class.gfx::internal::ShapedText", %"class.gfx::internal::ShapedText"* %7, i64 0, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.gfx::internal::Line"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.gfx::internal::ShapedText"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 48
  ret i64 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gfx::internal::ShapedText"* @_ZN3gfx10RenderText13GetShapedTextEv(%"class.gfx::RenderText"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*)***
  %3 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %2, align 8
  %4 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %3, i64 13
  %5 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %4, align 8
  tail call void %5(%"class.gfx::RenderText"* %0) #17
  %6 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 59, i32 0, i32 0, i32 0
  %7 = load %"class.gfx::internal::ShapedText"*, %"class.gfx::internal::ShapedText"** %6, align 8
  ret %"class.gfx::internal::ShapedText"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3gfx10RenderText18GetTextIndexOfLineEm(%"class.gfx::RenderText"*, i64) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*)***
  %4 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %4, i64 13
  %6 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %5, align 8
  tail call void %6(%"class.gfx::RenderText"* %0) #17
  %7 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 59, i32 0, i32 0, i32 0
  %8 = load %"class.gfx::internal::ShapedText"*, %"class.gfx::internal::ShapedText"** %7, align 8
  %9 = getelementptr inbounds %"class.gfx::internal::ShapedText", %"class.gfx::internal::ShapedText"* %8, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast %"struct.gfx::internal::Line"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.gfx::internal::ShapedText"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = sdiv exact i64 %14, 48
  %16 = icmp ugt i64 %15, %1
  br i1 %16, label %28, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3
  %19 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  br label %94

26:                                               ; preds = %17
  %27 = zext i8 %21 to i64
  br label %94

28:                                               ; preds = %2
  %29 = inttoptr i64 %13 to %"struct.gfx::internal::Line"*
  %30 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %29, i64 %1, i32 4
  %31 = load i32, i32* %30, align 8
  %32 = sext i32 %31 to i64
  tail call void @_ZNK3gfx10RenderText23EnsureLayoutTextUpdatedEv(%"class.gfx::RenderText"* %0) #17
  %33 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37
  %34 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %34, i64 0, i32 1, i32 1
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  %38 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = zext i8 %36 to i64
  %41 = select i1 %37, i64 %39, i64 %40
  %42 = icmp eq i64 %41, %32
  br i1 %42, label %80, label %43

43:                                               ; preds = %28
  %44 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 32, i32 0, i32 0
  %45 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %44, align 8
  %46 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 32, i32 0, i32 1
  %47 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %46, align 8
  %48 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %45 to i64
  %49 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %47 to i64
  %50 = sub i64 %49, %48
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %68, label %52

52:                                               ; preds = %43
  %53 = ashr exact i64 %50, 4
  br label %54

54:                                               ; preds = %54, %52
  %55 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %45, %52 ], [ %66, %54 ]
  %56 = phi i64 [ %53, %52 ], [ %65, %54 ]
  %57 = lshr i64 %56, 1
  %58 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %55, i64 1
  %59 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %55, i64 %57, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = icmp ult i64 %60, %32
  %62 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %58, i64 %57
  %63 = xor i64 %57, -1
  %64 = add i64 %56, %63
  %65 = select i1 %61, i64 %64, i64 %57
  %66 = select i1 %61, %"struct.gfx::internal::TextToDisplayIndex"* %62, %"struct.gfx::internal::TextToDisplayIndex"* %55
  %67 = icmp eq i64 %65, 0
  br i1 %67, label %68, label %54

68:                                               ; preds = %54, %43
  %69 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %45, %43 ], [ %66, %54 ]
  %70 = icmp eq %"struct.gfx::internal::TextToDisplayIndex"* %69, %47
  br i1 %70, label %75, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %69, i64 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = icmp eq i64 %73, %32
  br i1 %74, label %77, label %75

75:                                               ; preds = %71, %68
  %76 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %69, i64 -1
  br label %77

77:                                               ; preds = %75, %71
  %78 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %76, %75 ], [ %69, %71 ]
  %79 = icmp eq %"struct.gfx::internal::TextToDisplayIndex"* %47, %78
  br i1 %79, label %80, label %91

80:                                               ; preds = %77, %28
  %81 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3
  %82 = bitcast %"class.std::__1::basic_string"* %81 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %82, i64 0, i32 1, i32 1
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %88 = load i64, i64* %87, align 8
  br label %94

89:                                               ; preds = %80
  %90 = zext i8 %84 to i64
  br label %94

91:                                               ; preds = %77
  %92 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %78, i64 0, i32 0
  %93 = load i64, i64* %92, align 8
  br label %94

94:                                               ; preds = %91, %89, %86, %26, %23
  %95 = phi i64 [ %25, %23 ], [ %27, %26 ], [ %93, %91 ], [ %88, %86 ], [ %90, %89 ]
  ret i64 %95
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK3gfx10RenderText23DisplayIndexToTextIndexEm(%"class.gfx::RenderText"*, i64) local_unnamed_addr #0 align 2 {
  tail call void @_ZNK3gfx10RenderText23EnsureLayoutTextUpdatedEv(%"class.gfx::RenderText"* %0) #17
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = zext i8 %6 to i64
  %11 = select i1 %7, i64 %9, i64 %10
  %12 = icmp eq i64 %11, %1
  br i1 %12, label %50, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 32, i32 0, i32 0
  %15 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %14, align 8
  %16 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 32, i32 0, i32 1
  %17 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %16, align 8
  %18 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %15 to i64
  %19 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %17 to i64
  %20 = sub i64 %19, %18
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %38, label %22

22:                                               ; preds = %13
  %23 = ashr exact i64 %20, 4
  br label %24

24:                                               ; preds = %24, %22
  %25 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %15, %22 ], [ %36, %24 ]
  %26 = phi i64 [ %23, %22 ], [ %35, %24 ]
  %27 = lshr i64 %26, 1
  %28 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %25, i64 1
  %29 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %25, i64 %27, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp ult i64 %30, %1
  %32 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %28, i64 %27
  %33 = xor i64 %27, -1
  %34 = add i64 %26, %33
  %35 = select i1 %31, i64 %34, i64 %27
  %36 = select i1 %31, %"struct.gfx::internal::TextToDisplayIndex"* %32, %"struct.gfx::internal::TextToDisplayIndex"* %25
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %38, label %24

38:                                               ; preds = %24, %13
  %39 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %15, %13 ], [ %36, %24 ]
  %40 = icmp eq %"struct.gfx::internal::TextToDisplayIndex"* %39, %17
  br i1 %40, label %45, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %39, i64 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, %1
  br i1 %44, label %47, label %45

45:                                               ; preds = %41, %38
  %46 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %39, i64 -1
  br label %47

47:                                               ; preds = %41, %45
  %48 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %46, %45 ], [ %39, %41 ]
  %49 = icmp eq %"struct.gfx::internal::TextToDisplayIndex"* %17, %48
  br i1 %49, label %50, label %61

50:                                               ; preds = %2, %47
  %51 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3
  %52 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %52, i64 0, i32 1, i32 1
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  br label %64

59:                                               ; preds = %50
  %60 = zext i8 %54 to i64
  br label %64

61:                                               ; preds = %47
  %62 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %48, i64 0, i32 0
  %63 = load i64, i64* %62, align 8
  br label %64

64:                                               ; preds = %56, %59, %61
  %65 = phi i64 [ %63, %61 ], [ %58, %56 ], [ %60, %59 ]
  ret i64 %65
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText19SetWordWrapBehaviorENS_16WordWrapBehaviorE(%"class.gfx::RenderText"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 47
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %62, label %6

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 8
  %7 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 44
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %62, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 55
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  store i16 0, i16* %19, align 2
  %20 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %20, align 8
  br label %23

21:                                               ; preds = %10
  %22 = bitcast %"class.std::__1::basic_string"* %12 to i16*
  store i16 0, i16* %22, align 2
  store i8 0, i8* %14, align 1
  br label %23

23:                                               ; preds = %21, %17
  %24 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 38
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %25, i64 0, i32 1, i32 1
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i16*, i16** %30, align 8
  store i16 0, i16* %31, align 2
  %32 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 38, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %32, align 8
  br label %35

33:                                               ; preds = %23
  %34 = bitcast %"class.std::__1::basic_string"* %24 to i16*
  store i16 0, i16* %34, align 2
  store i8 0, i8* %26, align 1
  br label %35

35:                                               ; preds = %33, %29
  %36 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 41
  store i8 0, i8* %36, align 2
  %37 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 0, i32 0, i32 1
  %38 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %37, align 8
  %39 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 0, i32 0, i32 0
  %40 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %39, align 8
  br label %41

41:                                               ; preds = %45, %35
  %42 = phi %"struct.std::__1::pair.186"* [ %38, %35 ], [ %43, %45 ]
  %43 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %42, i64 -1
  %44 = icmp eq %"struct.std::__1::pair.186"* %43, %40
  br i1 %44, label %49, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %43, i64 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %41

49:                                               ; preds = %45, %41
  %50 = phi %"struct.std::__1::pair.186"* [ %40, %41 ], [ %43, %45 ]
  %51 = phi i64 [ 1, %41 ], [ 0, %45 ]
  %52 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %50, i64 %51
  %53 = icmp eq %"struct.std::__1::pair.186"* %52, %38
  br i1 %53, label %55, label %54

54:                                               ; preds = %49
  store %"struct.std::__1::pair.186"* %52, %"struct.std::__1::pair.186"** %37, align 8
  br label %55

55:                                               ; preds = %49, %54
  %56 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 1
  store i64 0, i64* %56, align 8
  %57 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 63
  store i8 0, i8* %57, align 8
  %58 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*, i1)***
  %59 = load void (%"class.gfx::RenderText"*, i1)**, void (%"class.gfx::RenderText"*, i1)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %59, i64 11
  %61 = load void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %60, align 8
  tail call void %61(%"class.gfx::RenderText"* %0, i1 zeroext true) #17
  br label %62

62:                                               ; preds = %6, %2, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText16SetMinLineHeightEi(%"class.gfx::RenderText"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 43
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 8
  %7 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 55
  store i8 0, i8* %7, align 8
  %8 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*)***
  %9 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %9, i64 12
  %11 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %10, align 8
  tail call void %11(%"class.gfx::RenderText"* %0) #17
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText16SetElideBehaviorENS_13ElideBehaviorE(%"class.gfx::RenderText"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 39
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 8
  %7 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*)***
  %8 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %8, i64 12
  %10 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %9, align 8
  tail call void %10(%"class.gfx::RenderText"* %0) #17
  br label %11

11:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText20SetWhitespaceElisionEN4absl8optionalIbEE(%"class.gfx::RenderText"*, i16) local_unnamed_addr #0 align 2 {
  %3 = trunc i16 %1 to i8
  %4 = lshr i16 %1, 8
  %5 = trunc i16 %4 to i8
  %6 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 40
  %7 = getelementptr inbounds %"class.absl::optional.171", %"class.absl::optional.171"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp ne i8 %8, 0
  %10 = icmp ne i8 %3, 0
  %11 = xor i1 %10, %9
  %12 = xor i1 %9, true
  %13 = or i1 %11, %12
  br i1 %13, label %21, label %14

14:                                               ; preds = %2
  %15 = icmp eq i8 %3, 0
  br i1 %15, label %16, label %17, !prof !41

16:                                               ; preds = %14
  tail call void @llvm.trap() #17
  unreachable

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 40, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = icmp eq i8 %19, %5
  br i1 %20, label %28, label %22

21:                                               ; preds = %2
  br i1 %11, label %22, label %28

22:                                               ; preds = %17, %21
  %23 = bitcast %"class.absl::optional.171"* %6 to i16*
  store i16 %1, i16* %23, align 4
  %24 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*)***
  %25 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %25, i64 12
  %27 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %26, align 8
  tail call void %27(%"class.gfx::RenderText"* %0) #17
  br label %28

28:                                               ; preds = %17, %22, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText14SetDisplayRectERKNS_4RectE(%"class.gfx::RenderText"*, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 50
  %4 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %9, label %27

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 50, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %15, label %27

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 50, i32 1, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %17, %19
  br i1 %20, label %21, label %27

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 50, i32 1, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %36, label %27

27:                                               ; preds = %21, %2, %15, %9
  %28 = bitcast %"class.gfx::Rect"* %3 to i8*
  %29 = bitcast %"class.gfx::Rect"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 4 %29, i64 16, i1 false)
  %30 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 54
  store i32 2147483647, i32* %30, align 4
  %31 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 55
  store i8 0, i8* %31, align 8
  %32 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*)***
  %33 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %33, i64 12
  %35 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %34, align 8
  tail call void %35(%"class.gfx::RenderText"* %0) #17
  br label %36

36:                                               ; preds = %21, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx10RenderText16GetAllSelectionsEv(%"class.std::__1::vector.157"* noalias sret, %"class.gfx::RenderText"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 11
  tail call void @_ZNK3gfx14SelectionModel16GetAllSelectionsEv(%"class.std::__1::vector.157"* sret %0, %"class.gfx::SelectionModel"* %3) #17
  ret void
}

declare void @_ZNK3gfx14SelectionModel16GetAllSelectionsEv(%"class.std::__1::vector.157"* sret, %"class.gfx::SelectionModel"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText17SetCursorPositionEm(%"class.gfx::RenderText"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::SelectionModel", align 8
  %4 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %2
  %13 = zext i8 %7 to i64
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %11, %9 ], [ %13, %12 ]
  %16 = icmp ult i64 %15, %1
  %17 = select i1 %16, i64 %15, i64 %1
  %18 = tail call zeroext i1 @_ZNK3gfx10RenderText18IsValidCursorIndexEm(%"class.gfx::RenderText"* %0, i64 %17)
  br i1 %18, label %19, label %40

19:                                               ; preds = %14
  %20 = bitcast %"class.gfx::SelectionModel"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %20) #17
  %21 = icmp eq i64 %17, 0
  %22 = zext i1 %21 to i32
  call void @_ZN3gfx14SelectionModelC1EmNS_22LogicalCursorDirectionE(%"class.gfx::SelectionModel"* nonnull %3, i64 %17, i32 %22) #17
  %23 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11
  %24 = bitcast %"class.gfx::SelectionModel"* %3 to i64*
  %25 = bitcast %"class.gfx::SelectionModel"* %23 to i64*
  %26 = load i64, i64* %24, align 8
  store i64 %26, i64* %25, align 8
  %27 = icmp eq %"class.gfx::SelectionModel"* %23, %3
  br i1 %27, label %34, label %28

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11, i32 1
  %30 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %3, i64 0, i32 1, i32 0, i32 0
  %31 = load %"class.gfx::Range"*, %"class.gfx::Range"** %30, align 8
  %32 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %3, i64 0, i32 1, i32 0, i32 1
  %33 = load %"class.gfx::Range"*, %"class.gfx::Range"** %32, align 8
  call void @_ZNSt3__16vectorIN3gfx5RangeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.157"* %29, %"class.gfx::Range"* %31, %"class.gfx::Range"* %33) #17
  br label %34

34:                                               ; preds = %19, %28
  %35 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %3, i64 0, i32 2
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11, i32 2
  store i32 %36, i32* %37, align 8
  %38 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 55
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 14
  store i8 1, i8* %39, align 1
  call void @_ZN3gfx14SelectionModelD1Ev(%"class.gfx::SelectionModel"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %20) #17
  br label %40

40:                                               ; preds = %34, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3gfx10RenderText18IsValidCursorIndexEm(%"class.gfx::RenderText"*, i64) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %107, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3
  %6 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  br label %15

13:                                               ; preds = %4
  %14 = zext i8 %8 to i64
  br label %15

15:                                               ; preds = %10, %13
  %16 = phi i64 [ %12, %10 ], [ %14, %13 ]
  %17 = icmp eq i64 %16, %1
  br i1 %17, label %107, label %18

18:                                               ; preds = %15
  br i1 %9, label %19, label %22

19:                                               ; preds = %18
  %20 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  br label %24

22:                                               ; preds = %18
  %23 = zext i8 %8 to i64
  br label %24

24:                                               ; preds = %22, %19
  %25 = phi i64 [ %21, %19 ], [ %23, %22 ]
  %26 = icmp eq i64 %25, %1
  br i1 %26, label %45, label %27

27:                                               ; preds = %24
  br i1 %9, label %28, label %31

28:                                               ; preds = %27
  %29 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  br label %33

31:                                               ; preds = %27
  %32 = zext i8 %8 to i64
  br label %33

33:                                               ; preds = %31, %28
  %34 = phi i64 [ %30, %28 ], [ %32, %31 ]
  %35 = icmp ugt i64 %34, %1
  br i1 %35, label %36, label %107

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 36
  %38 = load i64, i64* %37, align 8
  %39 = add i64 %38, -1
  %40 = icmp ult i64 %39, %1
  br i1 %40, label %107, label %41

41:                                               ; preds = %36
  %42 = tail call zeroext i1 @_ZN3gfx21IsValidCodePointIndexERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEm(%"class.std::__1::basic_string"* dereferenceable(24) %5, i64 %1) #17
  br i1 %42, label %43, label %107

43:                                               ; preds = %41
  %44 = load i8, i8* %7, align 1
  br label %45

45:                                               ; preds = %43, %24
  %46 = phi i8 [ %44, %43 ], [ %8, %24 ]
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  br label %53

51:                                               ; preds = %45
  %52 = zext i8 %46 to i64
  br label %53

53:                                               ; preds = %51, %48
  %54 = phi i64 [ %50, %48 ], [ %52, %51 ]
  %55 = icmp ugt i64 %54, %1
  br i1 %55, label %56, label %107

56:                                               ; preds = %53
  tail call void @_ZNK3gfx10RenderText23EnsureLayoutTextUpdatedEv(%"class.gfx::RenderText"* %0) #17
  %57 = load i8, i8* %7, align 1
  %58 = icmp slt i8 %57, 0
  %59 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = zext i8 %57 to i64
  %62 = select i1 %58, i64 %60, i64 %61
  %63 = icmp eq i64 %62, %1
  br i1 %63, label %104, label %64

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 32, i32 0, i32 0
  %66 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %65, align 8
  %67 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 32, i32 0, i32 1
  %68 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %67, align 8
  %69 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %66 to i64
  %70 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %68 to i64
  %71 = sub i64 %70, %69
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %89, label %73

73:                                               ; preds = %64
  %74 = ashr exact i64 %71, 4
  br label %75

75:                                               ; preds = %75, %73
  %76 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %66, %73 ], [ %87, %75 ]
  %77 = phi i64 [ %74, %73 ], [ %86, %75 ]
  %78 = lshr i64 %77, 1
  %79 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %76, i64 %78
  %80 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %79, i64 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = icmp ult i64 %81, %1
  %83 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %79, i64 1
  %84 = xor i64 %78, -1
  %85 = add i64 %77, %84
  %86 = select i1 %82, i64 %85, i64 %78
  %87 = select i1 %82, %"struct.gfx::internal::TextToDisplayIndex"* %83, %"struct.gfx::internal::TextToDisplayIndex"* %76
  %88 = icmp eq i64 %86, 0
  br i1 %88, label %89, label %75

89:                                               ; preds = %75, %64
  %90 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %66, %64 ], [ %87, %75 ]
  %91 = icmp eq %"struct.gfx::internal::TextToDisplayIndex"* %90, %68
  br i1 %91, label %96, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %90, i64 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = icmp eq i64 %94, %1
  br i1 %95, label %98, label %96

96:                                               ; preds = %92, %89
  %97 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %90, i64 -1
  br label %98

98:                                               ; preds = %96, %92
  %99 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %97, %96 ], [ %90, %92 ]
  %100 = icmp eq %"struct.gfx::internal::TextToDisplayIndex"* %68, %99
  br i1 %100, label %104, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %99, i64 0, i32 0
  %103 = load i64, i64* %102, align 8
  br label %104

104:                                              ; preds = %101, %98, %56
  %105 = phi i64 [ %103, %101 ], [ %62, %98 ], [ %1, %56 ]
  %106 = icmp eq i64 %105, %1
  br label %107

107:                                              ; preds = %36, %33, %104, %53, %41, %15, %2
  %108 = phi i1 [ true, %15 ], [ true, %2 ], [ false, %41 ], [ true, %53 ], [ %106, %104 ], [ false, %33 ], [ false, %36 ]
  ret i1 %108
}

declare void @_ZN3gfx14SelectionModelC1EmNS_22LogicalCursorDirectionE(%"class.gfx::SelectionModel"*, i64, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText10MoveCursorENS_9BreakTypeENS_21VisualCursorDirectionENS_17SelectionBehaviorE(%"class.gfx::RenderText"*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.gfx::SelectionModel", align 8
  %6 = alloca %"class.gfx::SelectionModel", align 8
  %7 = alloca %"class.gfx::SelectionModel", align 8
  %8 = alloca %"class.gfx::Range", align 4
  %9 = alloca %"class.gfx::SelectionModel", align 8
  %10 = alloca %"class.gfx::SelectionModel", align 8
  %11 = alloca %"class.gfx::SelectionModel", align 8
  %12 = alloca %"class.gfx::SelectionModel", align 8
  %13 = bitcast %"class.gfx::SelectionModel"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 40, i1 false)
  %14 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11
  %18 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11, i32 2
  %19 = load i32, i32* %18, align 8
  call void @_ZN3gfx14SelectionModelC1EmNS_22LogicalCursorDirectionE(%"class.gfx::SelectionModel"* nonnull %5, i64 %16, i32 %19) #17
  %20 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 14
  %21 = load i8, i8* %20, align 1, !range !2
  %22 = icmp eq i8 %21, 0
  %23 = icmp eq i32 %3, 3
  %24 = or i1 %23, %22
  br i1 %24, label %25, label %92

25:                                               ; preds = %4
  %26 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = load i32, i32* %14, align 4
  %29 = icmp eq i32 %27, %28
  br i1 %29, label %92, label %30

30:                                               ; preds = %25
  %31 = bitcast %"class.gfx::SelectionModel"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %31) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 40, i1 false)
  %32 = zext i32 %27 to i64
  %33 = icmp ule i32 %27, %28
  %34 = zext i1 %33 to i32
  call void @_ZN3gfx14SelectionModelC1EmNS_22LogicalCursorDirectionE(%"class.gfx::SelectionModel"* nonnull %6, i64 %32, i32 %34) #17
  %35 = call { i64, i64 } @_ZN3gfx10RenderText15GetCursorBoundsERKNS_14SelectionModelEb(%"class.gfx::RenderText"* %0, %"class.gfx::SelectionModel"* nonnull dereferenceable(40) %6, i1 zeroext true)
  %36 = extractvalue { i64, i64 } %35, 0
  %37 = trunc i64 %36 to i32
  %38 = lshr i64 %36, 32
  %39 = trunc i64 %38 to i32
  %40 = call { i64, i64 } @_ZN3gfx10RenderText15GetCursorBoundsERKNS_14SelectionModelEb(%"class.gfx::RenderText"* %0, %"class.gfx::SelectionModel"* nonnull dereferenceable(40) %5, i1 zeroext true)
  %41 = extractvalue { i64, i64 } %40, 0
  %42 = trunc i64 %41 to i32
  %43 = lshr i64 %41, 32
  %44 = trunc i64 %43 to i32
  %45 = icmp sgt i32 %39, %44
  br i1 %45, label %51, label %46

46:                                               ; preds = %30
  %47 = icmp eq i32 %39, %44
  br i1 %47, label %48, label %51

48:                                               ; preds = %46
  %49 = icmp sgt i32 %37, %42
  %50 = zext i1 %49 to i32
  br label %51

51:                                               ; preds = %46, %48, %30
  %52 = phi i32 [ 1, %30 ], [ 0, %46 ], [ %50, %48 ]
  %53 = or i32 %2, 2
  %54 = icmp eq i32 %53, 3
  %55 = zext i1 %54 to i32
  %56 = icmp eq i32 %52, %55
  br i1 %56, label %57, label %91

57:                                               ; preds = %51
  %58 = bitcast %"class.gfx::SelectionModel"* %17 to i64*
  %59 = load i64, i64* %58, align 4
  %60 = trunc i64 %59 to i32
  %61 = lshr i64 %59, 32
  %62 = trunc i64 %61 to i32
  %63 = bitcast %"class.gfx::SelectionModel"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %63) #17
  %64 = bitcast %"class.gfx::Range"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #17
  %65 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %8, i64 0, i32 0
  store i32 %62, i32* %65, align 4
  %66 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %8, i64 0, i32 1
  store i32 %60, i32* %66, align 4
  %67 = load i32, i32* %18, align 8
  call void @_ZN3gfx14SelectionModelC1ERKNS_5RangeENS_22LogicalCursorDirectionE(%"class.gfx::SelectionModel"* nonnull %7, %"class.gfx::Range"* nonnull dereferenceable(8) %8, i32 %67) #17
  %68 = bitcast %"class.gfx::SelectionModel"* %7 to i64*
  %69 = load i64, i64* %68, align 8
  store i64 %69, i64* %58, align 8
  %70 = icmp eq %"class.gfx::SelectionModel"* %17, %7
  br i1 %70, label %77, label %71

71:                                               ; preds = %57
  %72 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11, i32 1
  %73 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %7, i64 0, i32 1, i32 0, i32 0
  %74 = load %"class.gfx::Range"*, %"class.gfx::Range"** %73, align 8
  %75 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %7, i64 0, i32 1, i32 0, i32 1
  %76 = load %"class.gfx::Range"*, %"class.gfx::Range"** %75, align 8
  call void @_ZNSt3__16vectorIN3gfx5RangeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.157"* %72, %"class.gfx::Range"* %74, %"class.gfx::Range"* %76) #17
  br label %77

77:                                               ; preds = %57, %71
  %78 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %7, i64 0, i32 2
  %79 = load i32, i32* %78, align 8
  store i32 %79, i32* %18, align 8
  call void @_ZN3gfx14SelectionModelD1Ev(%"class.gfx::SelectionModel"* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %63) #17
  %80 = bitcast %"class.gfx::SelectionModel"* %6 to i64*
  %81 = bitcast %"class.gfx::SelectionModel"* %5 to i64*
  %82 = load i64, i64* %80, align 8
  store i64 %82, i64* %81, align 8
  %83 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %5, i64 0, i32 1
  %84 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %6, i64 0, i32 1, i32 0, i32 0
  %85 = load %"class.gfx::Range"*, %"class.gfx::Range"** %84, align 8
  %86 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %6, i64 0, i32 1, i32 0, i32 1
  %87 = load %"class.gfx::Range"*, %"class.gfx::Range"** %86, align 8
  call void @_ZNSt3__16vectorIN3gfx5RangeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.157"* %83, %"class.gfx::Range"* %85, %"class.gfx::Range"* %87) #17
  %88 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %6, i64 0, i32 2
  %89 = load i32, i32* %88, align 8
  %90 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %5, i64 0, i32 2
  store i32 %89, i32* %90, align 8
  br label %91

91:                                               ; preds = %77, %51
  call void @_ZN3gfx14SelectionModelD1Ev(%"class.gfx::SelectionModel"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %31) #17
  br label %92

92:                                               ; preds = %4, %91, %25
  %93 = or i32 %1, 1
  %94 = icmp eq i32 %93, 3
  br i1 %94, label %186, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11, i32 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = load i32, i32* %14, align 4
  %99 = icmp ne i32 %97, %98
  %100 = and i1 %23, %99
  br i1 %100, label %101, label %186

101:                                              ; preds = %95
  %102 = icmp eq i32 %1, 1
  br i1 %102, label %103, label %148

103:                                              ; preds = %101
  %104 = bitcast %"class.gfx::SelectionModel"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %104) #17
  %105 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*)***
  %106 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %105, align 8, !noalias !42
  %107 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %106, i64 13
  %108 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %107, align 8, !noalias !42
  call void %108(%"class.gfx::RenderText"* %0) #17, !noalias !42
  %109 = or i32 %2, 1
  %110 = icmp eq i32 %109, 3
  br i1 %110, label %111, label %116

111:                                              ; preds = %103
  %112 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)***
  %113 = load void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)**, void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)*** %112, align 8, !noalias !42
  %114 = getelementptr inbounds void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)*, void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)** %113, i64 10
  %115 = load void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)*, void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)** %114, align 8
  call void %115(%"class.gfx::SelectionModel"* nonnull sret %9, %"class.gfx::RenderText"* %0, %"class.gfx::SelectionModel"* nonnull dereferenceable(40) %5, i32 %2) #17
  br label %136

116:                                              ; preds = %103
  %117 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3
  %118 = bitcast %"class.std::__1::basic_string"* %117 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %119 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %118, i64 0, i32 1, i32 1
  %120 = load i8, i8* %119, align 1, !noalias !42
  %121 = icmp slt i8 %120, 0
  br i1 %121, label %122, label %125

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %124 = load i64, i64* %123, align 8, !noalias !42
  br label %127

125:                                              ; preds = %116
  %126 = zext i8 %120 to i64
  br label %127

127:                                              ; preds = %125, %122
  %128 = phi i64 [ %124, %122 ], [ %126, %125 ]
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  call void @_ZN3gfx10RenderText18EdgeSelectionModelENS_21VisualCursorDirectionE(%"class.gfx::SelectionModel"* nonnull sret %9, %"class.gfx::RenderText"* %0, i32 %2) #17
  br label %136

131:                                              ; preds = %127
  %132 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)***
  %133 = load void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)**, void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)*** %132, align 8, !noalias !42
  %134 = getelementptr inbounds void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)*, void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)** %133, i64 9
  %135 = load void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)*, void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)** %134, align 8
  call void %135(%"class.gfx::SelectionModel"* nonnull sret %9, %"class.gfx::RenderText"* %0, %"class.gfx::SelectionModel"* nonnull dereferenceable(40) %5, i32 %2) #17
  br label %136

136:                                              ; preds = %111, %130, %131
  %137 = bitcast %"class.gfx::SelectionModel"* %9 to i64*
  %138 = bitcast %"class.gfx::SelectionModel"* %5 to i64*
  %139 = load i64, i64* %137, align 8
  store i64 %139, i64* %138, align 8
  %140 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %5, i64 0, i32 1
  %141 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %9, i64 0, i32 1, i32 0, i32 0
  %142 = load %"class.gfx::Range"*, %"class.gfx::Range"** %141, align 8
  %143 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %9, i64 0, i32 1, i32 0, i32 1
  %144 = load %"class.gfx::Range"*, %"class.gfx::Range"** %143, align 8
  call void @_ZNSt3__16vectorIN3gfx5RangeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.157"* %140, %"class.gfx::Range"* %142, %"class.gfx::Range"* %144) #17
  %145 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %9, i64 0, i32 2
  %146 = load i32, i32* %145, align 8
  %147 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %5, i64 0, i32 2
  store i32 %146, i32* %147, align 8
  call void @_ZN3gfx14SelectionModelD1Ev(%"class.gfx::SelectionModel"* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %104) #17
  br label %148

148:                                              ; preds = %136, %101
  %149 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %5, i64 0, i32 0, i32 1
  %150 = load i32, i32* %149, align 4
  %151 = zext i32 %150 to i64
  %152 = call zeroext i1 @_ZNK3gfx10RenderText18IsValidCursorIndexEm(%"class.gfx::RenderText"* %0, i64 %151)
  br i1 %152, label %202, label %153

153:                                              ; preds = %148
  %154 = bitcast %"class.gfx::SelectionModel"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %154) #17
  %155 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*)***
  %156 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %155, align 8, !noalias !45
  %157 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %156, i64 13
  %158 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %157, align 8, !noalias !45
  call void %158(%"class.gfx::RenderText"* %0) #17, !noalias !45
  %159 = or i32 %2, 1
  %160 = icmp eq i32 %159, 3
  br i1 %160, label %161, label %166

161:                                              ; preds = %153
  %162 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)***
  %163 = load void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)**, void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)*** %162, align 8, !noalias !45
  %164 = getelementptr inbounds void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)*, void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)** %163, i64 10
  %165 = load void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)*, void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)** %164, align 8
  call void %165(%"class.gfx::SelectionModel"* nonnull sret %10, %"class.gfx::RenderText"* %0, %"class.gfx::SelectionModel"* nonnull dereferenceable(40) %5, i32 %2) #17
  br label %188

166:                                              ; preds = %153
  %167 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3
  %168 = bitcast %"class.std::__1::basic_string"* %167 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %169 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %168, i64 0, i32 1, i32 1
  %170 = load i8, i8* %169, align 1, !noalias !45
  %171 = icmp slt i8 %170, 0
  br i1 %171, label %172, label %175

172:                                              ; preds = %166
  %173 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %174 = load i64, i64* %173, align 8, !noalias !45
  br label %177

175:                                              ; preds = %166
  %176 = zext i8 %170 to i64
  br label %177

177:                                              ; preds = %175, %172
  %178 = phi i64 [ %174, %172 ], [ %176, %175 ]
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %180, label %181

180:                                              ; preds = %177
  call void @_ZN3gfx10RenderText18EdgeSelectionModelENS_21VisualCursorDirectionE(%"class.gfx::SelectionModel"* nonnull sret %10, %"class.gfx::RenderText"* %0, i32 %2) #17
  br label %188

181:                                              ; preds = %177
  %182 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)***
  %183 = load void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)**, void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)*** %182, align 8, !noalias !45
  %184 = getelementptr inbounds void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)*, void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)** %183, i64 8
  %185 = load void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)*, void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)** %184, align 8
  call void %185(%"class.gfx::SelectionModel"* nonnull sret %10, %"class.gfx::RenderText"* %0, %"class.gfx::SelectionModel"* nonnull dereferenceable(40) %5, i32 %2) #17
  br label %188

186:                                              ; preds = %92, %95
  %187 = bitcast %"class.gfx::SelectionModel"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %187) #17
  call void @_ZN3gfx10RenderText25GetAdjacentSelectionModelERKNS_14SelectionModelENS_9BreakTypeENS_21VisualCursorDirectionE(%"class.gfx::SelectionModel"* nonnull sret %11, %"class.gfx::RenderText"* %0, %"class.gfx::SelectionModel"* nonnull dereferenceable(40) %5, i32 %1, i32 %2)
  br label %188

188:                                              ; preds = %181, %180, %161, %186
  %189 = phi %"class.gfx::SelectionModel"* [ %11, %186 ], [ %10, %161 ], [ %10, %180 ], [ %10, %181 ]
  %190 = phi i8* [ %187, %186 ], [ %154, %161 ], [ %154, %180 ], [ %154, %181 ]
  %191 = bitcast %"class.gfx::SelectionModel"* %189 to i64*
  %192 = bitcast %"class.gfx::SelectionModel"* %5 to i64*
  %193 = load i64, i64* %191, align 8
  store i64 %193, i64* %192, align 8
  %194 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %5, i64 0, i32 1
  %195 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %189, i64 0, i32 1, i32 0, i32 0
  %196 = load %"class.gfx::Range"*, %"class.gfx::Range"** %195, align 8
  %197 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %189, i64 0, i32 1, i32 0, i32 1
  %198 = load %"class.gfx::Range"*, %"class.gfx::Range"** %197, align 8
  call void @_ZNSt3__16vectorIN3gfx5RangeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.157"* %194, %"class.gfx::Range"* %196, %"class.gfx::Range"* %198) #17
  %199 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %189, i64 0, i32 2
  %200 = load i32, i32* %199, align 8
  %201 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %5, i64 0, i32 2
  store i32 %200, i32* %201, align 8
  call void @_ZN3gfx14SelectionModelD1Ev(%"class.gfx::SelectionModel"* nonnull %189) #17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %190) #17
  br label %202

202:                                              ; preds = %188, %148
  %203 = load i32, i32* %14, align 4
  %204 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %5, i64 0, i32 0, i32 1
  %205 = load i32, i32* %204, align 4
  %206 = icmp ult i32 %205, %203
  %207 = select i1 %206, i32 %205, i32 %203
  %208 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11, i32 0, i32 0
  %209 = load i32, i32* %208, align 4
  %210 = icmp eq i32 %209, %203
  %211 = icmp ugt i32 %207, %209
  %212 = or i1 %210, %211
  br i1 %212, label %217, label %213

213:                                              ; preds = %202
  %214 = icmp ult i32 %203, %205
  %215 = select i1 %214, i32 %205, i32 %203
  %216 = icmp ule i32 %209, %215
  br label %217

217:                                              ; preds = %213, %202
  %218 = phi i1 [ false, %202 ], [ %216, %213 ]
  switch i32 %3, label %242 [
    i32 0, label %219
    i32 1, label %221
    i32 2, label %224
  ]

219:                                              ; preds = %217
  %220 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %5, i64 0, i32 0, i32 0
  store i32 %209, i32* %220, align 8
  br label %242

221:                                              ; preds = %217
  %222 = select i1 %218, i32 %203, i32 %209
  %223 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %5, i64 0, i32 0, i32 0
  store i32 %222, i32* %223, align 8
  br label %242

224:                                              ; preds = %217
  br i1 %218, label %225, label %240

225:                                              ; preds = %224
  %226 = bitcast %"class.gfx::SelectionModel"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %226) #17
  %227 = zext i32 %209 to i64
  %228 = load i32, i32* %18, align 8
  call void @_ZN3gfx14SelectionModelC1EmNS_22LogicalCursorDirectionE(%"class.gfx::SelectionModel"* nonnull %12, i64 %227, i32 %228) #17
  %229 = bitcast %"class.gfx::SelectionModel"* %12 to i64*
  %230 = bitcast %"class.gfx::SelectionModel"* %5 to i64*
  %231 = load i64, i64* %229, align 8
  store i64 %231, i64* %230, align 8
  %232 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %5, i64 0, i32 1
  %233 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %12, i64 0, i32 1, i32 0, i32 0
  %234 = load %"class.gfx::Range"*, %"class.gfx::Range"** %233, align 8
  %235 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %12, i64 0, i32 1, i32 0, i32 1
  %236 = load %"class.gfx::Range"*, %"class.gfx::Range"** %235, align 8
  call void @_ZNSt3__16vectorIN3gfx5RangeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.157"* %232, %"class.gfx::Range"* %234, %"class.gfx::Range"* %236) #17
  %237 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %12, i64 0, i32 2
  %238 = load i32, i32* %237, align 8
  %239 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %5, i64 0, i32 2
  store i32 %238, i32* %239, align 8
  call void @_ZN3gfx14SelectionModelD1Ev(%"class.gfx::SelectionModel"* nonnull %12) #17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %226) #17
  br label %242

240:                                              ; preds = %224
  %241 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %5, i64 0, i32 0, i32 0
  store i32 %209, i32* %241, align 8
  br label %242

242:                                              ; preds = %225, %240, %217, %221, %219
  %243 = call zeroext i1 @_ZN3gfx10RenderText12SetSelectionERKNS_14SelectionModelE(%"class.gfx::RenderText"* %0, %"class.gfx::SelectionModel"* nonnull dereferenceable(40) %5)
  store i8 1, i8* %20, align 1
  %244 = or i32 %2, 1
  %245 = icmp eq i32 %244, 3
  br i1 %245, label %248, label %246

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 62, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %247, align 4
  br label %248

248:                                              ; preds = %242, %246
  call void @_ZN3gfx14SelectionModelD1Ev(%"class.gfx::SelectionModel"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #17
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx10RenderText34GetSelectionModelForSelectionStartEv(%"class.gfx::SelectionModel"* noalias sret, %"class.gfx::RenderText"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 11, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 11, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 11
  tail call void @_ZN3gfx14SelectionModelC1ERKS0_(%"class.gfx::SelectionModel"* %0, %"class.gfx::SelectionModel"* dereferenceable(40) %9) #17
  br label %14

10:                                               ; preds = %2
  %11 = zext i32 %4 to i64
  %12 = icmp ule i32 %4, %6
  %13 = zext i1 %12 to i32
  tail call void @_ZN3gfx14SelectionModelC1EmNS_22LogicalCursorDirectionE(%"class.gfx::SelectionModel"* %0, i64 %11, i32 %13) #17
  br label %14

14:                                               ; preds = %10, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3gfx10RenderText15GetCursorBoundsERKNS_14SelectionModelEb(%"class.gfx::RenderText"*, %"class.gfx::SelectionModel"* dereferenceable(40), i1 zeroext) local_unnamed_addr #11 align 2 {
  %4 = alloca %"class.gfx::Range", align 4
  %5 = alloca <2 x float>, align 8
  %6 = bitcast <2 x float>* %5 to %"class.gfx::SizeF"*
  %7 = alloca %"class.gfx::PointF", align 4
  %8 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*)***
  %9 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %9, i64 13
  %11 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %10, align 8
  tail call void %11(%"class.gfx::RenderText"* %0) #17
  %12 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %1, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  br i1 %2, label %17, label %15

15:                                               ; preds = %3
  %16 = icmp eq i32 %13, 0
  br label %23

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %13, 0
  br i1 %20, label %42, label %21

21:                                               ; preds = %17
  %22 = icmp eq i32 %19, 0
  br i1 %22, label %36, label %23

23:                                               ; preds = %15, %21
  %24 = phi i32 [ 1, %15 ], [ %19, %21 ]
  %25 = phi i1 [ %16, %15 ], [ false, %21 ]
  %26 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %27, i64 0, i32 1, i32 1
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  br label %36

34:                                               ; preds = %23
  %35 = zext i8 %29 to i64
  br label %36

36:                                               ; preds = %34, %31, %21
  %37 = phi i1 [ true, %21 ], [ false, %31 ], [ false, %34 ]
  %38 = phi i32 [ 0, %21 ], [ %24, %31 ], [ %24, %34 ]
  %39 = phi i1 [ false, %21 ], [ %25, %31 ], [ %25, %34 ]
  %40 = phi i64 [ 0, %21 ], [ %33, %31 ], [ %35, %34 ]
  %41 = icmp eq i64 %40, %14
  br i1 %41, label %42, label %91

42:                                               ; preds = %17, %36
  %43 = phi i1 [ true, %17 ], [ %39, %36 ]
  %44 = phi i32 [ %19, %17 ], [ %38, %36 ]
  %45 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %8, align 8
  %46 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %45, i64 13
  %47 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %46, align 8
  tail call void %47(%"class.gfx::RenderText"* %0) #17
  %48 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 8
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %68

51:                                               ; preds = %42
  %52 = bitcast %"class.gfx::RenderText"* %0 to %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)***
  %53 = load %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)**, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)** %53, i64 2
  %55 = load %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)** %54, align 8
  %56 = tail call dereferenceable(24) %"class.std::__1::basic_string"* %55(%"class.gfx::RenderText"* %0) #17
  %57 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 6
  %58 = load i32, i32* %57, align 8
  switch i32 %58, label %65 [
    i32 0, label %59
    i32 1, label %61
    i32 2, label %66
    i32 3, label %64
    i32 4, label %66
  ]

59:                                               ; preds = %51
  %60 = tail call i32 @_ZN4base4i18n32GetFirstStrongCharacterDirectionERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %56) #17
  br label %66

61:                                               ; preds = %51
  %62 = tail call zeroext i1 @_ZN4base4i18n5IsRTLEv() #17
  %63 = select i1 %62, i32 1, i32 2
  br label %66

64:                                               ; preds = %51
  br label %66

65:                                               ; preds = %51
  br label %66

66:                                               ; preds = %65, %64, %61, %59, %51, %51
  %67 = phi i32 [ 0, %65 ], [ 1, %64 ], [ %63, %61 ], [ %60, %59 ], [ 2, %51 ], [ 2, %51 ]
  store i32 %67, i32* %48, align 8
  br label %68

68:                                               ; preds = %42, %66
  %69 = phi i32 [ %67, %66 ], [ %49, %42 ]
  %70 = icmp ne i32 %69, 1
  %71 = xor i1 %43, %70
  br i1 %71, label %72, label %139

72:                                               ; preds = %68
  %73 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %8, align 8
  %74 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %73, i64 13
  %75 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %74, align 8
  tail call void %75(%"class.gfx::RenderText"* %0) #17
  %76 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 59, i32 0, i32 0, i32 0
  %77 = load %"class.gfx::internal::ShapedText"*, %"class.gfx::internal::ShapedText"** %76, align 8
  %78 = getelementptr inbounds %"class.gfx::internal::ShapedText", %"class.gfx::internal::ShapedText"* %77, i64 0, i32 0, i32 0, i32 0
  %79 = load %"struct.gfx::internal::Line"*, %"struct.gfx::internal::Line"** %78, align 8
  %80 = getelementptr inbounds %"class.gfx::internal::ShapedText", %"class.gfx::internal::ShapedText"* %77, i64 0, i32 0, i32 0, i32 1
  %81 = load %"struct.gfx::internal::Line"*, %"struct.gfx::internal::Line"** %80, align 8
  %82 = icmp eq %"struct.gfx::internal::Line"* %79, %81
  br i1 %82, label %139, label %83

83:                                               ; preds = %72, %83
  %84 = phi float [ %88, %83 ], [ 0.000000e+00, %72 ]
  %85 = phi %"struct.gfx::internal::Line"* [ %89, %83 ], [ %79, %72 ]
  %86 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %85, i64 0, i32 1, i32 0
  %87 = load float, float* %86, align 4
  %88 = fadd float %84, %87
  %89 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %85, i64 1
  %90 = icmp eq %"struct.gfx::internal::Line"* %89, %81
  br i1 %90, label %139, label %83

91:                                               ; preds = %36
  %92 = tail call i64 @_ZNK3gfx10RenderText23IndexOfAdjacentGraphemeEmNS_22LogicalCursorDirectionE(%"class.gfx::RenderText"* %0, i64 %14, i32 %38)
  %93 = icmp ult i64 %92, %14
  %94 = select i1 %93, i64 %14, i64 %92
  %95 = select i1 %93, i64 %92, i64 %14
  %96 = bitcast %"class.gfx::Range"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #17
  %97 = trunc i64 %95 to i32
  %98 = trunc i64 %94 to i32
  %99 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %4, i64 0, i32 0
  store i32 %97, i32* %99, align 4
  %100 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %4, i64 0, i32 1
  store i32 %98, i32* %100, align 4
  %101 = bitcast %"class.gfx::RenderText"* %0 to <2 x float> (%"class.gfx::RenderText"*, %"class.gfx::Range"*)***
  %102 = load <2 x float> (%"class.gfx::RenderText"*, %"class.gfx::Range"*)**, <2 x float> (%"class.gfx::RenderText"*, %"class.gfx::Range"*)*** %101, align 8
  %103 = getelementptr inbounds <2 x float> (%"class.gfx::RenderText"*, %"class.gfx::Range"*)*, <2 x float> (%"class.gfx::RenderText"*, %"class.gfx::Range"*)** %102, i64 6
  %104 = load <2 x float> (%"class.gfx::RenderText"*, %"class.gfx::Range"*)*, <2 x float> (%"class.gfx::RenderText"*, %"class.gfx::Range"*)** %103, align 8
  %105 = call <2 x float> %104(%"class.gfx::RenderText"* %0, %"class.gfx::Range"* nonnull dereferenceable(8) %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #17
  br i1 %2, label %106, label %111

106:                                              ; preds = %91
  br i1 %37, label %107, label %109

107:                                              ; preds = %106
  %108 = extractelement <2 x float> %105, i32 1
  br label %139

109:                                              ; preds = %106
  %110 = extractelement <2 x float> %105, i32 0
  br label %139

111:                                              ; preds = %91
  %112 = extractelement <2 x float> %105, i32 0
  %113 = extractelement <2 x float> %105, i32 1
  %114 = fcmp olt float %112, %113
  %115 = select i1 %114, float %112, float %113
  %116 = fcmp ogt float %112, %113
  %117 = select i1 %116, float %112, float %113
  %118 = fcmp olt float %117, 0x3F50624DE0000000
  %119 = select i1 %118, float 0.000000e+00, float %117
  %120 = call float @llvm.ceil.f32(float %119) #17
  %121 = fcmp ult float %120, 0xC1E0000000000000
  %122 = fcmp ugt float %120, 0x41DFFFFFE0000000
  %123 = fcmp ogt float %120, 0xC1E0000000000000
  %124 = select i1 %123, float %120, float 0xC1E0000000000000
  %125 = fptosi float %124 to i32
  %126 = select i1 %121, i32 0, i32 2147483647
  %127 = select i1 %122, i32 %126, i32 %125
  %128 = fcmp olt float %115, 0x3F50624DE0000000
  %129 = select i1 %128, float 0.000000e+00, float %115
  %130 = call float @llvm.ceil.f32(float %129) #17
  %131 = fcmp ult float %130, 0xC1E0000000000000
  %132 = fcmp ugt float %130, 0x41DFFFFFE0000000
  %133 = fcmp ogt float %130, 0xC1E0000000000000
  %134 = select i1 %133, float %130, float 0xC1E0000000000000
  %135 = fptosi float %134 to i32
  %136 = select i1 %131, i32 0, i32 2147483647
  %137 = select i1 %132, i32 %136, i32 %135
  %138 = sub nsw i32 %127, %137
  br label %139

139:                                              ; preds = %83, %111, %109, %107, %72, %68
  %140 = phi i32 [ %44, %68 ], [ %44, %72 ], [ %38, %107 ], [ %38, %109 ], [ %38, %111 ], [ %44, %83 ]
  %141 = phi float [ 0.000000e+00, %68 ], [ 0.000000e+00, %72 ], [ %108, %107 ], [ %110, %109 ], [ %115, %111 ], [ %88, %83 ]
  %142 = phi i32 [ 1, %68 ], [ 1, %72 ], [ 1, %107 ], [ 1, %109 ], [ %138, %111 ], [ 1, %83 ]
  %143 = bitcast <2 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %143) #17
  %144 = bitcast %"class.gfx::RenderText"* %0 to <2 x float> (%"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*)***
  %145 = load <2 x float> (%"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*)**, <2 x float> (%"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*)*** %144, align 8
  %146 = getelementptr inbounds <2 x float> (%"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*)*, <2 x float> (%"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*)** %145, i64 4
  %147 = load <2 x float> (%"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*)*, <2 x float> (%"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*)** %146, align 8
  %148 = call <2 x float> %147(%"class.gfx::RenderText"* %0, %"class.gfx::SelectionModel"* dereferenceable(40) %1) #17
  store <2 x float> %148, <2 x float>* %5, align 8
  %149 = call i64 @_ZN3gfx12ToCeiledSizeERKNS_5SizeFE(%"class.gfx::SizeF"* nonnull dereferenceable(8) %6) #17
  %150 = lshr i64 %149, 32
  %151 = trunc i64 %150 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143) #17
  %152 = bitcast %"class.gfx::PointF"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %152) #17
  %153 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %7, i64 0, i32 0
  store float %141, float* %153, align 4
  %154 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %7, i64 0, i32 1
  store float 0.000000e+00, float* %154, align 4
  %155 = call i64 @_ZN3gfx10RenderText11ToViewPointERKNS_6PointFENS_22LogicalCursorDirectionE(%"class.gfx::RenderText"* %0, %"class.gfx::PointF"* nonnull dereferenceable(8) %7, i32 %140)
  %156 = trunc i64 %155 to i32
  %157 = lshr i64 %155, 32
  %158 = trunc i64 %157 to i32
  %159 = icmp sgt i32 %142, 0
  %160 = select i1 %159, i32 %142, i32 0
  %161 = icmp sgt i32 %151, 0
  %162 = select i1 %161, i32 %151, i32 0
  %163 = icmp sgt i32 %156, 0
  %164 = and i1 %159, %163
  %165 = sub nuw nsw i32 2147483647, %156
  %166 = icmp ult i32 %165, %160
  %167 = and i1 %166, %164
  %168 = select i1 %167, i32 %165, i32 %160
  %169 = icmp sgt i32 %158, 0
  %170 = and i1 %161, %169
  %171 = sub nuw nsw i32 2147483647, %158
  %172 = icmp ult i32 %171, %162
  %173 = and i1 %172, %170
  %174 = select i1 %173, i32 %171, i32 %162
  %175 = icmp sgt i32 %168, 0
  %176 = select i1 %175, i32 %168, i32 0
  %177 = icmp sgt i32 %174, 0
  %178 = select i1 %177, i32 %174, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #17
  %179 = insertvalue { i64, i64 } undef, i64 %155, 0
  %180 = zext i32 %178 to i64
  %181 = shl nuw nsw i64 %180, 32
  %182 = zext i32 %176 to i64
  %183 = or i64 %181, %182
  %184 = insertvalue { i64, i64 } %179, i64 %183, 1
  ret { i64, i64 } %184
}

declare void @_ZN3gfx14SelectionModelC1ERKNS_5RangeENS_22LogicalCursorDirectionE(%"class.gfx::SelectionModel"*, %"class.gfx::Range"* dereferenceable(8), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText25GetAdjacentSelectionModelERKNS_14SelectionModelENS_9BreakTypeENS_21VisualCursorDirectionE(%"class.gfx::SelectionModel"* noalias sret, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"* dereferenceable(40), i32, i32) local_unnamed_addr #0 align 2 {
  %6 = bitcast %"class.gfx::RenderText"* %1 to void (%"class.gfx::RenderText"*)***
  %7 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %7, i64 13
  %9 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %8, align 8
  tail call void %9(%"class.gfx::RenderText"* %1) #17
  %10 = or i32 %4, 1
  %11 = icmp eq i32 %10, 3
  br i1 %11, label %12, label %17

12:                                               ; preds = %5
  %13 = bitcast %"class.gfx::RenderText"* %1 to void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)***
  %14 = load void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)**, void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)*, void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)** %14, i64 10
  %16 = load void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)*, void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)** %15, align 8
  tail call void %16(%"class.gfx::SelectionModel"* sret %0, %"class.gfx::RenderText"* %1, %"class.gfx::SelectionModel"* dereferenceable(40) %2, i32 %4) #17
  br label %52

17:                                               ; preds = %5
  %18 = icmp eq i32 %3, 3
  br i1 %18, label %33, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 3
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %21, i64 0, i32 1, i32 1
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  br label %30

28:                                               ; preds = %19
  %29 = zext i8 %23 to i64
  br label %30

30:                                               ; preds = %25, %28
  %31 = phi i64 [ %27, %25 ], [ %29, %28 ]
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30, %17
  tail call void @_ZN3gfx10RenderText18EdgeSelectionModelENS_21VisualCursorDirectionE(%"class.gfx::SelectionModel"* sret %0, %"class.gfx::RenderText"* %1, i32 %4)
  br label %52

34:                                               ; preds = %30
  %35 = icmp eq i32 %3, 2
  br i1 %35, label %36, label %42

36:                                               ; preds = %34
  %37 = bitcast %"class.gfx::RenderText"* %1 to i64 (%"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*)***
  %38 = load i64 (%"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*)**, i64 (%"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*)*** %37, align 8
  %39 = getelementptr inbounds i64 (%"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*)*, i64 (%"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*)** %38, i64 7
  %40 = load i64 (%"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*)*, i64 (%"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*)** %39, align 8
  %41 = tail call i64 %40(%"class.gfx::RenderText"* %1, %"class.gfx::SelectionModel"* dereferenceable(40) %2) #17
  tail call void @_ZN3gfx10RenderText18LineSelectionModelEmNS_21VisualCursorDirectionE(%"class.gfx::SelectionModel"* sret %0, %"class.gfx::RenderText"* %1, i64 %41, i32 %4)
  br label %52

42:                                               ; preds = %34
  %43 = icmp eq i32 %3, 0
  %44 = bitcast %"class.gfx::RenderText"* %1 to void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)***
  %45 = load void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)**, void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)*** %44, align 8
  br i1 %43, label %46, label %49

46:                                               ; preds = %42
  %47 = getelementptr inbounds void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)*, void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)** %45, i64 8
  %48 = load void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)*, void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)** %47, align 8
  tail call void %48(%"class.gfx::SelectionModel"* sret %0, %"class.gfx::RenderText"* %1, %"class.gfx::SelectionModel"* dereferenceable(40) %2, i32 %4) #17
  br label %52

49:                                               ; preds = %42
  %50 = getelementptr inbounds void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)*, void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)** %45, i64 9
  %51 = load void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)*, void (%"class.gfx::SelectionModel"*, %"class.gfx::RenderText"*, %"class.gfx::SelectionModel"*, i32)** %50, align 8
  tail call void %51(%"class.gfx::SelectionModel"* sret %0, %"class.gfx::RenderText"* %1, %"class.gfx::SelectionModel"* dereferenceable(40) %2, i32 %4) #17
  br label %52

52:                                               ; preds = %49, %46, %36, %33, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gfx10RenderText12SetSelectionERKNS_14SelectionModelE(%"class.gfx::RenderText"*, %"class.gfx::SelectionModel"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.157", align 8
  %4 = alloca %"class.gfx::SelectionModel", align 8
  %5 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3
  %6 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  br label %15

13:                                               ; preds = %2
  %14 = zext i8 %8 to i64
  br label %15

15:                                               ; preds = %10, %13
  %16 = phi i64 [ %12, %10 ], [ %14, %13 ]
  %17 = trunc i64 %16 to i32
  %18 = bitcast %"class.std::__1::vector.157"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #17
  %19 = getelementptr inbounds %"class.std::__1::vector.157", %"class.std::__1::vector.157"* %3, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::vector.157", %"class.std::__1::vector.157"* %3, i64 0, i32 0, i32 1
  %21 = bitcast %"class.std::__1::vector.157"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  call void @_ZNK3gfx14SelectionModel16GetAllSelectionsEv(%"class.std::__1::vector.157"* nonnull sret %3, %"class.gfx::SelectionModel"* %1) #17
  %22 = load %"class.gfx::Range"*, %"class.gfx::Range"** %19, align 8
  %23 = load %"class.gfx::Range"*, %"class.gfx::Range"** %20, align 8
  %24 = icmp eq %"class.gfx::Range"* %22, %23
  br i1 %24, label %49, label %27

25:                                               ; preds = %44
  %26 = icmp eq %"class.gfx::Range"* %48, %23
  br i1 %26, label %49, label %27

27:                                               ; preds = %15, %25
  %28 = phi %"class.gfx::Range"* [ %48, %25 ], [ %22, %15 ]
  %29 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %28, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp ugt i32 %30, %17
  %32 = select i1 %31, i32 %17, i32 %30
  %33 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %28, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp ugt i32 %34, %17
  %36 = select i1 %35, i32 %17, i32 %34
  %37 = bitcast %"class.gfx::Range"* %28 to i64*
  %38 = zext i32 %36 to i64
  %39 = shl nuw i64 %38, 32
  %40 = zext i32 %32 to i64
  %41 = or i64 %39, %40
  store i64 %41, i64* %37, align 4
  %42 = zext i32 %32 to i64
  %43 = call zeroext i1 @_ZNK3gfx10RenderText18IsValidCursorIndexEm(%"class.gfx::RenderText"* %0, i64 %42)
  br i1 %43, label %44, label %72

44:                                               ; preds = %27
  %45 = load i32, i32* %33, align 4
  %46 = zext i32 %45 to i64
  %47 = call zeroext i1 @_ZNK3gfx10RenderText18IsValidCursorIndexEm(%"class.gfx::RenderText"* %0, i64 %46)
  %48 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %28, i64 1
  br i1 %47, label %25, label %72

49:                                               ; preds = %25, %15
  %50 = bitcast %"class.gfx::SelectionModel"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %50) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 40, i1 false)
  %51 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %1, i64 0, i32 2
  %52 = load i32, i32* %51, align 8
  call void @_ZN3gfx14SelectionModelC1ERKNSt3__16vectorINS_5RangeENS1_9allocatorIS3_EEEENS_22LogicalCursorDirectionE(%"class.gfx::SelectionModel"* nonnull %4, %"class.std::__1::vector.157"* nonnull dereferenceable(24) %3, i32 %52) #17
  %53 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11
  %54 = call zeroext i1 @_ZNK3gfx14SelectionModeleqERKS0_(%"class.gfx::SelectionModel"* nonnull %4, %"class.gfx::SelectionModel"* dereferenceable(40) %53) #17
  %55 = xor i1 %54, true
  %56 = bitcast %"class.gfx::SelectionModel"* %4 to i64*
  %57 = bitcast %"class.gfx::SelectionModel"* %53 to i64*
  %58 = load i64, i64* %56, align 8
  store i64 %58, i64* %57, align 8
  %59 = icmp eq %"class.gfx::SelectionModel"* %53, %4
  br i1 %59, label %66, label %60

60:                                               ; preds = %49
  %61 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11, i32 1
  %62 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %4, i64 0, i32 1, i32 0, i32 0
  %63 = load %"class.gfx::Range"*, %"class.gfx::Range"** %62, align 8
  %64 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %4, i64 0, i32 1, i32 0, i32 1
  %65 = load %"class.gfx::Range"*, %"class.gfx::Range"** %64, align 8
  call void @_ZNSt3__16vectorIN3gfx5RangeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.157"* %61, %"class.gfx::Range"* %63, %"class.gfx::Range"* %65) #17
  br label %66

66:                                               ; preds = %49, %60
  %67 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %4, i64 0, i32 2
  %68 = load i32, i32* %67, align 8
  %69 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11, i32 2
  store i32 %68, i32* %69, align 8
  %70 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 55
  store i8 0, i8* %70, align 8
  %71 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 14
  store i8 1, i8* %71, align 1
  call void @_ZN3gfx14SelectionModelD1Ev(%"class.gfx::SelectionModel"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %50) #17
  br label %72

72:                                               ; preds = %44, %27, %66
  %73 = phi i1 [ %55, %66 ], [ false, %27 ], [ false, %44 ]
  %74 = load %"class.gfx::Range"*, %"class.gfx::Range"** %19, align 8
  %75 = icmp eq %"class.gfx::Range"* %74, null
  br i1 %75, label %80, label %76

76:                                               ; preds = %72
  %77 = ptrtoint %"class.gfx::Range"* %74 to i64
  %78 = bitcast %"class.gfx::Range"** %20 to i64*
  store i64 %77, i64* %78, align 8
  %79 = bitcast %"class.gfx::Range"* %74 to i8*
  call void @_ZdlPv(i8* %79) #18
  br label %80

80:                                               ; preds = %72, %76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #17
  ret i1 %73
}

declare void @_ZN3gfx14SelectionModelC1ERKNSt3__16vectorINS_5RangeENS1_9allocatorIS3_EEEENS_22LogicalCursorDirectionE(%"class.gfx::SelectionModel"*, %"class.std::__1::vector.157"* dereferenceable(24), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gfx10RenderText17MoveCursorToPointERKNS_5PointEbS3_(%"class.gfx::RenderText"*, %"class.gfx::Point"* nocapture readonly dereferenceable(8), i1 zeroext, %"class.gfx::Point"* nocapture readnone dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.gfx::SelectionModel", align 8
  %6 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 62, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %6, align 4
  %7 = bitcast %"class.gfx::SelectionModel"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 40, i1 false)
  call void @_ZN3gfx10RenderText18FindCursorPositionERKNS_5PointES3_(%"class.gfx::SelectionModel"* nonnull sret %5, %"class.gfx::RenderText"* %0, %"class.gfx::Point"* dereferenceable(8) %1, %"class.gfx::Point"* dereferenceable(8) undef)
  br i1 %2, label %8, label %12

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %5, i64 0, i32 0, i32 0
  store i32 %10, i32* %11, align 8
  br label %12

12:                                               ; preds = %8, %4
  %13 = call zeroext i1 @_ZN3gfx10RenderText12SetSelectionERKNS_14SelectionModelE(%"class.gfx::RenderText"* %0, %"class.gfx::SelectionModel"* nonnull dereferenceable(40) %5)
  call void @_ZN3gfx14SelectionModelD1Ev(%"class.gfx::SelectionModel"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #17
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText18FindCursorPositionERKNS_5PointES3_(%"class.gfx::SelectionModel"* noalias sret, %"class.gfx::RenderText"*, %"class.gfx::Point"* nocapture readonly dereferenceable(8), %"class.gfx::Point"* nocapture readnone dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = bitcast %"class.gfx::RenderText"* %1 to void (%"class.gfx::RenderText"*)***
  %6 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %6, i64 13
  %8 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %7, align 8
  tail call void %8(%"class.gfx::RenderText"* %1) #17
  %9 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 59, i32 0, i32 0, i32 0
  %10 = load %"class.gfx::internal::ShapedText"*, %"class.gfx::internal::ShapedText"** %9, align 8
  %11 = tail call i64 @_ZN3gfx10RenderText13GetLineOffsetEm(%"class.gfx::RenderText"* %1, i64 0)
  %12 = lshr i64 %11, 32
  %13 = trunc i64 %12 to i32
  %14 = bitcast %"class.gfx::Point"* %2 to i64*
  %15 = load i64, i64* %14, align 4
  %16 = lshr i64 %15, 32
  %17 = trunc i64 %16 to i32
  %18 = icmp sgt i32 %13, -1
  %19 = select i1 %18, i32 -2147483648, i32 2147483647
  %20 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %17, i32 %13) #17
  %21 = extractvalue { i32, i1 } %20, 1
  %22 = extractvalue { i32, i1 } %20, 0
  %23 = select i1 %21, i32 %19, i32 %22, !prof !41
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %56, label %25

25:                                               ; preds = %4
  %26 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %5, align 8
  %27 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %26, i64 13
  %28 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %27, align 8
  tail call void %28(%"class.gfx::RenderText"* %1) #17
  %29 = load %"class.gfx::internal::ShapedText"*, %"class.gfx::internal::ShapedText"** %9, align 8
  %30 = getelementptr inbounds %"class.gfx::internal::ShapedText", %"class.gfx::internal::ShapedText"* %29, i64 0, i32 0, i32 0, i32 1
  %31 = bitcast %"struct.gfx::internal::Line"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.gfx::internal::ShapedText"* %29 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %32, %34
  %36 = sdiv exact i64 %35, 48
  %37 = icmp eq i64 %35, 0
  %38 = inttoptr i64 %34 to %"struct.gfx::internal::Line"*
  br i1 %37, label %51, label %39

39:                                               ; preds = %25
  %40 = sitofp i32 %23 to float
  br label %41

41:                                               ; preds = %39, %47
  %42 = phi i64 [ %49, %47 ], [ 0, %39 ]
  %43 = phi float [ %48, %47 ], [ %40, %39 ]
  %44 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %38, i64 %42, i32 1, i32 1
  %45 = load float, float* %44, align 4
  %46 = fcmp ugt float %43, %45
  br i1 %46, label %47, label %51

47:                                               ; preds = %41
  %48 = fsub float %43, %45
  %49 = add nuw i64 %42, 1
  %50 = icmp ult i64 %49, %36
  br i1 %50, label %41, label %51

51:                                               ; preds = %47, %41, %25
  %52 = phi i64 [ 0, %25 ], [ %36, %47 ], [ %42, %41 ]
  %53 = trunc i64 %52 to i32
  %54 = icmp sgt i32 %53, 0
  %55 = select i1 %54, i32 %53, i32 0
  br label %56

56:                                               ; preds = %51, %4
  %57 = phi i32 [ 0, %4 ], [ %55, %51 ]
  %58 = getelementptr inbounds %"class.gfx::internal::ShapedText", %"class.gfx::internal::ShapedText"* %10, i64 0, i32 0, i32 0, i32 1
  %59 = bitcast %"struct.gfx::internal::Line"** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.gfx::internal::ShapedText"* %10 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %60, %62
  %64 = sdiv exact i64 %63, 48
  %65 = trunc i64 %64 to i32
  %66 = icmp slt i32 %57, %65
  %67 = add i32 %65, -1
  %68 = select i1 %66, i32 %57, i32 %67
  %69 = sext i32 %68 to i64
  %70 = inttoptr i64 %62 to %"struct.gfx::internal::Line"*
  %71 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %70, i64 %69
  %72 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %70, i64 %69, i32 0, i32 0, i32 1
  %73 = bitcast %"struct.gfx::internal::LineSegment"** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"struct.gfx::internal::Line"* %71 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %74, %76
  %78 = sdiv exact i64 %77, 24
  %79 = icmp ugt i64 %78, 1
  %80 = inttoptr i64 %76 to %"struct.gfx::internal::LineSegment"*
  br i1 %79, label %81, label %132

81:                                               ; preds = %56
  %82 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 3
  %83 = getelementptr inbounds %"struct.gfx::internal::LineSegment", %"struct.gfx::internal::LineSegment"* %80, i64 0, i32 1, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds %"struct.gfx::internal::LineSegment", %"struct.gfx::internal::LineSegment"* %80, i64 0, i32 1, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = icmp ugt i32 %84, %87
  %89 = select i1 %88, i32 %84, i32 %87
  %90 = icmp ult i32 %84, %87
  %91 = select i1 %90, i32 %84, i32 %87
  %92 = sub i32 %89, %91
  switch i32 %92, label %132 [
    i32 1, label %93
    i32 2, label %104
  ]

93:                                               ; preds = %81
  %94 = bitcast %"class.std::__1::basic_string"* %82 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %94, i64 0, i32 1, i32 1
  %96 = load i8, i8* %95, align 1
  %97 = icmp slt i8 %96, 0
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i16*, i16** %98, align 8
  %100 = bitcast %"class.std::__1::basic_string"* %82 to i16*
  %101 = select i1 %97, i16* %99, i16* %100
  %102 = getelementptr inbounds i16, i16* %101, i64 %85
  %103 = load i16, i16* %102, align 2
  switch i16 %103, label %132 [
    i16 13, label %121
    i16 10, label %121
  ]

104:                                              ; preds = %81
  %105 = bitcast %"class.std::__1::basic_string"* %82 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %105, i64 0, i32 1, i32 1
  %107 = load i8, i8* %106, align 1
  %108 = icmp slt i8 %107, 0
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i16*, i16** %109, align 8
  %111 = bitcast %"class.std::__1::basic_string"* %82 to i16*
  %112 = select i1 %108, i16* %110, i16* %111
  %113 = getelementptr inbounds i16, i16* %112, i64 %85
  %114 = load i16, i16* %113, align 2
  %115 = icmp eq i16 %114, 13
  br i1 %115, label %116, label %132

116:                                              ; preds = %104
  %117 = add nuw nsw i64 %85, 1
  %118 = getelementptr inbounds i16, i16* %112, i64 %117
  %119 = load i16, i16* %118, align 2
  %120 = icmp eq i16 %119, 10
  br i1 %120, label %121, label %132

121:                                              ; preds = %93, %93, %116
  %122 = getelementptr inbounds %"struct.gfx::internal::LineSegment", %"struct.gfx::internal::LineSegment"* %80, i64 0, i32 0, i32 0
  %123 = load float, float* %122, align 4
  %124 = getelementptr inbounds %"struct.gfx::internal::LineSegment", %"struct.gfx::internal::LineSegment"* %80, i64 0, i32 0, i32 1
  %125 = load float, float* %124, align 4
  %126 = fcmp ogt float %123, %125
  %127 = select i1 %126, float %123, float %125
  %128 = fcmp olt float %123, %125
  %129 = select i1 %128, float %123, float %125
  %130 = fsub float %127, %129
  %131 = fptosi float %130 to i32
  br label %132

132:                                              ; preds = %93, %81, %104, %121, %116, %56
  %133 = phi i32 [ %131, %121 ], [ 0, %116 ], [ 0, %56 ], [ 0, %93 ], [ 0, %104 ], [ 0, %81 ]
  %134 = tail call i64 @_ZN3gfx10RenderText13GetLineOffsetEm(%"class.gfx::RenderText"* %1, i64 %69)
  %135 = trunc i64 %134 to i32
  %136 = load i64, i64* %14, align 4
  %137 = trunc i64 %136 to i32
  %138 = icmp sgt i32 %135, -1
  %139 = select i1 %138, i32 -2147483648, i32 2147483647
  %140 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %137, i32 %135) #17
  %141 = extractvalue { i32, i1 } %140, 1
  %142 = extractvalue { i32, i1 } %140, 0
  %143 = select i1 %141, i32 %139, i32 %142, !prof !41
  %144 = icmp slt i32 %133, 0
  %145 = select i1 %144, i32 -2147483648, i32 2147483647
  %146 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %143, i32 %133) #17
  %147 = extractvalue { i32, i1 } %146, 1
  %148 = extractvalue { i32, i1 } %146, 0
  %149 = select i1 %147, i32 %145, i32 %148, !prof !41
  %150 = icmp slt i32 %149, 0
  br i1 %150, label %182, label %151

151:                                              ; preds = %132
  %152 = load i64, i64* %73, align 8
  %153 = load i64, i64* %75, align 8
  %154 = icmp eq i64 %152, %153
  %155 = inttoptr i64 %153 to %"struct.gfx::internal::LineSegment"*
  %156 = sub i64 %152, %153
  %157 = sdiv exact i64 %156, 24
  br i1 %154, label %177, label %158

158:                                              ; preds = %151
  %159 = sitofp i32 %149 to float
  br label %160

160:                                              ; preds = %158, %173
  %161 = phi i64 [ %175, %173 ], [ 0, %158 ]
  %162 = phi float [ %174, %173 ], [ %159, %158 ]
  %163 = getelementptr inbounds %"struct.gfx::internal::LineSegment", %"struct.gfx::internal::LineSegment"* %155, i64 %161, i32 0, i32 0
  %164 = load float, float* %163, align 4
  %165 = getelementptr inbounds %"struct.gfx::internal::LineSegment", %"struct.gfx::internal::LineSegment"* %155, i64 %161, i32 0, i32 1
  %166 = load float, float* %165, align 4
  %167 = fcmp ogt float %164, %166
  %168 = select i1 %167, float %164, float %166
  %169 = fcmp olt float %164, %166
  %170 = select i1 %169, float %164, float %166
  %171 = fsub float %168, %170
  %172 = fcmp olt float %162, %171
  br i1 %172, label %177, label %173

173:                                              ; preds = %160
  %174 = fsub float %162, %171
  %175 = add nuw i64 %161, 1
  %176 = icmp ult i64 %175, %157
  br i1 %176, label %160, label %177

177:                                              ; preds = %173, %160, %151
  %178 = phi float [ 0.000000e+00, %151 ], [ 0.000000e+00, %173 ], [ %162, %160 ]
  %179 = phi i64 [ %157, %151 ], [ %157, %173 ], [ %161, %160 ]
  %180 = trunc i64 %179 to i32
  %181 = icmp slt i32 %180, 0
  br i1 %181, label %182, label %183

182:                                              ; preds = %132, %177
  tail call void @_ZN3gfx10RenderText18LineSelectionModelEmNS_21VisualCursorDirectionE(%"class.gfx::SelectionModel"* sret %0, %"class.gfx::RenderText"* %1, i64 %69, i32 0)
  br label %325

183:                                              ; preds = %177
  %184 = trunc i64 %157 to i32
  %185 = icmp slt i32 %180, %184
  br i1 %185, label %187, label %186

186:                                              ; preds = %183
  tail call void @_ZN3gfx10RenderText18LineSelectionModelEmNS_21VisualCursorDirectionE(%"class.gfx::SelectionModel"* sret %0, %"class.gfx::RenderText"* %1, i64 %69, i32 1)
  br label %325

187:                                              ; preds = %183
  %188 = shl i64 %179, 32
  %189 = ashr exact i64 %188, 32
  %190 = bitcast %"class.gfx::RenderText"* %1 to %"class.gfx::internal::TextRunList"* (%"class.gfx::RenderText"*)***
  %191 = load %"class.gfx::internal::TextRunList"* (%"class.gfx::RenderText"*)**, %"class.gfx::internal::TextRunList"* (%"class.gfx::RenderText"*)*** %190, align 8
  %192 = getelementptr inbounds %"class.gfx::internal::TextRunList"* (%"class.gfx::RenderText"*)*, %"class.gfx::internal::TextRunList"* (%"class.gfx::RenderText"*)** %191, i64 15
  %193 = load %"class.gfx::internal::TextRunList"* (%"class.gfx::RenderText"*)*, %"class.gfx::internal::TextRunList"* (%"class.gfx::RenderText"*)** %192, align 8
  %194 = tail call %"class.gfx::internal::TextRunList"* %193(%"class.gfx::RenderText"* %1) #17
  %195 = getelementptr inbounds %"struct.gfx::internal::LineSegment", %"struct.gfx::internal::LineSegment"* %155, i64 %189, i32 2
  %196 = load i64, i64* %195, align 8
  %197 = getelementptr inbounds %"class.gfx::internal::TextRunList", %"class.gfx::internal::TextRunList"* %194, i64 0, i32 0, i32 0, i32 0
  %198 = load %"class.std::__1::unique_ptr.214"*, %"class.std::__1::unique_ptr.214"** %197, align 8
  %199 = getelementptr inbounds %"class.std::__1::unique_ptr.214", %"class.std::__1::unique_ptr.214"* %198, i64 %196, i32 0, i32 0, i32 0
  %200 = load %"struct.gfx::internal::TextRunHarfBuzz"*, %"struct.gfx::internal::TextRunHarfBuzz"** %199, align 8
  %201 = getelementptr inbounds %"struct.gfx::internal::LineSegment", %"struct.gfx::internal::LineSegment"* %155, i64 %189, i32 1
  %202 = tail call i64 @_ZNK3gfx8internal15TextRunHarfBuzz21CharRangeToGlyphRangeERKNS_5RangeE(%"struct.gfx::internal::TextRunHarfBuzz"* %200, %"class.gfx::Range"* dereferenceable(8) %201) #17
  %203 = trunc i64 %202 to i32
  %204 = lshr i64 %202, 32
  %205 = trunc i64 %204 to i32
  %206 = icmp ult i32 %203, %205
  %207 = select i1 %206, i32 %203, i32 %205
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %215, label %209

209:                                              ; preds = %187
  %210 = zext i32 %207 to i64
  %211 = getelementptr inbounds %"struct.gfx::internal::TextRunHarfBuzz", %"struct.gfx::internal::TextRunHarfBuzz"* %200, i64 0, i32 2, i32 2, i32 0, i32 0
  %212 = load %struct.SkPoint*, %struct.SkPoint** %211, align 8
  %213 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %212, i64 %210, i32 0
  %214 = load float, float* %213, align 4
  br label %215

215:                                              ; preds = %187, %209
  %216 = phi float [ %214, %209 ], [ 0.000000e+00, %187 ]
  %217 = fadd float %178, %216
  %218 = getelementptr inbounds %"struct.gfx::internal::TextRunHarfBuzz", %"struct.gfx::internal::TextRunHarfBuzz"* %200, i64 0, i32 2, i32 4
  %219 = getelementptr inbounds %"struct.gfx::internal::TextRunHarfBuzz", %"struct.gfx::internal::TextRunHarfBuzz"* %200, i64 0, i32 2, i32 2, i32 0, i32 0
  %220 = getelementptr inbounds %"struct.gfx::internal::TextRunHarfBuzz", %"struct.gfx::internal::TextRunHarfBuzz"* %200, i64 0, i32 2, i32 0
  %221 = getelementptr inbounds %"struct.gfx::internal::TextRunHarfBuzz", %"struct.gfx::internal::TextRunHarfBuzz"* %200, i64 0, i32 2, i32 3, i32 0, i32 0
  %222 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 37
  %223 = bitcast %"class.std::__1::basic_string"* %222 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %224 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %223, i64 0, i32 1, i32 1
  %225 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 37, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %226 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 32, i32 0, i32 0
  %227 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 32, i32 0, i32 1
  %228 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 3
  %229 = bitcast %"class.std::__1::basic_string"* %228 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %230 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %229, i64 0, i32 1, i32 1
  %231 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %232

232:                                              ; preds = %315, %215
  %233 = phi i64 [ 0, %215 ], [ %237, %315 ]
  %234 = load i64, i64* %218, align 8
  %235 = icmp ult i64 %233, %234
  br i1 %235, label %236, label %324

236:                                              ; preds = %232
  %237 = add nuw i64 %233, 1
  %238 = icmp eq i64 %237, %234
  br i1 %238, label %242, label %239

239:                                              ; preds = %236
  %240 = load %struct.SkPoint*, %struct.SkPoint** %219, align 8
  %241 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %240, i64 %237, i32 0
  br label %242

242:                                              ; preds = %236, %239
  %243 = phi float* [ %241, %239 ], [ %220, %236 ]
  %244 = load float, float* %243, align 4
  %245 = load %struct.SkPoint*, %struct.SkPoint** %219, align 8
  %246 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %245, i64 %233, i32 0
  %247 = load float, float* %246, align 4
  %248 = fadd float %244, %247
  %249 = fmul float %248, 5.000000e-01
  %250 = load i32*, i32** %221, align 8
  %251 = getelementptr inbounds i32, i32* %250, i64 %233
  %252 = load i32, i32* %251, align 4
  %253 = zext i32 %252 to i64
  tail call void @_ZNK3gfx10RenderText23EnsureLayoutTextUpdatedEv(%"class.gfx::RenderText"* %1) #17
  %254 = load i8, i8* %224, align 1
  %255 = icmp slt i8 %254, 0
  %256 = load i64, i64* %225, align 8
  %257 = zext i8 %254 to i64
  %258 = select i1 %255, i64 %256, i64 %257
  %259 = icmp eq i64 %258, %253
  br i1 %259, label %295, label %260

260:                                              ; preds = %242
  %261 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %226, align 8
  %262 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %227, align 8
  %263 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %261 to i64
  %264 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %262 to i64
  %265 = sub i64 %264, %263
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %283, label %267

267:                                              ; preds = %260
  %268 = ashr exact i64 %265, 4
  br label %269

269:                                              ; preds = %269, %267
  %270 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %261, %267 ], [ %281, %269 ]
  %271 = phi i64 [ %268, %267 ], [ %280, %269 ]
  %272 = lshr i64 %271, 1
  %273 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %270, i64 1
  %274 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %270, i64 %272, i32 1
  %275 = load i64, i64* %274, align 8
  %276 = icmp ult i64 %275, %253
  %277 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %273, i64 %272
  %278 = xor i64 %272, -1
  %279 = add i64 %271, %278
  %280 = select i1 %276, i64 %279, i64 %272
  %281 = select i1 %276, %"struct.gfx::internal::TextToDisplayIndex"* %277, %"struct.gfx::internal::TextToDisplayIndex"* %270
  %282 = icmp eq i64 %280, 0
  br i1 %282, label %283, label %269

283:                                              ; preds = %269, %260
  %284 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %261, %260 ], [ %281, %269 ]
  %285 = icmp eq %"struct.gfx::internal::TextToDisplayIndex"* %284, %262
  br i1 %285, label %290, label %286

286:                                              ; preds = %283
  %287 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %284, i64 0, i32 1
  %288 = load i64, i64* %287, align 8
  %289 = icmp eq i64 %288, %253
  br i1 %289, label %292, label %290

290:                                              ; preds = %286, %283
  %291 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %284, i64 -1
  br label %292

292:                                              ; preds = %290, %286
  %293 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %291, %290 ], [ %284, %286 ]
  %294 = icmp eq %"struct.gfx::internal::TextToDisplayIndex"* %262, %293
  br i1 %294, label %295, label %302

295:                                              ; preds = %292, %242
  %296 = load i8, i8* %230, align 1
  %297 = icmp slt i8 %296, 0
  br i1 %297, label %298, label %300

298:                                              ; preds = %295
  %299 = load i64, i64* %231, align 8
  br label %305

300:                                              ; preds = %295
  %301 = zext i8 %296 to i64
  br label %305

302:                                              ; preds = %292
  %303 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %293, i64 0, i32 0
  %304 = load i64, i64* %303, align 8
  br label %305

305:                                              ; preds = %298, %300, %302
  %306 = phi i64 [ %304, %302 ], [ %299, %298 ], [ %301, %300 ]
  %307 = fcmp olt float %217, %249
  br i1 %307, label %308, label %315

308:                                              ; preds = %305
  %309 = getelementptr inbounds %"struct.gfx::internal::TextRunHarfBuzz", %"struct.gfx::internal::TextRunHarfBuzz"* %200, i64 0, i32 1, i32 11
  %310 = load i8, i8* %309, align 8, !range !2
  %311 = icmp eq i8 %310, 0
  br i1 %311, label %314, label %312

312:                                              ; preds = %308
  %313 = tail call i64 @_ZNK3gfx10RenderText23IndexOfAdjacentGraphemeEmNS_22LogicalCursorDirectionE(%"class.gfx::RenderText"* %1, i64 %306, i32 1)
  tail call void @_ZN3gfx14SelectionModelC1EmNS_22LogicalCursorDirectionE(%"class.gfx::SelectionModel"* %0, i64 %313, i32 0) #17
  br label %325

314:                                              ; preds = %308
  tail call void @_ZN3gfx14SelectionModelC1EmNS_22LogicalCursorDirectionE(%"class.gfx::SelectionModel"* %0, i64 %306, i32 1) #17
  br label %325

315:                                              ; preds = %305
  %316 = fcmp olt float %217, %244
  br i1 %316, label %317, label %232

317:                                              ; preds = %315
  %318 = getelementptr inbounds %"struct.gfx::internal::TextRunHarfBuzz", %"struct.gfx::internal::TextRunHarfBuzz"* %200, i64 0, i32 1, i32 11
  %319 = load i8, i8* %318, align 8, !range !2
  %320 = icmp eq i8 %319, 0
  br i1 %320, label %322, label %321

321:                                              ; preds = %317
  tail call void @_ZN3gfx14SelectionModelC1EmNS_22LogicalCursorDirectionE(%"class.gfx::SelectionModel"* %0, i64 %306, i32 1) #17
  br label %325

322:                                              ; preds = %317
  %323 = tail call i64 @_ZNK3gfx10RenderText23IndexOfAdjacentGraphemeEmNS_22LogicalCursorDirectionE(%"class.gfx::RenderText"* %1, i64 %306, i32 1)
  tail call void @_ZN3gfx14SelectionModelC1EmNS_22LogicalCursorDirectionE(%"class.gfx::SelectionModel"* %0, i64 %323, i32 0) #17
  br label %325

324:                                              ; preds = %232
  tail call void @_ZN3gfx10RenderText18LineSelectionModelEmNS_21VisualCursorDirectionE(%"class.gfx::SelectionModel"* sret %0, %"class.gfx::RenderText"* %1, i64 %69, i32 1)
  br label %325

325:                                              ; preds = %321, %322, %312, %314, %324, %186, %182
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gfx10RenderText11SelectRangeERKNS_5RangeEb(%"class.gfx::RenderText"*, %"class.gfx::Range"* nocapture readonly dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.gfx::Range"*
  %7 = alloca %"class.gfx::SelectionModel", align 8
  %8 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3
  %9 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  br label %18

16:                                               ; preds = %3
  %17 = zext i8 %11 to i64
  br label %18

18:                                               ; preds = %13, %16
  %19 = phi i64 [ %15, %13 ], [ %17, %16 ]
  %20 = trunc i64 %19 to i32
  %21 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #17
  %22 = bitcast i64* %5 to i32*
  %23 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %6, i64 0, i32 1
  %24 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %1, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp ugt i32 %25, %20
  %27 = select i1 %26, i32 %20, i32 %25
  %28 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %1, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp ugt i32 %29, %20
  %31 = select i1 %30, i32 %20, i32 %29
  store i32 %27, i32* %22, align 8
  store i32 %31, i32* %23, align 4
  %32 = zext i32 %27 to i64
  %33 = icmp eq i32 %27, 0
  br i1 %33, label %59, label %34

34:                                               ; preds = %18
  br i1 %12, label %35, label %38

35:                                               ; preds = %34
  %36 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  br label %40

38:                                               ; preds = %34
  %39 = zext i8 %11 to i64
  br label %40

40:                                               ; preds = %38, %35
  %41 = phi i64 [ %37, %35 ], [ %39, %38 ]
  %42 = icmp eq i64 %41, %32
  br i1 %42, label %59, label %43

43:                                               ; preds = %40
  br i1 %12, label %44, label %47

44:                                               ; preds = %43
  %45 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  br label %49

47:                                               ; preds = %43
  %48 = zext i8 %11 to i64
  br label %49

49:                                               ; preds = %47, %44
  %50 = phi i64 [ %46, %44 ], [ %48, %47 ]
  %51 = icmp ugt i64 %50, %32
  br i1 %51, label %52, label %116

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 36
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, -1
  %56 = icmp ult i64 %55, %32
  br i1 %56, label %116, label %57

57:                                               ; preds = %52
  %58 = tail call zeroext i1 @_ZN3gfx21IsValidCodePointIndexERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEm(%"class.std::__1::basic_string"* dereferenceable(24) %8, i64 %32) #17
  br i1 %58, label %59, label %116

59:                                               ; preds = %18, %40, %57
  %60 = zext i32 %31 to i64
  %61 = icmp eq i32 %31, 0
  br i1 %61, label %89, label %62

62:                                               ; preds = %59
  %63 = load i8, i8* %10, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  br label %70

68:                                               ; preds = %62
  %69 = zext i8 %63 to i64
  br label %70

70:                                               ; preds = %68, %65
  %71 = phi i64 [ %67, %65 ], [ %69, %68 ]
  %72 = icmp eq i64 %71, %60
  br i1 %72, label %89, label %73

73:                                               ; preds = %70
  br i1 %64, label %74, label %77

74:                                               ; preds = %73
  %75 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  br label %79

77:                                               ; preds = %73
  %78 = zext i8 %63 to i64
  br label %79

79:                                               ; preds = %77, %74
  %80 = phi i64 [ %76, %74 ], [ %78, %77 ]
  %81 = icmp ugt i64 %80, %60
  br i1 %81, label %82, label %116

82:                                               ; preds = %79
  %83 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 36
  %84 = load i64, i64* %83, align 8
  %85 = add i64 %84, -1
  %86 = icmp ult i64 %85, %60
  br i1 %86, label %116, label %87

87:                                               ; preds = %82
  %88 = tail call zeroext i1 @_ZN3gfx21IsValidCodePointIndexERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEm(%"class.std::__1::basic_string"* dereferenceable(24) %8, i64 %60) #17
  br i1 %88, label %89, label %116

89:                                               ; preds = %59, %70, %87
  br i1 %2, label %90, label %111

90:                                               ; preds = %89
  %91 = icmp uge i32 %27, %31
  %92 = zext i1 %91 to i32
  %93 = bitcast %"class.gfx::SelectionModel"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %93) #17
  call void @_ZN3gfx14SelectionModelC1ERKNS_5RangeENS_22LogicalCursorDirectionE(%"class.gfx::SelectionModel"* nonnull %7, %"class.gfx::Range"* nonnull dereferenceable(8) %6, i32 %92) #17
  %94 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11
  %95 = bitcast %"class.gfx::SelectionModel"* %7 to i64*
  %96 = bitcast %"class.gfx::SelectionModel"* %94 to i64*
  %97 = load i64, i64* %95, align 8
  store i64 %97, i64* %96, align 8
  %98 = icmp eq %"class.gfx::SelectionModel"* %94, %7
  br i1 %98, label %105, label %99

99:                                               ; preds = %90
  %100 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11, i32 1
  %101 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %7, i64 0, i32 1, i32 0, i32 0
  %102 = load %"class.gfx::Range"*, %"class.gfx::Range"** %101, align 8
  %103 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %7, i64 0, i32 1, i32 0, i32 1
  %104 = load %"class.gfx::Range"*, %"class.gfx::Range"** %103, align 8
  call void @_ZNSt3__16vectorIN3gfx5RangeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.157"* %100, %"class.gfx::Range"* %102, %"class.gfx::Range"* %104) #17
  br label %105

105:                                              ; preds = %90, %99
  %106 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %7, i64 0, i32 2
  %107 = load i32, i32* %106, align 8
  %108 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11, i32 2
  store i32 %107, i32* %108, align 8
  %109 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 55
  store i8 0, i8* %109, align 8
  %110 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 14
  store i8 1, i8* %110, align 1
  call void @_ZN3gfx14SelectionModelD1Ev(%"class.gfx::SelectionModel"* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %93) #17
  br label %116

111:                                              ; preds = %89
  %112 = load i64, i64* %5, align 8
  %113 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113)
  %114 = bitcast i64* %4 to %"class.gfx::Range"*
  store i64 %112, i64* %4, align 8
  %115 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11
  call void @_ZN3gfx14SelectionModel21AddSecondarySelectionERKNS_5RangeE(%"class.gfx::SelectionModel"* %115, %"class.gfx::Range"* nonnull dereferenceable(8) %114) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113)
  br label %116

116:                                              ; preds = %82, %79, %52, %49, %105, %111, %57, %87
  %117 = phi i1 [ false, %87 ], [ false, %57 ], [ true, %111 ], [ true, %105 ], [ false, %49 ], [ false, %52 ], [ false, %79 ], [ false, %82 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #17
  ret i1 %117
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3gfx10RenderText19IsValidLogicalIndexEm(%"class.gfx::RenderText"*, i64) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %34, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3
  %6 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  br label %15

13:                                               ; preds = %4
  %14 = zext i8 %8 to i64
  br label %15

15:                                               ; preds = %10, %13
  %16 = phi i64 [ %12, %10 ], [ %14, %13 ]
  %17 = icmp eq i64 %16, %1
  br i1 %17, label %34, label %18

18:                                               ; preds = %15
  br i1 %9, label %19, label %22

19:                                               ; preds = %18
  %20 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  br label %24

22:                                               ; preds = %18
  %23 = zext i8 %8 to i64
  br label %24

24:                                               ; preds = %19, %22
  %25 = phi i64 [ %21, %19 ], [ %23, %22 ]
  %26 = icmp ugt i64 %25, %1
  br i1 %26, label %27, label %34

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 36
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, -1
  %31 = icmp ult i64 %30, %1
  br i1 %31, label %34, label %32

32:                                               ; preds = %27
  %33 = tail call zeroext i1 @_ZN3gfx21IsValidCodePointIndexERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEm(%"class.std::__1::basic_string"* dereferenceable(24) %5, i64 %1) #17
  br label %34

34:                                               ; preds = %27, %24, %32, %15, %2
  %35 = phi i1 [ true, %15 ], [ true, %2 ], [ false, %24 ], [ %33, %32 ], [ false, %27 ]
  ret i1 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText21AddSecondarySelectionENS_5RangeE(%"class.gfx::RenderText"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.gfx::Range"*
  store i64 %1, i64* %3, align 8
  %5 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11
  call void @_ZN3gfx14SelectionModel21AddSecondarySelectionERKNS_5RangeE(%"class.gfx::SelectionModel"* %5, %"class.gfx::Range"* nonnull dereferenceable(8) %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gfx10RenderText18IsPointInSelectionERKNS_5PointE(%"class.gfx::RenderText"*, %"class.gfx::Point"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::SelectionModel", align 8
  %4 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %43, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.gfx::SelectionModel"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 40, i1 false)
  call void @_ZN3gfx10RenderText18FindCursorPositionERKNS_5PointES3_(%"class.gfx::SelectionModel"* nonnull sret %3, %"class.gfx::RenderText"* %0, %"class.gfx::Point"* dereferenceable(8) %1, %"class.gfx::Point"* dereferenceable(8) undef)
  %11 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %3, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %3, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %15, i32 -1, i32 1
  %17 = add i32 %16, %12
  %18 = and i32 %12, %17
  %19 = icmp eq i32 %18, -1
  br i1 %19, label %41, label %20

20:                                               ; preds = %9
  %21 = load i32, i32* %4, align 4
  %22 = load i32, i32* %6, align 4
  %23 = and i32 %22, %21
  %24 = icmp eq i32 %23, -1
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = icmp ult i32 %12, %17
  %27 = select i1 %26, i32 %12, i32 %17
  %28 = icmp ult i32 %21, %22
  %29 = select i1 %28, i32 %21, i32 %22
  %30 = icmp ult i32 %27, %29
  br i1 %30, label %41, label %31

31:                                               ; preds = %25
  %32 = icmp ugt i32 %12, %17
  %33 = select i1 %32, i32 %12, i32 %17
  %34 = icmp ugt i32 %21, %22
  %35 = select i1 %34, i32 %21, i32 %22
  %36 = icmp ugt i32 %33, %35
  br i1 %36, label %41, label %37

37:                                               ; preds = %31
  %38 = icmp ne i32 %33, %35
  %39 = icmp ne i32 %21, %22
  %40 = or i1 %39, %38
  br label %41

41:                                               ; preds = %37, %9, %20, %25, %31
  %42 = phi i1 [ false, %31 ], [ false, %25 ], [ false, %20 ], [ false, %9 ], [ %40, %37 ]
  call void @_ZN3gfx14SelectionModelD1Ev(%"class.gfx::SelectionModel"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #17
  br label %43

43:                                               ; preds = %2, %41
  %44 = phi i1 [ %42, %41 ], [ false, %2 ]
  ret i1 %44
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3gfx10RenderText18RangeContainsCaretERKNS_5RangeEmNS_22LogicalCursorDirectionE(%"class.gfx::Range"* nocapture readonly dereferenceable(8), i64, i32) local_unnamed_addr #7 align 2 {
  %4 = icmp eq i32 %2, 0
  %5 = select i1 %4, i64 4294967295, i64 1
  %6 = add i64 %5, %1
  %7 = trunc i64 %1 to i32
  %8 = trunc i64 %6 to i32
  %9 = and i64 %6, %1
  %10 = trunc i64 %9 to i32
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %37, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, %14
  %18 = icmp eq i32 %17, -1
  br i1 %18, label %37, label %19

19:                                               ; preds = %12
  %20 = icmp ult i32 %7, %8
  %21 = select i1 %20, i32 %7, i32 %8
  %22 = icmp ult i32 %14, %16
  %23 = select i1 %22, i32 %14, i32 %16
  %24 = icmp ult i32 %21, %23
  br i1 %24, label %37, label %25

25:                                               ; preds = %19
  %26 = icmp ugt i32 %7, %8
  %27 = select i1 %26, i32 %7, i32 %8
  %28 = icmp ugt i32 %14, %16
  %29 = select i1 %28, i32 %14, i32 %16
  %30 = icmp ugt i32 %27, %29
  br i1 %30, label %37, label %31

31:                                               ; preds = %25
  %32 = icmp eq i32 %27, %29
  br i1 %32, label %33, label %37

33:                                               ; preds = %31
  %34 = icmp ne i32 %7, %8
  %35 = icmp eq i32 %14, %16
  %36 = xor i1 %34, %35
  br label %37

37:                                               ; preds = %3, %12, %19, %25, %31, %33
  %38 = phi i1 [ false, %25 ], [ true, %31 ], [ %36, %33 ], [ false, %19 ], [ false, %12 ], [ false, %3 ]
  ret i1 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText14ClearSelectionEv(%"class.gfx::RenderText"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.gfx::SelectionModel", align 8
  %3 = bitcast %"class.gfx::SelectionModel"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #17
  %4 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11
  %8 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11, i32 2
  %9 = load i32, i32* %8, align 8
  call void @_ZN3gfx14SelectionModelC1EmNS_22LogicalCursorDirectionE(%"class.gfx::SelectionModel"* nonnull %2, i64 %6, i32 %9) #17
  %10 = bitcast %"class.gfx::SelectionModel"* %2 to i64*
  %11 = bitcast %"class.gfx::SelectionModel"* %7 to i64*
  %12 = load i64, i64* %10, align 8
  store i64 %12, i64* %11, align 8
  %13 = icmp eq %"class.gfx::SelectionModel"* %7, %2
  br i1 %13, label %20, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11, i32 1
  %16 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %2, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.gfx::Range"*, %"class.gfx::Range"** %16, align 8
  %18 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %2, i64 0, i32 1, i32 0, i32 1
  %19 = load %"class.gfx::Range"*, %"class.gfx::Range"** %18, align 8
  call void @_ZNSt3__16vectorIN3gfx5RangeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.157"* %15, %"class.gfx::Range"* %17, %"class.gfx::Range"* %19) #17
  br label %20

20:                                               ; preds = %1, %14
  %21 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %2, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %8, align 8
  %23 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 55
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 14
  store i8 1, i8* %24, align 1
  call void @_ZN3gfx14SelectionModelD1Ev(%"class.gfx::SelectionModel"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText9SelectAllEb(%"class.gfx::RenderText"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Range", align 4
  %4 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %2
  %13 = zext i8 %7 to i64
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %11, %9 ], [ %13, %12 ]
  %16 = bitcast %"class.gfx::Range"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %3, i64 0, i32 0
  %18 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %3, i64 0, i32 1
  %19 = trunc i64 %15 to i32
  %20 = select i1 %1, i32 %19, i32 0
  %21 = select i1 %1, i32 0, i32 %19
  store i32 %20, i32* %17, align 4
  store i32 %21, i32* %18, align 4
  %22 = call zeroext i1 @_ZN3gfx10RenderText11SelectRangeERKNS_5RangeEb(%"class.gfx::RenderText"* %0, %"class.gfx::Range"* nonnull dereferenceable(8) %3, i1 zeroext true)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText10SelectWordEv(%"class.gfx::RenderText"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %"class.gfx::Range"*
  %4 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11, i32 0
  %6 = tail call i64 @_ZNK3gfx10RenderText25ExpandRangeToWordBoundaryERKNS_5RangeE(%"class.gfx::RenderText"* %0, %"class.gfx::Range"* dereferenceable(8) %5)
  store i64 %6, i64* %2, align 8
  %7 = call zeroext i1 @_ZN3gfx10RenderText11SelectRangeERKNS_5RangeEb(%"class.gfx::RenderText"* %0, %"class.gfx::Range"* nonnull dereferenceable(8) %3, i1 zeroext true)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK3gfx10RenderText25ExpandRangeToWordBoundaryERKNS_5RangeE(%"class.gfx::RenderText"*, %"class.gfx::Range"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::i18n::BreakIterator", align 8
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3
  %6 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  br label %15

13:                                               ; preds = %2
  %14 = zext i8 %8 to i64
  br label %15

15:                                               ; preds = %10, %13
  %16 = phi i64 [ %12, %10 ], [ %14, %13 ]
  %17 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 33
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %28, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %1, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %1, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp ugt i32 %22, %24
  %26 = select i1 %25, i64 0, i64 %16
  %27 = select i1 %25, i64 %16, i64 0
  br label %107

28:                                               ; preds = %15
  %29 = bitcast %"class.base::i18n::BreakIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %29) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 72, i1 false)
  %30 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #17
  %31 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i16*, i16** %32, align 8
  %34 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %35 = select i1 %9, i16* %33, i16* %34
  store i16* %35, i16** %31, align 8
  %36 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %37 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = zext i8 %8 to i64
  %40 = select i1 %9, i64 %38, i64 %39
  store i64 %40, i64* %36, align 8
  call void @_ZN4base4i18n13BreakIteratorC1ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS1_9BreakTypeE(%"class.base::i18n::BreakIterator"* nonnull %3, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %4, i32 0) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #17
  %41 = call zeroext i1 @_ZN4base4i18n13BreakIterator4InitEv(%"class.base::i18n::BreakIterator"* nonnull %3) #17
  br i1 %41, label %46, label %42

42:                                               ; preds = %28
  %43 = bitcast %"class.gfx::Range"* %1 to i64*
  %44 = load i64, i64* %43, align 4
  %45 = lshr i64 %44, 32
  br label %104

46:                                               ; preds = %28
  %47 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %1, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %1, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = icmp ult i32 %48, %50
  %52 = select i1 %51, i32 %48, i32 %50
  %53 = zext i32 %52 to i64
  %54 = icmp eq i64 %16, %53
  %55 = icmp ne i32 %52, 0
  %56 = and i1 %55, %54
  %57 = zext i1 %56 to i64
  %58 = sub nsw i64 %53, %57
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %72, label %60

60:                                               ; preds = %46, %65
  %61 = phi i64 [ %66, %65 ], [ %58, %46 ]
  %62 = call zeroext i1 @_ZNK4base4i18n13BreakIterator13IsStartOfWordEm(%"class.base::i18n::BreakIterator"* nonnull %3, i64 %61) #17
  br i1 %62, label %68, label %63

63:                                               ; preds = %60
  %64 = call zeroext i1 @_ZNK4base4i18n13BreakIterator11IsEndOfWordEm(%"class.base::i18n::BreakIterator"* nonnull %3, i64 %61) #17
  br i1 %64, label %68, label %65

65:                                               ; preds = %63
  %66 = add i64 %61, -1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %60

68:                                               ; preds = %65, %60, %63
  %69 = phi i64 [ %61, %63 ], [ %61, %60 ], [ 0, %65 ]
  %70 = load i32, i32* %47, align 4
  %71 = load i32, i32* %49, align 4
  br label %72

72:                                               ; preds = %68, %46
  %73 = phi i32 [ %50, %46 ], [ %71, %68 ]
  %74 = phi i32 [ %48, %46 ], [ %70, %68 ]
  %75 = phi i64 [ 0, %46 ], [ %69, %68 ]
  %76 = icmp ugt i32 %74, %73
  %77 = select i1 %76, i32 %74, i32 %73
  %78 = zext i32 %77 to i64
  %79 = icmp eq i64 %75, %78
  %80 = icmp ne i64 %16, %78
  %81 = and i1 %80, %79
  %82 = zext i1 %81 to i64
  %83 = add nuw nsw i64 %82, %78
  %84 = icmp ult i64 %83, %16
  br i1 %84, label %85, label %97

85:                                               ; preds = %72, %90
  %86 = phi i64 [ %91, %90 ], [ %83, %72 ]
  %87 = call zeroext i1 @_ZNK4base4i18n13BreakIterator11IsEndOfWordEm(%"class.base::i18n::BreakIterator"* nonnull %3, i64 %86) #17
  br i1 %87, label %93, label %88

88:                                               ; preds = %85
  %89 = call zeroext i1 @_ZNK4base4i18n13BreakIterator13IsStartOfWordEm(%"class.base::i18n::BreakIterator"* nonnull %3, i64 %86) #17
  br i1 %89, label %93, label %90

90:                                               ; preds = %88
  %91 = add nuw i64 %86, 1
  %92 = icmp ult i64 %91, %16
  br i1 %92, label %85, label %93

93:                                               ; preds = %85, %88, %90
  %94 = phi i64 [ %91, %90 ], [ %86, %88 ], [ %86, %85 ]
  %95 = load i32, i32* %47, align 4
  %96 = load i32, i32* %49, align 4
  br label %97

97:                                               ; preds = %93, %72
  %98 = phi i32 [ %73, %72 ], [ %96, %93 ]
  %99 = phi i32 [ %74, %72 ], [ %95, %93 ]
  %100 = phi i64 [ %83, %72 ], [ %94, %93 ]
  %101 = icmp ugt i32 %99, %98
  %102 = select i1 %101, i64 %75, i64 %100
  %103 = select i1 %101, i64 %100, i64 %75
  br label %104

104:                                              ; preds = %97, %42
  %105 = phi i64 [ %45, %42 ], [ %102, %97 ]
  %106 = phi i64 [ %44, %42 ], [ %103, %97 ]
  call void @_ZN4base4i18n13BreakIteratorD1Ev(%"class.base::i18n::BreakIterator"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %29) #17
  br label %107

107:                                              ; preds = %20, %104
  %108 = phi i64 [ %105, %104 ], [ %26, %20 ]
  %109 = phi i64 [ %106, %104 ], [ %27, %20 ]
  %110 = shl i64 %108, 32
  %111 = and i64 %109, 4294967295
  %112 = or i64 %111, %110
  ret i64 %112
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText19SetCompositionRangeERKNS_5RangeE(%"class.gfx::RenderText"*, %"class.gfx::Range"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, -1
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %44, label %11

11:                                               ; preds = %7, %2
  %12 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  br label %22

20:                                               ; preds = %11
  %21 = zext i8 %15 to i64
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i64 [ %19, %17 ], [ %21, %20 ]
  %24 = trunc i64 %23 to i32
  %25 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %1, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = and i32 %5, %26
  %28 = icmp eq i32 %27, -1
  br i1 %28, label %39, label %29

29:                                               ; preds = %22
  %30 = icmp ugt i32 %5, %26
  %31 = select i1 %30, i32 %5, i32 %26
  %32 = icmp ugt i32 %31, %24
  br i1 %32, label %39, label %33

33:                                               ; preds = %29
  %34 = icmp eq i32 %31, %24
  br i1 %34, label %35, label %44

35:                                               ; preds = %33
  %36 = icmp ne i32 %5, %26
  %37 = icmp eq i32 %24, 0
  %38 = xor i1 %37, %36
  br i1 %38, label %44, label %39

39:                                               ; preds = %22, %29, %35
  %40 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 811, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.1, i64 0, i64 0)) #17
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #17
  %42 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %1, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  br label %44

44:                                               ; preds = %7, %33, %35, %39
  %45 = phi i32 [ -1, %7 ], [ %26, %33 ], [ %26, %35 ], [ %43, %39 ]
  %46 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 21, i32 1
  store i32 %45, i32* %46, align 4
  %47 = load i32, i32* %4, align 4
  %48 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 21, i32 0
  store i32 %47, i32* %48, align 4
  %49 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*, i1)***
  %50 = load void (%"class.gfx::RenderText"*, i1)**, void (%"class.gfx::RenderText"*, i1)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %50, i64 11
  %52 = load void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %51, align 8
  call void %52(%"class.gfx::RenderText"* %0, i1 zeroext false) #17
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText8SetColorEj(%"class.gfx::RenderText"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 22
  %4 = bitcast %"class.gfx::BreakList"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 22, i32 0, i32 0, i32 1
  %7 = bitcast %"struct.std::__1::pair"** %6 to i64*
  store i64 %5, i64* %7, align 8
  %8 = inttoptr i64 %5 to %"struct.std::__1::pair"*
  %9 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 22, i32 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %11 = icmp ugt %"struct.std::__1::pair"* %10, %8
  br i1 %11, label %12, label %17

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %8, i64 0, i32 0
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %8, i64 0, i32 1
  store i32 %1, i32* %14, align 8
  %15 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %8, i64 1
  %16 = ptrtoint %"struct.std::__1::pair"* %15 to i64
  store i64 %16, i64* %7, align 8
  br label %45

17:                                               ; preds = %2
  %18 = ptrtoint %"struct.std::__1::pair"* %10 to i64
  %19 = bitcast %"struct.std::__1::pair"** %9 to i64*
  %20 = sub i64 %18, %5
  %21 = ashr exact i64 %20, 4
  %22 = icmp ult i64 %21, 576460752303423487
  br i1 %22, label %23, label %29

23:                                               ; preds = %17
  %24 = ashr exact i64 %20, 3
  %25 = icmp eq i64 %20, 0
  %26 = select i1 %25, i64 1, i64 %24
  %27 = icmp ugt i64 %26, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %23
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %23, %17
  %30 = phi i64 [ %26, %23 ], [ 1152921504606846975, %17 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"struct.std::__1::pair"*
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 %30
  %35 = ptrtoint %"struct.std::__1::pair"* %34 to i64
  %36 = bitcast i8* %32 to i64*
  store i64 0, i64* %36, align 8
  %37 = getelementptr inbounds i8, i8* %32, i64 8
  %38 = bitcast i8* %37 to i32*
  store i32 %1, i32* %38, align 8
  %39 = getelementptr inbounds i8, i8* %32, i64 16
  %40 = ptrtoint i8* %39 to i64
  %41 = ptrtoint i8* %32 to i64
  store i64 %41, i64* %4, align 8
  store i64 %40, i64* %7, align 8
  store i64 %35, i64* %19, align 8
  %42 = icmp eq i64 %5, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %29
  %44 = inttoptr i64 %5 to i8*
  tail call void @_ZdlPv(i8* %44) #18
  br label %45

45:                                               ; preds = %12, %29, %43
  %46 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*, i1)***
  %47 = load void (%"class.gfx::RenderText"*, i1)**, void (%"class.gfx::RenderText"*, i1)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %47, i64 11
  %49 = load void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %48, align 8
  tail call void %49(%"class.gfx::RenderText"* %0, i1 zeroext false) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText10ApplyColorEjRKNS_5RangeE(%"class.gfx::RenderText"*, i32, %"class.gfx::Range"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 22
  tail call void @_ZN3gfx9BreakListIjE10ApplyValueEjRKNS_5RangeE(%"class.gfx::BreakList"* %4, i32 %1, %"class.gfx::Range"* dereferenceable(8) %2)
  %5 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*, i1)***
  %6 = load void (%"class.gfx::RenderText"*, i1)**, void (%"class.gfx::RenderText"*, i1)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %6, i64 11
  %8 = load void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %7, align 8
  tail call void %8(%"class.gfx::RenderText"* %0, i1 zeroext false) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gfx9BreakListIjE10ApplyValueEjRKNS_5RangeE(%"class.gfx::BreakList"*, i32, %"class.gfx::Range"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::pair", align 8
  %5 = alloca %"struct.std::__1::pair", align 8
  %6 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %2, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %2, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %7, %9
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %148, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %2, i64 0, i32 1
  %14 = icmp eq i32 %7, %9
  br i1 %14, label %148, label %15

15:                                               ; preds = %12
  %16 = zext i32 %7 to i64
  %17 = getelementptr inbounds %"class.gfx::BreakList", %"class.gfx::BreakList"* %0, i64 0, i32 0, i32 0, i32 1
  %18 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %17, align 8
  %19 = getelementptr inbounds %"class.gfx::BreakList", %"class.gfx::BreakList"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %19, align 8
  br label %21

21:                                               ; preds = %28, %15
  %22 = phi %"struct.std::__1::pair"* [ %18, %15 ], [ %23, %28 ]
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 -1
  %24 = icmp eq %"struct.std::__1::pair"* %23, %20
  br i1 %24, label %25, label %28

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 0, i32 0
  %27 = load i64, i64* %26, align 8
  br label %32

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = icmp ugt i64 %30, %16
  br i1 %31, label %21, label %32

32:                                               ; preds = %28, %25
  %33 = phi i64 [ %27, %25 ], [ %30, %28 ]
  %34 = phi %"struct.std::__1::pair"* [ %20, %25 ], [ %23, %28 ]
  %35 = icmp ult i64 %33, %16
  %36 = zext i1 %35 to i64
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 %36
  %38 = zext i32 %9 to i64
  br label %39

39:                                               ; preds = %43, %32
  %40 = phi %"struct.std::__1::pair"* [ %18, %32 ], [ %41, %43 ]
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %40, i64 -1
  %42 = icmp eq %"struct.std::__1::pair"* %41, %20
  br i1 %42, label %47, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %41, i64 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = icmp ugt i64 %45, %38
  br i1 %46, label %39, label %47

47:                                               ; preds = %39, %43
  %48 = phi %"struct.std::__1::pair"* [ %20, %39 ], [ %41, %43 ]
  %49 = ptrtoint %"struct.std::__1::pair"* %48 to i64
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %48, i64 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds %"class.gfx::BreakList", %"class.gfx::BreakList"* %0, i64 0, i32 0
  %53 = icmp eq %"struct.std::__1::pair"* %37, %18
  br i1 %53, label %119, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %48, i64 1
  %56 = icmp eq %"struct.std::__1::pair"* %37, %55
  br i1 %56, label %119, label %57

57:                                               ; preds = %54
  %58 = icmp eq %"struct.std::__1::pair"* %18, %55
  br i1 %58, label %116, label %59

59:                                               ; preds = %57
  %60 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 -2, i32 0
  %61 = ptrtoint i64* %60 to i64
  %62 = sub i64 %61, %49
  %63 = lshr i64 %62, 4
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %81, label %67

67:                                               ; preds = %59, %67
  %68 = phi %"struct.std::__1::pair"* [ %78, %67 ], [ %37, %59 ]
  %69 = phi %"struct.std::__1::pair"* [ %77, %67 ], [ %55, %59 ]
  %70 = phi i64 [ %79, %67 ], [ %65, %59 ]
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %68, i64 0, i32 0
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %68, i64 0, i32 1
  store i32 %75, i32* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 1
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %68, i64 1
  %79 = add i64 %70, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %67, !llvm.loop !48

81:                                               ; preds = %67, %59
  %82 = phi %"struct.std::__1::pair"* [ undef, %59 ], [ %78, %67 ]
  %83 = phi %"struct.std::__1::pair"* [ %37, %59 ], [ %78, %67 ]
  %84 = phi %"struct.std::__1::pair"* [ %55, %59 ], [ %77, %67 ]
  %85 = icmp ult i64 %62, 48
  br i1 %85, label %116, label %86

86:                                               ; preds = %81, %86
  %87 = phi %"struct.std::__1::pair"* [ %114, %86 ], [ %83, %81 ]
  %88 = phi %"struct.std::__1::pair"* [ %113, %86 ], [ %84, %81 ]
  %89 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 0, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 0, i32 0
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 0, i32 1
  store i32 %93, i32* %94, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 1, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 1, i32 0
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 1, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 1, i32 1
  store i32 %99, i32* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 2, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 2, i32 0
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 2, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 2, i32 1
  store i32 %105, i32* %106, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 3, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 3, i32 0
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 3, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 3, i32 1
  store i32 %111, i32* %112, align 8
  %113 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 4
  %114 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 4
  %115 = icmp eq %"struct.std::__1::pair"* %113, %18
  br i1 %115, label %116, label %86

116:                                              ; preds = %81, %86, %57
  %117 = phi %"struct.std::__1::pair"* [ %37, %57 ], [ %82, %81 ], [ %114, %86 ]
  store %"struct.std::__1::pair"* %117, %"struct.std::__1::pair"** %17, align 8
  %118 = load i32, i32* %6, align 4
  br label %119

119:                                              ; preds = %116, %54, %47
  %120 = phi i32 [ %118, %116 ], [ %7, %54 ], [ %7, %47 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %127, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 -1
  %124 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %123, i64 0, i32 1
  %125 = load i32, i32* %124, align 8
  %126 = icmp eq i32 %125, %1
  br i1 %126, label %134, label %127

127:                                              ; preds = %119, %122
  %128 = bitcast %"struct.std::__1::pair"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %128) #17
  %129 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 0
  %130 = zext i32 %120 to i64
  store i64 %130, i64* %129, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1
  store i32 %1, i32* %131, align 8
  %132 = call %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairImjEENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EEOS2_(%"class.std::__1::vector.84"* %52, %"struct.std::__1::pair"* %37, %"struct.std::__1::pair"* nonnull dereferenceable(16) %4)
  %133 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %132, i64 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %128) #17
  br label %134

134:                                              ; preds = %122, %127
  %135 = phi %"struct.std::__1::pair"* [ %133, %127 ], [ %37, %122 ]
  %136 = icmp eq i32 %51, %1
  br i1 %136, label %148, label %137

137:                                              ; preds = %134
  %138 = load i32, i32* %13, align 4
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds %"class.gfx::BreakList", %"class.gfx::BreakList"* %0, i64 0, i32 1
  %141 = load i64, i64* %140, align 8
  %142 = icmp eq i64 %141, %139
  br i1 %142, label %148, label %143

143:                                              ; preds = %137
  %144 = bitcast %"struct.std::__1::pair"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %144) #17
  %145 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 0, i32 0
  store i64 %139, i64* %145, align 8
  %146 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 0, i32 1
  store i32 %51, i32* %146, align 8
  %147 = call %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairImjEENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EEOS2_(%"class.std::__1::vector.84"* %52, %"struct.std::__1::pair"* %135, %"struct.std::__1::pair"* nonnull dereferenceable(16) %5)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %144) #17
  br label %148

148:                                              ; preds = %3, %143, %134, %137, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText16SetBaselineStyleENS_13BaselineStyleE(%"class.gfx::RenderText"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 23
  %4 = bitcast %"class.gfx::BreakList.91"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 23, i32 0, i32 0, i32 1
  %7 = bitcast %"struct.std::__1::pair.94"** %6 to i64*
  store i64 %5, i64* %7, align 8
  %8 = inttoptr i64 %5 to %"struct.std::__1::pair.94"*
  %9 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 23, i32 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %9, align 8
  %11 = icmp ugt %"struct.std::__1::pair.94"* %10, %8
  br i1 %11, label %12, label %17

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %8, i64 0, i32 0
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %8, i64 0, i32 1
  store i32 %1, i32* %14, align 8
  %15 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %8, i64 1
  %16 = ptrtoint %"struct.std::__1::pair.94"* %15 to i64
  store i64 %16, i64* %7, align 8
  br label %45

17:                                               ; preds = %2
  %18 = ptrtoint %"struct.std::__1::pair.94"* %10 to i64
  %19 = bitcast %"struct.std::__1::pair.94"** %9 to i64*
  %20 = sub i64 %18, %5
  %21 = ashr exact i64 %20, 4
  %22 = icmp ult i64 %21, 576460752303423487
  br i1 %22, label %23, label %29

23:                                               ; preds = %17
  %24 = ashr exact i64 %20, 3
  %25 = icmp eq i64 %20, 0
  %26 = select i1 %25, i64 1, i64 %24
  %27 = icmp ugt i64 %26, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %23
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %23, %17
  %30 = phi i64 [ %26, %23 ], [ 1152921504606846975, %17 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"struct.std::__1::pair.94"*
  %34 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %33, i64 %30
  %35 = ptrtoint %"struct.std::__1::pair.94"* %34 to i64
  %36 = bitcast i8* %32 to i64*
  store i64 0, i64* %36, align 8
  %37 = getelementptr inbounds i8, i8* %32, i64 8
  %38 = bitcast i8* %37 to i32*
  store i32 %1, i32* %38, align 8
  %39 = getelementptr inbounds i8, i8* %32, i64 16
  %40 = ptrtoint i8* %39 to i64
  %41 = ptrtoint i8* %32 to i64
  store i64 %41, i64* %4, align 8
  store i64 %40, i64* %7, align 8
  store i64 %35, i64* %19, align 8
  %42 = icmp eq i64 %5, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %29
  %44 = inttoptr i64 %5 to i8*
  tail call void @_ZdlPv(i8* %44) #18
  br label %45

45:                                               ; preds = %12, %29, %43
  %46 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*, i1)***
  %47 = load void (%"class.gfx::RenderText"*, i1)**, void (%"class.gfx::RenderText"*, i1)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %47, i64 11
  %49 = load void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %48, align 8
  tail call void %49(%"class.gfx::RenderText"* %0, i1 zeroext false) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText18ApplyBaselineStyleENS_13BaselineStyleERKNS_5RangeE(%"class.gfx::RenderText"*, i32, %"class.gfx::Range"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 23
  tail call void @_ZN3gfx9BreakListINS_13BaselineStyleEE10ApplyValueES1_RKNS_5RangeE(%"class.gfx::BreakList.91"* %4, i32 %1, %"class.gfx::Range"* dereferenceable(8) %2)
  %5 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*, i1)***
  %6 = load void (%"class.gfx::RenderText"*, i1)**, void (%"class.gfx::RenderText"*, i1)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %6, i64 11
  %8 = load void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %7, align 8
  tail call void %8(%"class.gfx::RenderText"* %0, i1 zeroext false) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gfx9BreakListINS_13BaselineStyleEE10ApplyValueES1_RKNS_5RangeE(%"class.gfx::BreakList.91"*, i32, %"class.gfx::Range"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::pair.94", align 8
  %5 = alloca %"struct.std::__1::pair.94", align 8
  %6 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %2, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %2, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %7, %9
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %148, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %2, i64 0, i32 1
  %14 = icmp eq i32 %7, %9
  br i1 %14, label %148, label %15

15:                                               ; preds = %12
  %16 = zext i32 %7 to i64
  %17 = getelementptr inbounds %"class.gfx::BreakList.91", %"class.gfx::BreakList.91"* %0, i64 0, i32 0, i32 0, i32 1
  %18 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %17, align 8
  %19 = getelementptr inbounds %"class.gfx::BreakList.91", %"class.gfx::BreakList.91"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %19, align 8
  br label %21

21:                                               ; preds = %28, %15
  %22 = phi %"struct.std::__1::pair.94"* [ %18, %15 ], [ %23, %28 ]
  %23 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %22, i64 -1
  %24 = icmp eq %"struct.std::__1::pair.94"* %23, %20
  br i1 %24, label %25, label %28

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %20, i64 0, i32 0
  %27 = load i64, i64* %26, align 8
  br label %32

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %23, i64 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = icmp ugt i64 %30, %16
  br i1 %31, label %21, label %32

32:                                               ; preds = %28, %25
  %33 = phi i64 [ %27, %25 ], [ %30, %28 ]
  %34 = phi %"struct.std::__1::pair.94"* [ %20, %25 ], [ %23, %28 ]
  %35 = icmp ult i64 %33, %16
  %36 = zext i1 %35 to i64
  %37 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %34, i64 %36
  %38 = zext i32 %9 to i64
  br label %39

39:                                               ; preds = %43, %32
  %40 = phi %"struct.std::__1::pair.94"* [ %18, %32 ], [ %41, %43 ]
  %41 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %40, i64 -1
  %42 = icmp eq %"struct.std::__1::pair.94"* %41, %20
  br i1 %42, label %47, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %41, i64 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = icmp ugt i64 %45, %38
  br i1 %46, label %39, label %47

47:                                               ; preds = %39, %43
  %48 = phi %"struct.std::__1::pair.94"* [ %20, %39 ], [ %41, %43 ]
  %49 = ptrtoint %"struct.std::__1::pair.94"* %48 to i64
  %50 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %48, i64 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds %"class.gfx::BreakList.91", %"class.gfx::BreakList.91"* %0, i64 0, i32 0
  %53 = icmp eq %"struct.std::__1::pair.94"* %37, %18
  br i1 %53, label %119, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %48, i64 1
  %56 = icmp eq %"struct.std::__1::pair.94"* %37, %55
  br i1 %56, label %119, label %57

57:                                               ; preds = %54
  %58 = icmp eq %"struct.std::__1::pair.94"* %18, %55
  br i1 %58, label %116, label %59

59:                                               ; preds = %57
  %60 = getelementptr %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %18, i64 -2, i32 0
  %61 = ptrtoint i64* %60 to i64
  %62 = sub i64 %61, %49
  %63 = lshr i64 %62, 4
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %81, label %67

67:                                               ; preds = %59, %67
  %68 = phi %"struct.std::__1::pair.94"* [ %78, %67 ], [ %37, %59 ]
  %69 = phi %"struct.std::__1::pair.94"* [ %77, %67 ], [ %55, %59 ]
  %70 = phi i64 [ %79, %67 ], [ %65, %59 ]
  %71 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %69, i64 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %68, i64 0, i32 0
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %69, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %68, i64 0, i32 1
  store i32 %75, i32* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %69, i64 1
  %78 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %68, i64 1
  %79 = add i64 %70, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %67, !llvm.loop !49

81:                                               ; preds = %67, %59
  %82 = phi %"struct.std::__1::pair.94"* [ undef, %59 ], [ %78, %67 ]
  %83 = phi %"struct.std::__1::pair.94"* [ %37, %59 ], [ %78, %67 ]
  %84 = phi %"struct.std::__1::pair.94"* [ %55, %59 ], [ %77, %67 ]
  %85 = icmp ult i64 %62, 48
  br i1 %85, label %116, label %86

86:                                               ; preds = %81, %86
  %87 = phi %"struct.std::__1::pair.94"* [ %114, %86 ], [ %83, %81 ]
  %88 = phi %"struct.std::__1::pair.94"* [ %113, %86 ], [ %84, %81 ]
  %89 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %88, i64 0, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %87, i64 0, i32 0
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %88, i64 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %87, i64 0, i32 1
  store i32 %93, i32* %94, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %88, i64 1, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %87, i64 1, i32 0
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %88, i64 1, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %87, i64 1, i32 1
  store i32 %99, i32* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %88, i64 2, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %87, i64 2, i32 0
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %88, i64 2, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %87, i64 2, i32 1
  store i32 %105, i32* %106, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %88, i64 3, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %87, i64 3, i32 0
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %88, i64 3, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %87, i64 3, i32 1
  store i32 %111, i32* %112, align 8
  %113 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %88, i64 4
  %114 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %87, i64 4
  %115 = icmp eq %"struct.std::__1::pair.94"* %113, %18
  br i1 %115, label %116, label %86

116:                                              ; preds = %81, %86, %57
  %117 = phi %"struct.std::__1::pair.94"* [ %37, %57 ], [ %82, %81 ], [ %114, %86 ]
  store %"struct.std::__1::pair.94"* %117, %"struct.std::__1::pair.94"** %17, align 8
  %118 = load i32, i32* %6, align 4
  br label %119

119:                                              ; preds = %116, %54, %47
  %120 = phi i32 [ %118, %116 ], [ %7, %54 ], [ %7, %47 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %127, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %37, i64 -1
  %124 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %123, i64 0, i32 1
  %125 = load i32, i32* %124, align 8
  %126 = icmp eq i32 %125, %1
  br i1 %126, label %134, label %127

127:                                              ; preds = %119, %122
  %128 = bitcast %"struct.std::__1::pair.94"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %128) #17
  %129 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %4, i64 0, i32 0
  %130 = zext i32 %120 to i64
  store i64 %130, i64* %129, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %4, i64 0, i32 1
  store i32 %1, i32* %131, align 8
  %132 = call %"struct.std::__1::pair.94"* @_ZNSt3__16vectorINS_4pairImN3gfx13BaselineStyleEEENS_9allocatorIS4_EEE6insertENS_11__wrap_iterIPKS4_EEOS4_(%"class.std::__1::vector.92"* %52, %"struct.std::__1::pair.94"* %37, %"struct.std::__1::pair.94"* nonnull dereferenceable(16) %4)
  %133 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %132, i64 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %128) #17
  br label %134

134:                                              ; preds = %122, %127
  %135 = phi %"struct.std::__1::pair.94"* [ %133, %127 ], [ %37, %122 ]
  %136 = icmp eq i32 %51, %1
  br i1 %136, label %148, label %137

137:                                              ; preds = %134
  %138 = load i32, i32* %13, align 4
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds %"class.gfx::BreakList.91", %"class.gfx::BreakList.91"* %0, i64 0, i32 1
  %141 = load i64, i64* %140, align 8
  %142 = icmp eq i64 %141, %139
  br i1 %142, label %148, label %143

143:                                              ; preds = %137
  %144 = bitcast %"struct.std::__1::pair.94"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %144) #17
  %145 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %5, i64 0, i32 0
  store i64 %139, i64* %145, align 8
  %146 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %5, i64 0, i32 1
  store i32 %51, i32* %146, align 8
  %147 = call %"struct.std::__1::pair.94"* @_ZNSt3__16vectorINS_4pairImN3gfx13BaselineStyleEEENS_9allocatorIS4_EEE6insertENS_11__wrap_iterIPKS4_EEOS4_(%"class.std::__1::vector.92"* %52, %"struct.std::__1::pair.94"* %135, %"struct.std::__1::pair.94"* nonnull dereferenceable(16) %5)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %144) #17
  br label %148

148:                                              ; preds = %3, %143, %134, %137, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText21ApplyFontSizeOverrideEiRKNS_5RangeE(%"class.gfx::RenderText"*, i32, %"class.gfx::Range"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 24
  tail call void @_ZN3gfx9BreakListIiE10ApplyValueEiRKNS_5RangeE(%"class.gfx::BreakList.101"* %4, i32 %1, %"class.gfx::Range"* dereferenceable(8) %2)
  %5 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*, i1)***
  %6 = load void (%"class.gfx::RenderText"*, i1)**, void (%"class.gfx::RenderText"*, i1)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %6, i64 11
  %8 = load void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %7, align 8
  tail call void %8(%"class.gfx::RenderText"* %0, i1 zeroext false) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gfx9BreakListIiE10ApplyValueEiRKNS_5RangeE(%"class.gfx::BreakList.101"*, i32, %"class.gfx::Range"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::pair.104", align 8
  %5 = alloca %"struct.std::__1::pair.104", align 8
  %6 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %2, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %2, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %7, %9
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %148, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %2, i64 0, i32 1
  %14 = icmp eq i32 %7, %9
  br i1 %14, label %148, label %15

15:                                               ; preds = %12
  %16 = zext i32 %7 to i64
  %17 = getelementptr inbounds %"class.gfx::BreakList.101", %"class.gfx::BreakList.101"* %0, i64 0, i32 0, i32 0, i32 1
  %18 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %17, align 8
  %19 = getelementptr inbounds %"class.gfx::BreakList.101", %"class.gfx::BreakList.101"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %19, align 8
  br label %21

21:                                               ; preds = %28, %15
  %22 = phi %"struct.std::__1::pair.104"* [ %18, %15 ], [ %23, %28 ]
  %23 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %22, i64 -1
  %24 = icmp eq %"struct.std::__1::pair.104"* %23, %20
  br i1 %24, label %25, label %28

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %20, i64 0, i32 0
  %27 = load i64, i64* %26, align 8
  br label %32

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %23, i64 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = icmp ugt i64 %30, %16
  br i1 %31, label %21, label %32

32:                                               ; preds = %28, %25
  %33 = phi i64 [ %27, %25 ], [ %30, %28 ]
  %34 = phi %"struct.std::__1::pair.104"* [ %20, %25 ], [ %23, %28 ]
  %35 = icmp ult i64 %33, %16
  %36 = zext i1 %35 to i64
  %37 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %34, i64 %36
  %38 = zext i32 %9 to i64
  br label %39

39:                                               ; preds = %43, %32
  %40 = phi %"struct.std::__1::pair.104"* [ %18, %32 ], [ %41, %43 ]
  %41 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %40, i64 -1
  %42 = icmp eq %"struct.std::__1::pair.104"* %41, %20
  br i1 %42, label %47, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %41, i64 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = icmp ugt i64 %45, %38
  br i1 %46, label %39, label %47

47:                                               ; preds = %39, %43
  %48 = phi %"struct.std::__1::pair.104"* [ %20, %39 ], [ %41, %43 ]
  %49 = ptrtoint %"struct.std::__1::pair.104"* %48 to i64
  %50 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %48, i64 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds %"class.gfx::BreakList.101", %"class.gfx::BreakList.101"* %0, i64 0, i32 0
  %53 = icmp eq %"struct.std::__1::pair.104"* %37, %18
  br i1 %53, label %119, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %48, i64 1
  %56 = icmp eq %"struct.std::__1::pair.104"* %37, %55
  br i1 %56, label %119, label %57

57:                                               ; preds = %54
  %58 = icmp eq %"struct.std::__1::pair.104"* %18, %55
  br i1 %58, label %116, label %59

59:                                               ; preds = %57
  %60 = getelementptr %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %18, i64 -2, i32 0
  %61 = ptrtoint i64* %60 to i64
  %62 = sub i64 %61, %49
  %63 = lshr i64 %62, 4
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %81, label %67

67:                                               ; preds = %59, %67
  %68 = phi %"struct.std::__1::pair.104"* [ %78, %67 ], [ %37, %59 ]
  %69 = phi %"struct.std::__1::pair.104"* [ %77, %67 ], [ %55, %59 ]
  %70 = phi i64 [ %79, %67 ], [ %65, %59 ]
  %71 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %69, i64 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %68, i64 0, i32 0
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %69, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %68, i64 0, i32 1
  store i32 %75, i32* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %69, i64 1
  %78 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %68, i64 1
  %79 = add i64 %70, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %67, !llvm.loop !50

81:                                               ; preds = %67, %59
  %82 = phi %"struct.std::__1::pair.104"* [ undef, %59 ], [ %78, %67 ]
  %83 = phi %"struct.std::__1::pair.104"* [ %37, %59 ], [ %78, %67 ]
  %84 = phi %"struct.std::__1::pair.104"* [ %55, %59 ], [ %77, %67 ]
  %85 = icmp ult i64 %62, 48
  br i1 %85, label %116, label %86

86:                                               ; preds = %81, %86
  %87 = phi %"struct.std::__1::pair.104"* [ %114, %86 ], [ %83, %81 ]
  %88 = phi %"struct.std::__1::pair.104"* [ %113, %86 ], [ %84, %81 ]
  %89 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %88, i64 0, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %87, i64 0, i32 0
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %88, i64 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %87, i64 0, i32 1
  store i32 %93, i32* %94, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %88, i64 1, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %87, i64 1, i32 0
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %88, i64 1, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %87, i64 1, i32 1
  store i32 %99, i32* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %88, i64 2, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %87, i64 2, i32 0
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %88, i64 2, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %87, i64 2, i32 1
  store i32 %105, i32* %106, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %88, i64 3, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %87, i64 3, i32 0
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %88, i64 3, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %87, i64 3, i32 1
  store i32 %111, i32* %112, align 8
  %113 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %88, i64 4
  %114 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %87, i64 4
  %115 = icmp eq %"struct.std::__1::pair.104"* %113, %18
  br i1 %115, label %116, label %86

116:                                              ; preds = %81, %86, %57
  %117 = phi %"struct.std::__1::pair.104"* [ %37, %57 ], [ %82, %81 ], [ %114, %86 ]
  store %"struct.std::__1::pair.104"* %117, %"struct.std::__1::pair.104"** %17, align 8
  %118 = load i32, i32* %6, align 4
  br label %119

119:                                              ; preds = %116, %54, %47
  %120 = phi i32 [ %118, %116 ], [ %7, %54 ], [ %7, %47 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %127, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %37, i64 -1
  %124 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %123, i64 0, i32 1
  %125 = load i32, i32* %124, align 8
  %126 = icmp eq i32 %125, %1
  br i1 %126, label %134, label %127

127:                                              ; preds = %119, %122
  %128 = bitcast %"struct.std::__1::pair.104"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %128) #17
  %129 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %4, i64 0, i32 0
  %130 = zext i32 %120 to i64
  store i64 %130, i64* %129, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %4, i64 0, i32 1
  store i32 %1, i32* %131, align 8
  %132 = call %"struct.std::__1::pair.104"* @_ZNSt3__16vectorINS_4pairImiEENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EEOS2_(%"class.std::__1::vector.102"* %52, %"struct.std::__1::pair.104"* %37, %"struct.std::__1::pair.104"* nonnull dereferenceable(16) %4)
  %133 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %132, i64 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %128) #17
  br label %134

134:                                              ; preds = %122, %127
  %135 = phi %"struct.std::__1::pair.104"* [ %133, %127 ], [ %37, %122 ]
  %136 = icmp eq i32 %51, %1
  br i1 %136, label %148, label %137

137:                                              ; preds = %134
  %138 = load i32, i32* %13, align 4
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds %"class.gfx::BreakList.101", %"class.gfx::BreakList.101"* %0, i64 0, i32 1
  %141 = load i64, i64* %140, align 8
  %142 = icmp eq i64 %141, %139
  br i1 %142, label %148, label %143

143:                                              ; preds = %137
  %144 = bitcast %"struct.std::__1::pair.104"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %144) #17
  %145 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %5, i64 0, i32 0
  store i64 %139, i64* %145, align 8
  %146 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %5, i64 0, i32 1
  store i32 %51, i32* %146, align 8
  %147 = call %"struct.std::__1::pair.104"* @_ZNSt3__16vectorINS_4pairImiEENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EEOS2_(%"class.std::__1::vector.102"* %52, %"struct.std::__1::pair.104"* %135, %"struct.std::__1::pair.104"* nonnull dereferenceable(16) %5)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %144) #17
  br label %148

148:                                              ; preds = %3, %143, %134, %137, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText8SetStyleENS_9TextStyleEb(%"class.gfx::RenderText"*, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 %4
  tail call void @_ZN3gfx9BreakListIbE8SetValueEb(%"class.gfx::BreakList.121"* %5, i1 zeroext %2)
  %6 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 55
  store i8 0, i8* %6, align 8
  %7 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*, i1)***
  %8 = load void (%"class.gfx::RenderText"*, i1)**, void (%"class.gfx::RenderText"*, i1)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %8, i64 11
  %10 = load void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %9, align 8
  tail call void %10(%"class.gfx::RenderText"* %0, i1 zeroext false) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText10ApplyStyleENS_9TextStyleEbRKNS_5RangeE(%"class.gfx::RenderText"*, i32, i1 zeroext, %"class.gfx::Range"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 %5
  tail call void @_ZN3gfx9BreakListIbE10ApplyValueEbRKNS_5RangeE(%"class.gfx::BreakList.121"* %6, i1 zeroext %2, %"class.gfx::Range"* dereferenceable(8) %3)
  %7 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 55
  store i8 0, i8* %7, align 8
  %8 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*, i1)***
  %9 = load void (%"class.gfx::RenderText"*, i1)**, void (%"class.gfx::RenderText"*, i1)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %9, i64 11
  %11 = load void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %10, align 8
  tail call void %11(%"class.gfx::RenderText"* %0, i1 zeroext false) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gfx9BreakListIbE10ApplyValueEbRKNS_5RangeE(%"class.gfx::BreakList.121"*, i1 zeroext, %"class.gfx::Range"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::pair.124", align 8
  %5 = alloca %"struct.std::__1::pair.124", align 8
  %6 = zext i1 %1 to i8
  %7 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %2, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %2, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %8, %10
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %149, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %2, i64 0, i32 1
  %15 = icmp eq i32 %8, %10
  br i1 %15, label %149, label %16

16:                                               ; preds = %13
  %17 = zext i32 %8 to i64
  %18 = getelementptr inbounds %"class.gfx::BreakList.121", %"class.gfx::BreakList.121"* %0, i64 0, i32 0, i32 0, i32 1
  %19 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %18, align 8
  %20 = getelementptr inbounds %"class.gfx::BreakList.121", %"class.gfx::BreakList.121"* %0, i64 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %20, align 8
  br label %22

22:                                               ; preds = %29, %16
  %23 = phi %"struct.std::__1::pair.124"* [ %19, %16 ], [ %24, %29 ]
  %24 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %23, i64 -1
  %25 = icmp eq %"struct.std::__1::pair.124"* %24, %21
  br i1 %25, label %26, label %29

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %21, i64 0, i32 0
  %28 = load i64, i64* %27, align 8
  br label %33

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %24, i64 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = icmp ugt i64 %31, %17
  br i1 %32, label %22, label %33

33:                                               ; preds = %29, %26
  %34 = phi i64 [ %28, %26 ], [ %31, %29 ]
  %35 = phi %"struct.std::__1::pair.124"* [ %21, %26 ], [ %24, %29 ]
  %36 = icmp ult i64 %34, %17
  %37 = zext i1 %36 to i64
  %38 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %35, i64 %37
  %39 = zext i32 %10 to i64
  br label %40

40:                                               ; preds = %44, %33
  %41 = phi %"struct.std::__1::pair.124"* [ %19, %33 ], [ %42, %44 ]
  %42 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %41, i64 -1
  %43 = icmp eq %"struct.std::__1::pair.124"* %42, %21
  br i1 %43, label %48, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %42, i64 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = icmp ugt i64 %46, %39
  br i1 %47, label %40, label %48

48:                                               ; preds = %40, %44
  %49 = phi %"struct.std::__1::pair.124"* [ %21, %40 ], [ %42, %44 ]
  %50 = ptrtoint %"struct.std::__1::pair.124"* %49 to i64
  %51 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %49, i64 0, i32 1
  %52 = load i8, i8* %51, align 8, !range !2
  %53 = getelementptr inbounds %"class.gfx::BreakList.121", %"class.gfx::BreakList.121"* %0, i64 0, i32 0
  %54 = icmp eq %"struct.std::__1::pair.124"* %38, %19
  br i1 %54, label %120, label %55

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %49, i64 1
  %57 = icmp eq %"struct.std::__1::pair.124"* %38, %56
  br i1 %57, label %120, label %58

58:                                               ; preds = %55
  %59 = icmp eq %"struct.std::__1::pair.124"* %19, %56
  br i1 %59, label %117, label %60

60:                                               ; preds = %58
  %61 = getelementptr %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %19, i64 -2, i32 0
  %62 = ptrtoint i64* %61 to i64
  %63 = sub i64 %62, %50
  %64 = lshr i64 %63, 4
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 3
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %82, label %68

68:                                               ; preds = %60, %68
  %69 = phi %"struct.std::__1::pair.124"* [ %79, %68 ], [ %38, %60 ]
  %70 = phi %"struct.std::__1::pair.124"* [ %78, %68 ], [ %56, %60 ]
  %71 = phi i64 [ %80, %68 ], [ %66, %60 ]
  %72 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %70, i64 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %69, i64 0, i32 0
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %70, i64 0, i32 1
  %76 = load i8, i8* %75, align 1, !range !2
  %77 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %69, i64 0, i32 1
  store i8 %76, i8* %77, align 8
  %78 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %70, i64 1
  %79 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %69, i64 1
  %80 = add i64 %71, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %68, !llvm.loop !51

82:                                               ; preds = %68, %60
  %83 = phi %"struct.std::__1::pair.124"* [ undef, %60 ], [ %79, %68 ]
  %84 = phi %"struct.std::__1::pair.124"* [ %38, %60 ], [ %79, %68 ]
  %85 = phi %"struct.std::__1::pair.124"* [ %56, %60 ], [ %78, %68 ]
  %86 = icmp ult i64 %63, 48
  br i1 %86, label %117, label %87

87:                                               ; preds = %82, %87
  %88 = phi %"struct.std::__1::pair.124"* [ %115, %87 ], [ %84, %82 ]
  %89 = phi %"struct.std::__1::pair.124"* [ %114, %87 ], [ %85, %82 ]
  %90 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %89, i64 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %88, i64 0, i32 0
  store i64 %91, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %89, i64 0, i32 1
  %94 = load i8, i8* %93, align 1, !range !2
  %95 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %88, i64 0, i32 1
  store i8 %94, i8* %95, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %89, i64 1, i32 0
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %88, i64 1, i32 0
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %89, i64 1, i32 1
  %100 = load i8, i8* %99, align 1, !range !2
  %101 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %88, i64 1, i32 1
  store i8 %100, i8* %101, align 8
  %102 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %89, i64 2, i32 0
  %103 = load i64, i64* %102, align 8
  %104 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %88, i64 2, i32 0
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %89, i64 2, i32 1
  %106 = load i8, i8* %105, align 1, !range !2
  %107 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %88, i64 2, i32 1
  store i8 %106, i8* %107, align 8
  %108 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %89, i64 3, i32 0
  %109 = load i64, i64* %108, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %88, i64 3, i32 0
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %89, i64 3, i32 1
  %112 = load i8, i8* %111, align 1, !range !2
  %113 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %88, i64 3, i32 1
  store i8 %112, i8* %113, align 8
  %114 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %89, i64 4
  %115 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %88, i64 4
  %116 = icmp eq %"struct.std::__1::pair.124"* %114, %19
  br i1 %116, label %117, label %87

117:                                              ; preds = %82, %87, %58
  %118 = phi %"struct.std::__1::pair.124"* [ %38, %58 ], [ %83, %82 ], [ %115, %87 ]
  store %"struct.std::__1::pair.124"* %118, %"struct.std::__1::pair.124"** %18, align 8
  %119 = load i32, i32* %7, align 4
  br label %120

120:                                              ; preds = %117, %55, %48
  %121 = phi i32 [ %119, %117 ], [ %8, %55 ], [ %8, %48 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %128, label %123

123:                                              ; preds = %120
  %124 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %38, i64 -1
  %125 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %124, i64 0, i32 1
  %126 = load i8, i8* %125, align 8, !range !2
  %127 = icmp eq i8 %126, %6
  br i1 %127, label %135, label %128

128:                                              ; preds = %120, %123
  %129 = bitcast %"struct.std::__1::pair.124"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %129) #17
  %130 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %4, i64 0, i32 0
  %131 = zext i32 %121 to i64
  store i64 %131, i64* %130, align 8
  %132 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %4, i64 0, i32 1
  store i8 %6, i8* %132, align 8
  %133 = call %"struct.std::__1::pair.124"* @_ZNSt3__16vectorINS_4pairImbEENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EEOS2_(%"class.std::__1::vector.122"* %53, %"struct.std::__1::pair.124"* %38, %"struct.std::__1::pair.124"* nonnull dereferenceable(16) %4)
  %134 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %133, i64 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %129) #17
  br label %135

135:                                              ; preds = %123, %128
  %136 = phi %"struct.std::__1::pair.124"* [ %134, %128 ], [ %38, %123 ]
  %137 = icmp eq i8 %52, %6
  br i1 %137, label %149, label %138

138:                                              ; preds = %135
  %139 = load i32, i32* %14, align 4
  %140 = zext i32 %139 to i64
  %141 = getelementptr inbounds %"class.gfx::BreakList.121", %"class.gfx::BreakList.121"* %0, i64 0, i32 1
  %142 = load i64, i64* %141, align 8
  %143 = icmp eq i64 %142, %140
  br i1 %143, label %149, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.std::__1::pair.124"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %145) #17
  %146 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %5, i64 0, i32 0
  store i64 %140, i64* %146, align 8
  %147 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %5, i64 0, i32 1
  store i8 %52, i8* %147, align 8
  %148 = call %"struct.std::__1::pair.124"* @_ZNSt3__16vectorINS_4pairImbEENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EEOS2_(%"class.std::__1::vector.122"* %53, %"struct.std::__1::pair.124"* %136, %"struct.std::__1::pair.124"* nonnull dereferenceable(16) %5)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %145) #17
  br label %149

149:                                              ; preds = %3, %144, %135, %138, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText9SetWeightENS_4Font6WeightE(%"class.gfx::RenderText"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 25
  %4 = bitcast %"class.gfx::BreakList.111"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 25, i32 0, i32 0, i32 1
  %7 = bitcast %"struct.std::__1::pair.114"** %6 to i64*
  store i64 %5, i64* %7, align 8
  %8 = inttoptr i64 %5 to %"struct.std::__1::pair.114"*
  %9 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 25, i32 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %9, align 8
  %11 = icmp ugt %"struct.std::__1::pair.114"* %10, %8
  br i1 %11, label %12, label %17

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %8, i64 0, i32 0
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %8, i64 0, i32 1
  store i32 %1, i32* %14, align 8
  %15 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %8, i64 1
  %16 = ptrtoint %"struct.std::__1::pair.114"* %15 to i64
  store i64 %16, i64* %7, align 8
  br label %45

17:                                               ; preds = %2
  %18 = ptrtoint %"struct.std::__1::pair.114"* %10 to i64
  %19 = bitcast %"struct.std::__1::pair.114"** %9 to i64*
  %20 = sub i64 %18, %5
  %21 = ashr exact i64 %20, 4
  %22 = icmp ult i64 %21, 576460752303423487
  br i1 %22, label %23, label %29

23:                                               ; preds = %17
  %24 = ashr exact i64 %20, 3
  %25 = icmp eq i64 %20, 0
  %26 = select i1 %25, i64 1, i64 %24
  %27 = icmp ugt i64 %26, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %23
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %23, %17
  %30 = phi i64 [ %26, %23 ], [ 1152921504606846975, %17 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"struct.std::__1::pair.114"*
  %34 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %33, i64 %30
  %35 = ptrtoint %"struct.std::__1::pair.114"* %34 to i64
  %36 = bitcast i8* %32 to i64*
  store i64 0, i64* %36, align 8
  %37 = getelementptr inbounds i8, i8* %32, i64 8
  %38 = bitcast i8* %37 to i32*
  store i32 %1, i32* %38, align 8
  %39 = getelementptr inbounds i8, i8* %32, i64 16
  %40 = ptrtoint i8* %39 to i64
  %41 = ptrtoint i8* %32 to i64
  store i64 %41, i64* %4, align 8
  store i64 %40, i64* %7, align 8
  store i64 %35, i64* %19, align 8
  %42 = icmp eq i64 %5, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %29
  %44 = inttoptr i64 %5 to i8*
  tail call void @_ZdlPv(i8* %44) #18
  br label %45

45:                                               ; preds = %12, %29, %43
  %46 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 55
  store i8 0, i8* %46, align 8
  %47 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*, i1)***
  %48 = load void (%"class.gfx::RenderText"*, i1)**, void (%"class.gfx::RenderText"*, i1)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %48, i64 11
  %50 = load void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %49, align 8
  tail call void %50(%"class.gfx::RenderText"* %0, i1 zeroext false) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText11ApplyWeightENS_4Font6WeightERKNS_5RangeE(%"class.gfx::RenderText"*, i32, %"class.gfx::Range"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 25
  tail call void @_ZN3gfx9BreakListINS_4Font6WeightEE10ApplyValueES2_RKNS_5RangeE(%"class.gfx::BreakList.111"* %4, i32 %1, %"class.gfx::Range"* dereferenceable(8) %2)
  %5 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 55
  store i8 0, i8* %5, align 8
  %6 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*, i1)***
  %7 = load void (%"class.gfx::RenderText"*, i1)**, void (%"class.gfx::RenderText"*, i1)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %7, i64 11
  %9 = load void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %8, align 8
  tail call void %9(%"class.gfx::RenderText"* %0, i1 zeroext false) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gfx9BreakListINS_4Font6WeightEE10ApplyValueES2_RKNS_5RangeE(%"class.gfx::BreakList.111"*, i32, %"class.gfx::Range"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::pair.114", align 8
  %5 = alloca %"struct.std::__1::pair.114", align 8
  %6 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %2, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %2, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %7, %9
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %148, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %2, i64 0, i32 1
  %14 = icmp eq i32 %7, %9
  br i1 %14, label %148, label %15

15:                                               ; preds = %12
  %16 = zext i32 %7 to i64
  %17 = getelementptr inbounds %"class.gfx::BreakList.111", %"class.gfx::BreakList.111"* %0, i64 0, i32 0, i32 0, i32 1
  %18 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %17, align 8
  %19 = getelementptr inbounds %"class.gfx::BreakList.111", %"class.gfx::BreakList.111"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %19, align 8
  br label %21

21:                                               ; preds = %28, %15
  %22 = phi %"struct.std::__1::pair.114"* [ %18, %15 ], [ %23, %28 ]
  %23 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %22, i64 -1
  %24 = icmp eq %"struct.std::__1::pair.114"* %23, %20
  br i1 %24, label %25, label %28

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %20, i64 0, i32 0
  %27 = load i64, i64* %26, align 8
  br label %32

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %23, i64 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = icmp ugt i64 %30, %16
  br i1 %31, label %21, label %32

32:                                               ; preds = %28, %25
  %33 = phi i64 [ %27, %25 ], [ %30, %28 ]
  %34 = phi %"struct.std::__1::pair.114"* [ %20, %25 ], [ %23, %28 ]
  %35 = icmp ult i64 %33, %16
  %36 = zext i1 %35 to i64
  %37 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %34, i64 %36
  %38 = zext i32 %9 to i64
  br label %39

39:                                               ; preds = %43, %32
  %40 = phi %"struct.std::__1::pair.114"* [ %18, %32 ], [ %41, %43 ]
  %41 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %40, i64 -1
  %42 = icmp eq %"struct.std::__1::pair.114"* %41, %20
  br i1 %42, label %47, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %41, i64 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = icmp ugt i64 %45, %38
  br i1 %46, label %39, label %47

47:                                               ; preds = %39, %43
  %48 = phi %"struct.std::__1::pair.114"* [ %20, %39 ], [ %41, %43 ]
  %49 = ptrtoint %"struct.std::__1::pair.114"* %48 to i64
  %50 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %48, i64 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds %"class.gfx::BreakList.111", %"class.gfx::BreakList.111"* %0, i64 0, i32 0
  %53 = icmp eq %"struct.std::__1::pair.114"* %37, %18
  br i1 %53, label %119, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %48, i64 1
  %56 = icmp eq %"struct.std::__1::pair.114"* %37, %55
  br i1 %56, label %119, label %57

57:                                               ; preds = %54
  %58 = icmp eq %"struct.std::__1::pair.114"* %18, %55
  br i1 %58, label %116, label %59

59:                                               ; preds = %57
  %60 = getelementptr %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %18, i64 -2, i32 0
  %61 = ptrtoint i64* %60 to i64
  %62 = sub i64 %61, %49
  %63 = lshr i64 %62, 4
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %81, label %67

67:                                               ; preds = %59, %67
  %68 = phi %"struct.std::__1::pair.114"* [ %78, %67 ], [ %37, %59 ]
  %69 = phi %"struct.std::__1::pair.114"* [ %77, %67 ], [ %55, %59 ]
  %70 = phi i64 [ %79, %67 ], [ %65, %59 ]
  %71 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %69, i64 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %68, i64 0, i32 0
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %69, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %68, i64 0, i32 1
  store i32 %75, i32* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %69, i64 1
  %78 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %68, i64 1
  %79 = add i64 %70, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %67, !llvm.loop !52

81:                                               ; preds = %67, %59
  %82 = phi %"struct.std::__1::pair.114"* [ undef, %59 ], [ %78, %67 ]
  %83 = phi %"struct.std::__1::pair.114"* [ %37, %59 ], [ %78, %67 ]
  %84 = phi %"struct.std::__1::pair.114"* [ %55, %59 ], [ %77, %67 ]
  %85 = icmp ult i64 %62, 48
  br i1 %85, label %116, label %86

86:                                               ; preds = %81, %86
  %87 = phi %"struct.std::__1::pair.114"* [ %114, %86 ], [ %83, %81 ]
  %88 = phi %"struct.std::__1::pair.114"* [ %113, %86 ], [ %84, %81 ]
  %89 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %88, i64 0, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %87, i64 0, i32 0
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %88, i64 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %87, i64 0, i32 1
  store i32 %93, i32* %94, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %88, i64 1, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %87, i64 1, i32 0
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %88, i64 1, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %87, i64 1, i32 1
  store i32 %99, i32* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %88, i64 2, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %87, i64 2, i32 0
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %88, i64 2, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %87, i64 2, i32 1
  store i32 %105, i32* %106, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %88, i64 3, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %87, i64 3, i32 0
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %88, i64 3, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %87, i64 3, i32 1
  store i32 %111, i32* %112, align 8
  %113 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %88, i64 4
  %114 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %87, i64 4
  %115 = icmp eq %"struct.std::__1::pair.114"* %113, %18
  br i1 %115, label %116, label %86

116:                                              ; preds = %81, %86, %57
  %117 = phi %"struct.std::__1::pair.114"* [ %37, %57 ], [ %82, %81 ], [ %114, %86 ]
  store %"struct.std::__1::pair.114"* %117, %"struct.std::__1::pair.114"** %17, align 8
  %118 = load i32, i32* %6, align 4
  br label %119

119:                                              ; preds = %116, %54, %47
  %120 = phi i32 [ %118, %116 ], [ %7, %54 ], [ %7, %47 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %127, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %37, i64 -1
  %124 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %123, i64 0, i32 1
  %125 = load i32, i32* %124, align 8
  %126 = icmp eq i32 %125, %1
  br i1 %126, label %134, label %127

127:                                              ; preds = %119, %122
  %128 = bitcast %"struct.std::__1::pair.114"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %128) #17
  %129 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %4, i64 0, i32 0
  %130 = zext i32 %120 to i64
  store i64 %130, i64* %129, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %4, i64 0, i32 1
  store i32 %1, i32* %131, align 8
  %132 = call %"struct.std::__1::pair.114"* @_ZNSt3__16vectorINS_4pairImN3gfx4Font6WeightEEENS_9allocatorIS5_EEE6insertENS_11__wrap_iterIPKS5_EEOS5_(%"class.std::__1::vector.112"* %52, %"struct.std::__1::pair.114"* %37, %"struct.std::__1::pair.114"* nonnull dereferenceable(16) %4)
  %133 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %132, i64 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %128) #17
  br label %134

134:                                              ; preds = %122, %127
  %135 = phi %"struct.std::__1::pair.114"* [ %133, %127 ], [ %37, %122 ]
  %136 = icmp eq i32 %51, %1
  br i1 %136, label %148, label %137

137:                                              ; preds = %134
  %138 = load i32, i32* %13, align 4
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds %"class.gfx::BreakList.111", %"class.gfx::BreakList.111"* %0, i64 0, i32 1
  %141 = load i64, i64* %140, align 8
  %142 = icmp eq i64 %141, %139
  br i1 %142, label %148, label %143

143:                                              ; preds = %137
  %144 = bitcast %"struct.std::__1::pair.114"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %144) #17
  %145 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %5, i64 0, i32 0
  store i64 %139, i64* %145, align 8
  %146 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %5, i64 0, i32 1
  store i32 %51, i32* %146, align 8
  %147 = call %"struct.std::__1::pair.114"* @_ZNSt3__16vectorINS_4pairImN3gfx4Font6WeightEEENS_9allocatorIS5_EEE6insertENS_11__wrap_iterIPKS5_EEOS5_(%"class.std::__1::vector.112"* %52, %"struct.std::__1::pair.114"* %135, %"struct.std::__1::pair.114"* nonnull dereferenceable(16) %5)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %144) #17
  br label %148

148:                                              ; preds = %3, %143, %134, %137, %12
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gfx10RenderText8GetStyleENS_9TextStyleE(%"class.gfx::RenderText"* nocapture readonly, i32) local_unnamed_addr #12 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 %3, i32 0
  %5 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 %3, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair.124"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.122"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = icmp eq i64 %10, 16
  br i1 %11, label %12, label %17

12:                                               ; preds = %2
  %13 = inttoptr i64 %9 to %"struct.std::__1::pair.124"*
  %14 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %13, i64 0, i32 1
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp ne i8 %15, 0
  br label %17

17:                                               ; preds = %12, %2
  %18 = phi i1 [ false, %2 ], [ %16, %12 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3gfx10RenderText16GetTextDirectionEv(%"class.gfx::RenderText"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %18

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 6
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %15 [
    i32 0, label %8
    i32 1, label %11
    i32 2, label %16
    i32 3, label %14
    i32 4, label %16
  ]

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3
  %10 = tail call i32 @_ZN4base4i18n32GetFirstStrongCharacterDirectionERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %9) #17
  br label %16

11:                                               ; preds = %5
  %12 = tail call zeroext i1 @_ZN4base4i18n5IsRTLEv() #17
  %13 = select i1 %12, i32 1, i32 2
  br label %16

14:                                               ; preds = %5
  br label %16

15:                                               ; preds = %5
  br label %16

16:                                               ; preds = %5, %5, %8, %11, %14, %15
  %17 = phi i32 [ 0, %15 ], [ 1, %14 ], [ %13, %11 ], [ %10, %8 ], [ 2, %5 ], [ 2, %5 ]
  store i32 %17, i32* %2, align 4
  br label %18

18:                                               ; preds = %16, %1
  %19 = phi i32 [ %17, %16 ], [ %3, %1 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3gfx10RenderText28GetTextDirectionForGivenTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.gfx::RenderText"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %11 [
    i32 0, label %5
    i32 1, label %7
    i32 2, label %12
    i32 3, label %10
    i32 4, label %12
  ]

5:                                                ; preds = %2
  %6 = tail call i32 @_ZN4base4i18n32GetFirstStrongCharacterDirectionERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %1) #17
  br label %12

7:                                                ; preds = %2
  %8 = tail call zeroext i1 @_ZN4base4i18n5IsRTLEv() #17
  %9 = select i1 %8, i32 1, i32 2
  br label %12

10:                                               ; preds = %2
  br label %12

11:                                               ; preds = %2
  br label %12

12:                                               ; preds = %2, %2, %11, %10, %7, %5
  %13 = phi i32 [ 0, %11 ], [ 1, %10 ], [ %9, %7 ], [ %6, %5 ], [ 2, %2 ], [ 2, %2 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gfx10RenderText23GetDisplayTextDirectionEv(%"class.gfx::RenderText"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*)***
  %3 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %2, align 8
  %4 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %3, i64 13
  %5 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %4, align 8
  tail call void %5(%"class.gfx::RenderText"* %0) #17
  %6 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 8
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %26

9:                                                ; preds = %1
  %10 = bitcast %"class.gfx::RenderText"* %0 to %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)***
  %11 = load %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)**, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)** %11, i64 2
  %13 = load %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)** %12, align 8
  %14 = tail call dereferenceable(24) %"class.std::__1::basic_string"* %13(%"class.gfx::RenderText"* %0) #17
  %15 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 6
  %16 = load i32, i32* %15, align 8
  switch i32 %16, label %23 [
    i32 0, label %17
    i32 1, label %19
    i32 2, label %24
    i32 3, label %22
    i32 4, label %24
  ]

17:                                               ; preds = %9
  %18 = tail call i32 @_ZN4base4i18n32GetFirstStrongCharacterDirectionERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %14) #17
  br label %24

19:                                               ; preds = %9
  %20 = tail call zeroext i1 @_ZN4base4i18n5IsRTLEv() #17
  %21 = select i1 %20, i32 1, i32 2
  br label %24

22:                                               ; preds = %9
  br label %24

23:                                               ; preds = %9
  br label %24

24:                                               ; preds = %9, %9, %17, %19, %22, %23
  %25 = phi i32 [ 0, %23 ], [ 1, %22 ], [ %21, %19 ], [ %18, %17 ], [ 2, %9 ], [ 2, %9 ]
  store i32 %25, i32* %6, align 8
  br label %26

26:                                               ; preds = %24, %1
  %27 = phi i32 [ %25, %24 ], [ %7, %1 ]
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gfx10RenderText30GetVisualDirectionOfLogicalEndEv(%"class.gfx::RenderText"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*)***
  %3 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %2, align 8
  %4 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %3, i64 13
  %5 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %4, align 8
  tail call void %5(%"class.gfx::RenderText"* %0) #17
  %6 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 8
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %26

9:                                                ; preds = %1
  %10 = bitcast %"class.gfx::RenderText"* %0 to %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)***
  %11 = load %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)**, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)** %11, i64 2
  %13 = load %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)** %12, align 8
  %14 = tail call dereferenceable(24) %"class.std::__1::basic_string"* %13(%"class.gfx::RenderText"* %0) #17
  %15 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 6
  %16 = load i32, i32* %15, align 8
  switch i32 %16, label %23 [
    i32 0, label %17
    i32 1, label %19
    i32 2, label %24
    i32 3, label %22
    i32 4, label %24
  ]

17:                                               ; preds = %9
  %18 = tail call i32 @_ZN4base4i18n32GetFirstStrongCharacterDirectionERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %14) #17
  br label %24

19:                                               ; preds = %9
  %20 = tail call zeroext i1 @_ZN4base4i18n5IsRTLEv() #17
  %21 = select i1 %20, i32 1, i32 2
  br label %24

22:                                               ; preds = %9
  br label %24

23:                                               ; preds = %9
  br label %24

24:                                               ; preds = %23, %22, %19, %17, %9, %9
  %25 = phi i32 [ 0, %23 ], [ 1, %22 ], [ %21, %19 ], [ %18, %17 ], [ 2, %9 ], [ 2, %9 ]
  store i32 %25, i32* %6, align 8
  br label %26

26:                                               ; preds = %1, %24
  %27 = phi i32 [ %25, %24 ], [ %7, %1 ]
  %28 = icmp eq i32 %27, 2
  %29 = zext i1 %28 to i32
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gfx10RenderText36GetVisualDirectionOfLogicalBeginningEv(%"class.gfx::RenderText"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*)***
  %3 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %2, align 8
  %4 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %3, i64 13
  %5 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %4, align 8
  tail call void %5(%"class.gfx::RenderText"* %0) #17
  %6 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 8
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %26

9:                                                ; preds = %1
  %10 = bitcast %"class.gfx::RenderText"* %0 to %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)***
  %11 = load %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)**, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)** %11, i64 2
  %13 = load %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)** %12, align 8
  %14 = tail call dereferenceable(24) %"class.std::__1::basic_string"* %13(%"class.gfx::RenderText"* %0) #17
  %15 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 6
  %16 = load i32, i32* %15, align 8
  switch i32 %16, label %23 [
    i32 0, label %17
    i32 1, label %19
    i32 2, label %24
    i32 3, label %22
    i32 4, label %24
  ]

17:                                               ; preds = %9
  %18 = tail call i32 @_ZN4base4i18n32GetFirstStrongCharacterDirectionERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %14) #17
  br label %24

19:                                               ; preds = %9
  %20 = tail call zeroext i1 @_ZN4base4i18n5IsRTLEv() #17
  %21 = select i1 %20, i32 1, i32 2
  br label %24

22:                                               ; preds = %9
  br label %24

23:                                               ; preds = %9
  br label %24

24:                                               ; preds = %23, %22, %19, %17, %9, %9
  %25 = phi i32 [ 0, %23 ], [ 1, %22 ], [ %21, %19 ], [ %18, %17 ], [ 2, %9 ], [ 2, %9 ]
  store i32 %25, i32* %6, align 8
  br label %26

26:                                               ; preds = %1, %24
  %27 = phi i32 [ %25, %24 ], [ %7, %1 ]
  %28 = icmp eq i32 %27, 1
  %29 = zext i1 %28 to i32
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3gfx10RenderText13GetStringSizeEv(%"class.gfx::RenderText"*) local_unnamed_addr #11 align 2 {
  %2 = bitcast %"class.gfx::RenderText"* %0 to <2 x float> (%"class.gfx::RenderText"*)***
  %3 = load <2 x float> (%"class.gfx::RenderText"*)**, <2 x float> (%"class.gfx::RenderText"*)*** %2, align 8
  %4 = getelementptr inbounds <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %3, i64 3
  %5 = load <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %4, align 8
  %6 = tail call <2 x float> %5(%"class.gfx::RenderText"* %0) #17
  %7 = extractelement <2 x float> %6, i32 0
  %8 = tail call float @llvm.ceil.f32(float %7) #17
  %9 = fcmp ult float %8, 0xC1E0000000000000
  %10 = fcmp ugt float %8, 0x41DFFFFFE0000000
  %11 = fcmp ogt float %8, 0xC1E0000000000000
  %12 = select i1 %11, float %8, float 0xC1E0000000000000
  %13 = fptosi float %12 to i32
  %14 = select i1 %9, i32 0, i32 2147483647
  %15 = select i1 %10, i32 %14, i32 %13
  %16 = extractelement <2 x float> %6, i32 1
  %17 = tail call float @llvm.ceil.f32(float %16) #17
  %18 = fcmp ult float %17, 0xC1E0000000000000
  %19 = fcmp ugt float %17, 0x41DFFFFFE0000000
  %20 = fcmp ogt float %17, 0xC1E0000000000000
  %21 = select i1 %20, float %17, float 0xC1E0000000000000
  %22 = fptosi float %21 to i32
  %23 = select i1 %18, i32 0, i32 2147483647
  %24 = select i1 %19, i32 %23, i32 %22
  %25 = icmp sgt i32 %15, 0
  %26 = select i1 %25, i32 %15, i32 0
  %27 = icmp sgt i32 %24, 0
  %28 = select i1 %27, i32 %24, i32 0
  %29 = zext i32 %28 to i64
  %30 = shl nuw nsw i64 %29, 32
  %31 = zext i32 %26 to i64
  %32 = or i64 %30, %31
  ret i64 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN3gfx10RenderText14TotalLineWidthEv(%"class.gfx::RenderText"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*)***
  %3 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %2, align 8
  %4 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %3, i64 13
  %5 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %4, align 8
  tail call void %5(%"class.gfx::RenderText"* %0) #17
  %6 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 59, i32 0, i32 0, i32 0
  %7 = load %"class.gfx::internal::ShapedText"*, %"class.gfx::internal::ShapedText"** %6, align 8
  %8 = getelementptr inbounds %"class.gfx::internal::ShapedText", %"class.gfx::internal::ShapedText"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.gfx::internal::Line"*, %"struct.gfx::internal::Line"** %8, align 8
  %10 = getelementptr inbounds %"class.gfx::internal::ShapedText", %"class.gfx::internal::ShapedText"* %7, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.gfx::internal::Line"*, %"struct.gfx::internal::Line"** %10, align 8
  %12 = icmp eq %"struct.gfx::internal::Line"* %9, %11
  br i1 %12, label %13, label %15

13:                                               ; preds = %15, %1
  %14 = phi float [ 0.000000e+00, %1 ], [ %20, %15 ]
  ret float %14

15:                                               ; preds = %1, %15
  %16 = phi float [ %20, %15 ], [ 0.000000e+00, %1 ]
  %17 = phi %"struct.gfx::internal::Line"* [ %21, %15 ], [ %9, %1 ]
  %18 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %17, i64 0, i32 1, i32 0
  %19 = load float, float* %18, align 4
  %20 = fadd float %16, %19
  %21 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %17, i64 1
  %22 = icmp eq %"struct.gfx::internal::Line"* %21, %11
  br i1 %22, label %13, label %15
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN3gfx10RenderText16GetContentWidthFEv(%"class.gfx::RenderText"*) local_unnamed_addr #11 align 2 {
  %2 = bitcast %"class.gfx::RenderText"* %0 to <2 x float> (%"class.gfx::RenderText"*)***
  %3 = load <2 x float> (%"class.gfx::RenderText"*)**, <2 x float> (%"class.gfx::RenderText"*)*** %2, align 8
  %4 = getelementptr inbounds <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %3, i64 3
  %5 = load <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %4, align 8
  %6 = tail call <2 x float> %5(%"class.gfx::RenderText"* %0) #17
  %7 = extractelement <2 x float> %6, i32 0
  %8 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 13
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = tail call float @llvm.ceil.f32(float %7) #17
  %12 = fadd float %11, 1.000000e+00
  %13 = select i1 %10, float %7, float %12
  ret float %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gfx10RenderText15GetContentWidthEv(%"class.gfx::RenderText"*) local_unnamed_addr #11 align 2 {
  %2 = bitcast %"class.gfx::RenderText"* %0 to <2 x float> (%"class.gfx::RenderText"*)***
  %3 = load <2 x float> (%"class.gfx::RenderText"*)**, <2 x float> (%"class.gfx::RenderText"*)*** %2, align 8
  %4 = getelementptr inbounds <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %3, i64 3
  %5 = load <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %4, align 8
  %6 = tail call <2 x float> %5(%"class.gfx::RenderText"* %0) #17
  %7 = extractelement <2 x float> %6, i32 0
  %8 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 13
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = tail call float @llvm.ceil.f32(float %7) #17
  %12 = fadd float %11, 1.000000e+00
  %13 = select i1 %10, float %7, float %12
  %14 = tail call float @llvm.ceil.f32(float %13) #17
  %15 = fcmp ult float %14, 0xC1E0000000000000
  %16 = fcmp ugt float %14, 0x41DFFFFFE0000000
  %17 = fcmp ogt float %14, 0xC1E0000000000000
  %18 = select i1 %17, float %14, float 0xC1E0000000000000
  %19 = fptosi float %18 to i32
  %20 = select i1 %15, i32 0, i32 2147483647
  %21 = select i1 %16, i32 %20, i32 %19
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gfx10RenderText11GetBaselineEv(%"class.gfx::RenderText"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 54
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 2147483647
  br i1 %4, label %5, label %28

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 50, i32 1, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 10
  %9 = tail call i32 @_ZNK3gfx8FontList9GetHeightEv(%"class.gfx::FontList"* %8) #17
  %10 = sub nsw i32 %7, %9
  %11 = icmp slt i32 %10, 0
  %12 = select i1 %11, i32 %10, i32 0
  %13 = sub nsw i32 0, %10
  %14 = select i1 %11, i32 %13, i32 %10
  %15 = tail call i32 @_ZNK3gfx8FontList11GetBaselineEv(%"class.gfx::FontList"* %8) #17
  %16 = tail call i32 @_ZNK3gfx8FontList12GetCapHeightEv(%"class.gfx::FontList"* %8) #17
  %17 = sub nsw i32 %15, %16
  %18 = icmp eq i32 %17, 0
  %19 = select i1 %18, i32 %9, i32 %16
  %20 = sub nsw i32 %7, %19
  %21 = sdiv i32 %20, 2
  %22 = sub nsw i32 %21, %17
  %23 = icmp slt i32 %22, %12
  %24 = select i1 %23, i32 %12, i32 %22
  %25 = icmp slt i32 %14, %24
  %26 = select i1 %25, i32 %14, i32 %24
  %27 = add nsw i32 %26, %15
  store i32 %27, i32* %2, align 4
  br label %28

28:                                               ; preds = %5, %1
  %29 = phi i32 [ %27, %5 ], [ %3, %1 ]
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gfx10RenderText30DetermineBaselineCenteringTextEiRKNS_8FontListE(i32, %"class.gfx::FontList"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = tail call i32 @_ZNK3gfx8FontList9GetHeightEv(%"class.gfx::FontList"* %1) #17
  %4 = sub nsw i32 %0, %3
  %5 = icmp slt i32 %4, 0
  %6 = select i1 %5, i32 %4, i32 0
  %7 = sub nsw i32 0, %4
  %8 = select i1 %5, i32 %7, i32 %4
  %9 = tail call i32 @_ZNK3gfx8FontList11GetBaselineEv(%"class.gfx::FontList"* %1) #17
  %10 = tail call i32 @_ZNK3gfx8FontList12GetCapHeightEv(%"class.gfx::FontList"* %1) #17
  %11 = sub nsw i32 %9, %10
  %12 = icmp eq i32 %11, 0
  %13 = select i1 %12, i32 %3, i32 %10
  %14 = sub nsw i32 %0, %13
  %15 = sdiv i32 %14, 2
  %16 = sub nsw i32 %15, %11
  %17 = icmp slt i32 %16, %6
  %18 = select i1 %17, i32 %6, i32 %16
  %19 = icmp slt i32 %8, %18
  %20 = select i1 %19, i32 %8, i32 %18
  %21 = add nsw i32 %20, %9
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText4DrawEPNS_6CanvasEb(%"class.gfx::RenderText"*, %"class.gfx::Canvas"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.gfx::Rect", align 4
  %5 = alloca { i64, i64 }, align 8
  %6 = alloca %"class.std::__1::vector.157", align 8
  %7 = alloca [1 x %"class.gfx::Range"], align 4
  %8 = alloca %"class.std::__1::vector.157", align 8
  %9 = alloca %"class.gfx::internal::SkiaTextRenderer", align 8
  %10 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*)***
  %11 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %11, i64 13
  %13 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %12, align 8
  tail call void %13(%"class.gfx::RenderText"* %0) #17
  %14 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 51
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %3
  %18 = bitcast { i64, i64 }* %5 to %"class.gfx::Insets"*
  %19 = bitcast %"class.gfx::Rect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #17
  %20 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 50
  %21 = bitcast %"class.gfx::Rect"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %19, i8* align 4 %21, i64 16, i1 false)
  %22 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #17
  %23 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 57
  %24 = tail call { i64, i64 } @_ZN3gfx11ShadowValue9GetMarginERKNSt3__16vectorIS0_NS1_9allocatorIS0_EEEE(%"class.std::__1::vector.176"* dereferenceable(24) %23) #17
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %26 = extractvalue { i64, i64 } %24, 0
  store i64 %26, i64* %25, align 8
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %28 = extractvalue { i64, i64 } %24, 1
  store i64 %28, i64* %27, align 8
  call void @_ZN3gfx4Rect5InsetERKNS_6InsetsE(%"class.gfx::Rect"* nonnull %4, %"class.gfx::Insets"* nonnull dereferenceable(16) %18) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #17
  call void @_ZN3gfx6Canvas4SaveEv(%"class.gfx::Canvas"* %1) #17
  call void @_ZN3gfx6Canvas8ClipRectERKNS_4RectE8SkClipOp(%"class.gfx::Canvas"* %1, %"class.gfx::Rect"* nonnull dereferenceable(16) %4, i32 1) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #17
  br label %29

29:                                               ; preds = %3, %17
  %30 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %31, i64 0, i32 1, i32 1
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  br label %40

38:                                               ; preds = %29
  %39 = zext i8 %33 to i64
  br label %40

40:                                               ; preds = %35, %38
  %41 = phi i64 [ %37, %35 ], [ %39, %38 ]
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %119, label %43

43:                                               ; preds = %40
  %44 = bitcast %"class.std::__1::vector.157"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #17
  %45 = getelementptr inbounds %"class.std::__1::vector.157", %"class.std::__1::vector.157"* %6, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.std::__1::vector.157", %"class.std::__1::vector.157"* %6, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 24, i1 false) #17
  br i1 %2, label %47, label %61

47:                                               ; preds = %43
  %48 = bitcast [1 x %"class.gfx::Range"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #17
  %49 = getelementptr inbounds [1 x %"class.gfx::Range"], [1 x %"class.gfx::Range"]* %7, i64 0, i64 0
  br i1 %34, label %50, label %53

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  br label %55

53:                                               ; preds = %47
  %54 = zext i8 %33 to i64
  br label %55

55:                                               ; preds = %50, %53
  %56 = phi i64 [ %52, %50 ], [ %54, %53 ]
  %57 = trunc i64 %56 to i32
  %58 = getelementptr inbounds [1 x %"class.gfx::Range"], [1 x %"class.gfx::Range"]* %7, i64 0, i64 0, i32 0
  store i32 0, i32* %58, align 4
  %59 = getelementptr inbounds [1 x %"class.gfx::Range"], [1 x %"class.gfx::Range"]* %7, i64 0, i64 0, i32 1
  store i32 %57, i32* %59, align 4
  %60 = getelementptr inbounds [1 x %"class.gfx::Range"], [1 x %"class.gfx::Range"]* %7, i64 0, i64 1
  call void @_ZNSt3__16vectorIN3gfx5RangeENS_9allocatorIS2_EEE6assignIPKS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector.157"* nonnull %6, %"class.gfx::Range"* nonnull %49, %"class.gfx::Range"* %60) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #17
  br label %79

61:                                               ; preds = %43
  %62 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 19
  %63 = load i8, i8* %62, align 1, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %79, label %65

65:                                               ; preds = %61
  %66 = bitcast %"class.std::__1::vector.157"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #17
  %67 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11
  call void @_ZNK3gfx14SelectionModel16GetAllSelectionsEv(%"class.std::__1::vector.157"* nonnull sret %8, %"class.gfx::SelectionModel"* %67) #17
  %68 = getelementptr inbounds %"class.std::__1::vector.157", %"class.std::__1::vector.157"* %8, i64 0, i32 0, i32 0
  %69 = load %"class.gfx::Range"*, %"class.gfx::Range"** %68, align 8
  %70 = getelementptr inbounds %"class.std::__1::vector.157", %"class.std::__1::vector.157"* %8, i64 0, i32 0, i32 1
  %71 = load %"class.gfx::Range"*, %"class.gfx::Range"** %70, align 8
  call void @_ZNSt3__16vectorIN3gfx5RangeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.157"* nonnull %6, %"class.gfx::Range"* %69, %"class.gfx::Range"* %71) #17
  %72 = load %"class.gfx::Range"*, %"class.gfx::Range"** %68, align 8
  %73 = icmp eq %"class.gfx::Range"* %72, null
  br i1 %73, label %78, label %74

74:                                               ; preds = %65
  %75 = ptrtoint %"class.gfx::Range"* %72 to i64
  %76 = bitcast %"class.gfx::Range"** %70 to i64*
  store i64 %75, i64* %76, align 8
  %77 = bitcast %"class.gfx::Range"* %72 to i8*
  call void @_ZdlPv(i8* %77) #18
  br label %78

78:                                               ; preds = %65, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #17
  br label %79

79:                                               ; preds = %61, %78, %55
  call void @_ZN3gfx10RenderText14DrawSelectionsEPNS_6CanvasERKNSt3__16vectorINS_5RangeENS3_9allocatorIS5_EEEE(%"class.gfx::RenderText"* %0, %"class.gfx::Canvas"* %1, %"class.std::__1::vector.157"* nonnull dereferenceable(24) %6)
  %80 = bitcast %"class.gfx::internal::SkiaTextRenderer"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %80) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %80, i8* align 8 bitcast (%"class.gfx::internal::SkiaTextRenderer"* @__const._ZN3gfx10RenderText4DrawEPNS_6CanvasEb.renderer to i8*), i64 120, i1 false)
  %81 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3gfx8internal16SkiaTextRendererE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %81, align 8
  %82 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %9, i64 0, i32 1
  store %"class.gfx::Canvas"* %1, %"class.gfx::Canvas"** %82, align 8
  %83 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %9, i64 0, i32 2
  %84 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %1, i64 0, i32 4
  %85 = bitcast %"class.cc::PaintCanvas"** %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"class.cc::PaintCanvas"** %83 to i64*
  store i64 %86, i64* %87, align 8
  %88 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %9, i64 0, i32 3
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* %88) #17
  %89 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %9, i64 0, i32 4
  call void @_ZN6SkFontC1Ev(%class.SkFont* %89) #17
  %90 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %9, i64 0, i32 3, i32 10
  %91 = bitcast %union.anon.71* %90 to i16*
  %92 = load i16, i16* %91, align 8
  %93 = and i16 %92, -193
  store i16 %93, i16* %91, align 8
  call void @_ZN6SkFont9setEdgingENS_6EdgingE(%class.SkFont* %89, i32 2) #17
  call void @_ZN6SkFont11setSubpixelEb(%class.SkFont* %89, i1 zeroext true) #17
  call void @_ZN6SkFont10setHintingE13SkFontHinting(%class.SkFont* %89, i32 2) #17
  %94 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*, %"class.gfx::internal::SkiaTextRenderer"*, %"class.std::__1::vector.157"*)***
  %95 = load void (%"class.gfx::RenderText"*, %"class.gfx::internal::SkiaTextRenderer"*, %"class.std::__1::vector.157"*)**, void (%"class.gfx::RenderText"*, %"class.gfx::internal::SkiaTextRenderer"*, %"class.std::__1::vector.157"*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.gfx::RenderText"*, %"class.gfx::internal::SkiaTextRenderer"*, %"class.std::__1::vector.157"*)*, void (%"class.gfx::RenderText"*, %"class.gfx::internal::SkiaTextRenderer"*, %"class.std::__1::vector.157"*)** %95, i64 14
  %97 = load void (%"class.gfx::RenderText"*, %"class.gfx::internal::SkiaTextRenderer"*, %"class.std::__1::vector.157"*)*, void (%"class.gfx::RenderText"*, %"class.gfx::internal::SkiaTextRenderer"*, %"class.std::__1::vector.157"*)** %96, align 8
  call void %97(%"class.gfx::RenderText"* %0, %"class.gfx::internal::SkiaTextRenderer"* nonnull %9, %"class.std::__1::vector.157"* nonnull dereferenceable(24) %6) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3gfx8internal16SkiaTextRendererE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %81, align 8
  %98 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %9, i64 0, i32 4, i32 0, i32 0
  %99 = load %class.SkTypeface*, %class.SkTypeface** %98, align 8
  %100 = icmp eq %class.SkTypeface* %99, null
  br i1 %100, label %111, label %101

101:                                              ; preds = %79
  %102 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %99, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = atomicrmw add i32* %102, i32 -1 acq_rel
  %104 = icmp eq i32 %103, 1
  br i1 %104, label %105, label %111

105:                                              ; preds = %101
  %106 = bitcast %class.SkTypeface* %99 to %class.SkRefCntBase*
  %107 = bitcast %class.SkTypeface* %99 to void (%class.SkRefCntBase*)***
  %108 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %107, align 8
  %109 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %108, i64 2
  %110 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %109, align 8
  call void %110(%class.SkRefCntBase* nonnull %106) #17
  br label %111

111:                                              ; preds = %79, %101, %105
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* %88) #17
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %80) #17
  %112 = load %"class.gfx::Range"*, %"class.gfx::Range"** %45, align 8
  %113 = icmp eq %"class.gfx::Range"* %112, null
  br i1 %113, label %118, label %114

114:                                              ; preds = %111
  %115 = ptrtoint %"class.gfx::Range"* %112 to i64
  %116 = bitcast %"class.gfx::Range"** %46 to i64*
  store i64 %115, i64* %116, align 8
  %117 = bitcast %"class.gfx::Range"* %112 to i8*
  call void @_ZdlPv(i8* %117) #18
  br label %118

118:                                              ; preds = %111, %114
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #17
  br label %119

119:                                              ; preds = %118, %40
  %120 = load i8, i8* %14, align 8, !range !2
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %123, label %122

122:                                              ; preds = %119
  call void @_ZN3gfx6Canvas7RestoreEv(%"class.gfx::Canvas"* %1) #17
  br label %123

123:                                              ; preds = %119, %122
  ret void
}

declare void @_ZN3gfx4Rect5InsetERKNS_6InsetsE(%"class.gfx::Rect"*, %"class.gfx::Insets"* dereferenceable(16)) local_unnamed_addr #1

declare { i64, i64 } @_ZN3gfx11ShadowValue9GetMarginERKNSt3__16vectorIS0_NS1_9allocatorIS0_EEEE(%"class.std::__1::vector.176"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN3gfx6Canvas4SaveEv(%"class.gfx::Canvas"*) local_unnamed_addr #1

declare void @_ZN3gfx6Canvas8ClipRectERKNS_4RectE8SkClipOp(%"class.gfx::Canvas"*, %"class.gfx::Rect"* dereferenceable(16), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText14DrawSelectionsEPNS_6CanvasERKNSt3__16vectorINS_5RangeENS3_9allocatorIS5_EEEE(%"class.gfx::RenderText"*, %"class.gfx::Canvas"*, %"class.std::__1::vector.157"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca <2 x i64>, align 16
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.gfx::Range"*
  %7 = alloca %"class.std::__1::vector.269", align 8
  %8 = alloca <2 x i64>, align 16
  %9 = bitcast <2 x i64>* %8 to %"class.gfx::Rect"*
  %10 = getelementptr inbounds %"class.std::__1::vector.157", %"class.std::__1::vector.157"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.gfx::Range"*, %"class.gfx::Range"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.157", %"class.std::__1::vector.157"* %2, i64 0, i32 0, i32 1
  %13 = load %"class.gfx::Range"*, %"class.gfx::Range"** %12, align 8
  %14 = icmp eq %"class.gfx::Range"* %11, %13
  br i1 %14, label %35, label %15

15:                                               ; preds = %3
  %16 = bitcast i64* %5 to i8*
  %17 = bitcast i64* %5 to i32*
  %18 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %6, i64 0, i32 1
  %19 = bitcast %"class.std::__1::vector.269"* %7 to i8*
  %20 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.std::__1::vector.269"*, %"class.gfx::RenderText"*, %"class.gfx::Range"*)***
  %21 = getelementptr inbounds %"class.std::__1::vector.269", %"class.std::__1::vector.269"* %7, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::vector.269", %"class.std::__1::vector.269"* %7, i64 0, i32 0, i32 1
  %23 = bitcast <2 x i64>* %8 to i8*
  %24 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %9, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %9, i64 0, i32 1, i32 1
  %26 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 18
  %27 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 44
  %28 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 50
  %29 = bitcast <2 x i64>* %4 to i8*
  %30 = bitcast <2 x i64>* %4 to %"class.gfx::Rect"*
  %31 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 0, i32 1, i32 1
  %33 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 17
  %34 = bitcast %"class.gfx::Rect"** %22 to i64*
  br label %36

35:                                               ; preds = %92, %3
  ret void

36:                                               ; preds = %15, %92
  %37 = phi %"class.gfx::Range"* [ %11, %15 ], [ %93, %92 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  store i32 -1431655766, i32* %17, align 8
  store i32 -1431655766, i32* %18, align 4
  %38 = bitcast %"class.gfx::Range"* %37 to i64*
  %39 = load i64, i64* %38, align 4
  store i64 %39, i64* %5, align 8
  %40 = trunc i64 %39 to i32
  %41 = lshr i64 %39, 32
  %42 = trunc i64 %41 to i32
  %43 = icmp eq i32 %40, %42
  br i1 %43, label %92, label %44

44:                                               ; preds = %36
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #17
  %45 = load void (%"class.std::__1::vector.269"*, %"class.gfx::RenderText"*, %"class.gfx::Range"*)**, void (%"class.std::__1::vector.269"*, %"class.gfx::RenderText"*, %"class.gfx::Range"*)*** %20, align 8
  %46 = getelementptr inbounds void (%"class.std::__1::vector.269"*, %"class.gfx::RenderText"*, %"class.gfx::Range"*)*, void (%"class.std::__1::vector.269"*, %"class.gfx::RenderText"*, %"class.gfx::Range"*)** %45, i64 5
  %47 = load void (%"class.std::__1::vector.269"*, %"class.gfx::RenderText"*, %"class.gfx::Range"*)*, void (%"class.std::__1::vector.269"*, %"class.gfx::RenderText"*, %"class.gfx::Range"*)** %46, align 8
  call void %47(%"class.std::__1::vector.269"* nonnull sret %7, %"class.gfx::RenderText"* %0, %"class.gfx::Range"* nonnull dereferenceable(8) %6) #17
  %48 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %21, align 8
  %49 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %22, align 8
  %50 = icmp eq %"class.gfx::Rect"* %48, %49
  br i1 %50, label %53, label %60

51:                                               ; preds = %88
  %52 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %21, align 8
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi %"class.gfx::Rect"* [ %52, %51 ], [ %48, %44 ]
  %55 = icmp eq %"class.gfx::Rect"* %54, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %53
  %57 = ptrtoint %"class.gfx::Rect"* %54 to i64
  store i64 %57, i64* %34, align 8
  %58 = bitcast %"class.gfx::Rect"* %54 to i8*
  call void @_ZdlPv(i8* %58) #18
  br label %59

59:                                               ; preds = %53, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #17
  br label %92

60:                                               ; preds = %44, %88
  %61 = phi %"class.gfx::Rect"* [ %90, %88 ], [ %48, %44 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #17
  %62 = bitcast %"class.gfx::Rect"* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %23, i8* align 4 %62, i64 16, i1 false)
  %63 = load i8, i8* %26, align 4, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %88, label %65

65:                                               ; preds = %60
  %66 = load i8, i8* %27, align 4, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %68, label %88

68:                                               ; preds = %65
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %29, i8* nonnull align 16 %23, i64 16, i1 false) #17
  %69 = call i64 @_ZNK3gfx4Rect11CenterPointEv(%"class.gfx::Rect"* %28) #17
  %70 = load i32, i32* %24, align 4
  %71 = load i32, i32* %25, align 4
  %72 = lshr i64 %69, 31
  %73 = trunc i64 %72 to i32
  %74 = and i32 %73, -2
  %75 = add i32 %71, %70
  %76 = sub i32 %74, %75
  store i32 %76, i32* %31, align 4
  %77 = load i32, i32* %32, align 4
  %78 = icmp sgt i32 %76, 0
  %79 = icmp sgt i32 %77, 0
  %80 = and i1 %79, %78
  %81 = sub nuw nsw i32 2147483647, %76
  %82 = icmp ult i32 %81, %77
  %83 = and i1 %82, %80
  %84 = select i1 %83, i32 %81, i32 %77
  %85 = icmp sgt i32 %84, 0
  %86 = select i1 %85, i32 %84, i32 0
  store i32 %86, i32* %32, align 4
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* nonnull %30, %"class.gfx::Rect"* nonnull dereferenceable(16) %9) #17
  %87 = load <2 x i64>, <2 x i64>* %4, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29)
  store <2 x i64> %87, <2 x i64>* %8, align 16
  br label %88

88:                                               ; preds = %65, %60, %68
  %89 = load i32, i32* %33, align 8
  call void @_ZN3gfx6Canvas8FillRectERKNS_4RectEj(%"class.gfx::Canvas"* %1, %"class.gfx::Rect"* nonnull dereferenceable(16) %9, i32 %89) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #17
  %90 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %61, i64 1
  %91 = icmp eq %"class.gfx::Rect"* %90, %49
  br i1 %91, label %51, label %60

92:                                               ; preds = %59, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  %93 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %37, i64 1
  %94 = icmp eq %"class.gfx::Range"* %93, %13
  br i1 %94, label %35, label %36
}

declare void @_ZN3gfx6Canvas7RestoreEv(%"class.gfx::Canvas"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gfx10RenderText23GetLineContainingYCoordEf(%"class.gfx::RenderText"*, float) local_unnamed_addr #0 align 2 {
  %3 = fcmp olt float %1, 0.000000e+00
  br i1 %3, label %34, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*)***
  %6 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %6, i64 13
  %8 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %7, align 8
  tail call void %8(%"class.gfx::RenderText"* %0) #17
  %9 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 59, i32 0, i32 0, i32 0
  %10 = load %"class.gfx::internal::ShapedText"*, %"class.gfx::internal::ShapedText"** %9, align 8
  %11 = getelementptr inbounds %"class.gfx::internal::ShapedText", %"class.gfx::internal::ShapedText"* %10, i64 0, i32 0, i32 0, i32 1
  %12 = bitcast %"struct.gfx::internal::Line"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.gfx::internal::ShapedText"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = sdiv exact i64 %16, 48
  %18 = icmp eq i64 %16, 0
  %19 = inttoptr i64 %15 to %"struct.gfx::internal::Line"*
  br i1 %18, label %32, label %20

20:                                               ; preds = %4, %26
  %21 = phi i64 [ %28, %26 ], [ 0, %4 ]
  %22 = phi float [ %27, %26 ], [ %1, %4 ]
  %23 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %19, i64 %21, i32 1, i32 1
  %24 = load float, float* %23, align 4
  %25 = fcmp ugt float %22, %24
  br i1 %25, label %26, label %30

26:                                               ; preds = %20
  %27 = fsub float %22, %24
  %28 = add nuw i64 %21, 1
  %29 = icmp ult i64 %28, %17
  br i1 %29, label %20, label %32

30:                                               ; preds = %20
  %31 = trunc i64 %21 to i32
  br label %34

32:                                               ; preds = %26, %4
  %33 = trunc i64 %17 to i32
  br label %34

34:                                               ; preds = %30, %32, %2
  %35 = phi i32 [ -1, %2 ], [ %33, %32 ], [ %31, %30 ]
  ret i32 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3gfx10RenderText13GetLineOffsetEm(%"class.gfx::RenderText"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.gfx::Vector2d"*
  %5 = alloca %"class.gfx::Vector2d", align 4
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.gfx::Vector2d"*
  %8 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*)***
  %9 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %9, i64 13
  %11 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %10, align 8
  tail call void %11(%"class.gfx::RenderText"* %0) #17
  %12 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 59, i32 0, i32 0, i32 0
  %13 = load %"class.gfx::internal::ShapedText"*, %"class.gfx::internal::ShapedText"** %12, align 8
  %14 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 50, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 50, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = shl nuw i64 %18, 32
  %20 = zext i32 %15 to i64
  %21 = or i64 %19, %20
  store i64 %21, i64* %3, align 8
  %22 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 44
  %23 = load i8, i8* %22, align 4, !range !2
  %24 = icmp eq i8 %23, 0
  tail call void @_ZN3gfx10RenderText27UpdateCachedBoundsAndOffsetEv(%"class.gfx::RenderText"* %0) #17
  %25 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 53
  call void @_ZN3gfx8Vector2d3AddERKS0_(%"class.gfx::Vector2d"* nonnull %4, %"class.gfx::Vector2d"* dereferenceable(8) %25) #17
  br i1 %24, label %34, label %26

26:                                               ; preds = %2
  %27 = bitcast %"class.gfx::Vector2d"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #17
  %28 = getelementptr inbounds %"class.gfx::internal::ShapedText", %"class.gfx::internal::ShapedText"* %13, i64 0, i32 0, i32 0, i32 0
  %29 = load %"struct.gfx::internal::Line"*, %"struct.gfx::internal::Line"** %28, align 8
  %30 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %29, i64 %1, i32 2
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %5, i64 0, i32 0
  store i32 0, i32* %32, align 4
  %33 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %5, i64 0, i32 1
  store i32 %31, i32* %33, align 4
  call void @_ZN3gfx8Vector2d3AddERKS0_(%"class.gfx::Vector2d"* nonnull %4, %"class.gfx::Vector2d"* nonnull dereferenceable(8) %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #17
  br label %34

34:                                               ; preds = %2, %26
  %35 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #17
  %36 = call i64 @_ZN3gfx10RenderText18GetAlignmentOffsetEm(%"class.gfx::RenderText"* %0, i64 %1)
  store i64 %36, i64* %6, align 8
  call void @_ZN3gfx8Vector2d3AddERKS0_(%"class.gfx::Vector2d"* nonnull %4, %"class.gfx::Vector2d"* nonnull dereferenceable(8) %7) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #17
  %37 = load i64, i64* %3, align 8
  ret i64 %37
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gfx10RenderText16IsNewlineSegmentERKNS_8internal11LineSegmentE(%"class.gfx::RenderText"* nocapture readonly, %"struct.gfx::internal::LineSegment"* nocapture readonly dereferenceable(24)) local_unnamed_addr #12 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"struct.gfx::internal::LineSegment", %"struct.gfx::internal::LineSegment"* %1, i64 0, i32 1, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.gfx::internal::LineSegment", %"struct.gfx::internal::LineSegment"* %1, i64 0, i32 1, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %5, %8
  %10 = select i1 %9, i32 %5, i32 %8
  %11 = icmp ult i32 %5, %8
  %12 = select i1 %11, i32 %5, i32 %8
  %13 = sub i32 %10, %12
  switch i32 %13, label %45 [
    i32 1, label %14
    i32 2, label %28
  ]

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %15, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  %21 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  %22 = select i1 %18, i16* %20, i16* %21
  %23 = getelementptr inbounds i16, i16* %22, i64 %6
  %24 = load i16, i16* %23, align 2
  %25 = icmp eq i16 %24, 13
  %26 = icmp eq i16 %24, 10
  %27 = or i1 %25, %26
  ret i1 %27

28:                                               ; preds = %2
  %29 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i16*, i16** %33, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  %36 = select i1 %32, i16* %34, i16* %35
  %37 = getelementptr inbounds i16, i16* %36, i64 %6
  %38 = load i16, i16* %37, align 2
  %39 = icmp eq i16 %38, 13
  br i1 %39, label %40, label %45

40:                                               ; preds = %28
  %41 = add nuw nsw i64 %6, 1
  %42 = getelementptr inbounds i16, i16* %36, i64 %41
  %43 = load i16, i16* %42, align 2
  %44 = icmp eq i16 %43, 10
  br label %45

45:                                               ; preds = %2, %28, %40
  %46 = phi i1 [ false, %28 ], [ %44, %40 ], [ false, %2 ]
  ret i1 %46
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText18LineSelectionModelEmNS_21VisualCursorDirectionE(%"class.gfx::SelectionModel"* noalias sret, %"class.gfx::RenderText"*, i64, i32) local_unnamed_addr #0 align 2 {
  %5 = bitcast %"class.gfx::RenderText"* %1 to void (%"class.gfx::RenderText"*)***
  %6 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %6, i64 13
  %8 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %7, align 8
  tail call void %8(%"class.gfx::RenderText"* %1) #17
  %9 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 59, i32 0, i32 0, i32 0
  %10 = load %"class.gfx::internal::ShapedText"*, %"class.gfx::internal::ShapedText"** %9, align 8
  %11 = getelementptr inbounds %"class.gfx::internal::ShapedText", %"class.gfx::internal::ShapedText"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.gfx::internal::Line"*, %"struct.gfx::internal::Line"** %11, align 8
  %13 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %12, i64 %2
  %14 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"struct.gfx::internal::LineSegment"*, %"struct.gfx::internal::LineSegment"** %14, align 8
  %16 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %12, i64 %2, i32 0, i32 0, i32 1
  %17 = load %"struct.gfx::internal::LineSegment"*, %"struct.gfx::internal::LineSegment"** %16, align 8
  %18 = icmp eq %"struct.gfx::internal::LineSegment"* %15, %17
  %19 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %5, align 8
  %20 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %19, i64 13
  %21 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %20, align 8
  tail call void %21(%"class.gfx::RenderText"* %1) #17
  %22 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 8
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %42

25:                                               ; preds = %4
  %26 = bitcast %"class.gfx::RenderText"* %1 to %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)***
  %27 = load %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)**, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)** %27, i64 2
  %29 = load %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)** %28, align 8
  %30 = tail call dereferenceable(24) %"class.std::__1::basic_string"* %29(%"class.gfx::RenderText"* %1) #17
  %31 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 6
  %32 = load i32, i32* %31, align 8
  switch i32 %32, label %39 [
    i32 0, label %33
    i32 1, label %35
    i32 2, label %40
    i32 3, label %38
    i32 4, label %40
  ]

33:                                               ; preds = %25
  %34 = tail call i32 @_ZN4base4i18n32GetFirstStrongCharacterDirectionERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %30) #17
  br label %40

35:                                               ; preds = %25
  %36 = tail call zeroext i1 @_ZN4base4i18n5IsRTLEv() #17
  %37 = select i1 %36, i32 1, i32 2
  br label %40

38:                                               ; preds = %25
  br label %40

39:                                               ; preds = %25
  br label %40

40:                                               ; preds = %39, %38, %35, %33, %25, %25
  %41 = phi i32 [ 0, %39 ], [ 1, %38 ], [ %37, %35 ], [ %34, %33 ], [ 2, %25 ], [ 2, %25 ]
  store i32 %41, i32* %22, align 8
  br label %42

42:                                               ; preds = %4, %40
  %43 = phi i32 [ %41, %40 ], [ %23, %4 ]
  %44 = icmp eq i32 %43, 2
  %45 = zext i1 %44 to i32
  br i1 %18, label %46, label %47

46:                                               ; preds = %42
  tail call void @_ZN3gfx10RenderText18EdgeSelectionModelENS_21VisualCursorDirectionE(%"class.gfx::SelectionModel"* sret %0, %"class.gfx::RenderText"* %1, i32 %45)
  br label %224

47:                                               ; preds = %42
  %48 = icmp eq i32 %45, %3
  br i1 %48, label %49, label %62

49:                                               ; preds = %47
  %50 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %5, align 8
  %51 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %50, i64 13
  %52 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %51, align 8
  tail call void %52(%"class.gfx::RenderText"* %1) #17
  %53 = load %"class.gfx::internal::ShapedText"*, %"class.gfx::internal::ShapedText"** %9, align 8
  %54 = getelementptr inbounds %"class.gfx::internal::ShapedText", %"class.gfx::internal::ShapedText"* %53, i64 0, i32 0, i32 0, i32 1
  %55 = bitcast %"struct.gfx::internal::Line"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.gfx::internal::ShapedText"* %53 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = sub i64 %56, %58
  %60 = sdiv exact i64 %59, 48
  %61 = add nsw i64 %60, -1
  br label %62

62:                                               ; preds = %47, %49
  %63 = phi i64 [ %61, %49 ], [ 0, %47 ]
  %64 = icmp eq i64 %63, %2
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZN3gfx10RenderText18EdgeSelectionModelENS_21VisualCursorDirectionE(%"class.gfx::SelectionModel"* sret %0, %"class.gfx::RenderText"* %1, i32 %3)
  br label %224

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 3
  %68 = tail call i64 @_ZNK3gfx10RenderText12GetLineRangeERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKNS_8internal4LineE(%"class.gfx::RenderText"* undef, %"class.std::__1::basic_string"* dereferenceable(24) %67, %"struct.gfx::internal::Line"* dereferenceable(48) %13)
  %69 = lshr i64 %68, 32
  %70 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %5, align 8
  %71 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %70, i64 13
  %72 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %71, align 8
  tail call void %72(%"class.gfx::RenderText"* %1) #17
  %73 = load i32, i32* %22, align 8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %92

75:                                               ; preds = %66
  %76 = bitcast %"class.gfx::RenderText"* %1 to %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)***
  %77 = load %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)**, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*** %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)** %77, i64 2
  %79 = load %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)** %78, align 8
  %80 = tail call dereferenceable(24) %"class.std::__1::basic_string"* %79(%"class.gfx::RenderText"* %1) #17
  %81 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 6
  %82 = load i32, i32* %81, align 8
  switch i32 %82, label %89 [
    i32 0, label %83
    i32 1, label %85
    i32 2, label %90
    i32 3, label %88
    i32 4, label %90
  ]

83:                                               ; preds = %75
  %84 = tail call i32 @_ZN4base4i18n32GetFirstStrongCharacterDirectionERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %80) #17
  br label %90

85:                                               ; preds = %75
  %86 = tail call zeroext i1 @_ZN4base4i18n5IsRTLEv() #17
  %87 = select i1 %86, i32 1, i32 2
  br label %90

88:                                               ; preds = %75
  br label %90

89:                                               ; preds = %75
  br label %90

90:                                               ; preds = %89, %88, %85, %83, %75, %75
  %91 = phi i32 [ 0, %89 ], [ 1, %88 ], [ %87, %85 ], [ %84, %83 ], [ 2, %75 ], [ 2, %75 ]
  store i32 %91, i32* %22, align 8
  br label %92

92:                                               ; preds = %66, %90
  %93 = phi i32 [ %91, %90 ], [ %73, %66 ]
  %94 = icmp eq i32 %93, 2
  %95 = zext i1 %94 to i32
  %96 = icmp eq i32 %95, %3
  br i1 %96, label %97, label %160

97:                                               ; preds = %92
  tail call void @_ZNK3gfx10RenderText23EnsureLayoutTextUpdatedEv(%"class.gfx::RenderText"* %1) #17
  %98 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 37
  %99 = bitcast %"class.std::__1::basic_string"* %98 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %99, i64 0, i32 1, i32 1
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  %103 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 37, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %104 = load i64, i64* %103, align 8
  %105 = zext i8 %101 to i64
  %106 = select i1 %102, i64 %104, i64 %105
  %107 = icmp eq i64 %106, %69
  br i1 %107, label %145, label %108

108:                                              ; preds = %97
  %109 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 32, i32 0, i32 0
  %110 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %109, align 8
  %111 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 32, i32 0, i32 1
  %112 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %111, align 8
  %113 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %110 to i64
  %114 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %112 to i64
  %115 = sub i64 %114, %113
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %108
  %118 = ashr exact i64 %115, 4
  br label %119

119:                                              ; preds = %119, %117
  %120 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %110, %117 ], [ %131, %119 ]
  %121 = phi i64 [ %118, %117 ], [ %130, %119 ]
  %122 = lshr i64 %121, 1
  %123 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %120, i64 1
  %124 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %120, i64 %122, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = icmp ult i64 %125, %69
  %127 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %123, i64 %122
  %128 = xor i64 %122, -1
  %129 = add i64 %121, %128
  %130 = select i1 %126, i64 %129, i64 %122
  %131 = select i1 %126, %"struct.gfx::internal::TextToDisplayIndex"* %127, %"struct.gfx::internal::TextToDisplayIndex"* %120
  %132 = icmp eq i64 %130, 0
  br i1 %132, label %133, label %119

133:                                              ; preds = %119, %108
  %134 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %110, %108 ], [ %131, %119 ]
  %135 = icmp eq %"struct.gfx::internal::TextToDisplayIndex"* %134, %112
  br i1 %135, label %140, label %136

136:                                              ; preds = %133
  %137 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %134, i64 0, i32 1
  %138 = load i64, i64* %137, align 8
  %139 = icmp eq i64 %138, %69
  br i1 %139, label %142, label %140

140:                                              ; preds = %136, %133
  %141 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %134, i64 -1
  br label %142

142:                                              ; preds = %140, %136
  %143 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %141, %140 ], [ %134, %136 ]
  %144 = icmp eq %"struct.gfx::internal::TextToDisplayIndex"* %112, %143
  br i1 %144, label %145, label %155

145:                                              ; preds = %142, %97
  %146 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %146, i64 0, i32 1, i32 1
  %148 = load i8, i8* %147, align 1
  %149 = icmp slt i8 %148, 0
  br i1 %149, label %150, label %153

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %152 = load i64, i64* %151, align 8
  br label %158

153:                                              ; preds = %145
  %154 = zext i8 %148 to i64
  br label %158

155:                                              ; preds = %142
  %156 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %143, i64 0, i32 0
  %157 = load i64, i64* %156, align 8
  br label %158

158:                                              ; preds = %150, %153, %155
  %159 = phi i64 [ %157, %155 ], [ %152, %150 ], [ %154, %153 ]
  tail call void @_ZN3gfx14SelectionModelC1EmNS_22LogicalCursorDirectionE(%"class.gfx::SelectionModel"* %0, i64 %159, i32 0) #17
  br label %224

160:                                              ; preds = %92
  %161 = and i64 %68, 4294967295
  tail call void @_ZNK3gfx10RenderText23EnsureLayoutTextUpdatedEv(%"class.gfx::RenderText"* %1) #17
  %162 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 37
  %163 = bitcast %"class.std::__1::basic_string"* %162 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %164 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %163, i64 0, i32 1, i32 1
  %165 = load i8, i8* %164, align 1
  %166 = icmp slt i8 %165, 0
  %167 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 37, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %168 = load i64, i64* %167, align 8
  %169 = zext i8 %165 to i64
  %170 = select i1 %166, i64 %168, i64 %169
  %171 = icmp eq i64 %170, %161
  br i1 %171, label %209, label %172

172:                                              ; preds = %160
  %173 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 32, i32 0, i32 0
  %174 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %173, align 8
  %175 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 32, i32 0, i32 1
  %176 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %175, align 8
  %177 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %174 to i64
  %178 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %176 to i64
  %179 = sub i64 %178, %177
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %197, label %181

181:                                              ; preds = %172
  %182 = ashr exact i64 %179, 4
  br label %183

183:                                              ; preds = %183, %181
  %184 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %174, %181 ], [ %195, %183 ]
  %185 = phi i64 [ %182, %181 ], [ %194, %183 ]
  %186 = lshr i64 %185, 1
  %187 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %184, i64 1
  %188 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %184, i64 %186, i32 1
  %189 = load i64, i64* %188, align 8
  %190 = icmp ult i64 %189, %161
  %191 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %187, i64 %186
  %192 = xor i64 %186, -1
  %193 = add i64 %185, %192
  %194 = select i1 %190, i64 %193, i64 %186
  %195 = select i1 %190, %"struct.gfx::internal::TextToDisplayIndex"* %191, %"struct.gfx::internal::TextToDisplayIndex"* %184
  %196 = icmp eq i64 %194, 0
  br i1 %196, label %197, label %183

197:                                              ; preds = %183, %172
  %198 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %174, %172 ], [ %195, %183 ]
  %199 = icmp eq %"struct.gfx::internal::TextToDisplayIndex"* %198, %176
  br i1 %199, label %204, label %200

200:                                              ; preds = %197
  %201 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %198, i64 0, i32 1
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %202, %161
  br i1 %203, label %206, label %204

204:                                              ; preds = %200, %197
  %205 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %198, i64 -1
  br label %206

206:                                              ; preds = %204, %200
  %207 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %205, %204 ], [ %198, %200 ]
  %208 = icmp eq %"struct.gfx::internal::TextToDisplayIndex"* %176, %207
  br i1 %208, label %209, label %219

209:                                              ; preds = %206, %160
  %210 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %211 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %210, i64 0, i32 1, i32 1
  %212 = load i8, i8* %211, align 1
  %213 = icmp slt i8 %212, 0
  br i1 %213, label %214, label %217

214:                                              ; preds = %209
  %215 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %216 = load i64, i64* %215, align 8
  br label %222

217:                                              ; preds = %209
  %218 = zext i8 %212 to i64
  br label %222

219:                                              ; preds = %206
  %220 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %207, i64 0, i32 0
  %221 = load i64, i64* %220, align 8
  br label %222

222:                                              ; preds = %214, %217, %219
  %223 = phi i64 [ %221, %219 ], [ %216, %214 ], [ %218, %217 ]
  tail call void @_ZN3gfx14SelectionModelC1EmNS_22LogicalCursorDirectionE(%"class.gfx::SelectionModel"* %0, i64 %223, i32 1) #17
  br label %224

224:                                              ; preds = %158, %222, %65, %46
  ret void
}

declare i64 @_ZNK3gfx8internal15TextRunHarfBuzz21CharRangeToGlyphRangeERKNS_5RangeE(%"struct.gfx::internal::TextRunHarfBuzz"*, %"class.gfx::Range"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK3gfx10RenderText23IndexOfAdjacentGraphemeEmNS_22LogicalCursorDirectionE(%"class.gfx::RenderText"*, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %3
  %13 = zext i8 %7 to i64
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %11, %9 ], [ %13, %12 ]
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %134, label %17

17:                                               ; preds = %14
  br i1 %8, label %18, label %21

18:                                               ; preds = %17
  %19 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  br label %23

21:                                               ; preds = %17
  %22 = zext i8 %7 to i64
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i64 [ %20, %18 ], [ %22, %21 ]
  %25 = icmp ult i64 %24, %1
  br i1 %25, label %26, label %32

26:                                               ; preds = %23
  br i1 %8, label %27, label %30

27:                                               ; preds = %26
  %28 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  br label %134

30:                                               ; preds = %26
  %31 = zext i8 %7 to i64
  br label %134

32:                                               ; preds = %23
  tail call void @_ZNK3gfx10RenderText23EnsureLayoutTextUpdatedEv(%"class.gfx::RenderText"* %0)
  %33 = load i8, i8* %6, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  br label %40

38:                                               ; preds = %32
  %39 = zext i8 %33 to i64
  br label %40

40:                                               ; preds = %35, %38
  %41 = phi i64 [ %37, %35 ], [ %39, %38 ]
  %42 = icmp eq i64 %41, %1
  br i1 %42, label %43, label %46

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 32, i32 0, i32 1
  %45 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %44, align 8
  br label %91

46:                                               ; preds = %40
  tail call void @_ZNK3gfx10RenderText23EnsureLayoutTextUpdatedEv(%"class.gfx::RenderText"* %0) #17
  %47 = load i8, i8* %6, align 1
  %48 = icmp slt i8 %47, 0
  %49 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = zext i8 %47 to i64
  %52 = select i1 %48, i64 %50, i64 %51
  %53 = icmp eq i64 %52, %1
  br i1 %53, label %54, label %57

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 32, i32 0, i32 1
  %56 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %55, align 8
  br label %91

57:                                               ; preds = %46
  %58 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 32, i32 0, i32 0
  %59 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %58, align 8
  %60 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 32, i32 0, i32 1
  %61 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %60, align 8
  %62 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %59 to i64
  %63 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %61 to i64
  %64 = sub i64 %63, %62
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %82, label %66

66:                                               ; preds = %57
  %67 = ashr exact i64 %64, 4
  br label %68

68:                                               ; preds = %68, %66
  %69 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %59, %66 ], [ %80, %68 ]
  %70 = phi i64 [ %67, %66 ], [ %79, %68 ]
  %71 = lshr i64 %70, 1
  %72 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %69, i64 %71
  %73 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %72, i64 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = icmp ult i64 %74, %1
  %76 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %72, i64 1
  %77 = xor i64 %71, -1
  %78 = add i64 %70, %77
  %79 = select i1 %75, i64 %78, i64 %71
  %80 = select i1 %75, %"struct.gfx::internal::TextToDisplayIndex"* %76, %"struct.gfx::internal::TextToDisplayIndex"* %69
  %81 = icmp eq i64 %79, 0
  br i1 %81, label %82, label %68

82:                                               ; preds = %68, %57
  %83 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %59, %57 ], [ %80, %68 ]
  %84 = icmp eq %"struct.gfx::internal::TextToDisplayIndex"* %83, %61
  br i1 %84, label %89, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %83, i64 0, i32 0
  %87 = load i64, i64* %86, align 8
  %88 = icmp eq i64 %87, %1
  br i1 %88, label %91, label %89

89:                                               ; preds = %85, %82
  %90 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %83, i64 -1
  br label %91

91:                                               ; preds = %89, %85, %54, %43
  %92 = phi i8 [ %33, %43 ], [ %47, %54 ], [ %47, %89 ], [ %47, %85 ]
  %93 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %45, %43 ], [ %56, %54 ], [ %61, %89 ], [ %61, %85 ]
  %94 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %45, %43 ], [ %56, %54 ], [ %90, %89 ], [ %83, %85 ]
  %95 = icmp eq i32 %2, 1
  br i1 %95, label %96, label %100

96:                                               ; preds = %91
  %97 = icmp eq %"struct.gfx::internal::TextToDisplayIndex"* %94, %93
  %98 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %94, i64 1
  %99 = select i1 %97, %"struct.gfx::internal::TextToDisplayIndex"* %94, %"struct.gfx::internal::TextToDisplayIndex"* %98
  br label %121

100:                                              ; preds = %91
  %101 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 32, i32 0, i32 0
  %102 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %101, align 8
  %103 = icmp eq %"struct.gfx::internal::TextToDisplayIndex"* %94, %102
  br i1 %103, label %121, label %104

104:                                              ; preds = %100
  %105 = icmp eq %"struct.gfx::internal::TextToDisplayIndex"* %93, %94
  br i1 %105, label %106, label %113

106:                                              ; preds = %104
  %107 = icmp slt i8 %92, 0
  br i1 %107, label %108, label %111

108:                                              ; preds = %106
  %109 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %110 = load i64, i64* %109, align 8
  br label %116

111:                                              ; preds = %106
  %112 = zext i8 %92 to i64
  br label %116

113:                                              ; preds = %104
  %114 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %94, i64 0, i32 0
  %115 = load i64, i64* %114, align 8
  br label %116

116:                                              ; preds = %108, %111, %113
  %117 = phi i64 [ %115, %113 ], [ %110, %108 ], [ %112, %111 ]
  %118 = icmp eq i64 %117, %1
  %119 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %94, i64 -1
  %120 = select i1 %118, %"struct.gfx::internal::TextToDisplayIndex"* %119, %"struct.gfx::internal::TextToDisplayIndex"* %94
  br label %121

121:                                              ; preds = %116, %96, %100
  %122 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %94, %100 ], [ %99, %96 ], [ %120, %116 ]
  %123 = icmp eq %"struct.gfx::internal::TextToDisplayIndex"* %93, %122
  br i1 %123, label %124, label %131

124:                                              ; preds = %121
  %125 = icmp slt i8 %92, 0
  br i1 %125, label %126, label %129

126:                                              ; preds = %124
  %127 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %128 = load i64, i64* %127, align 8
  br label %134

129:                                              ; preds = %124
  %130 = zext i8 %92 to i64
  br label %134

131:                                              ; preds = %121
  %132 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %122, i64 0, i32 0
  %133 = load i64, i64* %132, align 8
  br label %134

134:                                              ; preds = %131, %129, %126, %30, %27, %14
  %135 = phi i64 [ 0, %14 ], [ %29, %27 ], [ %31, %30 ], [ %133, %131 ], [ %128, %126 ], [ %130, %129 ]
  ret i64 %135
}

declare zeroext i1 @_ZN3gfx21IsValidCodePointIndexERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEm(%"class.std::__1::basic_string"* dereferenceable(24), i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3gfx10RenderText18IsGraphemeBoundaryEm(%"class.gfx::RenderText"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  br label %13

11:                                               ; preds = %2
  %12 = zext i8 %6 to i64
  br label %13

13:                                               ; preds = %8, %11
  %14 = phi i64 [ %10, %8 ], [ %12, %11 ]
  %15 = icmp ugt i64 %14, %1
  br i1 %15, label %16, label %67

16:                                               ; preds = %13
  tail call void @_ZNK3gfx10RenderText23EnsureLayoutTextUpdatedEv(%"class.gfx::RenderText"* %0) #17
  %17 = load i8, i8* %5, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = zext i8 %17 to i64
  %22 = select i1 %18, i64 %20, i64 %21
  %23 = icmp eq i64 %22, %1
  br i1 %23, label %64, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 32, i32 0, i32 0
  %26 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %25, align 8
  %27 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 32, i32 0, i32 1
  %28 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %27, align 8
  %29 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %26 to i64
  %30 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %28 to i64
  %31 = sub i64 %30, %29
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %49, label %33

33:                                               ; preds = %24
  %34 = ashr exact i64 %31, 4
  br label %35

35:                                               ; preds = %35, %33
  %36 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %26, %33 ], [ %47, %35 ]
  %37 = phi i64 [ %34, %33 ], [ %46, %35 ]
  %38 = lshr i64 %37, 1
  %39 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %36, i64 %38
  %40 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %39, i64 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = icmp ult i64 %41, %1
  %43 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %39, i64 1
  %44 = xor i64 %38, -1
  %45 = add i64 %37, %44
  %46 = select i1 %42, i64 %45, i64 %38
  %47 = select i1 %42, %"struct.gfx::internal::TextToDisplayIndex"* %43, %"struct.gfx::internal::TextToDisplayIndex"* %36
  %48 = icmp eq i64 %46, 0
  br i1 %48, label %49, label %35

49:                                               ; preds = %35, %24
  %50 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %26, %24 ], [ %47, %35 ]
  %51 = icmp eq %"struct.gfx::internal::TextToDisplayIndex"* %50, %28
  br i1 %51, label %56, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %50, i64 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64 %54, %1
  br i1 %55, label %58, label %56

56:                                               ; preds = %52, %49
  %57 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %50, i64 -1
  br label %58

58:                                               ; preds = %52, %56
  %59 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %57, %56 ], [ %50, %52 ]
  %60 = icmp eq %"struct.gfx::internal::TextToDisplayIndex"* %28, %59
  br i1 %60, label %64, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %59, i64 0, i32 0
  %63 = load i64, i64* %62, align 8
  br label %64

64:                                               ; preds = %16, %58, %61
  %65 = phi i64 [ %63, %61 ], [ %22, %58 ], [ %22, %16 ]
  %66 = icmp eq i64 %65, %1
  br label %67

67:                                               ; preds = %13, %64
  %68 = phi i1 [ true, %13 ], [ %66, %64 ]
  ret i1 %68
}

declare i64 @_ZN3gfx12ToCeiledSizeERKNS_5SizeFE(%"class.gfx::SizeF"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3gfx10RenderText11ToViewPointERKNS_6PointFENS_22LogicalCursorDirectionE(%"class.gfx::RenderText"*, %"class.gfx::PointF"* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*)***
  %5 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %5, i64 13
  %7 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %6, align 8
  tail call void %7(%"class.gfx::RenderText"* %0) #17
  %8 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 59, i32 0, i32 0, i32 0
  %9 = load %"class.gfx::internal::ShapedText"*, %"class.gfx::internal::ShapedText"** %8, align 8
  %10 = getelementptr inbounds %"class.gfx::internal::ShapedText", %"class.gfx::internal::ShapedText"* %9, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast %"struct.gfx::internal::Line"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.gfx::internal::ShapedText"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = sdiv exact i64 %15, 48
  %17 = icmp eq i64 %15, 48
  br i1 %17, label %18, label %59

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %1, i64 0, i32 0
  %20 = load float, float* %19, align 4
  %21 = fcmp olt float %20, 0x3F50624DE0000000
  %22 = select i1 %21, float 0.000000e+00, float %20
  %23 = tail call float @llvm.ceil.f32(float %22) #17
  %24 = fcmp ult float %23, 0xC1E0000000000000
  %25 = fcmp ugt float %23, 0x41DFFFFFE0000000
  %26 = fcmp ogt float %23, 0xC1E0000000000000
  %27 = select i1 %26, float %23, float 0xC1E0000000000000
  %28 = fptosi float %27 to i32
  %29 = select i1 %24, i32 0, i32 2147483647
  %30 = select i1 %25, i32 %29, i32 %28
  %31 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %1, i64 0, i32 1
  %32 = load float, float* %31, align 4
  %33 = fcmp ult float %32, 0.000000e+00
  %34 = fadd float %32, 5.000000e-01
  %35 = tail call float @llvm.floor.f32(float %34) #17
  %36 = fadd float %32, -5.000000e-01
  %37 = tail call float @llvm.ceil.f32(float %36) #17
  %38 = select i1 %33, float %37, float %35
  %39 = fcmp ult float %38, 0xC1E0000000000000
  %40 = fcmp ugt float %38, 0x41DFFFFFE0000000
  %41 = fcmp ogt float %38, 0xC1E0000000000000
  %42 = select i1 %41, float %38, float 0xC1E0000000000000
  %43 = fptosi float %42 to i32
  %44 = select i1 %39, i32 0, i32 2147483647
  %45 = select i1 %40, i32 %44, i32 %43
  %46 = tail call i64 @_ZN3gfx10RenderText13GetLineOffsetEm(%"class.gfx::RenderText"* %0, i64 0)
  %47 = trunc i64 %46 to i32
  %48 = lshr i64 %46, 32
  %49 = trunc i64 %48 to i32
  %50 = icmp slt i32 %47, 0
  %51 = select i1 %50, i32 -2147483648, i32 2147483647
  %52 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %30, i32 %47) #17
  %53 = extractvalue { i32, i1 } %52, 1
  %54 = extractvalue { i32, i1 } %52, 0
  %55 = select i1 %53, i32 %51, i32 %54, !prof !41
  %56 = icmp slt i32 %49, 0
  %57 = select i1 %56, i32 -2147483648, i32 2147483647
  %58 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %45, i32 %49) #17
  br label %360

59:                                               ; preds = %3
  %60 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %4, align 8
  %61 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %60, i64 13
  %62 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %61, align 8
  tail call void %62(%"class.gfx::RenderText"* %0) #17
  %63 = load %"class.gfx::internal::ShapedText"*, %"class.gfx::internal::ShapedText"** %8, align 8
  %64 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %1, i64 0, i32 0
  %65 = load float, float* %64, align 4
  %66 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %4, align 8
  %67 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %66, i64 13
  %68 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %67, align 8
  tail call void %68(%"class.gfx::RenderText"* %0) #17
  %69 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 8
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %89

72:                                               ; preds = %59
  %73 = bitcast %"class.gfx::RenderText"* %0 to %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)***
  %74 = load %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)**, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*** %73, align 8
  %75 = getelementptr inbounds %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)** %74, i64 2
  %76 = load %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)** %75, align 8
  %77 = tail call dereferenceable(24) %"class.std::__1::basic_string"* %76(%"class.gfx::RenderText"* %0) #17
  %78 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 6
  %79 = load i32, i32* %78, align 8
  switch i32 %79, label %86 [
    i32 0, label %80
    i32 1, label %82
    i32 2, label %87
    i32 3, label %85
    i32 4, label %87
  ]

80:                                               ; preds = %72
  %81 = tail call i32 @_ZN4base4i18n32GetFirstStrongCharacterDirectionERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %77) #17
  br label %87

82:                                               ; preds = %72
  %83 = tail call zeroext i1 @_ZN4base4i18n5IsRTLEv() #17
  %84 = select i1 %83, i32 1, i32 2
  br label %87

85:                                               ; preds = %72
  br label %87

86:                                               ; preds = %72
  br label %87

87:                                               ; preds = %86, %85, %82, %80, %72, %72
  %88 = phi i32 [ 0, %86 ], [ 1, %85 ], [ %84, %82 ], [ %81, %80 ], [ 2, %72 ], [ 2, %72 ]
  store i32 %88, i32* %69, align 8
  br label %89

89:                                               ; preds = %59, %87
  %90 = phi i32 [ %88, %87 ], [ %70, %59 ]
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %97, label %92

92:                                               ; preds = %89
  %93 = icmp eq i64 %15, 0
  br i1 %93, label %247, label %94

94:                                               ; preds = %92
  %95 = getelementptr inbounds %"class.gfx::internal::ShapedText", %"class.gfx::internal::ShapedText"* %63, i64 0, i32 0, i32 0, i32 0
  %96 = load %"struct.gfx::internal::Line"*, %"struct.gfx::internal::Line"** %95, align 8
  br label %237

97:                                               ; preds = %89
  %98 = add nsw i64 %16, -1
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %116, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"class.gfx::internal::ShapedText", %"class.gfx::internal::ShapedText"* %63, i64 0, i32 0, i32 0, i32 0
  %102 = load %"struct.gfx::internal::Line"*, %"struct.gfx::internal::Line"** %101, align 8
  br label %103

103:                                              ; preds = %100, %113
  %104 = phi i64 [ %98, %100 ], [ %114, %113 ]
  %105 = phi float [ %65, %100 ], [ %109, %113 ]
  %106 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %102, i64 %104, i32 1, i32 0
  %107 = load float, float* %106, align 4
  %108 = fcmp ule float %105, %107
  %109 = fsub float %105, %107
  %110 = tail call float @llvm.fabs.f32(float %109) #17
  %111 = fcmp ugt float %110, 0x3F50624DE0000000
  %112 = and i1 %108, %111
  br i1 %112, label %116, label %113

113:                                              ; preds = %103
  %114 = add i64 %104, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %103

116:                                              ; preds = %113, %103, %97
  %117 = phi float [ %65, %97 ], [ %109, %113 ], [ %105, %103 ]
  %118 = phi i64 [ 0, %97 ], [ 0, %113 ], [ %104, %103 ]
  %119 = icmp ult i64 %118, %98
  br i1 %119, label %120, label %319

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.gfx::internal::ShapedText", %"class.gfx::internal::ShapedText"* %63, i64 0, i32 0, i32 0, i32 0
  %122 = load %"struct.gfx::internal::Line"*, %"struct.gfx::internal::Line"** %121, align 8
  %123 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %122, i64 %118, i32 0, i32 0, i32 0
  %124 = load %"struct.gfx::internal::LineSegment"*, %"struct.gfx::internal::LineSegment"** %123, align 8
  %125 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3
  %126 = getelementptr inbounds %"struct.gfx::internal::LineSegment", %"struct.gfx::internal::LineSegment"* %124, i64 0, i32 1, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = zext i32 %127 to i64
  %129 = getelementptr inbounds %"struct.gfx::internal::LineSegment", %"struct.gfx::internal::LineSegment"* %124, i64 0, i32 1, i32 1
  %130 = load i32, i32* %129, align 4
  %131 = icmp ugt i32 %127, %130
  %132 = select i1 %131, i32 %127, i32 %130
  %133 = icmp ult i32 %127, %130
  %134 = select i1 %133, i32 %127, i32 %130
  %135 = sub i32 %132, %134
  switch i32 %135, label %167 [
    i32 1, label %136
    i32 2, label %150
  ]

136:                                              ; preds = %120
  %137 = bitcast %"class.std::__1::basic_string"* %125 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %138 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %137, i64 0, i32 1, i32 1
  %139 = load i8, i8* %138, align 1
  %140 = icmp slt i8 %139, 0
  %141 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %125, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load i16*, i16** %141, align 8
  %143 = bitcast %"class.std::__1::basic_string"* %125 to i16*
  %144 = select i1 %140, i16* %142, i16* %143
  %145 = getelementptr inbounds i16, i16* %144, i64 %128
  %146 = load i16, i16* %145, align 2
  %147 = icmp eq i16 %146, 13
  %148 = icmp eq i16 %146, 10
  %149 = or i1 %147, %148
  br label %167

150:                                              ; preds = %120
  %151 = bitcast %"class.std::__1::basic_string"* %125 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %152 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %151, i64 0, i32 1, i32 1
  %153 = load i8, i8* %152, align 1
  %154 = icmp slt i8 %153, 0
  %155 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %125, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load i16*, i16** %155, align 8
  %157 = bitcast %"class.std::__1::basic_string"* %125 to i16*
  %158 = select i1 %154, i16* %156, i16* %157
  %159 = getelementptr inbounds i16, i16* %158, i64 %128
  %160 = load i16, i16* %159, align 2
  %161 = icmp eq i16 %160, 13
  br i1 %161, label %162, label %167

162:                                              ; preds = %150
  %163 = add nuw nsw i64 %128, 1
  %164 = getelementptr inbounds i16, i16* %158, i64 %163
  %165 = load i16, i16* %164, align 2
  %166 = icmp eq i16 %165, 10
  br label %167

167:                                              ; preds = %120, %150, %162, %136
  %168 = phi i1 [ %149, %136 ], [ false, %150 ], [ %166, %162 ], [ false, %120 ]
  %169 = icmp eq i32 %2, 1
  %170 = or i1 %169, %168
  br i1 %170, label %171, label %319

171:                                              ; preds = %167
  %172 = tail call float @llvm.fabs.f32(float %117) #17
  %173 = fcmp ugt float %172, 0x3F50624DE0000000
  br i1 %173, label %180, label %174

174:                                              ; preds = %171
  %175 = add nuw i64 %118, 1
  %176 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %122, i64 %175, i32 1, i32 0
  %177 = load float, float* %176, align 4
  %178 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %122, i64 %175, i32 0, i32 0, i32 0
  %179 = load %"struct.gfx::internal::LineSegment"*, %"struct.gfx::internal::LineSegment"** %178, align 8
  br label %180

180:                                              ; preds = %171, %174
  %181 = phi %"struct.gfx::internal::LineSegment"* [ %179, %174 ], [ %124, %171 ]
  %182 = phi float [ %177, %174 ], [ %117, %171 ]
  %183 = phi i64 [ %175, %174 ], [ %118, %171 ]
  %184 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %122, i64 %183, i32 0, i32 0, i32 1
  %185 = load %"struct.gfx::internal::LineSegment"*, %"struct.gfx::internal::LineSegment"** %184, align 8
  %186 = icmp eq %"struct.gfx::internal::LineSegment"* %181, %185
  br i1 %186, label %319, label %187

187:                                              ; preds = %180
  %188 = getelementptr inbounds %"struct.gfx::internal::LineSegment", %"struct.gfx::internal::LineSegment"* %181, i64 0, i32 1, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = zext i32 %189 to i64
  %191 = getelementptr inbounds %"struct.gfx::internal::LineSegment", %"struct.gfx::internal::LineSegment"* %181, i64 0, i32 1, i32 1
  %192 = load i32, i32* %191, align 4
  %193 = icmp ugt i32 %189, %192
  %194 = select i1 %193, i32 %189, i32 %192
  %195 = icmp ult i32 %189, %192
  %196 = select i1 %195, i32 %189, i32 %192
  %197 = sub i32 %194, %196
  switch i32 %197, label %319 [
    i32 1, label %198
    i32 2, label %209
  ]

198:                                              ; preds = %187
  %199 = bitcast %"class.std::__1::basic_string"* %125 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %200 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %199, i64 0, i32 1, i32 1
  %201 = load i8, i8* %200, align 1
  %202 = icmp slt i8 %201, 0
  %203 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %125, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load i16*, i16** %203, align 8
  %205 = bitcast %"class.std::__1::basic_string"* %125 to i16*
  %206 = select i1 %202, i16* %204, i16* %205
  %207 = getelementptr inbounds i16, i16* %206, i64 %190
  %208 = load i16, i16* %207, align 2
  switch i16 %208, label %319 [
    i16 13, label %226
    i16 10, label %226
  ]

209:                                              ; preds = %187
  %210 = bitcast %"class.std::__1::basic_string"* %125 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %211 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %210, i64 0, i32 1, i32 1
  %212 = load i8, i8* %211, align 1
  %213 = icmp slt i8 %212, 0
  %214 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %125, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load i16*, i16** %214, align 8
  %216 = bitcast %"class.std::__1::basic_string"* %125 to i16*
  %217 = select i1 %213, i16* %215, i16* %216
  %218 = getelementptr inbounds i16, i16* %217, i64 %190
  %219 = load i16, i16* %218, align 2
  %220 = icmp eq i16 %219, 13
  br i1 %220, label %221, label %319

221:                                              ; preds = %209
  %222 = add nuw nsw i64 %190, 1
  %223 = getelementptr inbounds i16, i16* %217, i64 %222
  %224 = load i16, i16* %223, align 2
  %225 = icmp eq i16 %224, 10
  br i1 %225, label %226, label %319

226:                                              ; preds = %198, %198, %221
  %227 = getelementptr inbounds %"struct.gfx::internal::LineSegment", %"struct.gfx::internal::LineSegment"* %181, i64 0, i32 0, i32 0
  %228 = load float, float* %227, align 4
  %229 = getelementptr inbounds %"struct.gfx::internal::LineSegment", %"struct.gfx::internal::LineSegment"* %181, i64 0, i32 0, i32 1
  %230 = load float, float* %229, align 4
  %231 = fcmp ogt float %228, %230
  %232 = select i1 %231, float %228, float %230
  %233 = fcmp olt float %228, %230
  %234 = select i1 %233, float %228, float %230
  %235 = fsub float %232, %234
  %236 = fsub float %182, %235
  br label %319

237:                                              ; preds = %94, %244
  %238 = phi i64 [ 0, %94 ], [ %245, %244 ]
  %239 = phi float [ %65, %94 ], [ %242, %244 ]
  %240 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %96, i64 %238, i32 1, i32 0
  %241 = load float, float* %240, align 4
  %242 = fsub float %239, %241
  %243 = fcmp ogt float %242, 0x3F50624DE0000000
  br i1 %243, label %244, label %247

244:                                              ; preds = %237
  %245 = add nuw i64 %238, 1
  %246 = icmp ult i64 %245, %16
  br i1 %246, label %237, label %247

247:                                              ; preds = %237, %244, %92
  %248 = phi float [ %65, %92 ], [ %242, %244 ], [ %239, %237 ]
  %249 = phi i64 [ 0, %92 ], [ %245, %244 ], [ %238, %237 ]
  %250 = icmp eq i64 %249, %16
  %251 = add nsw i64 %16, -1
  br i1 %250, label %252, label %257

252:                                              ; preds = %247
  %253 = getelementptr inbounds %"class.gfx::internal::ShapedText", %"class.gfx::internal::ShapedText"* %63, i64 0, i32 0, i32 0, i32 0
  %254 = load %"struct.gfx::internal::Line"*, %"struct.gfx::internal::Line"** %253, align 8
  %255 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %254, i64 %251, i32 1, i32 0
  %256 = load float, float* %255, align 4
  br label %319

257:                                              ; preds = %247
  %258 = icmp ult i64 %249, %251
  br i1 %258, label %259, label %319

259:                                              ; preds = %257
  %260 = getelementptr inbounds %"class.gfx::internal::ShapedText", %"class.gfx::internal::ShapedText"* %63, i64 0, i32 0, i32 0, i32 0
  %261 = load %"struct.gfx::internal::Line"*, %"struct.gfx::internal::Line"** %260, align 8
  %262 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %261, i64 %249, i32 1, i32 0
  %263 = load float, float* %262, align 4
  %264 = fsub float %263, %248
  %265 = tail call float @llvm.fabs.f32(float %264) #17
  %266 = fcmp ugt float %265, 0x3F50624DE0000000
  br i1 %266, label %319, label %267

267:                                              ; preds = %259
  %268 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %261, i64 %249, i32 0, i32 0, i32 1
  %269 = load %"struct.gfx::internal::LineSegment"*, %"struct.gfx::internal::LineSegment"** %268, align 8
  %270 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3
  %271 = getelementptr inbounds %"struct.gfx::internal::LineSegment", %"struct.gfx::internal::LineSegment"* %269, i64 -1, i32 1, i32 0
  %272 = load i32, i32* %271, align 4
  %273 = zext i32 %272 to i64
  %274 = getelementptr inbounds %"struct.gfx::internal::LineSegment", %"struct.gfx::internal::LineSegment"* %269, i64 -1, i32 1, i32 1
  %275 = load i32, i32* %274, align 4
  %276 = icmp ugt i32 %272, %275
  %277 = select i1 %276, i32 %272, i32 %275
  %278 = icmp ult i32 %272, %275
  %279 = select i1 %278, i32 %272, i32 %275
  %280 = sub i32 %277, %279
  switch i32 %280, label %312 [
    i32 1, label %281
    i32 2, label %295
  ]

281:                                              ; preds = %267
  %282 = bitcast %"class.std::__1::basic_string"* %270 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %283 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %282, i64 0, i32 1, i32 1
  %284 = load i8, i8* %283, align 1
  %285 = icmp slt i8 %284, 0
  %286 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %270, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %287 = load i16*, i16** %286, align 8
  %288 = bitcast %"class.std::__1::basic_string"* %270 to i16*
  %289 = select i1 %285, i16* %287, i16* %288
  %290 = getelementptr inbounds i16, i16* %289, i64 %273
  %291 = load i16, i16* %290, align 2
  %292 = icmp eq i16 %291, 13
  %293 = icmp eq i16 %291, 10
  %294 = or i1 %292, %293
  br label %312

295:                                              ; preds = %267
  %296 = bitcast %"class.std::__1::basic_string"* %270 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %297 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %296, i64 0, i32 1, i32 1
  %298 = load i8, i8* %297, align 1
  %299 = icmp slt i8 %298, 0
  %300 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %270, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %301 = load i16*, i16** %300, align 8
  %302 = bitcast %"class.std::__1::basic_string"* %270 to i16*
  %303 = select i1 %299, i16* %301, i16* %302
  %304 = getelementptr inbounds i16, i16* %303, i64 %273
  %305 = load i16, i16* %304, align 2
  %306 = icmp eq i16 %305, 13
  br i1 %306, label %307, label %312

307:                                              ; preds = %295
  %308 = add nuw nsw i64 %273, 1
  %309 = getelementptr inbounds i16, i16* %303, i64 %308
  %310 = load i16, i16* %309, align 2
  %311 = icmp eq i16 %310, 10
  br label %312

312:                                              ; preds = %267, %295, %307, %281
  %313 = phi i1 [ %294, %281 ], [ false, %295 ], [ %311, %307 ], [ false, %267 ]
  %314 = icmp eq i32 %2, 1
  %315 = or i1 %314, %313
  %316 = select i1 %315, float 0.000000e+00, float %248
  %317 = zext i1 %315 to i64
  %318 = add nuw i64 %249, %317
  br label %319

319:                                              ; preds = %259, %198, %187, %209, %312, %252, %257, %116, %167, %226, %221, %180
  %320 = phi float [ %182, %180 ], [ %236, %226 ], [ %182, %221 ], [ %117, %167 ], [ %117, %116 ], [ %256, %252 ], [ %248, %259 ], [ %248, %257 ], [ %316, %312 ], [ %182, %198 ], [ %182, %209 ], [ %182, %187 ]
  %321 = phi i64 [ %183, %180 ], [ %183, %226 ], [ %183, %221 ], [ %118, %167 ], [ %118, %116 ], [ %251, %252 ], [ %249, %259 ], [ %249, %257 ], [ %318, %312 ], [ %183, %198 ], [ %183, %209 ], [ %183, %187 ]
  %322 = fcmp olt float %320, 0x3F50624DE0000000
  %323 = select i1 %322, float 0.000000e+00, float %320
  %324 = tail call float @llvm.ceil.f32(float %323) #17
  %325 = fcmp ult float %324, 0xC1E0000000000000
  %326 = fcmp ugt float %324, 0x41DFFFFFE0000000
  %327 = fcmp ogt float %324, 0xC1E0000000000000
  %328 = select i1 %327, float %324, float 0xC1E0000000000000
  %329 = fptosi float %328 to i32
  %330 = select i1 %325, i32 0, i32 2147483647
  %331 = select i1 %326, i32 %330, i32 %329
  %332 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %1, i64 0, i32 1
  %333 = load float, float* %332, align 4
  %334 = fcmp ult float %333, 0.000000e+00
  %335 = fadd float %333, 5.000000e-01
  %336 = tail call float @llvm.floor.f32(float %335) #17
  %337 = fadd float %333, -5.000000e-01
  %338 = tail call float @llvm.ceil.f32(float %337) #17
  %339 = select i1 %334, float %338, float %336
  %340 = fcmp ult float %339, 0xC1E0000000000000
  %341 = fcmp ugt float %339, 0x41DFFFFFE0000000
  %342 = fcmp ogt float %339, 0xC1E0000000000000
  %343 = select i1 %342, float %339, float 0xC1E0000000000000
  %344 = fptosi float %343 to i32
  %345 = select i1 %340, i32 0, i32 2147483647
  %346 = select i1 %341, i32 %345, i32 %344
  %347 = tail call i64 @_ZN3gfx10RenderText13GetLineOffsetEm(%"class.gfx::RenderText"* %0, i64 %321)
  %348 = trunc i64 %347 to i32
  %349 = lshr i64 %347, 32
  %350 = trunc i64 %349 to i32
  %351 = icmp slt i32 %348, 0
  %352 = select i1 %351, i32 -2147483648, i32 2147483647
  %353 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %331, i32 %348) #17
  %354 = extractvalue { i32, i1 } %353, 1
  %355 = extractvalue { i32, i1 } %353, 0
  %356 = select i1 %354, i32 %352, i32 %355, !prof !41
  %357 = icmp slt i32 %350, 0
  %358 = select i1 %357, i32 -2147483648, i32 2147483647
  %359 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %346, i32 %350) #17
  br label %360

360:                                              ; preds = %319, %18
  %361 = phi { i32, i1 } [ %359, %319 ], [ %58, %18 ]
  %362 = phi i32 [ %358, %319 ], [ %57, %18 ]
  %363 = phi i32 [ %356, %319 ], [ %55, %18 ]
  %364 = extractvalue { i32, i1 } %361, 1
  %365 = extractvalue { i32, i1 } %361, 0
  %366 = select i1 %364, i32 %362, i32 %365
  %367 = zext i32 %366 to i64
  %368 = shl nuw i64 %367, 32
  %369 = zext i32 %363 to i64
  %370 = or i64 %368, %369
  ret i64 %370
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.gfx::Rect"* @_ZN3gfx10RenderText22GetUpdatedCursorBoundsEv(%"class.gfx::RenderText"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN3gfx10RenderText27UpdateCachedBoundsAndOffsetEv(%"class.gfx::RenderText"* %0)
  %2 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 12
  ret %"class.gfx::Rect"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText27UpdateCachedBoundsAndOffsetEv(%"class.gfx::RenderText"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = alloca %"class.gfx::Vector2d", align 4
  %4 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 55
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %70

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 13
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %58, label %11

11:                                               ; preds = %7
  store i8 1, i8* %4, align 8
  %12 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11
  %13 = tail call { i64, i64 } @_ZN3gfx10RenderText15GetCursorBoundsERKNS_14SelectionModelEb(%"class.gfx::RenderText"* %0, %"class.gfx::SelectionModel"* dereferenceable(40) %12, i1 zeroext true)
  %14 = extractvalue { i64, i64 } %13, 0
  %15 = extractvalue { i64, i64 } %13, 1
  %16 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 12
  %17 = bitcast %"class.gfx::Rect"* %16 to i64*
  store i64 %14, i64* %17, align 8
  %18 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 12, i32 1
  %19 = bitcast %"class.gfx::Size"* %18 to i64*
  store i64 %15, i64* %19, align 8
  %20 = trunc i64 %14 to i32
  %21 = trunc i64 %15 to i32
  %22 = add nsw i32 %21, %20
  %23 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 50, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 50, i32 1, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = add nsw i32 %26, %24
  %28 = icmp slt i32 %27, %22
  %29 = lshr i64 %14, 32
  %30 = trunc i64 %29 to i32
  %31 = lshr i64 %15, 32
  %32 = trunc i64 %31 to i32
  br i1 %28, label %33, label %35

33:                                               ; preds = %11
  %34 = sub nsw i32 %27, %22
  br label %39

35:                                               ; preds = %11
  %36 = icmp sgt i32 %24, %20
  %37 = sub nsw i32 %24, %20
  %38 = select i1 %36, i32 %37, i32 0
  br label %39

39:                                               ; preds = %35, %33
  %40 = phi i32 [ %34, %33 ], [ %38, %35 ]
  %41 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 5
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %58

44:                                               ; preds = %39
  %45 = add nsw i32 %32, %30
  %46 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 50, i32 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 50, i32 1, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = add nsw i32 %49, %47
  %51 = icmp slt i32 %50, %45
  br i1 %51, label %52, label %54

52:                                               ; preds = %44
  %53 = sub nsw i32 %50, %45
  br label %58

54:                                               ; preds = %44
  %55 = icmp sgt i32 %47, %30
  %56 = sub nsw i32 %47, %30
  %57 = select i1 %55, i32 %56, i32 0
  br label %58

58:                                               ; preds = %7, %54, %39, %52
  %59 = phi i32 [ %53, %52 ], [ 0, %39 ], [ 0, %7 ], [ %57, %54 ]
  %60 = phi i32 [ %40, %52 ], [ %40, %39 ], [ 0, %7 ], [ %40, %54 ]
  %61 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 53
  %62 = bitcast %"class.gfx::Vector2d"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #17
  %63 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %3, i64 0, i32 0
  store i32 %60, i32* %63, align 4
  %64 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %3, i64 0, i32 1
  store i32 %59, i32* %64, align 4
  %65 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65)
  %66 = bitcast i64* %2 to %"class.gfx::Vector2d"*
  %67 = bitcast %"class.gfx::Vector2d"* %61 to i64*
  %68 = load i64, i64* %67, align 4
  store i64 %68, i64* %2, align 8
  call void @_ZN3gfx8Vector2d3AddERKS0_(%"class.gfx::Vector2d"* nonnull %66, %"class.gfx::Vector2d"* nonnull dereferenceable(8) %3) #17
  %69 = load i64, i64* %2, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65)
  call void @_ZN3gfx10RenderText16SetDisplayOffsetENS_8Vector2dE(%"class.gfx::RenderText"* %0, i64 %69)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #17
  br label %70

70:                                               ; preds = %1, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.gfx::internal::TextToDisplayIndex"* @_ZNK3gfx10RenderText30GetGraphemeIteratorAtTextIndexEm(%"class.gfx::RenderText"*, i64) local_unnamed_addr #0 align 2 {
  tail call void @_ZNK3gfx10RenderText23EnsureLayoutTextUpdatedEv(%"class.gfx::RenderText"* %0)
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = zext i8 %6 to i64
  %11 = select i1 %7, i64 %9, i64 %10
  %12 = icmp eq i64 %11, %1
  br i1 %12, label %13, label %16

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 32, i32 0, i32 1
  %15 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %14, align 8
  br label %50

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 32, i32 0, i32 0
  %18 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %17, align 8
  %19 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 32, i32 0, i32 1
  %20 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %19, align 8
  %21 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %18 to i64
  %22 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %20 to i64
  %23 = sub i64 %22, %21
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %16
  %26 = ashr exact i64 %23, 4
  br label %27

27:                                               ; preds = %27, %25
  %28 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %18, %25 ], [ %39, %27 ]
  %29 = phi i64 [ %26, %25 ], [ %38, %27 ]
  %30 = lshr i64 %29, 1
  %31 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %28, i64 %30
  %32 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %31, i64 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %1
  %35 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %31, i64 1
  %36 = xor i64 %30, -1
  %37 = add i64 %29, %36
  %38 = select i1 %34, i64 %37, i64 %30
  %39 = select i1 %34, %"struct.gfx::internal::TextToDisplayIndex"* %35, %"struct.gfx::internal::TextToDisplayIndex"* %28
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %41, label %27

41:                                               ; preds = %27, %16
  %42 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %18, %16 ], [ %39, %27 ]
  %43 = icmp eq %"struct.gfx::internal::TextToDisplayIndex"* %42, %20
  br i1 %43, label %48, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %42, i64 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %46, %1
  br i1 %47, label %50, label %48

48:                                               ; preds = %44, %41
  %49 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %42, i64 -1
  br label %50

50:                                               ; preds = %13, %44, %48
  %51 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %15, %13 ], [ %49, %48 ], [ %42, %44 ]
  ret %"struct.gfx::internal::TextToDisplayIndex"* %51
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx10RenderText23EnsureLayoutTextUpdatedEv(%"class.gfx::RenderText"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::i18n::BreakIterator", align 8
  %3 = alloca %"class.base::BasicStringPiece", align 8
  %4 = alloca %"class.base::i18n::UTF16CharIterator", align 8
  %5 = alloca %"class.gfx::internal::StyleIterator", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca %"class.gfx::Range", align 4
  %8 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 63
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %727

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  store i16 0, i16* %19, align 2
  %20 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %20, align 8
  br label %23

21:                                               ; preds = %11
  %22 = bitcast %"class.std::__1::basic_string"* %12 to i16*
  store i16 0, i16* %22, align 2
  store i8 0, i8* %14, align 1
  br label %23

23:                                               ; preds = %17, %21
  %24 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 32
  %25 = bitcast %"class.std::__1::vector.164"* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 32, i32 0, i32 1
  %28 = bitcast %"struct.gfx::internal::TextToDisplayIndex"** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 8
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %31, i64 0, i32 1, i32 1
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %23
  %36 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  br label %40

38:                                               ; preds = %23
  %39 = zext i8 %33 to i64
  br label %40

40:                                               ; preds = %35, %38
  %41 = phi i64 [ %37, %35 ], [ %39, %38 ]
  %42 = shl i64 %41, 1
  tail call void @_ZNK3gfx10RenderText24UpdateLayoutStyleLengthsEm(%"class.gfx::RenderText"* %0, i64 %42)
  %43 = bitcast %"class.base::i18n::BreakIterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %43) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 72, i1 false)
  %44 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #17
  %45 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  %46 = load i8, i8* %32, align 1
  %47 = icmp slt i8 %46, 0
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i16*, i16** %48, align 8
  %50 = bitcast %"class.std::__1::basic_string"* %30 to i16*
  %51 = select i1 %47, i16* %49, i16* %50
  store i16* %51, i16** %45, align 8
  %52 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  %53 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = zext i8 %46 to i64
  %56 = select i1 %47, i64 %54, i64 %55
  store i64 %56, i64* %52, align 8
  call void @_ZN4base4i18n13BreakIteratorC1ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS1_9BreakTypeE(%"class.base::i18n::BreakIterator"* nonnull %2, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %3, i32 3) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #17
  %57 = call zeroext i1 @_ZN4base4i18n13BreakIterator4InitEv(%"class.base::i18n::BreakIterator"* nonnull %2) #17
  %58 = load i8, i8* %32, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %40
  %61 = load i64, i64* %53, align 8
  br label %64

62:                                               ; preds = %40
  %63 = zext i8 %58 to i64
  br label %64

64:                                               ; preds = %60, %62
  %65 = phi i64 [ %61, %60 ], [ %63, %62 ]
  %66 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 35
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, -1
  br i1 %68, label %103, label %69

69:                                               ; preds = %64
  %70 = icmp sgt i32 %67, -1
  br i1 %70, label %72, label %71, !prof !53

71:                                               ; preds = %69
  call void @llvm.trap() #17
  unreachable

72:                                               ; preds = %69
  %73 = sext i32 %67 to i64
  br i1 %59, label %74, label %76

74:                                               ; preds = %72
  %75 = load i64, i64* %53, align 8
  br label %78

76:                                               ; preds = %72
  %77 = zext i8 %58 to i64
  br label %78

78:                                               ; preds = %74, %76
  %79 = phi i64 [ %75, %74 ], [ %77, %76 ]
  %80 = icmp ugt i64 %79, %73
  br i1 %80, label %81, label %103

81:                                               ; preds = %78
  br i1 %59, label %82, label %84

82:                                               ; preds = %81
  %83 = load i16*, i16** %48, align 8
  br label %84

84:                                               ; preds = %81, %82
  %85 = phi i16* [ %83, %82 ], [ %50, %81 ]
  %86 = getelementptr inbounds i16, i16* %85, i64 %73
  %87 = load i16, i16* %86, align 2
  %88 = and i16 %87, -1024
  %89 = icmp eq i16 %88, -9216
  %90 = icmp ne i32 %67, 0
  %91 = and i1 %90, %89
  br i1 %91, label %92, label %103

92:                                               ; preds = %84
  br i1 %59, label %93, label %95

93:                                               ; preds = %92
  %94 = load i16*, i16** %48, align 8
  br label %95

95:                                               ; preds = %92, %93
  %96 = phi i16* [ %94, %93 ], [ %50, %92 ]
  %97 = add nsw i64 %73, -1
  %98 = getelementptr inbounds i16, i16* %96, i64 %97
  %99 = load i16, i16* %98, align 2
  %100 = and i16 %99, -1024
  %101 = icmp eq i16 %100, -10240
  %102 = select i1 %101, i64 %97, i64 %73
  br label %103

103:                                              ; preds = %95, %64, %78, %84
  %104 = phi i64 [ %73, %84 ], [ %73, %78 ], [ %65, %64 ], [ %102, %95 ]
  %105 = bitcast %"class.base::i18n::UTF16CharIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %105) #17
  %106 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %4, i64 0, i32 0, i32 1
  %107 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %4, i64 0, i32 1
  %108 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %4, i64 0, i32 4
  %109 = bitcast %"class.base::i18n::UTF16CharIterator"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 -86, i64 40, i1 false)
  %110 = load i16*, i16** %48, align 8
  %111 = select i1 %59, i16* %110, i16* %50
  %112 = load i64, i64* %53, align 8
  %113 = zext i8 %58 to i64
  %114 = select i1 %59, i64 %112, i64 %113
  call void @_ZN4base4i18n17UTF16CharIteratorC1ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.base::i18n::UTF16CharIterator"* nonnull %4, i16* %111, i64 %114) #17
  %115 = bitcast %"class.gfx::internal::StyleIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %115) #17
  %116 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 22
  %117 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 23
  %118 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 24
  %119 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 25
  %120 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26
  %121 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %5, i64 0, i32 0
  store %"class.gfx::BreakList"* %116, %"class.gfx::BreakList"** %121, align 8, !alias.scope !54
  %122 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %5, i64 0, i32 1
  store %"class.gfx::BreakList.91"* %117, %"class.gfx::BreakList.91"** %122, align 8, !alias.scope !54
  %123 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %5, i64 0, i32 2
  store %"class.gfx::BreakList.101"* %118, %"class.gfx::BreakList.101"** %123, align 8, !alias.scope !54
  %124 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %5, i64 0, i32 3
  store %"class.gfx::BreakList.111"* %119, %"class.gfx::BreakList.111"** %124, align 8, !alias.scope !54
  %125 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %5, i64 0, i32 4
  store %"struct.std::__1::array"* %120, %"struct.std::__1::array"** %125, align 8, !alias.scope !54
  %126 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %5, i64 0, i32 5, i32 0
  %127 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %5, i64 0, i32 6, i32 0
  %128 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %5, i64 0, i32 7, i32 0
  %129 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %5, i64 0, i32 8, i32 0
  %130 = bitcast %"class.gfx::BreakList"* %116 to i64*
  %131 = load i64, i64* %130, align 8, !noalias !54
  %132 = bitcast %"struct.std::__1::pair"** %126 to i64*
  store i64 %131, i64* %132, align 8, !alias.scope !54
  %133 = bitcast %"class.gfx::BreakList.91"* %117 to i64*
  %134 = load i64, i64* %133, align 8, !noalias !54
  %135 = bitcast %"struct.std::__1::pair.94"** %127 to i64*
  store i64 %134, i64* %135, align 8, !alias.scope !54
  %136 = bitcast %"class.gfx::BreakList.101"* %118 to i64*
  %137 = load i64, i64* %136, align 8, !noalias !54
  %138 = bitcast %"struct.std::__1::pair.104"** %128 to i64*
  store i64 %137, i64* %138, align 8, !alias.scope !54
  %139 = bitcast %"class.gfx::BreakList.111"* %119 to i64*
  %140 = load i64, i64* %139, align 8, !noalias !54
  %141 = bitcast %"struct.std::__1::pair.114"** %129 to i64*
  store i64 %140, i64* %141, align 8, !alias.scope !54
  %142 = bitcast %"struct.std::__1::array"* %120 to i64*
  %143 = load i64, i64* %142, align 8, !noalias !54
  %144 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %5, i64 0, i32 9, i32 0, i64 0
  %145 = bitcast %"class.std::__1::__wrap_iter.135"* %144 to i64*
  store i64 %143, i64* %145, align 8, !alias.scope !54
  %146 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 1, i32 0, i32 0, i32 0
  %147 = bitcast %"struct.std::__1::pair.124"** %146 to i64*
  %148 = load i64, i64* %147, align 8, !noalias !54
  %149 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %5, i64 0, i32 9, i32 0, i64 1
  %150 = bitcast %"class.std::__1::__wrap_iter.135"* %149 to i64*
  store i64 %148, i64* %150, align 8, !alias.scope !54
  %151 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 2, i32 0, i32 0, i32 0
  %152 = bitcast %"struct.std::__1::pair.124"** %151 to i64*
  %153 = load i64, i64* %152, align 8, !noalias !54
  %154 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %5, i64 0, i32 9, i32 0, i64 2
  %155 = bitcast %"class.std::__1::__wrap_iter.135"* %154 to i64*
  store i64 %153, i64* %155, align 8, !alias.scope !54
  %156 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 3, i32 0, i32 0, i32 0
  %157 = bitcast %"struct.std::__1::pair.124"** %156 to i64*
  %158 = load i64, i64* %157, align 8, !noalias !54
  %159 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %5, i64 0, i32 9, i32 0, i64 3
  %160 = bitcast %"class.std::__1::__wrap_iter.135"* %159 to i64*
  store i64 %158, i64* %160, align 8, !alias.scope !54
  %161 = load i64, i64* %107, align 8
  %162 = load i64, i64* %106, align 8
  %163 = icmp eq i64 %161, %162
  br i1 %163, label %717, label %164

164:                                              ; preds = %103
  %165 = bitcast %"class.std::__1::vector"* %6 to i8*
  %166 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %167 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %168 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %169 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %170 = bitcast i32** %167 to i64*
  %171 = bitcast %"class.std::__1::vector"* %6 to i64*
  %172 = bitcast i32** %168 to i64*
  %173 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 32, i32 0, i32 2, i32 0, i32 0
  %174 = bitcast %"struct.gfx::internal::TextToDisplayIndex"** %173 to i64*
  %175 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %24, i64 0, i32 0, i32 0
  %176 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 33
  %177 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 44
  %178 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 36
  %179 = bitcast %"class.std::__1::basic_string"* %12 to i16*
  %180 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %182 = bitcast %"class.gfx::Range"* %7 to i8*
  %183 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %7, i64 0, i32 0
  %184 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %7, i64 0, i32 1
  %185 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 27
  %186 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 28
  %187 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 29
  %188 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 30
  %189 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 21, i32 0
  %190 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 21, i32 1
  %191 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 3
  %192 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 0
  %193 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %5, i64 0, i32 9, i32 0, i64 0, i32 0
  %194 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 1
  %195 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %5, i64 0, i32 9, i32 0, i64 1, i32 0
  %196 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 2
  %197 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %5, i64 0, i32 9, i32 0, i64 2, i32 0
  %198 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %5, i64 0, i32 9, i32 0, i64 3, i32 0
  br label %199

199:                                              ; preds = %164, %710
  %200 = phi i64 [ %161, %164 ], [ %711, %710 ]
  %201 = phi i8 [ 0, %164 ], [ %705, %710 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %165) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %165, i8 0, i64 24, i1 false) #17
  %202 = load i8, i8* %14, align 1
  %203 = icmp slt i8 %202, 0
  br i1 %203, label %204, label %206

204:                                              ; preds = %199
  %205 = load i64, i64* %169, align 8
  br label %208

206:                                              ; preds = %199
  %207 = zext i8 %202 to i64
  br label %208

208:                                              ; preds = %204, %206
  %209 = phi i64 [ %205, %204 ], [ %207, %206 ]
  br label %210

210:                                              ; preds = %275, %208
  %211 = phi i64 [ %278, %275 ], [ 0, %208 ]
  %212 = phi i32* [ %277, %275 ], [ null, %208 ]
  %213 = phi i32* [ %276, %275 ], [ null, %208 ]
  %214 = load i32, i32* %108, align 4
  %215 = icmp ult i32* %213, %212
  %216 = ptrtoint i32* %212 to i64
  br i1 %215, label %217, label %220

217:                                              ; preds = %210
  store i32 %214, i32* %213, align 4
  %218 = getelementptr inbounds i32, i32* %213, i64 1
  %219 = ptrtoint i32* %218 to i64
  store i64 %219, i64* %170, align 8
  br label %267

220:                                              ; preds = %210
  %221 = ptrtoint i32* %213 to i64
  %222 = load i64, i64* %171, align 8
  %223 = sub i64 %221, %222
  %224 = ashr exact i64 %223, 2
  %225 = add nsw i64 %224, 1
  %226 = icmp ugt i64 %225, 4611686018427387903
  br i1 %226, label %227, label %229

227:                                              ; preds = %220
  %228 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %228) #19
  unreachable

229:                                              ; preds = %220
  %230 = sub i64 %216, %222
  %231 = ashr exact i64 %230, 2
  %232 = icmp ult i64 %231, 2305843009213693951
  br i1 %232, label %233, label %241

233:                                              ; preds = %229
  %234 = ashr exact i64 %230, 1
  %235 = icmp ult i64 %234, %225
  %236 = select i1 %235, i64 %225, i64 %234
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %246, label %238

238:                                              ; preds = %233
  %239 = icmp ugt i64 %236, 4611686018427387903
  br i1 %239, label %240, label %241

240:                                              ; preds = %238
  call void @abort() #19
  unreachable

241:                                              ; preds = %238, %229
  %242 = phi i64 [ %236, %238 ], [ 4611686018427387903, %229 ]
  %243 = shl i64 %242, 2
  %244 = call i8* @_Znwm(i64 %243) #18
  %245 = bitcast i8* %244 to i32*
  br label %246

246:                                              ; preds = %241, %233
  %247 = phi i64 [ %242, %241 ], [ 0, %233 ]
  %248 = phi i32* [ %245, %241 ], [ null, %233 ]
  %249 = getelementptr inbounds i32, i32* %248, i64 %224
  %250 = getelementptr inbounds i32, i32* %248, i64 %247
  %251 = ptrtoint i32* %250 to i64
  store i32 %214, i32* %249, align 4
  %252 = getelementptr inbounds i32, i32* %249, i64 1
  %253 = ptrtoint i32* %252 to i64
  %254 = sub i64 %211, %222
  %255 = ashr exact i64 %254, 2
  %256 = sub nsw i64 0, %255
  %257 = getelementptr inbounds i32, i32* %249, i64 %256
  %258 = ptrtoint i32* %257 to i64
  %259 = icmp sgt i64 %254, 0
  br i1 %259, label %260, label %263

260:                                              ; preds = %246
  %261 = bitcast i32* %257 to i8*
  %262 = inttoptr i64 %222 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %261, i8* align 4 %262, i64 %254, i1 false) #17
  br label %263

263:                                              ; preds = %260, %246
  store i64 %258, i64* %171, align 8
  store i64 %253, i64* %170, align 8
  store i64 %251, i64* %172, align 8
  %264 = icmp eq i64 %222, 0
  br i1 %264, label %267, label %265

265:                                              ; preds = %263
  %266 = inttoptr i64 %222 to i8*
  call void @_ZdlPv(i8* %266) #18
  br label %267

267:                                              ; preds = %217, %263, %265
  %268 = call zeroext i1 @_ZN4base4i18n17UTF16CharIterator7AdvanceEv(%"class.base::i18n::UTF16CharIterator"* nonnull %4) #17
  %269 = load i64, i64* %107, align 8
  %270 = call zeroext i1 @_ZNK4base4i18n13BreakIterator18IsGraphemeBoundaryEm(%"class.base::i18n::BreakIterator"* nonnull %2, i64 %269) #17
  %271 = load i64, i64* %107, align 8
  %272 = load i64, i64* %106, align 8
  %273 = icmp eq i64 %271, %272
  %274 = or i1 %270, %273
  br i1 %274, label %279, label %275

275:                                              ; preds = %267
  %276 = load i32*, i32** %167, align 8
  %277 = load i32*, i32** %168, align 8
  %278 = ptrtoint i32* %276 to i64
  br label %210

279:                                              ; preds = %267
  %280 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %27, align 8
  %281 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %173, align 8
  %282 = icmp eq %"struct.gfx::internal::TextToDisplayIndex"* %280, %281
  %283 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %281 to i64
  br i1 %282, label %289, label %284

284:                                              ; preds = %279
  %285 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %280, i64 0, i32 0
  store i64 %200, i64* %285, align 8
  %286 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %280, i64 0, i32 1
  store i64 %209, i64* %286, align 8
  %287 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %280, i64 1
  %288 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %287 to i64
  store i64 %288, i64* %28, align 8
  br label %343

289:                                              ; preds = %279
  %290 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %280 to i64
  %291 = load i64, i64* %25, align 8
  %292 = sub i64 %290, %291
  %293 = ashr exact i64 %292, 4
  %294 = add nsw i64 %293, 1
  %295 = icmp ugt i64 %294, 1152921504606846975
  br i1 %295, label %296, label %298

296:                                              ; preds = %289
  %297 = bitcast %"class.std::__1::vector.164"* %24 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %297) #19
  unreachable

298:                                              ; preds = %289
  %299 = sub i64 %283, %291
  %300 = ashr exact i64 %299, 4
  %301 = icmp ult i64 %300, 576460752303423487
  br i1 %301, label %302, label %310

302:                                              ; preds = %298
  %303 = ashr exact i64 %299, 3
  %304 = icmp ult i64 %303, %294
  %305 = select i1 %304, i64 %294, i64 %303
  %306 = icmp eq i64 %305, 0
  br i1 %306, label %315, label %307

307:                                              ; preds = %302
  %308 = icmp ugt i64 %305, 1152921504606846975
  br i1 %308, label %309, label %310

309:                                              ; preds = %307
  call void @abort() #19
  unreachable

310:                                              ; preds = %307, %298
  %311 = phi i64 [ %305, %307 ], [ 1152921504606846975, %298 ]
  %312 = shl i64 %311, 4
  %313 = call i8* @_Znwm(i64 %312) #18
  %314 = bitcast i8* %313 to %"struct.gfx::internal::TextToDisplayIndex"*
  br label %315

315:                                              ; preds = %310, %302
  %316 = phi i64 [ %311, %310 ], [ 0, %302 ]
  %317 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %314, %310 ], [ null, %302 ]
  %318 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %317, i64 %293
  %319 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %317, i64 %316
  %320 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %319 to i64
  %321 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %318, i64 0, i32 0
  store i64 %200, i64* %321, align 8
  %322 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %317, i64 %293, i32 1
  store i64 %209, i64* %322, align 8
  %323 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %318, i64 1
  %324 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %323 to i64
  %325 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %175, align 8
  %326 = load i64, i64* %28, align 8
  %327 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %325 to i64
  %328 = sub i64 %326, %327
  %329 = ashr exact i64 %328, 4
  %330 = sub nsw i64 0, %329
  %331 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %318, i64 %330
  %332 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %331 to i64
  %333 = icmp sgt i64 %328, 0
  br i1 %333, label %334, label %338

334:                                              ; preds = %315
  %335 = bitcast %"struct.gfx::internal::TextToDisplayIndex"* %331 to i8*
  %336 = bitcast %"struct.gfx::internal::TextToDisplayIndex"* %325 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %335, i8* align 8 %336, i64 %328, i1 false) #17
  %337 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %175, align 8
  br label %338

338:                                              ; preds = %334, %315
  %339 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %325, %315 ], [ %337, %334 ]
  store i64 %332, i64* %25, align 8
  store i64 %324, i64* %28, align 8
  store i64 %320, i64* %174, align 8
  %340 = icmp eq %"struct.gfx::internal::TextToDisplayIndex"* %339, null
  br i1 %340, label %343, label %341

341:                                              ; preds = %338
  %342 = bitcast %"struct.gfx::internal::TextToDisplayIndex"* %339 to i8*
  call void @_ZdlPv(i8* %342) #18
  br label %343

343:                                              ; preds = %284, %338, %341
  %344 = load i64, i64* %170, align 8
  %345 = load i64, i64* %171, align 8
  %346 = sub i64 %344, %345
  %347 = ashr exact i64 %346, 2
  %348 = inttoptr i64 %345 to i32*
  %349 = inttoptr i64 %344 to i32*
  switch i64 %347, label %360 [
    i64 1, label %350
    i64 2, label %353
  ]

350:                                              ; preds = %343
  %351 = load i32, i32* %348, align 4
  switch i32 %351, label %352 [
    i32 13, label %360
    i32 10, label %360
  ]

352:                                              ; preds = %350
  br label %360

353:                                              ; preds = %343
  %354 = load i32, i32* %348, align 4
  %355 = icmp eq i32 %354, 13
  br i1 %355, label %356, label %360

356:                                              ; preds = %353
  %357 = getelementptr inbounds i32, i32* %348, i64 1
  %358 = load i32, i32* %357, align 4
  %359 = icmp eq i32 %358, 10
  br label %360

360:                                              ; preds = %343, %350, %350, %352, %353, %356
  %361 = phi i1 [ true, %350 ], [ false, %353 ], [ %359, %356 ], [ false, %352 ], [ true, %350 ], [ false, %343 ]
  %362 = load i8, i8* %176, align 8, !range !2
  %363 = icmp eq i8 %362, 0
  br i1 %363, label %408, label %364

364:                                              ; preds = %360
  %365 = icmp uge i64 %104, %200
  %366 = icmp ult i64 %104, %271
  %367 = and i1 %365, %366
  br i1 %367, label %408, label %368

368:                                              ; preds = %364
  br i1 %361, label %369, label %372

369:                                              ; preds = %368
  %370 = load i8, i8* %177, align 4, !range !2
  %371 = icmp eq i8 %370, 0
  br i1 %371, label %372, label %408

372:                                              ; preds = %369, %368
  store i64 %345, i64* %170, align 8
  %373 = load i32*, i32** %168, align 8
  %374 = icmp ugt i32* %373, %348
  br i1 %374, label %375, label %378

375:                                              ; preds = %372
  store i32 8226, i32* %348, align 4
  %376 = getelementptr inbounds i32, i32* %348, i64 1
  %377 = ptrtoint i32* %376 to i64
  store i64 %377, i64* %170, align 8
  br label %408

378:                                              ; preds = %372
  %379 = ptrtoint i32* %373 to i64
  %380 = sub i64 %379, %345
  %381 = ashr exact i64 %380, 2
  %382 = icmp ult i64 %381, 2305843009213693951
  br i1 %382, label %383, label %391

383:                                              ; preds = %378
  %384 = ashr exact i64 %380, 1
  %385 = icmp eq i64 %380, 0
  %386 = select i1 %385, i64 1, i64 %384
  %387 = icmp eq i64 %386, 0
  br i1 %387, label %396, label %388

388:                                              ; preds = %383
  %389 = icmp ugt i64 %386, 4611686018427387903
  br i1 %389, label %390, label %391

390:                                              ; preds = %388
  call void @abort() #19
  unreachable

391:                                              ; preds = %388, %378
  %392 = phi i64 [ %386, %388 ], [ 4611686018427387903, %378 ]
  %393 = shl i64 %392, 2
  %394 = call i8* @_Znwm(i64 %393) #18
  %395 = bitcast i8* %394 to i32*
  br label %396

396:                                              ; preds = %383, %391
  %397 = phi i64 [ %392, %391 ], [ 0, %383 ]
  %398 = phi i32* [ %395, %391 ], [ null, %383 ]
  %399 = getelementptr inbounds i32, i32* %398, i64 %397
  %400 = ptrtoint i32* %399 to i64
  store i32 8226, i32* %398, align 4
  %401 = getelementptr inbounds i32, i32* %398, i64 1
  %402 = ptrtoint i32* %401 to i64
  %403 = ptrtoint i32* %398 to i64
  store i64 %403, i64* %171, align 8
  store i64 %402, i64* %170, align 8
  store i64 %400, i64* %172, align 8
  %404 = icmp eq i64 %345, 0
  br i1 %404, label %408, label %405

405:                                              ; preds = %396
  %406 = inttoptr i64 %345 to i8*
  call void @_ZdlPv(i8* %406) #18
  %407 = load i32*, i32** %167, align 8
  br label %408

408:                                              ; preds = %405, %396, %375, %364, %369, %360
  %409 = phi i32* [ %407, %405 ], [ %401, %396 ], [ %376, %375 ], [ %349, %364 ], [ %349, %369 ], [ %349, %360 ]
  %410 = load i32*, i32** %166, align 8
  %411 = icmp eq i32* %410, %409
  br i1 %411, label %703, label %412

412:                                              ; preds = %408
  %413 = xor i1 %361, true
  %414 = getelementptr inbounds i16, i16* %179, i64 %209
  %415 = trunc i64 %209 to i8
  %416 = trunc i64 %200 to i32
  %417 = add i32 %416, 1
  %418 = icmp ugt i32 %417, %416
  %419 = select i1 %418, i32 %416, i32 %417
  %420 = icmp ult i32 %417, %416
  %421 = select i1 %420, i32 %416, i32 %417
  br label %422

422:                                              ; preds = %697, %412
  %423 = phi i32* [ %410, %412 ], [ %698, %697 ]
  %424 = load i32, i32* %423, align 4
  %425 = load i8, i8* %177, align 4, !range !2
  %426 = icmp eq i8 %425, 0
  %427 = or i1 %426, %413
  br i1 %427, label %428, label %450

428:                                              ; preds = %422
  %429 = icmp ult i32 %424, 32
  br i1 %429, label %430, label %432

430:                                              ; preds = %428
  %431 = add nuw nsw i32 %424, 9216
  br label %452

432:                                              ; preds = %428
  %433 = icmp eq i32 %424, 127
  br i1 %433, label %452, label %434

434:                                              ; preds = %432
  %435 = icmp ult i32 %424, 55296
  br i1 %435, label %446, label %436

436:                                              ; preds = %434
  %437 = add i32 %424, -57344
  %438 = icmp ult i32 %437, 1056768
  br i1 %438, label %439, label %452

439:                                              ; preds = %436
  %440 = icmp sgt i32 %424, 64975
  br i1 %440, label %441, label %448

441:                                              ; preds = %439
  %442 = icmp slt i32 %424, 65008
  %443 = and i32 %424, 65534
  %444 = icmp eq i32 %443, 65534
  %445 = or i1 %442, %444
  br i1 %445, label %452, label %448

446:                                              ; preds = %434
  %447 = icmp sgt i32 %424, 127
  br i1 %447, label %448, label %452

448:                                              ; preds = %446, %441, %439
  %449 = call signext i8 @u_charType_69(i32 %424) #17
  switch i8 %449, label %450 [
    i8 17, label %452
    i8 15, label %452
  ]

450:                                              ; preds = %448, %422
  %451 = icmp ult i32 %424, 65536
  br i1 %451, label %452, label %454

452:                                              ; preds = %446, %448, %448, %436, %441, %432, %430, %450
  %453 = phi i32 [ %424, %450 ], [ %424, %446 ], [ 65533, %448 ], [ 65533, %448 ], [ 65533, %436 ], [ 65533, %441 ], [ 9249, %432 ], [ %431, %430 ]
  br label %454

454:                                              ; preds = %450, %452
  %455 = phi i32 [ %453, %452 ], [ %424, %450 ]
  %456 = phi i64 [ 1, %452 ], [ 2, %450 ]
  %457 = load i64, i64* %178, align 8
  %458 = icmp eq i64 %457, 0
  br i1 %458, label %535, label %459

459:                                              ; preds = %454
  %460 = load i8, i8* %14, align 1
  %461 = icmp slt i8 %460, 0
  br i1 %461, label %462, label %464

462:                                              ; preds = %459
  %463 = load i64, i64* %169, align 8
  br label %466

464:                                              ; preds = %459
  %465 = zext i8 %460 to i64
  br label %466

466:                                              ; preds = %462, %464
  %467 = phi i64 [ %463, %462 ], [ %465, %464 ]
  %468 = add i64 %467, %456
  %469 = icmp ugt i64 %468, %457
  br i1 %469, label %483, label %470

470:                                              ; preds = %466
  %471 = load i64, i64* %107, align 8
  %472 = load i64, i64* %106, align 8
  %473 = icmp eq i64 %471, %472
  br i1 %473, label %535, label %474

474:                                              ; preds = %470
  br i1 %461, label %475, label %477

475:                                              ; preds = %474
  %476 = load i64, i64* %169, align 8
  br label %479

477:                                              ; preds = %474
  %478 = zext i8 %460 to i64
  br label %479

479:                                              ; preds = %477, %475
  %480 = phi i64 [ %476, %475 ], [ %478, %477 ]
  %481 = add i64 %480, %456
  %482 = icmp eq i64 %481, %457
  br i1 %482, label %483, label %535

483:                                              ; preds = %466, %479
  br i1 %461, label %484, label %486

484:                                              ; preds = %483
  %485 = load i64, i64* %169, align 8
  br label %488

486:                                              ; preds = %483
  %487 = zext i8 %460 to i64
  br label %488

488:                                              ; preds = %486, %484
  %489 = phi i64 [ %485, %484 ], [ %487, %486 ]
  %490 = icmp ugt i64 %209, %489
  br i1 %490, label %491, label %530

491:                                              ; preds = %488
  %492 = sub i64 %209, %489
  %493 = icmp eq i64 %492, 0
  br i1 %493, label %535, label %494

494:                                              ; preds = %491
  br i1 %461, label %495, label %500

495:                                              ; preds = %494
  %496 = load i64, i64* %181, align 8
  %497 = and i64 %496, 9223372036854775807
  %498 = add nsw i64 %497, -1
  %499 = load i64, i64* %169, align 8
  br label %502

500:                                              ; preds = %494
  %501 = zext i8 %460 to i64
  br label %502

502:                                              ; preds = %500, %495
  %503 = phi i64 [ %498, %495 ], [ 10, %500 ]
  %504 = phi i64 [ %499, %495 ], [ %501, %500 ]
  %505 = sub i64 %503, %504
  %506 = icmp ult i64 %505, %492
  br i1 %506, label %507, label %511

507:                                              ; preds = %502
  %508 = add i64 %504, %492
  %509 = sub i64 %508, %503
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %12, i64 %503, i64 %509, i64 %504, i64 %504, i64 0, i64 0) #17
  %510 = load i8, i8* %14, align 1
  br label %511

511:                                              ; preds = %507, %502
  %512 = phi i8 [ %510, %507 ], [ %460, %502 ]
  %513 = icmp slt i8 %512, 0
  br i1 %513, label %514, label %516

514:                                              ; preds = %511
  %515 = load i16*, i16** %180, align 8
  br label %516

516:                                              ; preds = %511, %514
  %517 = phi i16* [ %515, %514 ], [ %179, %511 ]
  %518 = getelementptr inbounds i16, i16* %517, i64 %504
  %519 = bitcast i16* %518 to i8*
  %520 = sub i64 %209, %489
  %521 = shl i64 %520, 1
  call void @llvm.memset.p0i8.i64(i8* align 2 %519, i8 0, i64 %521, i1 false)
  %522 = add i64 %504, %492
  %523 = load i8, i8* %14, align 1
  %524 = icmp slt i8 %523, 0
  br i1 %524, label %525, label %526

525:                                              ; preds = %516
  store i64 %522, i64* %169, align 8
  br label %528

526:                                              ; preds = %516
  %527 = trunc i64 %522 to i8
  store i8 %527, i8* %14, align 1
  br label %528

528:                                              ; preds = %526, %525
  %529 = getelementptr inbounds i16, i16* %517, i64 %522
  store i16 0, i16* %529, align 2
  br label %535

530:                                              ; preds = %488
  br i1 %461, label %531, label %534

531:                                              ; preds = %530
  %532 = load i16*, i16** %180, align 8
  %533 = getelementptr inbounds i16, i16* %532, i64 %209
  store i16 0, i16* %533, align 2
  store i64 %209, i64* %169, align 8
  br label %535

534:                                              ; preds = %530
  store i16 0, i16* %414, align 2
  store i8 %415, i8* %14, align 1
  br label %541

535:                                              ; preds = %470, %454, %479, %528, %491, %531
  %536 = phi i8 [ 1, %531 ], [ 1, %491 ], [ 1, %528 ], [ 0, %479 ], [ 0, %454 ], [ 0, %470 ]
  %537 = phi i1 [ true, %531 ], [ true, %491 ], [ true, %528 ], [ false, %479 ], [ false, %454 ], [ false, %470 ]
  %538 = phi i32 [ 8230, %531 ], [ 8230, %491 ], [ 8230, %528 ], [ %455, %479 ], [ %455, %454 ], [ %455, %470 ]
  %539 = phi i64 [ 1, %531 ], [ 1, %491 ], [ 1, %528 ], [ %456, %479 ], [ %456, %454 ], [ %456, %470 ]
  %540 = load i8, i8* %14, align 1
  br label %541

541:                                              ; preds = %535, %534
  %542 = phi i8 [ %540, %535 ], [ %415, %534 ]
  %543 = phi i8 [ %536, %535 ], [ 1, %534 ]
  %544 = phi i1 [ %537, %535 ], [ true, %534 ]
  %545 = phi i32 [ %538, %535 ], [ 8230, %534 ]
  %546 = phi i64 [ %539, %535 ], [ 1, %534 ]
  %547 = icmp slt i8 %542, 0
  br i1 %547, label %548, label %550

548:                                              ; preds = %541
  %549 = load i64, i64* %169, align 8
  br label %552

550:                                              ; preds = %541
  %551 = zext i8 %542 to i64
  br label %552

552:                                              ; preds = %548, %550
  %553 = phi i64 [ %549, %548 ], [ %551, %550 ]
  %554 = icmp eq i64 %546, 1
  br i1 %554, label %555, label %581

555:                                              ; preds = %552
  %556 = trunc i32 %545 to i16
  br i1 %547, label %559, label %557

557:                                              ; preds = %555
  %558 = zext i8 %542 to i64
  br label %564

559:                                              ; preds = %555
  %560 = load i64, i64* %181, align 8
  %561 = and i64 %560, 9223372036854775807
  %562 = add nsw i64 %561, -1
  %563 = load i64, i64* %169, align 8
  br label %564

564:                                              ; preds = %559, %557
  %565 = phi i64 [ 10, %557 ], [ %562, %559 ]
  %566 = phi i64 [ %558, %557 ], [ %563, %559 ]
  %567 = icmp eq i64 %566, %565
  br i1 %567, label %568, label %571

568:                                              ; preds = %564
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %12, i64 %565, i64 1, i64 %565, i64 %565, i64 0, i64 0) #17
  %569 = load i8, i8* %14, align 1
  %570 = icmp slt i8 %569, 0
  br i1 %570, label %575, label %572

571:                                              ; preds = %564
  br i1 %547, label %575, label %572

572:                                              ; preds = %571, %568
  %573 = trunc i64 %566 to i8
  %574 = add i8 %573, 1
  store i8 %574, i8* %14, align 1
  br label %578

575:                                              ; preds = %571, %568
  %576 = load i16*, i16** %180, align 8
  %577 = add i64 %566, 1
  store i64 %577, i64* %169, align 8
  br label %578

578:                                              ; preds = %572, %575
  %579 = phi i16* [ %179, %572 ], [ %576, %575 ]
  %580 = getelementptr inbounds i16, i16* %579, i64 %566
  store i16 %556, i16* %580, align 2
  br label %639

581:                                              ; preds = %552
  %582 = lshr i32 %545, 10
  %583 = trunc i32 %582 to i16
  %584 = add i16 %583, -10304
  br i1 %547, label %587, label %585

585:                                              ; preds = %581
  %586 = zext i8 %542 to i64
  br label %592

587:                                              ; preds = %581
  %588 = load i64, i64* %181, align 8
  %589 = and i64 %588, 9223372036854775807
  %590 = add nsw i64 %589, -1
  %591 = load i64, i64* %169, align 8
  br label %592

592:                                              ; preds = %587, %585
  %593 = phi i64 [ 10, %585 ], [ %590, %587 ]
  %594 = phi i64 [ %586, %585 ], [ %591, %587 ]
  %595 = icmp eq i64 %594, %593
  br i1 %595, label %596, label %599

596:                                              ; preds = %592
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %12, i64 %593, i64 1, i64 %593, i64 %593, i64 0, i64 0) #17
  %597 = load i8, i8* %14, align 1
  %598 = icmp slt i8 %597, 0
  br i1 %598, label %603, label %600

599:                                              ; preds = %592
  br i1 %547, label %603, label %600

600:                                              ; preds = %599, %596
  %601 = trunc i64 %594 to i8
  %602 = add i8 %601, 1
  store i8 %602, i8* %14, align 1
  br label %606

603:                                              ; preds = %599, %596
  %604 = load i16*, i16** %180, align 8
  %605 = add i64 %594, 1
  store i64 %605, i64* %169, align 8
  br label %606

606:                                              ; preds = %600, %603
  %607 = phi i16* [ %179, %600 ], [ %604, %603 ]
  %608 = getelementptr inbounds i16, i16* %607, i64 %594
  store i16 %584, i16* %608, align 2
  %609 = getelementptr inbounds i16, i16* %608, i64 1
  store i16 0, i16* %609, align 2
  %610 = trunc i32 %545 to i16
  %611 = and i16 %610, 1023
  %612 = or i16 %611, -9216
  %613 = load i8, i8* %14, align 1
  %614 = icmp slt i8 %613, 0
  br i1 %614, label %617, label %615

615:                                              ; preds = %606
  %616 = zext i8 %613 to i64
  br label %622

617:                                              ; preds = %606
  %618 = load i64, i64* %181, align 8
  %619 = and i64 %618, 9223372036854775807
  %620 = add nsw i64 %619, -1
  %621 = load i64, i64* %169, align 8
  br label %622

622:                                              ; preds = %617, %615
  %623 = phi i64 [ 10, %615 ], [ %620, %617 ]
  %624 = phi i64 [ %616, %615 ], [ %621, %617 ]
  %625 = icmp eq i64 %624, %623
  br i1 %625, label %626, label %629

626:                                              ; preds = %622
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %12, i64 %623, i64 1, i64 %623, i64 %623, i64 0, i64 0) #17
  %627 = load i8, i8* %14, align 1
  %628 = icmp slt i8 %627, 0
  br i1 %628, label %633, label %630

629:                                              ; preds = %622
  br i1 %614, label %633, label %630

630:                                              ; preds = %629, %626
  %631 = trunc i64 %624 to i8
  %632 = add i8 %631, 1
  store i8 %632, i8* %14, align 1
  br label %636

633:                                              ; preds = %629, %626
  %634 = load i16*, i16** %180, align 8
  %635 = add i64 %624, 1
  store i64 %635, i64* %169, align 8
  br label %636

636:                                              ; preds = %630, %633
  %637 = phi i16* [ %179, %630 ], [ %634, %633 ]
  %638 = getelementptr inbounds i16, i16* %637, i64 %624
  store i16 %612, i16* %638, align 2
  br label %639

639:                                              ; preds = %636, %578
  %640 = phi i16* [ %638, %636 ], [ %580, %578 ]
  %641 = getelementptr inbounds i16, i16* %640, i64 1
  store i16 0, i16* %641, align 2
  call void @_ZN3gfx8internal13StyleIterator19IncrementToPositionEm(%"class.gfx::internal::StyleIterator"* nonnull %5, i64 %200)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %182) #17
  store i32 -1431655766, i32* %183, align 4
  store i32 -1431655766, i32* %184, align 4
  %642 = trunc i64 %553 to i32
  %643 = load i8, i8* %14, align 1
  %644 = icmp slt i8 %643, 0
  br i1 %644, label %645, label %647

645:                                              ; preds = %639
  %646 = load i64, i64* %169, align 8
  br label %649

647:                                              ; preds = %639
  %648 = zext i8 %643 to i64
  br label %649

649:                                              ; preds = %645, %647
  %650 = phi i64 [ %646, %645 ], [ %648, %647 ]
  %651 = trunc i64 %650 to i32
  store i32 %642, i32* %183, align 4
  store i32 %651, i32* %184, align 4
  %652 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %126, align 8
  %653 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %652, i64 0, i32 1
  %654 = load i32, i32* %653, align 8
  call void @_ZN3gfx9BreakListIjE10ApplyValueEjRKNS_5RangeE(%"class.gfx::BreakList"* %185, i32 %654, %"class.gfx::Range"* nonnull dereferenceable(8) %7)
  %655 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %127, align 8
  %656 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %655, i64 0, i32 1
  %657 = load i32, i32* %656, align 8
  call void @_ZN3gfx9BreakListINS_13BaselineStyleEE10ApplyValueES1_RKNS_5RangeE(%"class.gfx::BreakList.91"* %186, i32 %657, %"class.gfx::Range"* nonnull dereferenceable(8) %7)
  %658 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %128, align 8
  %659 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %658, i64 0, i32 1
  %660 = load i32, i32* %659, align 8
  call void @_ZN3gfx9BreakListIiE10ApplyValueEiRKNS_5RangeE(%"class.gfx::BreakList.101"* %187, i32 %660, %"class.gfx::Range"* nonnull dereferenceable(8) %7)
  %661 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %129, align 8
  %662 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %661, i64 0, i32 1
  %663 = load i32, i32* %662, align 8
  call void @_ZN3gfx9BreakListINS_4Font6WeightEE10ApplyValueES2_RKNS_5RangeE(%"class.gfx::BreakList.111"* %188, i32 %663, %"class.gfx::Range"* nonnull dereferenceable(8) %7)
  %664 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %193, align 8
  %665 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %664, i64 0, i32 1
  %666 = load i8, i8* %665, align 8, !range !2
  %667 = icmp ne i8 %666, 0
  call void @_ZN3gfx9BreakListIbE10ApplyValueEbRKNS_5RangeE(%"class.gfx::BreakList.121"* %192, i1 zeroext %667, %"class.gfx::Range"* nonnull dereferenceable(8) %7)
  %668 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %195, align 8
  %669 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %668, i64 0, i32 1
  %670 = load i8, i8* %669, align 8, !range !2
  %671 = icmp ne i8 %670, 0
  call void @_ZN3gfx9BreakListIbE10ApplyValueEbRKNS_5RangeE(%"class.gfx::BreakList.121"* %194, i1 zeroext %671, %"class.gfx::Range"* nonnull dereferenceable(8) %7)
  %672 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %197, align 8
  %673 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %672, i64 0, i32 1
  %674 = load i8, i8* %673, align 8, !range !2
  %675 = icmp ne i8 %674, 0
  call void @_ZN3gfx9BreakListIbE10ApplyValueEbRKNS_5RangeE(%"class.gfx::BreakList.121"* %196, i1 zeroext %675, %"class.gfx::Range"* nonnull dereferenceable(8) %7)
  %676 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %198, align 8
  %677 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %676, i64 0, i32 1
  %678 = load i8, i8* %677, align 8, !range !2
  %679 = icmp ne i8 %678, 0
  call void @_ZN3gfx9BreakListIbE10ApplyValueEbRKNS_5RangeE(%"class.gfx::BreakList.121"* %191, i1 zeroext %679, %"class.gfx::Range"* nonnull dereferenceable(8) %7)
  %680 = load i32, i32* %189, align 4
  %681 = load i32, i32* %190, align 4
  %682 = and i32 %681, %680
  %683 = icmp eq i32 %682, -1
  br i1 %683, label %697, label %684

684:                                              ; preds = %649
  %685 = icmp ult i32 %680, %681
  %686 = select i1 %685, i32 %680, i32 %681
  %687 = icmp ult i32 %419, %686
  br i1 %687, label %697, label %688

688:                                              ; preds = %684
  %689 = icmp ugt i32 %680, %681
  %690 = select i1 %689, i32 %680, i32 %681
  %691 = icmp ugt i32 %421, %690
  br i1 %691, label %697, label %692

692:                                              ; preds = %688
  %693 = icmp ne i32 %421, %690
  %694 = icmp ne i32 %680, %681
  %695 = or i1 %694, %693
  br i1 %695, label %696, label %697

696:                                              ; preds = %692
  call void @_ZN3gfx9BreakListIbE10ApplyValueEbRKNS_5RangeE(%"class.gfx::BreakList.121"* %191, i1 zeroext true, %"class.gfx::Range"* nonnull dereferenceable(8) %7)
  br label %697

697:                                              ; preds = %692, %649, %684, %688, %696
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %182) #17
  %698 = getelementptr inbounds i32, i32* %423, i64 1
  %699 = icmp eq i32* %698, %409
  %700 = or i1 %544, %699
  br i1 %700, label %701, label %422

701:                                              ; preds = %697
  %702 = load i32*, i32** %166, align 8
  br label %703

703:                                              ; preds = %701, %408
  %704 = phi i32* [ %409, %408 ], [ %702, %701 ]
  %705 = phi i8 [ %201, %408 ], [ %543, %701 ]
  %706 = icmp eq i32* %704, null
  br i1 %706, label %710, label %707

707:                                              ; preds = %703
  %708 = ptrtoint i32* %704 to i64
  store i64 %708, i64* %170, align 8
  %709 = bitcast i32* %704 to i8*
  call void @_ZdlPv(i8* %709) #18
  br label %710

710:                                              ; preds = %703, %707
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %165) #17
  %711 = load i64, i64* %107, align 8
  %712 = load i64, i64* %106, align 8
  %713 = icmp ne i64 %711, %712
  %714 = and i8 %705, 1
  %715 = icmp eq i8 %714, 0
  %716 = and i1 %715, %713
  br i1 %716, label %199, label %717

717:                                              ; preds = %710, %103
  %718 = load i8, i8* %14, align 1
  %719 = icmp slt i8 %718, 0
  br i1 %719, label %720, label %723

720:                                              ; preds = %717
  %721 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %722 = load i64, i64* %721, align 8
  br label %725

723:                                              ; preds = %717
  %724 = zext i8 %718 to i64
  br label %725

725:                                              ; preds = %720, %723
  %726 = phi i64 [ %722, %720 ], [ %724, %723 ]
  call void @_ZNK3gfx10RenderText24UpdateLayoutStyleLengthsEm(%"class.gfx::RenderText"* %0, i64 %726)
  store i8 1, i8* %8, align 8
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %115) #17
  call void @_ZN4base4i18n17UTF16CharIteratorD1Ev(%"class.base::i18n::UTF16CharIterator"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %105) #17
  call void @_ZN4base4i18n13BreakIteratorD1Ev(%"class.base::i18n::BreakIterator"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %43) #17
  br label %727

727:                                              ; preds = %1, %725
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"struct.gfx::internal::TextToDisplayIndex"* @_ZNK3gfx10RenderText26GetGraphemeIteratorAtIndexERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEMNS_8internal18TextToDisplayIndexEKmm(%"class.gfx::RenderText"* nocapture readonly, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i64, i64) local_unnamed_addr #7 align 2 {
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = zext i8 %7 to i64
  %12 = select i1 %8, i64 %10, i64 %11
  %13 = icmp eq i64 %12, %3
  br i1 %13, label %14, label %17

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 32, i32 0, i32 1
  %16 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %15, align 8
  br label %55

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 32, i32 0, i32 0
  %19 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %18, align 8
  %20 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 32, i32 0, i32 1
  %21 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %20, align 8
  %22 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %19 to i64
  %23 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %21 to i64
  %24 = sub i64 %23, %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %44, label %26

26:                                               ; preds = %17
  %27 = ashr exact i64 %24, 4
  br label %28

28:                                               ; preds = %28, %26
  %29 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %19, %26 ], [ %42, %28 ]
  %30 = phi i64 [ %27, %26 ], [ %41, %28 ]
  %31 = lshr i64 %30, 1
  %32 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %29, i64 %31
  %33 = bitcast %"struct.gfx::internal::TextToDisplayIndex"* %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 %2
  %35 = bitcast i8* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp ult i64 %36, %3
  %38 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %32, i64 1
  %39 = xor i64 %31, -1
  %40 = add i64 %30, %39
  %41 = select i1 %37, i64 %40, i64 %31
  %42 = select i1 %37, %"struct.gfx::internal::TextToDisplayIndex"* %38, %"struct.gfx::internal::TextToDisplayIndex"* %29
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %44, label %28

44:                                               ; preds = %28, %17
  %45 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %19, %17 ], [ %42, %28 ]
  %46 = icmp eq %"struct.gfx::internal::TextToDisplayIndex"* %45, %21
  br i1 %46, label %53, label %47

47:                                               ; preds = %44
  %48 = bitcast %"struct.gfx::internal::TextToDisplayIndex"* %45 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 %2
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %3
  br i1 %52, label %55, label %53

53:                                               ; preds = %44, %47
  %54 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %45, i64 -1
  br label %55

55:                                               ; preds = %53, %47, %14
  %56 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %16, %14 ], [ %54, %53 ], [ %45, %47 ]
  ret %"struct.gfx::internal::TextToDisplayIndex"* %56
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.gfx::internal::TextToDisplayIndex"* @_ZNK3gfx10RenderText37GetGraphemeIteratorAtDisplayTextIndexEm(%"class.gfx::RenderText"*, i64) local_unnamed_addr #0 align 2 {
  tail call void @_ZNK3gfx10RenderText23EnsureLayoutTextUpdatedEv(%"class.gfx::RenderText"* %0)
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = zext i8 %6 to i64
  %11 = select i1 %7, i64 %9, i64 %10
  %12 = icmp eq i64 %11, %1
  br i1 %12, label %13, label %16

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 32, i32 0, i32 1
  %15 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %14, align 8
  br label %50

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 32, i32 0, i32 0
  %18 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %17, align 8
  %19 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 32, i32 0, i32 1
  %20 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %19, align 8
  %21 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %18 to i64
  %22 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %20 to i64
  %23 = sub i64 %22, %21
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %16
  %26 = ashr exact i64 %23, 4
  br label %27

27:                                               ; preds = %27, %25
  %28 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %18, %25 ], [ %39, %27 ]
  %29 = phi i64 [ %26, %25 ], [ %38, %27 ]
  %30 = lshr i64 %29, 1
  %31 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %28, i64 1
  %32 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %28, i64 %30, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %1
  %35 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %31, i64 %30
  %36 = xor i64 %30, -1
  %37 = add i64 %29, %36
  %38 = select i1 %34, i64 %37, i64 %30
  %39 = select i1 %34, %"struct.gfx::internal::TextToDisplayIndex"* %35, %"struct.gfx::internal::TextToDisplayIndex"* %28
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %41, label %27

41:                                               ; preds = %27, %16
  %42 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %18, %16 ], [ %39, %27 ]
  %43 = icmp eq %"struct.gfx::internal::TextToDisplayIndex"* %42, %20
  br i1 %43, label %48, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %42, i64 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %46, %1
  br i1 %47, label %50, label %48

48:                                               ; preds = %44, %41
  %49 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %42, i64 -1
  br label %50

50:                                               ; preds = %13, %44, %48
  %51 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %15, %13 ], [ %49, %48 ], [ %42, %44 ]
  ret %"struct.gfx::internal::TextToDisplayIndex"* %51
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK3gfx10RenderText12GetTextIndexENSt3__111__wrap_iterIPKNS_8internal18TextToDisplayIndexEEE(%"class.gfx::RenderText"* nocapture readonly, %"struct.gfx::internal::TextToDisplayIndex"*) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 32, i32 0, i32 1
  %4 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %3, align 8
  %5 = icmp eq %"struct.gfx::internal::TextToDisplayIndex"* %4, %1
  br i1 %5, label %6, label %17

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  br label %20

15:                                               ; preds = %6
  %16 = zext i8 %10 to i64
  br label %20

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %1, i64 0, i32 0
  %19 = load i64, i64* %18, align 8
  br label %20

20:                                               ; preds = %15, %12, %17
  %21 = phi i64 [ %19, %17 ], [ %14, %12 ], [ %16, %15 ]
  ret i64 %21
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK3gfx10RenderText19GetDisplayTextIndexENSt3__111__wrap_iterIPKNS_8internal18TextToDisplayIndexEEE(%"class.gfx::RenderText"* nocapture readonly, %"struct.gfx::internal::TextToDisplayIndex"*) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 32, i32 0, i32 1
  %4 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %3, align 8
  %5 = icmp eq %"struct.gfx::internal::TextToDisplayIndex"* %4, %1
  br i1 %5, label %6, label %17

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  br label %20

15:                                               ; preds = %6
  %16 = zext i8 %10 to i64
  br label %20

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %1, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  br label %20

20:                                               ; preds = %15, %12, %17
  %21 = phi i64 [ %19, %17 ], [ %14, %12 ], [ %16, %15 ]
  ret i64 %21
}

declare void @_ZN3gfx14SelectionModelC1ERKS0_(%"class.gfx::SelectionModel"*, %"class.gfx::SelectionModel"* dereferenceable(40)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.gfx::Vector2d"* @_ZN3gfx10RenderText23GetUpdatedDisplayOffsetEv(%"class.gfx::RenderText"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN3gfx10RenderText27UpdateCachedBoundsAndOffsetEv(%"class.gfx::RenderText"* %0)
  %2 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 53
  ret %"class.gfx::Vector2d"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText16SetDisplayOffsetEi(%"class.gfx::RenderText"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 53, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = zext i32 %4 to i64
  %6 = shl nuw i64 %5, 32
  %7 = zext i32 %1 to i64
  %8 = or i64 %6, %7
  tail call void @_ZN3gfx10RenderText16SetDisplayOffsetENS_8Vector2dE(%"class.gfx::RenderText"* %0, i64 %8)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText16SetDisplayOffsetENS_8Vector2dE(%"class.gfx::RenderText"*, i64) local_unnamed_addr #11 align 2 {
  %3 = trunc i64 %1 to i32
  %4 = lshr i64 %1, 32
  %5 = trunc i64 %4 to i32
  %6 = bitcast %"class.gfx::RenderText"* %0 to <2 x float> (%"class.gfx::RenderText"*)***
  %7 = load <2 x float> (%"class.gfx::RenderText"*)**, <2 x float> (%"class.gfx::RenderText"*)*** %6, align 8
  %8 = getelementptr inbounds <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %7, i64 3
  %9 = load <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %8, align 8
  %10 = tail call <2 x float> %9(%"class.gfx::RenderText"* %0) #17
  %11 = extractelement <2 x float> %10, i32 0
  %12 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 13
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = tail call float @llvm.ceil.f32(float %11) #17
  %16 = fadd float %15, 1.000000e+00
  %17 = select i1 %14, float %11, float %16
  %18 = tail call float @llvm.ceil.f32(float %17) #17
  %19 = fcmp ult float %18, 0xC1E0000000000000
  %20 = fcmp ugt float %18, 0x41DFFFFFE0000000
  %21 = fcmp ogt float %18, 0xC1E0000000000000
  %22 = select i1 %21, float %18, float 0xC1E0000000000000
  %23 = fptosi float %22 to i32
  %24 = select i1 %19, i32 0, i32 2147483647
  %25 = select i1 %20, i32 %24, i32 %23
  %26 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 50, i32 1, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = sub nsw i32 %25, %27
  %29 = zext i8 %13 to i32
  %30 = icmp sgt i32 %28, 0
  br i1 %30, label %31, label %71

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 4
  %33 = load i32, i32* %32, align 8
  switch i32 %33, label %71 [
    i32 3, label %34
    i32 0, label %62
    i32 2, label %64
    i32 1, label %65
  ]

34:                                               ; preds = %31
  %35 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*)***
  %36 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %36, i64 13
  %38 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %37, align 8
  tail call void %38(%"class.gfx::RenderText"* %0) #17
  %39 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 8
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %59

42:                                               ; preds = %34
  %43 = bitcast %"class.gfx::RenderText"* %0 to %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)***
  %44 = load %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)**, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)** %44, i64 2
  %46 = load %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)** %45, align 8
  %47 = tail call dereferenceable(24) %"class.std::__1::basic_string"* %46(%"class.gfx::RenderText"* %0) #17
  %48 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 6
  %49 = load i32, i32* %48, align 8
  switch i32 %49, label %56 [
    i32 0, label %50
    i32 1, label %52
    i32 2, label %57
    i32 3, label %55
    i32 4, label %57
  ]

50:                                               ; preds = %42
  %51 = tail call i32 @_ZN4base4i18n32GetFirstStrongCharacterDirectionERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %47) #17
  br label %57

52:                                               ; preds = %42
  %53 = tail call zeroext i1 @_ZN4base4i18n5IsRTLEv() #17
  %54 = select i1 %53, i32 1, i32 2
  br label %57

55:                                               ; preds = %42
  br label %57

56:                                               ; preds = %42
  br label %57

57:                                               ; preds = %56, %55, %52, %50, %42, %42
  %58 = phi i32 [ 0, %56 ], [ 1, %55 ], [ %54, %52 ], [ %51, %50 ], [ 2, %42 ], [ 2, %42 ]
  store i32 %58, i32* %39, align 8
  br label %59

59:                                               ; preds = %57, %34
  %60 = phi i32 [ %58, %57 ], [ %40, %34 ]
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %64, label %62

62:                                               ; preds = %31, %59
  %63 = sub nsw i32 0, %28
  br label %71

64:                                               ; preds = %31, %59
  br label %71

65:                                               ; preds = %31
  %66 = sub nuw nsw i32 %28, %29
  %67 = xor i32 %66, -1
  %68 = sdiv i32 %67, 2
  %69 = sub nsw i32 %68, %29
  %70 = sdiv i32 %66, 2
  br label %71

71:                                               ; preds = %31, %62, %64, %65, %2
  %72 = phi i32 [ %70, %65 ], [ %28, %64 ], [ 0, %62 ], [ 0, %2 ], [ 0, %31 ]
  %73 = phi i32 [ %69, %65 ], [ 0, %64 ], [ %63, %62 ], [ 0, %2 ], [ 0, %31 ]
  %74 = icmp sgt i32 %73, %3
  %75 = select i1 %74, i32 %73, i32 %3
  %76 = icmp slt i32 %72, %75
  %77 = select i1 %76, i32 %72, i32 %75
  %78 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 50, i32 1, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = load <2 x float> (%"class.gfx::RenderText"*)**, <2 x float> (%"class.gfx::RenderText"*)*** %6, align 8
  %81 = getelementptr inbounds <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %80, i64 3
  %82 = load <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %81, align 8
  %83 = tail call <2 x float> %82(%"class.gfx::RenderText"* %0) #17
  %84 = extractelement <2 x float> %83, i32 1
  %85 = tail call float @llvm.ceil.f32(float %84) #17
  %86 = fcmp ult float %85, 0xC1E0000000000000
  %87 = fcmp ugt float %85, 0x41DFFFFFE0000000
  %88 = fcmp ogt float %85, 0xC1E0000000000000
  %89 = select i1 %88, float %85, float 0xC1E0000000000000
  %90 = fptosi float %89 to i32
  %91 = select i1 %86, i32 0, i32 2147483647
  %92 = select i1 %87, i32 %91, i32 %90
  %93 = icmp sgt i32 %92, 0
  %94 = select i1 %93, i32 %92, i32 0
  %95 = sub nsw i32 %79, %94
  %96 = icmp slt i32 %95, 0
  %97 = select i1 %96, i32 %95, i32 0
  %98 = icmp sgt i32 %97, %5
  %99 = select i1 %98, i32 %97, i32 %5
  %100 = icmp slt i32 %99, 0
  %101 = select i1 %100, i32 %99, i32 0
  %102 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 55
  store i8 1, i8* %102, align 8
  %103 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 53
  %104 = bitcast %"class.gfx::Vector2d"* %103 to i64*
  %105 = zext i32 %101 to i64
  %106 = shl nuw i64 %105, 32
  %107 = zext i32 %77 to i64
  %108 = or i64 %106, %107
  store i64 %108, i64* %104, align 4
  %109 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11
  %110 = tail call { i64, i64 } @_ZN3gfx10RenderText15GetCursorBoundsERKNS_14SelectionModelEb(%"class.gfx::RenderText"* %0, %"class.gfx::SelectionModel"* dereferenceable(40) %109, i1 zeroext true)
  %111 = extractvalue { i64, i64 } %110, 0
  %112 = extractvalue { i64, i64 } %110, 1
  %113 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 12
  %114 = bitcast %"class.gfx::Rect"* %113 to i64*
  store i64 %111, i64* %114, align 8
  %115 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 12, i32 1
  %116 = bitcast %"class.gfx::Size"* %115 to i64*
  store i64 %112, i64* %116, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gfx10RenderText29GetCurrentHorizontalAlignmentEv(%"class.gfx::RenderText"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 3
  br i1 %4, label %5, label %34

5:                                                ; preds = %1
  %6 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*)***
  %7 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %7, i64 13
  %9 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %8, align 8
  tail call void %9(%"class.gfx::RenderText"* %0) #17
  %10 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 8
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %30

13:                                               ; preds = %5
  %14 = bitcast %"class.gfx::RenderText"* %0 to %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)***
  %15 = load %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)**, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)** %15, i64 2
  %17 = load %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)** %16, align 8
  %18 = tail call dereferenceable(24) %"class.std::__1::basic_string"* %17(%"class.gfx::RenderText"* %0) #17
  %19 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 6
  %20 = load i32, i32* %19, align 8
  switch i32 %20, label %27 [
    i32 0, label %21
    i32 1, label %23
    i32 2, label %28
    i32 3, label %26
    i32 4, label %28
  ]

21:                                               ; preds = %13
  %22 = tail call i32 @_ZN4base4i18n32GetFirstStrongCharacterDirectionERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %18) #17
  br label %28

23:                                               ; preds = %13
  %24 = tail call zeroext i1 @_ZN4base4i18n5IsRTLEv() #17
  %25 = select i1 %24, i32 1, i32 2
  br label %28

26:                                               ; preds = %13
  br label %28

27:                                               ; preds = %13
  br label %28

28:                                               ; preds = %27, %26, %23, %21, %13, %13
  %29 = phi i32 [ 0, %27 ], [ 1, %26 ], [ %25, %23 ], [ %22, %21 ], [ 2, %13 ], [ 2, %13 ]
  store i32 %29, i32* %10, align 8
  br label %30

30:                                               ; preds = %5, %28
  %31 = phi i32 [ %29, %28 ], [ %11, %5 ]
  %32 = icmp eq i32 %31, 1
  %33 = select i1 %32, i32 2, i32 0
  br label %34

34:                                               ; preds = %1, %30
  %35 = phi i32 [ %33, %30 ], [ %3, %1 ]
  ret i32 %35
}

declare void @_ZN3gfx8Vector2d3AddERKS0_(%"class.gfx::Vector2d"*, %"class.gfx::Vector2d"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3gfx10RenderText18GetAlignmentOffsetEm(%"class.gfx::RenderText"*, i64) local_unnamed_addr #11 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %33 [
    i32 3, label %5
    i32 0, label %86
  ]

5:                                                ; preds = %2
  %6 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*)***
  %7 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %7, i64 13
  %9 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %8, align 8
  tail call void %9(%"class.gfx::RenderText"* %0) #17
  %10 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 8
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %30

13:                                               ; preds = %5
  %14 = bitcast %"class.gfx::RenderText"* %0 to %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)***
  %15 = load %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)**, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)** %15, i64 2
  %17 = load %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)** %16, align 8
  %18 = tail call dereferenceable(24) %"class.std::__1::basic_string"* %17(%"class.gfx::RenderText"* %0) #17
  %19 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 6
  %20 = load i32, i32* %19, align 8
  switch i32 %20, label %27 [
    i32 0, label %21
    i32 1, label %23
    i32 2, label %28
    i32 3, label %26
    i32 4, label %28
  ]

21:                                               ; preds = %13
  %22 = tail call i32 @_ZN4base4i18n32GetFirstStrongCharacterDirectionERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %18) #17
  br label %28

23:                                               ; preds = %13
  %24 = tail call zeroext i1 @_ZN4base4i18n5IsRTLEv() #17
  %25 = select i1 %24, i32 1, i32 2
  br label %28

26:                                               ; preds = %13
  br label %28

27:                                               ; preds = %13
  br label %28

28:                                               ; preds = %27, %26, %23, %21, %13, %13
  %29 = phi i32 [ 0, %27 ], [ 1, %26 ], [ %25, %23 ], [ %22, %21 ], [ 2, %13 ], [ 2, %13 ]
  store i32 %29, i32* %10, align 8
  br label %30

30:                                               ; preds = %28, %5
  %31 = phi i32 [ %29, %28 ], [ %11, %5 ]
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %86

33:                                               ; preds = %2, %30
  %34 = phi i32 [ 2, %30 ], [ %4, %2 ]
  %35 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 44
  %36 = load i8, i8* %35, align 4, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %54, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*)***
  %40 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %40, i64 13
  %42 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %41, align 8
  tail call void %42(%"class.gfx::RenderText"* %0) #17
  %43 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 59, i32 0, i32 0, i32 0
  %44 = load %"class.gfx::internal::ShapedText"*, %"class.gfx::internal::ShapedText"** %43, align 8
  %45 = getelementptr inbounds %"class.gfx::internal::ShapedText", %"class.gfx::internal::ShapedText"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = load %"struct.gfx::internal::Line"*, %"struct.gfx::internal::Line"** %45, align 8
  %47 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %46, i64 %1, i32 1, i32 0
  %48 = load float, float* %47, align 4
  %49 = tail call float @llvm.ceil.f32(float %48) #17
  %50 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 13
  %51 = load i8, i8* %50, align 8, !range !2
  %52 = uitofp i8 %51 to float
  %53 = fadd float %49, %52
  br label %76

54:                                               ; preds = %33
  %55 = bitcast %"class.gfx::RenderText"* %0 to <2 x float> (%"class.gfx::RenderText"*)***
  %56 = load <2 x float> (%"class.gfx::RenderText"*)**, <2 x float> (%"class.gfx::RenderText"*)*** %55, align 8
  %57 = getelementptr inbounds <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %56, i64 3
  %58 = load <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %57, align 8
  %59 = tail call <2 x float> %58(%"class.gfx::RenderText"* %0) #17
  %60 = extractelement <2 x float> %59, i32 0
  %61 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 13
  %62 = load i8, i8* %61, align 8, !range !2
  %63 = icmp eq i8 %62, 0
  %64 = tail call float @llvm.ceil.f32(float %60) #17
  %65 = fadd float %64, 1.000000e+00
  %66 = select i1 %63, float %60, float %65
  %67 = tail call float @llvm.ceil.f32(float %66) #17
  %68 = fcmp ult float %67, 0xC1E0000000000000
  %69 = fcmp ugt float %67, 0x41DFFFFFE0000000
  %70 = fcmp ogt float %67, 0xC1E0000000000000
  %71 = select i1 %70, float %67, float 0xC1E0000000000000
  %72 = fptosi float %71 to i32
  %73 = select i1 %68, i32 0, i32 2147483647
  %74 = select i1 %69, i32 %73, i32 %72
  %75 = sitofp i32 %74 to float
  br label %76

76:                                               ; preds = %54, %38
  %77 = phi float [ %53, %38 ], [ %75, %54 ]
  %78 = fptosi float %77 to i32
  %79 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 50, i32 1, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = sub nsw i32 %80, %78
  %82 = icmp eq i32 %34, 1
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = add nsw i32 %81, 1
  %85 = sdiv i32 %84, 2
  br label %86

86:                                               ; preds = %2, %30, %76, %83
  %87 = phi i32 [ %85, %83 ], [ %81, %76 ], [ 0, %30 ], [ %4, %2 ]
  %88 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 5
  %89 = load i32, i32* %88, align 4
  switch i32 %89, label %175 [
    i32 2, label %155
    i32 1, label %90
  ]

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 44
  %92 = load i8, i8* %91, align 4, !range !2
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %115, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 50, i32 1, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = bitcast %"class.gfx::RenderText"* %0 to <2 x float> (%"class.gfx::RenderText"*)***
  %98 = load <2 x float> (%"class.gfx::RenderText"*)**, <2 x float> (%"class.gfx::RenderText"*)*** %97, align 8
  %99 = getelementptr inbounds <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %98, i64 3
  %100 = load <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %99, align 8
  %101 = tail call <2 x float> %100(%"class.gfx::RenderText"* %0) #17
  %102 = extractelement <2 x float> %101, i32 1
  %103 = tail call float @llvm.ceil.f32(float %102) #17
  %104 = fcmp ult float %103, 0xC1E0000000000000
  %105 = fcmp ugt float %103, 0x41DFFFFFE0000000
  %106 = fcmp ogt float %103, 0xC1E0000000000000
  %107 = select i1 %106, float %103, float 0xC1E0000000000000
  %108 = fptosi float %107 to i32
  %109 = select i1 %104, i32 0, i32 2147483647
  %110 = select i1 %105, i32 %109, i32 %108
  %111 = icmp sgt i32 %110, 0
  %112 = select i1 %111, i32 %110, i32 0
  %113 = sub nsw i32 %96, %112
  %114 = sdiv i32 %113, 2
  br label %175

115:                                              ; preds = %90
  %116 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 54
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %117, 2147483647
  br i1 %118, label %119, label %142

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 50, i32 1, i32 1
  %121 = load i32, i32* %120, align 4
  %122 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 10
  %123 = tail call i32 @_ZNK3gfx8FontList9GetHeightEv(%"class.gfx::FontList"* %122) #17
  %124 = sub nsw i32 %121, %123
  %125 = icmp slt i32 %124, 0
  %126 = select i1 %125, i32 %124, i32 0
  %127 = sub nsw i32 0, %124
  %128 = select i1 %125, i32 %127, i32 %124
  %129 = tail call i32 @_ZNK3gfx8FontList11GetBaselineEv(%"class.gfx::FontList"* %122) #17
  %130 = tail call i32 @_ZNK3gfx8FontList12GetCapHeightEv(%"class.gfx::FontList"* %122) #17
  %131 = sub nsw i32 %129, %130
  %132 = icmp eq i32 %131, 0
  %133 = select i1 %132, i32 %123, i32 %130
  %134 = sub nsw i32 %121, %133
  %135 = sdiv i32 %134, 2
  %136 = sub nsw i32 %135, %131
  %137 = icmp slt i32 %136, %126
  %138 = select i1 %137, i32 %126, i32 %136
  %139 = icmp slt i32 %128, %138
  %140 = select i1 %139, i32 %128, i32 %138
  %141 = add nsw i32 %140, %129
  store i32 %141, i32* %116, align 4
  br label %142

142:                                              ; preds = %115, %119
  %143 = phi i32 [ %141, %119 ], [ %117, %115 ]
  %144 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*)***
  %145 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %144, align 8
  %146 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %145, i64 13
  %147 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %146, align 8
  tail call void %147(%"class.gfx::RenderText"* %0) #17
  %148 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 59, i32 0, i32 0, i32 0
  %149 = load %"class.gfx::internal::ShapedText"*, %"class.gfx::internal::ShapedText"** %148, align 8
  %150 = getelementptr inbounds %"class.gfx::internal::ShapedText", %"class.gfx::internal::ShapedText"* %149, i64 0, i32 0, i32 0, i32 0
  %151 = load %"struct.gfx::internal::Line"*, %"struct.gfx::internal::Line"** %150, align 8
  %152 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %151, i64 0, i32 3
  %153 = load i32, i32* %152, align 4
  %154 = sub nsw i32 %143, %153
  br label %175

155:                                              ; preds = %86
  %156 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 50, i32 1, i32 1
  %157 = load i32, i32* %156, align 4
  %158 = bitcast %"class.gfx::RenderText"* %0 to <2 x float> (%"class.gfx::RenderText"*)***
  %159 = load <2 x float> (%"class.gfx::RenderText"*)**, <2 x float> (%"class.gfx::RenderText"*)*** %158, align 8
  %160 = getelementptr inbounds <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %159, i64 3
  %161 = load <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %160, align 8
  %162 = tail call <2 x float> %161(%"class.gfx::RenderText"* %0) #17
  %163 = extractelement <2 x float> %162, i32 1
  %164 = tail call float @llvm.ceil.f32(float %163) #17
  %165 = fcmp ult float %164, 0xC1E0000000000000
  %166 = fcmp ugt float %164, 0x41DFFFFFE0000000
  %167 = fcmp ogt float %164, 0xC1E0000000000000
  %168 = select i1 %167, float %164, float 0xC1E0000000000000
  %169 = fptosi float %168 to i32
  %170 = select i1 %165, i32 0, i32 2147483647
  %171 = select i1 %166, i32 %170, i32 %169
  %172 = icmp sgt i32 %171, 0
  %173 = select i1 %172, i32 %171, i32 0
  %174 = sub nsw i32 %157, %173
  br label %175

175:                                              ; preds = %94, %142, %86, %155
  %176 = phi i32 [ %174, %155 ], [ %154, %142 ], [ %114, %94 ], [ 0, %86 ]
  %177 = zext i32 %176 to i64
  %178 = shl nuw i64 %177, 32
  %179 = zext i32 %87 to i64
  %180 = or i64 %178, %179
  ret i64 %180
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gfx10RenderText24GetWordLookupDataAtPointERKNS_5PointEPNS_13DecoratedTextEPS1_(%"class.gfx::RenderText"*, %"class.gfx::Point"* nocapture readonly dereferenceable(8), %"struct.gfx::DecoratedText"*, %"class.gfx::Point"* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.gfx::SelectionModel", align 8
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.gfx::Range"*
  %8 = alloca %"class.gfx::Range", align 4
  %9 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 33
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %45

12:                                               ; preds = %4
  %13 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*)***
  %14 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %14, i64 13
  %16 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %15, align 8
  tail call void %16(%"class.gfx::RenderText"* %0) #17
  %17 = bitcast %"class.gfx::SelectionModel"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 40, i1 false)
  call void @_ZN3gfx10RenderText18FindCursorPositionERKNS_5PointES3_(%"class.gfx::SelectionModel"* nonnull sret %5, %"class.gfx::RenderText"* %0, %"class.gfx::Point"* dereferenceable(8) %1, %"class.gfx::Point"* dereferenceable(8) undef)
  %18 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %5, i64 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = call i64 @_ZNK3gfx10RenderText27GetNearestWordStartBoundaryEm(%"class.gfx::RenderText"* %0, i64 %20)
  %22 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %12
  %28 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  br label %32

30:                                               ; preds = %12
  %31 = zext i8 %25 to i64
  br label %32

32:                                               ; preds = %27, %30
  %33 = phi i64 [ %29, %27 ], [ %31, %30 ]
  %34 = icmp ult i64 %21, %33
  br i1 %34, label %35, label %43

35:                                               ; preds = %32
  %36 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #17
  %37 = bitcast %"class.gfx::Range"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #17
  %38 = trunc i64 %21 to i32
  %39 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %8, i64 0, i32 0
  store i32 %38, i32* %39, align 4
  %40 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %8, i64 0, i32 1
  store i32 %38, i32* %40, align 4
  %41 = call i64 @_ZNK3gfx10RenderText25ExpandRangeToWordBoundaryERKNS_5RangeE(%"class.gfx::RenderText"* %0, %"class.gfx::Range"* nonnull dereferenceable(8) %8)
  store i64 %41, i64* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #17
  %42 = call zeroext i1 @_ZN3gfx10RenderText21GetLookupDataForRangeERKNS_5RangeEPNS_13DecoratedTextEPNS_5PointE(%"class.gfx::RenderText"* %0, %"class.gfx::Range"* nonnull dereferenceable(8) %7, %"struct.gfx::DecoratedText"* %2, %"class.gfx::Point"* %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #17
  br label %43

43:                                               ; preds = %32, %35
  %44 = phi i1 [ %42, %35 ], [ false, %32 ]
  call void @_ZN3gfx14SelectionModelD1Ev(%"class.gfx::SelectionModel"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #17
  br label %45

45:                                               ; preds = %4, %43
  %46 = phi i1 [ %44, %43 ], [ false, %4 ]
  ret i1 %46
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK3gfx10RenderText27GetNearestWordStartBoundaryEm(%"class.gfx::RenderText"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::i18n::BreakIterator", align 8
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3
  %6 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  br label %15

13:                                               ; preds = %2
  %14 = zext i8 %8 to i64
  br label %15

15:                                               ; preds = %10, %13
  %16 = phi i64 [ %12, %10 ], [ %14, %13 ]
  %17 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 33
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp ne i8 %18, 0
  %20 = icmp eq i64 %16, 0
  %21 = or i1 %20, %19
  br i1 %21, label %60, label %22

22:                                               ; preds = %15
  %23 = bitcast %"class.base::i18n::BreakIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %23) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 72, i1 false)
  %24 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #17
  %25 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i16*, i16** %26, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %29 = select i1 %9, i16* %27, i16* %28
  store i16* %29, i16** %25, align 8
  %30 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = zext i8 %8 to i64
  %34 = select i1 %9, i64 %32, i64 %33
  store i64 %34, i64* %30, align 8
  call void @_ZN4base4i18n13BreakIteratorC1ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS1_9BreakTypeE(%"class.base::i18n::BreakIterator"* nonnull %3, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %4, i32 0) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #17
  %35 = call zeroext i1 @_ZN4base4i18n13BreakIterator4InitEv(%"class.base::i18n::BreakIterator"* nonnull %3) #17
  br i1 %35, label %36, label %58

36:                                               ; preds = %22
  %37 = add i64 %16, -1
  %38 = icmp ult i64 %37, %1
  %39 = select i1 %38, i64 %37, i64 %1
  %40 = trunc i64 %39 to i32
  %41 = icmp sgt i32 %40, -1
  br i1 %41, label %43, label %42

42:                                               ; preds = %46, %36
  br label %52

43:                                               ; preds = %36
  %44 = shl i64 %39, 32
  %45 = ashr exact i64 %44, 32
  br label %49

46:                                               ; preds = %49
  %47 = add nsw i64 %50, -1
  %48 = icmp sgt i64 %50, 0
  br i1 %48, label %49, label %42

49:                                               ; preds = %43, %46
  %50 = phi i64 [ %45, %43 ], [ %47, %46 ]
  %51 = call zeroext i1 @_ZNK4base4i18n13BreakIterator13IsStartOfWordEm(%"class.base::i18n::BreakIterator"* nonnull %3, i64 %50) #17
  br i1 %51, label %58, label %46

52:                                               ; preds = %42, %56
  %53 = phi i64 [ %54, %56 ], [ %1, %42 ]
  %54 = add i64 %53, 1
  %55 = icmp ult i64 %54, %16
  br i1 %55, label %56, label %58

56:                                               ; preds = %52
  %57 = call zeroext i1 @_ZNK4base4i18n13BreakIterator13IsStartOfWordEm(%"class.base::i18n::BreakIterator"* nonnull %3, i64 %54) #17
  br i1 %57, label %58, label %52

58:                                               ; preds = %49, %56, %52, %22
  %59 = phi i64 [ %16, %22 ], [ %16, %52 ], [ %54, %56 ], [ %50, %49 ]
  call void @_ZN4base4i18n13BreakIteratorD1Ev(%"class.base::i18n::BreakIterator"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %23) #17
  br label %60

60:                                               ; preds = %15, %58
  %61 = phi i64 [ %59, %58 ], [ %16, %15 ]
  ret i64 %61
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gfx10RenderText21GetLookupDataForRangeERKNS_5RangeEPNS_13DecoratedTextEPNS_5PointE(%"class.gfx::RenderText"*, %"class.gfx::Range"* dereferenceable(8), %"struct.gfx::DecoratedText"*, %"class.gfx::Point"* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector.269", align 8
  %6 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*)***
  %7 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %7, i64 13
  %9 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %8, align 8
  tail call void %9(%"class.gfx::RenderText"* %0) #17
  %10 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 59, i32 0, i32 0, i32 0
  %11 = load %"class.gfx::internal::ShapedText"*, %"class.gfx::internal::ShapedText"** %10, align 8
  %12 = bitcast %"class.std::__1::vector.269"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #17
  %13 = getelementptr inbounds %"class.std::__1::vector.269", %"class.std::__1::vector.269"* %5, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector.269", %"class.std::__1::vector.269"* %5, i64 0, i32 0, i32 1
  %15 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.std::__1::vector.269"*, %"class.gfx::RenderText"*, %"class.gfx::Range"*)***
  %16 = bitcast %"class.std::__1::vector.269"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  %17 = load void (%"class.std::__1::vector.269"*, %"class.gfx::RenderText"*, %"class.gfx::Range"*)**, void (%"class.std::__1::vector.269"*, %"class.gfx::RenderText"*, %"class.gfx::Range"*)*** %15, align 8
  %18 = getelementptr inbounds void (%"class.std::__1::vector.269"*, %"class.gfx::RenderText"*, %"class.gfx::Range"*)*, void (%"class.std::__1::vector.269"*, %"class.gfx::RenderText"*, %"class.gfx::Range"*)** %17, i64 5
  %19 = load void (%"class.std::__1::vector.269"*, %"class.gfx::RenderText"*, %"class.gfx::Range"*)*, void (%"class.std::__1::vector.269"*, %"class.gfx::RenderText"*, %"class.gfx::Range"*)** %18, align 8
  call void %19(%"class.std::__1::vector.269"* nonnull sret %5, %"class.gfx::RenderText"* %0, %"class.gfx::Range"* dereferenceable(8) %1) #17
  %20 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %13, align 8
  %21 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %14, align 8
  %22 = icmp eq %"class.gfx::Rect"* %20, %21
  br i1 %22, label %182, label %23

23:                                               ; preds = %4
  %24 = bitcast %"class.gfx::RenderText"* %0 to i1 (%"class.gfx::RenderText"*, %"class.gfx::Range"*, %"struct.gfx::DecoratedText"*)***
  %25 = load i1 (%"class.gfx::RenderText"*, %"class.gfx::Range"*, %"struct.gfx::DecoratedText"*)**, i1 (%"class.gfx::RenderText"*, %"class.gfx::Range"*, %"struct.gfx::DecoratedText"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.gfx::RenderText"*, %"class.gfx::Range"*, %"struct.gfx::DecoratedText"*)*, i1 (%"class.gfx::RenderText"*, %"class.gfx::Range"*, %"struct.gfx::DecoratedText"*)** %25, i64 17
  %27 = load i1 (%"class.gfx::RenderText"*, %"class.gfx::Range"*, %"struct.gfx::DecoratedText"*)*, i1 (%"class.gfx::RenderText"*, %"class.gfx::Range"*, %"struct.gfx::DecoratedText"*)** %26, align 8
  %28 = call zeroext i1 %27(%"class.gfx::RenderText"* %0, %"class.gfx::Range"* dereferenceable(8) %1, %"struct.gfx::DecoratedText"* %2) #17
  br i1 %28, label %29, label %179

29:                                               ; preds = %23
  %30 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %13, align 8
  %31 = ptrtoint %"class.gfx::Rect"* %30 to i64
  %32 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %14, align 8
  %33 = icmp eq %"class.gfx::Rect"* %30, %32
  br i1 %33, label %105, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 1
  %36 = icmp eq %"class.gfx::Rect"* %35, %32
  br i1 %36, label %105, label %37

37:                                               ; preds = %34
  %38 = getelementptr %"class.gfx::Rect", %"class.gfx::Rect"* %32, i64 -2, i32 0, i32 0
  %39 = ptrtoint i32* %38 to i64
  %40 = sub i64 %39, %31
  %41 = lshr i64 %40, 4
  %42 = add nuw nsw i64 %41, 1
  %43 = and i64 %42, 3
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %60, label %45

45:                                               ; preds = %37, %45
  %46 = phi %"class.gfx::Rect"* [ %57, %45 ], [ %35, %37 ]
  %47 = phi i64 [ %56, %45 ], [ %31, %37 ]
  %48 = phi i64 [ %58, %45 ], [ %43, %37 ]
  %49 = ptrtoint %"class.gfx::Rect"* %46 to i64
  %50 = inttoptr i64 %47 to %"class.gfx::Rect"*
  %51 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %46, i64 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %50, i64 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp slt i32 %52, %54
  %56 = select i1 %55, i64 %49, i64 %47
  %57 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %46, i64 1
  %58 = add i64 %48, -1
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %45, !llvm.loop !57

60:                                               ; preds = %45, %37
  %61 = phi i64 [ undef, %37 ], [ %56, %45 ]
  %62 = phi %"class.gfx::Rect"* [ %35, %37 ], [ %57, %45 ]
  %63 = phi i64 [ %31, %37 ], [ %56, %45 ]
  %64 = icmp ult i64 %40, 48
  br i1 %64, label %105, label %65

65:                                               ; preds = %60, %65
  %66 = phi %"class.gfx::Rect"* [ %103, %65 ], [ %62, %60 ]
  %67 = phi i64 [ %102, %65 ], [ %63, %60 ]
  %68 = ptrtoint %"class.gfx::Rect"* %66 to i64
  %69 = inttoptr i64 %67 to %"class.gfx::Rect"*
  %70 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %66, i64 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %69, i64 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp slt i32 %71, %73
  %75 = select i1 %74, i64 %68, i64 %67
  %76 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %66, i64 1
  %77 = ptrtoint %"class.gfx::Rect"* %76 to i64
  %78 = inttoptr i64 %75 to %"class.gfx::Rect"*
  %79 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %76, i64 0, i32 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %78, i64 0, i32 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = icmp slt i32 %80, %82
  %84 = select i1 %83, i64 %77, i64 %75
  %85 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %66, i64 2
  %86 = ptrtoint %"class.gfx::Rect"* %85 to i64
  %87 = inttoptr i64 %84 to %"class.gfx::Rect"*
  %88 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %85, i64 0, i32 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %87, i64 0, i32 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = icmp slt i32 %89, %91
  %93 = select i1 %92, i64 %86, i64 %84
  %94 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %66, i64 3
  %95 = ptrtoint %"class.gfx::Rect"* %94 to i64
  %96 = inttoptr i64 %93 to %"class.gfx::Rect"*
  %97 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %94, i64 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %96, i64 0, i32 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = icmp slt i32 %98, %100
  %102 = select i1 %101, i64 %95, i64 %93
  %103 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %66, i64 4
  %104 = icmp eq %"class.gfx::Rect"* %103, %32
  br i1 %104, label %105, label %65

105:                                              ; preds = %60, %65, %29, %34
  %106 = phi i64 [ %31, %29 ], [ %31, %34 ], [ %61, %60 ], [ %102, %65 ]
  %107 = inttoptr i64 %106 to %"class.gfx::Rect"*
  %108 = call i64 @_ZNK3gfx4Rect11CenterPointEv(%"class.gfx::Rect"* %107) #17
  %109 = lshr i64 %108, 32
  %110 = trunc i64 %109 to i32
  %111 = call i64 @_ZN3gfx10RenderText13GetLineOffsetEm(%"class.gfx::RenderText"* %0, i64 0)
  %112 = lshr i64 %111, 32
  %113 = trunc i64 %112 to i32
  %114 = sub nsw i32 %110, %113
  %115 = icmp slt i32 %114, 0
  br i1 %115, label %179, label %116

116:                                              ; preds = %105
  %117 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %6, align 8
  %118 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %117, i64 13
  %119 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %118, align 8
  call void %119(%"class.gfx::RenderText"* %0) #17
  %120 = load %"class.gfx::internal::ShapedText"*, %"class.gfx::internal::ShapedText"** %10, align 8
  %121 = getelementptr inbounds %"class.gfx::internal::ShapedText", %"class.gfx::internal::ShapedText"* %120, i64 0, i32 0, i32 0, i32 1
  %122 = bitcast %"struct.gfx::internal::Line"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.gfx::internal::ShapedText"* %120 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = sub i64 %123, %125
  %127 = sdiv exact i64 %126, 48
  %128 = icmp eq i64 %126, 0
  %129 = inttoptr i64 %125 to %"struct.gfx::internal::Line"*
  br i1 %128, label %146, label %130

130:                                              ; preds = %116
  %131 = sitofp i32 %114 to float
  br label %132

132:                                              ; preds = %130, %138
  %133 = phi i64 [ %140, %138 ], [ 0, %130 ]
  %134 = phi float [ %139, %138 ], [ %131, %130 ]
  %135 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %129, i64 %133, i32 1, i32 1
  %136 = load float, float* %135, align 4
  %137 = fcmp ugt float %134, %136
  br i1 %137, label %138, label %142

138:                                              ; preds = %132
  %139 = fsub float %134, %136
  %140 = add nuw i64 %133, 1
  %141 = icmp ult i64 %140, %127
  br i1 %141, label %132, label %142

142:                                              ; preds = %138, %132
  %143 = phi i64 [ %133, %132 ], [ %127, %138 ]
  %144 = trunc i64 %143 to i32
  %145 = icmp slt i32 %144, 0
  br i1 %145, label %179, label %146

146:                                              ; preds = %116, %142
  %147 = phi i32 [ %144, %142 ], [ 0, %116 ]
  %148 = phi i64 [ %143, %142 ], [ 0, %116 ]
  %149 = getelementptr inbounds %"class.gfx::internal::ShapedText", %"class.gfx::internal::ShapedText"* %11, i64 0, i32 0, i32 0, i32 1
  %150 = bitcast %"struct.gfx::internal::Line"** %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.gfx::internal::ShapedText"* %11 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = sub i64 %151, %153
  %155 = sdiv exact i64 %154, 48
  %156 = trunc i64 %155 to i32
  %157 = icmp slt i32 %147, %156
  br i1 %157, label %158, label %179

158:                                              ; preds = %146
  %159 = inttoptr i64 %153 to %"struct.gfx::internal::Line"*
  %160 = shl i64 %148, 32
  %161 = ashr exact i64 %160, 32
  %162 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %159, i64 %161, i32 3
  %163 = load i32, i32* %162, align 4
  %164 = inttoptr i64 %106 to i64*
  %165 = load i64, i64* %164, align 4
  %166 = lshr i64 %165, 32
  %167 = trunc i64 %166 to i32
  %168 = icmp slt i32 %163, 0
  %169 = select i1 %168, i32 -2147483648, i32 2147483647
  %170 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %167, i32 %163) #17
  %171 = extractvalue { i32, i1 } %170, 1
  %172 = extractvalue { i32, i1 } %170, 0
  %173 = select i1 %171, i32 %169, i32 %172, !prof !41
  %174 = zext i32 %173 to i64
  %175 = shl nuw i64 %174, 32
  %176 = and i64 %165, 4294967295
  %177 = or i64 %175, %176
  %178 = bitcast %"class.gfx::Point"* %3 to i64*
  store i64 %177, i64* %178, align 4
  br label %179

179:                                              ; preds = %105, %23, %142, %146, %158
  %180 = phi i1 [ false, %142 ], [ false, %146 ], [ true, %158 ], [ false, %23 ], [ false, %105 ]
  %181 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %13, align 8
  br label %182

182:                                              ; preds = %179, %4
  %183 = phi %"class.gfx::Rect"* [ %181, %179 ], [ %20, %4 ]
  %184 = phi i1 [ %180, %179 ], [ false, %4 ]
  %185 = icmp eq %"class.gfx::Rect"* %183, null
  br i1 %185, label %190, label %186

186:                                              ; preds = %182
  %187 = ptrtoint %"class.gfx::Rect"* %183 to i64
  %188 = bitcast %"class.gfx::Rect"** %14 to i64*
  store i64 %187, i64* %188, align 8
  %189 = bitcast %"class.gfx::Rect"* %183 to i8*
  call void @_ZdlPv(i8* %189) #18
  br label %190

190:                                              ; preds = %182, %186
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #17
  ret i1 %184
}

declare i64 @_ZNK3gfx4Rect11CenterPointEv(%"class.gfx::Rect"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx10RenderText16GetTextFromRangeERKNS_5RangeE(%"class.std::__1::basic_string"* noalias sret, %"class.gfx::RenderText"*, %"class.gfx::Range"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %2, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %2, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %5, %7
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %33, label %10

10:                                               ; preds = %3
  %11 = icmp ult i32 %5, %7
  %12 = select i1 %11, i32 %5, i32 %7
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 3
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %15, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  br label %24

22:                                               ; preds = %10
  %23 = zext i8 %17 to i64
  br label %24

24:                                               ; preds = %19, %22
  %25 = phi i64 [ %21, %19 ], [ %23, %22 ]
  %26 = icmp ugt i64 %25, %13
  br i1 %26, label %27, label %33

27:                                               ; preds = %24
  %28 = icmp ugt i32 %5, %7
  %29 = select i1 %28, i32 %5, i32 %7
  %30 = sub i32 %29, %12
  %31 = zext i32 %30 to i64
  %32 = bitcast %"class.std::__1::basic_string"* %14 to %"class.std::__1::allocator.154"*
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %14, i64 %13, i64 %31, %"class.std::__1::allocator.154"* dereferenceable(1) %32) #17
  br label %35

33:                                               ; preds = %3, %24
  %34 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #17
  br label %35

35:                                               ; preds = %33, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK3gfx10RenderText29ExpandRangeToGraphemeBoundaryERKNS_5RangeE(%"class.gfx::RenderText"*, %"class.gfx::Range"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp ult i32 %4, %6
  %8 = select i1 %7, i32 %4, i32 %6
  %9 = zext i32 %8 to i64
  %10 = tail call zeroext i1 @_ZNK3gfx10RenderText18IsValidCursorIndexEm(%"class.gfx::RenderText"* %0, i64 %9) #17
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = tail call i64 @_ZNK3gfx10RenderText23IndexOfAdjacentGraphemeEmNS_22LogicalCursorDirectionE(%"class.gfx::RenderText"* %0, i64 %9, i32 0) #17
  br label %13

13:                                               ; preds = %2, %11
  %14 = phi i64 [ %12, %11 ], [ %9, %2 ]
  %15 = load i32, i32* %3, align 4
  %16 = load i32, i32* %5, align 4
  %17 = icmp ugt i32 %15, %16
  %18 = select i1 %17, i32 %15, i32 %16
  %19 = zext i32 %18 to i64
  %20 = tail call zeroext i1 @_ZNK3gfx10RenderText18IsValidCursorIndexEm(%"class.gfx::RenderText"* %0, i64 %19) #17
  br i1 %20, label %23, label %21

21:                                               ; preds = %13
  %22 = tail call i64 @_ZNK3gfx10RenderText23IndexOfAdjacentGraphemeEmNS_22LogicalCursorDirectionE(%"class.gfx::RenderText"* %0, i64 %19, i32 1) #17
  br label %23

23:                                               ; preds = %13, %21
  %24 = phi i64 [ %22, %21 ], [ %19, %13 ]
  %25 = load i32, i32* %3, align 4
  %26 = load i32, i32* %5, align 4
  %27 = icmp ugt i32 %25, %26
  %28 = select i1 %27, i64 %24, i64 %14
  %29 = select i1 %27, i64 %14, i64 %24
  %30 = shl i64 %29, 32
  %31 = and i64 %28, 4294967295
  %32 = or i64 %30, %31
  ret i64 %32
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gfx10RenderText16IsNewlineSegmentERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKNS_8internal11LineSegmentE(%"class.gfx::RenderText"* nocapture readnone, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"struct.gfx::internal::LineSegment"* nocapture readonly dereferenceable(24)) local_unnamed_addr #12 align 2 {
  %4 = getelementptr inbounds %"struct.gfx::internal::LineSegment", %"struct.gfx::internal::LineSegment"* %2, i64 0, i32 1, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.gfx::internal::LineSegment", %"struct.gfx::internal::LineSegment"* %2, i64 0, i32 1, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %5, %8
  %10 = select i1 %9, i32 %5, i32 %8
  %11 = icmp ult i32 %5, %8
  %12 = select i1 %11, i32 %5, i32 %8
  %13 = sub i32 %10, %12
  switch i32 %13, label %45 [
    i32 1, label %14
    i32 2, label %28
  ]

14:                                               ; preds = %3
  %15 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %15, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  %21 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %22 = select i1 %18, i16* %20, i16* %21
  %23 = getelementptr inbounds i16, i16* %22, i64 %6
  %24 = load i16, i16* %23, align 2
  %25 = icmp eq i16 %24, 13
  br i1 %25, label %45, label %26

26:                                               ; preds = %14
  %27 = icmp eq i16 %24, 10
  ret i1 %27

28:                                               ; preds = %3
  %29 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i16*, i16** %33, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %36 = select i1 %32, i16* %34, i16* %35
  %37 = getelementptr inbounds i16, i16* %36, i64 %6
  %38 = load i16, i16* %37, align 2
  %39 = icmp eq i16 %38, 13
  br i1 %39, label %40, label %45

40:                                               ; preds = %28
  %41 = add nuw nsw i64 %6, 1
  %42 = getelementptr inbounds i16, i16* %36, i64 %41
  %43 = load i16, i16* %42, align 2
  %44 = icmp eq i16 %43, 10
  br label %45

45:                                               ; preds = %3, %28, %40, %14
  %46 = phi i1 [ true, %14 ], [ false, %28 ], [ %44, %40 ], [ false, %3 ]
  ret i1 %46
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK3gfx10RenderText12GetLineRangeERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKNS_8internal4LineE(%"class.gfx::RenderText"* nocapture readnone, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"struct.gfx::internal::Line"* nocapture readonly dereferenceable(48)) local_unnamed_addr #7 align 2 {
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = zext i8 %6 to i64
  %11 = select i1 %7, i64 %9, i64 %10
  %12 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %2, i64 0, i32 0, i32 0, i32 0
  %13 = load %"struct.gfx::internal::LineSegment"*, %"struct.gfx::internal::LineSegment"** %12, align 8
  %14 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %2, i64 0, i32 0, i32 0, i32 1
  %15 = load %"struct.gfx::internal::LineSegment"*, %"struct.gfx::internal::LineSegment"** %14, align 8
  %16 = icmp eq %"struct.gfx::internal::LineSegment"* %13, %15
  br i1 %16, label %102, label %18

17:                                               ; preds = %18
  br i1 %16, label %102, label %38

18:                                               ; preds = %3, %18
  %19 = phi i64 [ %35, %18 ], [ 0, %3 ]
  %20 = phi i64 [ %30, %18 ], [ %11, %3 ]
  %21 = phi %"struct.gfx::internal::LineSegment"* [ %36, %18 ], [ %13, %3 ]
  %22 = getelementptr inbounds %"struct.gfx::internal::LineSegment", %"struct.gfx::internal::LineSegment"* %21, i64 0, i32 1, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"struct.gfx::internal::LineSegment", %"struct.gfx::internal::LineSegment"* %21, i64 0, i32 1, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp ult i32 %23, %25
  %27 = select i1 %26, i32 %23, i32 %25
  %28 = zext i32 %27 to i64
  %29 = icmp ugt i64 %20, %28
  %30 = select i1 %29, i64 %28, i64 %20
  %31 = icmp ugt i32 %23, %25
  %32 = select i1 %31, i32 %23, i32 %25
  %33 = zext i32 %32 to i64
  %34 = icmp ult i64 %19, %33
  %35 = select i1 %34, i64 %33, i64 %19
  %36 = getelementptr inbounds %"struct.gfx::internal::LineSegment", %"struct.gfx::internal::LineSegment"* %21, i64 1
  %37 = icmp eq %"struct.gfx::internal::LineSegment"* %36, %15
  br i1 %37, label %17, label %18

38:                                               ; preds = %17
  %39 = getelementptr inbounds %"struct.gfx::internal::LineSegment", %"struct.gfx::internal::LineSegment"* %15, i64 -1, i32 1, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"struct.gfx::internal::LineSegment", %"struct.gfx::internal::LineSegment"* %15, i64 -1, i32 1, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = icmp ugt i32 %40, %43
  %45 = select i1 %44, i32 %40, i32 %43
  %46 = icmp ult i32 %40, %43
  %47 = select i1 %46, i32 %40, i32 %43
  %48 = sub i32 %45, %47
  switch i32 %48, label %69 [
    i32 1, label %49
    i32 2, label %56
  ]

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i16*, i16** %50, align 8
  %52 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %53 = select i1 %7, i16* %51, i16* %52
  %54 = getelementptr inbounds i16, i16* %53, i64 %41
  %55 = load i16, i16* %54, align 2
  switch i16 %55, label %69 [
    i16 13, label %100
    i16 10, label %100
  ]

56:                                               ; preds = %38
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i16*, i16** %57, align 8
  %59 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %60 = select i1 %7, i16* %58, i16* %59
  %61 = getelementptr inbounds i16, i16* %60, i64 %41
  %62 = load i16, i16* %61, align 2
  %63 = icmp eq i16 %62, 13
  br i1 %63, label %64, label %69

64:                                               ; preds = %56
  %65 = add nuw nsw i64 %41, 1
  %66 = getelementptr inbounds i16, i16* %60, i64 %65
  %67 = load i16, i16* %66, align 2
  %68 = icmp eq i16 %67, 10
  br i1 %68, label %100, label %69

69:                                               ; preds = %49, %38, %56, %64
  %70 = getelementptr inbounds %"struct.gfx::internal::LineSegment", %"struct.gfx::internal::LineSegment"* %13, i64 0, i32 1, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.gfx::internal::LineSegment", %"struct.gfx::internal::LineSegment"* %13, i64 0, i32 1, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = icmp ugt i32 %71, %74
  %76 = select i1 %75, i32 %71, i32 %74
  %77 = icmp ult i32 %71, %74
  %78 = select i1 %77, i32 %71, i32 %74
  %79 = sub i32 %76, %78
  switch i32 %79, label %102 [
    i32 1, label %80
    i32 2, label %87
  ]

80:                                               ; preds = %69
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i16*, i16** %81, align 8
  %83 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %84 = select i1 %7, i16* %82, i16* %83
  %85 = getelementptr inbounds i16, i16* %84, i64 %72
  %86 = load i16, i16* %85, align 2
  switch i16 %86, label %102 [
    i16 13, label %100
    i16 10, label %100
  ]

87:                                               ; preds = %69
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i16*, i16** %88, align 8
  %90 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %91 = select i1 %7, i16* %89, i16* %90
  %92 = getelementptr inbounds i16, i16* %91, i64 %72
  %93 = load i16, i16* %92, align 2
  %94 = icmp eq i16 %93, 13
  br i1 %94, label %95, label %102

95:                                               ; preds = %87
  %96 = add nuw nsw i64 %72, 1
  %97 = getelementptr inbounds i16, i16* %91, i64 %96
  %98 = load i16, i16* %97, align 2
  %99 = icmp eq i16 %98, 10
  br i1 %99, label %100, label %102

100:                                              ; preds = %80, %80, %49, %49, %95, %64
  %101 = add i64 %35, -1
  br label %102

102:                                              ; preds = %3, %80, %69, %87, %100, %95, %17
  %103 = phi i64 [ %30, %17 ], [ %30, %100 ], [ %30, %95 ], [ %30, %87 ], [ %30, %69 ], [ %30, %80 ], [ %11, %3 ]
  %104 = phi i64 [ %35, %17 ], [ %101, %100 ], [ %35, %95 ], [ %35, %87 ], [ %35, %69 ], [ %35, %80 ], [ 0, %3 ]
  %105 = shl i64 %104, 32
  %106 = and i64 %103, 4294967295
  %107 = or i64 %105, %106
  ret i64 %107
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderTextC2Ev(%"class.gfx::RenderText"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN3gfx10RenderTextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 4
  %5 = bitcast float* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 32, i1 false)
  %6 = tail call zeroext i1 @_ZN4base4i18n5IsRTLEv() #17
  %7 = select i1 %6, i32 2, i32 0
  store i32 %7, i32* %4, align 8
  %8 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 5
  %9 = bitcast i32* %8 to <4 x i32>*
  store <4 x i32> <i32 1, i32 0, i32 0, i32 0>, <4 x i32>* %9, align 4
  %10 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 10
  tail call void @_ZN3gfx8FontListC1Ev(%"class.gfx::FontList"* %10) #17
  %11 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 11
  tail call void @_ZN3gfx14SelectionModelC1Ev(%"class.gfx::SelectionModel"* %11) #17
  %12 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 12
  %13 = bitcast %"class.gfx::Rect"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 16, i1 false) #17
  %14 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 13
  store i8 1, i8* %14, align 8
  %15 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 14
  store i8 1, i8* %15, align 1
  %16 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 16
  store i32 -65536, i32* %16, align 4
  %17 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 17
  store i32 -65536, i32* %17, align 8
  %18 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 18
  store i8 0, i8* %18, align 4
  %19 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 19
  store i8 0, i8* %19, align 1
  %20 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 21
  %21 = bitcast %"class.gfx::Range"* %20 to i64*
  store i64 -1, i64* %21, align 8
  %22 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 22
  %23 = tail call i8* @_Znwm(i64 16) #18
  %24 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 22, i32 0, i32 0, i32 1
  %25 = bitcast %"class.gfx::BreakList"* %22 to i8**
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds i8, i8* %23, i64 16
  %27 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 22, i32 0, i32 0, i32 2, i32 0, i32 0
  %28 = bitcast %"struct.std::__1::pair"** %27 to i8**
  store i8* %26, i8** %28, align 8
  %29 = bitcast i8* %23 to i64*
  store i64 0, i64* %29, align 8
  %30 = getelementptr inbounds i8, i8* %23, i64 8
  %31 = bitcast i8* %30 to i32*
  store i32 -65536, i32* %31, align 8
  %32 = bitcast %"struct.std::__1::pair"** %24 to i64*
  %33 = ptrtoint i8* %26 to i64
  store i64 %33, i64* %32, align 8
  %34 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 22, i32 1
  store i64 0, i64* %34, align 8
  %35 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 23
  %36 = tail call i8* @_Znwm(i64 16) #18
  %37 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 23, i32 0, i32 0, i32 1
  %38 = bitcast %"class.gfx::BreakList.91"* %35 to i8**
  store i8* %36, i8** %38, align 8
  %39 = getelementptr inbounds i8, i8* %36, i64 16
  %40 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 23, i32 0, i32 0, i32 2, i32 0, i32 0
  %41 = bitcast %"struct.std::__1::pair.94"** %40 to i8**
  store i8* %39, i8** %41, align 8
  %42 = bitcast i8* %36 to i64*
  store i64 0, i64* %42, align 8
  %43 = getelementptr inbounds i8, i8* %36, i64 8
  %44 = bitcast i8* %43 to i32*
  store i32 0, i32* %44, align 8
  %45 = bitcast %"struct.std::__1::pair.94"** %37 to i64*
  %46 = ptrtoint i8* %39 to i64
  store i64 %46, i64* %45, align 8
  %47 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 23, i32 1
  store i64 0, i64* %47, align 8
  %48 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 24
  %49 = tail call i8* @_Znwm(i64 16) #18
  %50 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 24, i32 0, i32 0, i32 1
  %51 = bitcast %"class.gfx::BreakList.101"* %48 to i8**
  store i8* %49, i8** %51, align 8
  %52 = getelementptr inbounds i8, i8* %49, i64 16
  %53 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 24, i32 0, i32 0, i32 2, i32 0, i32 0
  %54 = bitcast %"struct.std::__1::pair.104"** %53 to i8**
  store i8* %52, i8** %54, align 8
  %55 = bitcast i8* %49 to i64*
  store i64 0, i64* %55, align 8
  %56 = getelementptr inbounds i8, i8* %49, i64 8
  %57 = bitcast i8* %56 to i32*
  store i32 0, i32* %57, align 8
  %58 = bitcast %"struct.std::__1::pair.104"** %50 to i64*
  %59 = ptrtoint i8* %52 to i64
  store i64 %59, i64* %58, align 8
  %60 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 24, i32 1
  store i64 0, i64* %60, align 8
  %61 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 25
  %62 = tail call i8* @_Znwm(i64 16) #18
  %63 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 25, i32 0, i32 0, i32 1
  %64 = bitcast %"class.gfx::BreakList.111"* %61 to i8**
  store i8* %62, i8** %64, align 8
  %65 = getelementptr inbounds i8, i8* %62, i64 16
  %66 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 25, i32 0, i32 0, i32 2, i32 0, i32 0
  %67 = bitcast %"struct.std::__1::pair.114"** %66 to i8**
  store i8* %65, i8** %67, align 8
  %68 = bitcast i8* %62 to i64*
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds i8, i8* %62, i64 8
  %70 = bitcast i8* %69 to i32*
  store i32 400, i32* %70, align 8
  %71 = bitcast %"struct.std::__1::pair.114"** %63 to i64*
  %72 = ptrtoint i8* %65 to i64
  store i64 %72, i64* %71, align 8
  %73 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 25, i32 1
  store i64 0, i64* %73, align 8
  %74 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26
  %75 = tail call i8* @_Znwm(i64 16) #18
  %76 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 0, i32 0, i32 0, i32 1
  %77 = bitcast %"struct.std::__1::array"* %74 to i8**
  store i8* %75, i8** %77, align 8
  %78 = getelementptr inbounds i8, i8* %75, i64 16
  %79 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %80 = bitcast %"struct.std::__1::pair.124"** %79 to i8**
  store i8* %78, i8** %80, align 8
  %81 = bitcast i8* %75 to i64*
  store i64 0, i64* %81, align 8
  %82 = getelementptr inbounds i8, i8* %75, i64 8
  store i8 0, i8* %82, align 8
  %83 = bitcast %"struct.std::__1::pair.124"** %76 to i64*
  %84 = ptrtoint i8* %78 to i64
  store i64 %84, i64* %83, align 8
  %85 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 0, i32 1
  store i64 0, i64* %85, align 8
  %86 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 1
  %87 = tail call i8* @_Znwm(i64 16) #18
  %88 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 1, i32 0, i32 0, i32 1
  %89 = bitcast %"class.gfx::BreakList.121"* %86 to i8**
  store i8* %87, i8** %89, align 8
  %90 = getelementptr inbounds i8, i8* %87, i64 16
  %91 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %92 = bitcast %"struct.std::__1::pair.124"** %91 to i8**
  store i8* %90, i8** %92, align 8
  %93 = bitcast i8* %87 to i64*
  store i64 0, i64* %93, align 8
  %94 = getelementptr inbounds i8, i8* %87, i64 8
  store i8 0, i8* %94, align 8
  %95 = bitcast %"struct.std::__1::pair.124"** %88 to i64*
  %96 = ptrtoint i8* %90 to i64
  store i64 %96, i64* %95, align 8
  %97 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 1, i32 1
  store i64 0, i64* %97, align 8
  %98 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 2
  %99 = tail call i8* @_Znwm(i64 16) #18
  %100 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 2, i32 0, i32 0, i32 1
  %101 = bitcast %"class.gfx::BreakList.121"* %98 to i8**
  store i8* %99, i8** %101, align 8
  %102 = getelementptr inbounds i8, i8* %99, i64 16
  %103 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %104 = bitcast %"struct.std::__1::pair.124"** %103 to i8**
  store i8* %102, i8** %104, align 8
  %105 = bitcast i8* %99 to i64*
  store i64 0, i64* %105, align 8
  %106 = getelementptr inbounds i8, i8* %99, i64 8
  store i8 0, i8* %106, align 8
  %107 = bitcast %"struct.std::__1::pair.124"** %100 to i64*
  %108 = ptrtoint i8* %102 to i64
  store i64 %108, i64* %107, align 8
  %109 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 2, i32 1
  store i64 0, i64* %109, align 8
  %110 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 3
  %111 = tail call i8* @_Znwm(i64 16) #18
  %112 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 3, i32 0, i32 0, i32 1
  %113 = bitcast %"class.gfx::BreakList.121"* %110 to i8**
  store i8* %111, i8** %113, align 8
  %114 = getelementptr inbounds i8, i8* %111, i64 16
  %115 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %116 = bitcast %"struct.std::__1::pair.124"** %115 to i8**
  store i8* %114, i8** %116, align 8
  %117 = bitcast i8* %111 to i64*
  store i64 0, i64* %117, align 8
  %118 = getelementptr inbounds i8, i8* %111, i64 8
  store i8 0, i8* %118, align 8
  %119 = bitcast %"struct.std::__1::pair.124"** %112 to i64*
  %120 = ptrtoint i8* %114 to i64
  store i64 %120, i64* %119, align 8
  %121 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 3, i32 1
  store i64 0, i64* %121, align 8
  %122 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 27
  %123 = tail call i8* @_Znwm(i64 16) #18
  %124 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 27, i32 0, i32 0, i32 1
  %125 = bitcast %"class.gfx::BreakList"* %122 to i8**
  store i8* %123, i8** %125, align 8
  %126 = getelementptr inbounds i8, i8* %123, i64 16
  %127 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 27, i32 0, i32 0, i32 2, i32 0, i32 0
  %128 = bitcast %"struct.std::__1::pair"** %127 to i8**
  store i8* %126, i8** %128, align 8
  %129 = bitcast i8* %123 to i64*
  store i64 0, i64* %129, align 8
  %130 = getelementptr inbounds i8, i8* %123, i64 8
  %131 = bitcast i8* %130 to i32*
  store i32 0, i32* %131, align 8
  %132 = bitcast %"struct.std::__1::pair"** %124 to i64*
  %133 = ptrtoint i8* %126 to i64
  store i64 %133, i64* %132, align 8
  %134 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 27, i32 1
  store i64 0, i64* %134, align 8
  %135 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 28
  %136 = tail call i8* @_Znwm(i64 16) #18
  %137 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 28, i32 0, i32 0, i32 1
  %138 = bitcast %"class.gfx::BreakList.91"* %135 to i8**
  store i8* %136, i8** %138, align 8
  %139 = getelementptr inbounds i8, i8* %136, i64 16
  %140 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 28, i32 0, i32 0, i32 2, i32 0, i32 0
  %141 = bitcast %"struct.std::__1::pair.94"** %140 to i8**
  store i8* %139, i8** %141, align 8
  %142 = bitcast i8* %136 to i64*
  store i64 0, i64* %142, align 8
  %143 = getelementptr inbounds i8, i8* %136, i64 8
  %144 = bitcast i8* %143 to i32*
  store i32 0, i32* %144, align 8
  %145 = bitcast %"struct.std::__1::pair.94"** %137 to i64*
  %146 = ptrtoint i8* %139 to i64
  store i64 %146, i64* %145, align 8
  %147 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 28, i32 1
  store i64 0, i64* %147, align 8
  %148 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 29
  %149 = tail call i8* @_Znwm(i64 16) #18
  %150 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 29, i32 0, i32 0, i32 1
  %151 = bitcast %"class.gfx::BreakList.101"* %148 to i8**
  store i8* %149, i8** %151, align 8
  %152 = getelementptr inbounds i8, i8* %149, i64 16
  %153 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 29, i32 0, i32 0, i32 2, i32 0, i32 0
  %154 = bitcast %"struct.std::__1::pair.104"** %153 to i8**
  store i8* %152, i8** %154, align 8
  %155 = bitcast i8* %149 to i64*
  store i64 0, i64* %155, align 8
  %156 = getelementptr inbounds i8, i8* %149, i64 8
  %157 = bitcast i8* %156 to i32*
  store i32 0, i32* %157, align 8
  %158 = bitcast %"struct.std::__1::pair.104"** %150 to i64*
  %159 = ptrtoint i8* %152 to i64
  store i64 %159, i64* %158, align 8
  %160 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 29, i32 1
  store i64 0, i64* %160, align 8
  %161 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 30
  %162 = tail call i8* @_Znwm(i64 16) #18
  %163 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 30, i32 0, i32 0, i32 1
  %164 = bitcast %"class.gfx::BreakList.111"* %161 to i8**
  store i8* %162, i8** %164, align 8
  %165 = getelementptr inbounds i8, i8* %162, i64 16
  %166 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 30, i32 0, i32 0, i32 2, i32 0, i32 0
  %167 = bitcast %"struct.std::__1::pair.114"** %166 to i8**
  store i8* %165, i8** %167, align 8
  %168 = bitcast i8* %162 to i64*
  store i64 0, i64* %168, align 8
  %169 = getelementptr inbounds i8, i8* %162, i64 8
  %170 = bitcast i8* %169 to i32*
  store i32 0, i32* %170, align 8
  %171 = bitcast %"struct.std::__1::pair.114"** %163 to i64*
  %172 = ptrtoint i8* %165 to i64
  store i64 %172, i64* %171, align 8
  %173 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 30, i32 1
  store i64 0, i64* %173, align 8
  %174 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31
  %175 = tail call i8* @_Znwm(i64 16) #18
  %176 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 0, i32 0, i32 0, i32 1
  %177 = bitcast %"struct.std::__1::array"* %174 to i8**
  store i8* %175, i8** %177, align 8
  %178 = getelementptr inbounds i8, i8* %175, i64 16
  %179 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %180 = bitcast %"struct.std::__1::pair.124"** %179 to i8**
  store i8* %178, i8** %180, align 8
  %181 = bitcast i8* %175 to i64*
  store i64 0, i64* %181, align 8
  %182 = getelementptr inbounds i8, i8* %175, i64 8
  store i8 0, i8* %182, align 8
  %183 = bitcast %"struct.std::__1::pair.124"** %176 to i64*
  %184 = ptrtoint i8* %178 to i64
  store i64 %184, i64* %183, align 8
  %185 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 0, i32 1
  store i64 0, i64* %185, align 8
  %186 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 1
  %187 = tail call i8* @_Znwm(i64 16) #18
  %188 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 1, i32 0, i32 0, i32 1
  %189 = bitcast %"class.gfx::BreakList.121"* %186 to i8**
  store i8* %187, i8** %189, align 8
  %190 = getelementptr inbounds i8, i8* %187, i64 16
  %191 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %192 = bitcast %"struct.std::__1::pair.124"** %191 to i8**
  store i8* %190, i8** %192, align 8
  %193 = bitcast i8* %187 to i64*
  store i64 0, i64* %193, align 8
  %194 = getelementptr inbounds i8, i8* %187, i64 8
  store i8 0, i8* %194, align 8
  %195 = bitcast %"struct.std::__1::pair.124"** %188 to i64*
  %196 = ptrtoint i8* %190 to i64
  store i64 %196, i64* %195, align 8
  %197 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 1, i32 1
  store i64 0, i64* %197, align 8
  %198 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 2
  %199 = tail call i8* @_Znwm(i64 16) #18
  %200 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 2, i32 0, i32 0, i32 1
  %201 = bitcast %"class.gfx::BreakList.121"* %198 to i8**
  store i8* %199, i8** %201, align 8
  %202 = getelementptr inbounds i8, i8* %199, i64 16
  %203 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %204 = bitcast %"struct.std::__1::pair.124"** %203 to i8**
  store i8* %202, i8** %204, align 8
  %205 = bitcast i8* %199 to i64*
  store i64 0, i64* %205, align 8
  %206 = getelementptr inbounds i8, i8* %199, i64 8
  store i8 0, i8* %206, align 8
  %207 = bitcast %"struct.std::__1::pair.124"** %200 to i64*
  %208 = ptrtoint i8* %202 to i64
  store i64 %208, i64* %207, align 8
  %209 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 2, i32 1
  store i64 0, i64* %209, align 8
  %210 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 3
  %211 = tail call i8* @_Znwm(i64 16) #18
  %212 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 3, i32 0, i32 0, i32 1
  %213 = bitcast %"class.gfx::BreakList.121"* %210 to i8**
  store i8* %211, i8** %213, align 8
  %214 = getelementptr inbounds i8, i8* %211, i64 16
  %215 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %216 = bitcast %"struct.std::__1::pair.124"** %215 to i8**
  store i8* %214, i8** %216, align 8
  %217 = bitcast i8* %211 to i64*
  store i64 0, i64* %217, align 8
  %218 = getelementptr inbounds i8, i8* %211, i64 8
  store i8 0, i8* %218, align 8
  %219 = bitcast %"struct.std::__1::pair.124"** %212 to i64*
  %220 = ptrtoint i8* %214 to i64
  store i64 %220, i64* %219, align 8
  %221 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 3, i32 1
  %222 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 35
  %223 = bitcast i64* %221 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %223, i8 0, i64 33, i1 false)
  store i32 -1, i32* %222, align 4
  %224 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 36
  %225 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 41
  store i8 0, i8* %225, align 2
  %226 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 43
  store i32 0, i32* %226, align 8
  %227 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 44
  store i8 0, i8* %227, align 4
  %228 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 46
  store i64 0, i64* %228, align 8
  %229 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 47
  store i32 0, i32* %229, align 8
  %230 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 48
  store i8 0, i8* %230, align 4
  %231 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 50
  %232 = bitcast %"class.gfx::Rect"* %231 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %232, i8 0, i64 16, i1 false) #17
  %233 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 51
  %234 = bitcast i64* %224 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %234, i8 0, i64 61, i1 false)
  store i8 1, i8* %233, align 8
  %235 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 53, i32 0
  store i32 0, i32* %235, align 4
  %236 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 53, i32 1
  store i32 0, i32* %236, align 4
  %237 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 54
  store i32 2147483647, i32* %237, align 4
  %238 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 55
  store i8 0, i8* %238, align 8
  %239 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 57
  %240 = bitcast %"class.std::__1::vector.176"* %239 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %240, i8 0, i64 24, i1 false) #17
  %241 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58
  %242 = tail call i8* @_Znwm(i64 16) #18
  %243 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 0, i32 0, i32 1
  %244 = bitcast %"class.gfx::BreakList.183"* %241 to i8**
  store i8* %242, i8** %244, align 8
  %245 = getelementptr inbounds i8, i8* %242, i64 16
  %246 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 0, i32 0, i32 2, i32 0, i32 0
  %247 = bitcast %"struct.std::__1::pair.186"** %246 to i8**
  store i8* %245, i8** %247, align 8
  %248 = bitcast %"struct.std::__1::pair.186"** %243 to i64*
  %249 = ptrtoint i8* %245 to i64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %242, i8 0, i64 16, i1 false) #17
  store i64 %249, i64* %248, align 8
  %250 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 1
  %251 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 60
  %252 = bitcast i64* %250 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %252, i8 0, i64 16, i1 false)
  store float 0x3FAC71C720000000, float* %251, align 8
  %253 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 61
  store i32 0, i32* %253, align 4
  %254 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 62, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %254, align 4
  %255 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 63
  store i8 0, i8* %255, align 8
  ret void
}

declare zeroext i1 @_ZN4base4i18n5IsRTLEv() local_unnamed_addr #1

declare void @_ZN3gfx8FontListC1Ev(%"class.gfx::FontList"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx10RenderText20GetTextStyleIteratorEv(%"class.gfx::internal::StyleIterator"* noalias nocapture sret, %"class.gfx::RenderText"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 22
  %4 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 23
  %5 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 24
  %6 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 25
  %7 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 26
  %8 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 0
  store %"class.gfx::BreakList"* %3, %"class.gfx::BreakList"** %8, align 8
  %9 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 1
  store %"class.gfx::BreakList.91"* %4, %"class.gfx::BreakList.91"** %9, align 8
  %10 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 2
  store %"class.gfx::BreakList.101"* %5, %"class.gfx::BreakList.101"** %10, align 8
  %11 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 3
  store %"class.gfx::BreakList.111"* %6, %"class.gfx::BreakList.111"** %11, align 8
  %12 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 4
  store %"struct.std::__1::array"* %7, %"struct.std::__1::array"** %12, align 8
  %13 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 5, i32 0
  %14 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 6, i32 0
  %15 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 7, i32 0
  %16 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 8, i32 0
  %17 = bitcast %"class.gfx::BreakList"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"struct.std::__1::pair"** %13 to i64*
  store i64 %18, i64* %19, align 8
  %20 = bitcast %"class.gfx::BreakList.91"* %4 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"struct.std::__1::pair.94"** %14 to i64*
  store i64 %21, i64* %22, align 8
  %23 = bitcast %"class.gfx::BreakList.101"* %5 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"struct.std::__1::pair.104"** %15 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"class.gfx::BreakList.111"* %6 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"struct.std::__1::pair.114"** %16 to i64*
  store i64 %27, i64* %28, align 8
  %29 = bitcast %"struct.std::__1::array"* %7 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 9, i32 0, i64 0
  %32 = bitcast %"class.std::__1::__wrap_iter.135"* %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 26, i32 0, i64 1, i32 0, i32 0, i32 0
  %34 = bitcast %"struct.std::__1::pair.124"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 9, i32 0, i64 1
  %37 = bitcast %"class.std::__1::__wrap_iter.135"* %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 26, i32 0, i64 2, i32 0, i32 0, i32 0
  %39 = bitcast %"struct.std::__1::pair.124"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 9, i32 0, i64 2
  %42 = bitcast %"class.std::__1::__wrap_iter.135"* %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 26, i32 0, i64 3, i32 0, i32 0, i32 0
  %44 = bitcast %"struct.std::__1::pair.124"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 9, i32 0, i64 3
  %47 = bitcast %"class.std::__1::__wrap_iter.135"* %46 to i64*
  store i64 %45, i64* %47, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx10RenderText26GetLayoutTextStyleIteratorEv(%"class.gfx::internal::StyleIterator"* noalias nocapture sret, %"class.gfx::RenderText"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZNK3gfx10RenderText23EnsureLayoutTextUpdatedEv(%"class.gfx::RenderText"* %1)
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 27
  %4 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 28
  %5 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 29
  %6 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 30
  %7 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 31
  %8 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 0
  store %"class.gfx::BreakList"* %3, %"class.gfx::BreakList"** %8, align 8
  %9 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 1
  store %"class.gfx::BreakList.91"* %4, %"class.gfx::BreakList.91"** %9, align 8
  %10 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 2
  store %"class.gfx::BreakList.101"* %5, %"class.gfx::BreakList.101"** %10, align 8
  %11 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 3
  store %"class.gfx::BreakList.111"* %6, %"class.gfx::BreakList.111"** %11, align 8
  %12 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 4
  store %"struct.std::__1::array"* %7, %"struct.std::__1::array"** %12, align 8
  %13 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 5, i32 0
  %14 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 6, i32 0
  %15 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 7, i32 0
  %16 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 8, i32 0
  %17 = bitcast %"class.gfx::BreakList"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"struct.std::__1::pair"** %13 to i64*
  store i64 %18, i64* %19, align 8
  %20 = bitcast %"class.gfx::BreakList.91"* %4 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"struct.std::__1::pair.94"** %14 to i64*
  store i64 %21, i64* %22, align 8
  %23 = bitcast %"class.gfx::BreakList.101"* %5 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"struct.std::__1::pair.104"** %15 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"class.gfx::BreakList.111"* %6 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"struct.std::__1::pair.114"** %16 to i64*
  store i64 %27, i64* %28, align 8
  %29 = bitcast %"struct.std::__1::array"* %7 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 9, i32 0, i64 0
  %32 = bitcast %"class.std::__1::__wrap_iter.135"* %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 31, i32 0, i64 1, i32 0, i32 0, i32 0
  %34 = bitcast %"struct.std::__1::pair.124"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 9, i32 0, i64 1
  %37 = bitcast %"class.std::__1::__wrap_iter.135"* %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 31, i32 0, i64 2, i32 0, i32 0, i32 0
  %39 = bitcast %"struct.std::__1::pair.124"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 9, i32 0, i64 2
  %42 = bitcast %"class.std::__1::__wrap_iter.135"* %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 31, i32 0, i64 3, i32 0, i32 0, i32 0
  %44 = bitcast %"struct.std::__1::pair.124"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.gfx::internal::StyleIterator", %"class.gfx::internal::StyleIterator"* %0, i64 0, i32 9, i32 0, i64 3
  %47 = bitcast %"class.std::__1::__wrap_iter.135"* %46 to i64*
  store i64 %45, i64* %47, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gfx10RenderText13IsHomogeneousEv(%"class.gfx::RenderText"* readonly) local_unnamed_addr #12 align 2 {
  %2 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 22, i32 0
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 22, i32 0, i32 0, i32 1
  %4 = bitcast %"struct.std::__1::pair"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.84"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %61, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 23, i32 0
  %13 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 23, i32 0, i32 0, i32 1
  %14 = bitcast %"struct.std::__1::pair.94"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector.92"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = ashr exact i64 %18, 4
  %20 = icmp ugt i64 %19, 1
  br i1 %20, label %61, label %21

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 24, i32 0
  %23 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 24, i32 0, i32 0, i32 1
  %24 = bitcast %"struct.std::__1::pair.104"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector.102"* %22 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = ashr exact i64 %28, 4
  %30 = icmp ugt i64 %29, 1
  br i1 %30, label %61, label %31

31:                                               ; preds = %21
  %32 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 25, i32 0
  %33 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 25, i32 0, i32 0, i32 1
  %34 = bitcast %"struct.std::__1::pair.114"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.std::__1::vector.112"* %32 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %35, %37
  %39 = ashr exact i64 %38, 4
  %40 = icmp ugt i64 %39, 1
  br i1 %40, label %61, label %41

41:                                               ; preds = %31
  %42 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 0
  %43 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 0, i32 0, i32 0, i32 1
  %44 = bitcast %"struct.std::__1::pair.124"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.gfx::BreakList.121"* %42 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %45, %47
  %49 = ashr exact i64 %48, 4
  %50 = icmp ugt i64 %49, 1
  br i1 %50, label %61, label %51

51:                                               ; preds = %41
  %52 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 1
  %53 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 1, i32 0, i32 0, i32 1
  %54 = bitcast %"struct.std::__1::pair.124"** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.gfx::BreakList.121"* %52 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = sub i64 %55, %57
  %59 = ashr exact i64 %58, 4
  %60 = icmp ugt i64 %59, 1
  br i1 %60, label %61, label %62

61:                                               ; preds = %41, %51, %62, %1, %11, %21, %31
  ret i1 false

62:                                               ; preds = %51
  %63 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 2
  %64 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 2, i32 0, i32 0, i32 1
  %65 = bitcast %"struct.std::__1::pair.124"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.gfx::BreakList.121"* %63 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = sub i64 %66, %68
  %70 = ashr exact i64 %69, 4
  %71 = icmp ugt i64 %70, 1
  br i1 %71, label %61, label %72

72:                                               ; preds = %62
  %73 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 3
  %74 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 26, i32 0, i64 3, i32 0, i32 0, i32 1
  %75 = bitcast %"struct.std::__1::pair.124"** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.gfx::BreakList.121"* %73 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = sub i64 %76, %78
  %80 = ashr exact i64 %79, 4
  %81 = icmp ult i64 %80, 2
  ret i1 %81
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gfx10RenderText22GetDisplayTextBaselineEv(%"class.gfx::RenderText"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*)***
  %3 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %2, align 8
  %4 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %3, i64 13
  %5 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %4, align 8
  tail call void %5(%"class.gfx::RenderText"* %0) #17
  %6 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 59, i32 0, i32 0, i32 0
  %7 = load %"class.gfx::internal::ShapedText"*, %"class.gfx::internal::ShapedText"** %6, align 8
  %8 = getelementptr inbounds %"class.gfx::internal::ShapedText", %"class.gfx::internal::ShapedText"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.gfx::internal::Line"*, %"struct.gfx::internal::Line"** %8, align 8
  %10 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %9, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText18EdgeSelectionModelENS_21VisualCursorDirectionE(%"class.gfx::SelectionModel"* noalias sret, %"class.gfx::RenderText"*, i32) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.gfx::RenderText"* %1 to void (%"class.gfx::RenderText"*)***
  %5 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %5, i64 13
  %7 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %6, align 8
  tail call void %7(%"class.gfx::RenderText"* %1) #17
  %8 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 8
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %28

11:                                               ; preds = %3
  %12 = bitcast %"class.gfx::RenderText"* %1 to %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)***
  %13 = load %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)**, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)** %13, i64 2
  %15 = load %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)** %14, align 8
  %16 = tail call dereferenceable(24) %"class.std::__1::basic_string"* %15(%"class.gfx::RenderText"* %1) #17
  %17 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 6
  %18 = load i32, i32* %17, align 8
  switch i32 %18, label %25 [
    i32 0, label %19
    i32 1, label %21
    i32 2, label %26
    i32 3, label %24
    i32 4, label %26
  ]

19:                                               ; preds = %11
  %20 = tail call i32 @_ZN4base4i18n32GetFirstStrongCharacterDirectionERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %16) #17
  br label %26

21:                                               ; preds = %11
  %22 = tail call zeroext i1 @_ZN4base4i18n5IsRTLEv() #17
  %23 = select i1 %22, i32 1, i32 2
  br label %26

24:                                               ; preds = %11
  br label %26

25:                                               ; preds = %11
  br label %26

26:                                               ; preds = %25, %24, %21, %19, %11, %11
  %27 = phi i32 [ 0, %25 ], [ 1, %24 ], [ %23, %21 ], [ %20, %19 ], [ 2, %11 ], [ 2, %11 ]
  store i32 %27, i32* %8, align 8
  br label %28

28:                                               ; preds = %3, %26
  %29 = phi i32 [ %27, %26 ], [ %9, %3 ]
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i32
  %32 = icmp eq i32 %31, %2
  br i1 %32, label %33, label %46

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 3
  %35 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %35, i64 0, i32 1, i32 1
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  br label %44

42:                                               ; preds = %33
  %43 = zext i8 %37 to i64
  br label %44

44:                                               ; preds = %39, %42
  %45 = phi i64 [ %41, %39 ], [ %43, %42 ]
  tail call void @_ZN3gfx14SelectionModelC1EmNS_22LogicalCursorDirectionE(%"class.gfx::SelectionModel"* %0, i64 %45, i32 1) #17
  br label %47

46:                                               ; preds = %28
  tail call void @_ZN3gfx14SelectionModelC1EmNS_22LogicalCursorDirectionE(%"class.gfx::SelectionModel"* %0, i64 0, i32 0) #17
  br label %47

47:                                               ; preds = %46, %44
  ret void
}

declare void @_ZN3gfx14SelectionModel21AddSecondarySelectionERKNS_5RangeE(%"class.gfx::SelectionModel"*, %"class.gfx::Range"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK3gfx10RenderText23TextIndexToDisplayIndexEm(%"class.gfx::RenderText"*, i64) local_unnamed_addr #0 align 2 {
  tail call void @_ZNK3gfx10RenderText23EnsureLayoutTextUpdatedEv(%"class.gfx::RenderText"* %0) #17
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = zext i8 %6 to i64
  %11 = select i1 %7, i64 %9, i64 %10
  %12 = icmp eq i64 %11, %1
  br i1 %12, label %50, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 32, i32 0, i32 0
  %15 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %14, align 8
  %16 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 32, i32 0, i32 1
  %17 = load %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"** %16, align 8
  %18 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %15 to i64
  %19 = ptrtoint %"struct.gfx::internal::TextToDisplayIndex"* %17 to i64
  %20 = sub i64 %19, %18
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %38, label %22

22:                                               ; preds = %13
  %23 = ashr exact i64 %20, 4
  br label %24

24:                                               ; preds = %24, %22
  %25 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %15, %22 ], [ %36, %24 ]
  %26 = phi i64 [ %23, %22 ], [ %35, %24 ]
  %27 = lshr i64 %26, 1
  %28 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %25, i64 %27
  %29 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %28, i64 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = icmp ult i64 %30, %1
  %32 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %28, i64 1
  %33 = xor i64 %27, -1
  %34 = add i64 %26, %33
  %35 = select i1 %31, i64 %34, i64 %27
  %36 = select i1 %31, %"struct.gfx::internal::TextToDisplayIndex"* %32, %"struct.gfx::internal::TextToDisplayIndex"* %25
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %38, label %24

38:                                               ; preds = %24, %13
  %39 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %15, %13 ], [ %36, %24 ]
  %40 = icmp eq %"struct.gfx::internal::TextToDisplayIndex"* %39, %17
  br i1 %40, label %45, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %39, i64 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, %1
  br i1 %44, label %47, label %45

45:                                               ; preds = %41, %38
  %46 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %39, i64 -1
  br label %47

47:                                               ; preds = %41, %45
  %48 = phi %"struct.gfx::internal::TextToDisplayIndex"* [ %46, %45 ], [ %39, %41 ]
  %49 = icmp eq %"struct.gfx::internal::TextToDisplayIndex"* %17, %48
  br i1 %49, label %50, label %61

50:                                               ; preds = %2, %47
  %51 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37
  %52 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %52, i64 0, i32 1, i32 1
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  br label %64

59:                                               ; preds = %50
  %60 = zext i8 %54 to i64
  br label %64

61:                                               ; preds = %47
  %62 = getelementptr inbounds %"struct.gfx::internal::TextToDisplayIndex", %"struct.gfx::internal::TextToDisplayIndex"* %48, i64 0, i32 1
  %63 = load i64, i64* %62, align 8
  br label %64

64:                                               ; preds = %56, %59, %61
  %65 = phi i64 [ %63, %61 ], [ %58, %56 ], [ %60, %59 ]
  ret i64 %65
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3gfx10RenderText28OnLayoutTextAttributeChangedEb(%"class.gfx::RenderText"* nocapture, i1 zeroext) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 63
  store i8 0, i8* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK3gfx10RenderText24UpdateLayoutStyleLengthsEm(%"class.gfx::RenderText"*, i64) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 27, i32 0, i32 0, i32 1
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 27, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  br label %7

7:                                                ; preds = %11, %2
  %8 = phi %"struct.std::__1::pair"* [ %4, %2 ], [ %9, %11 ]
  %9 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %8, i64 -1
  %10 = icmp eq %"struct.std::__1::pair"* %9, %6
  br i1 %10, label %18, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %9, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp ugt i64 %13, %1
  br i1 %14, label %7, label %15

15:                                               ; preds = %11
  %16 = icmp ult i64 %13, %1
  %17 = zext i1 %16 to i64
  br label %18

18:                                               ; preds = %7, %15
  %19 = phi %"struct.std::__1::pair"* [ %9, %15 ], [ %6, %7 ]
  %20 = phi i64 [ %17, %15 ], [ 1, %7 ]
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 %20
  %22 = icmp eq %"struct.std::__1::pair"* %21, %4
  br i1 %22, label %24, label %23

23:                                               ; preds = %18
  store %"struct.std::__1::pair"* %21, %"struct.std::__1::pair"** %3, align 8
  br label %24

24:                                               ; preds = %18, %23
  %25 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 27, i32 1
  store i64 %1, i64* %25, align 8
  %26 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 28, i32 0, i32 0, i32 1
  %27 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %26, align 8
  %28 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 28, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %28, align 8
  br label %30

30:                                               ; preds = %34, %24
  %31 = phi %"struct.std::__1::pair.94"* [ %27, %24 ], [ %32, %34 ]
  %32 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %31, i64 -1
  %33 = icmp eq %"struct.std::__1::pair.94"* %32, %29
  br i1 %33, label %41, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %32, i64 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = icmp ugt i64 %36, %1
  br i1 %37, label %30, label %38

38:                                               ; preds = %34
  %39 = icmp ult i64 %36, %1
  %40 = zext i1 %39 to i64
  br label %41

41:                                               ; preds = %30, %38
  %42 = phi %"struct.std::__1::pair.94"* [ %32, %38 ], [ %29, %30 ]
  %43 = phi i64 [ %40, %38 ], [ 1, %30 ]
  %44 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %42, i64 %43
  %45 = icmp eq %"struct.std::__1::pair.94"* %44, %27
  br i1 %45, label %47, label %46

46:                                               ; preds = %41
  store %"struct.std::__1::pair.94"* %44, %"struct.std::__1::pair.94"** %26, align 8
  br label %47

47:                                               ; preds = %41, %46
  %48 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 28, i32 1
  store i64 %1, i64* %48, align 8
  %49 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 29, i32 0, i32 0, i32 1
  %50 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %49, align 8
  %51 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 29, i32 0, i32 0, i32 0
  %52 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %51, align 8
  br label %53

53:                                               ; preds = %57, %47
  %54 = phi %"struct.std::__1::pair.104"* [ %50, %47 ], [ %55, %57 ]
  %55 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %54, i64 -1
  %56 = icmp eq %"struct.std::__1::pair.104"* %55, %52
  br i1 %56, label %64, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %55, i64 0, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = icmp ugt i64 %59, %1
  br i1 %60, label %53, label %61

61:                                               ; preds = %57
  %62 = icmp ult i64 %59, %1
  %63 = zext i1 %62 to i64
  br label %64

64:                                               ; preds = %53, %61
  %65 = phi %"struct.std::__1::pair.104"* [ %55, %61 ], [ %52, %53 ]
  %66 = phi i64 [ %63, %61 ], [ 1, %53 ]
  %67 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %65, i64 %66
  %68 = icmp eq %"struct.std::__1::pair.104"* %67, %50
  br i1 %68, label %70, label %69

69:                                               ; preds = %64
  store %"struct.std::__1::pair.104"* %67, %"struct.std::__1::pair.104"** %49, align 8
  br label %70

70:                                               ; preds = %64, %69
  %71 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 29, i32 1
  store i64 %1, i64* %71, align 8
  %72 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 30, i32 0, i32 0, i32 1
  %73 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %72, align 8
  %74 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 30, i32 0, i32 0, i32 0
  %75 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %74, align 8
  br label %76

76:                                               ; preds = %80, %70
  %77 = phi %"struct.std::__1::pair.114"* [ %73, %70 ], [ %78, %80 ]
  %78 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %77, i64 -1
  %79 = icmp eq %"struct.std::__1::pair.114"* %78, %75
  br i1 %79, label %87, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %78, i64 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = icmp ugt i64 %82, %1
  br i1 %83, label %76, label %84

84:                                               ; preds = %80
  %85 = icmp ult i64 %82, %1
  %86 = zext i1 %85 to i64
  br label %87

87:                                               ; preds = %76, %84
  %88 = phi %"struct.std::__1::pair.114"* [ %78, %84 ], [ %75, %76 ]
  %89 = phi i64 [ %86, %84 ], [ 1, %76 ]
  %90 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %88, i64 %89
  %91 = icmp eq %"struct.std::__1::pair.114"* %90, %73
  br i1 %91, label %93, label %92

92:                                               ; preds = %87
  store %"struct.std::__1::pair.114"* %90, %"struct.std::__1::pair.114"** %72, align 8
  br label %93

93:                                               ; preds = %87, %92
  %94 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 30, i32 1
  store i64 %1, i64* %94, align 8
  %95 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 0, i32 0, i32 0, i32 1
  %96 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %95, align 8
  %97 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 0, i32 0, i32 0, i32 0
  %98 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %97, align 8
  br label %99

99:                                               ; preds = %103, %93
  %100 = phi %"struct.std::__1::pair.124"* [ %96, %93 ], [ %101, %103 ]
  %101 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %100, i64 -1
  %102 = icmp eq %"struct.std::__1::pair.124"* %101, %98
  br i1 %102, label %110, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %101, i64 0, i32 0
  %105 = load i64, i64* %104, align 8
  %106 = icmp ugt i64 %105, %1
  br i1 %106, label %99, label %107

107:                                              ; preds = %103
  %108 = icmp ult i64 %105, %1
  %109 = zext i1 %108 to i64
  br label %110

110:                                              ; preds = %99, %107
  %111 = phi %"struct.std::__1::pair.124"* [ %101, %107 ], [ %98, %99 ]
  %112 = phi i64 [ %109, %107 ], [ 1, %99 ]
  %113 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %111, i64 %112
  %114 = icmp eq %"struct.std::__1::pair.124"* %113, %96
  br i1 %114, label %116, label %115

115:                                              ; preds = %110
  store %"struct.std::__1::pair.124"* %113, %"struct.std::__1::pair.124"** %95, align 8
  br label %116

116:                                              ; preds = %110, %115
  %117 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 0, i32 1
  store i64 %1, i64* %117, align 8
  %118 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 1, i32 0, i32 0, i32 1
  %119 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %118, align 8
  %120 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 1, i32 0, i32 0, i32 0
  %121 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %120, align 8
  br label %122

122:                                              ; preds = %126, %116
  %123 = phi %"struct.std::__1::pair.124"* [ %119, %116 ], [ %124, %126 ]
  %124 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %123, i64 -1
  %125 = icmp eq %"struct.std::__1::pair.124"* %124, %121
  br i1 %125, label %133, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %124, i64 0, i32 0
  %128 = load i64, i64* %127, align 8
  %129 = icmp ugt i64 %128, %1
  br i1 %129, label %122, label %130

130:                                              ; preds = %126
  %131 = icmp ult i64 %128, %1
  %132 = zext i1 %131 to i64
  br label %133

133:                                              ; preds = %122, %130
  %134 = phi %"struct.std::__1::pair.124"* [ %124, %130 ], [ %121, %122 ]
  %135 = phi i64 [ %132, %130 ], [ 1, %122 ]
  %136 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %134, i64 %135
  %137 = icmp eq %"struct.std::__1::pair.124"* %136, %119
  br i1 %137, label %139, label %138

138:                                              ; preds = %133
  store %"struct.std::__1::pair.124"* %136, %"struct.std::__1::pair.124"** %118, align 8
  br label %139

139:                                              ; preds = %138, %133
  %140 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 1, i32 1
  store i64 %1, i64* %140, align 8
  %141 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 2, i32 0, i32 0, i32 1
  %142 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %141, align 8
  %143 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 2, i32 0, i32 0, i32 0
  %144 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %143, align 8
  br label %145

145:                                              ; preds = %149, %139
  %146 = phi %"struct.std::__1::pair.124"* [ %142, %139 ], [ %147, %149 ]
  %147 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %146, i64 -1
  %148 = icmp eq %"struct.std::__1::pair.124"* %147, %144
  br i1 %148, label %156, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %147, i64 0, i32 0
  %151 = load i64, i64* %150, align 8
  %152 = icmp ugt i64 %151, %1
  br i1 %152, label %145, label %153

153:                                              ; preds = %149
  %154 = icmp ult i64 %151, %1
  %155 = zext i1 %154 to i64
  br label %156

156:                                              ; preds = %145, %153
  %157 = phi %"struct.std::__1::pair.124"* [ %147, %153 ], [ %144, %145 ]
  %158 = phi i64 [ %155, %153 ], [ 1, %145 ]
  %159 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %157, i64 %158
  %160 = icmp eq %"struct.std::__1::pair.124"* %159, %142
  br i1 %160, label %162, label %161

161:                                              ; preds = %156
  store %"struct.std::__1::pair.124"* %159, %"struct.std::__1::pair.124"** %141, align 8
  br label %162

162:                                              ; preds = %161, %156
  %163 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 2, i32 1
  store i64 %1, i64* %163, align 8
  %164 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 3, i32 0, i32 0, i32 1
  %165 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %164, align 8
  %166 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 3, i32 0, i32 0, i32 0
  %167 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %166, align 8
  br label %168

168:                                              ; preds = %172, %162
  %169 = phi %"struct.std::__1::pair.124"* [ %165, %162 ], [ %170, %172 ]
  %170 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %169, i64 -1
  %171 = icmp eq %"struct.std::__1::pair.124"* %170, %167
  br i1 %171, label %179, label %172

172:                                              ; preds = %168
  %173 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %170, i64 0, i32 0
  %174 = load i64, i64* %173, align 8
  %175 = icmp ugt i64 %174, %1
  br i1 %175, label %168, label %176

176:                                              ; preds = %172
  %177 = icmp ult i64 %174, %1
  %178 = zext i1 %177 to i64
  br label %179

179:                                              ; preds = %168, %176
  %180 = phi %"struct.std::__1::pair.124"* [ %170, %176 ], [ %167, %168 ]
  %181 = phi i64 [ %178, %176 ], [ 1, %168 ]
  %182 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %180, i64 %181
  %183 = icmp eq %"struct.std::__1::pair.124"* %182, %165
  br i1 %183, label %185, label %184

184:                                              ; preds = %179
  store %"struct.std::__1::pair.124"* %182, %"struct.std::__1::pair.124"** %164, align 8
  br label %185

185:                                              ; preds = %184, %179
  %186 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 31, i32 0, i64 3, i32 1
  store i64 %1, i64* %186, align 8
  ret void
}

declare void @_ZN4base4i18n13BreakIteratorC1ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS1_9BreakTypeE(%"class.base::i18n::BreakIterator"*, %"class.base::BasicStringPiece"* dereferenceable(16), i32) unnamed_addr #1

declare zeroext i1 @_ZN4base4i18n13BreakIterator4InitEv(%"class.base::i18n::BreakIterator"*) local_unnamed_addr #1

declare void @_ZN4base4i18n17UTF16CharIteratorC1ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.base::i18n::UTF16CharIterator"*, i16*, i64) unnamed_addr #1

declare zeroext i1 @_ZN4base4i18n17UTF16CharIterator7AdvanceEv(%"class.base::i18n::UTF16CharIterator"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base4i18n13BreakIterator18IsGraphemeBoundaryEm(%"class.base::i18n::BreakIterator"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base4i18n17UTF16CharIteratorD1Ev(%"class.base::i18n::UTF16CharIterator"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base4i18n13BreakIteratorD1Ev(%"class.base::i18n::BreakIterator"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK3gfx10RenderText13GetLayoutTextEv(%"class.gfx::RenderText"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZNK3gfx10RenderText23EnsureLayoutTextUpdatedEv(%"class.gfx::RenderText"* %0)
  %2 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37
  ret %"class.std::__1::basic_string"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText17UpdateDisplayTextEf(%"class.gfx::RenderText"*, float) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca [15 x i8], align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  tail call void @_ZNK3gfx10RenderText23EnsureLayoutTextUpdatedEv(%"class.gfx::RenderText"* %0)
  %10 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 44
  %11 = load i8, i8* %10, align 4, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %21, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 46
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %46, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 39
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 4
  br i1 %20, label %24, label %46

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 39
  %23 = load i32, i32* %22, align 8
  switch i32 %23, label %24 [
    i32 0, label %46
    i32 6, label %46
  ]

24:                                               ; preds = %17, %21
  %25 = phi i32 [ %23, %21 ], [ 4, %17 ]
  %26 = fcmp ogt float %1, 0.000000e+00
  br i1 %26, label %27, label %32

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 50, i32 1, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = sitofp i32 %29 to float
  %31 = fcmp ogt float %30, %1
  br i1 %31, label %46, label %32

32:                                               ; preds = %27, %24
  %33 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37
  %34 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %34, i64 0, i32 1, i32 1
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  br label %43

41:                                               ; preds = %32
  %42 = zext i8 %36 to i64
  br label %43

43:                                               ; preds = %38, %41
  %44 = phi i64 [ %40, %38 ], [ %42, %41 ]
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %59

46:                                               ; preds = %21, %21, %17, %13, %43, %27
  %47 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 41
  store i8 0, i8* %47, align 2
  %48 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 38
  %49 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %49, i64 0, i32 1, i32 1
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %57

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i16*, i16** %54, align 8
  store i16 0, i16* %55, align 2
  %56 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 38, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %56, align 8
  br label %1036

57:                                               ; preds = %46
  %58 = bitcast %"class.std::__1::basic_string"* %48 to i16*
  store i16 0, i16* %58, align 2
  store i8 0, i8* %50, align 1
  br label %1036

59:                                               ; preds = %43
  br i1 %12, label %60, label %75

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 38
  %62 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #17
  %63 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 50, i32 1, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = sitofp i32 %64 to float
  call void @_ZN3gfx10RenderText5ElideERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEffNS_13ElideBehaviorE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.gfx::RenderText"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %33, float %1, float %65, i32 %25)
  %66 = bitcast %"class.std::__1::basic_string"* %61 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %66, i64 0, i32 1, i32 1
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %60
  %71 = bitcast %"class.std::__1::basic_string"* %61 to i8**
  %72 = load i8*, i8** %71, align 8
  call void @_ZdlPv(i8* %72) #18
  br label %73

73:                                               ; preds = %70, %60
  %74 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* nonnull align 8 %62, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #17
  br label %987

75:                                               ; preds = %59
  %76 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 41
  %77 = load i8, i8* %76, align 2, !range !2
  store i8 0, i8* %76, align 2
  %78 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 38
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %79, i64 0, i32 1, i32 1
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %87

83:                                               ; preds = %75
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i16*, i16** %84, align 8
  store i16 0, i16* %85, align 2
  %86 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 38, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %86, align 8
  br label %89

87:                                               ; preds = %75
  %88 = bitcast %"class.std::__1::basic_string"* %78 to i16*
  store i16 0, i16* %88, align 2
  store i8 0, i8* %80, align 1
  br label %89

89:                                               ; preds = %83, %87
  %90 = tail call %"class.gfx::RenderText"* @_ZNK3gfx10RenderText25CreateInstanceOfSameStyleERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.gfx::RenderText"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %33)
  %91 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %90, i64 0, i32 44
  %92 = load i8, i8* %91, align 4, !range !2
  %93 = icmp eq i8 %92, 1
  br i1 %93, label %146, label %94

94:                                               ; preds = %89
  store i8 1, i8* %91, align 4
  %95 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %90, i64 0, i32 55
  store i8 0, i8* %95, align 8
  %96 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %90, i64 0, i32 37
  %97 = bitcast %"class.std::__1::basic_string"* %96 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %97, i64 0, i32 1, i32 1
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %105

101:                                              ; preds = %94
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i16*, i16** %102, align 8
  store i16 0, i16* %103, align 2
  %104 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %90, i64 0, i32 37, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %104, align 8
  br label %107

105:                                              ; preds = %94
  %106 = bitcast %"class.std::__1::basic_string"* %96 to i16*
  store i16 0, i16* %106, align 2
  store i8 0, i8* %98, align 1
  br label %107

107:                                              ; preds = %105, %101
  %108 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %90, i64 0, i32 38
  %109 = bitcast %"class.std::__1::basic_string"* %108 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %109, i64 0, i32 1, i32 1
  %111 = load i8, i8* %110, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %113, label %117

113:                                              ; preds = %107
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i16*, i16** %114, align 8
  store i16 0, i16* %115, align 2
  %116 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %90, i64 0, i32 38, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %116, align 8
  br label %119

117:                                              ; preds = %107
  %118 = bitcast %"class.std::__1::basic_string"* %108 to i16*
  store i16 0, i16* %118, align 2
  store i8 0, i8* %110, align 1
  br label %119

119:                                              ; preds = %117, %113
  %120 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %90, i64 0, i32 41
  store i8 0, i8* %120, align 2
  %121 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %90, i64 0, i32 58, i32 0, i32 0, i32 1
  %122 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %121, align 8
  %123 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %90, i64 0, i32 58, i32 0, i32 0, i32 0
  %124 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %123, align 8
  br label %125

125:                                              ; preds = %129, %119
  %126 = phi %"struct.std::__1::pair.186"* [ %122, %119 ], [ %127, %129 ]
  %127 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %126, i64 -1
  %128 = icmp eq %"struct.std::__1::pair.186"* %127, %124
  br i1 %128, label %133, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %127, i64 0, i32 0
  %131 = load i64, i64* %130, align 8
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %125

133:                                              ; preds = %129, %125
  %134 = phi %"struct.std::__1::pair.186"* [ %124, %125 ], [ %127, %129 ]
  %135 = phi i64 [ 1, %125 ], [ 0, %129 ]
  %136 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %134, i64 %135
  %137 = icmp eq %"struct.std::__1::pair.186"* %136, %122
  br i1 %137, label %139, label %138

138:                                              ; preds = %133
  store %"struct.std::__1::pair.186"* %136, %"struct.std::__1::pair.186"** %121, align 8
  br label %139

139:                                              ; preds = %138, %133
  %140 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %90, i64 0, i32 58, i32 1
  store i64 0, i64* %140, align 8
  %141 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %90, i64 0, i32 63
  store i8 0, i8* %141, align 8
  %142 = bitcast %"class.gfx::RenderText"* %90 to void (%"class.gfx::RenderText"*, i1)***
  %143 = load void (%"class.gfx::RenderText"*, i1)**, void (%"class.gfx::RenderText"*, i1)*** %142, align 8
  %144 = getelementptr inbounds void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %143, i64 11
  %145 = load void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %144, align 8
  tail call void %145(%"class.gfx::RenderText"* %90, i1 zeroext true) #17
  br label %146

146:                                              ; preds = %89, %139
  %147 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 47
  %148 = load i32, i32* %147, align 8
  %149 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %90, i64 0, i32 47
  %150 = load i32, i32* %149, align 8
  %151 = icmp eq i32 %150, %148
  br i1 %151, label %207, label %152

152:                                              ; preds = %146
  store i32 %148, i32* %149, align 8
  %153 = load i8, i8* %91, align 4, !range !2
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %207, label %155

155:                                              ; preds = %152
  %156 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %90, i64 0, i32 55
  store i8 0, i8* %156, align 8
  %157 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %90, i64 0, i32 37
  %158 = bitcast %"class.std::__1::basic_string"* %157 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %159 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %158, i64 0, i32 1, i32 1
  %160 = load i8, i8* %159, align 1
  %161 = icmp slt i8 %160, 0
  br i1 %161, label %162, label %166

162:                                              ; preds = %155
  %163 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %157, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load i16*, i16** %163, align 8
  store i16 0, i16* %164, align 2
  %165 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %90, i64 0, i32 37, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %165, align 8
  br label %168

166:                                              ; preds = %155
  %167 = bitcast %"class.std::__1::basic_string"* %157 to i16*
  store i16 0, i16* %167, align 2
  store i8 0, i8* %159, align 1
  br label %168

168:                                              ; preds = %166, %162
  %169 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %90, i64 0, i32 38
  %170 = bitcast %"class.std::__1::basic_string"* %169 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %171 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %170, i64 0, i32 1, i32 1
  %172 = load i8, i8* %171, align 1
  %173 = icmp slt i8 %172, 0
  br i1 %173, label %174, label %178

174:                                              ; preds = %168
  %175 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %169, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load i16*, i16** %175, align 8
  store i16 0, i16* %176, align 2
  %177 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %90, i64 0, i32 38, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %177, align 8
  br label %180

178:                                              ; preds = %168
  %179 = bitcast %"class.std::__1::basic_string"* %169 to i16*
  store i16 0, i16* %179, align 2
  store i8 0, i8* %171, align 1
  br label %180

180:                                              ; preds = %178, %174
  %181 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %90, i64 0, i32 41
  store i8 0, i8* %181, align 2
  %182 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %90, i64 0, i32 58, i32 0, i32 0, i32 1
  %183 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %182, align 8
  %184 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %90, i64 0, i32 58, i32 0, i32 0, i32 0
  %185 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %184, align 8
  br label %186

186:                                              ; preds = %190, %180
  %187 = phi %"struct.std::__1::pair.186"* [ %183, %180 ], [ %188, %190 ]
  %188 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %187, i64 -1
  %189 = icmp eq %"struct.std::__1::pair.186"* %188, %185
  br i1 %189, label %194, label %190

190:                                              ; preds = %186
  %191 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %188, i64 0, i32 0
  %192 = load i64, i64* %191, align 8
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %186

194:                                              ; preds = %190, %186
  %195 = phi %"struct.std::__1::pair.186"* [ %185, %186 ], [ %188, %190 ]
  %196 = phi i64 [ 1, %186 ], [ 0, %190 ]
  %197 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %195, i64 %196
  %198 = icmp eq %"struct.std::__1::pair.186"* %197, %183
  br i1 %198, label %200, label %199

199:                                              ; preds = %194
  store %"struct.std::__1::pair.186"* %197, %"struct.std::__1::pair.186"** %182, align 8
  br label %200

200:                                              ; preds = %199, %194
  %201 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %90, i64 0, i32 58, i32 1
  store i64 0, i64* %201, align 8
  %202 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %90, i64 0, i32 63
  store i8 0, i8* %202, align 8
  %203 = bitcast %"class.gfx::RenderText"* %90 to void (%"class.gfx::RenderText"*, i1)***
  %204 = load void (%"class.gfx::RenderText"*, i1)**, void (%"class.gfx::RenderText"*, i1)*** %203, align 8
  %205 = getelementptr inbounds void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %204, i64 11
  %206 = load void (%"class.gfx::RenderText"*, i1)*, void (%"class.gfx::RenderText"*, i1)** %205, align 8
  tail call void %206(%"class.gfx::RenderText"* %90, i1 zeroext true) #17
  br label %207

207:                                              ; preds = %146, %152, %200
  %208 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 50
  %209 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %90, i64 0, i32 50
  %210 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %208, i64 0, i32 0, i32 0
  %211 = load i32, i32* %210, align 4
  %212 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %209, i64 0, i32 0, i32 0
  %213 = load i32, i32* %212, align 4
  %214 = icmp eq i32 %211, %213
  br i1 %214, label %215, label %235

215:                                              ; preds = %207
  %216 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 50, i32 0, i32 1
  %217 = load i32, i32* %216, align 4
  %218 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %90, i64 0, i32 50, i32 0, i32 1
  %219 = load i32, i32* %218, align 4
  %220 = icmp eq i32 %217, %219
  br i1 %220, label %221, label %235

221:                                              ; preds = %215
  %222 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 50, i32 1, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %90, i64 0, i32 50, i32 1, i32 0
  %225 = load i32, i32* %224, align 4
  %226 = icmp eq i32 %223, %225
  br i1 %226, label %227, label %235

227:                                              ; preds = %221
  %228 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 50, i32 1, i32 1
  %229 = load i32, i32* %228, align 4
  %230 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %90, i64 0, i32 50, i32 1, i32 1
  %231 = load i32, i32* %230, align 4
  %232 = icmp eq i32 %229, %231
  br i1 %232, label %233, label %235

233:                                              ; preds = %227
  %234 = bitcast %"class.gfx::RenderText"* %90 to void (%"class.gfx::RenderText"*)***
  br label %244

235:                                              ; preds = %227, %221, %215, %207
  %236 = bitcast %"class.gfx::Rect"* %209 to i8*
  %237 = bitcast %"class.gfx::Rect"* %208 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %236, i8* align 4 %237, i64 16, i1 false) #17
  %238 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %90, i64 0, i32 54
  store i32 2147483647, i32* %238, align 4
  %239 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %90, i64 0, i32 55
  store i8 0, i8* %239, align 8
  %240 = bitcast %"class.gfx::RenderText"* %90 to void (%"class.gfx::RenderText"*)***
  %241 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %240, align 8
  %242 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %241, i64 12
  %243 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %242, align 8
  tail call void %243(%"class.gfx::RenderText"* %90) #17
  br label %244

244:                                              ; preds = %233, %235
  %245 = phi void (%"class.gfx::RenderText"*)*** [ %234, %233 ], [ %240, %235 ]
  %246 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %245, align 8
  %247 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %246, i64 13
  %248 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %247, align 8
  tail call void %248(%"class.gfx::RenderText"* %90) #17
  %249 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %245, align 8
  %250 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %249, i64 13
  %251 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %250, align 8
  tail call void %251(%"class.gfx::RenderText"* %90) #17
  %252 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %90, i64 0, i32 59, i32 0, i32 0, i32 0
  %253 = load %"class.gfx::internal::ShapedText"*, %"class.gfx::internal::ShapedText"** %252, align 8
  %254 = getelementptr inbounds %"class.gfx::internal::ShapedText", %"class.gfx::internal::ShapedText"* %253, i64 0, i32 0, i32 0, i32 1
  %255 = bitcast %"struct.gfx::internal::Line"** %254 to i64*
  %256 = load i64, i64* %255, align 8
  %257 = bitcast %"class.gfx::internal::ShapedText"* %253 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = sub i64 %256, %258
  %260 = sdiv exact i64 %259, 48
  %261 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 46
  %262 = load i64, i64* %261, align 8
  %263 = icmp ugt i64 %260, %262
  br i1 %263, label %264, label %958

264:                                              ; preds = %244
  %265 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %245, align 8
  %266 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %265, i64 13
  %267 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %266, align 8
  tail call void %267(%"class.gfx::RenderText"* %90) #17
  %268 = load %"class.gfx::internal::ShapedText"*, %"class.gfx::internal::ShapedText"** %252, align 8
  %269 = load i64, i64* %261, align 8
  %270 = add i64 %269, -1
  %271 = getelementptr inbounds %"class.gfx::internal::ShapedText", %"class.gfx::internal::ShapedText"* %268, i64 0, i32 0, i32 0, i32 0
  %272 = load %"struct.gfx::internal::Line"*, %"struct.gfx::internal::Line"** %271, align 8
  %273 = getelementptr inbounds %"struct.gfx::internal::Line", %"struct.gfx::internal::Line"* %272, i64 %270
  %274 = tail call i64 @_ZNK3gfx10RenderText12GetLineRangeERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKNS_8internal4LineE(%"class.gfx::RenderText"* undef, %"class.std::__1::basic_string"* dereferenceable(24) %33, %"struct.gfx::internal::Line"* dereferenceable(48) %273)
  %275 = trunc i64 %274 to i32
  %276 = lshr i64 %274, 32
  %277 = trunc i64 %276 to i32
  %278 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %278) #17
  %279 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %280 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %280, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %279) #17
  %281 = and i64 %274, 4294967295
  %282 = icmp ugt i32 %275, %277
  %283 = select i1 %282, i64 %274, i64 %276
  %284 = icmp ult i32 %275, %277
  %285 = select i1 %284, i64 %274, i64 %276
  %286 = sub i64 %283, %285
  %287 = and i64 %286, 4294967295
  %288 = bitcast %"class.std::__1::basic_string"* %33 to %"class.std::__1::allocator.154"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %33, i64 %281, i64 %287, %"class.std::__1::allocator.154"* dereferenceable(1) %288) #17
  %289 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %289) #17
  %290 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 0), align 2
  %291 = icmp eq i16 %290, 0
  br i1 %291, label %292, label %296

292:                                              ; preds = %264
  %293 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %294 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %293, i64 0, i32 1, i32 1
  store i8 0, i8* %294, align 1
  %295 = bitcast %"class.std::__1::basic_string"* %6 to i16*
  br label %484

296:                                              ; preds = %264, %296
  %297 = phi i64 [ %299, %296 ], [ 0, %264 ]
  %298 = phi i16* [ %300, %296 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 0), %264 ]
  %299 = add i64 %297, 1
  %300 = getelementptr inbounds i16, i16* %298, i64 1
  %301 = load i16, i16* %300, align 2
  %302 = icmp eq i16 %301, 0
  br i1 %302, label %303, label %296

303:                                              ; preds = %296
  %304 = icmp ugt i64 %299, 9223372036854775791
  br i1 %304, label %305, label %307

305:                                              ; preds = %303
  %306 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %306) #19
  unreachable

307:                                              ; preds = %303
  %308 = icmp ult i64 %299, 11
  br i1 %308, label %322, label %309

309:                                              ; preds = %307
  %310 = add nuw nsw i64 %297, 9
  %311 = and i64 %310, -8
  %312 = icmp slt i64 %311, 0
  br i1 %312, label %313, label %314

313:                                              ; preds = %309
  call void @abort() #19
  unreachable

314:                                              ; preds = %309
  %315 = shl i64 %311, 1
  %316 = call i8* @_Znwm(i64 %315) #18
  %317 = bitcast i8* %316 to i16*
  %318 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  store i8* %316, i8** %318, align 8
  %319 = or i64 %311, -9223372036854775808
  %320 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %319, i64* %320, align 8
  %321 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %299, i64* %321, align 8
  br label %328

322:                                              ; preds = %307
  %323 = trunc i64 %299 to i8
  %324 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %325 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %324, i64 0, i32 1, i32 1
  store i8 %323, i8* %325, align 1
  %326 = bitcast %"class.std::__1::basic_string"* %6 to i16*
  %327 = icmp eq i64 %299, 0
  br i1 %327, label %484, label %328

328:                                              ; preds = %322, %314
  %329 = phi i16* [ %317, %314 ], [ %326, %322 ]
  store i16 %290, i16* %329, align 2
  %330 = icmp eq i64 %297, 0
  br i1 %330, label %481, label %331

331:                                              ; preds = %328
  %332 = icmp ult i64 %297, 16
  br i1 %332, label %428, label %333

333:                                              ; preds = %331
  %334 = getelementptr i16, i16* %329, i64 1
  %335 = getelementptr i16, i16* %329, i64 %299
  %336 = getelementptr [0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 %299
  %337 = icmp ult i16* %334, %336
  %338 = icmp ugt i16* %335, getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1)
  %339 = and i1 %337, %338
  br i1 %339, label %428, label %340

340:                                              ; preds = %333
  %341 = and i64 %297, -16
  %342 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %341
  %343 = sub i64 %297, %341
  %344 = getelementptr i16, i16* %329, i64 %341
  %345 = add i64 %341, -16
  %346 = lshr exact i64 %345, 4
  %347 = add nuw nsw i64 %346, 1
  %348 = and i64 %347, 3
  %349 = icmp ult i64 %345, 48
  br i1 %349, label %405, label %350

350:                                              ; preds = %340
  %351 = sub nsw i64 %347, %348
  %352 = getelementptr i16, i16* %329, i64 1
  %353 = getelementptr i16, i16* %329, i64 1
  %354 = getelementptr i16, i16* %329, i64 1
  %355 = getelementptr i16, i16* %329, i64 1
  br label %356

356:                                              ; preds = %356, %350
  %357 = phi i64 [ 0, %350 ], [ %402, %356 ]
  %358 = phi i64 [ %351, %350 ], [ %403, %356 ]
  %359 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %357
  %360 = getelementptr inbounds i16, i16* %352, i64 %357
  %361 = bitcast i16* %359 to <8 x i16>*
  %362 = load <8 x i16>, <8 x i16>* %361, align 2, !alias.scope !58
  %363 = getelementptr i16, i16* %359, i64 8
  %364 = bitcast i16* %363 to <8 x i16>*
  %365 = load <8 x i16>, <8 x i16>* %364, align 2, !alias.scope !58
  %366 = bitcast i16* %360 to <8 x i16>*
  store <8 x i16> %362, <8 x i16>* %366, align 2, !alias.scope !61, !noalias !58
  %367 = getelementptr inbounds i16, i16* %360, i64 8
  %368 = bitcast i16* %367 to <8 x i16>*
  store <8 x i16> %365, <8 x i16>* %368, align 2, !alias.scope !61, !noalias !58
  %369 = or i64 %357, 16
  %370 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %369
  %371 = getelementptr inbounds i16, i16* %353, i64 %369
  %372 = bitcast i16* %370 to <8 x i16>*
  %373 = load <8 x i16>, <8 x i16>* %372, align 2, !alias.scope !58
  %374 = getelementptr i16, i16* %370, i64 8
  %375 = bitcast i16* %374 to <8 x i16>*
  %376 = load <8 x i16>, <8 x i16>* %375, align 2, !alias.scope !58
  %377 = bitcast i16* %371 to <8 x i16>*
  store <8 x i16> %373, <8 x i16>* %377, align 2, !alias.scope !61, !noalias !58
  %378 = getelementptr inbounds i16, i16* %371, i64 8
  %379 = bitcast i16* %378 to <8 x i16>*
  store <8 x i16> %376, <8 x i16>* %379, align 2, !alias.scope !61, !noalias !58
  %380 = or i64 %357, 32
  %381 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %380
  %382 = getelementptr inbounds i16, i16* %354, i64 %380
  %383 = bitcast i16* %381 to <8 x i16>*
  %384 = load <8 x i16>, <8 x i16>* %383, align 2, !alias.scope !58
  %385 = getelementptr i16, i16* %381, i64 8
  %386 = bitcast i16* %385 to <8 x i16>*
  %387 = load <8 x i16>, <8 x i16>* %386, align 2, !alias.scope !58
  %388 = bitcast i16* %382 to <8 x i16>*
  store <8 x i16> %384, <8 x i16>* %388, align 2, !alias.scope !61, !noalias !58
  %389 = getelementptr inbounds i16, i16* %382, i64 8
  %390 = bitcast i16* %389 to <8 x i16>*
  store <8 x i16> %387, <8 x i16>* %390, align 2, !alias.scope !61, !noalias !58
  %391 = or i64 %357, 48
  %392 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %391
  %393 = getelementptr inbounds i16, i16* %355, i64 %391
  %394 = bitcast i16* %392 to <8 x i16>*
  %395 = load <8 x i16>, <8 x i16>* %394, align 2, !alias.scope !58
  %396 = getelementptr i16, i16* %392, i64 8
  %397 = bitcast i16* %396 to <8 x i16>*
  %398 = load <8 x i16>, <8 x i16>* %397, align 2, !alias.scope !58
  %399 = bitcast i16* %393 to <8 x i16>*
  store <8 x i16> %395, <8 x i16>* %399, align 2, !alias.scope !61, !noalias !58
  %400 = getelementptr inbounds i16, i16* %393, i64 8
  %401 = bitcast i16* %400 to <8 x i16>*
  store <8 x i16> %398, <8 x i16>* %401, align 2, !alias.scope !61, !noalias !58
  %402 = add i64 %357, 64
  %403 = add i64 %358, -4
  %404 = icmp eq i64 %403, 0
  br i1 %404, label %405, label %356, !llvm.loop !63

405:                                              ; preds = %356, %340
  %406 = phi i64 [ 0, %340 ], [ %402, %356 ]
  %407 = icmp eq i64 %348, 0
  br i1 %407, label %426, label %408

408:                                              ; preds = %405
  %409 = getelementptr i16, i16* %329, i64 1
  br label %410

410:                                              ; preds = %410, %408
  %411 = phi i64 [ %406, %408 ], [ %423, %410 ]
  %412 = phi i64 [ %348, %408 ], [ %424, %410 ]
  %413 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %411
  %414 = getelementptr inbounds i16, i16* %409, i64 %411
  %415 = bitcast i16* %413 to <8 x i16>*
  %416 = load <8 x i16>, <8 x i16>* %415, align 2, !alias.scope !58
  %417 = getelementptr i16, i16* %413, i64 8
  %418 = bitcast i16* %417 to <8 x i16>*
  %419 = load <8 x i16>, <8 x i16>* %418, align 2, !alias.scope !58
  %420 = bitcast i16* %414 to <8 x i16>*
  store <8 x i16> %416, <8 x i16>* %420, align 2, !alias.scope !61, !noalias !58
  %421 = getelementptr inbounds i16, i16* %414, i64 8
  %422 = bitcast i16* %421 to <8 x i16>*
  store <8 x i16> %419, <8 x i16>* %422, align 2, !alias.scope !61, !noalias !58
  %423 = add i64 %411, 16
  %424 = add i64 %412, -1
  %425 = icmp eq i64 %424, 0
  br i1 %425, label %426, label %410, !llvm.loop !64

426:                                              ; preds = %410, %405
  %427 = icmp eq i64 %297, %341
  br i1 %427, label %481, label %428

428:                                              ; preds = %426, %333, %331
  %429 = phi i16* [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), %333 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), %331 ], [ %342, %426 ]
  %430 = phi i64 [ %297, %333 ], [ %297, %331 ], [ %343, %426 ]
  %431 = phi i16* [ %329, %333 ], [ %329, %331 ], [ %344, %426 ]
  %432 = add i64 %430, -1
  %433 = and i64 %430, 7
  %434 = icmp eq i64 %433, 0
  br i1 %434, label %446, label %435

435:                                              ; preds = %428, %435
  %436 = phi i16* [ %443, %435 ], [ %429, %428 ]
  %437 = phi i64 [ %442, %435 ], [ %430, %428 ]
  %438 = phi i16* [ %440, %435 ], [ %431, %428 ]
  %439 = phi i64 [ %444, %435 ], [ %433, %428 ]
  %440 = getelementptr inbounds i16, i16* %438, i64 1
  %441 = load i16, i16* %436, align 2
  store i16 %441, i16* %440, align 2
  %442 = add i64 %437, -1
  %443 = getelementptr inbounds i16, i16* %436, i64 1
  %444 = add i64 %439, -1
  %445 = icmp eq i64 %444, 0
  br i1 %445, label %446, label %435, !llvm.loop !65

446:                                              ; preds = %435, %428
  %447 = phi i16* [ %429, %428 ], [ %443, %435 ]
  %448 = phi i64 [ %430, %428 ], [ %442, %435 ]
  %449 = phi i16* [ %431, %428 ], [ %440, %435 ]
  %450 = icmp ult i64 %432, 7
  br i1 %450, label %481, label %451

451:                                              ; preds = %446, %451
  %452 = phi i16* [ %479, %451 ], [ %447, %446 ]
  %453 = phi i64 [ %478, %451 ], [ %448, %446 ]
  %454 = phi i16* [ %476, %451 ], [ %449, %446 ]
  %455 = getelementptr inbounds i16, i16* %454, i64 1
  %456 = load i16, i16* %452, align 2
  store i16 %456, i16* %455, align 2
  %457 = getelementptr inbounds i16, i16* %452, i64 1
  %458 = getelementptr inbounds i16, i16* %454, i64 2
  %459 = load i16, i16* %457, align 2
  store i16 %459, i16* %458, align 2
  %460 = getelementptr inbounds i16, i16* %452, i64 2
  %461 = getelementptr inbounds i16, i16* %454, i64 3
  %462 = load i16, i16* %460, align 2
  store i16 %462, i16* %461, align 2
  %463 = getelementptr inbounds i16, i16* %452, i64 3
  %464 = getelementptr inbounds i16, i16* %454, i64 4
  %465 = load i16, i16* %463, align 2
  store i16 %465, i16* %464, align 2
  %466 = getelementptr inbounds i16, i16* %452, i64 4
  %467 = getelementptr inbounds i16, i16* %454, i64 5
  %468 = load i16, i16* %466, align 2
  store i16 %468, i16* %467, align 2
  %469 = getelementptr inbounds i16, i16* %452, i64 5
  %470 = getelementptr inbounds i16, i16* %454, i64 6
  %471 = load i16, i16* %469, align 2
  store i16 %471, i16* %470, align 2
  %472 = getelementptr inbounds i16, i16* %452, i64 6
  %473 = getelementptr inbounds i16, i16* %454, i64 7
  %474 = load i16, i16* %472, align 2
  store i16 %474, i16* %473, align 2
  %475 = getelementptr inbounds i16, i16* %452, i64 7
  %476 = getelementptr inbounds i16, i16* %454, i64 8
  %477 = load i16, i16* %475, align 2
  store i16 %477, i16* %476, align 2
  %478 = add i64 %453, -8
  %479 = getelementptr inbounds i16, i16* %452, i64 8
  %480 = icmp eq i64 %478, 0
  br i1 %480, label %481, label %451, !llvm.loop !66

481:                                              ; preds = %446, %451, %426, %328
  %482 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %483 = bitcast %"class.std::__1::basic_string"* %6 to i16*
  br label %484

484:                                              ; preds = %481, %292, %322
  %485 = phi i16* [ %483, %481 ], [ %295, %292 ], [ %326, %322 ]
  %486 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %482, %481 ], [ %293, %292 ], [ %324, %322 ]
  %487 = phi i64 [ %299, %481 ], [ 0, %292 ], [ 0, %322 ]
  %488 = phi i16* [ %329, %481 ], [ %295, %292 ], [ %326, %322 ]
  %489 = getelementptr inbounds i16, i16* %488, i64 %487
  store i16 0, i16* %489, align 2
  %490 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %486, i64 0, i32 1, i32 1
  %491 = load i8, i8* %490, align 1, !noalias !67
  %492 = icmp slt i8 %491, 0
  %493 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %494 = load i16*, i16** %493, align 8, !noalias !67
  %495 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %496 = load i64, i64* %495, align 8, !noalias !67
  %497 = zext i8 %491 to i64
  %498 = select i1 %492, i16* %494, i16* %485
  %499 = select i1 %492, i64 %496, i64 %497
  %500 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %501 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %500, i64 0, i32 1, i32 1
  %502 = load i8, i8* %501, align 1, !noalias !67
  %503 = icmp slt i8 %502, 0
  br i1 %503, label %504, label %511

504:                                              ; preds = %484
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %506 = load i64, i64* %505, align 8, !noalias !67
  %507 = and i64 %506, 9223372036854775807
  %508 = add nsw i64 %507, -1
  %509 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %510 = load i64, i64* %509, align 8, !noalias !67
  br label %513

511:                                              ; preds = %484
  %512 = zext i8 %502 to i64
  br label %513

513:                                              ; preds = %511, %504
  %514 = phi i64 [ %508, %504 ], [ 10, %511 ]
  %515 = phi i64 [ %510, %504 ], [ %512, %511 ]
  %516 = sub i64 %514, %515
  %517 = icmp ult i64 %516, %499
  br i1 %517, label %679, label %518

518:                                              ; preds = %513
  %519 = icmp eq i64 %499, 0
  br i1 %519, label %682, label %520

520:                                              ; preds = %518
  %521 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %522 = load i16*, i16** %521, align 8, !noalias !67
  %523 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %524 = select i1 %503, i16* %522, i16* %523
  %525 = getelementptr inbounds i16, i16* %524, i64 %515
  %526 = icmp ult i64 %499, 16
  br i1 %526, label %616, label %527

527:                                              ; preds = %520
  %528 = add i64 %499, %515
  %529 = getelementptr i16, i16* %524, i64 %528
  %530 = getelementptr i16, i16* %498, i64 %499
  %531 = icmp ult i16* %525, %530
  %532 = icmp ult i16* %498, %529
  %533 = and i1 %531, %532
  br i1 %533, label %616, label %534

534:                                              ; preds = %527
  %535 = and i64 %499, -16
  %536 = sub i64 %499, %535
  %537 = getelementptr i16, i16* %498, i64 %535
  %538 = getelementptr i16, i16* %525, i64 %535
  %539 = add i64 %535, -16
  %540 = lshr exact i64 %539, 4
  %541 = add nuw nsw i64 %540, 1
  %542 = and i64 %541, 3
  %543 = icmp ult i64 %539, 48
  br i1 %543, label %595, label %544

544:                                              ; preds = %534
  %545 = sub nsw i64 %541, %542
  br label %546

546:                                              ; preds = %546, %544
  %547 = phi i64 [ 0, %544 ], [ %592, %546 ]
  %548 = phi i64 [ %545, %544 ], [ %593, %546 ]
  %549 = getelementptr i16, i16* %498, i64 %547
  %550 = getelementptr i16, i16* %525, i64 %547
  %551 = bitcast i16* %549 to <8 x i16>*
  %552 = load <8 x i16>, <8 x i16>* %551, align 2, !alias.scope !70, !noalias !67
  %553 = getelementptr i16, i16* %549, i64 8
  %554 = bitcast i16* %553 to <8 x i16>*
  %555 = load <8 x i16>, <8 x i16>* %554, align 2, !alias.scope !70, !noalias !67
  %556 = bitcast i16* %550 to <8 x i16>*
  store <8 x i16> %552, <8 x i16>* %556, align 2, !alias.scope !73, !noalias !75
  %557 = getelementptr i16, i16* %550, i64 8
  %558 = bitcast i16* %557 to <8 x i16>*
  store <8 x i16> %555, <8 x i16>* %558, align 2, !alias.scope !73, !noalias !75
  %559 = or i64 %547, 16
  %560 = getelementptr i16, i16* %498, i64 %559
  %561 = getelementptr i16, i16* %525, i64 %559
  %562 = bitcast i16* %560 to <8 x i16>*
  %563 = load <8 x i16>, <8 x i16>* %562, align 2, !alias.scope !70, !noalias !67
  %564 = getelementptr i16, i16* %560, i64 8
  %565 = bitcast i16* %564 to <8 x i16>*
  %566 = load <8 x i16>, <8 x i16>* %565, align 2, !alias.scope !70, !noalias !67
  %567 = bitcast i16* %561 to <8 x i16>*
  store <8 x i16> %563, <8 x i16>* %567, align 2, !alias.scope !73, !noalias !75
  %568 = getelementptr i16, i16* %561, i64 8
  %569 = bitcast i16* %568 to <8 x i16>*
  store <8 x i16> %566, <8 x i16>* %569, align 2, !alias.scope !73, !noalias !75
  %570 = or i64 %547, 32
  %571 = getelementptr i16, i16* %498, i64 %570
  %572 = getelementptr i16, i16* %525, i64 %570
  %573 = bitcast i16* %571 to <8 x i16>*
  %574 = load <8 x i16>, <8 x i16>* %573, align 2, !alias.scope !70, !noalias !67
  %575 = getelementptr i16, i16* %571, i64 8
  %576 = bitcast i16* %575 to <8 x i16>*
  %577 = load <8 x i16>, <8 x i16>* %576, align 2, !alias.scope !70, !noalias !67
  %578 = bitcast i16* %572 to <8 x i16>*
  store <8 x i16> %574, <8 x i16>* %578, align 2, !alias.scope !73, !noalias !75
  %579 = getelementptr i16, i16* %572, i64 8
  %580 = bitcast i16* %579 to <8 x i16>*
  store <8 x i16> %577, <8 x i16>* %580, align 2, !alias.scope !73, !noalias !75
  %581 = or i64 %547, 48
  %582 = getelementptr i16, i16* %498, i64 %581
  %583 = getelementptr i16, i16* %525, i64 %581
  %584 = bitcast i16* %582 to <8 x i16>*
  %585 = load <8 x i16>, <8 x i16>* %584, align 2, !alias.scope !70, !noalias !67
  %586 = getelementptr i16, i16* %582, i64 8
  %587 = bitcast i16* %586 to <8 x i16>*
  %588 = load <8 x i16>, <8 x i16>* %587, align 2, !alias.scope !70, !noalias !67
  %589 = bitcast i16* %583 to <8 x i16>*
  store <8 x i16> %585, <8 x i16>* %589, align 2, !alias.scope !73, !noalias !75
  %590 = getelementptr i16, i16* %583, i64 8
  %591 = bitcast i16* %590 to <8 x i16>*
  store <8 x i16> %588, <8 x i16>* %591, align 2, !alias.scope !73, !noalias !75
  %592 = add i64 %547, 64
  %593 = add i64 %548, -4
  %594 = icmp eq i64 %593, 0
  br i1 %594, label %595, label %546, !llvm.loop !76

595:                                              ; preds = %546, %534
  %596 = phi i64 [ 0, %534 ], [ %592, %546 ]
  %597 = icmp eq i64 %542, 0
  br i1 %597, label %614, label %598

598:                                              ; preds = %595, %598
  %599 = phi i64 [ %611, %598 ], [ %596, %595 ]
  %600 = phi i64 [ %612, %598 ], [ %542, %595 ]
  %601 = getelementptr i16, i16* %498, i64 %599
  %602 = getelementptr i16, i16* %525, i64 %599
  %603 = bitcast i16* %601 to <8 x i16>*
  %604 = load <8 x i16>, <8 x i16>* %603, align 2, !alias.scope !70, !noalias !67
  %605 = getelementptr i16, i16* %601, i64 8
  %606 = bitcast i16* %605 to <8 x i16>*
  %607 = load <8 x i16>, <8 x i16>* %606, align 2, !alias.scope !70, !noalias !67
  %608 = bitcast i16* %602 to <8 x i16>*
  store <8 x i16> %604, <8 x i16>* %608, align 2, !alias.scope !73, !noalias !75
  %609 = getelementptr i16, i16* %602, i64 8
  %610 = bitcast i16* %609 to <8 x i16>*
  store <8 x i16> %607, <8 x i16>* %610, align 2, !alias.scope !73, !noalias !75
  %611 = add i64 %599, 16
  %612 = add i64 %600, -1
  %613 = icmp eq i64 %612, 0
  br i1 %613, label %614, label %598, !llvm.loop !77

614:                                              ; preds = %598, %595
  %615 = icmp eq i64 %499, %535
  br i1 %615, label %669, label %616

616:                                              ; preds = %614, %527, %520
  %617 = phi i64 [ %499, %527 ], [ %499, %520 ], [ %536, %614 ]
  %618 = phi i16* [ %498, %527 ], [ %498, %520 ], [ %537, %614 ]
  %619 = phi i16* [ %525, %527 ], [ %525, %520 ], [ %538, %614 ]
  %620 = add i64 %617, -1
  %621 = and i64 %617, 7
  %622 = icmp eq i64 %621, 0
  br i1 %622, label %634, label %623

623:                                              ; preds = %616, %623
  %624 = phi i64 [ %629, %623 ], [ %617, %616 ]
  %625 = phi i16* [ %631, %623 ], [ %618, %616 ]
  %626 = phi i16* [ %630, %623 ], [ %619, %616 ]
  %627 = phi i64 [ %632, %623 ], [ %621, %616 ]
  %628 = load i16, i16* %625, align 2, !noalias !67
  store i16 %628, i16* %626, align 2, !noalias !67
  %629 = add i64 %624, -1
  %630 = getelementptr inbounds i16, i16* %626, i64 1
  %631 = getelementptr inbounds i16, i16* %625, i64 1
  %632 = add i64 %627, -1
  %633 = icmp eq i64 %632, 0
  br i1 %633, label %634, label %623, !llvm.loop !78

634:                                              ; preds = %623, %616
  %635 = phi i64 [ %617, %616 ], [ %629, %623 ]
  %636 = phi i16* [ %618, %616 ], [ %631, %623 ]
  %637 = phi i16* [ %619, %616 ], [ %630, %623 ]
  %638 = icmp ult i64 %620, 7
  br i1 %638, label %669, label %639

639:                                              ; preds = %634, %639
  %640 = phi i64 [ %665, %639 ], [ %635, %634 ]
  %641 = phi i16* [ %667, %639 ], [ %636, %634 ]
  %642 = phi i16* [ %666, %639 ], [ %637, %634 ]
  %643 = load i16, i16* %641, align 2, !noalias !67
  store i16 %643, i16* %642, align 2, !noalias !67
  %644 = getelementptr inbounds i16, i16* %642, i64 1
  %645 = getelementptr inbounds i16, i16* %641, i64 1
  %646 = load i16, i16* %645, align 2, !noalias !67
  store i16 %646, i16* %644, align 2, !noalias !67
  %647 = getelementptr inbounds i16, i16* %642, i64 2
  %648 = getelementptr inbounds i16, i16* %641, i64 2
  %649 = load i16, i16* %648, align 2, !noalias !67
  store i16 %649, i16* %647, align 2, !noalias !67
  %650 = getelementptr inbounds i16, i16* %642, i64 3
  %651 = getelementptr inbounds i16, i16* %641, i64 3
  %652 = load i16, i16* %651, align 2, !noalias !67
  store i16 %652, i16* %650, align 2, !noalias !67
  %653 = getelementptr inbounds i16, i16* %642, i64 4
  %654 = getelementptr inbounds i16, i16* %641, i64 4
  %655 = load i16, i16* %654, align 2, !noalias !67
  store i16 %655, i16* %653, align 2, !noalias !67
  %656 = getelementptr inbounds i16, i16* %642, i64 5
  %657 = getelementptr inbounds i16, i16* %641, i64 5
  %658 = load i16, i16* %657, align 2, !noalias !67
  store i16 %658, i16* %656, align 2, !noalias !67
  %659 = getelementptr inbounds i16, i16* %642, i64 6
  %660 = getelementptr inbounds i16, i16* %641, i64 6
  %661 = load i16, i16* %660, align 2, !noalias !67
  store i16 %661, i16* %659, align 2, !noalias !67
  %662 = getelementptr inbounds i16, i16* %642, i64 7
  %663 = getelementptr inbounds i16, i16* %641, i64 7
  %664 = load i16, i16* %663, align 2, !noalias !67
  store i16 %664, i16* %662, align 2, !noalias !67
  %665 = add i64 %640, -8
  %666 = getelementptr inbounds i16, i16* %642, i64 8
  %667 = getelementptr inbounds i16, i16* %641, i64 8
  %668 = icmp eq i64 %665, 0
  br i1 %668, label %669, label %639, !llvm.loop !79

669:                                              ; preds = %634, %639, %614
  %670 = add i64 %515, %499
  %671 = load i8, i8* %501, align 1, !noalias !67
  %672 = icmp slt i8 %671, 0
  br i1 %672, label %673, label %675

673:                                              ; preds = %669
  %674 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %670, i64* %674, align 8, !noalias !67
  br label %677

675:                                              ; preds = %669
  %676 = trunc i64 %670 to i8
  store i8 %676, i8* %501, align 1, !noalias !67
  br label %677

677:                                              ; preds = %675, %673
  %678 = getelementptr inbounds i16, i16* %524, i64 %670
  store i16 0, i16* %678, align 2, !noalias !67
  br label %682

679:                                              ; preds = %513
  %680 = add i64 %515, %499
  %681 = sub i64 %680, %514
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* nonnull %5, i64 %514, i64 %681, i64 %515, i64 %515, i64 0, i64 %499, i16* %498) #17, !noalias !67
  br label %682

682:                                              ; preds = %518, %677, %679
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %278, i8* nonnull align 8 %279, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %279, i8 0, i64 24, i1 false) #17, !noalias !67
  %683 = load i8, i8* %490, align 1
  %684 = icmp slt i8 %683, 0
  br i1 %684, label %686, label %685

685:                                              ; preds = %682
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %289) #17
  br label %694

686:                                              ; preds = %682
  %687 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %688 = load i8*, i8** %687, align 8
  call void @_ZdlPv(i8* %688) #18
  %689 = load i8, i8* %501, align 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %289) #17
  %690 = icmp slt i8 %689, 0
  br i1 %690, label %691, label %694

691:                                              ; preds = %686
  %692 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %693 = load i8*, i8** %692, align 8
  call void @_ZdlPv(i8* %693) #18
  br label %694

694:                                              ; preds = %685, %686, %691
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %279) #17
  %695 = getelementptr inbounds [15 x i8], [15 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %695)
  %696 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %696) #17
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %8, %"class.std::__1::basic_string"* dereferenceable(24) %33, i64 0, i64 %281, %"class.std::__1::allocator.154"* dereferenceable(1) %288) #17
  %697 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %697) #17
  %698 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 50, i32 1, i32 0
  %699 = load i32, i32* %698, align 4
  %700 = sitofp i32 %699 to float
  call void @_ZN3gfx10RenderText5ElideERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEffNS_13ElideBehaviorE(%"class.std::__1::basic_string"* nonnull sret %9, %"class.gfx::RenderText"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, float 0.000000e+00, float %700, i32 4)
  %701 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %702 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %701, i64 0, i32 1, i32 1
  %703 = load i8, i8* %702, align 1, !noalias !80
  %704 = icmp slt i8 %703, 0
  %705 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %706 = load i16*, i16** %705, align 8, !noalias !80
  %707 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %708 = load i64, i64* %707, align 8, !noalias !80
  %709 = bitcast %"class.std::__1::basic_string"* %9 to i16*
  %710 = zext i8 %703 to i64
  %711 = select i1 %704, i16* %706, i16* %709
  %712 = select i1 %704, i64 %708, i64 %710
  %713 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %714 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %713, i64 0, i32 1, i32 1
  %715 = load i8, i8* %714, align 1, !noalias !80
  %716 = icmp slt i8 %715, 0
  br i1 %716, label %717, label %724

717:                                              ; preds = %694
  %718 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %719 = load i64, i64* %718, align 8, !noalias !80
  %720 = and i64 %719, 9223372036854775807
  %721 = add nsw i64 %720, -1
  %722 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %723 = load i64, i64* %722, align 8, !noalias !80
  br label %726

724:                                              ; preds = %694
  %725 = zext i8 %715 to i64
  br label %726

726:                                              ; preds = %724, %717
  %727 = phi i64 [ %721, %717 ], [ 10, %724 ]
  %728 = phi i64 [ %723, %717 ], [ %725, %724 ]
  %729 = sub i64 %727, %728
  %730 = icmp ult i64 %729, %712
  br i1 %730, label %892, label %731

731:                                              ; preds = %726
  %732 = icmp eq i64 %712, 0
  br i1 %732, label %895, label %733

733:                                              ; preds = %731
  %734 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %735 = load i16*, i16** %734, align 8, !noalias !80
  %736 = bitcast %"class.std::__1::basic_string"* %8 to i16*
  %737 = select i1 %716, i16* %735, i16* %736
  %738 = getelementptr inbounds i16, i16* %737, i64 %728
  %739 = icmp ult i64 %712, 16
  br i1 %739, label %829, label %740

740:                                              ; preds = %733
  %741 = add i64 %712, %728
  %742 = getelementptr i16, i16* %737, i64 %741
  %743 = getelementptr i16, i16* %711, i64 %712
  %744 = icmp ult i16* %738, %743
  %745 = icmp ult i16* %711, %742
  %746 = and i1 %744, %745
  br i1 %746, label %829, label %747

747:                                              ; preds = %740
  %748 = and i64 %712, -16
  %749 = sub i64 %712, %748
  %750 = getelementptr i16, i16* %711, i64 %748
  %751 = getelementptr i16, i16* %738, i64 %748
  %752 = add i64 %748, -16
  %753 = lshr exact i64 %752, 4
  %754 = add nuw nsw i64 %753, 1
  %755 = and i64 %754, 3
  %756 = icmp ult i64 %752, 48
  br i1 %756, label %808, label %757

757:                                              ; preds = %747
  %758 = sub nsw i64 %754, %755
  br label %759

759:                                              ; preds = %759, %757
  %760 = phi i64 [ 0, %757 ], [ %805, %759 ]
  %761 = phi i64 [ %758, %757 ], [ %806, %759 ]
  %762 = getelementptr i16, i16* %711, i64 %760
  %763 = getelementptr i16, i16* %738, i64 %760
  %764 = bitcast i16* %762 to <8 x i16>*
  %765 = load <8 x i16>, <8 x i16>* %764, align 2, !alias.scope !83, !noalias !80
  %766 = getelementptr i16, i16* %762, i64 8
  %767 = bitcast i16* %766 to <8 x i16>*
  %768 = load <8 x i16>, <8 x i16>* %767, align 2, !alias.scope !83, !noalias !80
  %769 = bitcast i16* %763 to <8 x i16>*
  store <8 x i16> %765, <8 x i16>* %769, align 2, !alias.scope !86, !noalias !88
  %770 = getelementptr i16, i16* %763, i64 8
  %771 = bitcast i16* %770 to <8 x i16>*
  store <8 x i16> %768, <8 x i16>* %771, align 2, !alias.scope !86, !noalias !88
  %772 = or i64 %760, 16
  %773 = getelementptr i16, i16* %711, i64 %772
  %774 = getelementptr i16, i16* %738, i64 %772
  %775 = bitcast i16* %773 to <8 x i16>*
  %776 = load <8 x i16>, <8 x i16>* %775, align 2, !alias.scope !83, !noalias !80
  %777 = getelementptr i16, i16* %773, i64 8
  %778 = bitcast i16* %777 to <8 x i16>*
  %779 = load <8 x i16>, <8 x i16>* %778, align 2, !alias.scope !83, !noalias !80
  %780 = bitcast i16* %774 to <8 x i16>*
  store <8 x i16> %776, <8 x i16>* %780, align 2, !alias.scope !86, !noalias !88
  %781 = getelementptr i16, i16* %774, i64 8
  %782 = bitcast i16* %781 to <8 x i16>*
  store <8 x i16> %779, <8 x i16>* %782, align 2, !alias.scope !86, !noalias !88
  %783 = or i64 %760, 32
  %784 = getelementptr i16, i16* %711, i64 %783
  %785 = getelementptr i16, i16* %738, i64 %783
  %786 = bitcast i16* %784 to <8 x i16>*
  %787 = load <8 x i16>, <8 x i16>* %786, align 2, !alias.scope !83, !noalias !80
  %788 = getelementptr i16, i16* %784, i64 8
  %789 = bitcast i16* %788 to <8 x i16>*
  %790 = load <8 x i16>, <8 x i16>* %789, align 2, !alias.scope !83, !noalias !80
  %791 = bitcast i16* %785 to <8 x i16>*
  store <8 x i16> %787, <8 x i16>* %791, align 2, !alias.scope !86, !noalias !88
  %792 = getelementptr i16, i16* %785, i64 8
  %793 = bitcast i16* %792 to <8 x i16>*
  store <8 x i16> %790, <8 x i16>* %793, align 2, !alias.scope !86, !noalias !88
  %794 = or i64 %760, 48
  %795 = getelementptr i16, i16* %711, i64 %794
  %796 = getelementptr i16, i16* %738, i64 %794
  %797 = bitcast i16* %795 to <8 x i16>*
  %798 = load <8 x i16>, <8 x i16>* %797, align 2, !alias.scope !83, !noalias !80
  %799 = getelementptr i16, i16* %795, i64 8
  %800 = bitcast i16* %799 to <8 x i16>*
  %801 = load <8 x i16>, <8 x i16>* %800, align 2, !alias.scope !83, !noalias !80
  %802 = bitcast i16* %796 to <8 x i16>*
  store <8 x i16> %798, <8 x i16>* %802, align 2, !alias.scope !86, !noalias !88
  %803 = getelementptr i16, i16* %796, i64 8
  %804 = bitcast i16* %803 to <8 x i16>*
  store <8 x i16> %801, <8 x i16>* %804, align 2, !alias.scope !86, !noalias !88
  %805 = add i64 %760, 64
  %806 = add i64 %761, -4
  %807 = icmp eq i64 %806, 0
  br i1 %807, label %808, label %759, !llvm.loop !89

808:                                              ; preds = %759, %747
  %809 = phi i64 [ 0, %747 ], [ %805, %759 ]
  %810 = icmp eq i64 %755, 0
  br i1 %810, label %827, label %811

811:                                              ; preds = %808, %811
  %812 = phi i64 [ %824, %811 ], [ %809, %808 ]
  %813 = phi i64 [ %825, %811 ], [ %755, %808 ]
  %814 = getelementptr i16, i16* %711, i64 %812
  %815 = getelementptr i16, i16* %738, i64 %812
  %816 = bitcast i16* %814 to <8 x i16>*
  %817 = load <8 x i16>, <8 x i16>* %816, align 2, !alias.scope !83, !noalias !80
  %818 = getelementptr i16, i16* %814, i64 8
  %819 = bitcast i16* %818 to <8 x i16>*
  %820 = load <8 x i16>, <8 x i16>* %819, align 2, !alias.scope !83, !noalias !80
  %821 = bitcast i16* %815 to <8 x i16>*
  store <8 x i16> %817, <8 x i16>* %821, align 2, !alias.scope !86, !noalias !88
  %822 = getelementptr i16, i16* %815, i64 8
  %823 = bitcast i16* %822 to <8 x i16>*
  store <8 x i16> %820, <8 x i16>* %823, align 2, !alias.scope !86, !noalias !88
  %824 = add i64 %812, 16
  %825 = add i64 %813, -1
  %826 = icmp eq i64 %825, 0
  br i1 %826, label %827, label %811, !llvm.loop !90

827:                                              ; preds = %811, %808
  %828 = icmp eq i64 %712, %748
  br i1 %828, label %882, label %829

829:                                              ; preds = %827, %740, %733
  %830 = phi i64 [ %712, %740 ], [ %712, %733 ], [ %749, %827 ]
  %831 = phi i16* [ %711, %740 ], [ %711, %733 ], [ %750, %827 ]
  %832 = phi i16* [ %738, %740 ], [ %738, %733 ], [ %751, %827 ]
  %833 = add i64 %830, -1
  %834 = and i64 %830, 7
  %835 = icmp eq i64 %834, 0
  br i1 %835, label %847, label %836

836:                                              ; preds = %829, %836
  %837 = phi i64 [ %842, %836 ], [ %830, %829 ]
  %838 = phi i16* [ %844, %836 ], [ %831, %829 ]
  %839 = phi i16* [ %843, %836 ], [ %832, %829 ]
  %840 = phi i64 [ %845, %836 ], [ %834, %829 ]
  %841 = load i16, i16* %838, align 2, !noalias !80
  store i16 %841, i16* %839, align 2, !noalias !80
  %842 = add i64 %837, -1
  %843 = getelementptr inbounds i16, i16* %839, i64 1
  %844 = getelementptr inbounds i16, i16* %838, i64 1
  %845 = add i64 %840, -1
  %846 = icmp eq i64 %845, 0
  br i1 %846, label %847, label %836, !llvm.loop !91

847:                                              ; preds = %836, %829
  %848 = phi i64 [ %830, %829 ], [ %842, %836 ]
  %849 = phi i16* [ %831, %829 ], [ %844, %836 ]
  %850 = phi i16* [ %832, %829 ], [ %843, %836 ]
  %851 = icmp ult i64 %833, 7
  br i1 %851, label %882, label %852

852:                                              ; preds = %847, %852
  %853 = phi i64 [ %878, %852 ], [ %848, %847 ]
  %854 = phi i16* [ %880, %852 ], [ %849, %847 ]
  %855 = phi i16* [ %879, %852 ], [ %850, %847 ]
  %856 = load i16, i16* %854, align 2, !noalias !80
  store i16 %856, i16* %855, align 2, !noalias !80
  %857 = getelementptr inbounds i16, i16* %855, i64 1
  %858 = getelementptr inbounds i16, i16* %854, i64 1
  %859 = load i16, i16* %858, align 2, !noalias !80
  store i16 %859, i16* %857, align 2, !noalias !80
  %860 = getelementptr inbounds i16, i16* %855, i64 2
  %861 = getelementptr inbounds i16, i16* %854, i64 2
  %862 = load i16, i16* %861, align 2, !noalias !80
  store i16 %862, i16* %860, align 2, !noalias !80
  %863 = getelementptr inbounds i16, i16* %855, i64 3
  %864 = getelementptr inbounds i16, i16* %854, i64 3
  %865 = load i16, i16* %864, align 2, !noalias !80
  store i16 %865, i16* %863, align 2, !noalias !80
  %866 = getelementptr inbounds i16, i16* %855, i64 4
  %867 = getelementptr inbounds i16, i16* %854, i64 4
  %868 = load i16, i16* %867, align 2, !noalias !80
  store i16 %868, i16* %866, align 2, !noalias !80
  %869 = getelementptr inbounds i16, i16* %855, i64 5
  %870 = getelementptr inbounds i16, i16* %854, i64 5
  %871 = load i16, i16* %870, align 2, !noalias !80
  store i16 %871, i16* %869, align 2, !noalias !80
  %872 = getelementptr inbounds i16, i16* %855, i64 6
  %873 = getelementptr inbounds i16, i16* %854, i64 6
  %874 = load i16, i16* %873, align 2, !noalias !80
  store i16 %874, i16* %872, align 2, !noalias !80
  %875 = getelementptr inbounds i16, i16* %855, i64 7
  %876 = getelementptr inbounds i16, i16* %854, i64 7
  %877 = load i16, i16* %876, align 2, !noalias !80
  store i16 %877, i16* %875, align 2, !noalias !80
  %878 = add i64 %853, -8
  %879 = getelementptr inbounds i16, i16* %855, i64 8
  %880 = getelementptr inbounds i16, i16* %854, i64 8
  %881 = icmp eq i64 %878, 0
  br i1 %881, label %882, label %852, !llvm.loop !92

882:                                              ; preds = %847, %852, %827
  %883 = add i64 %728, %712
  %884 = load i8, i8* %714, align 1, !noalias !80
  %885 = icmp slt i8 %884, 0
  br i1 %885, label %886, label %888

886:                                              ; preds = %882
  %887 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %883, i64* %887, align 8, !noalias !80
  br label %890

888:                                              ; preds = %882
  %889 = trunc i64 %883 to i8
  store i8 %889, i8* %714, align 1, !noalias !80
  br label %890

890:                                              ; preds = %888, %886
  %891 = getelementptr inbounds i16, i16* %737, i64 %883
  store i16 0, i16* %891, align 2, !noalias !80
  br label %895

892:                                              ; preds = %726
  %893 = add i64 %728, %712
  %894 = sub i64 %893, %727
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* nonnull %8, i64 %727, i64 %894, i64 %728, i64 %728, i64 0, i64 %712, i16* %711) #17, !noalias !80
  br label %895

895:                                              ; preds = %731, %890, %892
  %896 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  %897 = bitcast %"class.std::__1::basic_string"* %8 to i64*
  %898 = load i64, i64* %897, align 8
  %899 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %900 = bitcast i64* %899 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %695, i8* align 8 %900, i64 15, i1 false)
  %901 = getelementptr inbounds i8, i8* %696, i64 23
  %902 = load i8, i8* %901, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %696, i8 0, i64 24, i1 false) #17, !noalias !80
  %903 = load i8, i8* %80, align 1
  %904 = icmp slt i8 %903, 0
  br i1 %904, label %905, label %908

905:                                              ; preds = %895
  %906 = bitcast %"class.std::__1::basic_string"* %78 to i8**
  %907 = load i8*, i8** %906, align 8
  call void @_ZdlPv(i8* %907) #18
  br label %908

908:                                              ; preds = %905, %895
  %909 = bitcast %"class.std::__1::basic_string"* %78 to i64*
  store i64 %898, i64* %909, align 8
  %910 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 38, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %911 = bitcast i64* %910 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %911, i8* nonnull align 8 %695, i64 15, i1 false)
  %912 = bitcast %"class.gfx::RenderText"* %0 to i8*
  %913 = getelementptr inbounds i8, i8* %912, i64 751
  store i8 %902, i8* %913, align 1
  %914 = load i8, i8* %702, align 1
  %915 = icmp slt i8 %914, 0
  br i1 %915, label %916, label %919

916:                                              ; preds = %908
  %917 = bitcast %"class.std::__1::basic_string"* %9 to i8**
  %918 = load i8*, i8** %917, align 8
  call void @_ZdlPv(i8* %918) #18
  br label %919

919:                                              ; preds = %908, %916
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %697) #17
  %920 = load i8, i8* %714, align 1
  %921 = icmp slt i8 %920, 0
  br i1 %921, label %922, label %924

922:                                              ; preds = %919
  %923 = load i8*, i8** %896, align 8
  call void @_ZdlPv(i8* %923) #18
  br label %924

924:                                              ; preds = %919, %922
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %696) #17
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %695)
  %925 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 0, i32 0, i32 1
  %926 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %925, align 8
  %927 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 0, i32 0, i32 0
  %928 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %927, align 8
  br label %929

929:                                              ; preds = %933, %924
  %930 = phi %"struct.std::__1::pair.186"* [ %926, %924 ], [ %931, %933 ]
  %931 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %930, i64 -1
  %932 = icmp eq %"struct.std::__1::pair.186"* %931, %928
  br i1 %932, label %937, label %933

933:                                              ; preds = %929
  %934 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %931, i64 0, i32 0
  %935 = load i64, i64* %934, align 8
  %936 = icmp eq i64 %935, 0
  br i1 %936, label %937, label %929

937:                                              ; preds = %933, %929
  %938 = phi %"struct.std::__1::pair.186"* [ %928, %929 ], [ %931, %933 ]
  %939 = phi i64 [ 1, %929 ], [ 0, %933 ]
  %940 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %938, i64 %939
  %941 = icmp eq %"struct.std::__1::pair.186"* %940, %926
  br i1 %941, label %943, label %942

942:                                              ; preds = %937
  store %"struct.std::__1::pair.186"* %940, %"struct.std::__1::pair.186"** %925, align 8
  br label %943

943:                                              ; preds = %937, %942
  %944 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 1
  store i64 0, i64* %944, align 8
  %945 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %946 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %945, i64 0, i32 1, i32 1
  %947 = load i8, i8* %946, align 1
  %948 = icmp slt i8 %947, 0
  br i1 %948, label %949, label %952

949:                                              ; preds = %943
  %950 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %951 = load i8*, i8** %950, align 8
  call void @_ZdlPv(i8* %951) #18
  br label %952

952:                                              ; preds = %943, %949
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %278) #17
  %953 = icmp eq %"class.gfx::RenderText"* %90, null
  br i1 %953, label %987, label %954

954:                                              ; preds = %952
  %955 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %245, align 8
  %956 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %955, i64 1
  %957 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %956, align 8
  call void %957(%"class.gfx::RenderText"* nonnull %90) #17
  br label %987

958:                                              ; preds = %244
  %959 = icmp eq i8 %77, 0
  br i1 %959, label %981, label %960

960:                                              ; preds = %958
  %961 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 0, i32 0, i32 1
  %962 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %961, align 8
  %963 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 0, i32 0, i32 0
  %964 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %963, align 8
  br label %965

965:                                              ; preds = %969, %960
  %966 = phi %"struct.std::__1::pair.186"* [ %962, %960 ], [ %967, %969 ]
  %967 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %966, i64 -1
  %968 = icmp eq %"struct.std::__1::pair.186"* %967, %964
  br i1 %968, label %973, label %969

969:                                              ; preds = %965
  %970 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %967, i64 0, i32 0
  %971 = load i64, i64* %970, align 8
  %972 = icmp eq i64 %971, 0
  br i1 %972, label %973, label %965

973:                                              ; preds = %969, %965
  %974 = phi %"struct.std::__1::pair.186"* [ %964, %965 ], [ %967, %969 ]
  %975 = phi i64 [ 1, %965 ], [ 0, %969 ]
  %976 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %974, i64 %975
  %977 = icmp eq %"struct.std::__1::pair.186"* %976, %962
  br i1 %977, label %979, label %978

978:                                              ; preds = %973
  store %"struct.std::__1::pair.186"* %976, %"struct.std::__1::pair.186"** %961, align 8
  br label %979

979:                                              ; preds = %973, %978
  %980 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 1
  store i64 0, i64* %980, align 8
  br label %981

981:                                              ; preds = %979, %958
  %982 = icmp eq %"class.gfx::RenderText"* %90, null
  br i1 %982, label %1036, label %983

983:                                              ; preds = %981
  %984 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %245, align 8
  %985 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %984, i64 1
  %986 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %985, align 8
  tail call void %986(%"class.gfx::RenderText"* nonnull %90) #17
  br label %1036

987:                                              ; preds = %954, %952, %73
  %988 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %79, %954 ], [ %79, %952 ], [ %66, %73 ]
  %989 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 38
  %990 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %988, i64 0, i32 1, i32 1
  %991 = load i8, i8* %990, align 1
  %992 = icmp slt i8 %991, 0
  %993 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 38, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %994 = load i64, i64* %993, align 8
  %995 = zext i8 %991 to i64
  %996 = select i1 %992, i64 %994, i64 %995
  %997 = load i8, i8* %35, align 1
  %998 = icmp slt i8 %997, 0
  %999 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 37, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1000 = load i64, i64* %999, align 8
  %1001 = zext i8 %997 to i64
  %1002 = select i1 %998, i64 %1000, i64 %1001
  %1003 = icmp eq i64 %996, %1002
  br i1 %1003, label %1004, label %1027

1004:                                             ; preds = %987
  %1005 = icmp eq i64 %996, 0
  br i1 %1005, label %1029, label %1006

1006:                                             ; preds = %1004
  %1007 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1008 = load i16*, i16** %1007, align 8
  %1009 = bitcast %"class.std::__1::basic_string"* %33 to i16*
  %1010 = select i1 %998, i16* %1008, i16* %1009
  %1011 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %989, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1012 = load i16*, i16** %1011, align 8
  %1013 = bitcast %"class.std::__1::basic_string"* %989 to i16*
  %1014 = select i1 %992, i16* %1012, i16* %1013
  br label %1015

1015:                                             ; preds = %1022, %1006
  %1016 = phi i64 [ %1023, %1022 ], [ %996, %1006 ]
  %1017 = phi i16* [ %1025, %1022 ], [ %1010, %1006 ]
  %1018 = phi i16* [ %1024, %1022 ], [ %1014, %1006 ]
  %1019 = load i16, i16* %1018, align 2
  %1020 = load i16, i16* %1017, align 2
  %1021 = icmp eq i16 %1020, %1019
  br i1 %1021, label %1022, label %1027

1022:                                             ; preds = %1015
  %1023 = add i64 %1016, -1
  %1024 = getelementptr inbounds i16, i16* %1018, i64 1
  %1025 = getelementptr inbounds i16, i16* %1017, i64 1
  %1026 = icmp eq i64 %1023, 0
  br i1 %1026, label %1029, label %1015

1027:                                             ; preds = %1015, %987
  %1028 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 41
  store i8 1, i8* %1028, align 2
  br label %1036

1029:                                             ; preds = %1022, %1004
  %1030 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 41
  store i8 0, i8* %1030, align 2
  br i1 %992, label %1031, label %1034

1031:                                             ; preds = %1029
  %1032 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %989, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1033 = load i16*, i16** %1032, align 8
  store i16 0, i16* %1033, align 2
  store i64 0, i64* %993, align 8
  br label %1036

1034:                                             ; preds = %1029
  %1035 = bitcast %"class.std::__1::basic_string"* %989 to i16*
  store i16 0, i16* %1035, align 2
  store i8 0, i8* %990, align 1
  br label %1036

1036:                                             ; preds = %1034, %1031, %1027, %983, %981, %57, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText5ElideERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEffNS_13ElideBehaviorE(%"class.std::__1::basic_string"* noalias sret, %"class.gfx::RenderText"*, %"class.std::__1::basic_string"* dereferenceable(24), float, float, i32) local_unnamed_addr #11 align 2 {
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.base::TimeTicks", align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.gfx::StringSlicer", align 8
  %14 = alloca i64, align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = fcmp ugt float %4, 0.000000e+00
  br i1 %17, label %18, label %28

18:                                               ; preds = %6
  %19 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i64 %24, i64 %25
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %6, %18
  %29 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #17
  br label %1638

30:                                               ; preds = %18
  %31 = icmp eq i32 %5, 5
  br i1 %31, label %32, label %33

32:                                               ; preds = %30
  tail call void @_ZN3gfx10RenderText10ElideEmailERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEf(%"class.std::__1::basic_string"* sret %0, %"class.gfx::RenderText"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %2, float %4)
  br label %1638

33:                                               ; preds = %30
  %34 = fcmp ule float %3, 0.000000e+00
  %35 = fcmp ugt float %3, %4
  %36 = or i1 %34, %35
  br i1 %36, label %214, label %37

37:                                               ; preds = %33
  br i1 %22, label %41, label %38

38:                                               ; preds = %37
  %39 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %40 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 24, i1 false) #17
  br label %1638

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i16*, i16** %42, align 8
  %44 = icmp ult i64 %24, 11
  br i1 %44, label %45, label %50

45:                                               ; preds = %41
  %46 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %47 = trunc i64 %24 to i8
  %48 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %48, i64 0, i32 1, i32 1
  store i8 %47, i8* %49, align 1
  br label %67

50:                                               ; preds = %41
  %51 = icmp ugt i64 %24, 9223372036854775791
  br i1 %51, label %52, label %54

52:                                               ; preds = %50
  %53 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %53) #19
  unreachable

54:                                               ; preds = %50
  %55 = add nuw nsw i64 %24, 8
  %56 = and i64 %55, -8
  %57 = icmp slt i64 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %54
  tail call void @abort() #19
  unreachable

59:                                               ; preds = %54
  %60 = shl i64 %56, 1
  %61 = tail call i8* @_Znwm(i64 %60) #18
  %62 = bitcast i8* %61 to i16*
  %63 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %61, i8** %63, align 8
  %64 = or i64 %56, -9223372036854775808
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %24, i64* %66, align 8
  br label %67

67:                                               ; preds = %59, %45
  %68 = phi i16* [ %46, %45 ], [ %62, %59 ]
  %69 = add nuw nsw i64 %24, 1
  %70 = add i64 %24, 1
  %71 = icmp ult i64 %70, 16
  br i1 %71, label %161, label %72

72:                                               ; preds = %67
  %73 = add i64 %24, 1
  %74 = getelementptr i16, i16* %68, i64 %73
  %75 = getelementptr i16, i16* %43, i64 %73
  %76 = icmp ult i16* %68, %75
  %77 = icmp ult i16* %43, %74
  %78 = and i1 %76, %77
  br i1 %78, label %161, label %79

79:                                               ; preds = %72
  %80 = and i64 %70, -16
  %81 = sub i64 %69, %80
  %82 = getelementptr i16, i16* %43, i64 %80
  %83 = getelementptr i16, i16* %68, i64 %80
  %84 = add i64 %80, -16
  %85 = lshr exact i64 %84, 4
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 3
  %88 = icmp ult i64 %84, 48
  br i1 %88, label %140, label %89

89:                                               ; preds = %79
  %90 = sub nsw i64 %86, %87
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi i64 [ 0, %89 ], [ %137, %91 ]
  %93 = phi i64 [ %90, %89 ], [ %138, %91 ]
  %94 = getelementptr i16, i16* %43, i64 %92
  %95 = getelementptr i16, i16* %68, i64 %92
  %96 = bitcast i16* %94 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !93
  %98 = getelementptr i16, i16* %94, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !93
  %101 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %101, align 2, !alias.scope !96, !noalias !93
  %102 = getelementptr i16, i16* %95, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %103, align 2, !alias.scope !96, !noalias !93
  %104 = or i64 %92, 16
  %105 = getelementptr i16, i16* %43, i64 %104
  %106 = getelementptr i16, i16* %68, i64 %104
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !93
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !93
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !96, !noalias !93
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !96, !noalias !93
  %115 = or i64 %92, 32
  %116 = getelementptr i16, i16* %43, i64 %115
  %117 = getelementptr i16, i16* %68, i64 %115
  %118 = bitcast i16* %116 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 2, !alias.scope !93
  %120 = getelementptr i16, i16* %116, i64 8
  %121 = bitcast i16* %120 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !93
  %123 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %119, <8 x i16>* %123, align 2, !alias.scope !96, !noalias !93
  %124 = getelementptr i16, i16* %117, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %125, align 2, !alias.scope !96, !noalias !93
  %126 = or i64 %92, 48
  %127 = getelementptr i16, i16* %43, i64 %126
  %128 = getelementptr i16, i16* %68, i64 %126
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !93
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !93
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !96, !noalias !93
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !96, !noalias !93
  %137 = add i64 %92, 64
  %138 = add i64 %93, -4
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %91, !llvm.loop !98

140:                                              ; preds = %91, %79
  %141 = phi i64 [ 0, %79 ], [ %137, %91 ]
  %142 = icmp eq i64 %87, 0
  br i1 %142, label %159, label %143

143:                                              ; preds = %140, %143
  %144 = phi i64 [ %156, %143 ], [ %141, %140 ]
  %145 = phi i64 [ %157, %143 ], [ %87, %140 ]
  %146 = getelementptr i16, i16* %43, i64 %144
  %147 = getelementptr i16, i16* %68, i64 %144
  %148 = bitcast i16* %146 to <8 x i16>*
  %149 = load <8 x i16>, <8 x i16>* %148, align 2, !alias.scope !93
  %150 = getelementptr i16, i16* %146, i64 8
  %151 = bitcast i16* %150 to <8 x i16>*
  %152 = load <8 x i16>, <8 x i16>* %151, align 2, !alias.scope !93
  %153 = bitcast i16* %147 to <8 x i16>*
  store <8 x i16> %149, <8 x i16>* %153, align 2, !alias.scope !96, !noalias !93
  %154 = getelementptr i16, i16* %147, i64 8
  %155 = bitcast i16* %154 to <8 x i16>*
  store <8 x i16> %152, <8 x i16>* %155, align 2, !alias.scope !96, !noalias !93
  %156 = add i64 %144, 16
  %157 = add i64 %145, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %143, !llvm.loop !99

159:                                              ; preds = %143, %140
  %160 = icmp eq i64 %70, %80
  br i1 %160, label %1638, label %161

161:                                              ; preds = %159, %72, %67
  %162 = phi i64 [ %69, %72 ], [ %69, %67 ], [ %81, %159 ]
  %163 = phi i16* [ %43, %72 ], [ %43, %67 ], [ %82, %159 ]
  %164 = phi i16* [ %68, %72 ], [ %68, %67 ], [ %83, %159 ]
  %165 = add i64 %162, -1
  %166 = and i64 %162, 7
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %179, label %168

168:                                              ; preds = %161, %168
  %169 = phi i64 [ %174, %168 ], [ %162, %161 ]
  %170 = phi i16* [ %176, %168 ], [ %163, %161 ]
  %171 = phi i16* [ %175, %168 ], [ %164, %161 ]
  %172 = phi i64 [ %177, %168 ], [ %166, %161 ]
  %173 = load i16, i16* %170, align 2
  store i16 %173, i16* %171, align 2
  %174 = add i64 %169, -1
  %175 = getelementptr inbounds i16, i16* %171, i64 1
  %176 = getelementptr inbounds i16, i16* %170, i64 1
  %177 = add i64 %172, -1
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %179, label %168, !llvm.loop !100

179:                                              ; preds = %168, %161
  %180 = phi i64 [ %162, %161 ], [ %174, %168 ]
  %181 = phi i16* [ %163, %161 ], [ %176, %168 ]
  %182 = phi i16* [ %164, %161 ], [ %175, %168 ]
  %183 = icmp ult i64 %165, 7
  br i1 %183, label %1638, label %184

184:                                              ; preds = %179, %184
  %185 = phi i64 [ %210, %184 ], [ %180, %179 ]
  %186 = phi i16* [ %212, %184 ], [ %181, %179 ]
  %187 = phi i16* [ %211, %184 ], [ %182, %179 ]
  %188 = load i16, i16* %186, align 2
  store i16 %188, i16* %187, align 2
  %189 = getelementptr inbounds i16, i16* %187, i64 1
  %190 = getelementptr inbounds i16, i16* %186, i64 1
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = getelementptr inbounds i16, i16* %187, i64 2
  %193 = getelementptr inbounds i16, i16* %186, i64 2
  %194 = load i16, i16* %193, align 2
  store i16 %194, i16* %192, align 2
  %195 = getelementptr inbounds i16, i16* %187, i64 3
  %196 = getelementptr inbounds i16, i16* %186, i64 3
  %197 = load i16, i16* %196, align 2
  store i16 %197, i16* %195, align 2
  %198 = getelementptr inbounds i16, i16* %187, i64 4
  %199 = getelementptr inbounds i16, i16* %186, i64 4
  %200 = load i16, i16* %199, align 2
  store i16 %200, i16* %198, align 2
  %201 = getelementptr inbounds i16, i16* %187, i64 5
  %202 = getelementptr inbounds i16, i16* %186, i64 5
  %203 = load i16, i16* %202, align 2
  store i16 %203, i16* %201, align 2
  %204 = getelementptr inbounds i16, i16* %187, i64 6
  %205 = getelementptr inbounds i16, i16* %186, i64 6
  %206 = load i16, i16* %205, align 2
  store i16 %206, i16* %204, align 2
  %207 = getelementptr inbounds i16, i16* %187, i64 7
  %208 = getelementptr inbounds i16, i16* %186, i64 7
  %209 = load i16, i16* %208, align 2
  store i16 %209, i16* %207, align 2
  %210 = add i64 %185, -8
  %211 = getelementptr inbounds i16, i16* %187, i64 8
  %212 = getelementptr inbounds i16, i16* %186, i64 8
  %213 = icmp eq i64 %210, 0
  br i1 %213, label %1638, label %184, !llvm.loop !101

214:                                              ; preds = %33
  %215 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 129, i32 0), align 16
  %216 = and i8 %215, 25
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %224, label %218, !prof !53

218:                                              ; preds = %214
  %219 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  %220 = bitcast %"class.base::TimeTicks"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %220) #17
  %221 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %9, i64 0, i32 0, i32 0
  %222 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #17
  store i64 %222, i64* %221, align 8
  %223 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 129, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %219, %"class.base::TimeTicks"* nonnull dereferenceable(8) %9, %"class.base::trace_event::TraceArguments"* null, i32 0) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %220) #17
  br label %224

224:                                              ; preds = %214, %218
  %225 = phi i64 [ -6148914691236517206, %214 ], [ %223, %218 ]
  %226 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %214 ], [ getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), %218 ]
  %227 = phi i8* [ null, %214 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 129, i32 0), %218 ]
  %228 = call %"class.gfx::RenderText"* @_ZNK3gfx10RenderText25CreateInstanceOfSameStyleERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.gfx::RenderText"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %2)
  call void @_ZN3gfx10RenderText18UpdateStyleLengthsEv(%"class.gfx::RenderText"* %228)
  %229 = fcmp oeq float %3, 0.000000e+00
  br i1 %229, label %230, label %243

230:                                              ; preds = %224
  %231 = bitcast %"class.gfx::RenderText"* %228 to <2 x float> (%"class.gfx::RenderText"*)***
  %232 = load <2 x float> (%"class.gfx::RenderText"*)**, <2 x float> (%"class.gfx::RenderText"*)*** %231, align 8
  %233 = getelementptr inbounds <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %232, i64 3
  %234 = load <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %233, align 8
  %235 = call <2 x float> %234(%"class.gfx::RenderText"* %228) #17
  %236 = extractelement <2 x float> %235, i32 0
  %237 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %228, i64 0, i32 13
  %238 = load i8, i8* %237, align 8, !range !2
  %239 = icmp eq i8 %238, 0
  %240 = call float @llvm.ceil.f32(float %236) #17
  %241 = fadd float %240, 1.000000e+00
  %242 = select i1 %239, float %236, float %241
  br label %243

243:                                              ; preds = %230, %224
  %244 = phi float [ %242, %230 ], [ %3, %224 ]
  %245 = fcmp ugt float %244, %4
  br i1 %245, label %426, label %246

246:                                              ; preds = %243
  %247 = load i8, i8* %20, align 1
  %248 = icmp slt i8 %247, 0
  br i1 %248, label %252, label %249

249:                                              ; preds = %246
  %250 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %251 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %250, i8* align 8 %251, i64 24, i1 false) #17
  br label %1625

252:                                              ; preds = %246
  %253 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = load i16*, i16** %253, align 8
  %255 = load i64, i64* %23, align 8
  %256 = icmp ult i64 %255, 11
  br i1 %256, label %257, label %262

257:                                              ; preds = %252
  %258 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %259 = trunc i64 %255 to i8
  %260 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %261 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %260, i64 0, i32 1, i32 1
  store i8 %259, i8* %261, align 1
  br label %279

262:                                              ; preds = %252
  %263 = icmp ugt i64 %255, 9223372036854775791
  br i1 %263, label %264, label %266

264:                                              ; preds = %262
  %265 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %265) #19
  unreachable

266:                                              ; preds = %262
  %267 = add nuw nsw i64 %255, 8
  %268 = and i64 %267, -8
  %269 = icmp slt i64 %268, 0
  br i1 %269, label %270, label %271

270:                                              ; preds = %266
  call void @abort() #19
  unreachable

271:                                              ; preds = %266
  %272 = shl i64 %268, 1
  %273 = call i8* @_Znwm(i64 %272) #18
  %274 = bitcast i8* %273 to i16*
  %275 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %273, i8** %275, align 8
  %276 = or i64 %268, -9223372036854775808
  %277 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %276, i64* %277, align 8
  %278 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %255, i64* %278, align 8
  br label %279

279:                                              ; preds = %271, %257
  %280 = phi i16* [ %258, %257 ], [ %274, %271 ]
  %281 = add nuw nsw i64 %255, 1
  %282 = add i64 %255, 1
  %283 = icmp ult i64 %282, 16
  br i1 %283, label %373, label %284

284:                                              ; preds = %279
  %285 = add i64 %255, 1
  %286 = getelementptr i16, i16* %280, i64 %285
  %287 = getelementptr i16, i16* %254, i64 %285
  %288 = icmp ult i16* %280, %287
  %289 = icmp ult i16* %254, %286
  %290 = and i1 %288, %289
  br i1 %290, label %373, label %291

291:                                              ; preds = %284
  %292 = and i64 %282, -16
  %293 = sub i64 %281, %292
  %294 = getelementptr i16, i16* %254, i64 %292
  %295 = getelementptr i16, i16* %280, i64 %292
  %296 = add i64 %292, -16
  %297 = lshr exact i64 %296, 4
  %298 = add nuw nsw i64 %297, 1
  %299 = and i64 %298, 3
  %300 = icmp ult i64 %296, 48
  br i1 %300, label %352, label %301

301:                                              ; preds = %291
  %302 = sub nsw i64 %298, %299
  br label %303

303:                                              ; preds = %303, %301
  %304 = phi i64 [ 0, %301 ], [ %349, %303 ]
  %305 = phi i64 [ %302, %301 ], [ %350, %303 ]
  %306 = getelementptr i16, i16* %254, i64 %304
  %307 = getelementptr i16, i16* %280, i64 %304
  %308 = bitcast i16* %306 to <8 x i16>*
  %309 = load <8 x i16>, <8 x i16>* %308, align 2, !alias.scope !102
  %310 = getelementptr i16, i16* %306, i64 8
  %311 = bitcast i16* %310 to <8 x i16>*
  %312 = load <8 x i16>, <8 x i16>* %311, align 2, !alias.scope !102
  %313 = bitcast i16* %307 to <8 x i16>*
  store <8 x i16> %309, <8 x i16>* %313, align 2, !alias.scope !105, !noalias !102
  %314 = getelementptr i16, i16* %307, i64 8
  %315 = bitcast i16* %314 to <8 x i16>*
  store <8 x i16> %312, <8 x i16>* %315, align 2, !alias.scope !105, !noalias !102
  %316 = or i64 %304, 16
  %317 = getelementptr i16, i16* %254, i64 %316
  %318 = getelementptr i16, i16* %280, i64 %316
  %319 = bitcast i16* %317 to <8 x i16>*
  %320 = load <8 x i16>, <8 x i16>* %319, align 2, !alias.scope !102
  %321 = getelementptr i16, i16* %317, i64 8
  %322 = bitcast i16* %321 to <8 x i16>*
  %323 = load <8 x i16>, <8 x i16>* %322, align 2, !alias.scope !102
  %324 = bitcast i16* %318 to <8 x i16>*
  store <8 x i16> %320, <8 x i16>* %324, align 2, !alias.scope !105, !noalias !102
  %325 = getelementptr i16, i16* %318, i64 8
  %326 = bitcast i16* %325 to <8 x i16>*
  store <8 x i16> %323, <8 x i16>* %326, align 2, !alias.scope !105, !noalias !102
  %327 = or i64 %304, 32
  %328 = getelementptr i16, i16* %254, i64 %327
  %329 = getelementptr i16, i16* %280, i64 %327
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !102
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !102
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !105, !noalias !102
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !105, !noalias !102
  %338 = or i64 %304, 48
  %339 = getelementptr i16, i16* %254, i64 %338
  %340 = getelementptr i16, i16* %280, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !102
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !102
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !105, !noalias !102
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !105, !noalias !102
  %349 = add i64 %304, 64
  %350 = add i64 %305, -4
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %352, label %303, !llvm.loop !107

352:                                              ; preds = %303, %291
  %353 = phi i64 [ 0, %291 ], [ %349, %303 ]
  %354 = icmp eq i64 %299, 0
  br i1 %354, label %371, label %355

355:                                              ; preds = %352, %355
  %356 = phi i64 [ %368, %355 ], [ %353, %352 ]
  %357 = phi i64 [ %369, %355 ], [ %299, %352 ]
  %358 = getelementptr i16, i16* %254, i64 %356
  %359 = getelementptr i16, i16* %280, i64 %356
  %360 = bitcast i16* %358 to <8 x i16>*
  %361 = load <8 x i16>, <8 x i16>* %360, align 2, !alias.scope !102
  %362 = getelementptr i16, i16* %358, i64 8
  %363 = bitcast i16* %362 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !102
  %365 = bitcast i16* %359 to <8 x i16>*
  store <8 x i16> %361, <8 x i16>* %365, align 2, !alias.scope !105, !noalias !102
  %366 = getelementptr i16, i16* %359, i64 8
  %367 = bitcast i16* %366 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %367, align 2, !alias.scope !105, !noalias !102
  %368 = add i64 %356, 16
  %369 = add i64 %357, -1
  %370 = icmp eq i64 %369, 0
  br i1 %370, label %371, label %355, !llvm.loop !108

371:                                              ; preds = %355, %352
  %372 = icmp eq i64 %282, %292
  br i1 %372, label %1625, label %373

373:                                              ; preds = %371, %284, %279
  %374 = phi i64 [ %281, %284 ], [ %281, %279 ], [ %293, %371 ]
  %375 = phi i16* [ %254, %284 ], [ %254, %279 ], [ %294, %371 ]
  %376 = phi i16* [ %280, %284 ], [ %280, %279 ], [ %295, %371 ]
  %377 = add i64 %374, -1
  %378 = and i64 %374, 7
  %379 = icmp eq i64 %378, 0
  br i1 %379, label %391, label %380

380:                                              ; preds = %373, %380
  %381 = phi i64 [ %386, %380 ], [ %374, %373 ]
  %382 = phi i16* [ %388, %380 ], [ %375, %373 ]
  %383 = phi i16* [ %387, %380 ], [ %376, %373 ]
  %384 = phi i64 [ %389, %380 ], [ %378, %373 ]
  %385 = load i16, i16* %382, align 2
  store i16 %385, i16* %383, align 2
  %386 = add i64 %381, -1
  %387 = getelementptr inbounds i16, i16* %383, i64 1
  %388 = getelementptr inbounds i16, i16* %382, i64 1
  %389 = add i64 %384, -1
  %390 = icmp eq i64 %389, 0
  br i1 %390, label %391, label %380, !llvm.loop !109

391:                                              ; preds = %380, %373
  %392 = phi i64 [ %374, %373 ], [ %386, %380 ]
  %393 = phi i16* [ %375, %373 ], [ %388, %380 ]
  %394 = phi i16* [ %376, %373 ], [ %387, %380 ]
  %395 = icmp ult i64 %377, 7
  br i1 %395, label %1625, label %396

396:                                              ; preds = %391, %396
  %397 = phi i64 [ %422, %396 ], [ %392, %391 ]
  %398 = phi i16* [ %424, %396 ], [ %393, %391 ]
  %399 = phi i16* [ %423, %396 ], [ %394, %391 ]
  %400 = load i16, i16* %398, align 2
  store i16 %400, i16* %399, align 2
  %401 = getelementptr inbounds i16, i16* %399, i64 1
  %402 = getelementptr inbounds i16, i16* %398, i64 1
  %403 = load i16, i16* %402, align 2
  store i16 %403, i16* %401, align 2
  %404 = getelementptr inbounds i16, i16* %399, i64 2
  %405 = getelementptr inbounds i16, i16* %398, i64 2
  %406 = load i16, i16* %405, align 2
  store i16 %406, i16* %404, align 2
  %407 = getelementptr inbounds i16, i16* %399, i64 3
  %408 = getelementptr inbounds i16, i16* %398, i64 3
  %409 = load i16, i16* %408, align 2
  store i16 %409, i16* %407, align 2
  %410 = getelementptr inbounds i16, i16* %399, i64 4
  %411 = getelementptr inbounds i16, i16* %398, i64 4
  %412 = load i16, i16* %411, align 2
  store i16 %412, i16* %410, align 2
  %413 = getelementptr inbounds i16, i16* %399, i64 5
  %414 = getelementptr inbounds i16, i16* %398, i64 5
  %415 = load i16, i16* %414, align 2
  store i16 %415, i16* %413, align 2
  %416 = getelementptr inbounds i16, i16* %399, i64 6
  %417 = getelementptr inbounds i16, i16* %398, i64 6
  %418 = load i16, i16* %417, align 2
  store i16 %418, i16* %416, align 2
  %419 = getelementptr inbounds i16, i16* %399, i64 7
  %420 = getelementptr inbounds i16, i16* %398, i64 7
  %421 = load i16, i16* %420, align 2
  store i16 %421, i16* %419, align 2
  %422 = add i64 %397, -8
  %423 = getelementptr inbounds i16, i16* %399, i64 8
  %424 = getelementptr inbounds i16, i16* %398, i64 8
  %425 = icmp eq i64 %422, 0
  br i1 %425, label %1625, label %396, !llvm.loop !110

426:                                              ; preds = %243
  %427 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %427) #17
  %428 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %429 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %430 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %431 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %431, i8 -86, i64 24, i1 false)
  %432 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 0), align 2
  %433 = icmp eq i16 %432, 0
  br i1 %433, label %434, label %438

434:                                              ; preds = %426
  %435 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %436 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %435, i64 0, i32 1, i32 1
  store i8 0, i8* %436, align 1
  %437 = bitcast %"class.std::__1::basic_string"* %12 to i16*
  br label %621

438:                                              ; preds = %426, %438
  %439 = phi i64 [ %441, %438 ], [ 0, %426 ]
  %440 = phi i16* [ %442, %438 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 0), %426 ]
  %441 = add i64 %439, 1
  %442 = getelementptr inbounds i16, i16* %440, i64 1
  %443 = load i16, i16* %442, align 2
  %444 = icmp eq i16 %443, 0
  br i1 %444, label %445, label %438

445:                                              ; preds = %438
  %446 = icmp ugt i64 %441, 9223372036854775791
  br i1 %446, label %447, label %449

447:                                              ; preds = %445
  %448 = bitcast %"class.std::__1::basic_string"* %12 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %448) #19
  unreachable

449:                                              ; preds = %445
  %450 = icmp ult i64 %441, 11
  br i1 %450, label %462, label %451

451:                                              ; preds = %449
  %452 = add nuw nsw i64 %439, 9
  %453 = and i64 %452, -8
  %454 = icmp slt i64 %453, 0
  br i1 %454, label %455, label %456

455:                                              ; preds = %451
  call void @abort() #19
  unreachable

456:                                              ; preds = %451
  %457 = shl i64 %453, 1
  %458 = call i8* @_Znwm(i64 %457) #18
  %459 = bitcast i8* %458 to i16*
  %460 = bitcast %"class.std::__1::basic_string"* %12 to i8**
  store i8* %458, i8** %460, align 8
  %461 = or i64 %453, -9223372036854775808
  store i64 %461, i64* %430, align 8
  store i64 %441, i64* %429, align 8
  br label %468

462:                                              ; preds = %449
  %463 = trunc i64 %441 to i8
  %464 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %465 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %464, i64 0, i32 1, i32 1
  store i8 %463, i8* %465, align 1
  %466 = bitcast %"class.std::__1::basic_string"* %12 to i16*
  %467 = icmp eq i64 %441, 0
  br i1 %467, label %621, label %468

468:                                              ; preds = %462, %456
  %469 = phi i16* [ %459, %456 ], [ %466, %462 ]
  store i16 %432, i16* %469, align 2
  %470 = icmp eq i64 %439, 0
  br i1 %470, label %621, label %471

471:                                              ; preds = %468
  %472 = icmp ult i64 %439, 16
  br i1 %472, label %568, label %473

473:                                              ; preds = %471
  %474 = getelementptr i16, i16* %469, i64 1
  %475 = getelementptr i16, i16* %469, i64 %441
  %476 = getelementptr [0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 %441
  %477 = icmp ult i16* %474, %476
  %478 = icmp ugt i16* %475, getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1)
  %479 = and i1 %477, %478
  br i1 %479, label %568, label %480

480:                                              ; preds = %473
  %481 = and i64 %439, -16
  %482 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %481
  %483 = sub i64 %439, %481
  %484 = getelementptr i16, i16* %469, i64 %481
  %485 = add i64 %481, -16
  %486 = lshr exact i64 %485, 4
  %487 = add nuw nsw i64 %486, 1
  %488 = and i64 %487, 3
  %489 = icmp ult i64 %485, 48
  br i1 %489, label %545, label %490

490:                                              ; preds = %480
  %491 = sub nsw i64 %487, %488
  %492 = getelementptr i16, i16* %469, i64 1
  %493 = getelementptr i16, i16* %469, i64 1
  %494 = getelementptr i16, i16* %469, i64 1
  %495 = getelementptr i16, i16* %469, i64 1
  br label %496

496:                                              ; preds = %496, %490
  %497 = phi i64 [ 0, %490 ], [ %542, %496 ]
  %498 = phi i64 [ %491, %490 ], [ %543, %496 ]
  %499 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %497
  %500 = getelementptr inbounds i16, i16* %492, i64 %497
  %501 = bitcast i16* %499 to <8 x i16>*
  %502 = load <8 x i16>, <8 x i16>* %501, align 2, !alias.scope !111
  %503 = getelementptr i16, i16* %499, i64 8
  %504 = bitcast i16* %503 to <8 x i16>*
  %505 = load <8 x i16>, <8 x i16>* %504, align 2, !alias.scope !111
  %506 = bitcast i16* %500 to <8 x i16>*
  store <8 x i16> %502, <8 x i16>* %506, align 2, !alias.scope !114, !noalias !111
  %507 = getelementptr inbounds i16, i16* %500, i64 8
  %508 = bitcast i16* %507 to <8 x i16>*
  store <8 x i16> %505, <8 x i16>* %508, align 2, !alias.scope !114, !noalias !111
  %509 = or i64 %497, 16
  %510 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %509
  %511 = getelementptr inbounds i16, i16* %493, i64 %509
  %512 = bitcast i16* %510 to <8 x i16>*
  %513 = load <8 x i16>, <8 x i16>* %512, align 2, !alias.scope !111
  %514 = getelementptr i16, i16* %510, i64 8
  %515 = bitcast i16* %514 to <8 x i16>*
  %516 = load <8 x i16>, <8 x i16>* %515, align 2, !alias.scope !111
  %517 = bitcast i16* %511 to <8 x i16>*
  store <8 x i16> %513, <8 x i16>* %517, align 2, !alias.scope !114, !noalias !111
  %518 = getelementptr inbounds i16, i16* %511, i64 8
  %519 = bitcast i16* %518 to <8 x i16>*
  store <8 x i16> %516, <8 x i16>* %519, align 2, !alias.scope !114, !noalias !111
  %520 = or i64 %497, 32
  %521 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %520
  %522 = getelementptr inbounds i16, i16* %494, i64 %520
  %523 = bitcast i16* %521 to <8 x i16>*
  %524 = load <8 x i16>, <8 x i16>* %523, align 2, !alias.scope !111
  %525 = getelementptr i16, i16* %521, i64 8
  %526 = bitcast i16* %525 to <8 x i16>*
  %527 = load <8 x i16>, <8 x i16>* %526, align 2, !alias.scope !111
  %528 = bitcast i16* %522 to <8 x i16>*
  store <8 x i16> %524, <8 x i16>* %528, align 2, !alias.scope !114, !noalias !111
  %529 = getelementptr inbounds i16, i16* %522, i64 8
  %530 = bitcast i16* %529 to <8 x i16>*
  store <8 x i16> %527, <8 x i16>* %530, align 2, !alias.scope !114, !noalias !111
  %531 = or i64 %497, 48
  %532 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %531
  %533 = getelementptr inbounds i16, i16* %495, i64 %531
  %534 = bitcast i16* %532 to <8 x i16>*
  %535 = load <8 x i16>, <8 x i16>* %534, align 2, !alias.scope !111
  %536 = getelementptr i16, i16* %532, i64 8
  %537 = bitcast i16* %536 to <8 x i16>*
  %538 = load <8 x i16>, <8 x i16>* %537, align 2, !alias.scope !111
  %539 = bitcast i16* %533 to <8 x i16>*
  store <8 x i16> %535, <8 x i16>* %539, align 2, !alias.scope !114, !noalias !111
  %540 = getelementptr inbounds i16, i16* %533, i64 8
  %541 = bitcast i16* %540 to <8 x i16>*
  store <8 x i16> %538, <8 x i16>* %541, align 2, !alias.scope !114, !noalias !111
  %542 = add i64 %497, 64
  %543 = add i64 %498, -4
  %544 = icmp eq i64 %543, 0
  br i1 %544, label %545, label %496, !llvm.loop !116

545:                                              ; preds = %496, %480
  %546 = phi i64 [ 0, %480 ], [ %542, %496 ]
  %547 = icmp eq i64 %488, 0
  br i1 %547, label %566, label %548

548:                                              ; preds = %545
  %549 = getelementptr i16, i16* %469, i64 1
  br label %550

550:                                              ; preds = %550, %548
  %551 = phi i64 [ %546, %548 ], [ %563, %550 ]
  %552 = phi i64 [ %488, %548 ], [ %564, %550 ]
  %553 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %551
  %554 = getelementptr inbounds i16, i16* %549, i64 %551
  %555 = bitcast i16* %553 to <8 x i16>*
  %556 = load <8 x i16>, <8 x i16>* %555, align 2, !alias.scope !111
  %557 = getelementptr i16, i16* %553, i64 8
  %558 = bitcast i16* %557 to <8 x i16>*
  %559 = load <8 x i16>, <8 x i16>* %558, align 2, !alias.scope !111
  %560 = bitcast i16* %554 to <8 x i16>*
  store <8 x i16> %556, <8 x i16>* %560, align 2, !alias.scope !114, !noalias !111
  %561 = getelementptr inbounds i16, i16* %554, i64 8
  %562 = bitcast i16* %561 to <8 x i16>*
  store <8 x i16> %559, <8 x i16>* %562, align 2, !alias.scope !114, !noalias !111
  %563 = add i64 %551, 16
  %564 = add i64 %552, -1
  %565 = icmp eq i64 %564, 0
  br i1 %565, label %566, label %550, !llvm.loop !117

566:                                              ; preds = %550, %545
  %567 = icmp eq i64 %439, %481
  br i1 %567, label %621, label %568

568:                                              ; preds = %566, %473, %471
  %569 = phi i16* [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), %473 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), %471 ], [ %482, %566 ]
  %570 = phi i64 [ %439, %473 ], [ %439, %471 ], [ %483, %566 ]
  %571 = phi i16* [ %469, %473 ], [ %469, %471 ], [ %484, %566 ]
  %572 = add i64 %570, -1
  %573 = and i64 %570, 7
  %574 = icmp eq i64 %573, 0
  br i1 %574, label %586, label %575

575:                                              ; preds = %568, %575
  %576 = phi i16* [ %583, %575 ], [ %569, %568 ]
  %577 = phi i64 [ %582, %575 ], [ %570, %568 ]
  %578 = phi i16* [ %580, %575 ], [ %571, %568 ]
  %579 = phi i64 [ %584, %575 ], [ %573, %568 ]
  %580 = getelementptr inbounds i16, i16* %578, i64 1
  %581 = load i16, i16* %576, align 2
  store i16 %581, i16* %580, align 2
  %582 = add i64 %577, -1
  %583 = getelementptr inbounds i16, i16* %576, i64 1
  %584 = add i64 %579, -1
  %585 = icmp eq i64 %584, 0
  br i1 %585, label %586, label %575, !llvm.loop !118

586:                                              ; preds = %575, %568
  %587 = phi i16* [ %569, %568 ], [ %583, %575 ]
  %588 = phi i64 [ %570, %568 ], [ %582, %575 ]
  %589 = phi i16* [ %571, %568 ], [ %580, %575 ]
  %590 = icmp ult i64 %572, 7
  br i1 %590, label %621, label %591

591:                                              ; preds = %586, %591
  %592 = phi i16* [ %619, %591 ], [ %587, %586 ]
  %593 = phi i64 [ %618, %591 ], [ %588, %586 ]
  %594 = phi i16* [ %616, %591 ], [ %589, %586 ]
  %595 = getelementptr inbounds i16, i16* %594, i64 1
  %596 = load i16, i16* %592, align 2
  store i16 %596, i16* %595, align 2
  %597 = getelementptr inbounds i16, i16* %592, i64 1
  %598 = getelementptr inbounds i16, i16* %594, i64 2
  %599 = load i16, i16* %597, align 2
  store i16 %599, i16* %598, align 2
  %600 = getelementptr inbounds i16, i16* %592, i64 2
  %601 = getelementptr inbounds i16, i16* %594, i64 3
  %602 = load i16, i16* %600, align 2
  store i16 %602, i16* %601, align 2
  %603 = getelementptr inbounds i16, i16* %592, i64 3
  %604 = getelementptr inbounds i16, i16* %594, i64 4
  %605 = load i16, i16* %603, align 2
  store i16 %605, i16* %604, align 2
  %606 = getelementptr inbounds i16, i16* %592, i64 4
  %607 = getelementptr inbounds i16, i16* %594, i64 5
  %608 = load i16, i16* %606, align 2
  store i16 %608, i16* %607, align 2
  %609 = getelementptr inbounds i16, i16* %592, i64 5
  %610 = getelementptr inbounds i16, i16* %594, i64 6
  %611 = load i16, i16* %609, align 2
  store i16 %611, i16* %610, align 2
  %612 = getelementptr inbounds i16, i16* %592, i64 6
  %613 = getelementptr inbounds i16, i16* %594, i64 7
  %614 = load i16, i16* %612, align 2
  store i16 %614, i16* %613, align 2
  %615 = getelementptr inbounds i16, i16* %592, i64 7
  %616 = getelementptr inbounds i16, i16* %594, i64 8
  %617 = load i16, i16* %615, align 2
  store i16 %617, i16* %616, align 2
  %618 = add i64 %593, -8
  %619 = getelementptr inbounds i16, i16* %592, i64 8
  %620 = icmp eq i64 %618, 0
  br i1 %620, label %621, label %591, !llvm.loop !119

621:                                              ; preds = %586, %591, %468, %566, %434, %462
  %622 = phi i64 [ 0, %462 ], [ 0, %434 ], [ %441, %566 ], [ %441, %468 ], [ %441, %591 ], [ %441, %586 ]
  %623 = phi i16* [ %466, %462 ], [ %437, %434 ], [ %469, %566 ], [ %469, %468 ], [ %469, %591 ], [ %469, %586 ]
  %624 = getelementptr inbounds i16, i16* %623, i64 %622
  store i16 0, i16* %624, align 2
  %625 = icmp ne i32 %5, 1
  %626 = icmp eq i32 %5, 3
  %627 = icmp eq i32 %5, 2
  br i1 %625, label %628, label %645

628:                                              ; preds = %621
  call void @_ZN3gfx10RenderText7SetTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.gfx::RenderText"* %228, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12)
  %629 = bitcast %"class.gfx::RenderText"* %228 to <2 x float> (%"class.gfx::RenderText"*)***
  %630 = load <2 x float> (%"class.gfx::RenderText"*)**, <2 x float> (%"class.gfx::RenderText"*)*** %629, align 8
  %631 = getelementptr inbounds <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %630, i64 3
  %632 = load <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %631, align 8
  %633 = call <2 x float> %632(%"class.gfx::RenderText"* %228) #17
  %634 = extractelement <2 x float> %633, i32 0
  %635 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %228, i64 0, i32 13
  %636 = load i8, i8* %635, align 8, !range !2
  %637 = icmp eq i8 %636, 0
  %638 = call float @llvm.ceil.f32(float %634) #17
  %639 = fadd float %638, 1.000000e+00
  %640 = select i1 %637, float %634, float %639
  %641 = fcmp ogt float %640, %4
  br i1 %641, label %642, label %645

642:                                              ; preds = %628
  %643 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %643, i8 0, i64 24, i1 false) #17
  %644 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %1616

645:                                              ; preds = %628, %621
  %646 = bitcast %"class.gfx::StringSlicer"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %646) #17
  %647 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 40
  %648 = bitcast %"class.absl::optional.171"* %647 to i16*
  %649 = bitcast %"class.gfx::StringSlicer"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %649, i8 -86, i64 24, i1 false)
  %650 = load i16, i16* %648, align 4
  call void @_ZN3gfx12StringSlicerC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEES9_bbN4absl8optionalIbEE(%"class.gfx::StringSlicer"* nonnull %13, %"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12, i1 zeroext %626, i1 zeroext %627, i16 %650) #17
  %651 = load i8, i8* %20, align 1
  %652 = icmp slt i8 %651, 0
  %653 = load i64, i64* %23, align 8
  %654 = zext i8 %651 to i64
  %655 = select i1 %652, i64 %653, i64 %654
  %656 = add i64 %655, -1
  %657 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %657)
  store i64 -1, i64* %14, align 8
  %658 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 7
  %659 = load i32, i32* %658, align 4
  %660 = icmp eq i32 %659, 0
  br i1 %660, label %661, label %674

661:                                              ; preds = %645
  %662 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 6
  %663 = load i32, i32* %662, align 8
  switch i32 %663, label %671 [
    i32 0, label %664
    i32 1, label %667
    i32 2, label %672
    i32 3, label %670
    i32 4, label %672
  ]

664:                                              ; preds = %661
  %665 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 3
  %666 = call i32 @_ZN4base4i18n32GetFirstStrongCharacterDirectionERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %665) #17
  br label %672

667:                                              ; preds = %661
  %668 = call zeroext i1 @_ZN4base4i18n5IsRTLEv() #17
  %669 = select i1 %668, i32 1, i32 2
  br label %672

670:                                              ; preds = %661
  br label %672

671:                                              ; preds = %661
  br label %672

672:                                              ; preds = %671, %670, %667, %664, %661, %661
  %673 = phi i32 [ 0, %671 ], [ 1, %670 ], [ %669, %667 ], [ %666, %664 ], [ 2, %661 ], [ 2, %661 ]
  store i32 %673, i32* %658, align 4
  br label %674

674:                                              ; preds = %645, %672
  %675 = phi i32 [ %673, %672 ], [ %659, %645 ]
  %676 = icmp eq %"class.gfx::RenderText"* %228, %1
  %677 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %228, i64 0, i32 22, i32 0
  %678 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 22, i32 0, i32 0, i32 0
  %679 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 22, i32 0, i32 0, i32 1
  %680 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 22, i32 1
  %681 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %228, i64 0, i32 22, i32 1
  %682 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %683 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %684 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %685 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %686 = icmp ne i32 %5, 4
  %687 = and i1 %625, %686
  %688 = icmp eq i32 %5, 4
  %689 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %690 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %689, i64 0, i32 1, i32 1
  %691 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %692 = bitcast %"class.std::__1::basic_string"* %15 to i8**
  %693 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %694 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %693, i64 0, i32 1, i32 1
  %695 = bitcast %"class.std::__1::basic_string"* %12 to i16*
  %696 = bitcast %"class.std::__1::basic_string"* %15 to i16*
  %697 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %228, i64 0, i32 26
  %698 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %697, i64 0, i32 0, i64 0, i32 0
  %699 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 26, i32 0, i64 0, i32 0, i32 0, i32 0
  %700 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 26, i32 0, i64 0, i32 0, i32 0, i32 1
  %701 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 26, i32 0, i64 0, i32 1
  %702 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %228, i64 0, i32 26, i32 0, i64 0, i32 1
  %703 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %228, i64 0, i32 26, i32 0, i64 1, i32 0
  %704 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 26, i32 0, i64 1, i32 0, i32 0, i32 0
  %705 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 26, i32 0, i64 1, i32 0, i32 0, i32 1
  %706 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 26, i32 0, i64 1, i32 1
  %707 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %228, i64 0, i32 26, i32 0, i64 1, i32 1
  %708 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %228, i64 0, i32 26, i32 0, i64 2, i32 0
  %709 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 26, i32 0, i64 2, i32 0, i32 0, i32 0
  %710 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 26, i32 0, i64 2, i32 0, i32 0, i32 1
  %711 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 26, i32 0, i64 2, i32 1
  %712 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %228, i64 0, i32 26, i32 0, i64 2, i32 1
  %713 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %228, i64 0, i32 26, i32 0, i64 3, i32 0
  %714 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 26, i32 0, i64 3, i32 0, i32 0, i32 0
  %715 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 26, i32 0, i64 3, i32 0, i32 0, i32 1
  %716 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 26, i32 0, i64 3, i32 1
  %717 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %228, i64 0, i32 26, i32 0, i64 3, i32 1
  %718 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %697, i64 0, i32 0, i64 0
  %719 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %228, i64 0, i32 26, i32 0, i64 4
  %720 = bitcast i64* %11 to %"class.gfx::Range"*
  %721 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %228, i64 0, i32 3
  %722 = bitcast %"class.std::__1::basic_string"* %721 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %723 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %722, i64 0, i32 1, i32 1
  %724 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %228, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %725 = bitcast i64* %11 to i8*
  %726 = bitcast i64* %11 to i32*
  %727 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %720, i64 0, i32 1
  %728 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %228, i64 0, i32 23
  %729 = bitcast i64* %8 to %"class.gfx::Range"*
  %730 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %228, i64 0, i32 23, i32 0, i32 0, i32 1
  %731 = getelementptr inbounds %"class.gfx::BreakList.91", %"class.gfx::BreakList.91"* %728, i64 0, i32 0, i32 0, i32 0
  %732 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %228, i64 0, i32 23, i32 1
  %733 = bitcast i64* %8 to i8*
  %734 = bitcast i64* %8 to i32*
  %735 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %729, i64 0, i32 1
  %736 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %228, i64 0, i32 24
  %737 = bitcast i64* %7 to %"class.gfx::Range"*
  %738 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %228, i64 0, i32 24, i32 0, i32 0, i32 1
  %739 = getelementptr inbounds %"class.gfx::BreakList.101", %"class.gfx::BreakList.101"* %736, i64 0, i32 0, i32 0, i32 0
  %740 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %228, i64 0, i32 24, i32 1
  %741 = bitcast i64* %7 to i8*
  %742 = bitcast i64* %7 to i32*
  %743 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %737, i64 0, i32 1
  %744 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %228, i64 0, i32 25
  %745 = getelementptr inbounds %"class.gfx::BreakList.111", %"class.gfx::BreakList.111"* %744, i64 0, i32 0
  %746 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 25, i32 0, i32 0, i32 0
  %747 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 25, i32 0, i32 0, i32 1
  %748 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %1, i64 0, i32 25, i32 1
  %749 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %228, i64 0, i32 25, i32 1
  %750 = bitcast i64* %10 to %"class.gfx::Range"*
  %751 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %228, i64 0, i32 25, i32 0, i32 0, i32 1
  %752 = getelementptr inbounds %"class.gfx::BreakList.111", %"class.gfx::BreakList.111"* %744, i64 0, i32 0, i32 0, i32 0
  %753 = bitcast i64* %10 to i8*
  %754 = bitcast i64* %10 to i32*
  %755 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %750, i64 0, i32 1
  %756 = bitcast %"class.gfx::RenderText"* %228 to <2 x float> (%"class.gfx::RenderText"*)***
  %757 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %228, i64 0, i32 13
  %758 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  br label %759

759:                                              ; preds = %1434, %674
  %760 = phi i64 [ 0, %674 ], [ %1425, %1434 ]
  %761 = phi i64 [ %656, %674 ], [ %1426, %1434 ]
  %762 = phi float [ 0.000000e+00, %674 ], [ %1427, %1434 ]
  %763 = phi float [ %244, %674 ], [ %1428, %1434 ]
  %764 = icmp ult i64 %761, %760
  br i1 %764, label %1435, label %765

765:                                              ; preds = %759
  %766 = fcmp une float %763, %762
  br i1 %766, label %769, label %767

767:                                              ; preds = %765
  %768 = load i64, i64* %14, align 8
  br label %790

769:                                              ; preds = %765
  %770 = fsub float %4, %762
  %771 = sub i64 %761, %760
  %772 = uitofp i64 %771 to float
  %773 = fmul float %770, %772
  %774 = fsub float %763, %762
  %775 = fdiv float %773, %774
  %776 = fcmp ult float %775, 0.000000e+00
  %777 = fadd float %775, 5.000000e-01
  %778 = call float @llvm.floor.f32(float %777) #17
  %779 = fadd float %775, -5.000000e-01
  %780 = call float @llvm.ceil.f32(float %779) #17
  %781 = select i1 %776, float %780, float %778
  %782 = fcmp ule float %781, -1.000000e+00
  %783 = fcmp ugt float %781, 0x43EFFFFFE0000000
  %784 = fptoui float %781 to i64
  %785 = select i1 %782, i64 0, i64 %784
  %786 = xor i1 %782, true
  %787 = sext i1 %786 to i64
  %788 = select i1 %783, i64 %787, i64 %785
  %789 = add i64 %788, %760
  store i64 %789, i64* %14, align 8
  br label %790

790:                                              ; preds = %767, %769
  %791 = phi i64 [ %768, %767 ], [ %789, %769 ]
  %792 = icmp ult i64 %791, %760
  %793 = select i1 %792, i64 %760, i64 %791
  %794 = icmp ult i64 %761, %793
  %795 = select i1 %794, i64 %761, i64 %793
  store i64 %795, i64* %14, align 8
  br i1 %676, label %799, label %796

796:                                              ; preds = %790
  %797 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %678, align 8
  %798 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %679, align 8
  call void @_ZNSt3__16vectorINS_4pairImjEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.84"* %677, %"struct.std::__1::pair"* %797, %"struct.std::__1::pair"* %798) #17
  br label %799

799:                                              ; preds = %790, %796
  %800 = load i64, i64* %680, align 8
  store i64 %800, i64* %681, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %682) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %758, i8 -86, i64 24, i1 false)
  call void @_ZNK3gfx12StringSlicer9CutStringEmb(%"class.std::__1::basic_string"* nonnull sret %15, %"class.gfx::StringSlicer"* nonnull %13, i64 %795, i1 zeroext %687) #17
  br i1 %688, label %801, label %1068

801:                                              ; preds = %799
  %802 = call i32 @_ZN4base4i18n31GetLastStrongCharacterDirectionERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %15) #17
  %803 = icmp eq i32 %802, %675
  br i1 %803, label %827, label %804

804:                                              ; preds = %801
  %805 = load i8, i8* %690, align 1
  %806 = icmp slt i8 %805, 0
  %807 = load i64, i64* %684, align 8
  %808 = zext i8 %805 to i64
  %809 = select i1 %806, i64 %807, i64 %808
  %810 = add i64 %809, 2
  %811 = load i8, i8* %20, align 1
  %812 = icmp slt i8 %811, 0
  %813 = load i64, i64* %23, align 8
  %814 = zext i8 %811 to i64
  %815 = select i1 %812, i64 %813, i64 %814
  %816 = icmp ugt i64 %810, %815
  %817 = icmp ne i64 %795, 0
  %818 = and i1 %817, %816
  br i1 %818, label %819, label %827

819:                                              ; preds = %804
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %691) #17
  %820 = add i64 %795, -1
  call void @_ZNK3gfx12StringSlicer9CutStringEmb(%"class.std::__1::basic_string"* nonnull sret %16, %"class.gfx::StringSlicer"* nonnull %13, i64 %820, i1 zeroext false) #17
  %821 = load i8, i8* %690, align 1
  %822 = icmp slt i8 %821, 0
  br i1 %822, label %823, label %825

823:                                              ; preds = %819
  %824 = load i8*, i8** %692, align 8
  call void @_ZdlPv(i8* %824) #18
  br label %825

825:                                              ; preds = %823, %819
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %682, i8* nonnull align 8 %691, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %691) #17
  %826 = call i32 @_ZN4base4i18n31GetLastStrongCharacterDirectionERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %15) #17
  br label %827

827:                                              ; preds = %801, %825, %804
  %828 = phi i32 [ %826, %825 ], [ %802, %804 ], [ %675, %801 ]
  %829 = load i8, i8* %694, align 1
  %830 = icmp slt i8 %829, 0
  %831 = load i16*, i16** %428, align 8
  %832 = load i64, i64* %429, align 8
  %833 = zext i8 %829 to i64
  %834 = select i1 %830, i16* %831, i16* %695
  %835 = select i1 %830, i64 %832, i64 %833
  %836 = load i8, i8* %690, align 1
  %837 = icmp slt i8 %836, 0
  br i1 %837, label %838, label %843

838:                                              ; preds = %827
  %839 = load i64, i64* %685, align 8
  %840 = and i64 %839, 9223372036854775807
  %841 = add nsw i64 %840, -1
  %842 = load i64, i64* %684, align 8
  br label %845

843:                                              ; preds = %827
  %844 = zext i8 %836 to i64
  br label %845

845:                                              ; preds = %843, %838
  %846 = phi i64 [ %841, %838 ], [ 10, %843 ]
  %847 = phi i64 [ %842, %838 ], [ %844, %843 ]
  %848 = sub i64 %846, %847
  %849 = icmp ult i64 %848, %835
  br i1 %849, label %1008, label %850

850:                                              ; preds = %845
  %851 = icmp eq i64 %835, 0
  br i1 %851, label %1011, label %852

852:                                              ; preds = %850
  %853 = load i16*, i16** %683, align 8
  %854 = select i1 %837, i16* %853, i16* %696
  %855 = getelementptr inbounds i16, i16* %854, i64 %847
  %856 = icmp ult i64 %835, 16
  br i1 %856, label %946, label %857

857:                                              ; preds = %852
  %858 = add i64 %835, %847
  %859 = getelementptr i16, i16* %854, i64 %858
  %860 = getelementptr i16, i16* %834, i64 %835
  %861 = icmp ult i16* %855, %860
  %862 = icmp ult i16* %834, %859
  %863 = and i1 %861, %862
  br i1 %863, label %946, label %864

864:                                              ; preds = %857
  %865 = and i64 %835, -16
  %866 = sub i64 %835, %865
  %867 = getelementptr i16, i16* %834, i64 %865
  %868 = getelementptr i16, i16* %855, i64 %865
  %869 = add i64 %865, -16
  %870 = lshr exact i64 %869, 4
  %871 = add nuw nsw i64 %870, 1
  %872 = and i64 %871, 3
  %873 = icmp ult i64 %869, 48
  br i1 %873, label %925, label %874

874:                                              ; preds = %864
  %875 = sub nsw i64 %871, %872
  br label %876

876:                                              ; preds = %876, %874
  %877 = phi i64 [ 0, %874 ], [ %922, %876 ]
  %878 = phi i64 [ %875, %874 ], [ %923, %876 ]
  %879 = getelementptr i16, i16* %834, i64 %877
  %880 = getelementptr i16, i16* %855, i64 %877
  %881 = bitcast i16* %879 to <8 x i16>*
  %882 = load <8 x i16>, <8 x i16>* %881, align 2, !alias.scope !120
  %883 = getelementptr i16, i16* %879, i64 8
  %884 = bitcast i16* %883 to <8 x i16>*
  %885 = load <8 x i16>, <8 x i16>* %884, align 2, !alias.scope !120
  %886 = bitcast i16* %880 to <8 x i16>*
  store <8 x i16> %882, <8 x i16>* %886, align 2, !alias.scope !123, !noalias !120
  %887 = getelementptr i16, i16* %880, i64 8
  %888 = bitcast i16* %887 to <8 x i16>*
  store <8 x i16> %885, <8 x i16>* %888, align 2, !alias.scope !123, !noalias !120
  %889 = or i64 %877, 16
  %890 = getelementptr i16, i16* %834, i64 %889
  %891 = getelementptr i16, i16* %855, i64 %889
  %892 = bitcast i16* %890 to <8 x i16>*
  %893 = load <8 x i16>, <8 x i16>* %892, align 2, !alias.scope !120
  %894 = getelementptr i16, i16* %890, i64 8
  %895 = bitcast i16* %894 to <8 x i16>*
  %896 = load <8 x i16>, <8 x i16>* %895, align 2, !alias.scope !120
  %897 = bitcast i16* %891 to <8 x i16>*
  store <8 x i16> %893, <8 x i16>* %897, align 2, !alias.scope !123, !noalias !120
  %898 = getelementptr i16, i16* %891, i64 8
  %899 = bitcast i16* %898 to <8 x i16>*
  store <8 x i16> %896, <8 x i16>* %899, align 2, !alias.scope !123, !noalias !120
  %900 = or i64 %877, 32
  %901 = getelementptr i16, i16* %834, i64 %900
  %902 = getelementptr i16, i16* %855, i64 %900
  %903 = bitcast i16* %901 to <8 x i16>*
  %904 = load <8 x i16>, <8 x i16>* %903, align 2, !alias.scope !120
  %905 = getelementptr i16, i16* %901, i64 8
  %906 = bitcast i16* %905 to <8 x i16>*
  %907 = load <8 x i16>, <8 x i16>* %906, align 2, !alias.scope !120
  %908 = bitcast i16* %902 to <8 x i16>*
  store <8 x i16> %904, <8 x i16>* %908, align 2, !alias.scope !123, !noalias !120
  %909 = getelementptr i16, i16* %902, i64 8
  %910 = bitcast i16* %909 to <8 x i16>*
  store <8 x i16> %907, <8 x i16>* %910, align 2, !alias.scope !123, !noalias !120
  %911 = or i64 %877, 48
  %912 = getelementptr i16, i16* %834, i64 %911
  %913 = getelementptr i16, i16* %855, i64 %911
  %914 = bitcast i16* %912 to <8 x i16>*
  %915 = load <8 x i16>, <8 x i16>* %914, align 2, !alias.scope !120
  %916 = getelementptr i16, i16* %912, i64 8
  %917 = bitcast i16* %916 to <8 x i16>*
  %918 = load <8 x i16>, <8 x i16>* %917, align 2, !alias.scope !120
  %919 = bitcast i16* %913 to <8 x i16>*
  store <8 x i16> %915, <8 x i16>* %919, align 2, !alias.scope !123, !noalias !120
  %920 = getelementptr i16, i16* %913, i64 8
  %921 = bitcast i16* %920 to <8 x i16>*
  store <8 x i16> %918, <8 x i16>* %921, align 2, !alias.scope !123, !noalias !120
  %922 = add i64 %877, 64
  %923 = add i64 %878, -4
  %924 = icmp eq i64 %923, 0
  br i1 %924, label %925, label %876, !llvm.loop !125

925:                                              ; preds = %876, %864
  %926 = phi i64 [ 0, %864 ], [ %922, %876 ]
  %927 = icmp eq i64 %872, 0
  br i1 %927, label %944, label %928

928:                                              ; preds = %925, %928
  %929 = phi i64 [ %941, %928 ], [ %926, %925 ]
  %930 = phi i64 [ %942, %928 ], [ %872, %925 ]
  %931 = getelementptr i16, i16* %834, i64 %929
  %932 = getelementptr i16, i16* %855, i64 %929
  %933 = bitcast i16* %931 to <8 x i16>*
  %934 = load <8 x i16>, <8 x i16>* %933, align 2, !alias.scope !120
  %935 = getelementptr i16, i16* %931, i64 8
  %936 = bitcast i16* %935 to <8 x i16>*
  %937 = load <8 x i16>, <8 x i16>* %936, align 2, !alias.scope !120
  %938 = bitcast i16* %932 to <8 x i16>*
  store <8 x i16> %934, <8 x i16>* %938, align 2, !alias.scope !123, !noalias !120
  %939 = getelementptr i16, i16* %932, i64 8
  %940 = bitcast i16* %939 to <8 x i16>*
  store <8 x i16> %937, <8 x i16>* %940, align 2, !alias.scope !123, !noalias !120
  %941 = add i64 %929, 16
  %942 = add i64 %930, -1
  %943 = icmp eq i64 %942, 0
  br i1 %943, label %944, label %928, !llvm.loop !126

944:                                              ; preds = %928, %925
  %945 = icmp eq i64 %835, %865
  br i1 %945, label %999, label %946

946:                                              ; preds = %944, %857, %852
  %947 = phi i64 [ %835, %857 ], [ %835, %852 ], [ %866, %944 ]
  %948 = phi i16* [ %834, %857 ], [ %834, %852 ], [ %867, %944 ]
  %949 = phi i16* [ %855, %857 ], [ %855, %852 ], [ %868, %944 ]
  %950 = add i64 %947, -1
  %951 = and i64 %947, 7
  %952 = icmp eq i64 %951, 0
  br i1 %952, label %964, label %953

953:                                              ; preds = %946, %953
  %954 = phi i64 [ %959, %953 ], [ %947, %946 ]
  %955 = phi i16* [ %961, %953 ], [ %948, %946 ]
  %956 = phi i16* [ %960, %953 ], [ %949, %946 ]
  %957 = phi i64 [ %962, %953 ], [ %951, %946 ]
  %958 = load i16, i16* %955, align 2
  store i16 %958, i16* %956, align 2
  %959 = add i64 %954, -1
  %960 = getelementptr inbounds i16, i16* %956, i64 1
  %961 = getelementptr inbounds i16, i16* %955, i64 1
  %962 = add i64 %957, -1
  %963 = icmp eq i64 %962, 0
  br i1 %963, label %964, label %953, !llvm.loop !127

964:                                              ; preds = %953, %946
  %965 = phi i64 [ %947, %946 ], [ %959, %953 ]
  %966 = phi i16* [ %948, %946 ], [ %961, %953 ]
  %967 = phi i16* [ %949, %946 ], [ %960, %953 ]
  %968 = icmp ult i64 %950, 7
  br i1 %968, label %999, label %969

969:                                              ; preds = %964, %969
  %970 = phi i64 [ %995, %969 ], [ %965, %964 ]
  %971 = phi i16* [ %997, %969 ], [ %966, %964 ]
  %972 = phi i16* [ %996, %969 ], [ %967, %964 ]
  %973 = load i16, i16* %971, align 2
  store i16 %973, i16* %972, align 2
  %974 = getelementptr inbounds i16, i16* %972, i64 1
  %975 = getelementptr inbounds i16, i16* %971, i64 1
  %976 = load i16, i16* %975, align 2
  store i16 %976, i16* %974, align 2
  %977 = getelementptr inbounds i16, i16* %972, i64 2
  %978 = getelementptr inbounds i16, i16* %971, i64 2
  %979 = load i16, i16* %978, align 2
  store i16 %979, i16* %977, align 2
  %980 = getelementptr inbounds i16, i16* %972, i64 3
  %981 = getelementptr inbounds i16, i16* %971, i64 3
  %982 = load i16, i16* %981, align 2
  store i16 %982, i16* %980, align 2
  %983 = getelementptr inbounds i16, i16* %972, i64 4
  %984 = getelementptr inbounds i16, i16* %971, i64 4
  %985 = load i16, i16* %984, align 2
  store i16 %985, i16* %983, align 2
  %986 = getelementptr inbounds i16, i16* %972, i64 5
  %987 = getelementptr inbounds i16, i16* %971, i64 5
  %988 = load i16, i16* %987, align 2
  store i16 %988, i16* %986, align 2
  %989 = getelementptr inbounds i16, i16* %972, i64 6
  %990 = getelementptr inbounds i16, i16* %971, i64 6
  %991 = load i16, i16* %990, align 2
  store i16 %991, i16* %989, align 2
  %992 = getelementptr inbounds i16, i16* %972, i64 7
  %993 = getelementptr inbounds i16, i16* %971, i64 7
  %994 = load i16, i16* %993, align 2
  store i16 %994, i16* %992, align 2
  %995 = add i64 %970, -8
  %996 = getelementptr inbounds i16, i16* %972, i64 8
  %997 = getelementptr inbounds i16, i16* %971, i64 8
  %998 = icmp eq i64 %995, 0
  br i1 %998, label %999, label %969, !llvm.loop !128

999:                                              ; preds = %964, %969, %944
  %1000 = add i64 %847, %835
  %1001 = load i8, i8* %690, align 1
  %1002 = icmp slt i8 %1001, 0
  br i1 %1002, label %1003, label %1004

1003:                                             ; preds = %999
  store i64 %1000, i64* %684, align 8
  br label %1006

1004:                                             ; preds = %999
  %1005 = trunc i64 %1000 to i8
  store i8 %1005, i8* %690, align 1
  br label %1006

1006:                                             ; preds = %1004, %1003
  %1007 = getelementptr inbounds i16, i16* %854, i64 %1000
  store i16 0, i16* %1007, align 2
  br label %1011

1008:                                             ; preds = %845
  %1009 = add i64 %847, %835
  %1010 = sub i64 %1009, %846
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* nonnull %15, i64 %846, i64 %1010, i64 %847, i64 %847, i64 0, i64 %835, i16* %834) #17
  br label %1011

1011:                                             ; preds = %850, %1006, %1008
  %1012 = load i8, i8* %690, align 1
  %1013 = icmp slt i8 %1012, 0
  %1014 = load i64, i64* %684, align 8
  %1015 = zext i8 %1012 to i64
  %1016 = select i1 %1013, i64 %1014, i64 %1015
  %1017 = icmp eq i64 %1016, 1
  %1018 = icmp eq i32 %828, %675
  %1019 = or i1 %1018, %1017
  br i1 %1019, label %1068, label %1020

1020:                                             ; preds = %1011
  %1021 = icmp eq i32 %828, 2
  br i1 %1021, label %1022, label %1045

1022:                                             ; preds = %1020
  br i1 %1013, label %1023, label %1027

1023:                                             ; preds = %1022
  %1024 = load i64, i64* %685, align 8
  %1025 = and i64 %1024, 9223372036854775807
  %1026 = add nsw i64 %1025, -1
  br label %1027

1027:                                             ; preds = %1022, %1023
  %1028 = phi i64 [ %1026, %1023 ], [ 10, %1022 ]
  %1029 = phi i64 [ %1014, %1023 ], [ %1015, %1022 ]
  %1030 = icmp eq i64 %1029, %1028
  br i1 %1030, label %1031, label %1034

1031:                                             ; preds = %1027
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* nonnull %15, i64 %1028, i64 1, i64 %1028, i64 %1028, i64 0, i64 0) #17
  %1032 = load i8, i8* %690, align 1
  %1033 = icmp slt i8 %1032, 0
  br i1 %1033, label %1038, label %1035

1034:                                             ; preds = %1027
  br i1 %1013, label %1038, label %1035

1035:                                             ; preds = %1034, %1031
  %1036 = trunc i64 %1029 to i8
  %1037 = add i8 %1036, 1
  store i8 %1037, i8* %690, align 1
  br label %1041

1038:                                             ; preds = %1034, %1031
  %1039 = load i16*, i16** %683, align 8
  %1040 = add i64 %1029, 1
  store i64 %1040, i64* %684, align 8
  br label %1041

1041:                                             ; preds = %1035, %1038
  %1042 = phi i16* [ %696, %1035 ], [ %1039, %1038 ]
  %1043 = getelementptr inbounds i16, i16* %1042, i64 %1029
  store i16 8206, i16* %1043, align 2
  %1044 = getelementptr inbounds i16, i16* %1043, i64 1
  store i16 0, i16* %1044, align 2
  br label %1068

1045:                                             ; preds = %1020
  br i1 %1013, label %1046, label %1050

1046:                                             ; preds = %1045
  %1047 = load i64, i64* %685, align 8
  %1048 = and i64 %1047, 9223372036854775807
  %1049 = add nsw i64 %1048, -1
  br label %1050

1050:                                             ; preds = %1045, %1046
  %1051 = phi i64 [ %1049, %1046 ], [ 10, %1045 ]
  %1052 = phi i64 [ %1014, %1046 ], [ %1015, %1045 ]
  %1053 = icmp eq i64 %1052, %1051
  br i1 %1053, label %1054, label %1057

1054:                                             ; preds = %1050
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* nonnull %15, i64 %1051, i64 1, i64 %1051, i64 %1051, i64 0, i64 0) #17
  %1055 = load i8, i8* %690, align 1
  %1056 = icmp slt i8 %1055, 0
  br i1 %1056, label %1061, label %1058

1057:                                             ; preds = %1050
  br i1 %1013, label %1061, label %1058

1058:                                             ; preds = %1057, %1054
  %1059 = trunc i64 %1052 to i8
  %1060 = add i8 %1059, 1
  store i8 %1060, i8* %690, align 1
  br label %1064

1061:                                             ; preds = %1057, %1054
  %1062 = load i16*, i16** %683, align 8
  %1063 = add i64 %1052, 1
  store i64 %1063, i64* %684, align 8
  br label %1064

1064:                                             ; preds = %1058, %1061
  %1065 = phi i16* [ %696, %1058 ], [ %1062, %1061 ]
  %1066 = getelementptr inbounds i16, i16* %1065, i64 %1052
  store i16 8207, i16* %1066, align 2
  %1067 = getelementptr inbounds i16, i16* %1066, i64 1
  store i16 0, i16* %1067, align 2
  br label %1068

1068:                                             ; preds = %1064, %1041, %1011, %799
  call void @_ZN3gfx10RenderText7SetTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.gfx::RenderText"* %228, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %15)
  br i1 %676, label %1069, label %1073

1069:                                             ; preds = %1068
  %1070 = load i64, i64* %701, align 8
  store i64 %1070, i64* %702, align 8
  %1071 = load i64, i64* %706, align 8
  store i64 %1071, i64* %707, align 8
  %1072 = load i64, i64* %711, align 8
  store i64 %1072, i64* %712, align 8
  br label %1085

1073:                                             ; preds = %1068
  %1074 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %699, align 8
  %1075 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %700, align 8
  call void @_ZNSt3__16vectorINS_4pairImbEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.122"* %698, %"struct.std::__1::pair.124"* %1074, %"struct.std::__1::pair.124"* %1075) #17
  %1076 = load i64, i64* %701, align 8
  store i64 %1076, i64* %702, align 8
  %1077 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %704, align 8
  %1078 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %705, align 8
  call void @_ZNSt3__16vectorINS_4pairImbEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.122"* %703, %"struct.std::__1::pair.124"* %1077, %"struct.std::__1::pair.124"* %1078) #17
  %1079 = load i64, i64* %706, align 8
  store i64 %1079, i64* %707, align 8
  %1080 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %709, align 8
  %1081 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %710, align 8
  call void @_ZNSt3__16vectorINS_4pairImbEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.122"* %708, %"struct.std::__1::pair.124"* %1080, %"struct.std::__1::pair.124"* %1081) #17
  %1082 = load i64, i64* %711, align 8
  store i64 %1082, i64* %712, align 8
  %1083 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %714, align 8
  %1084 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %715, align 8
  call void @_ZNSt3__16vectorINS_4pairImbEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.122"* %713, %"struct.std::__1::pair.124"* %1083, %"struct.std::__1::pair.124"* %1084) #17
  br label %1085

1085:                                             ; preds = %1069, %1073
  %1086 = load i64, i64* %716, align 8
  store i64 %1086, i64* %717, align 8
  br label %1331

1087:                                             ; preds = %1411
  %1088 = load i8, i8* %723, align 1
  %1089 = icmp slt i8 %1088, 0
  br i1 %1089, label %1090, label %1092

1090:                                             ; preds = %1087
  %1091 = load i64, i64* %724, align 8
  br label %1094

1092:                                             ; preds = %1087
  %1093 = zext i8 %1088 to i64
  br label %1094

1094:                                             ; preds = %1092, %1090
  %1095 = phi i64 [ %1091, %1090 ], [ %1093, %1092 ]
  %1096 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %730, align 8
  %1097 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %731, align 8
  br label %1098

1098:                                             ; preds = %1102, %1094
  %1099 = phi %"struct.std::__1::pair.94"* [ %1096, %1094 ], [ %1100, %1102 ]
  %1100 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %1099, i64 -1
  %1101 = icmp eq %"struct.std::__1::pair.94"* %1100, %1097
  br i1 %1101, label %1109, label %1102

1102:                                             ; preds = %1098
  %1103 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %1100, i64 0, i32 0
  %1104 = load i64, i64* %1103, align 8
  %1105 = icmp ugt i64 %1104, %1095
  br i1 %1105, label %1098, label %1106

1106:                                             ; preds = %1102
  %1107 = icmp ult i64 %1104, %1095
  %1108 = zext i1 %1107 to i64
  br label %1109

1109:                                             ; preds = %1098, %1106
  %1110 = phi %"struct.std::__1::pair.94"* [ %1100, %1106 ], [ %1097, %1098 ]
  %1111 = phi i64 [ %1108, %1106 ], [ 1, %1098 ]
  %1112 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %1110, i64 %1111
  %1113 = icmp eq %"struct.std::__1::pair.94"* %1112, %1096
  br i1 %1113, label %1115, label %1114

1114:                                             ; preds = %1109
  store %"struct.std::__1::pair.94"* %1112, %"struct.std::__1::pair.94"** %730, align 8
  br label %1115

1115:                                             ; preds = %1114, %1109
  %1116 = phi %"struct.std::__1::pair.94"* [ %1096, %1109 ], [ %1112, %1114 ]
  store i64 %1095, i64* %732, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %733) #17
  store i32 0, i32* %734, align 8
  store i32 0, i32* %735, align 4
  %1117 = icmp eq i64 %1095, 0
  br i1 %1117, label %1164, label %1118

1118:                                             ; preds = %1115, %1159
  %1119 = phi %"struct.std::__1::pair.94"* [ %1161, %1159 ], [ %1097, %1115 ]
  %1120 = phi %"struct.std::__1::pair.94"* [ %1160, %1159 ], [ %1116, %1115 ]
  %1121 = phi i64 [ %1157, %1159 ], [ %1095, %1115 ]
  %1122 = phi i64 [ %1156, %1159 ], [ 0, %1115 ]
  br label %1123

1123:                                             ; preds = %1130, %1118
  %1124 = phi %"struct.std::__1::pair.94"* [ %1120, %1118 ], [ %1125, %1130 ]
  %1125 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %1124, i64 -1
  %1126 = icmp eq %"struct.std::__1::pair.94"* %1125, %1119
  br i1 %1126, label %1127, label %1130

1127:                                             ; preds = %1123
  %1128 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %1119, i64 0, i32 0
  %1129 = load i64, i64* %1128, align 8
  br label %1134

1130:                                             ; preds = %1123
  %1131 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %1125, i64 0, i32 0
  %1132 = load i64, i64* %1131, align 8
  %1133 = icmp ugt i64 %1132, %1122
  br i1 %1133, label %1123, label %1134

1134:                                             ; preds = %1130, %1127
  %1135 = phi i64 [ %1129, %1127 ], [ %1132, %1130 ]
  %1136 = icmp eq %"struct.std::__1::pair.94"* %1124, %1120
  %1137 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %1124, i64 0, i32 0
  %1138 = select i1 %1136, i64* %732, i64* %1137
  %1139 = load i64, i64* %1138, align 8
  %1140 = shl i64 %1139, 32
  %1141 = and i64 %1135, 4294967295
  %1142 = or i64 %1140, %1141
  store i64 %1142, i64* %8, align 8
  %1143 = and i64 %1139, 4294967295
  %1144 = icmp ugt i64 %1121, %1143
  br i1 %1144, label %1145, label %1154

1145:                                             ; preds = %1134
  %1146 = call zeroext i1 @_ZNK3gfx10RenderText18IsValidCursorIndexEm(%"class.gfx::RenderText"* %228, i64 %1143) #17
  br i1 %1146, label %1154, label %1147

1147:                                             ; preds = %1145
  %1148 = load i32, i32* %735, align 4
  %1149 = zext i32 %1148 to i64
  %1150 = call i64 @_ZNK3gfx10RenderText23IndexOfAdjacentGraphemeEmNS_22LogicalCursorDirectionE(%"class.gfx::RenderText"* %228, i64 %1149, i32 1) #17
  %1151 = trunc i64 %1150 to i32
  store i32 %1151, i32* %735, align 4
  %1152 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %1124, i64 -1, i32 1
  %1153 = load i32, i32* %1152, align 8
  call void @_ZN3gfx9BreakListINS_13BaselineStyleEE10ApplyValueES1_RKNS_5RangeE(%"class.gfx::BreakList.91"* %728, i32 %1153, %"class.gfx::Range"* nonnull dereferenceable(8) %729) #17
  br label %1154

1154:                                             ; preds = %1147, %1145, %1134
  %1155 = load i32, i32* %735, align 4
  %1156 = zext i32 %1155 to i64
  %1157 = load i64, i64* %732, align 8
  %1158 = icmp ugt i64 %1157, %1156
  br i1 %1158, label %1159, label %1162

1159:                                             ; preds = %1154
  %1160 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %730, align 8
  %1161 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %731, align 8
  br label %1118

1162:                                             ; preds = %1154
  %1163 = load i8, i8* %723, align 1
  br label %1164

1164:                                             ; preds = %1162, %1115
  %1165 = phi i8 [ %1163, %1162 ], [ %1088, %1115 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %733) #17
  %1166 = icmp slt i8 %1165, 0
  br i1 %1166, label %1167, label %1169

1167:                                             ; preds = %1164
  %1168 = load i64, i64* %724, align 8
  br label %1171

1169:                                             ; preds = %1164
  %1170 = zext i8 %1165 to i64
  br label %1171

1171:                                             ; preds = %1169, %1167
  %1172 = phi i64 [ %1168, %1167 ], [ %1170, %1169 ]
  %1173 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %738, align 8
  %1174 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %739, align 8
  br label %1175

1175:                                             ; preds = %1179, %1171
  %1176 = phi %"struct.std::__1::pair.104"* [ %1173, %1171 ], [ %1177, %1179 ]
  %1177 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %1176, i64 -1
  %1178 = icmp eq %"struct.std::__1::pair.104"* %1177, %1174
  br i1 %1178, label %1186, label %1179

1179:                                             ; preds = %1175
  %1180 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %1177, i64 0, i32 0
  %1181 = load i64, i64* %1180, align 8
  %1182 = icmp ugt i64 %1181, %1172
  br i1 %1182, label %1175, label %1183

1183:                                             ; preds = %1179
  %1184 = icmp ult i64 %1181, %1172
  %1185 = zext i1 %1184 to i64
  br label %1186

1186:                                             ; preds = %1175, %1183
  %1187 = phi %"struct.std::__1::pair.104"* [ %1177, %1183 ], [ %1174, %1175 ]
  %1188 = phi i64 [ %1185, %1183 ], [ 1, %1175 ]
  %1189 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %1187, i64 %1188
  %1190 = icmp eq %"struct.std::__1::pair.104"* %1189, %1173
  br i1 %1190, label %1192, label %1191

1191:                                             ; preds = %1186
  store %"struct.std::__1::pair.104"* %1189, %"struct.std::__1::pair.104"** %738, align 8
  br label %1192

1192:                                             ; preds = %1191, %1186
  %1193 = phi %"struct.std::__1::pair.104"* [ %1173, %1186 ], [ %1189, %1191 ]
  store i64 %1172, i64* %740, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %741) #17
  store i32 0, i32* %742, align 8
  store i32 0, i32* %743, align 4
  %1194 = icmp eq i64 %1172, 0
  br i1 %1194, label %1239, label %1195

1195:                                             ; preds = %1192, %1236
  %1196 = phi %"struct.std::__1::pair.104"* [ %1238, %1236 ], [ %1174, %1192 ]
  %1197 = phi %"struct.std::__1::pair.104"* [ %1237, %1236 ], [ %1193, %1192 ]
  %1198 = phi i64 [ %1234, %1236 ], [ %1172, %1192 ]
  %1199 = phi i64 [ %1233, %1236 ], [ 0, %1192 ]
  br label %1200

1200:                                             ; preds = %1207, %1195
  %1201 = phi %"struct.std::__1::pair.104"* [ %1197, %1195 ], [ %1202, %1207 ]
  %1202 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %1201, i64 -1
  %1203 = icmp eq %"struct.std::__1::pair.104"* %1202, %1196
  br i1 %1203, label %1204, label %1207

1204:                                             ; preds = %1200
  %1205 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %1196, i64 0, i32 0
  %1206 = load i64, i64* %1205, align 8
  br label %1211

1207:                                             ; preds = %1200
  %1208 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %1202, i64 0, i32 0
  %1209 = load i64, i64* %1208, align 8
  %1210 = icmp ugt i64 %1209, %1199
  br i1 %1210, label %1200, label %1211

1211:                                             ; preds = %1207, %1204
  %1212 = phi i64 [ %1206, %1204 ], [ %1209, %1207 ]
  %1213 = icmp eq %"struct.std::__1::pair.104"* %1201, %1197
  %1214 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %1201, i64 0, i32 0
  %1215 = select i1 %1213, i64* %740, i64* %1214
  %1216 = load i64, i64* %1215, align 8
  %1217 = shl i64 %1216, 32
  %1218 = and i64 %1212, 4294967295
  %1219 = or i64 %1217, %1218
  store i64 %1219, i64* %7, align 8
  %1220 = and i64 %1216, 4294967295
  %1221 = icmp ugt i64 %1198, %1220
  br i1 %1221, label %1222, label %1231

1222:                                             ; preds = %1211
  %1223 = call zeroext i1 @_ZNK3gfx10RenderText18IsValidCursorIndexEm(%"class.gfx::RenderText"* %228, i64 %1220) #17
  br i1 %1223, label %1231, label %1224

1224:                                             ; preds = %1222
  %1225 = load i32, i32* %743, align 4
  %1226 = zext i32 %1225 to i64
  %1227 = call i64 @_ZNK3gfx10RenderText23IndexOfAdjacentGraphemeEmNS_22LogicalCursorDirectionE(%"class.gfx::RenderText"* %228, i64 %1226, i32 1) #17
  %1228 = trunc i64 %1227 to i32
  store i32 %1228, i32* %743, align 4
  %1229 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %1201, i64 -1, i32 1
  %1230 = load i32, i32* %1229, align 8
  call void @_ZN3gfx9BreakListIiE10ApplyValueEiRKNS_5RangeE(%"class.gfx::BreakList.101"* %736, i32 %1230, %"class.gfx::Range"* nonnull dereferenceable(8) %737) #17
  br label %1231

1231:                                             ; preds = %1224, %1222, %1211
  %1232 = load i32, i32* %743, align 4
  %1233 = zext i32 %1232 to i64
  %1234 = load i64, i64* %740, align 8
  %1235 = icmp ugt i64 %1234, %1233
  br i1 %1235, label %1236, label %1239

1236:                                             ; preds = %1231
  %1237 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %738, align 8
  %1238 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %739, align 8
  br label %1195

1239:                                             ; preds = %1231, %1192
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %741) #17
  br i1 %676, label %1243, label %1240

1240:                                             ; preds = %1239
  %1241 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %746, align 8
  %1242 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %747, align 8
  call void @_ZNSt3__16vectorINS_4pairImN3gfx4Font6WeightEEENS_9allocatorIS5_EEE6assignIPS5_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.112"* %745, %"struct.std::__1::pair.114"* %1241, %"struct.std::__1::pair.114"* %1242) #17
  br label %1243

1243:                                             ; preds = %1239, %1240
  %1244 = load i64, i64* %748, align 8
  store i64 %1244, i64* %749, align 8
  %1245 = load i8, i8* %723, align 1
  %1246 = icmp slt i8 %1245, 0
  br i1 %1246, label %1247, label %1249

1247:                                             ; preds = %1243
  %1248 = load i64, i64* %724, align 8
  br label %1251

1249:                                             ; preds = %1243
  %1250 = zext i8 %1245 to i64
  br label %1251

1251:                                             ; preds = %1249, %1247
  %1252 = phi i64 [ %1248, %1247 ], [ %1250, %1249 ]
  %1253 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %751, align 8
  %1254 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %752, align 8
  br label %1255

1255:                                             ; preds = %1259, %1251
  %1256 = phi %"struct.std::__1::pair.114"* [ %1253, %1251 ], [ %1257, %1259 ]
  %1257 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %1256, i64 -1
  %1258 = icmp eq %"struct.std::__1::pair.114"* %1257, %1254
  br i1 %1258, label %1266, label %1259

1259:                                             ; preds = %1255
  %1260 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %1257, i64 0, i32 0
  %1261 = load i64, i64* %1260, align 8
  %1262 = icmp ugt i64 %1261, %1252
  br i1 %1262, label %1255, label %1263

1263:                                             ; preds = %1259
  %1264 = icmp ult i64 %1261, %1252
  %1265 = zext i1 %1264 to i64
  br label %1266

1266:                                             ; preds = %1255, %1263
  %1267 = phi %"struct.std::__1::pair.114"* [ %1257, %1263 ], [ %1254, %1255 ]
  %1268 = phi i64 [ %1265, %1263 ], [ 1, %1255 ]
  %1269 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %1267, i64 %1268
  %1270 = icmp eq %"struct.std::__1::pair.114"* %1269, %1253
  br i1 %1270, label %1272, label %1271

1271:                                             ; preds = %1266
  store %"struct.std::__1::pair.114"* %1269, %"struct.std::__1::pair.114"** %751, align 8
  br label %1272

1272:                                             ; preds = %1271, %1266
  %1273 = phi %"struct.std::__1::pair.114"* [ %1253, %1266 ], [ %1269, %1271 ]
  store i64 %1252, i64* %749, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %753) #17
  store i32 0, i32* %754, align 8
  store i32 0, i32* %755, align 4
  %1274 = icmp eq i64 %1252, 0
  br i1 %1274, label %1319, label %1275

1275:                                             ; preds = %1272, %1316
  %1276 = phi %"struct.std::__1::pair.114"* [ %1318, %1316 ], [ %1254, %1272 ]
  %1277 = phi %"struct.std::__1::pair.114"* [ %1317, %1316 ], [ %1273, %1272 ]
  %1278 = phi i64 [ %1314, %1316 ], [ %1252, %1272 ]
  %1279 = phi i64 [ %1313, %1316 ], [ 0, %1272 ]
  br label %1280

1280:                                             ; preds = %1287, %1275
  %1281 = phi %"struct.std::__1::pair.114"* [ %1277, %1275 ], [ %1282, %1287 ]
  %1282 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %1281, i64 -1
  %1283 = icmp eq %"struct.std::__1::pair.114"* %1282, %1276
  br i1 %1283, label %1284, label %1287

1284:                                             ; preds = %1280
  %1285 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %1276, i64 0, i32 0
  %1286 = load i64, i64* %1285, align 8
  br label %1291

1287:                                             ; preds = %1280
  %1288 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %1282, i64 0, i32 0
  %1289 = load i64, i64* %1288, align 8
  %1290 = icmp ugt i64 %1289, %1279
  br i1 %1290, label %1280, label %1291

1291:                                             ; preds = %1287, %1284
  %1292 = phi i64 [ %1286, %1284 ], [ %1289, %1287 ]
  %1293 = icmp eq %"struct.std::__1::pair.114"* %1281, %1277
  %1294 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %1281, i64 0, i32 0
  %1295 = select i1 %1293, i64* %749, i64* %1294
  %1296 = load i64, i64* %1295, align 8
  %1297 = shl i64 %1296, 32
  %1298 = and i64 %1292, 4294967295
  %1299 = or i64 %1297, %1298
  store i64 %1299, i64* %10, align 8
  %1300 = and i64 %1296, 4294967295
  %1301 = icmp ugt i64 %1278, %1300
  br i1 %1301, label %1302, label %1311

1302:                                             ; preds = %1291
  %1303 = call zeroext i1 @_ZNK3gfx10RenderText18IsValidCursorIndexEm(%"class.gfx::RenderText"* %228, i64 %1300) #17
  br i1 %1303, label %1311, label %1304

1304:                                             ; preds = %1302
  %1305 = load i32, i32* %755, align 4
  %1306 = zext i32 %1305 to i64
  %1307 = call i64 @_ZNK3gfx10RenderText23IndexOfAdjacentGraphemeEmNS_22LogicalCursorDirectionE(%"class.gfx::RenderText"* %228, i64 %1306, i32 1) #17
  %1308 = trunc i64 %1307 to i32
  store i32 %1308, i32* %755, align 4
  %1309 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %1281, i64 -1, i32 1
  %1310 = load i32, i32* %1309, align 8
  call void @_ZN3gfx9BreakListINS_4Font6WeightEE10ApplyValueES2_RKNS_5RangeE(%"class.gfx::BreakList.111"* %744, i32 %1310, %"class.gfx::Range"* nonnull dereferenceable(8) %750) #17
  br label %1311

1311:                                             ; preds = %1304, %1302, %1291
  %1312 = load i32, i32* %755, align 4
  %1313 = zext i32 %1312 to i64
  %1314 = load i64, i64* %749, align 8
  %1315 = icmp ugt i64 %1314, %1313
  br i1 %1315, label %1316, label %1319

1316:                                             ; preds = %1311
  %1317 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %751, align 8
  %1318 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %752, align 8
  br label %1275

1319:                                             ; preds = %1311, %1272
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %753) #17
  %1320 = load <2 x float> (%"class.gfx::RenderText"*)**, <2 x float> (%"class.gfx::RenderText"*)*** %756, align 8
  %1321 = getelementptr inbounds <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %1320, i64 3
  %1322 = load <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %1321, align 8
  %1323 = call <2 x float> %1322(%"class.gfx::RenderText"* %228) #17
  %1324 = extractelement <2 x float> %1323, i32 0
  %1325 = load i8, i8* %757, align 8, !range !2
  %1326 = icmp eq i8 %1325, 0
  %1327 = call float @llvm.ceil.f32(float %1324) #17
  %1328 = fadd float %1327, 1.000000e+00
  %1329 = select i1 %1326, float %1324, float %1328
  %1330 = fcmp oeq float %1329, %4
  br i1 %1330, label %1424, label %1414

1331:                                             ; preds = %1085, %1411
  %1332 = phi %"class.gfx::BreakList.121"* [ %718, %1085 ], [ %1412, %1411 ]
  %1333 = load i8, i8* %723, align 1
  %1334 = icmp slt i8 %1333, 0
  br i1 %1334, label %1335, label %1337

1335:                                             ; preds = %1331
  %1336 = load i64, i64* %724, align 8
  br label %1339

1337:                                             ; preds = %1331
  %1338 = zext i8 %1333 to i64
  br label %1339

1339:                                             ; preds = %1337, %1335
  %1340 = phi i64 [ %1336, %1335 ], [ %1338, %1337 ]
  %1341 = getelementptr inbounds %"class.gfx::BreakList.121", %"class.gfx::BreakList.121"* %1332, i64 0, i32 0, i32 0, i32 1
  %1342 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %1341, align 8
  %1343 = getelementptr inbounds %"class.gfx::BreakList.121", %"class.gfx::BreakList.121"* %1332, i64 0, i32 0, i32 0, i32 0
  %1344 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %1343, align 8
  br label %1345

1345:                                             ; preds = %1349, %1339
  %1346 = phi %"struct.std::__1::pair.124"* [ %1342, %1339 ], [ %1347, %1349 ]
  %1347 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %1346, i64 -1
  %1348 = icmp eq %"struct.std::__1::pair.124"* %1347, %1344
  br i1 %1348, label %1356, label %1349

1349:                                             ; preds = %1345
  %1350 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %1347, i64 0, i32 0
  %1351 = load i64, i64* %1350, align 8
  %1352 = icmp ugt i64 %1351, %1340
  br i1 %1352, label %1345, label %1353

1353:                                             ; preds = %1349
  %1354 = icmp ult i64 %1351, %1340
  %1355 = zext i1 %1354 to i64
  br label %1356

1356:                                             ; preds = %1345, %1353
  %1357 = phi %"struct.std::__1::pair.124"* [ %1347, %1353 ], [ %1344, %1345 ]
  %1358 = phi i64 [ %1355, %1353 ], [ 1, %1345 ]
  %1359 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %1357, i64 %1358
  %1360 = icmp eq %"struct.std::__1::pair.124"* %1359, %1342
  br i1 %1360, label %1362, label %1361

1361:                                             ; preds = %1356
  store %"struct.std::__1::pair.124"* %1359, %"struct.std::__1::pair.124"** %1341, align 8
  br label %1362

1362:                                             ; preds = %1361, %1356
  %1363 = phi %"struct.std::__1::pair.124"* [ %1342, %1356 ], [ %1359, %1361 ]
  %1364 = getelementptr inbounds %"class.gfx::BreakList.121", %"class.gfx::BreakList.121"* %1332, i64 0, i32 1
  store i64 %1340, i64* %1364, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %725) #17
  store i32 0, i32* %726, align 8
  store i32 0, i32* %727, align 4
  %1365 = icmp eq i64 %1340, 0
  br i1 %1365, label %1411, label %1366

1366:                                             ; preds = %1362, %1408
  %1367 = phi %"struct.std::__1::pair.124"* [ %1410, %1408 ], [ %1344, %1362 ]
  %1368 = phi %"struct.std::__1::pair.124"* [ %1409, %1408 ], [ %1363, %1362 ]
  %1369 = phi i64 [ %1406, %1408 ], [ %1340, %1362 ]
  %1370 = phi i64 [ %1405, %1408 ], [ 0, %1362 ]
  br label %1371

1371:                                             ; preds = %1378, %1366
  %1372 = phi %"struct.std::__1::pair.124"* [ %1368, %1366 ], [ %1373, %1378 ]
  %1373 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %1372, i64 -1
  %1374 = icmp eq %"struct.std::__1::pair.124"* %1373, %1367
  br i1 %1374, label %1375, label %1378

1375:                                             ; preds = %1371
  %1376 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %1367, i64 0, i32 0
  %1377 = load i64, i64* %1376, align 8
  br label %1382

1378:                                             ; preds = %1371
  %1379 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %1373, i64 0, i32 0
  %1380 = load i64, i64* %1379, align 8
  %1381 = icmp ugt i64 %1380, %1370
  br i1 %1381, label %1371, label %1382

1382:                                             ; preds = %1378, %1375
  %1383 = phi i64 [ %1377, %1375 ], [ %1380, %1378 ]
  %1384 = icmp eq %"struct.std::__1::pair.124"* %1372, %1368
  %1385 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %1372, i64 0, i32 0
  %1386 = select i1 %1384, i64* %1364, i64* %1385
  %1387 = load i64, i64* %1386, align 8
  %1388 = shl i64 %1387, 32
  %1389 = and i64 %1383, 4294967295
  %1390 = or i64 %1388, %1389
  store i64 %1390, i64* %11, align 8
  %1391 = and i64 %1387, 4294967295
  %1392 = icmp ugt i64 %1369, %1391
  br i1 %1392, label %1393, label %1403

1393:                                             ; preds = %1382
  %1394 = call zeroext i1 @_ZNK3gfx10RenderText18IsValidCursorIndexEm(%"class.gfx::RenderText"* %228, i64 %1391) #17
  br i1 %1394, label %1403, label %1395

1395:                                             ; preds = %1393
  %1396 = load i32, i32* %727, align 4
  %1397 = zext i32 %1396 to i64
  %1398 = call i64 @_ZNK3gfx10RenderText23IndexOfAdjacentGraphemeEmNS_22LogicalCursorDirectionE(%"class.gfx::RenderText"* %228, i64 %1397, i32 1) #17
  %1399 = trunc i64 %1398 to i32
  store i32 %1399, i32* %727, align 4
  %1400 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %1372, i64 -1, i32 1
  %1401 = load i8, i8* %1400, align 8, !range !2
  %1402 = icmp ne i8 %1401, 0
  call void @_ZN3gfx9BreakListIbE10ApplyValueEbRKNS_5RangeE(%"class.gfx::BreakList.121"* %1332, i1 zeroext %1402, %"class.gfx::Range"* nonnull dereferenceable(8) %720) #17
  br label %1403

1403:                                             ; preds = %1395, %1393, %1382
  %1404 = load i32, i32* %727, align 4
  %1405 = zext i32 %1404 to i64
  %1406 = load i64, i64* %1364, align 8
  %1407 = icmp ugt i64 %1406, %1405
  br i1 %1407, label %1408, label %1411

1408:                                             ; preds = %1403
  %1409 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %1341, align 8
  %1410 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %1343, align 8
  br label %1366

1411:                                             ; preds = %1403, %1362
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %725) #17
  %1412 = getelementptr inbounds %"class.gfx::BreakList.121", %"class.gfx::BreakList.121"* %1332, i64 1
  %1413 = icmp eq %"class.gfx::BreakList.121"* %1412, %719
  br i1 %1413, label %1087, label %1331

1414:                                             ; preds = %1319
  %1415 = fcmp ogt float %1329, %4
  %1416 = load i64, i64* %14, align 8
  br i1 %1415, label %1417, label %1422

1417:                                             ; preds = %1414
  %1418 = add i64 %1416, -1
  %1419 = icmp ult i64 %1418, %760
  %1420 = select i1 %1419, i64 %1418, i64 %760
  %1421 = select i1 %1419, float %1329, float %762
  br label %1424

1422:                                             ; preds = %1414
  %1423 = add i64 %1416, 1
  br label %1424

1424:                                             ; preds = %1417, %1422, %1319
  %1425 = phi i64 [ %760, %1319 ], [ %1423, %1422 ], [ %1420, %1417 ]
  %1426 = phi i64 [ %761, %1319 ], [ %761, %1422 ], [ %1418, %1417 ]
  %1427 = phi float [ %762, %1319 ], [ %1329, %1422 ], [ %1421, %1417 ]
  %1428 = phi float [ %763, %1319 ], [ %763, %1422 ], [ %1329, %1417 ]
  %1429 = phi i1 [ false, %1319 ], [ true, %1422 ], [ true, %1417 ]
  %1430 = load i8, i8* %690, align 1
  %1431 = icmp slt i8 %1430, 0
  br i1 %1431, label %1432, label %1434

1432:                                             ; preds = %1424
  %1433 = load i8*, i8** %692, align 8
  call void @_ZdlPv(i8* %1433) #18
  br label %1434

1434:                                             ; preds = %1424, %1432
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %682) #17
  br i1 %1429, label %759, label %1435

1435:                                             ; preds = %759, %1434
  %1436 = load i8, i8* %723, align 1
  %1437 = icmp slt i8 %1436, 0
  br i1 %1437, label %1441, label %1438

1438:                                             ; preds = %1435
  %1439 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %1440 = bitcast %"class.std::__1::basic_string"* %721 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1439, i8* align 8 %1440, i64 24, i1 false) #17
  br label %1615

1441:                                             ; preds = %1435
  %1442 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %721, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1443 = load i16*, i16** %1442, align 8
  %1444 = load i64, i64* %724, align 8
  %1445 = icmp ult i64 %1444, 11
  br i1 %1445, label %1446, label %1451

1446:                                             ; preds = %1441
  %1447 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %1448 = trunc i64 %1444 to i8
  %1449 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1450 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1449, i64 0, i32 1, i32 1
  store i8 %1448, i8* %1450, align 1
  br label %1468

1451:                                             ; preds = %1441
  %1452 = icmp ugt i64 %1444, 9223372036854775791
  br i1 %1452, label %1453, label %1455

1453:                                             ; preds = %1451
  %1454 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %1454) #19
  unreachable

1455:                                             ; preds = %1451
  %1456 = add nuw nsw i64 %1444, 8
  %1457 = and i64 %1456, -8
  %1458 = icmp slt i64 %1457, 0
  br i1 %1458, label %1459, label %1460

1459:                                             ; preds = %1455
  call void @abort() #19
  unreachable

1460:                                             ; preds = %1455
  %1461 = shl i64 %1457, 1
  %1462 = call i8* @_Znwm(i64 %1461) #18
  %1463 = bitcast i8* %1462 to i16*
  %1464 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %1462, i8** %1464, align 8
  %1465 = or i64 %1457, -9223372036854775808
  %1466 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1465, i64* %1466, align 8
  %1467 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1444, i64* %1467, align 8
  br label %1468

1468:                                             ; preds = %1460, %1446
  %1469 = phi i16* [ %1447, %1446 ], [ %1463, %1460 ]
  %1470 = add nuw nsw i64 %1444, 1
  %1471 = add i64 %1444, 1
  %1472 = icmp ult i64 %1471, 16
  br i1 %1472, label %1562, label %1473

1473:                                             ; preds = %1468
  %1474 = add i64 %1444, 1
  %1475 = getelementptr i16, i16* %1469, i64 %1474
  %1476 = getelementptr i16, i16* %1443, i64 %1474
  %1477 = icmp ult i16* %1469, %1476
  %1478 = icmp ult i16* %1443, %1475
  %1479 = and i1 %1477, %1478
  br i1 %1479, label %1562, label %1480

1480:                                             ; preds = %1473
  %1481 = and i64 %1471, -16
  %1482 = sub i64 %1470, %1481
  %1483 = getelementptr i16, i16* %1443, i64 %1481
  %1484 = getelementptr i16, i16* %1469, i64 %1481
  %1485 = add i64 %1481, -16
  %1486 = lshr exact i64 %1485, 4
  %1487 = add nuw nsw i64 %1486, 1
  %1488 = and i64 %1487, 3
  %1489 = icmp ult i64 %1485, 48
  br i1 %1489, label %1541, label %1490

1490:                                             ; preds = %1480
  %1491 = sub nsw i64 %1487, %1488
  br label %1492

1492:                                             ; preds = %1492, %1490
  %1493 = phi i64 [ 0, %1490 ], [ %1538, %1492 ]
  %1494 = phi i64 [ %1491, %1490 ], [ %1539, %1492 ]
  %1495 = getelementptr i16, i16* %1443, i64 %1493
  %1496 = getelementptr i16, i16* %1469, i64 %1493
  %1497 = bitcast i16* %1495 to <8 x i16>*
  %1498 = load <8 x i16>, <8 x i16>* %1497, align 2, !alias.scope !129
  %1499 = getelementptr i16, i16* %1495, i64 8
  %1500 = bitcast i16* %1499 to <8 x i16>*
  %1501 = load <8 x i16>, <8 x i16>* %1500, align 2, !alias.scope !129
  %1502 = bitcast i16* %1496 to <8 x i16>*
  store <8 x i16> %1498, <8 x i16>* %1502, align 2, !alias.scope !132, !noalias !129
  %1503 = getelementptr i16, i16* %1496, i64 8
  %1504 = bitcast i16* %1503 to <8 x i16>*
  store <8 x i16> %1501, <8 x i16>* %1504, align 2, !alias.scope !132, !noalias !129
  %1505 = or i64 %1493, 16
  %1506 = getelementptr i16, i16* %1443, i64 %1505
  %1507 = getelementptr i16, i16* %1469, i64 %1505
  %1508 = bitcast i16* %1506 to <8 x i16>*
  %1509 = load <8 x i16>, <8 x i16>* %1508, align 2, !alias.scope !129
  %1510 = getelementptr i16, i16* %1506, i64 8
  %1511 = bitcast i16* %1510 to <8 x i16>*
  %1512 = load <8 x i16>, <8 x i16>* %1511, align 2, !alias.scope !129
  %1513 = bitcast i16* %1507 to <8 x i16>*
  store <8 x i16> %1509, <8 x i16>* %1513, align 2, !alias.scope !132, !noalias !129
  %1514 = getelementptr i16, i16* %1507, i64 8
  %1515 = bitcast i16* %1514 to <8 x i16>*
  store <8 x i16> %1512, <8 x i16>* %1515, align 2, !alias.scope !132, !noalias !129
  %1516 = or i64 %1493, 32
  %1517 = getelementptr i16, i16* %1443, i64 %1516
  %1518 = getelementptr i16, i16* %1469, i64 %1516
  %1519 = bitcast i16* %1517 to <8 x i16>*
  %1520 = load <8 x i16>, <8 x i16>* %1519, align 2, !alias.scope !129
  %1521 = getelementptr i16, i16* %1517, i64 8
  %1522 = bitcast i16* %1521 to <8 x i16>*
  %1523 = load <8 x i16>, <8 x i16>* %1522, align 2, !alias.scope !129
  %1524 = bitcast i16* %1518 to <8 x i16>*
  store <8 x i16> %1520, <8 x i16>* %1524, align 2, !alias.scope !132, !noalias !129
  %1525 = getelementptr i16, i16* %1518, i64 8
  %1526 = bitcast i16* %1525 to <8 x i16>*
  store <8 x i16> %1523, <8 x i16>* %1526, align 2, !alias.scope !132, !noalias !129
  %1527 = or i64 %1493, 48
  %1528 = getelementptr i16, i16* %1443, i64 %1527
  %1529 = getelementptr i16, i16* %1469, i64 %1527
  %1530 = bitcast i16* %1528 to <8 x i16>*
  %1531 = load <8 x i16>, <8 x i16>* %1530, align 2, !alias.scope !129
  %1532 = getelementptr i16, i16* %1528, i64 8
  %1533 = bitcast i16* %1532 to <8 x i16>*
  %1534 = load <8 x i16>, <8 x i16>* %1533, align 2, !alias.scope !129
  %1535 = bitcast i16* %1529 to <8 x i16>*
  store <8 x i16> %1531, <8 x i16>* %1535, align 2, !alias.scope !132, !noalias !129
  %1536 = getelementptr i16, i16* %1529, i64 8
  %1537 = bitcast i16* %1536 to <8 x i16>*
  store <8 x i16> %1534, <8 x i16>* %1537, align 2, !alias.scope !132, !noalias !129
  %1538 = add i64 %1493, 64
  %1539 = add i64 %1494, -4
  %1540 = icmp eq i64 %1539, 0
  br i1 %1540, label %1541, label %1492, !llvm.loop !134

1541:                                             ; preds = %1492, %1480
  %1542 = phi i64 [ 0, %1480 ], [ %1538, %1492 ]
  %1543 = icmp eq i64 %1488, 0
  br i1 %1543, label %1560, label %1544

1544:                                             ; preds = %1541, %1544
  %1545 = phi i64 [ %1557, %1544 ], [ %1542, %1541 ]
  %1546 = phi i64 [ %1558, %1544 ], [ %1488, %1541 ]
  %1547 = getelementptr i16, i16* %1443, i64 %1545
  %1548 = getelementptr i16, i16* %1469, i64 %1545
  %1549 = bitcast i16* %1547 to <8 x i16>*
  %1550 = load <8 x i16>, <8 x i16>* %1549, align 2, !alias.scope !129
  %1551 = getelementptr i16, i16* %1547, i64 8
  %1552 = bitcast i16* %1551 to <8 x i16>*
  %1553 = load <8 x i16>, <8 x i16>* %1552, align 2, !alias.scope !129
  %1554 = bitcast i16* %1548 to <8 x i16>*
  store <8 x i16> %1550, <8 x i16>* %1554, align 2, !alias.scope !132, !noalias !129
  %1555 = getelementptr i16, i16* %1548, i64 8
  %1556 = bitcast i16* %1555 to <8 x i16>*
  store <8 x i16> %1553, <8 x i16>* %1556, align 2, !alias.scope !132, !noalias !129
  %1557 = add i64 %1545, 16
  %1558 = add i64 %1546, -1
  %1559 = icmp eq i64 %1558, 0
  br i1 %1559, label %1560, label %1544, !llvm.loop !135

1560:                                             ; preds = %1544, %1541
  %1561 = icmp eq i64 %1471, %1481
  br i1 %1561, label %1615, label %1562

1562:                                             ; preds = %1560, %1473, %1468
  %1563 = phi i64 [ %1470, %1473 ], [ %1470, %1468 ], [ %1482, %1560 ]
  %1564 = phi i16* [ %1443, %1473 ], [ %1443, %1468 ], [ %1483, %1560 ]
  %1565 = phi i16* [ %1469, %1473 ], [ %1469, %1468 ], [ %1484, %1560 ]
  %1566 = add i64 %1563, -1
  %1567 = and i64 %1563, 7
  %1568 = icmp eq i64 %1567, 0
  br i1 %1568, label %1580, label %1569

1569:                                             ; preds = %1562, %1569
  %1570 = phi i64 [ %1575, %1569 ], [ %1563, %1562 ]
  %1571 = phi i16* [ %1577, %1569 ], [ %1564, %1562 ]
  %1572 = phi i16* [ %1576, %1569 ], [ %1565, %1562 ]
  %1573 = phi i64 [ %1578, %1569 ], [ %1567, %1562 ]
  %1574 = load i16, i16* %1571, align 2
  store i16 %1574, i16* %1572, align 2
  %1575 = add i64 %1570, -1
  %1576 = getelementptr inbounds i16, i16* %1572, i64 1
  %1577 = getelementptr inbounds i16, i16* %1571, i64 1
  %1578 = add i64 %1573, -1
  %1579 = icmp eq i64 %1578, 0
  br i1 %1579, label %1580, label %1569, !llvm.loop !136

1580:                                             ; preds = %1569, %1562
  %1581 = phi i64 [ %1563, %1562 ], [ %1575, %1569 ]
  %1582 = phi i16* [ %1564, %1562 ], [ %1577, %1569 ]
  %1583 = phi i16* [ %1565, %1562 ], [ %1576, %1569 ]
  %1584 = icmp ult i64 %1566, 7
  br i1 %1584, label %1615, label %1585

1585:                                             ; preds = %1580, %1585
  %1586 = phi i64 [ %1611, %1585 ], [ %1581, %1580 ]
  %1587 = phi i16* [ %1613, %1585 ], [ %1582, %1580 ]
  %1588 = phi i16* [ %1612, %1585 ], [ %1583, %1580 ]
  %1589 = load i16, i16* %1587, align 2
  store i16 %1589, i16* %1588, align 2
  %1590 = getelementptr inbounds i16, i16* %1588, i64 1
  %1591 = getelementptr inbounds i16, i16* %1587, i64 1
  %1592 = load i16, i16* %1591, align 2
  store i16 %1592, i16* %1590, align 2
  %1593 = getelementptr inbounds i16, i16* %1588, i64 2
  %1594 = getelementptr inbounds i16, i16* %1587, i64 2
  %1595 = load i16, i16* %1594, align 2
  store i16 %1595, i16* %1593, align 2
  %1596 = getelementptr inbounds i16, i16* %1588, i64 3
  %1597 = getelementptr inbounds i16, i16* %1587, i64 3
  %1598 = load i16, i16* %1597, align 2
  store i16 %1598, i16* %1596, align 2
  %1599 = getelementptr inbounds i16, i16* %1588, i64 4
  %1600 = getelementptr inbounds i16, i16* %1587, i64 4
  %1601 = load i16, i16* %1600, align 2
  store i16 %1601, i16* %1599, align 2
  %1602 = getelementptr inbounds i16, i16* %1588, i64 5
  %1603 = getelementptr inbounds i16, i16* %1587, i64 5
  %1604 = load i16, i16* %1603, align 2
  store i16 %1604, i16* %1602, align 2
  %1605 = getelementptr inbounds i16, i16* %1588, i64 6
  %1606 = getelementptr inbounds i16, i16* %1587, i64 6
  %1607 = load i16, i16* %1606, align 2
  store i16 %1607, i16* %1605, align 2
  %1608 = getelementptr inbounds i16, i16* %1588, i64 7
  %1609 = getelementptr inbounds i16, i16* %1587, i64 7
  %1610 = load i16, i16* %1609, align 2
  store i16 %1610, i16* %1608, align 2
  %1611 = add i64 %1586, -8
  %1612 = getelementptr inbounds i16, i16* %1588, i64 8
  %1613 = getelementptr inbounds i16, i16* %1587, i64 8
  %1614 = icmp eq i64 %1611, 0
  br i1 %1614, label %1615, label %1585, !llvm.loop !137

1615:                                             ; preds = %1580, %1585, %1560, %1438
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %657)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %646) #17
  br label %1616

1616:                                             ; preds = %642, %1615
  %1617 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %644, %642 ], [ %693, %1615 ]
  %1618 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1617, i64 0, i32 1, i32 1
  %1619 = load i8, i8* %1618, align 1
  %1620 = icmp slt i8 %1619, 0
  br i1 %1620, label %1621, label %1624

1621:                                             ; preds = %1616
  %1622 = bitcast %"class.std::__1::basic_string"* %12 to i8**
  %1623 = load i8*, i8** %1622, align 8
  call void @_ZdlPv(i8* %1623) #18
  br label %1624

1624:                                             ; preds = %1616, %1621
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %427) #17
  br label %1625

1625:                                             ; preds = %391, %396, %371, %249, %1624
  %1626 = icmp eq %"class.gfx::RenderText"* %228, null
  br i1 %1626, label %1632, label %1627

1627:                                             ; preds = %1625
  %1628 = bitcast %"class.gfx::RenderText"* %228 to void (%"class.gfx::RenderText"*)***
  %1629 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %1628, align 8
  %1630 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %1629, i64 1
  %1631 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %1630, align 8
  call void %1631(%"class.gfx::RenderText"* nonnull %228) #17
  br label %1632

1632:                                             ; preds = %1625, %1627
  %1633 = icmp eq i8* %227, null
  br i1 %1633, label %1638, label %1634

1634:                                             ; preds = %1632
  %1635 = load i8, i8* %227, align 1
  %1636 = icmp eq i8 %1635, 0
  br i1 %1636, label %1638, label %1637

1637:                                             ; preds = %1634
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %227, i8* %226, i64 %225) #17
  br label %1638

1638:                                             ; preds = %179, %184, %159, %1637, %1634, %1632, %38, %32, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"class.gfx::BreakList.183"* @_ZN3gfx10RenderText13GetLineBreaksEv(%"class.gfx::RenderText"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::i18n::BreakIterator", align 8
  %3 = alloca %"class.base::BasicStringPiece", align 8
  %4 = alloca %"class.gfx::Range", align 4
  %5 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58
  %6 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %109

9:                                                ; preds = %1
  %10 = bitcast %"class.gfx::RenderText"* %0 to %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)***
  %11 = load %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)**, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)** %11, i64 2
  %13 = load %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)** %12, align 8
  %14 = tail call dereferenceable(24) %"class.std::__1::basic_string"* %13(%"class.gfx::RenderText"* %0) #17
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %15, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = zext i8 %17 to i64
  %22 = select i1 %18, i64 %20, i64 %21
  %23 = bitcast %"class.gfx::BreakList.183"* %5 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 0, i32 0, i32 1
  %26 = bitcast %"struct.std::__1::pair.186"** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = inttoptr i64 %24 to %"struct.std::__1::pair.186"*
  %28 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 58, i32 0, i32 0, i32 2, i32 0, i32 0
  %29 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %28, align 8
  %30 = icmp ugt %"struct.std::__1::pair.186"* %29, %27
  br i1 %30, label %31, label %35

31:                                               ; preds = %9
  %32 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %27, i64 1
  %33 = ptrtoint %"struct.std::__1::pair.186"* %32 to i64
  %34 = inttoptr i64 %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false)
  store i64 %33, i64* %26, align 8
  br label %62

35:                                               ; preds = %9
  %36 = ptrtoint %"struct.std::__1::pair.186"* %29 to i64
  %37 = bitcast %"struct.std::__1::pair.186"** %28 to i64*
  %38 = sub i64 %36, %24
  %39 = ashr exact i64 %38, 4
  %40 = icmp ult i64 %39, 576460752303423487
  br i1 %40, label %41, label %47

41:                                               ; preds = %35
  %42 = ashr exact i64 %38, 3
  %43 = icmp eq i64 %38, 0
  %44 = select i1 %43, i64 1, i64 %42
  %45 = icmp ugt i64 %44, 1152921504606846975
  br i1 %45, label %46, label %47

46:                                               ; preds = %41
  tail call void @abort() #19
  unreachable

47:                                               ; preds = %41, %35
  %48 = phi i64 [ %44, %41 ], [ 1152921504606846975, %35 ]
  %49 = shl i64 %48, 4
  %50 = tail call i8* @_Znwm(i64 %49) #18
  %51 = bitcast i8* %50 to %"struct.std::__1::pair.186"*
  %52 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %51, i64 %48
  %53 = ptrtoint %"struct.std::__1::pair.186"* %52 to i64
  %54 = getelementptr inbounds i8, i8* %50, i64 16
  %55 = bitcast i8* %54 to %"struct.std::__1::pair.186"*
  %56 = ptrtoint i8* %54 to i64
  %57 = ptrtoint i8* %50 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 0, i64 16, i1 false)
  store i64 %57, i64* %23, align 8
  store i64 %56, i64* %26, align 8
  store i64 %53, i64* %37, align 8
  %58 = icmp eq i64 %24, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %47
  %60 = inttoptr i64 %24 to i8*
  tail call void @_ZdlPv(i8* %60) #18
  %61 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %25, align 8
  br label %62

62:                                               ; preds = %31, %47, %59
  %63 = phi %"struct.std::__1::pair.186"* [ %32, %31 ], [ %55, %47 ], [ %61, %59 ]
  %64 = getelementptr inbounds %"class.gfx::BreakList.183", %"class.gfx::BreakList.183"* %5, i64 0, i32 0, i32 0, i32 0
  %65 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %64, align 8
  br label %66

66:                                               ; preds = %70, %62
  %67 = phi %"struct.std::__1::pair.186"* [ %63, %62 ], [ %68, %70 ]
  %68 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %67, i64 -1
  %69 = icmp eq %"struct.std::__1::pair.186"* %68, %65
  br i1 %69, label %77, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %68, i64 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = icmp ugt i64 %72, %22
  br i1 %73, label %66, label %74

74:                                               ; preds = %70
  %75 = icmp ult i64 %72, %22
  %76 = zext i1 %75 to i64
  br label %77

77:                                               ; preds = %66, %74
  %78 = phi %"struct.std::__1::pair.186"* [ %68, %74 ], [ %65, %66 ]
  %79 = phi i64 [ %76, %74 ], [ 1, %66 ]
  %80 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %78, i64 %79
  %81 = icmp eq %"struct.std::__1::pair.186"* %80, %63
  br i1 %81, label %83, label %82

82:                                               ; preds = %77
  store %"struct.std::__1::pair.186"* %80, %"struct.std::__1::pair.186"** %25, align 8
  br label %83

83:                                               ; preds = %77, %82
  store i64 %22, i64* %6, align 8
  %84 = bitcast %"class.base::i18n::BreakIterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %84) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 -86, i64 72, i1 false)
  %85 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %85) #17
  %86 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  %87 = load i8, i8* %16, align 1
  %88 = icmp slt i8 %87, 0
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i16*, i16** %89, align 8
  %91 = bitcast %"class.std::__1::basic_string"* %14 to i16*
  %92 = select i1 %88, i16* %90, i16* %91
  store i16* %92, i16** %86, align 8
  %93 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  %94 = load i64, i64* %19, align 8
  %95 = zext i8 %87 to i64
  %96 = select i1 %88, i64 %94, i64 %95
  store i64 %96, i64* %93, align 8
  call void @_ZN4base4i18n13BreakIteratorC1ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS1_9BreakTypeE(%"class.base::i18n::BreakIterator"* nonnull %2, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %3, i32 1) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85) #17
  %97 = call zeroext i1 @_ZN4base4i18n13BreakIterator4InitEv(%"class.base::i18n::BreakIterator"* nonnull %2) #17
  br i1 %97, label %98, label %108

98:                                               ; preds = %83
  %99 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %2, i64 0, i32 5
  %100 = bitcast %"class.gfx::Range"* %4 to i8*
  %101 = trunc i64 %22 to i32
  %102 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %4, i64 0, i32 0
  %103 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %4, i64 0, i32 1
  br label %104

104:                                              ; preds = %98, %104
  %105 = load i64, i64* %99, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #17
  %106 = trunc i64 %105 to i32
  store i32 %106, i32* %102, align 4
  store i32 %101, i32* %103, align 4
  call void @_ZN3gfx9BreakListImE10ApplyValueEmRKNS_5RangeE(%"class.gfx::BreakList.183"* %5, i64 %105, %"class.gfx::Range"* nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #17
  %107 = call zeroext i1 @_ZN4base4i18n13BreakIterator7AdvanceEv(%"class.base::i18n::BreakIterator"* nonnull %2) #17
  br i1 %107, label %104, label %108

108:                                              ; preds = %104, %83
  call void @_ZN4base4i18n13BreakIteratorD1Ev(%"class.base::i18n::BreakIterator"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %84) #17
  br label %109

109:                                              ; preds = %1, %108
  ret %"class.gfx::BreakList.183"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gfx9BreakListImE10ApplyValueEmRKNS_5RangeE(%"class.gfx::BreakList.183"*, i64, %"class.gfx::Range"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::pair.186", align 8
  %5 = alloca %"struct.std::__1::pair.186", align 8
  %6 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %2, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %2, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %7, %9
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %148, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %2, i64 0, i32 1
  %14 = icmp eq i32 %7, %9
  br i1 %14, label %148, label %15

15:                                               ; preds = %12
  %16 = zext i32 %7 to i64
  %17 = getelementptr inbounds %"class.gfx::BreakList.183", %"class.gfx::BreakList.183"* %0, i64 0, i32 0, i32 0, i32 1
  %18 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %17, align 8
  %19 = getelementptr inbounds %"class.gfx::BreakList.183", %"class.gfx::BreakList.183"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %19, align 8
  br label %21

21:                                               ; preds = %28, %15
  %22 = phi %"struct.std::__1::pair.186"* [ %18, %15 ], [ %23, %28 ]
  %23 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %22, i64 -1
  %24 = icmp eq %"struct.std::__1::pair.186"* %23, %20
  br i1 %24, label %25, label %28

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %20, i64 0, i32 0
  %27 = load i64, i64* %26, align 8
  br label %32

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %23, i64 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = icmp ugt i64 %30, %16
  br i1 %31, label %21, label %32

32:                                               ; preds = %28, %25
  %33 = phi i64 [ %27, %25 ], [ %30, %28 ]
  %34 = phi %"struct.std::__1::pair.186"* [ %20, %25 ], [ %23, %28 ]
  %35 = icmp ult i64 %33, %16
  %36 = zext i1 %35 to i64
  %37 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %34, i64 %36
  %38 = zext i32 %9 to i64
  br label %39

39:                                               ; preds = %43, %32
  %40 = phi %"struct.std::__1::pair.186"* [ %18, %32 ], [ %41, %43 ]
  %41 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %40, i64 -1
  %42 = icmp eq %"struct.std::__1::pair.186"* %41, %20
  br i1 %42, label %47, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %41, i64 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = icmp ugt i64 %45, %38
  br i1 %46, label %39, label %47

47:                                               ; preds = %39, %43
  %48 = phi %"struct.std::__1::pair.186"* [ %20, %39 ], [ %41, %43 ]
  %49 = ptrtoint %"struct.std::__1::pair.186"* %48 to i64
  %50 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %48, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.gfx::BreakList.183", %"class.gfx::BreakList.183"* %0, i64 0, i32 0
  %53 = icmp eq %"struct.std::__1::pair.186"* %37, %18
  br i1 %53, label %119, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %48, i64 1
  %56 = icmp eq %"struct.std::__1::pair.186"* %37, %55
  br i1 %56, label %119, label %57

57:                                               ; preds = %54
  %58 = icmp eq %"struct.std::__1::pair.186"* %18, %55
  br i1 %58, label %116, label %59

59:                                               ; preds = %57
  %60 = getelementptr %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %18, i64 -2, i32 0
  %61 = ptrtoint i64* %60 to i64
  %62 = sub i64 %61, %49
  %63 = lshr i64 %62, 4
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %81, label %67

67:                                               ; preds = %59, %67
  %68 = phi %"struct.std::__1::pair.186"* [ %78, %67 ], [ %37, %59 ]
  %69 = phi %"struct.std::__1::pair.186"* [ %77, %67 ], [ %55, %59 ]
  %70 = phi i64 [ %79, %67 ], [ %65, %59 ]
  %71 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %69, i64 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %68, i64 0, i32 0
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %69, i64 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %68, i64 0, i32 1
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %69, i64 1
  %78 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %68, i64 1
  %79 = add i64 %70, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %67, !llvm.loop !138

81:                                               ; preds = %67, %59
  %82 = phi %"struct.std::__1::pair.186"* [ undef, %59 ], [ %78, %67 ]
  %83 = phi %"struct.std::__1::pair.186"* [ %37, %59 ], [ %78, %67 ]
  %84 = phi %"struct.std::__1::pair.186"* [ %55, %59 ], [ %77, %67 ]
  %85 = icmp ult i64 %62, 48
  br i1 %85, label %116, label %86

86:                                               ; preds = %81, %86
  %87 = phi %"struct.std::__1::pair.186"* [ %114, %86 ], [ %83, %81 ]
  %88 = phi %"struct.std::__1::pair.186"* [ %113, %86 ], [ %84, %81 ]
  %89 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %88, i64 0, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %87, i64 0, i32 0
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %88, i64 0, i32 1
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %87, i64 0, i32 1
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %88, i64 1, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %87, i64 1, i32 0
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %88, i64 1, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %87, i64 1, i32 1
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %88, i64 2, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %87, i64 2, i32 0
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %88, i64 2, i32 1
  %105 = load i64, i64* %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %87, i64 2, i32 1
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %88, i64 3, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %87, i64 3, i32 0
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %88, i64 3, i32 1
  %111 = load i64, i64* %110, align 8
  %112 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %87, i64 3, i32 1
  store i64 %111, i64* %112, align 8
  %113 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %88, i64 4
  %114 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %87, i64 4
  %115 = icmp eq %"struct.std::__1::pair.186"* %113, %18
  br i1 %115, label %116, label %86

116:                                              ; preds = %81, %86, %57
  %117 = phi %"struct.std::__1::pair.186"* [ %37, %57 ], [ %82, %81 ], [ %114, %86 ]
  store %"struct.std::__1::pair.186"* %117, %"struct.std::__1::pair.186"** %17, align 8
  %118 = load i32, i32* %6, align 4
  br label %119

119:                                              ; preds = %116, %54, %47
  %120 = phi i32 [ %118, %116 ], [ %7, %54 ], [ %7, %47 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %127, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %37, i64 -1
  %124 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %123, i64 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = icmp eq i64 %125, %1
  br i1 %126, label %134, label %127

127:                                              ; preds = %119, %122
  %128 = bitcast %"struct.std::__1::pair.186"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %128) #17
  %129 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %4, i64 0, i32 0
  %130 = zext i32 %120 to i64
  store i64 %130, i64* %129, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %4, i64 0, i32 1
  store i64 %1, i64* %131, align 8
  %132 = call %"struct.std::__1::pair.186"* @_ZNSt3__16vectorINS_4pairImmEENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EEOS2_(%"class.std::__1::vector.184"* %52, %"struct.std::__1::pair.186"* %37, %"struct.std::__1::pair.186"* nonnull dereferenceable(16) %4)
  %133 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %132, i64 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %128) #17
  br label %134

134:                                              ; preds = %122, %127
  %135 = phi %"struct.std::__1::pair.186"* [ %133, %127 ], [ %37, %122 ]
  %136 = icmp eq i64 %51, %1
  br i1 %136, label %148, label %137

137:                                              ; preds = %134
  %138 = load i32, i32* %13, align 4
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds %"class.gfx::BreakList.183", %"class.gfx::BreakList.183"* %0, i64 0, i32 1
  %141 = load i64, i64* %140, align 8
  %142 = icmp eq i64 %141, %139
  br i1 %142, label %148, label %143

143:                                              ; preds = %137
  %144 = bitcast %"struct.std::__1::pair.186"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %144) #17
  %145 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %5, i64 0, i32 0
  store i64 %139, i64* %145, align 8
  %146 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %5, i64 0, i32 1
  store i64 %51, i64* %146, align 8
  %147 = call %"struct.std::__1::pair.186"* @_ZNSt3__16vectorINS_4pairImmEENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EEOS2_(%"class.std::__1::vector.184"* %52, %"struct.std::__1::pair.186"* %135, %"struct.std::__1::pair.186"* nonnull dereferenceable(16) %5)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %144) #17
  br label %148

148:                                              ; preds = %3, %143, %134, %137, %12
  ret void
}

declare zeroext i1 @_ZN4base4i18n13BreakIterator7AdvanceEv(%"class.base::i18n::BreakIterator"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText16ApplyFadeEffectsEPNS_8internal16SkiaTextRendererE(%"class.gfx::RenderText"*, %"class.gfx::internal::SkiaTextRenderer"* nocapture) local_unnamed_addr #11 align 2 {
  %3 = alloca %"class.std::__1::vector.55", align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca [2 x %struct.SkPoint], align 16
  %6 = alloca i64, align 8
  %7 = alloca %"class.gfx::Rect", align 4
  %8 = alloca %"class.gfx::Rect", align 4
  %9 = alloca %"class.gfx::Rect", align 4
  %10 = alloca %"class.gfx::Rect", align 4
  %11 = alloca %class.sk_sp.33, align 8
  %12 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 50
  %13 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 50, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 44
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %384

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 39
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 6
  br i1 %21, label %22, label %384

22:                                               ; preds = %18
  %23 = bitcast %"class.gfx::RenderText"* %0 to <2 x float> (%"class.gfx::RenderText"*)***
  %24 = load <2 x float> (%"class.gfx::RenderText"*)**, <2 x float> (%"class.gfx::RenderText"*)*** %23, align 8
  %25 = getelementptr inbounds <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %24, i64 3
  %26 = load <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %25, align 8
  %27 = tail call <2 x float> %26(%"class.gfx::RenderText"* %0) #17
  %28 = extractelement <2 x float> %27, i32 0
  %29 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 13
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  %32 = tail call float @llvm.ceil.f32(float %28) #17
  %33 = fadd float %32, 1.000000e+00
  %34 = select i1 %31, float %28, float %33
  %35 = tail call float @llvm.ceil.f32(float %34) #17
  %36 = fcmp ult float %35, 0xC1E0000000000000
  %37 = fcmp ugt float %35, 0x41DFFFFFE0000000
  %38 = fcmp ogt float %35, 0xC1E0000000000000
  %39 = select i1 %38, float %35, float 0xC1E0000000000000
  %40 = fptosi float %39 to i32
  %41 = select i1 %36, i32 0, i32 2147483647
  %42 = select i1 %37, i32 %41, i32 %40
  %43 = icmp sgt i32 %42, %14
  br i1 %43, label %44, label %384

44:                                               ; preds = %22
  %45 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 10
  %46 = tail call i32 @_ZNK3gfx8FontList20GetExpectedTextWidthEi(%"class.gfx::FontList"* %45, i32 3) #17
  %47 = sitofp i32 %14 to float
  %48 = fdiv float %47, 3.000000e+00
  %49 = fcmp ult float %48, 0.000000e+00
  %50 = fadd float %48, 5.000000e-01
  %51 = tail call float @llvm.floor.f32(float %50) #17
  %52 = fadd float %48, -5.000000e-01
  %53 = tail call float @llvm.ceil.f32(float %52) #17
  %54 = select i1 %49, float %53, float %51
  %55 = fcmp ult float %54, 0xC1E0000000000000
  %56 = fcmp ugt float %54, 0x41DFFFFFE0000000
  %57 = fcmp ogt float %54, 0xC1E0000000000000
  %58 = select i1 %57, float %54, float 0xC1E0000000000000
  %59 = fptosi float %58 to i32
  %60 = select i1 %55, i32 0, i32 2147483647
  %61 = select i1 %56, i32 %60, i32 %59
  %62 = icmp slt i32 %61, %46
  %63 = select i1 %62, i32 %61, i32 %46
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %384, label %65

65:                                               ; preds = %44
  %66 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 4
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 3
  br i1 %68, label %69, label %98

69:                                               ; preds = %65
  %70 = bitcast %"class.gfx::RenderText"* %0 to void (%"class.gfx::RenderText"*)***
  %71 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %71, i64 13
  %73 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %72, align 8
  tail call void %73(%"class.gfx::RenderText"* %0) #17
  %74 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 8
  %75 = load i32, i32* %74, align 8
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %94

77:                                               ; preds = %69
  %78 = bitcast %"class.gfx::RenderText"* %0 to %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)***
  %79 = load %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)**, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*** %78, align 8
  %80 = getelementptr inbounds %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)** %79, i64 2
  %81 = load %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)** %80, align 8
  %82 = tail call dereferenceable(24) %"class.std::__1::basic_string"* %81(%"class.gfx::RenderText"* %0) #17
  %83 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 6
  %84 = load i32, i32* %83, align 8
  switch i32 %84, label %91 [
    i32 0, label %85
    i32 1, label %87
    i32 2, label %92
    i32 3, label %90
    i32 4, label %92
  ]

85:                                               ; preds = %77
  %86 = tail call i32 @_ZN4base4i18n32GetFirstStrongCharacterDirectionERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %82) #17
  br label %92

87:                                               ; preds = %77
  %88 = tail call zeroext i1 @_ZN4base4i18n5IsRTLEv() #17
  %89 = select i1 %88, i32 1, i32 2
  br label %92

90:                                               ; preds = %77
  br label %92

91:                                               ; preds = %77
  br label %92

92:                                               ; preds = %91, %90, %87, %85, %77, %77
  %93 = phi i32 [ 0, %91 ], [ 1, %90 ], [ %89, %87 ], [ %86, %85 ], [ 2, %77 ], [ 2, %77 ]
  store i32 %93, i32* %74, align 8
  br label %94

94:                                               ; preds = %92, %69
  %95 = phi i32 [ %93, %92 ], [ %75, %69 ]
  %96 = icmp eq i32 %95, 1
  %97 = select i1 %96, i32 2, i32 0
  br label %98

98:                                               ; preds = %94, %65
  %99 = phi i32 [ %67, %65 ], [ %97, %94 ]
  %100 = bitcast %"class.gfx::Rect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %100) #17
  %101 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 1, i32 0
  %102 = bitcast %"class.gfx::Rect"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %100, i8* align 4 %102, i64 16, i1 false)
  %103 = bitcast %"class.gfx::Rect"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %103) #17
  %104 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 1, i32 0
  %105 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %103, i8 0, i64 16, i1 false) #17
  %106 = bitcast %"class.gfx::Rect"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %106) #17
  %107 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %9, i64 0, i32 1, i32 0
  %108 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %9, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %106, i8 0, i64 16, i1 false) #17
  %109 = icmp eq i32 %99, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %98
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %103, i8* nonnull align 4 %100, i64 16, i1 false)
  %111 = load i32, i32* %101, align 4
  %112 = sub nsw i32 %111, %63
  call void @_ZN3gfx4Rect5InsetEiiii(%"class.gfx::Rect"* nonnull %8, i32 0, i32 0, i32 %112, i32 0) #17
  call void @_ZN3gfx4Rect5InsetEiiii(%"class.gfx::Rect"* nonnull %7, i32 %63, i32 0, i32 0, i32 0) #17
  %113 = icmp eq i32 %99, 2
  br i1 %113, label %117, label %114

114:                                              ; preds = %98, %110
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %106, i8* nonnull align 4 %100, i64 16, i1 false)
  %115 = load i32, i32* %101, align 4
  %116 = sub nsw i32 %115, %63
  call void @_ZN3gfx4Rect5InsetEiiii(%"class.gfx::Rect"* nonnull %9, i32 %116, i32 0, i32 0, i32 0) #17
  call void @_ZN3gfx4Rect5InsetEiiii(%"class.gfx::Rect"* nonnull %7, i32 0, i32 0, i32 %63, i32 0) #17
  br label %117

117:                                              ; preds = %110, %114
  %118 = load i32, i32* %104, align 4
  %119 = icmp eq i32 %118, 0
  %120 = load i32, i32* %105, align 4
  %121 = icmp eq i32 %120, 0
  %122 = or i1 %119, %121
  br i1 %122, label %123, label %129

123:                                              ; preds = %117
  %124 = load i32, i32* %107, align 4
  %125 = icmp eq i32 %124, 0
  %126 = load i32, i32* %108, align 4
  %127 = icmp eq i32 %126, 0
  %128 = or i1 %125, %127
  br i1 %128, label %383, label %129

129:                                              ; preds = %123, %117
  %130 = bitcast %"class.gfx::Rect"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %130) #17
  %131 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %10, i64 0, i32 0, i32 0
  %132 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %10, i64 0, i32 0, i32 1
  %133 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %10, i64 0, i32 1, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %130, i8* align 4 %102, i64 16, i1 false)
  %134 = call i64 @_ZN3gfx10RenderText18GetAlignmentOffsetEm(%"class.gfx::RenderText"* %0, i64 0)
  %135 = trunc i64 %134 to i32
  call void @_ZN3gfx4Rect5InsetEiiii(%"class.gfx::Rect"* nonnull %10, i32 %135, i32 0, i32 0, i32 0) #17
  %136 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %137 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %136, align 8
  %138 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %137, i64 0, i32 1
  %139 = load i32, i32* %138, align 8
  %140 = and i32 %139, 16777215
  %141 = or i32 %139, -16777216
  %142 = bitcast i64* %6 to %"class.gfx::Point"*
  %143 = load i32, i32* %133, align 4, !noalias !139
  %144 = sitofp i32 %143 to float
  %145 = call i32 @_ZNK3gfx8FontList20GetExpectedTextWidthEi(%"class.gfx::FontList"* %45, i32 4) #17, !noalias !139
  %146 = sitofp i32 %145 to float
  %147 = fdiv float %144, %146
  %148 = fcmp olt float %147, 1.000000e+00
  br i1 %148, label %149, label %166

149:                                              ; preds = %129
  %150 = fsub float 1.000000e+00, %147
  %151 = fmul float %150, 5.100000e+01
  %152 = fcmp ult float %151, 0.000000e+00
  %153 = fadd float %151, 5.000000e-01
  %154 = call float @llvm.floor.f32(float %153) #17
  %155 = fadd float %151, -5.000000e-01
  %156 = call float @llvm.ceil.f32(float %155) #17
  %157 = select i1 %152, float %156, float %154
  %158 = fcmp ule float %157, -1.000000e+00
  %159 = fcmp ugt float %157, 2.550000e+02
  %160 = fptoui float %157 to i8
  %161 = select i1 %158, i8 0, i8 %160
  %162 = xor i1 %158, true
  %163 = sext i1 %162 to i8
  %164 = select i1 %159, i8 %163, i8 %161
  %165 = zext i8 %164 to i32
  br label %166

166:                                              ; preds = %149, %129
  %167 = phi i32 [ %165, %149 ], [ 0, %129 ]
  %168 = shl nuw i32 %167, 24
  %169 = or i32 %168, %140
  %170 = bitcast %"class.std::__1::vector.55"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %170) #17, !noalias !139
  %171 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %3, i64 0, i32 0, i32 0
  %172 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %3, i64 0, i32 0, i32 1
  %173 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %170, i8 0, i64 24, i1 false) #17, !noalias !139
  %174 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %174) #17, !noalias !139
  %175 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %176 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %177 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %174, i8 0, i64 24, i1 false) #17, !noalias !139
  %178 = load i32, i32* %104, align 4, !noalias !139
  %179 = icmp eq i32 %178, 0
  %180 = load i32, i32* %105, align 4
  %181 = icmp eq i32 %180, 0
  %182 = or i1 %179, %181
  br i1 %182, label %184, label %183

183:                                              ; preds = %166
  call fastcc void @_ZN3gfx12_GLOBAL__N_113AddFadeEffectERKNS_4RectES3_jjPNSt3__16vectorIfNS4_9allocatorIfEEEEPNS5_IjNS6_IjEEEE(%"class.gfx::Rect"* nonnull dereferenceable(16) %10, %"class.gfx::Rect"* nonnull dereferenceable(16) %8, i32 %169, i32 %141, %"class.std::__1::vector.55"* nonnull %3, %"class.std::__1::vector"* nonnull %4) #17
  br label %184

184:                                              ; preds = %183, %166
  %185 = load i32, i32* %107, align 4, !noalias !139
  %186 = icmp eq i32 %185, 0
  %187 = load i32, i32* %108, align 4
  %188 = icmp eq i32 %187, 0
  %189 = or i1 %186, %188
  br i1 %189, label %191, label %190

190:                                              ; preds = %184
  call fastcc void @_ZN3gfx12_GLOBAL__N_113AddFadeEffectERKNS_4RectES3_jjPNSt3__16vectorIfNS4_9allocatorIfEEEEPNS5_IjNS6_IjEEEE(%"class.gfx::Rect"* nonnull dereferenceable(16) %10, %"class.gfx::Rect"* nonnull dereferenceable(16) %9, i32 %141, i32 %169, %"class.std::__1::vector.55"* nonnull %3, %"class.std::__1::vector"* nonnull %4) #17
  br label %191

191:                                              ; preds = %190, %184
  %192 = load float*, float** %172, align 8, !noalias !139
  %193 = getelementptr inbounds float, float* %192, i64 -1
  %194 = load float, float* %193, align 4, !noalias !139
  %195 = fcmp une float %194, 1.000000e+00
  %196 = ptrtoint float* %192 to i64
  br i1 %195, label %199, label %197

197:                                              ; preds = %191
  %198 = bitcast i32** %176 to i64*
  br label %312

199:                                              ; preds = %191
  %200 = load float*, float** %173, align 8, !noalias !139
  %201 = icmp ult float* %192, %200
  %202 = ptrtoint float* %200 to i64
  br i1 %201, label %203, label %208

203:                                              ; preds = %199
  %204 = bitcast float* %192 to i32*
  store i32 1065353216, i32* %204, align 4
  %205 = getelementptr inbounds float, float* %192, i64 1
  %206 = ptrtoint float* %205 to i64
  %207 = bitcast float** %172 to i64*
  store i64 %206, i64* %207, align 8, !noalias !139
  br label %254

208:                                              ; preds = %199
  %209 = bitcast float** %172 to i64*
  %210 = bitcast %"class.std::__1::vector.55"* %3 to i64*
  %211 = load i64, i64* %210, align 8, !noalias !139
  %212 = sub i64 %196, %211
  %213 = ashr exact i64 %212, 2
  %214 = add nsw i64 %213, 1
  %215 = icmp ugt i64 %214, 4611686018427387903
  br i1 %215, label %216, label %218

216:                                              ; preds = %208
  %217 = bitcast %"class.std::__1::vector.55"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %217) #19
  unreachable

218:                                              ; preds = %208
  %219 = bitcast float** %173 to i64*
  %220 = sub i64 %202, %211
  %221 = ashr exact i64 %220, 2
  %222 = icmp ult i64 %221, 2305843009213693951
  br i1 %222, label %223, label %231

223:                                              ; preds = %218
  %224 = ashr exact i64 %220, 1
  %225 = icmp ult i64 %224, %214
  %226 = select i1 %225, i64 %214, i64 %224
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %236, label %228

228:                                              ; preds = %223
  %229 = icmp ugt i64 %226, 4611686018427387903
  br i1 %229, label %230, label %231

230:                                              ; preds = %228
  call void @abort() #19
  unreachable

231:                                              ; preds = %228, %218
  %232 = phi i64 [ %226, %228 ], [ 4611686018427387903, %218 ]
  %233 = shl i64 %232, 2
  %234 = call i8* @_Znwm(i64 %233) #18
  %235 = bitcast i8* %234 to float*
  br label %236

236:                                              ; preds = %231, %223
  %237 = phi i64 [ %232, %231 ], [ 0, %223 ]
  %238 = phi i8* [ %234, %231 ], [ null, %223 ]
  %239 = phi float* [ %235, %231 ], [ null, %223 ]
  %240 = getelementptr inbounds float, float* %239, i64 %213
  %241 = getelementptr inbounds float, float* %239, i64 %237
  %242 = ptrtoint float* %241 to i64
  %243 = bitcast float* %240 to i32*
  store i32 1065353216, i32* %243, align 4, !noalias !139
  %244 = getelementptr inbounds float, float* %240, i64 1
  %245 = ptrtoint float* %244 to i64
  %246 = ptrtoint float* %239 to i64
  %247 = icmp sgt i64 %212, 0
  br i1 %247, label %248, label %250

248:                                              ; preds = %236
  %249 = inttoptr i64 %211 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %238, i8* align 4 %249, i64 %212, i1 false) #17
  br label %250

250:                                              ; preds = %248, %236
  store i64 %246, i64* %210, align 8, !noalias !139
  store i64 %245, i64* %209, align 8, !noalias !139
  store i64 %242, i64* %219, align 8, !noalias !139
  %251 = icmp eq i64 %211, 0
  br i1 %251, label %254, label %252

252:                                              ; preds = %250
  %253 = inttoptr i64 %211 to i8*
  call void @_ZdlPv(i8* %253) #18
  br label %254

254:                                              ; preds = %252, %250, %203
  %255 = load i32*, i32** %176, align 8, !noalias !139
  %256 = getelementptr inbounds i32, i32* %255, i64 -1
  %257 = load i32*, i32** %177, align 8, !noalias !139
  %258 = icmp eq i32* %255, %257
  %259 = ptrtoint i32* %257 to i64
  br i1 %258, label %265, label %260

260:                                              ; preds = %254
  %261 = load i32, i32* %256, align 4
  store i32 %261, i32* %255, align 4
  %262 = getelementptr inbounds i32, i32* %255, i64 1
  %263 = ptrtoint i32* %262 to i64
  %264 = bitcast i32** %176 to i64*
  store i64 %263, i64* %264, align 8, !noalias !139
  br label %312

265:                                              ; preds = %254
  %266 = ptrtoint i32* %255 to i64
  %267 = bitcast i32** %176 to i64*
  %268 = bitcast %"class.std::__1::vector"* %4 to i64*
  %269 = load i64, i64* %268, align 8, !noalias !139
  %270 = sub i64 %266, %269
  %271 = ashr exact i64 %270, 2
  %272 = add nsw i64 %271, 1
  %273 = icmp ugt i64 %272, 4611686018427387903
  br i1 %273, label %274, label %276

274:                                              ; preds = %265
  %275 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %275) #19
  unreachable

276:                                              ; preds = %265
  %277 = bitcast i32** %177 to i64*
  %278 = sub i64 %259, %269
  %279 = ashr exact i64 %278, 2
  %280 = icmp ult i64 %279, 2305843009213693951
  br i1 %280, label %281, label %289

281:                                              ; preds = %276
  %282 = ashr exact i64 %278, 1
  %283 = icmp ult i64 %282, %272
  %284 = select i1 %283, i64 %272, i64 %282
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %294, label %286

286:                                              ; preds = %281
  %287 = icmp ugt i64 %284, 4611686018427387903
  br i1 %287, label %288, label %289

288:                                              ; preds = %286
  call void @abort() #19
  unreachable

289:                                              ; preds = %286, %276
  %290 = phi i64 [ %284, %286 ], [ 4611686018427387903, %276 ]
  %291 = shl i64 %290, 2
  %292 = call i8* @_Znwm(i64 %291) #18
  %293 = bitcast i8* %292 to i32*
  br label %294

294:                                              ; preds = %289, %281
  %295 = phi i64 [ %290, %289 ], [ 0, %281 ]
  %296 = phi i8* [ %292, %289 ], [ null, %281 ]
  %297 = phi i32* [ %293, %289 ], [ null, %281 ]
  %298 = getelementptr inbounds i32, i32* %297, i64 %271
  %299 = getelementptr inbounds i32, i32* %297, i64 %295
  %300 = ptrtoint i32* %299 to i64
  %301 = load i32, i32* %256, align 4
  store i32 %301, i32* %298, align 4, !noalias !139
  %302 = getelementptr inbounds i32, i32* %298, i64 1
  %303 = ptrtoint i32* %302 to i64
  %304 = ptrtoint i32* %297 to i64
  %305 = icmp sgt i64 %270, 0
  br i1 %305, label %306, label %308

306:                                              ; preds = %294
  %307 = inttoptr i64 %269 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %296, i8* align 4 %307, i64 %270, i1 false) #17
  br label %308

308:                                              ; preds = %306, %294
  store i64 %304, i64* %268, align 8, !noalias !139
  store i64 %303, i64* %267, align 8, !noalias !139
  store i64 %300, i64* %277, align 8, !noalias !139
  %309 = icmp eq i64 %269, 0
  br i1 %309, label %312, label %310

310:                                              ; preds = %308
  %311 = inttoptr i64 %269 to i8*
  call void @_ZdlPv(i8* %311) #18
  br label %312

312:                                              ; preds = %310, %308, %260, %197
  %313 = phi i64* [ %198, %197 ], [ %267, %310 ], [ %267, %308 ], [ %264, %260 ]
  %314 = bitcast [2 x %struct.SkPoint]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %314) #17, !noalias !139
  %315 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %5, i64 0, i64 0
  %316 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %10, i64 0, i32 0
  %317 = call <2 x float> @_ZN3gfx14PointToSkPointERKNS_5PointE(%"class.gfx::Point"* nonnull dereferenceable(8) %316) #17, !noalias !139
  %318 = bitcast [2 x %struct.SkPoint]* %5 to <2 x float>*
  store <2 x float> %317, <2 x float>* %318, align 16, !noalias !139
  %319 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %5, i64 0, i64 1
  %320 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %320) #17, !noalias !139
  %321 = load i32, i32* %131, align 4, !noalias !139
  %322 = load i32, i32* %133, align 4, !noalias !139
  %323 = add nsw i32 %322, %321
  %324 = load i32, i32* %132, align 4, !noalias !139
  %325 = zext i32 %324 to i64
  %326 = shl nuw i64 %325, 32
  %327 = zext i32 %323 to i64
  %328 = or i64 %326, %327
  store i64 %328, i64* %6, align 8, !noalias !139
  %329 = call <2 x float> @_ZN3gfx14PointToSkPointERKNS_5PointE(%"class.gfx::Point"* nonnull dereferenceable(8) %142) #17, !noalias !139
  %330 = bitcast %struct.SkPoint* %319 to <2 x float>*
  store <2 x float> %329, <2 x float>* %330, align 8, !noalias !139
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %320) #17, !noalias !139
  %331 = load i32*, i32** %175, align 8, !noalias !139
  %332 = load float*, float** %171, align 8, !noalias !139
  %333 = load i64, i64* %313, align 8, !noalias !139
  %334 = ptrtoint i32* %331 to i64
  %335 = sub i64 %333, %334
  %336 = lshr exact i64 %335, 2
  %337 = trunc i64 %336 to i32
  call void @_ZN2cc11PaintShader18MakeLinearGradientEPK7SkPointPKjPKfi10SkTileModejPK8SkMatrixj(%class.sk_sp.33* nonnull sret %11, %struct.SkPoint* nonnull %315, i32* %331, float* %332, i32 %337, i32 0, i32 0, %class.SkMatrix* null, i32 0) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %314) #17, !noalias !139
  %338 = load i32*, i32** %175, align 8, !noalias !139
  %339 = icmp eq i32* %338, null
  br i1 %339, label %343, label %340

340:                                              ; preds = %312
  %341 = ptrtoint i32* %338 to i64
  store i64 %341, i64* %313, align 8, !noalias !139
  %342 = bitcast i32* %338 to i8*
  call void @_ZdlPv(i8* %342) #18
  br label %343

343:                                              ; preds = %340, %312
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %174) #17, !noalias !139
  %344 = load float*, float** %171, align 8, !noalias !139
  %345 = icmp eq float* %344, null
  br i1 %345, label %350, label %346

346:                                              ; preds = %343
  %347 = ptrtoint float* %344 to i64
  %348 = bitcast float** %172 to i64*
  store i64 %347, i64* %348, align 8, !noalias !139
  %349 = bitcast float* %344 to i8*
  call void @_ZdlPv(i8* %349) #18
  br label %350

350:                                              ; preds = %343, %346
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %170) #17, !noalias !139
  %351 = getelementptr inbounds %class.sk_sp.33, %class.sk_sp.33* %11, i64 0, i32 0
  %352 = bitcast %class.sk_sp.33* %11 to i64*
  %353 = load i64, i64* %352, align 8
  store %"class.cc::PaintShader"* null, %"class.cc::PaintShader"** %351, align 8
  %354 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %1, i64 0, i32 3, i32 1
  %355 = getelementptr inbounds %class.sk_sp.33, %class.sk_sp.33* %354, i64 0, i32 0
  %356 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %355, align 8
  %357 = bitcast %class.sk_sp.33* %354 to i64*
  store i64 %353, i64* %357, align 8
  %358 = icmp eq %"class.cc::PaintShader"* %356, null
  br i1 %358, label %369, label %359

359:                                              ; preds = %350
  %360 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %356, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %361 = atomicrmw add i32* %360, i32 -1 acq_rel
  %362 = icmp eq i32 %361, 1
  br i1 %362, label %363, label %369

363:                                              ; preds = %359
  %364 = bitcast %"class.cc::PaintShader"* %356 to %class.SkRefCntBase*
  %365 = bitcast %"class.cc::PaintShader"* %356 to void (%class.SkRefCntBase*)***
  %366 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %365, align 8
  %367 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %366, i64 2
  %368 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %367, align 8
  call void %368(%class.SkRefCntBase* nonnull %364) #17
  br label %369

369:                                              ; preds = %350, %359, %363
  %370 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %351, align 8
  %371 = icmp eq %"class.cc::PaintShader"* %370, null
  br i1 %371, label %382, label %372

372:                                              ; preds = %369
  %373 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %370, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %374 = atomicrmw add i32* %373, i32 -1 acq_rel
  %375 = icmp eq i32 %374, 1
  br i1 %375, label %376, label %382

376:                                              ; preds = %372
  %377 = bitcast %"class.cc::PaintShader"* %370 to %class.SkRefCntBase*
  %378 = bitcast %"class.cc::PaintShader"* %370 to void (%class.SkRefCntBase*)***
  %379 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %378, align 8
  %380 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %379, i64 2
  %381 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %380, align 8
  call void %381(%class.SkRefCntBase* nonnull %377) #17
  br label %382

382:                                              ; preds = %369, %372, %376
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %130) #17
  br label %383

383:                                              ; preds = %123, %382
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %106) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %100) #17
  br label %384

384:                                              ; preds = %2, %383, %44, %18, %22
  ret void
}

declare void @_ZN3gfx4Rect5InsetEiiii(%"class.gfx::Rect"*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText16ApplyTextShadowsEPNS_8internal16SkiaTextRendererE(%"class.gfx::RenderText"*, %"class.gfx::internal::SkiaTextRenderer"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.69, align 8
  %4 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %0, i64 0, i32 57
  call void @_ZN3gfx22CreateShadowDrawLooperERKNSt3__16vectorINS_11ShadowValueENS0_9allocatorIS2_EEEE(%class.sk_sp.69* nonnull sret %3, %"class.std::__1::vector.176"* dereferenceable(24) %4) #17
  %5 = getelementptr inbounds %class.sk_sp.69, %class.sk_sp.69* %3, i64 0, i32 0
  %6 = bitcast %class.sk_sp.69* %3 to i64*
  %7 = load i64, i64* %6, align 8
  store %class.SkDrawLooper* null, %class.SkDrawLooper** %5, align 8
  %8 = getelementptr inbounds %"class.gfx::internal::SkiaTextRenderer", %"class.gfx::internal::SkiaTextRenderer"* %1, i64 0, i32 3, i32 4
  %9 = getelementptr inbounds %class.sk_sp.69, %class.sk_sp.69* %8, i64 0, i32 0
  %10 = load %class.SkDrawLooper*, %class.SkDrawLooper** %9, align 8
  %11 = bitcast %class.sk_sp.69* %8 to i64*
  store i64 %7, i64* %11, align 8
  %12 = icmp eq %class.SkDrawLooper* %10, null
  br i1 %12, label %23, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %class.SkDrawLooper, %class.SkDrawLooper* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 -1 acq_rel
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %23

17:                                               ; preds = %13
  %18 = bitcast %class.SkDrawLooper* %10 to %class.SkRefCntBase*
  %19 = bitcast %class.SkDrawLooper* %10 to void (%class.SkRefCntBase*)***
  %20 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %20, i64 2
  %22 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %21, align 8
  call void %22(%class.SkRefCntBase* nonnull %18) #17
  br label %23

23:                                               ; preds = %2, %13, %17
  %24 = load %class.SkDrawLooper*, %class.SkDrawLooper** %5, align 8
  %25 = icmp eq %class.SkDrawLooper* %24, null
  br i1 %25, label %36, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %class.SkDrawLooper, %class.SkDrawLooper* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw add i32* %27, i32 -1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %36

30:                                               ; preds = %26
  %31 = bitcast %class.SkDrawLooper* %24 to %class.SkRefCntBase*
  %32 = bitcast %class.SkDrawLooper* %24 to void (%class.SkRefCntBase*)***
  %33 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %32, align 8
  %34 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %33, i64 2
  %35 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %34, align 8
  call void %35(%class.SkRefCntBase* nonnull %31) #17
  br label %36

36:                                               ; preds = %23, %26, %30
  ret void
}

declare void @_ZN3gfx22CreateShadowDrawLooperERKNSt3__16vectorINS_11ShadowValueENS0_9allocatorIS2_EEEE(%class.sk_sp.69* sret, %"class.std::__1::vector.176"* dereferenceable(24)) local_unnamed_addr #1

declare i32 @_ZN4base4i18n32GetFirstStrongCharacterDirectionERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare i32 @_ZNK3gfx8FontList9GetHeightEv(%"class.gfx::FontList"*) local_unnamed_addr #1

declare i32 @_ZNK3gfx8FontList11GetBaselineEv(%"class.gfx::FontList"*) local_unnamed_addr #1

declare i32 @_ZNK3gfx8FontList12GetCapHeightEv(%"class.gfx::FontList"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3gfx10RenderText29ExpandToBeVerticallySymmetricERKNS_4RectES3_(%"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"class.gfx::Rect"*
  %5 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 1
  %8 = bitcast { i64, i64 }* %3 to i8*
  %9 = bitcast %"class.gfx::Rect"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 4 %9, i64 16, i1 false)
  %10 = tail call i64 @_ZNK3gfx4Rect11CenterPointEv(%"class.gfx::Rect"* %1) #17
  %11 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = lshr i64 %10, 31
  %16 = trunc i64 %15 to i32
  %17 = and i32 %16, -2
  %18 = add i32 %14, %12
  %19 = sub i32 %17, %18
  store i32 %19, i32* %5, align 4
  %20 = load i32, i32* %7, align 4
  %21 = icmp sgt i32 %19, 0
  %22 = icmp sgt i32 %20, 0
  %23 = and i1 %22, %21
  %24 = sub nuw nsw i32 2147483647, %19
  %25 = icmp ult i32 %24, %20
  %26 = and i1 %25, %23
  %27 = select i1 %26, i32 %24, i32 %20
  %28 = icmp sgt i32 %27, 0
  %29 = select i1 %28, i32 %27, i32 0
  store i32 %29, i32* %7, align 4
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* nonnull %4, %"class.gfx::Rect"* dereferenceable(16) %0) #17
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = insertvalue { i64, i64 } undef, i64 %31, 0
  %33 = load i64, i64* %6, align 8
  %34 = insertvalue { i64, i64 } %32, i64 %33, 1
  ret { i64, i64 } %34
}

declare void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText22MergeIntersectingRectsERNSt3__16vectorINS_4RectENS1_9allocatorIS3_EEEE(%"class.std::__1::vector.269"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.std::__1::vector.269", %"class.std::__1::vector.269"* %0, i64 0, i32 0, i32 1
  %3 = bitcast %"class.gfx::Rect"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.std::__1::vector.269"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = ashr exact i64 %7, 4
  %9 = icmp ult i64 %8, 2
  br i1 %9, label %68, label %10

10:                                               ; preds = %1
  %11 = inttoptr i64 %4 to %"class.gfx::Rect"*
  %12 = inttoptr i64 %6 to %"class.gfx::Rect"*
  %13 = getelementptr inbounds %"class.std::__1::vector.269", %"class.std::__1::vector.269"* %0, i64 0, i32 0, i32 0
  tail call fastcc void @"_ZNSt3__16__sortIRZN3gfx10RenderText22MergeIntersectingRectsERNS_6vectorINS1_4RectENS_9allocatorIS4_EEEEE3$_6PS4_EEvT0_SC_T_"(%"class.gfx::Rect"* %12, %"class.gfx::Rect"* %11) #17
  %14 = load i64, i64* %3, align 8
  %15 = load i64, i64* %5, align 8
  %16 = sub i64 %14, %15
  %17 = ashr exact i64 %16, 4
  %18 = icmp ugt i64 %17, 1
  %19 = inttoptr i64 %15 to %"class.gfx::Rect"*
  br i1 %18, label %34, label %22

20:                                               ; preds = %59
  %21 = inttoptr i64 %63 to %"class.gfx::Rect"*
  br label %22

22:                                               ; preds = %20, %10
  %23 = phi %"class.gfx::Rect"* [ %19, %10 ], [ %21, %20 ]
  %24 = phi i64 [ 0, %10 ], [ %60, %20 ]
  %25 = phi i64 [ %17, %10 ], [ %65, %20 ]
  %26 = add i64 %24, 1
  %27 = icmp ugt i64 %26, %25
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = sub i64 %26, %25
  tail call void @_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.269"* %0, i64 %29) #17
  br label %68

30:                                               ; preds = %22
  %31 = icmp ult i64 %26, %25
  br i1 %31, label %32, label %68

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %23, i64 %26
  store %"class.gfx::Rect"* %33, %"class.gfx::Rect"** %2, align 8
  br label %68

34:                                               ; preds = %10, %59
  %35 = phi %"class.gfx::Rect"* [ %67, %59 ], [ %19, %10 ]
  %36 = phi i64 [ %61, %59 ], [ 1, %10 ]
  %37 = phi i64 [ %60, %59 ], [ 0, %10 ]
  %38 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %35, i64 %36
  %39 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %35, i64 %37
  %40 = tail call zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"* %38, %"class.gfx::Rect"* dereferenceable(16) %39) #17
  br i1 %40, label %46, label %41

41:                                               ; preds = %34
  %42 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %13, align 8
  %43 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %42, i64 %36
  %44 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %42, i64 %37
  %45 = tail call zeroext i1 @_ZNK3gfx4Rect14SharesEdgeWithERKS0_(%"class.gfx::Rect"* %43, %"class.gfx::Rect"* dereferenceable(16) %44) #17
  br i1 %45, label %46, label %50

46:                                               ; preds = %41, %34
  %47 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %13, align 8
  %48 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %47, i64 %37
  %49 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %47, i64 %36
  tail call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* %48, %"class.gfx::Rect"* dereferenceable(16) %49) #17
  br label %59

50:                                               ; preds = %41
  %51 = add i64 %37, 1
  %52 = icmp eq i64 %51, %36
  br i1 %52, label %59, label %53

53:                                               ; preds = %50
  %54 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %13, align 8
  %55 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %54, i64 %36
  %56 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %54, i64 %51
  %57 = bitcast %"class.gfx::Rect"* %56 to i8*
  %58 = bitcast %"class.gfx::Rect"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %57, i8* align 4 %58, i64 16, i1 false)
  br label %59

59:                                               ; preds = %50, %46, %53
  %60 = phi i64 [ %37, %46 ], [ %51, %53 ], [ %36, %50 ]
  %61 = add nuw i64 %36, 1
  %62 = load i64, i64* %3, align 8
  %63 = load i64, i64* %5, align 8
  %64 = sub i64 %62, %63
  %65 = ashr exact i64 %64, 4
  %66 = icmp ult i64 %61, %65
  %67 = inttoptr i64 %63 to %"class.gfx::Rect"*
  br i1 %66, label %34, label %20

68:                                               ; preds = %32, %30, %28, %1
  ret void
}

declare zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZNK3gfx4Rect14SharesEdgeWithERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10RenderText10ElideEmailERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEf(%"class.std::__1::basic_string"* noalias sret, %"class.gfx::RenderText"*, %"class.std::__1::basic_string"* dereferenceable(24), float) local_unnamed_addr #11 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %20, i64 0, i32 1, i32 1
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i16*, i16** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %29 = zext i8 %22 to i64
  %30 = select i1 %23, i16* %25, i16* %28
  %31 = select i1 %23, i64 %27, i64 %29
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %48, label %33

33:                                               ; preds = %4
  %34 = getelementptr inbounds i16, i16* %30, i64 %31
  br label %35

35:                                               ; preds = %38, %33
  %36 = phi i16* [ %34, %33 ], [ %39, %38 ]
  %37 = icmp eq i16* %36, %30
  br i1 %37, label %48, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds i16, i16* %36, i64 -1
  %40 = load i16, i16* %39, align 2
  %41 = icmp eq i16 %40, 64
  br i1 %41, label %42, label %35

42:                                               ; preds = %38
  %43 = ptrtoint i16* %39 to i64
  %44 = ptrtoint i16* %30 to i64
  %45 = sub i64 %43, %44
  %46 = ashr exact i64 %45, 1
  %47 = icmp eq i64 %45, -2
  br i1 %47, label %48, label %49

48:                                               ; preds = %35, %4, %42
  tail call void @_ZN3gfx10RenderText5ElideERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEffNS_13ElideBehaviorE(%"class.std::__1::basic_string"* sret %0, %"class.gfx::RenderText"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %2, float 0.000000e+00, float %3, i32 4)
  br label %1566

49:                                               ; preds = %42
  %50 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #17
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::allocator.154"*
  %54 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %2, i64 0, i64 %46, %"class.std::__1::allocator.154"* dereferenceable(1) %53) #17
  %55 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #17
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = add nsw i64 %46, 1
  %59 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %6, %"class.std::__1::basic_string"* dereferenceable(24) %2, i64 %58, i64 -1, %"class.std::__1::allocator.154"* dereferenceable(1) %53) #17
  %60 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 24, i1 false) #17
  %61 = call %"class.gfx::RenderText"* @_ZNK3gfx10RenderText25CreateInstanceOfSameStyleERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.gfx::RenderText"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7)
  %62 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %62, i64 0, i32 1, i32 1
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %49
  %67 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  %68 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %68) #18
  br label %69

69:                                               ; preds = %49, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #17
  %70 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #17
  %71 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 24, i1 false)
  %72 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %72, i64 0, i32 1, i32 1
  store i8 1, i8* %73, align 1
  %74 = bitcast %"class.std::__1::basic_string"* %8 to i16*
  store i16 64, i16* %74, align 8
  %75 = getelementptr inbounds i16, i16* %74, i64 1
  store i16 0, i16* %75, align 2
  call void @_ZN3gfx10RenderText7SetTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.gfx::RenderText"* %61, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #17
  %76 = bitcast %"class.gfx::RenderText"* %61 to <2 x float> (%"class.gfx::RenderText"*)***
  %77 = load <2 x float> (%"class.gfx::RenderText"*)**, <2 x float> (%"class.gfx::RenderText"*)*** %76, align 8
  %78 = getelementptr inbounds <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %77, i64 3
  %79 = load <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %78, align 8
  %80 = call <2 x float> %79(%"class.gfx::RenderText"* %61) #17
  %81 = extractelement <2 x float> %80, i32 0
  %82 = fcmp ogt float %81, %3
  br i1 %82, label %83, label %290

83:                                               ; preds = %69
  %84 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #17
  %85 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 0), align 2
  %86 = icmp eq i16 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %83
  %88 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %88, i64 0, i32 1, i32 1
  store i8 0, i8* %89, align 1
  %90 = bitcast %"class.std::__1::basic_string"* %9 to i16*
  br label %278

91:                                               ; preds = %83, %91
  %92 = phi i64 [ %94, %91 ], [ 0, %83 ]
  %93 = phi i16* [ %95, %91 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 0), %83 ]
  %94 = add i64 %92, 1
  %95 = getelementptr inbounds i16, i16* %93, i64 1
  %96 = load i16, i16* %95, align 2
  %97 = icmp eq i16 %96, 0
  br i1 %97, label %98, label %91

98:                                               ; preds = %91
  %99 = icmp ugt i64 %94, 9223372036854775791
  br i1 %99, label %100, label %102

100:                                              ; preds = %98
  %101 = bitcast %"class.std::__1::basic_string"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %101) #19
  unreachable

102:                                              ; preds = %98
  %103 = icmp ult i64 %94, 11
  br i1 %103, label %117, label %104

104:                                              ; preds = %102
  %105 = add nuw nsw i64 %92, 9
  %106 = and i64 %105, -8
  %107 = icmp slt i64 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %104
  call void @abort() #19
  unreachable

109:                                              ; preds = %104
  %110 = shl i64 %106, 1
  %111 = call i8* @_Znwm(i64 %110) #18
  %112 = bitcast i8* %111 to i16*
  %113 = bitcast %"class.std::__1::basic_string"* %9 to i8**
  store i8* %111, i8** %113, align 8
  %114 = or i64 %106, -9223372036854775808
  %115 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %94, i64* %116, align 8
  br label %123

117:                                              ; preds = %102
  %118 = trunc i64 %94 to i8
  %119 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %119, i64 0, i32 1, i32 1
  store i8 %118, i8* %120, align 1
  %121 = bitcast %"class.std::__1::basic_string"* %9 to i16*
  %122 = icmp eq i64 %94, 0
  br i1 %122, label %278, label %123

123:                                              ; preds = %117, %109
  %124 = phi i16* [ %112, %109 ], [ %121, %117 ]
  store i16 %85, i16* %124, align 2
  %125 = icmp eq i64 %92, 0
  br i1 %125, label %276, label %126

126:                                              ; preds = %123
  %127 = icmp ult i64 %92, 16
  br i1 %127, label %223, label %128

128:                                              ; preds = %126
  %129 = getelementptr i16, i16* %124, i64 1
  %130 = getelementptr i16, i16* %124, i64 %94
  %131 = getelementptr [0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 %94
  %132 = icmp ult i16* %129, %131
  %133 = icmp ugt i16* %130, getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1)
  %134 = and i1 %132, %133
  br i1 %134, label %223, label %135

135:                                              ; preds = %128
  %136 = and i64 %92, -16
  %137 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %136
  %138 = sub i64 %92, %136
  %139 = getelementptr i16, i16* %124, i64 %136
  %140 = add i64 %136, -16
  %141 = lshr exact i64 %140, 4
  %142 = add nuw nsw i64 %141, 1
  %143 = and i64 %142, 3
  %144 = icmp ult i64 %140, 48
  br i1 %144, label %200, label %145

145:                                              ; preds = %135
  %146 = sub nsw i64 %142, %143
  %147 = getelementptr i16, i16* %124, i64 1
  %148 = getelementptr i16, i16* %124, i64 1
  %149 = getelementptr i16, i16* %124, i64 1
  %150 = getelementptr i16, i16* %124, i64 1
  br label %151

151:                                              ; preds = %151, %145
  %152 = phi i64 [ 0, %145 ], [ %197, %151 ]
  %153 = phi i64 [ %146, %145 ], [ %198, %151 ]
  %154 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %152
  %155 = getelementptr inbounds i16, i16* %147, i64 %152
  %156 = bitcast i16* %154 to <8 x i16>*
  %157 = load <8 x i16>, <8 x i16>* %156, align 2, !alias.scope !142
  %158 = getelementptr i16, i16* %154, i64 8
  %159 = bitcast i16* %158 to <8 x i16>*
  %160 = load <8 x i16>, <8 x i16>* %159, align 2, !alias.scope !142
  %161 = bitcast i16* %155 to <8 x i16>*
  store <8 x i16> %157, <8 x i16>* %161, align 2, !alias.scope !145, !noalias !142
  %162 = getelementptr inbounds i16, i16* %155, i64 8
  %163 = bitcast i16* %162 to <8 x i16>*
  store <8 x i16> %160, <8 x i16>* %163, align 2, !alias.scope !145, !noalias !142
  %164 = or i64 %152, 16
  %165 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %164
  %166 = getelementptr inbounds i16, i16* %148, i64 %164
  %167 = bitcast i16* %165 to <8 x i16>*
  %168 = load <8 x i16>, <8 x i16>* %167, align 2, !alias.scope !142
  %169 = getelementptr i16, i16* %165, i64 8
  %170 = bitcast i16* %169 to <8 x i16>*
  %171 = load <8 x i16>, <8 x i16>* %170, align 2, !alias.scope !142
  %172 = bitcast i16* %166 to <8 x i16>*
  store <8 x i16> %168, <8 x i16>* %172, align 2, !alias.scope !145, !noalias !142
  %173 = getelementptr inbounds i16, i16* %166, i64 8
  %174 = bitcast i16* %173 to <8 x i16>*
  store <8 x i16> %171, <8 x i16>* %174, align 2, !alias.scope !145, !noalias !142
  %175 = or i64 %152, 32
  %176 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %175
  %177 = getelementptr inbounds i16, i16* %149, i64 %175
  %178 = bitcast i16* %176 to <8 x i16>*
  %179 = load <8 x i16>, <8 x i16>* %178, align 2, !alias.scope !142
  %180 = getelementptr i16, i16* %176, i64 8
  %181 = bitcast i16* %180 to <8 x i16>*
  %182 = load <8 x i16>, <8 x i16>* %181, align 2, !alias.scope !142
  %183 = bitcast i16* %177 to <8 x i16>*
  store <8 x i16> %179, <8 x i16>* %183, align 2, !alias.scope !145, !noalias !142
  %184 = getelementptr inbounds i16, i16* %177, i64 8
  %185 = bitcast i16* %184 to <8 x i16>*
  store <8 x i16> %182, <8 x i16>* %185, align 2, !alias.scope !145, !noalias !142
  %186 = or i64 %152, 48
  %187 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %186
  %188 = getelementptr inbounds i16, i16* %150, i64 %186
  %189 = bitcast i16* %187 to <8 x i16>*
  %190 = load <8 x i16>, <8 x i16>* %189, align 2, !alias.scope !142
  %191 = getelementptr i16, i16* %187, i64 8
  %192 = bitcast i16* %191 to <8 x i16>*
  %193 = load <8 x i16>, <8 x i16>* %192, align 2, !alias.scope !142
  %194 = bitcast i16* %188 to <8 x i16>*
  store <8 x i16> %190, <8 x i16>* %194, align 2, !alias.scope !145, !noalias !142
  %195 = getelementptr inbounds i16, i16* %188, i64 8
  %196 = bitcast i16* %195 to <8 x i16>*
  store <8 x i16> %193, <8 x i16>* %196, align 2, !alias.scope !145, !noalias !142
  %197 = add i64 %152, 64
  %198 = add i64 %153, -4
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %200, label %151, !llvm.loop !147

200:                                              ; preds = %151, %135
  %201 = phi i64 [ 0, %135 ], [ %197, %151 ]
  %202 = icmp eq i64 %143, 0
  br i1 %202, label %221, label %203

203:                                              ; preds = %200
  %204 = getelementptr i16, i16* %124, i64 1
  br label %205

205:                                              ; preds = %205, %203
  %206 = phi i64 [ %201, %203 ], [ %218, %205 ]
  %207 = phi i64 [ %143, %203 ], [ %219, %205 ]
  %208 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %206
  %209 = getelementptr inbounds i16, i16* %204, i64 %206
  %210 = bitcast i16* %208 to <8 x i16>*
  %211 = load <8 x i16>, <8 x i16>* %210, align 2, !alias.scope !142
  %212 = getelementptr i16, i16* %208, i64 8
  %213 = bitcast i16* %212 to <8 x i16>*
  %214 = load <8 x i16>, <8 x i16>* %213, align 2, !alias.scope !142
  %215 = bitcast i16* %209 to <8 x i16>*
  store <8 x i16> %211, <8 x i16>* %215, align 2, !alias.scope !145, !noalias !142
  %216 = getelementptr inbounds i16, i16* %209, i64 8
  %217 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %214, <8 x i16>* %217, align 2, !alias.scope !145, !noalias !142
  %218 = add i64 %206, 16
  %219 = add i64 %207, -1
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %221, label %205, !llvm.loop !148

221:                                              ; preds = %205, %200
  %222 = icmp eq i64 %92, %136
  br i1 %222, label %276, label %223

223:                                              ; preds = %221, %128, %126
  %224 = phi i16* [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), %128 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), %126 ], [ %137, %221 ]
  %225 = phi i64 [ %92, %128 ], [ %92, %126 ], [ %138, %221 ]
  %226 = phi i16* [ %124, %128 ], [ %124, %126 ], [ %139, %221 ]
  %227 = add i64 %225, -1
  %228 = and i64 %225, 7
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %241, label %230

230:                                              ; preds = %223, %230
  %231 = phi i16* [ %238, %230 ], [ %224, %223 ]
  %232 = phi i64 [ %237, %230 ], [ %225, %223 ]
  %233 = phi i16* [ %235, %230 ], [ %226, %223 ]
  %234 = phi i64 [ %239, %230 ], [ %228, %223 ]
  %235 = getelementptr inbounds i16, i16* %233, i64 1
  %236 = load i16, i16* %231, align 2
  store i16 %236, i16* %235, align 2
  %237 = add i64 %232, -1
  %238 = getelementptr inbounds i16, i16* %231, i64 1
  %239 = add i64 %234, -1
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %241, label %230, !llvm.loop !149

241:                                              ; preds = %230, %223
  %242 = phi i16* [ %224, %223 ], [ %238, %230 ]
  %243 = phi i64 [ %225, %223 ], [ %237, %230 ]
  %244 = phi i16* [ %226, %223 ], [ %235, %230 ]
  %245 = icmp ult i64 %227, 7
  br i1 %245, label %276, label %246

246:                                              ; preds = %241, %246
  %247 = phi i16* [ %274, %246 ], [ %242, %241 ]
  %248 = phi i64 [ %273, %246 ], [ %243, %241 ]
  %249 = phi i16* [ %271, %246 ], [ %244, %241 ]
  %250 = getelementptr inbounds i16, i16* %249, i64 1
  %251 = load i16, i16* %247, align 2
  store i16 %251, i16* %250, align 2
  %252 = getelementptr inbounds i16, i16* %247, i64 1
  %253 = getelementptr inbounds i16, i16* %249, i64 2
  %254 = load i16, i16* %252, align 2
  store i16 %254, i16* %253, align 2
  %255 = getelementptr inbounds i16, i16* %247, i64 2
  %256 = getelementptr inbounds i16, i16* %249, i64 3
  %257 = load i16, i16* %255, align 2
  store i16 %257, i16* %256, align 2
  %258 = getelementptr inbounds i16, i16* %247, i64 3
  %259 = getelementptr inbounds i16, i16* %249, i64 4
  %260 = load i16, i16* %258, align 2
  store i16 %260, i16* %259, align 2
  %261 = getelementptr inbounds i16, i16* %247, i64 4
  %262 = getelementptr inbounds i16, i16* %249, i64 5
  %263 = load i16, i16* %261, align 2
  store i16 %263, i16* %262, align 2
  %264 = getelementptr inbounds i16, i16* %247, i64 5
  %265 = getelementptr inbounds i16, i16* %249, i64 6
  %266 = load i16, i16* %264, align 2
  store i16 %266, i16* %265, align 2
  %267 = getelementptr inbounds i16, i16* %247, i64 6
  %268 = getelementptr inbounds i16, i16* %249, i64 7
  %269 = load i16, i16* %267, align 2
  store i16 %269, i16* %268, align 2
  %270 = getelementptr inbounds i16, i16* %247, i64 7
  %271 = getelementptr inbounds i16, i16* %249, i64 8
  %272 = load i16, i16* %270, align 2
  store i16 %272, i16* %271, align 2
  %273 = add i64 %248, -8
  %274 = getelementptr inbounds i16, i16* %247, i64 8
  %275 = icmp eq i64 %273, 0
  br i1 %275, label %276, label %246, !llvm.loop !150

276:                                              ; preds = %241, %246, %221, %123
  %277 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %278

278:                                              ; preds = %276, %87, %117
  %279 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %277, %276 ], [ %88, %87 ], [ %119, %117 ]
  %280 = phi i64 [ %94, %276 ], [ 0, %87 ], [ 0, %117 ]
  %281 = phi i16* [ %124, %276 ], [ %90, %87 ], [ %121, %117 ]
  %282 = getelementptr inbounds i16, i16* %281, i64 %280
  store i16 0, i16* %282, align 2
  call void @_ZN3gfx10RenderText5ElideERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEffNS_13ElideBehaviorE(%"class.std::__1::basic_string"* sret %0, %"class.gfx::RenderText"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, float 0.000000e+00, float %3, i32 4)
  %283 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %279, i64 0, i32 1, i32 1
  %284 = load i8, i8* %283, align 1
  %285 = icmp slt i8 %284, 0
  br i1 %285, label %286, label %289

286:                                              ; preds = %278
  %287 = bitcast %"class.std::__1::basic_string"* %9 to i8**
  %288 = load i8*, i8** %287, align 8
  call void @_ZdlPv(i8* %288) #18
  br label %289

289:                                              ; preds = %278, %286
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #17
  br label %1534

290:                                              ; preds = %69
  %291 = fsub float %3, %81
  %292 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %293 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %292, i64 0, i32 1, i32 1
  %294 = load i8, i8* %293, align 1
  %295 = icmp slt i8 %294, 0
  %296 = load i64, i64* %52, align 8
  %297 = zext i8 %294 to i64
  %298 = select i1 %295, i64 %296, i64 %297
  %299 = icmp eq i64 %298, 0
  %300 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %301 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %300, i64 0, i32 1, i32 1
  %302 = load i8, i8* %301, align 1
  %303 = icmp slt i8 %302, 0
  %304 = load i64, i64* %57, align 8
  %305 = zext i8 %302 to i64
  %306 = select i1 %303, i64 %304, i64 %305
  %307 = icmp eq i64 %306, 0
  br i1 %299, label %308, label %567

308:                                              ; preds = %290
  br i1 %307, label %309, label %310

309:                                              ; preds = %308
  call void @_ZN3gfx10RenderText5ElideERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEffNS_13ElideBehaviorE(%"class.std::__1::basic_string"* sret %0, %"class.gfx::RenderText"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %2, float 0.000000e+00, float %3, i32 4)
  br label %1534

310:                                              ; preds = %308
  %311 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %311) #17
  call void @_ZN3gfx10RenderText5ElideERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEffNS_13ElideBehaviorE(%"class.std::__1::basic_string"* nonnull sret %10, %"class.gfx::RenderText"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, float 0.000000e+00, float %291, i32 3)
  %312 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %313 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %312, i64 0, i32 1, i32 1
  %314 = load i8, i8* %313, align 1
  %315 = icmp slt i8 %314, 0
  br i1 %315, label %316, label %319

316:                                              ; preds = %310
  %317 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %318 = load i8*, i8** %317, align 8
  call void @_ZdlPv(i8* %318) #18
  br label %319

319:                                              ; preds = %316, %310
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %55, i8* nonnull align 8 %311, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %311) #17
  %320 = load i8, i8* %313, align 1
  %321 = icmp slt i8 %320, 0
  %322 = load i64, i64* %57, align 8
  %323 = zext i8 %320 to i64
  %324 = select i1 %321, i64 %322, i64 %323
  %325 = icmp eq i64 %324, 0
  %326 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 0), align 2
  br i1 %325, label %360, label %327

327:                                              ; preds = %319
  %328 = icmp eq i16 %326, 0
  br i1 %328, label %336, label %329

329:                                              ; preds = %327, %329
  %330 = phi i64 [ %332, %329 ], [ 0, %327 ]
  %331 = phi i16* [ %333, %329 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 0), %327 ]
  %332 = add i64 %330, 1
  %333 = getelementptr inbounds i16, i16* %331, i64 1
  %334 = load i16, i16* %333, align 2
  %335 = icmp eq i16 %334, 0
  br i1 %335, label %336, label %329

336:                                              ; preds = %329, %327
  %337 = phi i64 [ 0, %327 ], [ %332, %329 ]
  %338 = icmp eq i64 %337, %324
  br i1 %338, label %339, label %566

339:                                              ; preds = %336
  switch i64 %324, label %342 [
    i64 -1, label %340
    i64 0, label %360
  ]

340:                                              ; preds = %339
  %341 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* nonnull %341) #19
  unreachable

342:                                              ; preds = %339
  %343 = load i16*, i16** %56, align 8
  %344 = bitcast %"class.std::__1::basic_string"* %6 to i16*
  %345 = select i1 %321, i16* %343, i16* %344
  %346 = load i16, i16* %345, align 2
  %347 = icmp eq i16 %326, %346
  br i1 %347, label %348, label %566

348:                                              ; preds = %342, %355
  %349 = phi i16* [ %356, %355 ], [ %345, %342 ]
  %350 = phi i16* [ %353, %355 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 0), %342 ]
  %351 = phi i64 [ %352, %355 ], [ %324, %342 ]
  %352 = add i64 %351, -1
  %353 = getelementptr inbounds i16, i16* %350, i64 1
  %354 = icmp eq i64 %352, 0
  br i1 %354, label %360, label %355

355:                                              ; preds = %348
  %356 = getelementptr inbounds i16, i16* %349, i64 1
  %357 = load i16, i16* %353, align 2
  %358 = load i16, i16* %356, align 2
  %359 = icmp eq i16 %357, %358
  br i1 %359, label %348, label %566

360:                                              ; preds = %348, %319, %339
  %361 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %361) #17
  %362 = icmp eq i16 %326, 0
  br i1 %362, label %363, label %367

363:                                              ; preds = %360
  %364 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %365 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %364, i64 0, i32 1, i32 1
  store i8 0, i8* %365, align 1
  %366 = bitcast %"class.std::__1::basic_string"* %11 to i16*
  br label %554

367:                                              ; preds = %360, %367
  %368 = phi i64 [ %370, %367 ], [ 0, %360 ]
  %369 = phi i16* [ %371, %367 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 0), %360 ]
  %370 = add i64 %368, 1
  %371 = getelementptr inbounds i16, i16* %369, i64 1
  %372 = load i16, i16* %371, align 2
  %373 = icmp eq i16 %372, 0
  br i1 %373, label %374, label %367

374:                                              ; preds = %367
  %375 = icmp ugt i64 %370, 9223372036854775791
  br i1 %375, label %376, label %378

376:                                              ; preds = %374
  %377 = bitcast %"class.std::__1::basic_string"* %11 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %377) #19
  unreachable

378:                                              ; preds = %374
  %379 = icmp ult i64 %370, 11
  br i1 %379, label %393, label %380

380:                                              ; preds = %378
  %381 = add nuw nsw i64 %368, 9
  %382 = and i64 %381, -8
  %383 = icmp slt i64 %382, 0
  br i1 %383, label %384, label %385

384:                                              ; preds = %380
  call void @abort() #19
  unreachable

385:                                              ; preds = %380
  %386 = shl i64 %382, 1
  %387 = call i8* @_Znwm(i64 %386) #18
  %388 = bitcast i8* %387 to i16*
  %389 = bitcast %"class.std::__1::basic_string"* %11 to i8**
  store i8* %387, i8** %389, align 8
  %390 = or i64 %382, -9223372036854775808
  %391 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %390, i64* %391, align 8
  %392 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %370, i64* %392, align 8
  br label %399

393:                                              ; preds = %378
  %394 = trunc i64 %370 to i8
  %395 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %396 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %395, i64 0, i32 1, i32 1
  store i8 %394, i8* %396, align 1
  %397 = bitcast %"class.std::__1::basic_string"* %11 to i16*
  %398 = icmp eq i64 %370, 0
  br i1 %398, label %554, label %399

399:                                              ; preds = %393, %385
  %400 = phi i16* [ %388, %385 ], [ %397, %393 ]
  store i16 %326, i16* %400, align 2
  %401 = icmp eq i64 %368, 0
  br i1 %401, label %552, label %402

402:                                              ; preds = %399
  %403 = icmp ult i64 %368, 16
  br i1 %403, label %499, label %404

404:                                              ; preds = %402
  %405 = getelementptr i16, i16* %400, i64 1
  %406 = getelementptr i16, i16* %400, i64 %370
  %407 = getelementptr [0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 %370
  %408 = icmp ult i16* %405, %407
  %409 = icmp ugt i16* %406, getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1)
  %410 = and i1 %408, %409
  br i1 %410, label %499, label %411

411:                                              ; preds = %404
  %412 = and i64 %368, -16
  %413 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %412
  %414 = sub i64 %368, %412
  %415 = getelementptr i16, i16* %400, i64 %412
  %416 = add i64 %412, -16
  %417 = lshr exact i64 %416, 4
  %418 = add nuw nsw i64 %417, 1
  %419 = and i64 %418, 3
  %420 = icmp ult i64 %416, 48
  br i1 %420, label %476, label %421

421:                                              ; preds = %411
  %422 = sub nsw i64 %418, %419
  %423 = getelementptr i16, i16* %400, i64 1
  %424 = getelementptr i16, i16* %400, i64 1
  %425 = getelementptr i16, i16* %400, i64 1
  %426 = getelementptr i16, i16* %400, i64 1
  br label %427

427:                                              ; preds = %427, %421
  %428 = phi i64 [ 0, %421 ], [ %473, %427 ]
  %429 = phi i64 [ %422, %421 ], [ %474, %427 ]
  %430 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %428
  %431 = getelementptr inbounds i16, i16* %423, i64 %428
  %432 = bitcast i16* %430 to <8 x i16>*
  %433 = load <8 x i16>, <8 x i16>* %432, align 2, !alias.scope !151
  %434 = getelementptr i16, i16* %430, i64 8
  %435 = bitcast i16* %434 to <8 x i16>*
  %436 = load <8 x i16>, <8 x i16>* %435, align 2, !alias.scope !151
  %437 = bitcast i16* %431 to <8 x i16>*
  store <8 x i16> %433, <8 x i16>* %437, align 2, !alias.scope !154, !noalias !151
  %438 = getelementptr inbounds i16, i16* %431, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  store <8 x i16> %436, <8 x i16>* %439, align 2, !alias.scope !154, !noalias !151
  %440 = or i64 %428, 16
  %441 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %440
  %442 = getelementptr inbounds i16, i16* %424, i64 %440
  %443 = bitcast i16* %441 to <8 x i16>*
  %444 = load <8 x i16>, <8 x i16>* %443, align 2, !alias.scope !151
  %445 = getelementptr i16, i16* %441, i64 8
  %446 = bitcast i16* %445 to <8 x i16>*
  %447 = load <8 x i16>, <8 x i16>* %446, align 2, !alias.scope !151
  %448 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %444, <8 x i16>* %448, align 2, !alias.scope !154, !noalias !151
  %449 = getelementptr inbounds i16, i16* %442, i64 8
  %450 = bitcast i16* %449 to <8 x i16>*
  store <8 x i16> %447, <8 x i16>* %450, align 2, !alias.scope !154, !noalias !151
  %451 = or i64 %428, 32
  %452 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %451
  %453 = getelementptr inbounds i16, i16* %425, i64 %451
  %454 = bitcast i16* %452 to <8 x i16>*
  %455 = load <8 x i16>, <8 x i16>* %454, align 2, !alias.scope !151
  %456 = getelementptr i16, i16* %452, i64 8
  %457 = bitcast i16* %456 to <8 x i16>*
  %458 = load <8 x i16>, <8 x i16>* %457, align 2, !alias.scope !151
  %459 = bitcast i16* %453 to <8 x i16>*
  store <8 x i16> %455, <8 x i16>* %459, align 2, !alias.scope !154, !noalias !151
  %460 = getelementptr inbounds i16, i16* %453, i64 8
  %461 = bitcast i16* %460 to <8 x i16>*
  store <8 x i16> %458, <8 x i16>* %461, align 2, !alias.scope !154, !noalias !151
  %462 = or i64 %428, 48
  %463 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %462
  %464 = getelementptr inbounds i16, i16* %426, i64 %462
  %465 = bitcast i16* %463 to <8 x i16>*
  %466 = load <8 x i16>, <8 x i16>* %465, align 2, !alias.scope !151
  %467 = getelementptr i16, i16* %463, i64 8
  %468 = bitcast i16* %467 to <8 x i16>*
  %469 = load <8 x i16>, <8 x i16>* %468, align 2, !alias.scope !151
  %470 = bitcast i16* %464 to <8 x i16>*
  store <8 x i16> %466, <8 x i16>* %470, align 2, !alias.scope !154, !noalias !151
  %471 = getelementptr inbounds i16, i16* %464, i64 8
  %472 = bitcast i16* %471 to <8 x i16>*
  store <8 x i16> %469, <8 x i16>* %472, align 2, !alias.scope !154, !noalias !151
  %473 = add i64 %428, 64
  %474 = add i64 %429, -4
  %475 = icmp eq i64 %474, 0
  br i1 %475, label %476, label %427, !llvm.loop !156

476:                                              ; preds = %427, %411
  %477 = phi i64 [ 0, %411 ], [ %473, %427 ]
  %478 = icmp eq i64 %419, 0
  br i1 %478, label %497, label %479

479:                                              ; preds = %476
  %480 = getelementptr i16, i16* %400, i64 1
  br label %481

481:                                              ; preds = %481, %479
  %482 = phi i64 [ %477, %479 ], [ %494, %481 ]
  %483 = phi i64 [ %419, %479 ], [ %495, %481 ]
  %484 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %482
  %485 = getelementptr inbounds i16, i16* %480, i64 %482
  %486 = bitcast i16* %484 to <8 x i16>*
  %487 = load <8 x i16>, <8 x i16>* %486, align 2, !alias.scope !151
  %488 = getelementptr i16, i16* %484, i64 8
  %489 = bitcast i16* %488 to <8 x i16>*
  %490 = load <8 x i16>, <8 x i16>* %489, align 2, !alias.scope !151
  %491 = bitcast i16* %485 to <8 x i16>*
  store <8 x i16> %487, <8 x i16>* %491, align 2, !alias.scope !154, !noalias !151
  %492 = getelementptr inbounds i16, i16* %485, i64 8
  %493 = bitcast i16* %492 to <8 x i16>*
  store <8 x i16> %490, <8 x i16>* %493, align 2, !alias.scope !154, !noalias !151
  %494 = add i64 %482, 16
  %495 = add i64 %483, -1
  %496 = icmp eq i64 %495, 0
  br i1 %496, label %497, label %481, !llvm.loop !157

497:                                              ; preds = %481, %476
  %498 = icmp eq i64 %368, %412
  br i1 %498, label %552, label %499

499:                                              ; preds = %497, %404, %402
  %500 = phi i16* [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), %404 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), %402 ], [ %413, %497 ]
  %501 = phi i64 [ %368, %404 ], [ %368, %402 ], [ %414, %497 ]
  %502 = phi i16* [ %400, %404 ], [ %400, %402 ], [ %415, %497 ]
  %503 = add i64 %501, -1
  %504 = and i64 %501, 7
  %505 = icmp eq i64 %504, 0
  br i1 %505, label %517, label %506

506:                                              ; preds = %499, %506
  %507 = phi i16* [ %514, %506 ], [ %500, %499 ]
  %508 = phi i64 [ %513, %506 ], [ %501, %499 ]
  %509 = phi i16* [ %511, %506 ], [ %502, %499 ]
  %510 = phi i64 [ %515, %506 ], [ %504, %499 ]
  %511 = getelementptr inbounds i16, i16* %509, i64 1
  %512 = load i16, i16* %507, align 2
  store i16 %512, i16* %511, align 2
  %513 = add i64 %508, -1
  %514 = getelementptr inbounds i16, i16* %507, i64 1
  %515 = add i64 %510, -1
  %516 = icmp eq i64 %515, 0
  br i1 %516, label %517, label %506, !llvm.loop !158

517:                                              ; preds = %506, %499
  %518 = phi i16* [ %500, %499 ], [ %514, %506 ]
  %519 = phi i64 [ %501, %499 ], [ %513, %506 ]
  %520 = phi i16* [ %502, %499 ], [ %511, %506 ]
  %521 = icmp ult i64 %503, 7
  br i1 %521, label %552, label %522

522:                                              ; preds = %517, %522
  %523 = phi i16* [ %550, %522 ], [ %518, %517 ]
  %524 = phi i64 [ %549, %522 ], [ %519, %517 ]
  %525 = phi i16* [ %547, %522 ], [ %520, %517 ]
  %526 = getelementptr inbounds i16, i16* %525, i64 1
  %527 = load i16, i16* %523, align 2
  store i16 %527, i16* %526, align 2
  %528 = getelementptr inbounds i16, i16* %523, i64 1
  %529 = getelementptr inbounds i16, i16* %525, i64 2
  %530 = load i16, i16* %528, align 2
  store i16 %530, i16* %529, align 2
  %531 = getelementptr inbounds i16, i16* %523, i64 2
  %532 = getelementptr inbounds i16, i16* %525, i64 3
  %533 = load i16, i16* %531, align 2
  store i16 %533, i16* %532, align 2
  %534 = getelementptr inbounds i16, i16* %523, i64 3
  %535 = getelementptr inbounds i16, i16* %525, i64 4
  %536 = load i16, i16* %534, align 2
  store i16 %536, i16* %535, align 2
  %537 = getelementptr inbounds i16, i16* %523, i64 4
  %538 = getelementptr inbounds i16, i16* %525, i64 5
  %539 = load i16, i16* %537, align 2
  store i16 %539, i16* %538, align 2
  %540 = getelementptr inbounds i16, i16* %523, i64 5
  %541 = getelementptr inbounds i16, i16* %525, i64 6
  %542 = load i16, i16* %540, align 2
  store i16 %542, i16* %541, align 2
  %543 = getelementptr inbounds i16, i16* %523, i64 6
  %544 = getelementptr inbounds i16, i16* %525, i64 7
  %545 = load i16, i16* %543, align 2
  store i16 %545, i16* %544, align 2
  %546 = getelementptr inbounds i16, i16* %523, i64 7
  %547 = getelementptr inbounds i16, i16* %525, i64 8
  %548 = load i16, i16* %546, align 2
  store i16 %548, i16* %547, align 2
  %549 = add i64 %524, -8
  %550 = getelementptr inbounds i16, i16* %523, i64 8
  %551 = icmp eq i64 %549, 0
  br i1 %551, label %552, label %522, !llvm.loop !159

552:                                              ; preds = %517, %522, %497, %399
  %553 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %554

554:                                              ; preds = %552, %363, %393
  %555 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %553, %552 ], [ %364, %363 ], [ %395, %393 ]
  %556 = phi i64 [ %370, %552 ], [ 0, %363 ], [ 0, %393 ]
  %557 = phi i16* [ %400, %552 ], [ %366, %363 ], [ %397, %393 ]
  %558 = getelementptr inbounds i16, i16* %557, i64 %556
  store i16 0, i16* %558, align 2
  call void @_ZN3gfx10RenderText5ElideERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEffNS_13ElideBehaviorE(%"class.std::__1::basic_string"* sret %0, %"class.gfx::RenderText"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11, float 0.000000e+00, float %3, i32 4)
  %559 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %555, i64 0, i32 1, i32 1
  %560 = load i8, i8* %559, align 1
  %561 = icmp slt i8 %560, 0
  br i1 %561, label %562, label %565

562:                                              ; preds = %554
  %563 = bitcast %"class.std::__1::basic_string"* %11 to i8**
  %564 = load i8*, i8** %563, align 8
  call void @_ZdlPv(i8* %564) #18
  br label %565

565:                                              ; preds = %554, %562
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %361) #17
  br label %1534

566:                                              ; preds = %355, %342, %336
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6)
  br label %1534

567:                                              ; preds = %290
  br i1 %307, label %568, label %823

568:                                              ; preds = %567
  %569 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %569) #17
  call void @_ZN3gfx10RenderText5ElideERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEffNS_13ElideBehaviorE(%"class.std::__1::basic_string"* nonnull sret %12, %"class.gfx::RenderText"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, float 0.000000e+00, float %291, i32 4)
  %570 = load i8, i8* %293, align 1
  %571 = icmp slt i8 %570, 0
  br i1 %571, label %572, label %575

572:                                              ; preds = %568
  %573 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %574 = load i8*, i8** %573, align 8
  call void @_ZdlPv(i8* %574) #18
  br label %575

575:                                              ; preds = %572, %568
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %50, i8* nonnull align 8 %569, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %569) #17
  %576 = load i8, i8* %293, align 1
  %577 = icmp slt i8 %576, 0
  %578 = load i64, i64* %52, align 8
  %579 = zext i8 %576 to i64
  %580 = select i1 %577, i64 %578, i64 %579
  %581 = icmp eq i64 %580, 0
  %582 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 0), align 2
  br i1 %581, label %616, label %583

583:                                              ; preds = %575
  %584 = icmp eq i16 %582, 0
  br i1 %584, label %592, label %585

585:                                              ; preds = %583, %585
  %586 = phi i64 [ %588, %585 ], [ 0, %583 ]
  %587 = phi i16* [ %589, %585 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 0), %583 ]
  %588 = add i64 %586, 1
  %589 = getelementptr inbounds i16, i16* %587, i64 1
  %590 = load i16, i16* %589, align 2
  %591 = icmp eq i16 %590, 0
  br i1 %591, label %592, label %585

592:                                              ; preds = %585, %583
  %593 = phi i64 [ 0, %583 ], [ %588, %585 ]
  %594 = icmp eq i64 %593, %580
  br i1 %594, label %595, label %822

595:                                              ; preds = %592
  switch i64 %580, label %598 [
    i64 -1, label %596
    i64 0, label %616
  ]

596:                                              ; preds = %595
  %597 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* nonnull %597) #19
  unreachable

598:                                              ; preds = %595
  %599 = load i16*, i16** %51, align 8
  %600 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %601 = select i1 %577, i16* %599, i16* %600
  %602 = load i16, i16* %601, align 2
  %603 = icmp eq i16 %582, %602
  br i1 %603, label %604, label %822

604:                                              ; preds = %598, %611
  %605 = phi i16* [ %612, %611 ], [ %601, %598 ]
  %606 = phi i16* [ %609, %611 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 0), %598 ]
  %607 = phi i64 [ %608, %611 ], [ %580, %598 ]
  %608 = add i64 %607, -1
  %609 = getelementptr inbounds i16, i16* %606, i64 1
  %610 = icmp eq i64 %608, 0
  br i1 %610, label %616, label %611

611:                                              ; preds = %604
  %612 = getelementptr inbounds i16, i16* %605, i64 1
  %613 = load i16, i16* %609, align 2
  %614 = load i16, i16* %612, align 2
  %615 = icmp eq i16 %613, %614
  br i1 %615, label %604, label %822

616:                                              ; preds = %604, %575, %595
  %617 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %617) #17
  %618 = icmp eq i16 %582, 0
  br i1 %618, label %619, label %623

619:                                              ; preds = %616
  %620 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %621 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %620, i64 0, i32 1, i32 1
  store i8 0, i8* %621, align 1
  %622 = bitcast %"class.std::__1::basic_string"* %13 to i16*
  br label %810

623:                                              ; preds = %616, %623
  %624 = phi i64 [ %626, %623 ], [ 0, %616 ]
  %625 = phi i16* [ %627, %623 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 0), %616 ]
  %626 = add i64 %624, 1
  %627 = getelementptr inbounds i16, i16* %625, i64 1
  %628 = load i16, i16* %627, align 2
  %629 = icmp eq i16 %628, 0
  br i1 %629, label %630, label %623

630:                                              ; preds = %623
  %631 = icmp ugt i64 %626, 9223372036854775791
  br i1 %631, label %632, label %634

632:                                              ; preds = %630
  %633 = bitcast %"class.std::__1::basic_string"* %13 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %633) #19
  unreachable

634:                                              ; preds = %630
  %635 = icmp ult i64 %626, 11
  br i1 %635, label %649, label %636

636:                                              ; preds = %634
  %637 = add nuw nsw i64 %624, 9
  %638 = and i64 %637, -8
  %639 = icmp slt i64 %638, 0
  br i1 %639, label %640, label %641

640:                                              ; preds = %636
  call void @abort() #19
  unreachable

641:                                              ; preds = %636
  %642 = shl i64 %638, 1
  %643 = call i8* @_Znwm(i64 %642) #18
  %644 = bitcast i8* %643 to i16*
  %645 = bitcast %"class.std::__1::basic_string"* %13 to i8**
  store i8* %643, i8** %645, align 8
  %646 = or i64 %638, -9223372036854775808
  %647 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %646, i64* %647, align 8
  %648 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %626, i64* %648, align 8
  br label %655

649:                                              ; preds = %634
  %650 = trunc i64 %626 to i8
  %651 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %652 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %651, i64 0, i32 1, i32 1
  store i8 %650, i8* %652, align 1
  %653 = bitcast %"class.std::__1::basic_string"* %13 to i16*
  %654 = icmp eq i64 %626, 0
  br i1 %654, label %810, label %655

655:                                              ; preds = %649, %641
  %656 = phi i16* [ %644, %641 ], [ %653, %649 ]
  store i16 %582, i16* %656, align 2
  %657 = icmp eq i64 %624, 0
  br i1 %657, label %808, label %658

658:                                              ; preds = %655
  %659 = icmp ult i64 %624, 16
  br i1 %659, label %755, label %660

660:                                              ; preds = %658
  %661 = getelementptr i16, i16* %656, i64 1
  %662 = getelementptr i16, i16* %656, i64 %626
  %663 = getelementptr [0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 %626
  %664 = icmp ult i16* %661, %663
  %665 = icmp ugt i16* %662, getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1)
  %666 = and i1 %664, %665
  br i1 %666, label %755, label %667

667:                                              ; preds = %660
  %668 = and i64 %624, -16
  %669 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %668
  %670 = sub i64 %624, %668
  %671 = getelementptr i16, i16* %656, i64 %668
  %672 = add i64 %668, -16
  %673 = lshr exact i64 %672, 4
  %674 = add nuw nsw i64 %673, 1
  %675 = and i64 %674, 3
  %676 = icmp ult i64 %672, 48
  br i1 %676, label %732, label %677

677:                                              ; preds = %667
  %678 = sub nsw i64 %674, %675
  %679 = getelementptr i16, i16* %656, i64 1
  %680 = getelementptr i16, i16* %656, i64 1
  %681 = getelementptr i16, i16* %656, i64 1
  %682 = getelementptr i16, i16* %656, i64 1
  br label %683

683:                                              ; preds = %683, %677
  %684 = phi i64 [ 0, %677 ], [ %729, %683 ]
  %685 = phi i64 [ %678, %677 ], [ %730, %683 ]
  %686 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %684
  %687 = getelementptr inbounds i16, i16* %679, i64 %684
  %688 = bitcast i16* %686 to <8 x i16>*
  %689 = load <8 x i16>, <8 x i16>* %688, align 2, !alias.scope !160
  %690 = getelementptr i16, i16* %686, i64 8
  %691 = bitcast i16* %690 to <8 x i16>*
  %692 = load <8 x i16>, <8 x i16>* %691, align 2, !alias.scope !160
  %693 = bitcast i16* %687 to <8 x i16>*
  store <8 x i16> %689, <8 x i16>* %693, align 2, !alias.scope !163, !noalias !160
  %694 = getelementptr inbounds i16, i16* %687, i64 8
  %695 = bitcast i16* %694 to <8 x i16>*
  store <8 x i16> %692, <8 x i16>* %695, align 2, !alias.scope !163, !noalias !160
  %696 = or i64 %684, 16
  %697 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %696
  %698 = getelementptr inbounds i16, i16* %680, i64 %696
  %699 = bitcast i16* %697 to <8 x i16>*
  %700 = load <8 x i16>, <8 x i16>* %699, align 2, !alias.scope !160
  %701 = getelementptr i16, i16* %697, i64 8
  %702 = bitcast i16* %701 to <8 x i16>*
  %703 = load <8 x i16>, <8 x i16>* %702, align 2, !alias.scope !160
  %704 = bitcast i16* %698 to <8 x i16>*
  store <8 x i16> %700, <8 x i16>* %704, align 2, !alias.scope !163, !noalias !160
  %705 = getelementptr inbounds i16, i16* %698, i64 8
  %706 = bitcast i16* %705 to <8 x i16>*
  store <8 x i16> %703, <8 x i16>* %706, align 2, !alias.scope !163, !noalias !160
  %707 = or i64 %684, 32
  %708 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %707
  %709 = getelementptr inbounds i16, i16* %681, i64 %707
  %710 = bitcast i16* %708 to <8 x i16>*
  %711 = load <8 x i16>, <8 x i16>* %710, align 2, !alias.scope !160
  %712 = getelementptr i16, i16* %708, i64 8
  %713 = bitcast i16* %712 to <8 x i16>*
  %714 = load <8 x i16>, <8 x i16>* %713, align 2, !alias.scope !160
  %715 = bitcast i16* %709 to <8 x i16>*
  store <8 x i16> %711, <8 x i16>* %715, align 2, !alias.scope !163, !noalias !160
  %716 = getelementptr inbounds i16, i16* %709, i64 8
  %717 = bitcast i16* %716 to <8 x i16>*
  store <8 x i16> %714, <8 x i16>* %717, align 2, !alias.scope !163, !noalias !160
  %718 = or i64 %684, 48
  %719 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %718
  %720 = getelementptr inbounds i16, i16* %682, i64 %718
  %721 = bitcast i16* %719 to <8 x i16>*
  %722 = load <8 x i16>, <8 x i16>* %721, align 2, !alias.scope !160
  %723 = getelementptr i16, i16* %719, i64 8
  %724 = bitcast i16* %723 to <8 x i16>*
  %725 = load <8 x i16>, <8 x i16>* %724, align 2, !alias.scope !160
  %726 = bitcast i16* %720 to <8 x i16>*
  store <8 x i16> %722, <8 x i16>* %726, align 2, !alias.scope !163, !noalias !160
  %727 = getelementptr inbounds i16, i16* %720, i64 8
  %728 = bitcast i16* %727 to <8 x i16>*
  store <8 x i16> %725, <8 x i16>* %728, align 2, !alias.scope !163, !noalias !160
  %729 = add i64 %684, 64
  %730 = add i64 %685, -4
  %731 = icmp eq i64 %730, 0
  br i1 %731, label %732, label %683, !llvm.loop !165

732:                                              ; preds = %683, %667
  %733 = phi i64 [ 0, %667 ], [ %729, %683 ]
  %734 = icmp eq i64 %675, 0
  br i1 %734, label %753, label %735

735:                                              ; preds = %732
  %736 = getelementptr i16, i16* %656, i64 1
  br label %737

737:                                              ; preds = %737, %735
  %738 = phi i64 [ %733, %735 ], [ %750, %737 ]
  %739 = phi i64 [ %675, %735 ], [ %751, %737 ]
  %740 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %738
  %741 = getelementptr inbounds i16, i16* %736, i64 %738
  %742 = bitcast i16* %740 to <8 x i16>*
  %743 = load <8 x i16>, <8 x i16>* %742, align 2, !alias.scope !160
  %744 = getelementptr i16, i16* %740, i64 8
  %745 = bitcast i16* %744 to <8 x i16>*
  %746 = load <8 x i16>, <8 x i16>* %745, align 2, !alias.scope !160
  %747 = bitcast i16* %741 to <8 x i16>*
  store <8 x i16> %743, <8 x i16>* %747, align 2, !alias.scope !163, !noalias !160
  %748 = getelementptr inbounds i16, i16* %741, i64 8
  %749 = bitcast i16* %748 to <8 x i16>*
  store <8 x i16> %746, <8 x i16>* %749, align 2, !alias.scope !163, !noalias !160
  %750 = add i64 %738, 16
  %751 = add i64 %739, -1
  %752 = icmp eq i64 %751, 0
  br i1 %752, label %753, label %737, !llvm.loop !166

753:                                              ; preds = %737, %732
  %754 = icmp eq i64 %624, %668
  br i1 %754, label %808, label %755

755:                                              ; preds = %753, %660, %658
  %756 = phi i16* [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), %660 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), %658 ], [ %669, %753 ]
  %757 = phi i64 [ %624, %660 ], [ %624, %658 ], [ %670, %753 ]
  %758 = phi i16* [ %656, %660 ], [ %656, %658 ], [ %671, %753 ]
  %759 = add i64 %757, -1
  %760 = and i64 %757, 7
  %761 = icmp eq i64 %760, 0
  br i1 %761, label %773, label %762

762:                                              ; preds = %755, %762
  %763 = phi i16* [ %770, %762 ], [ %756, %755 ]
  %764 = phi i64 [ %769, %762 ], [ %757, %755 ]
  %765 = phi i16* [ %767, %762 ], [ %758, %755 ]
  %766 = phi i64 [ %771, %762 ], [ %760, %755 ]
  %767 = getelementptr inbounds i16, i16* %765, i64 1
  %768 = load i16, i16* %763, align 2
  store i16 %768, i16* %767, align 2
  %769 = add i64 %764, -1
  %770 = getelementptr inbounds i16, i16* %763, i64 1
  %771 = add i64 %766, -1
  %772 = icmp eq i64 %771, 0
  br i1 %772, label %773, label %762, !llvm.loop !167

773:                                              ; preds = %762, %755
  %774 = phi i16* [ %756, %755 ], [ %770, %762 ]
  %775 = phi i64 [ %757, %755 ], [ %769, %762 ]
  %776 = phi i16* [ %758, %755 ], [ %767, %762 ]
  %777 = icmp ult i64 %759, 7
  br i1 %777, label %808, label %778

778:                                              ; preds = %773, %778
  %779 = phi i16* [ %806, %778 ], [ %774, %773 ]
  %780 = phi i64 [ %805, %778 ], [ %775, %773 ]
  %781 = phi i16* [ %803, %778 ], [ %776, %773 ]
  %782 = getelementptr inbounds i16, i16* %781, i64 1
  %783 = load i16, i16* %779, align 2
  store i16 %783, i16* %782, align 2
  %784 = getelementptr inbounds i16, i16* %779, i64 1
  %785 = getelementptr inbounds i16, i16* %781, i64 2
  %786 = load i16, i16* %784, align 2
  store i16 %786, i16* %785, align 2
  %787 = getelementptr inbounds i16, i16* %779, i64 2
  %788 = getelementptr inbounds i16, i16* %781, i64 3
  %789 = load i16, i16* %787, align 2
  store i16 %789, i16* %788, align 2
  %790 = getelementptr inbounds i16, i16* %779, i64 3
  %791 = getelementptr inbounds i16, i16* %781, i64 4
  %792 = load i16, i16* %790, align 2
  store i16 %792, i16* %791, align 2
  %793 = getelementptr inbounds i16, i16* %779, i64 4
  %794 = getelementptr inbounds i16, i16* %781, i64 5
  %795 = load i16, i16* %793, align 2
  store i16 %795, i16* %794, align 2
  %796 = getelementptr inbounds i16, i16* %779, i64 5
  %797 = getelementptr inbounds i16, i16* %781, i64 6
  %798 = load i16, i16* %796, align 2
  store i16 %798, i16* %797, align 2
  %799 = getelementptr inbounds i16, i16* %779, i64 6
  %800 = getelementptr inbounds i16, i16* %781, i64 7
  %801 = load i16, i16* %799, align 2
  store i16 %801, i16* %800, align 2
  %802 = getelementptr inbounds i16, i16* %779, i64 7
  %803 = getelementptr inbounds i16, i16* %781, i64 8
  %804 = load i16, i16* %802, align 2
  store i16 %804, i16* %803, align 2
  %805 = add i64 %780, -8
  %806 = getelementptr inbounds i16, i16* %779, i64 8
  %807 = icmp eq i64 %805, 0
  br i1 %807, label %808, label %778, !llvm.loop !168

808:                                              ; preds = %773, %778, %753, %655
  %809 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %810

810:                                              ; preds = %808, %619, %649
  %811 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %809, %808 ], [ %620, %619 ], [ %651, %649 ]
  %812 = phi i64 [ %626, %808 ], [ 0, %619 ], [ 0, %649 ]
  %813 = phi i16* [ %656, %808 ], [ %622, %619 ], [ %653, %649 ]
  %814 = getelementptr inbounds i16, i16* %813, i64 %812
  store i16 0, i16* %814, align 2
  call void @_ZN3gfx10RenderText5ElideERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEffNS_13ElideBehaviorE(%"class.std::__1::basic_string"* sret %0, %"class.gfx::RenderText"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %13, float 0.000000e+00, float %3, i32 4)
  %815 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %811, i64 0, i32 1, i32 1
  %816 = load i8, i8* %815, align 1
  %817 = icmp slt i8 %816, 0
  br i1 %817, label %818, label %821

818:                                              ; preds = %810
  %819 = bitcast %"class.std::__1::basic_string"* %13 to i8**
  %820 = load i8*, i8** %819, align 8
  call void @_ZdlPv(i8* %820) #18
  br label %821

821:                                              ; preds = %810, %818
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %617) #17
  br label %1534

822:                                              ; preds = %611, %598, %592
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8)
  br label %1534

823:                                              ; preds = %567
  call void @_ZN3gfx10RenderText7SetTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.gfx::RenderText"* %61, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #17
  %824 = load <2 x float> (%"class.gfx::RenderText"*)**, <2 x float> (%"class.gfx::RenderText"*)*** %76, align 8
  %825 = getelementptr inbounds <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %824, i64 3
  %826 = load <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %825, align 8
  %827 = call <2 x float> %826(%"class.gfx::RenderText"* %61) #17
  %828 = extractelement <2 x float> %827, i32 0
  %829 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %829) #17
  %830 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %830) #17
  %831 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::allocator.154"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %15, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, i64 0, i64 1, %"class.std::__1::allocator.154"* nonnull dereferenceable(1) %831) #17
  %832 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 0), align 2, !noalias !169
  %833 = icmp eq i16 %832, 0
  br i1 %833, label %841, label %834

834:                                              ; preds = %823, %834
  %835 = phi i64 [ %837, %834 ], [ 0, %823 ]
  %836 = phi i16* [ %838, %834 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 0), %823 ]
  %837 = add i64 %835, 1
  %838 = getelementptr inbounds i16, i16* %836, i64 1
  %839 = load i16, i16* %838, align 2, !noalias !169
  %840 = icmp eq i16 %839, 0
  br i1 %840, label %841, label %834

841:                                              ; preds = %834, %823
  %842 = phi i64 [ 0, %823 ], [ %837, %834 ]
  %843 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %844 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %843, i64 0, i32 1, i32 1
  %845 = load i8, i8* %844, align 1, !noalias !169
  %846 = icmp slt i8 %845, 0
  br i1 %846, label %847, label %854

847:                                              ; preds = %841
  %848 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %849 = load i64, i64* %848, align 8, !noalias !169
  %850 = and i64 %849, 9223372036854775807
  %851 = add nsw i64 %850, -1
  %852 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %853 = load i64, i64* %852, align 8, !noalias !169
  br label %856

854:                                              ; preds = %841
  %855 = zext i8 %845 to i64
  br label %856

856:                                              ; preds = %854, %847
  %857 = phi i64 [ %851, %847 ], [ 10, %854 ]
  %858 = phi i64 [ %853, %847 ], [ %855, %854 ]
  %859 = sub i64 %857, %858
  %860 = icmp ult i64 %859, %842
  br i1 %860, label %1038, label %861

861:                                              ; preds = %856
  %862 = icmp eq i64 %842, 0
  br i1 %862, label %1041, label %863

863:                                              ; preds = %861
  %864 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %865 = load i16*, i16** %864, align 8, !noalias !169
  %866 = bitcast %"class.std::__1::basic_string"* %15 to i16*
  %867 = select i1 %846, i16* %865, i16* %866
  %868 = getelementptr inbounds i16, i16* %867, i64 %858
  store i16 %832, i16* %868, align 2, !noalias !169
  %869 = add i64 %842, -1
  %870 = icmp eq i64 %869, 0
  br i1 %870, label %1028, label %871

871:                                              ; preds = %863
  %872 = icmp ult i64 %869, 16
  br i1 %872, label %975, label %873

873:                                              ; preds = %871
  %874 = add i64 %858, 1
  %875 = getelementptr i16, i16* %867, i64 %874
  %876 = add i64 %858, %842
  %877 = getelementptr i16, i16* %867, i64 %876
  %878 = getelementptr [0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 %842
  %879 = icmp ult i16* %875, %878
  %880 = icmp ugt i16* %877, getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1)
  %881 = and i1 %879, %880
  br i1 %881, label %975, label %882

882:                                              ; preds = %873
  %883 = and i64 %869, -16
  %884 = getelementptr [0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 %883
  %885 = sub i64 %869, %883
  %886 = getelementptr i16, i16* %868, i64 %883
  %887 = add i64 %883, -16
  %888 = lshr exact i64 %887, 4
  %889 = add nuw nsw i64 %888, 1
  %890 = and i64 %889, 3
  %891 = icmp ult i64 %887, 48
  br i1 %891, label %951, label %892

892:                                              ; preds = %882
  %893 = sub nsw i64 %889, %890
  %894 = getelementptr i16, i16* %868, i64 1
  %895 = getelementptr i16, i16* %868, i64 1
  %896 = getelementptr i16, i16* %868, i64 1
  %897 = getelementptr i16, i16* %868, i64 1
  br label %898

898:                                              ; preds = %898, %892
  %899 = phi i64 [ 0, %892 ], [ %948, %898 ]
  %900 = phi i64 [ %893, %892 ], [ %949, %898 ]
  %901 = getelementptr [0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 %899
  %902 = getelementptr inbounds i16, i16* %901, i64 1
  %903 = getelementptr inbounds i16, i16* %894, i64 %899
  %904 = bitcast i16* %902 to <8 x i16>*
  %905 = load <8 x i16>, <8 x i16>* %904, align 2, !alias.scope !172, !noalias !169
  %906 = getelementptr inbounds i16, i16* %901, i64 9
  %907 = bitcast i16* %906 to <8 x i16>*
  %908 = load <8 x i16>, <8 x i16>* %907, align 2, !alias.scope !172, !noalias !169
  %909 = bitcast i16* %903 to <8 x i16>*
  store <8 x i16> %905, <8 x i16>* %909, align 2, !alias.scope !175, !noalias !177
  %910 = getelementptr inbounds i16, i16* %903, i64 8
  %911 = bitcast i16* %910 to <8 x i16>*
  store <8 x i16> %908, <8 x i16>* %911, align 2, !alias.scope !175, !noalias !177
  %912 = or i64 %899, 16
  %913 = getelementptr [0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 %912
  %914 = getelementptr inbounds i16, i16* %913, i64 1
  %915 = getelementptr inbounds i16, i16* %895, i64 %912
  %916 = bitcast i16* %914 to <8 x i16>*
  %917 = load <8 x i16>, <8 x i16>* %916, align 2, !alias.scope !172, !noalias !169
  %918 = getelementptr inbounds i16, i16* %913, i64 9
  %919 = bitcast i16* %918 to <8 x i16>*
  %920 = load <8 x i16>, <8 x i16>* %919, align 2, !alias.scope !172, !noalias !169
  %921 = bitcast i16* %915 to <8 x i16>*
  store <8 x i16> %917, <8 x i16>* %921, align 2, !alias.scope !175, !noalias !177
  %922 = getelementptr inbounds i16, i16* %915, i64 8
  %923 = bitcast i16* %922 to <8 x i16>*
  store <8 x i16> %920, <8 x i16>* %923, align 2, !alias.scope !175, !noalias !177
  %924 = or i64 %899, 32
  %925 = getelementptr [0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 %924
  %926 = getelementptr inbounds i16, i16* %925, i64 1
  %927 = getelementptr inbounds i16, i16* %896, i64 %924
  %928 = bitcast i16* %926 to <8 x i16>*
  %929 = load <8 x i16>, <8 x i16>* %928, align 2, !alias.scope !172, !noalias !169
  %930 = getelementptr inbounds i16, i16* %925, i64 9
  %931 = bitcast i16* %930 to <8 x i16>*
  %932 = load <8 x i16>, <8 x i16>* %931, align 2, !alias.scope !172, !noalias !169
  %933 = bitcast i16* %927 to <8 x i16>*
  store <8 x i16> %929, <8 x i16>* %933, align 2, !alias.scope !175, !noalias !177
  %934 = getelementptr inbounds i16, i16* %927, i64 8
  %935 = bitcast i16* %934 to <8 x i16>*
  store <8 x i16> %932, <8 x i16>* %935, align 2, !alias.scope !175, !noalias !177
  %936 = or i64 %899, 48
  %937 = getelementptr [0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 %936
  %938 = getelementptr inbounds i16, i16* %937, i64 1
  %939 = getelementptr inbounds i16, i16* %897, i64 %936
  %940 = bitcast i16* %938 to <8 x i16>*
  %941 = load <8 x i16>, <8 x i16>* %940, align 2, !alias.scope !172, !noalias !169
  %942 = getelementptr inbounds i16, i16* %937, i64 9
  %943 = bitcast i16* %942 to <8 x i16>*
  %944 = load <8 x i16>, <8 x i16>* %943, align 2, !alias.scope !172, !noalias !169
  %945 = bitcast i16* %939 to <8 x i16>*
  store <8 x i16> %941, <8 x i16>* %945, align 2, !alias.scope !175, !noalias !177
  %946 = getelementptr inbounds i16, i16* %939, i64 8
  %947 = bitcast i16* %946 to <8 x i16>*
  store <8 x i16> %944, <8 x i16>* %947, align 2, !alias.scope !175, !noalias !177
  %948 = add i64 %899, 64
  %949 = add i64 %900, -4
  %950 = icmp eq i64 %949, 0
  br i1 %950, label %951, label %898, !llvm.loop !178

951:                                              ; preds = %898, %882
  %952 = phi i64 [ 0, %882 ], [ %948, %898 ]
  %953 = icmp eq i64 %890, 0
  br i1 %953, label %973, label %954

954:                                              ; preds = %951
  %955 = getelementptr i16, i16* %868, i64 1
  br label %956

956:                                              ; preds = %956, %954
  %957 = phi i64 [ %952, %954 ], [ %970, %956 ]
  %958 = phi i64 [ %890, %954 ], [ %971, %956 ]
  %959 = getelementptr [0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 %957
  %960 = getelementptr inbounds i16, i16* %959, i64 1
  %961 = getelementptr inbounds i16, i16* %955, i64 %957
  %962 = bitcast i16* %960 to <8 x i16>*
  %963 = load <8 x i16>, <8 x i16>* %962, align 2, !alias.scope !172, !noalias !169
  %964 = getelementptr inbounds i16, i16* %959, i64 9
  %965 = bitcast i16* %964 to <8 x i16>*
  %966 = load <8 x i16>, <8 x i16>* %965, align 2, !alias.scope !172, !noalias !169
  %967 = bitcast i16* %961 to <8 x i16>*
  store <8 x i16> %963, <8 x i16>* %967, align 2, !alias.scope !175, !noalias !177
  %968 = getelementptr inbounds i16, i16* %961, i64 8
  %969 = bitcast i16* %968 to <8 x i16>*
  store <8 x i16> %966, <8 x i16>* %969, align 2, !alias.scope !175, !noalias !177
  %970 = add i64 %957, 16
  %971 = add i64 %958, -1
  %972 = icmp eq i64 %971, 0
  br i1 %972, label %973, label %956, !llvm.loop !179

973:                                              ; preds = %956, %951
  %974 = icmp eq i64 %869, %883
  br i1 %974, label %1028, label %975

975:                                              ; preds = %973, %873, %871
  %976 = phi i16* [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 0), %873 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 0), %871 ], [ %884, %973 ]
  %977 = phi i64 [ %869, %873 ], [ %869, %871 ], [ %885, %973 ]
  %978 = phi i16* [ %868, %873 ], [ %868, %871 ], [ %886, %973 ]
  %979 = add i64 %977, -1
  %980 = and i64 %977, 7
  %981 = icmp eq i64 %980, 0
  br i1 %981, label %993, label %982

982:                                              ; preds = %975, %982
  %983 = phi i16* [ %987, %982 ], [ %976, %975 ]
  %984 = phi i64 [ %990, %982 ], [ %977, %975 ]
  %985 = phi i16* [ %988, %982 ], [ %978, %975 ]
  %986 = phi i64 [ %991, %982 ], [ %980, %975 ]
  %987 = getelementptr inbounds i16, i16* %983, i64 1
  %988 = getelementptr inbounds i16, i16* %985, i64 1
  %989 = load i16, i16* %987, align 2, !noalias !169
  store i16 %989, i16* %988, align 2, !noalias !169
  %990 = add i64 %984, -1
  %991 = add i64 %986, -1
  %992 = icmp eq i64 %991, 0
  br i1 %992, label %993, label %982, !llvm.loop !180

993:                                              ; preds = %982, %975
  %994 = phi i16* [ %976, %975 ], [ %987, %982 ]
  %995 = phi i64 [ %977, %975 ], [ %990, %982 ]
  %996 = phi i16* [ %978, %975 ], [ %988, %982 ]
  %997 = icmp ult i64 %979, 7
  br i1 %997, label %1028, label %998

998:                                              ; preds = %993, %998
  %999 = phi i16* [ %1023, %998 ], [ %994, %993 ]
  %1000 = phi i64 [ %1026, %998 ], [ %995, %993 ]
  %1001 = phi i16* [ %1024, %998 ], [ %996, %993 ]
  %1002 = getelementptr inbounds i16, i16* %999, i64 1
  %1003 = getelementptr inbounds i16, i16* %1001, i64 1
  %1004 = load i16, i16* %1002, align 2, !noalias !169
  store i16 %1004, i16* %1003, align 2, !noalias !169
  %1005 = getelementptr inbounds i16, i16* %999, i64 2
  %1006 = getelementptr inbounds i16, i16* %1001, i64 2
  %1007 = load i16, i16* %1005, align 2, !noalias !169
  store i16 %1007, i16* %1006, align 2, !noalias !169
  %1008 = getelementptr inbounds i16, i16* %999, i64 3
  %1009 = getelementptr inbounds i16, i16* %1001, i64 3
  %1010 = load i16, i16* %1008, align 2, !noalias !169
  store i16 %1010, i16* %1009, align 2, !noalias !169
  %1011 = getelementptr inbounds i16, i16* %999, i64 4
  %1012 = getelementptr inbounds i16, i16* %1001, i64 4
  %1013 = load i16, i16* %1011, align 2, !noalias !169
  store i16 %1013, i16* %1012, align 2, !noalias !169
  %1014 = getelementptr inbounds i16, i16* %999, i64 5
  %1015 = getelementptr inbounds i16, i16* %1001, i64 5
  %1016 = load i16, i16* %1014, align 2, !noalias !169
  store i16 %1016, i16* %1015, align 2, !noalias !169
  %1017 = getelementptr inbounds i16, i16* %999, i64 6
  %1018 = getelementptr inbounds i16, i16* %1001, i64 6
  %1019 = load i16, i16* %1017, align 2, !noalias !169
  store i16 %1019, i16* %1018, align 2, !noalias !169
  %1020 = getelementptr inbounds i16, i16* %999, i64 7
  %1021 = getelementptr inbounds i16, i16* %1001, i64 7
  %1022 = load i16, i16* %1020, align 2, !noalias !169
  store i16 %1022, i16* %1021, align 2, !noalias !169
  %1023 = getelementptr inbounds i16, i16* %999, i64 8
  %1024 = getelementptr inbounds i16, i16* %1001, i64 8
  %1025 = load i16, i16* %1023, align 2, !noalias !169
  store i16 %1025, i16* %1024, align 2, !noalias !169
  %1026 = add i64 %1000, -8
  %1027 = icmp eq i64 %1026, 0
  br i1 %1027, label %1028, label %998, !llvm.loop !181

1028:                                             ; preds = %993, %998, %973, %863
  %1029 = add i64 %858, %842
  %1030 = load i8, i8* %844, align 1, !noalias !169
  %1031 = icmp slt i8 %1030, 0
  br i1 %1031, label %1032, label %1034

1032:                                             ; preds = %1028
  %1033 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1029, i64* %1033, align 8, !noalias !169
  br label %1036

1034:                                             ; preds = %1028
  %1035 = trunc i64 %1029 to i8
  store i8 %1035, i8* %844, align 1, !noalias !169
  br label %1036

1036:                                             ; preds = %1034, %1032
  %1037 = getelementptr inbounds i16, i16* %867, i64 %1029
  store i16 0, i16* %1037, align 2, !noalias !169
  br label %1041

1038:                                             ; preds = %856
  %1039 = add i64 %858, %842
  %1040 = sub i64 %1039, %857
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* nonnull %15, i64 %857, i64 %1040, i64 %858, i64 %858, i64 0, i64 %842, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 0)) #17, !noalias !169
  br label %1041

1041:                                             ; preds = %861, %1036, %1038
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %829, i8* nonnull align 8 %830, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %830, i8 0, i64 24, i1 false) #17, !noalias !169
  call void @_ZN3gfx10RenderText7SetTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.gfx::RenderText"* %61, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %14) #17
  %1042 = load <2 x float> (%"class.gfx::RenderText"*)**, <2 x float> (%"class.gfx::RenderText"*)*** %76, align 8
  %1043 = getelementptr inbounds <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %1042, i64 3
  %1044 = load <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %1043, align 8
  %1045 = call <2 x float> %1044(%"class.gfx::RenderText"* %61) #17
  %1046 = extractelement <2 x float> %1045, i32 0
  %1047 = fcmp olt float %1046, %828
  %1048 = select i1 %1047, float %1046, float %828
  %1049 = fsub float %291, %1048
  %1050 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1051 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1050, i64 0, i32 1, i32 1
  %1052 = load i8, i8* %1051, align 1
  %1053 = icmp slt i8 %1052, 0
  br i1 %1053, label %1054, label %1057

1054:                                             ; preds = %1041
  %1055 = bitcast %"class.std::__1::basic_string"* %14 to i8**
  %1056 = load i8*, i8** %1055, align 8
  call void @_ZdlPv(i8* %1056) #18
  br label %1057

1057:                                             ; preds = %1041, %1054
  %1058 = load i8, i8* %844, align 1
  %1059 = icmp slt i8 %1058, 0
  br i1 %1059, label %1060, label %1063

1060:                                             ; preds = %1057
  %1061 = bitcast %"class.std::__1::basic_string"* %15 to i8**
  %1062 = load i8*, i8** %1061, align 8
  call void @_ZdlPv(i8* %1062) #18
  br label %1063

1063:                                             ; preds = %1057, %1060
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %830) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %829) #17
  call void @_ZN3gfx10RenderText7SetTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.gfx::RenderText"* %61, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #17
  %1064 = load <2 x float> (%"class.gfx::RenderText"*)**, <2 x float> (%"class.gfx::RenderText"*)*** %76, align 8
  %1065 = getelementptr inbounds <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %1064, i64 3
  %1066 = load <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %1065, align 8
  %1067 = call <2 x float> %1066(%"class.gfx::RenderText"* %61) #17
  %1068 = extractelement <2 x float> %1067, i32 0
  %1069 = fcmp ogt float %1068, %1049
  br i1 %1069, label %1070, label %1327

1070:                                             ; preds = %1063
  %1071 = fsub float %291, %828
  %1072 = fmul float %291, 5.000000e-01
  %1073 = fcmp olt float %1071, %1072
  %1074 = select i1 %1073, float %1072, float %1071
  %1075 = fcmp olt float %1074, %1049
  %1076 = select i1 %1075, float %1074, float %1049
  %1077 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1077) #17
  call void @_ZN3gfx10RenderText5ElideERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEffNS_13ElideBehaviorE(%"class.std::__1::basic_string"* nonnull sret %16, %"class.gfx::RenderText"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, float 0.000000e+00, float %1076, i32 3)
  %1078 = load i8, i8* %301, align 1
  %1079 = icmp slt i8 %1078, 0
  br i1 %1079, label %1080, label %1083

1080:                                             ; preds = %1070
  %1081 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %1082 = load i8*, i8** %1081, align 8
  call void @_ZdlPv(i8* %1082) #18
  br label %1083

1083:                                             ; preds = %1080, %1070
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %55, i8* nonnull align 8 %1077, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1077) #17
  %1084 = load i8, i8* %301, align 1
  %1085 = icmp slt i8 %1084, 0
  %1086 = load i64, i64* %57, align 8
  %1087 = zext i8 %1084 to i64
  %1088 = select i1 %1085, i64 %1086, i64 %1087
  %1089 = icmp eq i64 %1088, 0
  br i1 %1089, label %1122, label %1090

1090:                                             ; preds = %1083
  br i1 %833, label %1098, label %1091

1091:                                             ; preds = %1090, %1091
  %1092 = phi i64 [ %1094, %1091 ], [ 0, %1090 ]
  %1093 = phi i16* [ %1095, %1091 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 0), %1090 ]
  %1094 = add i64 %1092, 1
  %1095 = getelementptr inbounds i16, i16* %1093, i64 1
  %1096 = load i16, i16* %1095, align 2
  %1097 = icmp eq i16 %1096, 0
  br i1 %1097, label %1098, label %1091

1098:                                             ; preds = %1091, %1090
  %1099 = phi i64 [ 0, %1090 ], [ %1094, %1091 ]
  %1100 = icmp eq i64 %1099, %1088
  br i1 %1100, label %1101, label %1327

1101:                                             ; preds = %1098
  switch i64 %1088, label %1104 [
    i64 -1, label %1102
    i64 0, label %1122
  ]

1102:                                             ; preds = %1101
  %1103 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* nonnull %1103) #19
  unreachable

1104:                                             ; preds = %1101
  %1105 = load i16*, i16** %56, align 8
  %1106 = bitcast %"class.std::__1::basic_string"* %6 to i16*
  %1107 = select i1 %1085, i16* %1105, i16* %1106
  %1108 = load i16, i16* %1107, align 2
  %1109 = icmp eq i16 %832, %1108
  br i1 %1109, label %1110, label %1327

1110:                                             ; preds = %1104, %1117
  %1111 = phi i16* [ %1118, %1117 ], [ %1107, %1104 ]
  %1112 = phi i16* [ %1115, %1117 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 0), %1104 ]
  %1113 = phi i64 [ %1114, %1117 ], [ %1088, %1104 ]
  %1114 = add i64 %1113, -1
  %1115 = getelementptr inbounds i16, i16* %1112, i64 1
  %1116 = icmp eq i64 %1114, 0
  br i1 %1116, label %1122, label %1117

1117:                                             ; preds = %1110
  %1118 = getelementptr inbounds i16, i16* %1111, i64 1
  %1119 = load i16, i16* %1115, align 2
  %1120 = load i16, i16* %1118, align 2
  %1121 = icmp eq i16 %1119, %1120
  br i1 %1121, label %1110, label %1327

1122:                                             ; preds = %1110, %1101, %1083
  %1123 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1123) #17
  br i1 %833, label %1124, label %1128

1124:                                             ; preds = %1122
  %1125 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1126 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1125, i64 0, i32 1, i32 1
  store i8 0, i8* %1126, align 1
  %1127 = bitcast %"class.std::__1::basic_string"* %17 to i16*
  br label %1315

1128:                                             ; preds = %1122, %1128
  %1129 = phi i64 [ %1131, %1128 ], [ 0, %1122 ]
  %1130 = phi i16* [ %1132, %1128 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 0), %1122 ]
  %1131 = add i64 %1129, 1
  %1132 = getelementptr inbounds i16, i16* %1130, i64 1
  %1133 = load i16, i16* %1132, align 2
  %1134 = icmp eq i16 %1133, 0
  br i1 %1134, label %1135, label %1128

1135:                                             ; preds = %1128
  %1136 = icmp ugt i64 %1131, 9223372036854775791
  br i1 %1136, label %1137, label %1139

1137:                                             ; preds = %1135
  %1138 = bitcast %"class.std::__1::basic_string"* %17 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %1138) #19
  unreachable

1139:                                             ; preds = %1135
  %1140 = icmp ult i64 %1131, 11
  br i1 %1140, label %1154, label %1141

1141:                                             ; preds = %1139
  %1142 = add nuw nsw i64 %1129, 9
  %1143 = and i64 %1142, -8
  %1144 = icmp slt i64 %1143, 0
  br i1 %1144, label %1145, label %1146

1145:                                             ; preds = %1141
  call void @abort() #19
  unreachable

1146:                                             ; preds = %1141
  %1147 = shl i64 %1143, 1
  %1148 = call i8* @_Znwm(i64 %1147) #18
  %1149 = bitcast i8* %1148 to i16*
  %1150 = bitcast %"class.std::__1::basic_string"* %17 to i8**
  store i8* %1148, i8** %1150, align 8
  %1151 = or i64 %1143, -9223372036854775808
  %1152 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1151, i64* %1152, align 8
  %1153 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1131, i64* %1153, align 8
  br label %1160

1154:                                             ; preds = %1139
  %1155 = trunc i64 %1131 to i8
  %1156 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1157 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1156, i64 0, i32 1, i32 1
  store i8 %1155, i8* %1157, align 1
  %1158 = bitcast %"class.std::__1::basic_string"* %17 to i16*
  %1159 = icmp eq i64 %1131, 0
  br i1 %1159, label %1315, label %1160

1160:                                             ; preds = %1154, %1146
  %1161 = phi i16* [ %1149, %1146 ], [ %1158, %1154 ]
  store i16 %832, i16* %1161, align 2
  %1162 = icmp eq i64 %1129, 0
  br i1 %1162, label %1313, label %1163

1163:                                             ; preds = %1160
  %1164 = icmp ult i64 %1129, 16
  br i1 %1164, label %1260, label %1165

1165:                                             ; preds = %1163
  %1166 = getelementptr i16, i16* %1161, i64 1
  %1167 = getelementptr i16, i16* %1161, i64 %1131
  %1168 = getelementptr [0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 %1131
  %1169 = icmp ult i16* %1166, %1168
  %1170 = icmp ugt i16* %1167, getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1)
  %1171 = and i1 %1169, %1170
  br i1 %1171, label %1260, label %1172

1172:                                             ; preds = %1165
  %1173 = and i64 %1129, -16
  %1174 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %1173
  %1175 = sub i64 %1129, %1173
  %1176 = getelementptr i16, i16* %1161, i64 %1173
  %1177 = add i64 %1173, -16
  %1178 = lshr exact i64 %1177, 4
  %1179 = add nuw nsw i64 %1178, 1
  %1180 = and i64 %1179, 3
  %1181 = icmp ult i64 %1177, 48
  br i1 %1181, label %1237, label %1182

1182:                                             ; preds = %1172
  %1183 = sub nsw i64 %1179, %1180
  %1184 = getelementptr i16, i16* %1161, i64 1
  %1185 = getelementptr i16, i16* %1161, i64 1
  %1186 = getelementptr i16, i16* %1161, i64 1
  %1187 = getelementptr i16, i16* %1161, i64 1
  br label %1188

1188:                                             ; preds = %1188, %1182
  %1189 = phi i64 [ 0, %1182 ], [ %1234, %1188 ]
  %1190 = phi i64 [ %1183, %1182 ], [ %1235, %1188 ]
  %1191 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %1189
  %1192 = getelementptr inbounds i16, i16* %1184, i64 %1189
  %1193 = bitcast i16* %1191 to <8 x i16>*
  %1194 = load <8 x i16>, <8 x i16>* %1193, align 2, !alias.scope !182
  %1195 = getelementptr i16, i16* %1191, i64 8
  %1196 = bitcast i16* %1195 to <8 x i16>*
  %1197 = load <8 x i16>, <8 x i16>* %1196, align 2, !alias.scope !182
  %1198 = bitcast i16* %1192 to <8 x i16>*
  store <8 x i16> %1194, <8 x i16>* %1198, align 2, !alias.scope !185, !noalias !182
  %1199 = getelementptr inbounds i16, i16* %1192, i64 8
  %1200 = bitcast i16* %1199 to <8 x i16>*
  store <8 x i16> %1197, <8 x i16>* %1200, align 2, !alias.scope !185, !noalias !182
  %1201 = or i64 %1189, 16
  %1202 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %1201
  %1203 = getelementptr inbounds i16, i16* %1185, i64 %1201
  %1204 = bitcast i16* %1202 to <8 x i16>*
  %1205 = load <8 x i16>, <8 x i16>* %1204, align 2, !alias.scope !182
  %1206 = getelementptr i16, i16* %1202, i64 8
  %1207 = bitcast i16* %1206 to <8 x i16>*
  %1208 = load <8 x i16>, <8 x i16>* %1207, align 2, !alias.scope !182
  %1209 = bitcast i16* %1203 to <8 x i16>*
  store <8 x i16> %1205, <8 x i16>* %1209, align 2, !alias.scope !185, !noalias !182
  %1210 = getelementptr inbounds i16, i16* %1203, i64 8
  %1211 = bitcast i16* %1210 to <8 x i16>*
  store <8 x i16> %1208, <8 x i16>* %1211, align 2, !alias.scope !185, !noalias !182
  %1212 = or i64 %1189, 32
  %1213 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %1212
  %1214 = getelementptr inbounds i16, i16* %1186, i64 %1212
  %1215 = bitcast i16* %1213 to <8 x i16>*
  %1216 = load <8 x i16>, <8 x i16>* %1215, align 2, !alias.scope !182
  %1217 = getelementptr i16, i16* %1213, i64 8
  %1218 = bitcast i16* %1217 to <8 x i16>*
  %1219 = load <8 x i16>, <8 x i16>* %1218, align 2, !alias.scope !182
  %1220 = bitcast i16* %1214 to <8 x i16>*
  store <8 x i16> %1216, <8 x i16>* %1220, align 2, !alias.scope !185, !noalias !182
  %1221 = getelementptr inbounds i16, i16* %1214, i64 8
  %1222 = bitcast i16* %1221 to <8 x i16>*
  store <8 x i16> %1219, <8 x i16>* %1222, align 2, !alias.scope !185, !noalias !182
  %1223 = or i64 %1189, 48
  %1224 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %1223
  %1225 = getelementptr inbounds i16, i16* %1187, i64 %1223
  %1226 = bitcast i16* %1224 to <8 x i16>*
  %1227 = load <8 x i16>, <8 x i16>* %1226, align 2, !alias.scope !182
  %1228 = getelementptr i16, i16* %1224, i64 8
  %1229 = bitcast i16* %1228 to <8 x i16>*
  %1230 = load <8 x i16>, <8 x i16>* %1229, align 2, !alias.scope !182
  %1231 = bitcast i16* %1225 to <8 x i16>*
  store <8 x i16> %1227, <8 x i16>* %1231, align 2, !alias.scope !185, !noalias !182
  %1232 = getelementptr inbounds i16, i16* %1225, i64 8
  %1233 = bitcast i16* %1232 to <8 x i16>*
  store <8 x i16> %1230, <8 x i16>* %1233, align 2, !alias.scope !185, !noalias !182
  %1234 = add i64 %1189, 64
  %1235 = add i64 %1190, -4
  %1236 = icmp eq i64 %1235, 0
  br i1 %1236, label %1237, label %1188, !llvm.loop !187

1237:                                             ; preds = %1188, %1172
  %1238 = phi i64 [ 0, %1172 ], [ %1234, %1188 ]
  %1239 = icmp eq i64 %1180, 0
  br i1 %1239, label %1258, label %1240

1240:                                             ; preds = %1237
  %1241 = getelementptr i16, i16* %1161, i64 1
  br label %1242

1242:                                             ; preds = %1242, %1240
  %1243 = phi i64 [ %1238, %1240 ], [ %1255, %1242 ]
  %1244 = phi i64 [ %1180, %1240 ], [ %1256, %1242 ]
  %1245 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %1243
  %1246 = getelementptr inbounds i16, i16* %1241, i64 %1243
  %1247 = bitcast i16* %1245 to <8 x i16>*
  %1248 = load <8 x i16>, <8 x i16>* %1247, align 2, !alias.scope !182
  %1249 = getelementptr i16, i16* %1245, i64 8
  %1250 = bitcast i16* %1249 to <8 x i16>*
  %1251 = load <8 x i16>, <8 x i16>* %1250, align 2, !alias.scope !182
  %1252 = bitcast i16* %1246 to <8 x i16>*
  store <8 x i16> %1248, <8 x i16>* %1252, align 2, !alias.scope !185, !noalias !182
  %1253 = getelementptr inbounds i16, i16* %1246, i64 8
  %1254 = bitcast i16* %1253 to <8 x i16>*
  store <8 x i16> %1251, <8 x i16>* %1254, align 2, !alias.scope !185, !noalias !182
  %1255 = add i64 %1243, 16
  %1256 = add i64 %1244, -1
  %1257 = icmp eq i64 %1256, 0
  br i1 %1257, label %1258, label %1242, !llvm.loop !188

1258:                                             ; preds = %1242, %1237
  %1259 = icmp eq i64 %1129, %1173
  br i1 %1259, label %1313, label %1260

1260:                                             ; preds = %1258, %1165, %1163
  %1261 = phi i16* [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), %1165 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), %1163 ], [ %1174, %1258 ]
  %1262 = phi i64 [ %1129, %1165 ], [ %1129, %1163 ], [ %1175, %1258 ]
  %1263 = phi i16* [ %1161, %1165 ], [ %1161, %1163 ], [ %1176, %1258 ]
  %1264 = add i64 %1262, -1
  %1265 = and i64 %1262, 7
  %1266 = icmp eq i64 %1265, 0
  br i1 %1266, label %1278, label %1267

1267:                                             ; preds = %1260, %1267
  %1268 = phi i16* [ %1275, %1267 ], [ %1261, %1260 ]
  %1269 = phi i64 [ %1274, %1267 ], [ %1262, %1260 ]
  %1270 = phi i16* [ %1272, %1267 ], [ %1263, %1260 ]
  %1271 = phi i64 [ %1276, %1267 ], [ %1265, %1260 ]
  %1272 = getelementptr inbounds i16, i16* %1270, i64 1
  %1273 = load i16, i16* %1268, align 2
  store i16 %1273, i16* %1272, align 2
  %1274 = add i64 %1269, -1
  %1275 = getelementptr inbounds i16, i16* %1268, i64 1
  %1276 = add i64 %1271, -1
  %1277 = icmp eq i64 %1276, 0
  br i1 %1277, label %1278, label %1267, !llvm.loop !189

1278:                                             ; preds = %1267, %1260
  %1279 = phi i16* [ %1261, %1260 ], [ %1275, %1267 ]
  %1280 = phi i64 [ %1262, %1260 ], [ %1274, %1267 ]
  %1281 = phi i16* [ %1263, %1260 ], [ %1272, %1267 ]
  %1282 = icmp ult i64 %1264, 7
  br i1 %1282, label %1313, label %1283

1283:                                             ; preds = %1278, %1283
  %1284 = phi i16* [ %1311, %1283 ], [ %1279, %1278 ]
  %1285 = phi i64 [ %1310, %1283 ], [ %1280, %1278 ]
  %1286 = phi i16* [ %1308, %1283 ], [ %1281, %1278 ]
  %1287 = getelementptr inbounds i16, i16* %1286, i64 1
  %1288 = load i16, i16* %1284, align 2
  store i16 %1288, i16* %1287, align 2
  %1289 = getelementptr inbounds i16, i16* %1284, i64 1
  %1290 = getelementptr inbounds i16, i16* %1286, i64 2
  %1291 = load i16, i16* %1289, align 2
  store i16 %1291, i16* %1290, align 2
  %1292 = getelementptr inbounds i16, i16* %1284, i64 2
  %1293 = getelementptr inbounds i16, i16* %1286, i64 3
  %1294 = load i16, i16* %1292, align 2
  store i16 %1294, i16* %1293, align 2
  %1295 = getelementptr inbounds i16, i16* %1284, i64 3
  %1296 = getelementptr inbounds i16, i16* %1286, i64 4
  %1297 = load i16, i16* %1295, align 2
  store i16 %1297, i16* %1296, align 2
  %1298 = getelementptr inbounds i16, i16* %1284, i64 4
  %1299 = getelementptr inbounds i16, i16* %1286, i64 5
  %1300 = load i16, i16* %1298, align 2
  store i16 %1300, i16* %1299, align 2
  %1301 = getelementptr inbounds i16, i16* %1284, i64 5
  %1302 = getelementptr inbounds i16, i16* %1286, i64 6
  %1303 = load i16, i16* %1301, align 2
  store i16 %1303, i16* %1302, align 2
  %1304 = getelementptr inbounds i16, i16* %1284, i64 6
  %1305 = getelementptr inbounds i16, i16* %1286, i64 7
  %1306 = load i16, i16* %1304, align 2
  store i16 %1306, i16* %1305, align 2
  %1307 = getelementptr inbounds i16, i16* %1284, i64 7
  %1308 = getelementptr inbounds i16, i16* %1286, i64 8
  %1309 = load i16, i16* %1307, align 2
  store i16 %1309, i16* %1308, align 2
  %1310 = add i64 %1285, -8
  %1311 = getelementptr inbounds i16, i16* %1284, i64 8
  %1312 = icmp eq i64 %1310, 0
  br i1 %1312, label %1313, label %1283, !llvm.loop !190

1313:                                             ; preds = %1278, %1283, %1258, %1160
  %1314 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %1315

1315:                                             ; preds = %1313, %1124, %1154
  %1316 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %1314, %1313 ], [ %1125, %1124 ], [ %1156, %1154 ]
  %1317 = phi i64 [ %1131, %1313 ], [ 0, %1124 ], [ 0, %1154 ]
  %1318 = phi i16* [ %1161, %1313 ], [ %1127, %1124 ], [ %1158, %1154 ]
  %1319 = getelementptr inbounds i16, i16* %1318, i64 %1317
  store i16 0, i16* %1319, align 2
  call void @_ZN3gfx10RenderText5ElideERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEffNS_13ElideBehaviorE(%"class.std::__1::basic_string"* sret %0, %"class.gfx::RenderText"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %17, float 0.000000e+00, float %3, i32 4)
  %1320 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1316, i64 0, i32 1, i32 1
  %1321 = load i8, i8* %1320, align 1
  %1322 = icmp slt i8 %1321, 0
  br i1 %1322, label %1323, label %1326

1323:                                             ; preds = %1315
  %1324 = bitcast %"class.std::__1::basic_string"* %17 to i8**
  %1325 = load i8*, i8** %1324, align 8
  call void @_ZdlPv(i8* %1325) #18
  br label %1326

1326:                                             ; preds = %1315, %1323
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1123) #17
  br label %1534

1327:                                             ; preds = %1117, %1104, %1098, %1063
  call void @_ZN3gfx10RenderText7SetTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.gfx::RenderText"* %61, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #17
  %1328 = load <2 x float> (%"class.gfx::RenderText"*)**, <2 x float> (%"class.gfx::RenderText"*)*** %76, align 8
  %1329 = getelementptr inbounds <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %1328, i64 3
  %1330 = load <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %1329, align 8
  %1331 = call <2 x float> %1330(%"class.gfx::RenderText"* %61) #17
  %1332 = extractelement <2 x float> %1331, i32 0
  %1333 = fsub float %291, %1332
  %1334 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1334) #17
  call void @_ZN3gfx10RenderText5ElideERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEffNS_13ElideBehaviorE(%"class.std::__1::basic_string"* nonnull sret %18, %"class.gfx::RenderText"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, float 0.000000e+00, float %1333, i32 4)
  %1335 = load i8, i8* %293, align 1
  %1336 = icmp slt i8 %1335, 0
  br i1 %1336, label %1337, label %1340

1337:                                             ; preds = %1327
  %1338 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %1339 = load i8*, i8** %1338, align 8
  call void @_ZdlPv(i8* %1339) #18
  br label %1340

1340:                                             ; preds = %1337, %1327
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %50, i8* nonnull align 8 %1334, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1334) #17
  %1341 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1341) #17
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string"* nonnull sret %19, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8)
  %1342 = load i8, i8* %301, align 1, !noalias !191
  %1343 = icmp slt i8 %1342, 0
  %1344 = load i16*, i16** %56, align 8, !noalias !191
  %1345 = load i64, i64* %57, align 8, !noalias !191
  %1346 = bitcast %"class.std::__1::basic_string"* %6 to i16*
  %1347 = zext i8 %1342 to i64
  %1348 = select i1 %1343, i16* %1344, i16* %1346
  %1349 = select i1 %1343, i64 %1345, i64 %1347
  %1350 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1351 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1350, i64 0, i32 1, i32 1
  %1352 = load i8, i8* %1351, align 1, !noalias !191
  %1353 = icmp slt i8 %1352, 0
  br i1 %1353, label %1354, label %1361

1354:                                             ; preds = %1340
  %1355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %1356 = load i64, i64* %1355, align 8, !noalias !191
  %1357 = and i64 %1356, 9223372036854775807
  %1358 = add nsw i64 %1357, -1
  %1359 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1360 = load i64, i64* %1359, align 8, !noalias !191
  br label %1363

1361:                                             ; preds = %1340
  %1362 = zext i8 %1352 to i64
  br label %1363

1363:                                             ; preds = %1361, %1354
  %1364 = phi i64 [ %1358, %1354 ], [ 10, %1361 ]
  %1365 = phi i64 [ %1360, %1354 ], [ %1362, %1361 ]
  %1366 = sub i64 %1364, %1365
  %1367 = icmp ult i64 %1366, %1349
  br i1 %1367, label %1529, label %1368

1368:                                             ; preds = %1363
  %1369 = icmp eq i64 %1349, 0
  br i1 %1369, label %1532, label %1370

1370:                                             ; preds = %1368
  %1371 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1372 = load i16*, i16** %1371, align 8, !noalias !191
  %1373 = bitcast %"class.std::__1::basic_string"* %19 to i16*
  %1374 = select i1 %1353, i16* %1372, i16* %1373
  %1375 = getelementptr inbounds i16, i16* %1374, i64 %1365
  %1376 = icmp ult i64 %1349, 16
  br i1 %1376, label %1466, label %1377

1377:                                             ; preds = %1370
  %1378 = add i64 %1349, %1365
  %1379 = getelementptr i16, i16* %1374, i64 %1378
  %1380 = getelementptr i16, i16* %1348, i64 %1349
  %1381 = icmp ult i16* %1375, %1380
  %1382 = icmp ult i16* %1348, %1379
  %1383 = and i1 %1381, %1382
  br i1 %1383, label %1466, label %1384

1384:                                             ; preds = %1377
  %1385 = and i64 %1349, -16
  %1386 = sub i64 %1349, %1385
  %1387 = getelementptr i16, i16* %1348, i64 %1385
  %1388 = getelementptr i16, i16* %1375, i64 %1385
  %1389 = add i64 %1385, -16
  %1390 = lshr exact i64 %1389, 4
  %1391 = add nuw nsw i64 %1390, 1
  %1392 = and i64 %1391, 3
  %1393 = icmp ult i64 %1389, 48
  br i1 %1393, label %1445, label %1394

1394:                                             ; preds = %1384
  %1395 = sub nsw i64 %1391, %1392
  br label %1396

1396:                                             ; preds = %1396, %1394
  %1397 = phi i64 [ 0, %1394 ], [ %1442, %1396 ]
  %1398 = phi i64 [ %1395, %1394 ], [ %1443, %1396 ]
  %1399 = getelementptr i16, i16* %1348, i64 %1397
  %1400 = getelementptr i16, i16* %1375, i64 %1397
  %1401 = bitcast i16* %1399 to <8 x i16>*
  %1402 = load <8 x i16>, <8 x i16>* %1401, align 2, !alias.scope !194, !noalias !191
  %1403 = getelementptr i16, i16* %1399, i64 8
  %1404 = bitcast i16* %1403 to <8 x i16>*
  %1405 = load <8 x i16>, <8 x i16>* %1404, align 2, !alias.scope !194, !noalias !191
  %1406 = bitcast i16* %1400 to <8 x i16>*
  store <8 x i16> %1402, <8 x i16>* %1406, align 2, !alias.scope !197, !noalias !199
  %1407 = getelementptr i16, i16* %1400, i64 8
  %1408 = bitcast i16* %1407 to <8 x i16>*
  store <8 x i16> %1405, <8 x i16>* %1408, align 2, !alias.scope !197, !noalias !199
  %1409 = or i64 %1397, 16
  %1410 = getelementptr i16, i16* %1348, i64 %1409
  %1411 = getelementptr i16, i16* %1375, i64 %1409
  %1412 = bitcast i16* %1410 to <8 x i16>*
  %1413 = load <8 x i16>, <8 x i16>* %1412, align 2, !alias.scope !194, !noalias !191
  %1414 = getelementptr i16, i16* %1410, i64 8
  %1415 = bitcast i16* %1414 to <8 x i16>*
  %1416 = load <8 x i16>, <8 x i16>* %1415, align 2, !alias.scope !194, !noalias !191
  %1417 = bitcast i16* %1411 to <8 x i16>*
  store <8 x i16> %1413, <8 x i16>* %1417, align 2, !alias.scope !197, !noalias !199
  %1418 = getelementptr i16, i16* %1411, i64 8
  %1419 = bitcast i16* %1418 to <8 x i16>*
  store <8 x i16> %1416, <8 x i16>* %1419, align 2, !alias.scope !197, !noalias !199
  %1420 = or i64 %1397, 32
  %1421 = getelementptr i16, i16* %1348, i64 %1420
  %1422 = getelementptr i16, i16* %1375, i64 %1420
  %1423 = bitcast i16* %1421 to <8 x i16>*
  %1424 = load <8 x i16>, <8 x i16>* %1423, align 2, !alias.scope !194, !noalias !191
  %1425 = getelementptr i16, i16* %1421, i64 8
  %1426 = bitcast i16* %1425 to <8 x i16>*
  %1427 = load <8 x i16>, <8 x i16>* %1426, align 2, !alias.scope !194, !noalias !191
  %1428 = bitcast i16* %1422 to <8 x i16>*
  store <8 x i16> %1424, <8 x i16>* %1428, align 2, !alias.scope !197, !noalias !199
  %1429 = getelementptr i16, i16* %1422, i64 8
  %1430 = bitcast i16* %1429 to <8 x i16>*
  store <8 x i16> %1427, <8 x i16>* %1430, align 2, !alias.scope !197, !noalias !199
  %1431 = or i64 %1397, 48
  %1432 = getelementptr i16, i16* %1348, i64 %1431
  %1433 = getelementptr i16, i16* %1375, i64 %1431
  %1434 = bitcast i16* %1432 to <8 x i16>*
  %1435 = load <8 x i16>, <8 x i16>* %1434, align 2, !alias.scope !194, !noalias !191
  %1436 = getelementptr i16, i16* %1432, i64 8
  %1437 = bitcast i16* %1436 to <8 x i16>*
  %1438 = load <8 x i16>, <8 x i16>* %1437, align 2, !alias.scope !194, !noalias !191
  %1439 = bitcast i16* %1433 to <8 x i16>*
  store <8 x i16> %1435, <8 x i16>* %1439, align 2, !alias.scope !197, !noalias !199
  %1440 = getelementptr i16, i16* %1433, i64 8
  %1441 = bitcast i16* %1440 to <8 x i16>*
  store <8 x i16> %1438, <8 x i16>* %1441, align 2, !alias.scope !197, !noalias !199
  %1442 = add i64 %1397, 64
  %1443 = add i64 %1398, -4
  %1444 = icmp eq i64 %1443, 0
  br i1 %1444, label %1445, label %1396, !llvm.loop !200

1445:                                             ; preds = %1396, %1384
  %1446 = phi i64 [ 0, %1384 ], [ %1442, %1396 ]
  %1447 = icmp eq i64 %1392, 0
  br i1 %1447, label %1464, label %1448

1448:                                             ; preds = %1445, %1448
  %1449 = phi i64 [ %1461, %1448 ], [ %1446, %1445 ]
  %1450 = phi i64 [ %1462, %1448 ], [ %1392, %1445 ]
  %1451 = getelementptr i16, i16* %1348, i64 %1449
  %1452 = getelementptr i16, i16* %1375, i64 %1449
  %1453 = bitcast i16* %1451 to <8 x i16>*
  %1454 = load <8 x i16>, <8 x i16>* %1453, align 2, !alias.scope !194, !noalias !191
  %1455 = getelementptr i16, i16* %1451, i64 8
  %1456 = bitcast i16* %1455 to <8 x i16>*
  %1457 = load <8 x i16>, <8 x i16>* %1456, align 2, !alias.scope !194, !noalias !191
  %1458 = bitcast i16* %1452 to <8 x i16>*
  store <8 x i16> %1454, <8 x i16>* %1458, align 2, !alias.scope !197, !noalias !199
  %1459 = getelementptr i16, i16* %1452, i64 8
  %1460 = bitcast i16* %1459 to <8 x i16>*
  store <8 x i16> %1457, <8 x i16>* %1460, align 2, !alias.scope !197, !noalias !199
  %1461 = add i64 %1449, 16
  %1462 = add i64 %1450, -1
  %1463 = icmp eq i64 %1462, 0
  br i1 %1463, label %1464, label %1448, !llvm.loop !201

1464:                                             ; preds = %1448, %1445
  %1465 = icmp eq i64 %1349, %1385
  br i1 %1465, label %1519, label %1466

1466:                                             ; preds = %1464, %1377, %1370
  %1467 = phi i64 [ %1349, %1377 ], [ %1349, %1370 ], [ %1386, %1464 ]
  %1468 = phi i16* [ %1348, %1377 ], [ %1348, %1370 ], [ %1387, %1464 ]
  %1469 = phi i16* [ %1375, %1377 ], [ %1375, %1370 ], [ %1388, %1464 ]
  %1470 = add i64 %1467, -1
  %1471 = and i64 %1467, 7
  %1472 = icmp eq i64 %1471, 0
  br i1 %1472, label %1484, label %1473

1473:                                             ; preds = %1466, %1473
  %1474 = phi i64 [ %1479, %1473 ], [ %1467, %1466 ]
  %1475 = phi i16* [ %1481, %1473 ], [ %1468, %1466 ]
  %1476 = phi i16* [ %1480, %1473 ], [ %1469, %1466 ]
  %1477 = phi i64 [ %1482, %1473 ], [ %1471, %1466 ]
  %1478 = load i16, i16* %1475, align 2, !noalias !191
  store i16 %1478, i16* %1476, align 2, !noalias !191
  %1479 = add i64 %1474, -1
  %1480 = getelementptr inbounds i16, i16* %1476, i64 1
  %1481 = getelementptr inbounds i16, i16* %1475, i64 1
  %1482 = add i64 %1477, -1
  %1483 = icmp eq i64 %1482, 0
  br i1 %1483, label %1484, label %1473, !llvm.loop !202

1484:                                             ; preds = %1473, %1466
  %1485 = phi i64 [ %1467, %1466 ], [ %1479, %1473 ]
  %1486 = phi i16* [ %1468, %1466 ], [ %1481, %1473 ]
  %1487 = phi i16* [ %1469, %1466 ], [ %1480, %1473 ]
  %1488 = icmp ult i64 %1470, 7
  br i1 %1488, label %1519, label %1489

1489:                                             ; preds = %1484, %1489
  %1490 = phi i64 [ %1515, %1489 ], [ %1485, %1484 ]
  %1491 = phi i16* [ %1517, %1489 ], [ %1486, %1484 ]
  %1492 = phi i16* [ %1516, %1489 ], [ %1487, %1484 ]
  %1493 = load i16, i16* %1491, align 2, !noalias !191
  store i16 %1493, i16* %1492, align 2, !noalias !191
  %1494 = getelementptr inbounds i16, i16* %1492, i64 1
  %1495 = getelementptr inbounds i16, i16* %1491, i64 1
  %1496 = load i16, i16* %1495, align 2, !noalias !191
  store i16 %1496, i16* %1494, align 2, !noalias !191
  %1497 = getelementptr inbounds i16, i16* %1492, i64 2
  %1498 = getelementptr inbounds i16, i16* %1491, i64 2
  %1499 = load i16, i16* %1498, align 2, !noalias !191
  store i16 %1499, i16* %1497, align 2, !noalias !191
  %1500 = getelementptr inbounds i16, i16* %1492, i64 3
  %1501 = getelementptr inbounds i16, i16* %1491, i64 3
  %1502 = load i16, i16* %1501, align 2, !noalias !191
  store i16 %1502, i16* %1500, align 2, !noalias !191
  %1503 = getelementptr inbounds i16, i16* %1492, i64 4
  %1504 = getelementptr inbounds i16, i16* %1491, i64 4
  %1505 = load i16, i16* %1504, align 2, !noalias !191
  store i16 %1505, i16* %1503, align 2, !noalias !191
  %1506 = getelementptr inbounds i16, i16* %1492, i64 5
  %1507 = getelementptr inbounds i16, i16* %1491, i64 5
  %1508 = load i16, i16* %1507, align 2, !noalias !191
  store i16 %1508, i16* %1506, align 2, !noalias !191
  %1509 = getelementptr inbounds i16, i16* %1492, i64 6
  %1510 = getelementptr inbounds i16, i16* %1491, i64 6
  %1511 = load i16, i16* %1510, align 2, !noalias !191
  store i16 %1511, i16* %1509, align 2, !noalias !191
  %1512 = getelementptr inbounds i16, i16* %1492, i64 7
  %1513 = getelementptr inbounds i16, i16* %1491, i64 7
  %1514 = load i16, i16* %1513, align 2, !noalias !191
  store i16 %1514, i16* %1512, align 2, !noalias !191
  %1515 = add i64 %1490, -8
  %1516 = getelementptr inbounds i16, i16* %1492, i64 8
  %1517 = getelementptr inbounds i16, i16* %1491, i64 8
  %1518 = icmp eq i64 %1515, 0
  br i1 %1518, label %1519, label %1489, !llvm.loop !203

1519:                                             ; preds = %1484, %1489, %1464
  %1520 = add i64 %1365, %1349
  %1521 = load i8, i8* %1351, align 1, !noalias !191
  %1522 = icmp slt i8 %1521, 0
  br i1 %1522, label %1523, label %1525

1523:                                             ; preds = %1519
  %1524 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1520, i64* %1524, align 8, !noalias !191
  br label %1527

1525:                                             ; preds = %1519
  %1526 = trunc i64 %1520 to i8
  store i8 %1526, i8* %1351, align 1, !noalias !191
  br label %1527

1527:                                             ; preds = %1525, %1523
  %1528 = getelementptr inbounds i16, i16* %1374, i64 %1520
  store i16 0, i16* %1528, align 2, !noalias !191
  br label %1532

1529:                                             ; preds = %1363
  %1530 = add i64 %1365, %1349
  %1531 = sub i64 %1530, %1364
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* nonnull %19, i64 %1364, i64 %1531, i64 %1365, i64 %1365, i64 0, i64 %1349, i16* %1348) #17, !noalias !191
  br label %1532

1532:                                             ; preds = %1529, %1527, %1368
  %1533 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1533, i8* nonnull align 8 %1341, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1341) #17
  br label %1534

1534:                                             ; preds = %1532, %1326, %309, %565, %566, %821, %822, %289
  %1535 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1536 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1535, i64 0, i32 1, i32 1
  %1537 = load i8, i8* %1536, align 1
  %1538 = icmp slt i8 %1537, 0
  br i1 %1538, label %1539, label %1542

1539:                                             ; preds = %1534
  %1540 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  %1541 = load i8*, i8** %1540, align 8
  call void @_ZdlPv(i8* %1541) #18
  br label %1542

1542:                                             ; preds = %1534, %1539
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #17
  %1543 = icmp eq %"class.gfx::RenderText"* %61, null
  br i1 %1543, label %1549, label %1544

1544:                                             ; preds = %1542
  %1545 = bitcast %"class.gfx::RenderText"* %61 to void (%"class.gfx::RenderText"*)***
  %1546 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %1545, align 8
  %1547 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %1546, i64 1
  %1548 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %1547, align 8
  call void %1548(%"class.gfx::RenderText"* nonnull %61) #17
  br label %1549

1549:                                             ; preds = %1542, %1544
  %1550 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1551 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1550, i64 0, i32 1, i32 1
  %1552 = load i8, i8* %1551, align 1
  %1553 = icmp slt i8 %1552, 0
  br i1 %1553, label %1554, label %1557

1554:                                             ; preds = %1549
  %1555 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %1556 = load i8*, i8** %1555, align 8
  call void @_ZdlPv(i8* %1556) #18
  br label %1557

1557:                                             ; preds = %1549, %1554
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #17
  %1558 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1559 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1558, i64 0, i32 1, i32 1
  %1560 = load i8, i8* %1559, align 1
  %1561 = icmp slt i8 %1560, 0
  br i1 %1561, label %1562, label %1565

1562:                                             ; preds = %1557
  %1563 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %1564 = load i8*, i8** %1563, align 8
  call void @_ZdlPv(i8* %1564) #18
  br label %1565

1565:                                             ; preds = %1557, %1562
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #17
  br label %1566

1566:                                             ; preds = %1565, %48
  ret void
}

declare void @_ZN3gfx12StringSlicerC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEES9_bbN4absl8optionalIbEE(%"class.gfx::StringSlicer"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, i1 zeroext, i16) unnamed_addr #1

declare void @_ZNK3gfx12StringSlicer9CutStringEmb(%"class.std::__1::basic_string"* sret, %"class.gfx::StringSlicer"*, i64, i1 zeroext) local_unnamed_addr #1

declare i32 @_ZN4base4i18n31GetLastStrongCharacterDirectionERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #17
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %18 to i64
  %23 = select i1 %19, i64 %21, i64 %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i16*, i16** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %27 = select i1 %11, i16* %25, i16* %26
  %28 = add i64 %23, %15
  %29 = icmp ugt i64 %28, 9223372036854775791
  br i1 %29, label %30, label %32

30:                                               ; preds = %3
  %31 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %31) #19
  unreachable

32:                                               ; preds = %3
  %33 = icmp ult i64 %28, 11
  br i1 %33, label %34, label %39

34:                                               ; preds = %32
  %35 = trunc i64 %15 to i8
  %36 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %36, i64 0, i32 1, i32 1
  store i8 %35, i8* %37, align 1
  %38 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %50

39:                                               ; preds = %32
  %40 = add nuw nsw i64 %28, 8
  %41 = and i64 %40, -8
  %42 = icmp slt i64 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %39
  tail call void @abort() #19
  unreachable

44:                                               ; preds = %39
  %45 = shl i64 %41, 1
  %46 = tail call i8* @_Znwm(i64 %45) #18
  %47 = bitcast i8* %46 to i16*
  %48 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %46, i8** %48, align 8
  %49 = or i64 %41, -9223372036854775808
  store i64 %49, i64* %6, align 8
  store i64 %15, i64* %5, align 8
  br label %50

50:                                               ; preds = %44, %34
  %51 = phi i16* [ %38, %34 ], [ %47, %44 ]
  %52 = icmp eq i64 %15, 0
  br i1 %52, label %198, label %53

53:                                               ; preds = %50
  %54 = icmp ult i64 %15, 16
  br i1 %54, label %143, label %55

55:                                               ; preds = %53
  %56 = getelementptr i16, i16* %51, i64 %15
  %57 = getelementptr i16, i16* %27, i64 %15
  %58 = icmp ult i16* %51, %57
  %59 = icmp ult i16* %27, %56
  %60 = and i1 %58, %59
  br i1 %60, label %143, label %61

61:                                               ; preds = %55
  %62 = and i64 %15, -16
  %63 = sub i64 %15, %62
  %64 = getelementptr i16, i16* %27, i64 %62
  %65 = getelementptr i16, i16* %51, i64 %62
  %66 = add i64 %62, -16
  %67 = lshr exact i64 %66, 4
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp ult i64 %66, 48
  br i1 %70, label %122, label %71

71:                                               ; preds = %61
  %72 = sub nsw i64 %68, %69
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ 0, %71 ], [ %119, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %120, %73 ]
  %76 = getelementptr i16, i16* %27, i64 %74
  %77 = getelementptr i16, i16* %51, i64 %74
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !204
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !204
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !207, !noalias !204
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !207, !noalias !204
  %86 = or i64 %74, 16
  %87 = getelementptr i16, i16* %27, i64 %86
  %88 = getelementptr i16, i16* %51, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !204
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !204
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !207, !noalias !204
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !207, !noalias !204
  %97 = or i64 %74, 32
  %98 = getelementptr i16, i16* %27, i64 %97
  %99 = getelementptr i16, i16* %51, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !204
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !204
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !207, !noalias !204
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !207, !noalias !204
  %108 = or i64 %74, 48
  %109 = getelementptr i16, i16* %27, i64 %108
  %110 = getelementptr i16, i16* %51, i64 %108
  %111 = bitcast i16* %109 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !204
  %113 = getelementptr i16, i16* %109, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !204
  %116 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %116, align 2, !alias.scope !207, !noalias !204
  %117 = getelementptr i16, i16* %110, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %118, align 2, !alias.scope !207, !noalias !204
  %119 = add i64 %74, 64
  %120 = add i64 %75, -4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %73, !llvm.loop !209

122:                                              ; preds = %73, %61
  %123 = phi i64 [ 0, %61 ], [ %119, %73 ]
  %124 = icmp eq i64 %69, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %122, %125
  %126 = phi i64 [ %138, %125 ], [ %123, %122 ]
  %127 = phi i64 [ %139, %125 ], [ %69, %122 ]
  %128 = getelementptr i16, i16* %27, i64 %126
  %129 = getelementptr i16, i16* %51, i64 %126
  %130 = bitcast i16* %128 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !204
  %132 = getelementptr i16, i16* %128, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !204
  %135 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %135, align 2, !alias.scope !207, !noalias !204
  %136 = getelementptr i16, i16* %129, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %137, align 2, !alias.scope !207, !noalias !204
  %138 = add i64 %126, 16
  %139 = add i64 %127, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !210

141:                                              ; preds = %125, %122
  %142 = icmp eq i64 %15, %62
  br i1 %142, label %196, label %143

143:                                              ; preds = %141, %55, %53
  %144 = phi i64 [ %15, %55 ], [ %15, %53 ], [ %63, %141 ]
  %145 = phi i16* [ %27, %55 ], [ %27, %53 ], [ %64, %141 ]
  %146 = phi i16* [ %51, %55 ], [ %51, %53 ], [ %65, %141 ]
  %147 = add i64 %144, -1
  %148 = and i64 %144, 7
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %161, label %150

150:                                              ; preds = %143, %150
  %151 = phi i64 [ %156, %150 ], [ %144, %143 ]
  %152 = phi i16* [ %158, %150 ], [ %145, %143 ]
  %153 = phi i16* [ %157, %150 ], [ %146, %143 ]
  %154 = phi i64 [ %159, %150 ], [ %148, %143 ]
  %155 = load i16, i16* %152, align 2
  store i16 %155, i16* %153, align 2
  %156 = add i64 %151, -1
  %157 = getelementptr inbounds i16, i16* %153, i64 1
  %158 = getelementptr inbounds i16, i16* %152, i64 1
  %159 = add i64 %154, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %150, !llvm.loop !211

161:                                              ; preds = %150, %143
  %162 = phi i64 [ %144, %143 ], [ %156, %150 ]
  %163 = phi i16* [ %145, %143 ], [ %158, %150 ]
  %164 = phi i16* [ %146, %143 ], [ %157, %150 ]
  %165 = icmp ult i64 %147, 7
  br i1 %165, label %196, label %166

166:                                              ; preds = %161, %166
  %167 = phi i64 [ %192, %166 ], [ %162, %161 ]
  %168 = phi i16* [ %194, %166 ], [ %163, %161 ]
  %169 = phi i16* [ %193, %166 ], [ %164, %161 ]
  %170 = load i16, i16* %168, align 2
  store i16 %170, i16* %169, align 2
  %171 = getelementptr inbounds i16, i16* %169, i64 1
  %172 = getelementptr inbounds i16, i16* %168, i64 1
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %169, i64 2
  %175 = getelementptr inbounds i16, i16* %168, i64 2
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %169, i64 3
  %178 = getelementptr inbounds i16, i16* %168, i64 3
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %169, i64 4
  %181 = getelementptr inbounds i16, i16* %168, i64 4
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %169, i64 5
  %184 = getelementptr inbounds i16, i16* %168, i64 5
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %169, i64 6
  %187 = getelementptr inbounds i16, i16* %168, i64 6
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %169, i64 7
  %190 = getelementptr inbounds i16, i16* %168, i64 7
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = add i64 %167, -8
  %193 = getelementptr inbounds i16, i16* %169, i64 8
  %194 = getelementptr inbounds i16, i16* %168, i64 8
  %195 = icmp eq i64 %192, 0
  br i1 %195, label %196, label %166, !llvm.loop !212

196:                                              ; preds = %161, %166, %141
  %197 = load i8, i8* %17, align 1
  br label %198

198:                                              ; preds = %196, %50
  %199 = phi i8 [ %197, %196 ], [ %18, %50 ]
  %200 = getelementptr inbounds i16, i16* %51, i64 %15
  store i16 0, i16* %200, align 2
  %201 = icmp slt i8 %199, 0
  %202 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load i16*, i16** %202, align 8
  %204 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %205 = select i1 %201, i16* %203, i16* %204
  %206 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %207 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %206, i64 0, i32 1, i32 1
  %208 = load i8, i8* %207, align 1
  %209 = icmp slt i8 %208, 0
  br i1 %209, label %210, label %215

210:                                              ; preds = %198
  %211 = load i64, i64* %6, align 8
  %212 = and i64 %211, 9223372036854775807
  %213 = add nsw i64 %212, -1
  %214 = load i64, i64* %5, align 8
  br label %217

215:                                              ; preds = %198
  %216 = zext i8 %208 to i64
  br label %217

217:                                              ; preds = %215, %210
  %218 = phi i64 [ %213, %210 ], [ 10, %215 ]
  %219 = phi i64 [ %214, %210 ], [ %216, %215 ]
  %220 = sub i64 %218, %219
  %221 = icmp ult i64 %220, %23
  br i1 %221, label %381, label %222

222:                                              ; preds = %217
  %223 = icmp eq i64 %23, 0
  br i1 %223, label %384, label %224

224:                                              ; preds = %222
  %225 = load i16*, i16** %4, align 8
  %226 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %227 = select i1 %209, i16* %225, i16* %226
  %228 = getelementptr inbounds i16, i16* %227, i64 %219
  %229 = icmp ult i64 %23, 16
  br i1 %229, label %319, label %230

230:                                              ; preds = %224
  %231 = add i64 %23, %219
  %232 = getelementptr i16, i16* %227, i64 %231
  %233 = getelementptr i16, i16* %205, i64 %23
  %234 = icmp ult i16* %228, %233
  %235 = icmp ult i16* %205, %232
  %236 = and i1 %234, %235
  br i1 %236, label %319, label %237

237:                                              ; preds = %230
  %238 = and i64 %23, -16
  %239 = sub i64 %23, %238
  %240 = getelementptr i16, i16* %205, i64 %238
  %241 = getelementptr i16, i16* %228, i64 %238
  %242 = add i64 %238, -16
  %243 = lshr exact i64 %242, 4
  %244 = add nuw nsw i64 %243, 1
  %245 = and i64 %244, 3
  %246 = icmp ult i64 %242, 48
  br i1 %246, label %298, label %247

247:                                              ; preds = %237
  %248 = sub nsw i64 %244, %245
  br label %249

249:                                              ; preds = %249, %247
  %250 = phi i64 [ 0, %247 ], [ %295, %249 ]
  %251 = phi i64 [ %248, %247 ], [ %296, %249 ]
  %252 = getelementptr i16, i16* %205, i64 %250
  %253 = getelementptr i16, i16* %228, i64 %250
  %254 = bitcast i16* %252 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !213
  %256 = getelementptr i16, i16* %252, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  %258 = load <8 x i16>, <8 x i16>* %257, align 2, !alias.scope !213
  %259 = bitcast i16* %253 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %259, align 2, !alias.scope !216, !noalias !213
  %260 = getelementptr i16, i16* %253, i64 8
  %261 = bitcast i16* %260 to <8 x i16>*
  store <8 x i16> %258, <8 x i16>* %261, align 2, !alias.scope !216, !noalias !213
  %262 = or i64 %250, 16
  %263 = getelementptr i16, i16* %205, i64 %262
  %264 = getelementptr i16, i16* %228, i64 %262
  %265 = bitcast i16* %263 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !213
  %267 = getelementptr i16, i16* %263, i64 8
  %268 = bitcast i16* %267 to <8 x i16>*
  %269 = load <8 x i16>, <8 x i16>* %268, align 2, !alias.scope !213
  %270 = bitcast i16* %264 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %270, align 2, !alias.scope !216, !noalias !213
  %271 = getelementptr i16, i16* %264, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %269, <8 x i16>* %272, align 2, !alias.scope !216, !noalias !213
  %273 = or i64 %250, 32
  %274 = getelementptr i16, i16* %205, i64 %273
  %275 = getelementptr i16, i16* %228, i64 %273
  %276 = bitcast i16* %274 to <8 x i16>*
  %277 = load <8 x i16>, <8 x i16>* %276, align 2, !alias.scope !213
  %278 = getelementptr i16, i16* %274, i64 8
  %279 = bitcast i16* %278 to <8 x i16>*
  %280 = load <8 x i16>, <8 x i16>* %279, align 2, !alias.scope !213
  %281 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %277, <8 x i16>* %281, align 2, !alias.scope !216, !noalias !213
  %282 = getelementptr i16, i16* %275, i64 8
  %283 = bitcast i16* %282 to <8 x i16>*
  store <8 x i16> %280, <8 x i16>* %283, align 2, !alias.scope !216, !noalias !213
  %284 = or i64 %250, 48
  %285 = getelementptr i16, i16* %205, i64 %284
  %286 = getelementptr i16, i16* %228, i64 %284
  %287 = bitcast i16* %285 to <8 x i16>*
  %288 = load <8 x i16>, <8 x i16>* %287, align 2, !alias.scope !213
  %289 = getelementptr i16, i16* %285, i64 8
  %290 = bitcast i16* %289 to <8 x i16>*
  %291 = load <8 x i16>, <8 x i16>* %290, align 2, !alias.scope !213
  %292 = bitcast i16* %286 to <8 x i16>*
  store <8 x i16> %288, <8 x i16>* %292, align 2, !alias.scope !216, !noalias !213
  %293 = getelementptr i16, i16* %286, i64 8
  %294 = bitcast i16* %293 to <8 x i16>*
  store <8 x i16> %291, <8 x i16>* %294, align 2, !alias.scope !216, !noalias !213
  %295 = add i64 %250, 64
  %296 = add i64 %251, -4
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %298, label %249, !llvm.loop !218

298:                                              ; preds = %249, %237
  %299 = phi i64 [ 0, %237 ], [ %295, %249 ]
  %300 = icmp eq i64 %245, 0
  br i1 %300, label %317, label %301

301:                                              ; preds = %298, %301
  %302 = phi i64 [ %314, %301 ], [ %299, %298 ]
  %303 = phi i64 [ %315, %301 ], [ %245, %298 ]
  %304 = getelementptr i16, i16* %205, i64 %302
  %305 = getelementptr i16, i16* %228, i64 %302
  %306 = bitcast i16* %304 to <8 x i16>*
  %307 = load <8 x i16>, <8 x i16>* %306, align 2, !alias.scope !213
  %308 = getelementptr i16, i16* %304, i64 8
  %309 = bitcast i16* %308 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !213
  %311 = bitcast i16* %305 to <8 x i16>*
  store <8 x i16> %307, <8 x i16>* %311, align 2, !alias.scope !216, !noalias !213
  %312 = getelementptr i16, i16* %305, i64 8
  %313 = bitcast i16* %312 to <8 x i16>*
  store <8 x i16> %310, <8 x i16>* %313, align 2, !alias.scope !216, !noalias !213
  %314 = add i64 %302, 16
  %315 = add i64 %303, -1
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %301, !llvm.loop !219

317:                                              ; preds = %301, %298
  %318 = icmp eq i64 %23, %238
  br i1 %318, label %372, label %319

319:                                              ; preds = %317, %230, %224
  %320 = phi i64 [ %23, %230 ], [ %23, %224 ], [ %239, %317 ]
  %321 = phi i16* [ %205, %230 ], [ %205, %224 ], [ %240, %317 ]
  %322 = phi i16* [ %228, %230 ], [ %228, %224 ], [ %241, %317 ]
  %323 = add i64 %320, -1
  %324 = and i64 %320, 7
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %337, label %326

326:                                              ; preds = %319, %326
  %327 = phi i64 [ %332, %326 ], [ %320, %319 ]
  %328 = phi i16* [ %334, %326 ], [ %321, %319 ]
  %329 = phi i16* [ %333, %326 ], [ %322, %319 ]
  %330 = phi i64 [ %335, %326 ], [ %324, %319 ]
  %331 = load i16, i16* %328, align 2
  store i16 %331, i16* %329, align 2
  %332 = add i64 %327, -1
  %333 = getelementptr inbounds i16, i16* %329, i64 1
  %334 = getelementptr inbounds i16, i16* %328, i64 1
  %335 = add i64 %330, -1
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %337, label %326, !llvm.loop !220

337:                                              ; preds = %326, %319
  %338 = phi i64 [ %320, %319 ], [ %332, %326 ]
  %339 = phi i16* [ %321, %319 ], [ %334, %326 ]
  %340 = phi i16* [ %322, %319 ], [ %333, %326 ]
  %341 = icmp ult i64 %323, 7
  br i1 %341, label %372, label %342

342:                                              ; preds = %337, %342
  %343 = phi i64 [ %368, %342 ], [ %338, %337 ]
  %344 = phi i16* [ %370, %342 ], [ %339, %337 ]
  %345 = phi i16* [ %369, %342 ], [ %340, %337 ]
  %346 = load i16, i16* %344, align 2
  store i16 %346, i16* %345, align 2
  %347 = getelementptr inbounds i16, i16* %345, i64 1
  %348 = getelementptr inbounds i16, i16* %344, i64 1
  %349 = load i16, i16* %348, align 2
  store i16 %349, i16* %347, align 2
  %350 = getelementptr inbounds i16, i16* %345, i64 2
  %351 = getelementptr inbounds i16, i16* %344, i64 2
  %352 = load i16, i16* %351, align 2
  store i16 %352, i16* %350, align 2
  %353 = getelementptr inbounds i16, i16* %345, i64 3
  %354 = getelementptr inbounds i16, i16* %344, i64 3
  %355 = load i16, i16* %354, align 2
  store i16 %355, i16* %353, align 2
  %356 = getelementptr inbounds i16, i16* %345, i64 4
  %357 = getelementptr inbounds i16, i16* %344, i64 4
  %358 = load i16, i16* %357, align 2
  store i16 %358, i16* %356, align 2
  %359 = getelementptr inbounds i16, i16* %345, i64 5
  %360 = getelementptr inbounds i16, i16* %344, i64 5
  %361 = load i16, i16* %360, align 2
  store i16 %361, i16* %359, align 2
  %362 = getelementptr inbounds i16, i16* %345, i64 6
  %363 = getelementptr inbounds i16, i16* %344, i64 6
  %364 = load i16, i16* %363, align 2
  store i16 %364, i16* %362, align 2
  %365 = getelementptr inbounds i16, i16* %345, i64 7
  %366 = getelementptr inbounds i16, i16* %344, i64 7
  %367 = load i16, i16* %366, align 2
  store i16 %367, i16* %365, align 2
  %368 = add i64 %343, -8
  %369 = getelementptr inbounds i16, i16* %345, i64 8
  %370 = getelementptr inbounds i16, i16* %344, i64 8
  %371 = icmp eq i64 %368, 0
  br i1 %371, label %372, label %342, !llvm.loop !221

372:                                              ; preds = %337, %342, %317
  %373 = add i64 %219, %23
  %374 = load i8, i8* %207, align 1
  %375 = icmp slt i8 %374, 0
  br i1 %375, label %376, label %377

376:                                              ; preds = %372
  store i64 %373, i64* %5, align 8
  br label %379

377:                                              ; preds = %372
  %378 = trunc i64 %373 to i8
  store i8 %378, i8* %207, align 1
  br label %379

379:                                              ; preds = %377, %376
  %380 = getelementptr inbounds i16, i16* %227, i64 %373
  store i16 0, i16* %380, align 2
  br label %384

381:                                              ; preds = %217
  %382 = add i64 %219, %23
  %383 = sub i64 %382, %218
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %218, i64 %383, i64 %219, i64 %219, i64 0, i64 %23, i16* %205) #17
  br label %384

384:                                              ; preds = %222, %379, %381
  ret void
}

declare void @_ZN3gfx6Canvas8FillRectERKNS_4RectEj(%"class.gfx::Canvas"*, %"class.gfx::Rect"* dereferenceable(16), i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base4i18n13BreakIterator13IsStartOfWordEm(%"class.base::i18n::BreakIterator"*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base4i18n13BreakIterator11IsEndOfWordEm(%"class.base::i18n::BreakIterator"*, i64) local_unnamed_addr #1

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairImbEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.122"*, %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::pair.124"* %1 to i64
  %5 = ptrtoint %"struct.std::__1::pair.124"* %2 to i64
  %6 = sub i64 %5, %4
  %7 = ashr exact i64 %6, 4
  %8 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.std::__1::pair.124"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.122"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 4
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.std::__1::pair.124"*
  br i1 %15, label %101, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.std::__1::pair.124"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 4
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %1, i64 %22
  %25 = select i1 %23, %"struct.std::__1::pair.124"* %24, %"struct.std::__1::pair.124"* %2
  %26 = icmp eq %"struct.std::__1::pair.124"* %25, %1
  br i1 %26, label %84, label %27

27:                                               ; preds = %17
  %28 = getelementptr %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %25, i64 -1, i32 0
  %29 = ptrtoint i64* %28 to i64
  %30 = sub i64 %29, %4
  %31 = lshr i64 %30, 4
  %32 = add nuw nsw i64 %31, 1
  %33 = and i64 %32, 3
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %49, label %35

35:                                               ; preds = %27, %35
  %36 = phi %"struct.std::__1::pair.124"* [ %46, %35 ], [ %16, %27 ]
  %37 = phi %"struct.std::__1::pair.124"* [ %45, %35 ], [ %1, %27 ]
  %38 = phi i64 [ %47, %35 ], [ %33, %27 ]
  %39 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %37, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %36, i64 0, i32 0
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %37, i64 0, i32 1
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %36, i64 0, i32 1
  store i8 %43, i8* %44, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %37, i64 1
  %46 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %36, i64 1
  %47 = add i64 %38, -1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %35, !llvm.loop !222

49:                                               ; preds = %35, %27
  %50 = phi %"struct.std::__1::pair.124"* [ undef, %27 ], [ %46, %35 ]
  %51 = phi %"struct.std::__1::pair.124"* [ %16, %27 ], [ %46, %35 ]
  %52 = phi %"struct.std::__1::pair.124"* [ %1, %27 ], [ %45, %35 ]
  %53 = icmp ult i64 %30, 48
  br i1 %53, label %84, label %54

54:                                               ; preds = %49, %54
  %55 = phi %"struct.std::__1::pair.124"* [ %82, %54 ], [ %51, %49 ]
  %56 = phi %"struct.std::__1::pair.124"* [ %81, %54 ], [ %52, %49 ]
  %57 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %56, i64 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %55, i64 0, i32 0
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %56, i64 0, i32 1
  %61 = load i8, i8* %60, align 8, !range !2
  %62 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %55, i64 0, i32 1
  store i8 %61, i8* %62, align 8
  %63 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %56, i64 1, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %55, i64 1, i32 0
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %56, i64 1, i32 1
  %67 = load i8, i8* %66, align 8, !range !2
  %68 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %55, i64 1, i32 1
  store i8 %67, i8* %68, align 8
  %69 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %56, i64 2, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %55, i64 2, i32 0
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %56, i64 2, i32 1
  %73 = load i8, i8* %72, align 8, !range !2
  %74 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %55, i64 2, i32 1
  store i8 %73, i8* %74, align 8
  %75 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %56, i64 3, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %55, i64 3, i32 0
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %56, i64 3, i32 1
  %79 = load i8, i8* %78, align 8, !range !2
  %80 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %55, i64 3, i32 1
  store i8 %79, i8* %80, align 8
  %81 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %56, i64 4
  %82 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %55, i64 4
  %83 = icmp eq %"struct.std::__1::pair.124"* %81, %25
  br i1 %83, label %84, label %54

84:                                               ; preds = %49, %54, %17
  %85 = phi %"struct.std::__1::pair.124"* [ %16, %17 ], [ %50, %49 ], [ %82, %54 ]
  br i1 %23, label %86, label %100

86:                                               ; preds = %84
  %87 = load i64, i64* %19, align 8
  %88 = ptrtoint %"struct.std::__1::pair.124"* %25 to i64
  %89 = sub i64 %5, %88
  %90 = icmp sgt i64 %89, 0
  br i1 %90, label %91, label %98

91:                                               ; preds = %86
  %92 = lshr exact i64 %89, 4
  %93 = inttoptr i64 %87 to i8*
  %94 = bitcast %"struct.std::__1::pair.124"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 %89, i1 false) #17
  %95 = inttoptr i64 %87 to %"struct.std::__1::pair.124"*
  %96 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %95, i64 %92
  %97 = ptrtoint %"struct.std::__1::pair.124"* %96 to i64
  br label %98

98:                                               ; preds = %86, %91
  %99 = phi i64 [ %97, %91 ], [ %87, %86 ]
  store i64 %99, i64* %19, align 8
  br label %142

100:                                              ; preds = %84
  store %"struct.std::__1::pair.124"* %85, %"struct.std::__1::pair.124"** %18, align 8
  br label %142

101:                                              ; preds = %3
  %102 = icmp eq i64 %12, 0
  br i1 %102, label %108, label %103

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %0, i64 0, i32 0, i32 1
  %105 = bitcast %"struct.std::__1::pair.124"** %104 to i64*
  store i64 %12, i64* %105, align 8
  %106 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %106) #18
  %107 = bitcast %"class.std::__1::vector.122"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 24, i1 false) #17
  br label %108

108:                                              ; preds = %101, %103
  %109 = phi i64 [ %10, %101 ], [ 0, %103 ]
  %110 = icmp ugt i64 %7, 1152921504606846975
  br i1 %110, label %111, label %113

111:                                              ; preds = %108
  %112 = bitcast %"class.std::__1::vector.122"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %112) #19
  unreachable

113:                                              ; preds = %108
  %114 = ashr exact i64 %109, 4
  %115 = icmp ult i64 %114, 576460752303423487
  br i1 %115, label %116, label %123

116:                                              ; preds = %113
  %117 = ashr exact i64 %109, 3
  %118 = icmp ult i64 %117, %7
  br i1 %118, label %123, label %119

119:                                              ; preds = %116
  %120 = icmp ugt i64 %117, 1152921504606846975
  br i1 %120, label %121, label %123

121:                                              ; preds = %119
  %122 = bitcast %"class.std::__1::vector.122"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %122) #19
  unreachable

123:                                              ; preds = %116, %113, %119
  %124 = phi i64 [ %117, %119 ], [ 1152921504606846975, %113 ], [ %7, %116 ]
  %125 = shl i64 %124, 4
  %126 = tail call i8* @_Znwm(i64 %125) #18
  %127 = bitcast i8* %126 to %"struct.std::__1::pair.124"*
  %128 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %0, i64 0, i32 0, i32 1
  %129 = bitcast %"struct.std::__1::pair.124"** %128 to i8**
  store i8* %126, i8** %129, align 8
  %130 = bitcast %"class.std::__1::vector.122"* %0 to i8**
  store i8* %126, i8** %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %127, i64 %124
  store %"struct.std::__1::pair.124"* %131, %"struct.std::__1::pair.124"** %8, align 8
  %132 = bitcast %"struct.std::__1::pair.124"** %128 to i64*
  %133 = ptrtoint i8* %126 to i64
  %134 = icmp sgt i64 %6, 0
  br i1 %134, label %135, label %140

135:                                              ; preds = %123
  %136 = lshr exact i64 %6, 4
  %137 = bitcast %"struct.std::__1::pair.124"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %126, i8* align 8 %137, i64 %6, i1 false) #17
  %138 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %127, i64 %136
  %139 = ptrtoint %"struct.std::__1::pair.124"* %138 to i64
  br label %140

140:                                              ; preds = %123, %135
  %141 = phi i64 [ %139, %135 ], [ %133, %123 ]
  store i64 %141, i64* %132, align 8
  br label %142

142:                                              ; preds = %98, %100, %140
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #14

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairImN3gfx13BaselineStyleEEENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.92"*, %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::pair.94"* %1 to i64
  %5 = ptrtoint %"struct.std::__1::pair.94"* %2 to i64
  %6 = sub i64 %5, %4
  %7 = ashr exact i64 %6, 4
  %8 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.std::__1::pair.94"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.92"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 4
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.std::__1::pair.94"*
  br i1 %15, label %101, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.std::__1::pair.94"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 4
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %1, i64 %22
  %25 = select i1 %23, %"struct.std::__1::pair.94"* %24, %"struct.std::__1::pair.94"* %2
  %26 = icmp eq %"struct.std::__1::pair.94"* %25, %1
  br i1 %26, label %84, label %27

27:                                               ; preds = %17
  %28 = getelementptr %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %25, i64 -1, i32 0
  %29 = ptrtoint i64* %28 to i64
  %30 = sub i64 %29, %4
  %31 = lshr i64 %30, 4
  %32 = add nuw nsw i64 %31, 1
  %33 = and i64 %32, 3
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %49, label %35

35:                                               ; preds = %27, %35
  %36 = phi %"struct.std::__1::pair.94"* [ %46, %35 ], [ %16, %27 ]
  %37 = phi %"struct.std::__1::pair.94"* [ %45, %35 ], [ %1, %27 ]
  %38 = phi i64 [ %47, %35 ], [ %33, %27 ]
  %39 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %37, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %36, i64 0, i32 0
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %37, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %36, i64 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %37, i64 1
  %46 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %36, i64 1
  %47 = add i64 %38, -1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %35, !llvm.loop !223

49:                                               ; preds = %35, %27
  %50 = phi %"struct.std::__1::pair.94"* [ undef, %27 ], [ %46, %35 ]
  %51 = phi %"struct.std::__1::pair.94"* [ %16, %27 ], [ %46, %35 ]
  %52 = phi %"struct.std::__1::pair.94"* [ %1, %27 ], [ %45, %35 ]
  %53 = icmp ult i64 %30, 48
  br i1 %53, label %84, label %54

54:                                               ; preds = %49, %54
  %55 = phi %"struct.std::__1::pair.94"* [ %82, %54 ], [ %51, %49 ]
  %56 = phi %"struct.std::__1::pair.94"* [ %81, %54 ], [ %52, %49 ]
  %57 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %56, i64 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %55, i64 0, i32 0
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %56, i64 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %55, i64 0, i32 1
  store i32 %61, i32* %62, align 8
  %63 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %56, i64 1, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %55, i64 1, i32 0
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %56, i64 1, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %55, i64 1, i32 1
  store i32 %67, i32* %68, align 8
  %69 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %56, i64 2, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %55, i64 2, i32 0
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %56, i64 2, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %55, i64 2, i32 1
  store i32 %73, i32* %74, align 8
  %75 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %56, i64 3, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %55, i64 3, i32 0
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %56, i64 3, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %55, i64 3, i32 1
  store i32 %79, i32* %80, align 8
  %81 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %56, i64 4
  %82 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %55, i64 4
  %83 = icmp eq %"struct.std::__1::pair.94"* %81, %25
  br i1 %83, label %84, label %54

84:                                               ; preds = %49, %54, %17
  %85 = phi %"struct.std::__1::pair.94"* [ %16, %17 ], [ %50, %49 ], [ %82, %54 ]
  br i1 %23, label %86, label %100

86:                                               ; preds = %84
  %87 = load i64, i64* %19, align 8
  %88 = ptrtoint %"struct.std::__1::pair.94"* %25 to i64
  %89 = sub i64 %5, %88
  %90 = icmp sgt i64 %89, 0
  br i1 %90, label %91, label %98

91:                                               ; preds = %86
  %92 = lshr exact i64 %89, 4
  %93 = inttoptr i64 %87 to i8*
  %94 = bitcast %"struct.std::__1::pair.94"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 %89, i1 false) #17
  %95 = inttoptr i64 %87 to %"struct.std::__1::pair.94"*
  %96 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %95, i64 %92
  %97 = ptrtoint %"struct.std::__1::pair.94"* %96 to i64
  br label %98

98:                                               ; preds = %86, %91
  %99 = phi i64 [ %97, %91 ], [ %87, %86 ]
  store i64 %99, i64* %19, align 8
  br label %142

100:                                              ; preds = %84
  store %"struct.std::__1::pair.94"* %85, %"struct.std::__1::pair.94"** %18, align 8
  br label %142

101:                                              ; preds = %3
  %102 = icmp eq i64 %12, 0
  br i1 %102, label %108, label %103

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %0, i64 0, i32 0, i32 1
  %105 = bitcast %"struct.std::__1::pair.94"** %104 to i64*
  store i64 %12, i64* %105, align 8
  %106 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %106) #18
  %107 = bitcast %"class.std::__1::vector.92"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 24, i1 false) #17
  br label %108

108:                                              ; preds = %101, %103
  %109 = phi i64 [ %10, %101 ], [ 0, %103 ]
  %110 = icmp ugt i64 %7, 1152921504606846975
  br i1 %110, label %111, label %113

111:                                              ; preds = %108
  %112 = bitcast %"class.std::__1::vector.92"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %112) #19
  unreachable

113:                                              ; preds = %108
  %114 = ashr exact i64 %109, 4
  %115 = icmp ult i64 %114, 576460752303423487
  br i1 %115, label %116, label %123

116:                                              ; preds = %113
  %117 = ashr exact i64 %109, 3
  %118 = icmp ult i64 %117, %7
  br i1 %118, label %123, label %119

119:                                              ; preds = %116
  %120 = icmp ugt i64 %117, 1152921504606846975
  br i1 %120, label %121, label %123

121:                                              ; preds = %119
  %122 = bitcast %"class.std::__1::vector.92"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %122) #19
  unreachable

123:                                              ; preds = %116, %113, %119
  %124 = phi i64 [ %117, %119 ], [ 1152921504606846975, %113 ], [ %7, %116 ]
  %125 = shl i64 %124, 4
  %126 = tail call i8* @_Znwm(i64 %125) #18
  %127 = bitcast i8* %126 to %"struct.std::__1::pair.94"*
  %128 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %0, i64 0, i32 0, i32 1
  %129 = bitcast %"struct.std::__1::pair.94"** %128 to i8**
  store i8* %126, i8** %129, align 8
  %130 = bitcast %"class.std::__1::vector.92"* %0 to i8**
  store i8* %126, i8** %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %127, i64 %124
  store %"struct.std::__1::pair.94"* %131, %"struct.std::__1::pair.94"** %8, align 8
  %132 = bitcast %"struct.std::__1::pair.94"** %128 to i64*
  %133 = ptrtoint i8* %126 to i64
  %134 = icmp sgt i64 %6, 0
  br i1 %134, label %135, label %140

135:                                              ; preds = %123
  %136 = lshr exact i64 %6, 4
  %137 = bitcast %"struct.std::__1::pair.94"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %126, i8* align 8 %137, i64 %6, i1 false) #17
  %138 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %127, i64 %136
  %139 = ptrtoint %"struct.std::__1::pair.94"* %138 to i64
  br label %140

140:                                              ; preds = %123, %135
  %141 = phi i64 [ %139, %135 ], [ %133, %123 ]
  store i64 %141, i64* %132, align 8
  br label %142

142:                                              ; preds = %98, %100, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairImiEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.102"*, %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::pair.104"* %1 to i64
  %5 = ptrtoint %"struct.std::__1::pair.104"* %2 to i64
  %6 = sub i64 %5, %4
  %7 = ashr exact i64 %6, 4
  %8 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.std::__1::pair.104"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.102"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 4
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.std::__1::pair.104"*
  br i1 %15, label %101, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.std::__1::pair.104"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 4
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %1, i64 %22
  %25 = select i1 %23, %"struct.std::__1::pair.104"* %24, %"struct.std::__1::pair.104"* %2
  %26 = icmp eq %"struct.std::__1::pair.104"* %25, %1
  br i1 %26, label %84, label %27

27:                                               ; preds = %17
  %28 = getelementptr %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %25, i64 -1, i32 0
  %29 = ptrtoint i64* %28 to i64
  %30 = sub i64 %29, %4
  %31 = lshr i64 %30, 4
  %32 = add nuw nsw i64 %31, 1
  %33 = and i64 %32, 3
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %49, label %35

35:                                               ; preds = %27, %35
  %36 = phi %"struct.std::__1::pair.104"* [ %46, %35 ], [ %16, %27 ]
  %37 = phi %"struct.std::__1::pair.104"* [ %45, %35 ], [ %1, %27 ]
  %38 = phi i64 [ %47, %35 ], [ %33, %27 ]
  %39 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %37, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %36, i64 0, i32 0
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %37, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %36, i64 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %37, i64 1
  %46 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %36, i64 1
  %47 = add i64 %38, -1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %35, !llvm.loop !224

49:                                               ; preds = %35, %27
  %50 = phi %"struct.std::__1::pair.104"* [ undef, %27 ], [ %46, %35 ]
  %51 = phi %"struct.std::__1::pair.104"* [ %16, %27 ], [ %46, %35 ]
  %52 = phi %"struct.std::__1::pair.104"* [ %1, %27 ], [ %45, %35 ]
  %53 = icmp ult i64 %30, 48
  br i1 %53, label %84, label %54

54:                                               ; preds = %49, %54
  %55 = phi %"struct.std::__1::pair.104"* [ %82, %54 ], [ %51, %49 ]
  %56 = phi %"struct.std::__1::pair.104"* [ %81, %54 ], [ %52, %49 ]
  %57 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %56, i64 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %55, i64 0, i32 0
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %56, i64 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %55, i64 0, i32 1
  store i32 %61, i32* %62, align 8
  %63 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %56, i64 1, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %55, i64 1, i32 0
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %56, i64 1, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %55, i64 1, i32 1
  store i32 %67, i32* %68, align 8
  %69 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %56, i64 2, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %55, i64 2, i32 0
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %56, i64 2, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %55, i64 2, i32 1
  store i32 %73, i32* %74, align 8
  %75 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %56, i64 3, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %55, i64 3, i32 0
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %56, i64 3, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %55, i64 3, i32 1
  store i32 %79, i32* %80, align 8
  %81 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %56, i64 4
  %82 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %55, i64 4
  %83 = icmp eq %"struct.std::__1::pair.104"* %81, %25
  br i1 %83, label %84, label %54

84:                                               ; preds = %49, %54, %17
  %85 = phi %"struct.std::__1::pair.104"* [ %16, %17 ], [ %50, %49 ], [ %82, %54 ]
  br i1 %23, label %86, label %100

86:                                               ; preds = %84
  %87 = load i64, i64* %19, align 8
  %88 = ptrtoint %"struct.std::__1::pair.104"* %25 to i64
  %89 = sub i64 %5, %88
  %90 = icmp sgt i64 %89, 0
  br i1 %90, label %91, label %98

91:                                               ; preds = %86
  %92 = lshr exact i64 %89, 4
  %93 = inttoptr i64 %87 to i8*
  %94 = bitcast %"struct.std::__1::pair.104"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 %89, i1 false) #17
  %95 = inttoptr i64 %87 to %"struct.std::__1::pair.104"*
  %96 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %95, i64 %92
  %97 = ptrtoint %"struct.std::__1::pair.104"* %96 to i64
  br label %98

98:                                               ; preds = %86, %91
  %99 = phi i64 [ %97, %91 ], [ %87, %86 ]
  store i64 %99, i64* %19, align 8
  br label %142

100:                                              ; preds = %84
  store %"struct.std::__1::pair.104"* %85, %"struct.std::__1::pair.104"** %18, align 8
  br label %142

101:                                              ; preds = %3
  %102 = icmp eq i64 %12, 0
  br i1 %102, label %108, label %103

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %0, i64 0, i32 0, i32 1
  %105 = bitcast %"struct.std::__1::pair.104"** %104 to i64*
  store i64 %12, i64* %105, align 8
  %106 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %106) #18
  %107 = bitcast %"class.std::__1::vector.102"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 24, i1 false) #17
  br label %108

108:                                              ; preds = %101, %103
  %109 = phi i64 [ %10, %101 ], [ 0, %103 ]
  %110 = icmp ugt i64 %7, 1152921504606846975
  br i1 %110, label %111, label %113

111:                                              ; preds = %108
  %112 = bitcast %"class.std::__1::vector.102"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %112) #19
  unreachable

113:                                              ; preds = %108
  %114 = ashr exact i64 %109, 4
  %115 = icmp ult i64 %114, 576460752303423487
  br i1 %115, label %116, label %123

116:                                              ; preds = %113
  %117 = ashr exact i64 %109, 3
  %118 = icmp ult i64 %117, %7
  br i1 %118, label %123, label %119

119:                                              ; preds = %116
  %120 = icmp ugt i64 %117, 1152921504606846975
  br i1 %120, label %121, label %123

121:                                              ; preds = %119
  %122 = bitcast %"class.std::__1::vector.102"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %122) #19
  unreachable

123:                                              ; preds = %116, %113, %119
  %124 = phi i64 [ %117, %119 ], [ 1152921504606846975, %113 ], [ %7, %116 ]
  %125 = shl i64 %124, 4
  %126 = tail call i8* @_Znwm(i64 %125) #18
  %127 = bitcast i8* %126 to %"struct.std::__1::pair.104"*
  %128 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %0, i64 0, i32 0, i32 1
  %129 = bitcast %"struct.std::__1::pair.104"** %128 to i8**
  store i8* %126, i8** %129, align 8
  %130 = bitcast %"class.std::__1::vector.102"* %0 to i8**
  store i8* %126, i8** %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %127, i64 %124
  store %"struct.std::__1::pair.104"* %131, %"struct.std::__1::pair.104"** %8, align 8
  %132 = bitcast %"struct.std::__1::pair.104"** %128 to i64*
  %133 = ptrtoint i8* %126 to i64
  %134 = icmp sgt i64 %6, 0
  br i1 %134, label %135, label %140

135:                                              ; preds = %123
  %136 = lshr exact i64 %6, 4
  %137 = bitcast %"struct.std::__1::pair.104"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %126, i8* align 8 %137, i64 %6, i1 false) #17
  %138 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %127, i64 %136
  %139 = ptrtoint %"struct.std::__1::pair.104"* %138 to i64
  br label %140

140:                                              ; preds = %123, %135
  %141 = phi i64 [ %139, %135 ], [ %133, %123 ]
  store i64 %141, i64* %132, align 8
  br label %142

142:                                              ; preds = %98, %100, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairImjEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.84"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %5 = ptrtoint %"struct.std::__1::pair"* %2 to i64
  %6 = sub i64 %5, %4
  %7 = ashr exact i64 %6, 4
  %8 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.std::__1::pair"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.84"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 4
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.std::__1::pair"*
  br i1 %15, label %101, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.std::__1::pair"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 4
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 %22
  %25 = select i1 %23, %"struct.std::__1::pair"* %24, %"struct.std::__1::pair"* %2
  %26 = icmp eq %"struct.std::__1::pair"* %25, %1
  br i1 %26, label %84, label %27

27:                                               ; preds = %17
  %28 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 -1, i32 0
  %29 = ptrtoint i64* %28 to i64
  %30 = sub i64 %29, %4
  %31 = lshr i64 %30, 4
  %32 = add nuw nsw i64 %31, 1
  %33 = and i64 %32, 3
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %49, label %35

35:                                               ; preds = %27, %35
  %36 = phi %"struct.std::__1::pair"* [ %46, %35 ], [ %16, %27 ]
  %37 = phi %"struct.std::__1::pair"* [ %45, %35 ], [ %1, %27 ]
  %38 = phi i64 [ %47, %35 ], [ %33, %27 ]
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 0
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 1
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 1
  %47 = add i64 %38, -1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %35, !llvm.loop !225

49:                                               ; preds = %35, %27
  %50 = phi %"struct.std::__1::pair"* [ undef, %27 ], [ %46, %35 ]
  %51 = phi %"struct.std::__1::pair"* [ %16, %27 ], [ %46, %35 ]
  %52 = phi %"struct.std::__1::pair"* [ %1, %27 ], [ %45, %35 ]
  %53 = icmp ult i64 %30, 48
  br i1 %53, label %84, label %54

54:                                               ; preds = %49, %54
  %55 = phi %"struct.std::__1::pair"* [ %82, %54 ], [ %51, %49 ]
  %56 = phi %"struct.std::__1::pair"* [ %81, %54 ], [ %52, %49 ]
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 0
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 1
  store i32 %61, i32* %62, align 8
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 1, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 1, i32 0
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 1, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 1, i32 1
  store i32 %67, i32* %68, align 8
  %69 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 2, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 2, i32 0
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 2, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 2, i32 1
  store i32 %73, i32* %74, align 8
  %75 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 3, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 3, i32 0
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 3, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 3, i32 1
  store i32 %79, i32* %80, align 8
  %81 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 4
  %82 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 4
  %83 = icmp eq %"struct.std::__1::pair"* %81, %25
  br i1 %83, label %84, label %54

84:                                               ; preds = %49, %54, %17
  %85 = phi %"struct.std::__1::pair"* [ %16, %17 ], [ %50, %49 ], [ %82, %54 ]
  br i1 %23, label %86, label %100

86:                                               ; preds = %84
  %87 = load i64, i64* %19, align 8
  %88 = ptrtoint %"struct.std::__1::pair"* %25 to i64
  %89 = sub i64 %5, %88
  %90 = icmp sgt i64 %89, 0
  br i1 %90, label %91, label %98

91:                                               ; preds = %86
  %92 = lshr exact i64 %89, 4
  %93 = inttoptr i64 %87 to i8*
  %94 = bitcast %"struct.std::__1::pair"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 %89, i1 false) #17
  %95 = inttoptr i64 %87 to %"struct.std::__1::pair"*
  %96 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %95, i64 %92
  %97 = ptrtoint %"struct.std::__1::pair"* %96 to i64
  br label %98

98:                                               ; preds = %86, %91
  %99 = phi i64 [ %97, %91 ], [ %87, %86 ]
  store i64 %99, i64* %19, align 8
  br label %142

100:                                              ; preds = %84
  store %"struct.std::__1::pair"* %85, %"struct.std::__1::pair"** %18, align 8
  br label %142

101:                                              ; preds = %3
  %102 = icmp eq i64 %12, 0
  br i1 %102, label %108, label %103

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %0, i64 0, i32 0, i32 1
  %105 = bitcast %"struct.std::__1::pair"** %104 to i64*
  store i64 %12, i64* %105, align 8
  %106 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %106) #18
  %107 = bitcast %"class.std::__1::vector.84"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 24, i1 false) #17
  br label %108

108:                                              ; preds = %101, %103
  %109 = phi i64 [ %10, %101 ], [ 0, %103 ]
  %110 = icmp ugt i64 %7, 1152921504606846975
  br i1 %110, label %111, label %113

111:                                              ; preds = %108
  %112 = bitcast %"class.std::__1::vector.84"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %112) #19
  unreachable

113:                                              ; preds = %108
  %114 = ashr exact i64 %109, 4
  %115 = icmp ult i64 %114, 576460752303423487
  br i1 %115, label %116, label %123

116:                                              ; preds = %113
  %117 = ashr exact i64 %109, 3
  %118 = icmp ult i64 %117, %7
  br i1 %118, label %123, label %119

119:                                              ; preds = %116
  %120 = icmp ugt i64 %117, 1152921504606846975
  br i1 %120, label %121, label %123

121:                                              ; preds = %119
  %122 = bitcast %"class.std::__1::vector.84"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %122) #19
  unreachable

123:                                              ; preds = %116, %113, %119
  %124 = phi i64 [ %117, %119 ], [ 1152921504606846975, %113 ], [ %7, %116 ]
  %125 = shl i64 %124, 4
  %126 = tail call i8* @_Znwm(i64 %125) #18
  %127 = bitcast i8* %126 to %"struct.std::__1::pair"*
  %128 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %0, i64 0, i32 0, i32 1
  %129 = bitcast %"struct.std::__1::pair"** %128 to i8**
  store i8* %126, i8** %129, align 8
  %130 = bitcast %"class.std::__1::vector.84"* %0 to i8**
  store i8* %126, i8** %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %127, i64 %124
  store %"struct.std::__1::pair"* %131, %"struct.std::__1::pair"** %8, align 8
  %132 = bitcast %"struct.std::__1::pair"** %128 to i64*
  %133 = ptrtoint i8* %126 to i64
  %134 = icmp sgt i64 %6, 0
  br i1 %134, label %135, label %140

135:                                              ; preds = %123
  %136 = lshr exact i64 %6, 4
  %137 = bitcast %"struct.std::__1::pair"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %126, i8* align 8 %137, i64 %6, i1 false) #17
  %138 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %127, i64 %136
  %139 = ptrtoint %"struct.std::__1::pair"* %138 to i64
  br label %140

140:                                              ; preds = %123, %135
  %141 = phi i64 [ %139, %135 ], [ %133, %123 ]
  store i64 %141, i64* %132, align 8
  br label %142

142:                                              ; preds = %98, %100, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairImN3gfx4Font6WeightEEENS_9allocatorIS5_EEE6assignIPS5_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.112"*, %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::pair.114"* %1 to i64
  %5 = ptrtoint %"struct.std::__1::pair.114"* %2 to i64
  %6 = sub i64 %5, %4
  %7 = ashr exact i64 %6, 4
  %8 = getelementptr inbounds %"class.std::__1::vector.112", %"class.std::__1::vector.112"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.std::__1::pair.114"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.112"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 4
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.std::__1::pair.114"*
  br i1 %15, label %101, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.112", %"class.std::__1::vector.112"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.std::__1::pair.114"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 4
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %1, i64 %22
  %25 = select i1 %23, %"struct.std::__1::pair.114"* %24, %"struct.std::__1::pair.114"* %2
  %26 = icmp eq %"struct.std::__1::pair.114"* %25, %1
  br i1 %26, label %84, label %27

27:                                               ; preds = %17
  %28 = getelementptr %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %25, i64 -1, i32 0
  %29 = ptrtoint i64* %28 to i64
  %30 = sub i64 %29, %4
  %31 = lshr i64 %30, 4
  %32 = add nuw nsw i64 %31, 1
  %33 = and i64 %32, 3
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %49, label %35

35:                                               ; preds = %27, %35
  %36 = phi %"struct.std::__1::pair.114"* [ %46, %35 ], [ %16, %27 ]
  %37 = phi %"struct.std::__1::pair.114"* [ %45, %35 ], [ %1, %27 ]
  %38 = phi i64 [ %47, %35 ], [ %33, %27 ]
  %39 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %37, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %36, i64 0, i32 0
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %37, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %36, i64 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %37, i64 1
  %46 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %36, i64 1
  %47 = add i64 %38, -1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %35, !llvm.loop !226

49:                                               ; preds = %35, %27
  %50 = phi %"struct.std::__1::pair.114"* [ undef, %27 ], [ %46, %35 ]
  %51 = phi %"struct.std::__1::pair.114"* [ %16, %27 ], [ %46, %35 ]
  %52 = phi %"struct.std::__1::pair.114"* [ %1, %27 ], [ %45, %35 ]
  %53 = icmp ult i64 %30, 48
  br i1 %53, label %84, label %54

54:                                               ; preds = %49, %54
  %55 = phi %"struct.std::__1::pair.114"* [ %82, %54 ], [ %51, %49 ]
  %56 = phi %"struct.std::__1::pair.114"* [ %81, %54 ], [ %52, %49 ]
  %57 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %56, i64 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %55, i64 0, i32 0
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %56, i64 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %55, i64 0, i32 1
  store i32 %61, i32* %62, align 8
  %63 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %56, i64 1, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %55, i64 1, i32 0
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %56, i64 1, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %55, i64 1, i32 1
  store i32 %67, i32* %68, align 8
  %69 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %56, i64 2, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %55, i64 2, i32 0
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %56, i64 2, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %55, i64 2, i32 1
  store i32 %73, i32* %74, align 8
  %75 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %56, i64 3, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %55, i64 3, i32 0
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %56, i64 3, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %55, i64 3, i32 1
  store i32 %79, i32* %80, align 8
  %81 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %56, i64 4
  %82 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %55, i64 4
  %83 = icmp eq %"struct.std::__1::pair.114"* %81, %25
  br i1 %83, label %84, label %54

84:                                               ; preds = %49, %54, %17
  %85 = phi %"struct.std::__1::pair.114"* [ %16, %17 ], [ %50, %49 ], [ %82, %54 ]
  br i1 %23, label %86, label %100

86:                                               ; preds = %84
  %87 = load i64, i64* %19, align 8
  %88 = ptrtoint %"struct.std::__1::pair.114"* %25 to i64
  %89 = sub i64 %5, %88
  %90 = icmp sgt i64 %89, 0
  br i1 %90, label %91, label %98

91:                                               ; preds = %86
  %92 = lshr exact i64 %89, 4
  %93 = inttoptr i64 %87 to i8*
  %94 = bitcast %"struct.std::__1::pair.114"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 %89, i1 false) #17
  %95 = inttoptr i64 %87 to %"struct.std::__1::pair.114"*
  %96 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %95, i64 %92
  %97 = ptrtoint %"struct.std::__1::pair.114"* %96 to i64
  br label %98

98:                                               ; preds = %86, %91
  %99 = phi i64 [ %97, %91 ], [ %87, %86 ]
  store i64 %99, i64* %19, align 8
  br label %142

100:                                              ; preds = %84
  store %"struct.std::__1::pair.114"* %85, %"struct.std::__1::pair.114"** %18, align 8
  br label %142

101:                                              ; preds = %3
  %102 = icmp eq i64 %12, 0
  br i1 %102, label %108, label %103

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"class.std::__1::vector.112", %"class.std::__1::vector.112"* %0, i64 0, i32 0, i32 1
  %105 = bitcast %"struct.std::__1::pair.114"** %104 to i64*
  store i64 %12, i64* %105, align 8
  %106 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %106) #18
  %107 = bitcast %"class.std::__1::vector.112"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 24, i1 false) #17
  br label %108

108:                                              ; preds = %101, %103
  %109 = phi i64 [ %10, %101 ], [ 0, %103 ]
  %110 = icmp ugt i64 %7, 1152921504606846975
  br i1 %110, label %111, label %113

111:                                              ; preds = %108
  %112 = bitcast %"class.std::__1::vector.112"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %112) #19
  unreachable

113:                                              ; preds = %108
  %114 = ashr exact i64 %109, 4
  %115 = icmp ult i64 %114, 576460752303423487
  br i1 %115, label %116, label %123

116:                                              ; preds = %113
  %117 = ashr exact i64 %109, 3
  %118 = icmp ult i64 %117, %7
  br i1 %118, label %123, label %119

119:                                              ; preds = %116
  %120 = icmp ugt i64 %117, 1152921504606846975
  br i1 %120, label %121, label %123

121:                                              ; preds = %119
  %122 = bitcast %"class.std::__1::vector.112"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %122) #19
  unreachable

123:                                              ; preds = %116, %113, %119
  %124 = phi i64 [ %117, %119 ], [ 1152921504606846975, %113 ], [ %7, %116 ]
  %125 = shl i64 %124, 4
  %126 = tail call i8* @_Znwm(i64 %125) #18
  %127 = bitcast i8* %126 to %"struct.std::__1::pair.114"*
  %128 = getelementptr inbounds %"class.std::__1::vector.112", %"class.std::__1::vector.112"* %0, i64 0, i32 0, i32 1
  %129 = bitcast %"struct.std::__1::pair.114"** %128 to i8**
  store i8* %126, i8** %129, align 8
  %130 = bitcast %"class.std::__1::vector.112"* %0 to i8**
  store i8* %126, i8** %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %127, i64 %124
  store %"struct.std::__1::pair.114"* %131, %"struct.std::__1::pair.114"** %8, align 8
  %132 = bitcast %"struct.std::__1::pair.114"** %128 to i64*
  %133 = ptrtoint i8* %126 to i64
  %134 = icmp sgt i64 %6, 0
  br i1 %134, label %135, label %140

135:                                              ; preds = %123
  %136 = lshr exact i64 %6, 4
  %137 = bitcast %"struct.std::__1::pair.114"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %126, i8* align 8 %137, i64 %6, i1 false) #17
  %138 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %127, i64 %136
  %139 = ptrtoint %"struct.std::__1::pair.114"* %138 to i64
  br label %140

140:                                              ; preds = %123, %135
  %141 = phi i64 [ %139, %135 ], [ %133, %123 ]
  store i64 %141, i64* %132, align 8
  br label %142

142:                                              ; preds = %98, %100, %140
  ret void
}

declare zeroext i1 @_ZNK3gfx14SelectionModeleqERKS0_(%"class.gfx::SelectionModel"*, %"class.gfx::SelectionModel"* dereferenceable(40)) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #16

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #16

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #16

declare signext i8 @u_charType_69(i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #16

declare i32 @_ZNK3gfx8FontList20GetExpectedTextWidthEi(%"class.gfx::FontList"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3gfx12_GLOBAL__N_113AddFadeEffectERKNS_4RectES3_jjPNSt3__16vectorIfNS4_9allocatorIfEEEEPNS5_IjNS6_IjEEEE(%"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"class.gfx::Rect"* nocapture readonly dereferenceable(16), i32, i32, %"class.std::__1::vector.55"*, %"class.std::__1::vector"*) unnamed_addr #0 {
  %7 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = sub nsw i32 %8, %10
  %12 = sitofp i32 %11 to float
  %13 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = sitofp i32 %14 to float
  %16 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = sitofp i32 %17 to float
  %19 = fdiv float %12, %18
  %20 = fadd float %12, %15
  %21 = fdiv float %20, %18
  %22 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %4, i64 0, i32 0, i32 0
  %23 = load float*, float** %22, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %4, i64 0, i32 0, i32 1
  %25 = load float*, float** %24, align 8
  %26 = icmp eq float* %23, %25
  %27 = fcmp une float %19, 0.000000e+00
  %28 = and i1 %26, %27
  %29 = ptrtoint float* %23 to i64
  %30 = ptrtoint float* %25 to i64
  br i1 %28, label %31, label %144

31:                                               ; preds = %6
  %32 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %33 = load float*, float** %32, align 8
  %34 = icmp ult float* %23, %33
  br i1 %34, label %35, label %40

35:                                               ; preds = %31
  %36 = bitcast float* %23 to i32*
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds float, float* %23, i64 1
  %38 = ptrtoint float* %37 to i64
  %39 = bitcast float** %24 to i64*
  store i64 %38, i64* %39, align 8
  br label %77

40:                                               ; preds = %31
  %41 = ptrtoint float* %33 to i64
  %42 = bitcast float** %24 to i64*
  %43 = bitcast %"class.std::__1::vector.55"* %4 to i64*
  %44 = bitcast float** %32 to i64*
  %45 = sub i64 %41, %29
  %46 = ashr exact i64 %45, 2
  %47 = icmp ult i64 %46, 2305843009213693951
  br i1 %47, label %48, label %54

48:                                               ; preds = %40
  %49 = ashr exact i64 %45, 1
  %50 = icmp eq i64 %45, 0
  %51 = select i1 %50, i64 1, i64 %49
  %52 = icmp ugt i64 %51, 4611686018427387903
  br i1 %52, label %53, label %54

53:                                               ; preds = %48
  tail call void @abort() #19
  unreachable

54:                                               ; preds = %40, %48
  %55 = phi i64 [ %51, %48 ], [ 4611686018427387903, %40 ]
  %56 = shl i64 %55, 2
  %57 = tail call i8* @_Znwm(i64 %56) #18
  %58 = bitcast i8* %57 to float*
  %59 = getelementptr inbounds float, float* %58, i64 %55
  %60 = ptrtoint float* %59 to i64
  %61 = bitcast i8* %57 to i32*
  store i32 0, i32* %61, align 4
  %62 = getelementptr inbounds i8, i8* %57, i64 4
  %63 = ptrtoint i8* %62 to i64
  %64 = sub i64 %30, %29
  %65 = ashr exact i64 %64, 2
  %66 = sub nsw i64 0, %65
  %67 = getelementptr inbounds float, float* %58, i64 %66
  %68 = ptrtoint float* %67 to i64
  %69 = icmp sgt i64 %64, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %54
  %71 = bitcast float* %67 to i8*
  %72 = bitcast float* %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %71, i8* align 4 %72, i64 %64, i1 false) #17
  br label %73

73:                                               ; preds = %70, %54
  store i64 %68, i64* %43, align 8
  store i64 %63, i64* %42, align 8
  store i64 %60, i64* %44, align 8
  %74 = icmp eq float* %23, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %73
  %76 = bitcast float* %23 to i8*
  tail call void @_ZdlPv(i8* %76) #18
  br label %77

77:                                               ; preds = %35, %73, %75
  %78 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %79 = load i32*, i32** %78, align 8
  %80 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %81 = load i32*, i32** %80, align 8
  %82 = icmp eq i32* %79, %81
  %83 = ptrtoint i32* %81 to i64
  br i1 %82, label %88, label %84

84:                                               ; preds = %77
  store i32 %2, i32* %79, align 4
  %85 = getelementptr inbounds i32, i32* %79, i64 1
  %86 = ptrtoint i32* %85 to i64
  %87 = bitcast i32** %78 to i64*
  store i64 %86, i64* %87, align 8
  br label %144

88:                                               ; preds = %77
  %89 = ptrtoint i32* %79 to i64
  %90 = bitcast i32** %78 to i64*
  %91 = bitcast %"class.std::__1::vector"* %5 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = sub i64 %89, %92
  %94 = ashr exact i64 %93, 2
  %95 = add nsw i64 %94, 1
  %96 = icmp ugt i64 %95, 4611686018427387903
  br i1 %96, label %97, label %99

97:                                               ; preds = %88
  %98 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %98) #19
  unreachable

99:                                               ; preds = %88
  %100 = bitcast i32** %80 to i64*
  %101 = sub i64 %83, %92
  %102 = ashr exact i64 %101, 2
  %103 = icmp ult i64 %102, 2305843009213693951
  br i1 %103, label %104, label %112

104:                                              ; preds = %99
  %105 = ashr exact i64 %101, 1
  %106 = icmp ult i64 %105, %95
  %107 = select i1 %106, i64 %95, i64 %105
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %117, label %109

109:                                              ; preds = %104
  %110 = icmp ugt i64 %107, 4611686018427387903
  br i1 %110, label %111, label %112

111:                                              ; preds = %109
  tail call void @abort() #19
  unreachable

112:                                              ; preds = %109, %99
  %113 = phi i64 [ %107, %109 ], [ 4611686018427387903, %99 ]
  %114 = shl i64 %113, 2
  %115 = tail call i8* @_Znwm(i64 %114) #18
  %116 = bitcast i8* %115 to i32*
  br label %117

117:                                              ; preds = %112, %104
  %118 = phi i64 [ %113, %112 ], [ 0, %104 ]
  %119 = phi i32* [ %116, %112 ], [ null, %104 ]
  %120 = getelementptr inbounds i32, i32* %119, i64 %94
  %121 = getelementptr inbounds i32, i32* %119, i64 %118
  %122 = ptrtoint i32* %121 to i64
  store i32 %2, i32* %120, align 4
  %123 = getelementptr inbounds i32, i32* %120, i64 1
  %124 = ptrtoint i32* %123 to i64
  %125 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %126 = load i32*, i32** %125, align 8
  %127 = load i64, i64* %90, align 8
  %128 = ptrtoint i32* %126 to i64
  %129 = sub i64 %127, %128
  %130 = ashr exact i64 %129, 2
  %131 = sub nsw i64 0, %130
  %132 = getelementptr inbounds i32, i32* %120, i64 %131
  %133 = ptrtoint i32* %132 to i64
  %134 = icmp sgt i64 %129, 0
  br i1 %134, label %135, label %139

135:                                              ; preds = %117
  %136 = bitcast i32* %132 to i8*
  %137 = bitcast i32* %126 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %136, i8* align 4 %137, i64 %129, i1 false) #17
  %138 = load i32*, i32** %125, align 8
  br label %139

139:                                              ; preds = %135, %117
  %140 = phi i32* [ %126, %117 ], [ %138, %135 ]
  store i64 %133, i64* %91, align 8
  store i64 %124, i64* %90, align 8
  store i64 %122, i64* %100, align 8
  %141 = icmp eq i32* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %139
  %143 = bitcast i32* %140 to i8*
  tail call void @_ZdlPv(i8* %143) #18
  br label %144

144:                                              ; preds = %142, %139, %84, %6
  %145 = load float*, float** %24, align 8
  %146 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %147 = load float*, float** %146, align 8
  %148 = icmp eq float* %145, %147
  %149 = ptrtoint float* %147 to i64
  br i1 %148, label %154, label %150

150:                                              ; preds = %144
  store float %19, float* %145, align 4
  %151 = getelementptr inbounds float, float* %145, i64 1
  %152 = ptrtoint float* %151 to i64
  %153 = bitcast float** %24 to i64*
  store i64 %152, i64* %153, align 8
  br label %209

154:                                              ; preds = %144
  %155 = ptrtoint float* %145 to i64
  %156 = bitcast float** %24 to i64*
  %157 = bitcast %"class.std::__1::vector.55"* %4 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = sub i64 %155, %158
  %160 = ashr exact i64 %159, 2
  %161 = add nsw i64 %160, 1
  %162 = icmp ugt i64 %161, 4611686018427387903
  br i1 %162, label %163, label %165

163:                                              ; preds = %154
  %164 = bitcast %"class.std::__1::vector.55"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %164) #19
  unreachable

165:                                              ; preds = %154
  %166 = bitcast float** %146 to i64*
  %167 = sub i64 %149, %158
  %168 = ashr exact i64 %167, 2
  %169 = icmp ult i64 %168, 2305843009213693951
  br i1 %169, label %170, label %178

170:                                              ; preds = %165
  %171 = ashr exact i64 %167, 1
  %172 = icmp ult i64 %171, %161
  %173 = select i1 %172, i64 %161, i64 %171
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %183, label %175

175:                                              ; preds = %170
  %176 = icmp ugt i64 %173, 4611686018427387903
  br i1 %176, label %177, label %178

177:                                              ; preds = %175
  tail call void @abort() #19
  unreachable

178:                                              ; preds = %175, %165
  %179 = phi i64 [ %173, %175 ], [ 4611686018427387903, %165 ]
  %180 = shl i64 %179, 2
  %181 = tail call i8* @_Znwm(i64 %180) #18
  %182 = bitcast i8* %181 to float*
  br label %183

183:                                              ; preds = %178, %170
  %184 = phi i64 [ %179, %178 ], [ 0, %170 ]
  %185 = phi float* [ %182, %178 ], [ null, %170 ]
  %186 = getelementptr inbounds float, float* %185, i64 %160
  %187 = getelementptr inbounds float, float* %185, i64 %184
  %188 = ptrtoint float* %187 to i64
  store float %19, float* %186, align 4
  %189 = getelementptr inbounds float, float* %186, i64 1
  %190 = ptrtoint float* %189 to i64
  %191 = load float*, float** %22, align 8
  %192 = load i64, i64* %156, align 8
  %193 = ptrtoint float* %191 to i64
  %194 = sub i64 %192, %193
  %195 = ashr exact i64 %194, 2
  %196 = sub nsw i64 0, %195
  %197 = getelementptr inbounds float, float* %186, i64 %196
  %198 = ptrtoint float* %197 to i64
  %199 = icmp sgt i64 %194, 0
  br i1 %199, label %200, label %204

200:                                              ; preds = %183
  %201 = bitcast float* %197 to i8*
  %202 = bitcast float* %191 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %201, i8* align 4 %202, i64 %194, i1 false) #17
  %203 = load float*, float** %22, align 8
  br label %204

204:                                              ; preds = %200, %183
  %205 = phi float* [ %191, %183 ], [ %203, %200 ]
  store i64 %198, i64* %157, align 8
  store i64 %190, i64* %156, align 8
  store i64 %188, i64* %166, align 8
  %206 = icmp eq float* %205, null
  br i1 %206, label %209, label %207

207:                                              ; preds = %204
  %208 = bitcast float* %205 to i8*
  tail call void @_ZdlPv(i8* %208) #18
  br label %209

209:                                              ; preds = %150, %204, %207
  %210 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %211 = load i32*, i32** %210, align 8
  %212 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %213 = load i32*, i32** %212, align 8
  %214 = icmp eq i32* %211, %213
  %215 = ptrtoint i32* %213 to i64
  br i1 %214, label %220, label %216

216:                                              ; preds = %209
  store i32 %2, i32* %211, align 4
  %217 = getelementptr inbounds i32, i32* %211, i64 1
  %218 = ptrtoint i32* %217 to i64
  %219 = bitcast i32** %210 to i64*
  store i64 %218, i64* %219, align 8
  br label %276

220:                                              ; preds = %209
  %221 = ptrtoint i32* %211 to i64
  %222 = bitcast i32** %210 to i64*
  %223 = bitcast %"class.std::__1::vector"* %5 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = sub i64 %221, %224
  %226 = ashr exact i64 %225, 2
  %227 = add nsw i64 %226, 1
  %228 = icmp ugt i64 %227, 4611686018427387903
  br i1 %228, label %229, label %231

229:                                              ; preds = %220
  %230 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %230) #19
  unreachable

231:                                              ; preds = %220
  %232 = bitcast i32** %212 to i64*
  %233 = sub i64 %215, %224
  %234 = ashr exact i64 %233, 2
  %235 = icmp ult i64 %234, 2305843009213693951
  br i1 %235, label %236, label %244

236:                                              ; preds = %231
  %237 = ashr exact i64 %233, 1
  %238 = icmp ult i64 %237, %227
  %239 = select i1 %238, i64 %227, i64 %237
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %249, label %241

241:                                              ; preds = %236
  %242 = icmp ugt i64 %239, 4611686018427387903
  br i1 %242, label %243, label %244

243:                                              ; preds = %241
  tail call void @abort() #19
  unreachable

244:                                              ; preds = %241, %231
  %245 = phi i64 [ %239, %241 ], [ 4611686018427387903, %231 ]
  %246 = shl i64 %245, 2
  %247 = tail call i8* @_Znwm(i64 %246) #18
  %248 = bitcast i8* %247 to i32*
  br label %249

249:                                              ; preds = %244, %236
  %250 = phi i64 [ %245, %244 ], [ 0, %236 ]
  %251 = phi i32* [ %248, %244 ], [ null, %236 ]
  %252 = getelementptr inbounds i32, i32* %251, i64 %226
  %253 = getelementptr inbounds i32, i32* %251, i64 %250
  %254 = ptrtoint i32* %253 to i64
  store i32 %2, i32* %252, align 4
  %255 = getelementptr inbounds i32, i32* %252, i64 1
  %256 = ptrtoint i32* %255 to i64
  %257 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %258 = load i32*, i32** %257, align 8
  %259 = load i64, i64* %222, align 8
  %260 = ptrtoint i32* %258 to i64
  %261 = sub i64 %259, %260
  %262 = ashr exact i64 %261, 2
  %263 = sub nsw i64 0, %262
  %264 = getelementptr inbounds i32, i32* %252, i64 %263
  %265 = ptrtoint i32* %264 to i64
  %266 = icmp sgt i64 %261, 0
  br i1 %266, label %267, label %271

267:                                              ; preds = %249
  %268 = bitcast i32* %264 to i8*
  %269 = bitcast i32* %258 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %268, i8* align 4 %269, i64 %261, i1 false) #17
  %270 = load i32*, i32** %257, align 8
  br label %271

271:                                              ; preds = %267, %249
  %272 = phi i32* [ %258, %249 ], [ %270, %267 ]
  store i64 %265, i64* %223, align 8
  store i64 %256, i64* %222, align 8
  store i64 %254, i64* %232, align 8
  %273 = icmp eq i32* %272, null
  br i1 %273, label %276, label %274

274:                                              ; preds = %271
  %275 = bitcast i32* %272 to i8*
  tail call void @_ZdlPv(i8* %275) #18
  br label %276

276:                                              ; preds = %216, %271, %274
  %277 = load float*, float** %24, align 8
  %278 = load float*, float** %146, align 8
  %279 = icmp eq float* %277, %278
  %280 = ptrtoint float* %278 to i64
  br i1 %279, label %285, label %281

281:                                              ; preds = %276
  store float %21, float* %277, align 4
  %282 = getelementptr inbounds float, float* %277, i64 1
  %283 = ptrtoint float* %282 to i64
  %284 = bitcast float** %24 to i64*
  store i64 %283, i64* %284, align 8
  br label %340

285:                                              ; preds = %276
  %286 = ptrtoint float* %277 to i64
  %287 = bitcast float** %24 to i64*
  %288 = bitcast %"class.std::__1::vector.55"* %4 to i64*
  %289 = load i64, i64* %288, align 8
  %290 = sub i64 %286, %289
  %291 = ashr exact i64 %290, 2
  %292 = add nsw i64 %291, 1
  %293 = icmp ugt i64 %292, 4611686018427387903
  br i1 %293, label %294, label %296

294:                                              ; preds = %285
  %295 = bitcast %"class.std::__1::vector.55"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %295) #19
  unreachable

296:                                              ; preds = %285
  %297 = bitcast float** %146 to i64*
  %298 = sub i64 %280, %289
  %299 = ashr exact i64 %298, 2
  %300 = icmp ult i64 %299, 2305843009213693951
  br i1 %300, label %301, label %309

301:                                              ; preds = %296
  %302 = ashr exact i64 %298, 1
  %303 = icmp ult i64 %302, %292
  %304 = select i1 %303, i64 %292, i64 %302
  %305 = icmp eq i64 %304, 0
  br i1 %305, label %314, label %306

306:                                              ; preds = %301
  %307 = icmp ugt i64 %304, 4611686018427387903
  br i1 %307, label %308, label %309

308:                                              ; preds = %306
  tail call void @abort() #19
  unreachable

309:                                              ; preds = %306, %296
  %310 = phi i64 [ %304, %306 ], [ 4611686018427387903, %296 ]
  %311 = shl i64 %310, 2
  %312 = tail call i8* @_Znwm(i64 %311) #18
  %313 = bitcast i8* %312 to float*
  br label %314

314:                                              ; preds = %309, %301
  %315 = phi i64 [ %310, %309 ], [ 0, %301 ]
  %316 = phi float* [ %313, %309 ], [ null, %301 ]
  %317 = getelementptr inbounds float, float* %316, i64 %291
  %318 = getelementptr inbounds float, float* %316, i64 %315
  %319 = ptrtoint float* %318 to i64
  store float %21, float* %317, align 4
  %320 = getelementptr inbounds float, float* %317, i64 1
  %321 = ptrtoint float* %320 to i64
  %322 = load float*, float** %22, align 8
  %323 = load i64, i64* %287, align 8
  %324 = ptrtoint float* %322 to i64
  %325 = sub i64 %323, %324
  %326 = ashr exact i64 %325, 2
  %327 = sub nsw i64 0, %326
  %328 = getelementptr inbounds float, float* %317, i64 %327
  %329 = ptrtoint float* %328 to i64
  %330 = icmp sgt i64 %325, 0
  br i1 %330, label %331, label %335

331:                                              ; preds = %314
  %332 = bitcast float* %328 to i8*
  %333 = bitcast float* %322 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %332, i8* align 4 %333, i64 %325, i1 false) #17
  %334 = load float*, float** %22, align 8
  br label %335

335:                                              ; preds = %331, %314
  %336 = phi float* [ %322, %314 ], [ %334, %331 ]
  store i64 %329, i64* %288, align 8
  store i64 %321, i64* %287, align 8
  store i64 %319, i64* %297, align 8
  %337 = icmp eq float* %336, null
  br i1 %337, label %340, label %338

338:                                              ; preds = %335
  %339 = bitcast float* %336 to i8*
  tail call void @_ZdlPv(i8* %339) #18
  br label %340

340:                                              ; preds = %281, %335, %338
  %341 = load i32*, i32** %210, align 8
  %342 = load i32*, i32** %212, align 8
  %343 = icmp eq i32* %341, %342
  %344 = ptrtoint i32* %342 to i64
  br i1 %343, label %349, label %345

345:                                              ; preds = %340
  store i32 %3, i32* %341, align 4
  %346 = getelementptr inbounds i32, i32* %341, i64 1
  %347 = ptrtoint i32* %346 to i64
  %348 = bitcast i32** %210 to i64*
  store i64 %347, i64* %348, align 8
  br label %405

349:                                              ; preds = %340
  %350 = ptrtoint i32* %341 to i64
  %351 = bitcast i32** %210 to i64*
  %352 = bitcast %"class.std::__1::vector"* %5 to i64*
  %353 = load i64, i64* %352, align 8
  %354 = sub i64 %350, %353
  %355 = ashr exact i64 %354, 2
  %356 = add nsw i64 %355, 1
  %357 = icmp ugt i64 %356, 4611686018427387903
  br i1 %357, label %358, label %360

358:                                              ; preds = %349
  %359 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %359) #19
  unreachable

360:                                              ; preds = %349
  %361 = bitcast i32** %212 to i64*
  %362 = sub i64 %344, %353
  %363 = ashr exact i64 %362, 2
  %364 = icmp ult i64 %363, 2305843009213693951
  br i1 %364, label %365, label %373

365:                                              ; preds = %360
  %366 = ashr exact i64 %362, 1
  %367 = icmp ult i64 %366, %356
  %368 = select i1 %367, i64 %356, i64 %366
  %369 = icmp eq i64 %368, 0
  br i1 %369, label %378, label %370

370:                                              ; preds = %365
  %371 = icmp ugt i64 %368, 4611686018427387903
  br i1 %371, label %372, label %373

372:                                              ; preds = %370
  tail call void @abort() #19
  unreachable

373:                                              ; preds = %370, %360
  %374 = phi i64 [ %368, %370 ], [ 4611686018427387903, %360 ]
  %375 = shl i64 %374, 2
  %376 = tail call i8* @_Znwm(i64 %375) #18
  %377 = bitcast i8* %376 to i32*
  br label %378

378:                                              ; preds = %373, %365
  %379 = phi i64 [ %374, %373 ], [ 0, %365 ]
  %380 = phi i32* [ %377, %373 ], [ null, %365 ]
  %381 = getelementptr inbounds i32, i32* %380, i64 %355
  %382 = getelementptr inbounds i32, i32* %380, i64 %379
  %383 = ptrtoint i32* %382 to i64
  store i32 %3, i32* %381, align 4
  %384 = getelementptr inbounds i32, i32* %381, i64 1
  %385 = ptrtoint i32* %384 to i64
  %386 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %387 = load i32*, i32** %386, align 8
  %388 = load i64, i64* %351, align 8
  %389 = ptrtoint i32* %387 to i64
  %390 = sub i64 %388, %389
  %391 = ashr exact i64 %390, 2
  %392 = sub nsw i64 0, %391
  %393 = getelementptr inbounds i32, i32* %381, i64 %392
  %394 = ptrtoint i32* %393 to i64
  %395 = icmp sgt i64 %390, 0
  br i1 %395, label %396, label %400

396:                                              ; preds = %378
  %397 = bitcast i32* %393 to i8*
  %398 = bitcast i32* %387 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %397, i8* align 4 %398, i64 %390, i1 false) #17
  %399 = load i32*, i32** %386, align 8
  br label %400

400:                                              ; preds = %396, %378
  %401 = phi i32* [ %387, %378 ], [ %399, %396 ]
  store i64 %394, i64* %352, align 8
  store i64 %385, i64* %351, align 8
  store i64 %383, i64* %361, align 8
  %402 = icmp eq i32* %401, null
  br i1 %402, label %405, label %403

403:                                              ; preds = %400
  %404 = bitcast i32* %401 to i8*
  tail call void @_ZdlPv(i8* %404) #18
  br label %405

405:                                              ; preds = %345, %400, %403
  ret void
}

declare <2 x float> @_ZN3gfx14PointToSkPointERKNS_5PointE(%"class.gfx::Point"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN2cc11PaintShader18MakeLinearGradientEPK7SkPointPKjPKfi10SkTileModejPK8SkMatrixj(%class.sk_sp.33* sret, %struct.SkPoint*, i32*, float*, i32, i32, i32, %class.SkMatrix*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #16

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN10SkTextBlobdlEPv(i8*) local_unnamed_addr #2

declare void @_ZN3gfx18RenderTextHarfBuzzC1Ev(%"class.gfx::RenderTextHarfBuzz"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #19
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #19
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #18
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !227
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !227
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !230, !noalias !227
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !230, !noalias !227
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !227
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !227
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !230, !noalias !227
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !230, !noalias !227
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !227
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !227
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !230, !noalias !227
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !230, !noalias !227
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !227
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !227
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !230, !noalias !227
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !230, !noalias !227
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !232

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !227
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !227
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !230, !noalias !227
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !230, !noalias !227
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !233

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !234

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !235

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !236

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !237

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !238

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !240
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !240
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !243, !noalias !240
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !243, !noalias !240
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !240
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !240
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !243, !noalias !240
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !243, !noalias !240
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !240
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !240
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !243, !noalias !240
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !243, !noalias !240
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !240
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !240
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !243, !noalias !240
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !243, !noalias !240
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !245

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !240
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !240
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !243, !noalias !240
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !243, !noalias !240
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !246

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !247

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !248

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #18
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gfx5RangeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.157"*, %"class.gfx::Range"*, %"class.gfx::Range"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.gfx::Range"* %2 to i64
  %5 = ptrtoint %"class.gfx::Range"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector.157", %"class.std::__1::vector.157"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.gfx::Range"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.157"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.gfx::Range"*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.157", %"class.std::__1::vector.157"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.gfx::Range"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %1, i64 %22
  %25 = select i1 %23, %"class.gfx::Range"* %24, %"class.gfx::Range"* %2
  %26 = ptrtoint %"class.gfx::Range"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"class.gfx::Range"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #17
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %"class.gfx::Range"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #17
  %42 = inttoptr i64 %35 to %"class.gfx::Range"*
  %43 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %42, i64 %39
  %44 = ptrtoint %"class.gfx::Range"* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %16, i64 %28
  store %"class.gfx::Range"* %48, %"class.gfx::Range"** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.157", %"class.std::__1::vector.157"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"class.gfx::Range"** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #18
  %55 = bitcast %"class.std::__1::vector.157"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #17
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.157"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #19
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.157"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #19
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #18
  %75 = bitcast i8* %74 to %"class.gfx::Range"*
  %76 = getelementptr inbounds %"class.std::__1::vector.157", %"class.std::__1::vector.157"* %0, i64 0, i32 0, i32 1
  %77 = bitcast %"class.gfx::Range"** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.157"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %75, i64 %72
  store %"class.gfx::Range"* %79, %"class.gfx::Range"** %8, align 8
  %80 = bitcast %"class.gfx::Range"** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = bitcast %"class.gfx::Range"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #17
  %86 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %75, i64 %84
  %87 = ptrtoint %"class.gfx::Range"* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairImjEENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EEOS2_(%"class.std::__1::vector.84"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.321", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %0, i64 0, i32 0, i32 1
  %8 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %11 = icmp ult %"struct.std::__1::pair"* %8, %10
  %12 = ptrtoint %"struct.std::__1::pair"* %8 to i64
  %13 = ptrtoint %"struct.std::__1::pair"* %10 to i64
  br i1 %11, label %14, label %143

14:                                               ; preds = %3
  %15 = icmp eq %"struct.std::__1::pair"* %8, %1
  br i1 %15, label %16, label %22

16:                                               ; preds = %14
  %17 = bitcast %"struct.std::__1::pair"* %1 to i8*
  %18 = bitcast %"struct.std::__1::pair"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 16, i1 false) #17
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 1
  %20 = ptrtoint %"struct.std::__1::pair"* %19 to i64
  %21 = bitcast %"struct.std::__1::pair"** %7 to i64*
  store i64 %20, i64* %21, align 8
  br label %294

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 1
  %24 = ptrtoint %"struct.std::__1::pair"* %23 to i64
  %25 = sub i64 %12, %24
  %26 = ashr exact i64 %25, 4
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 %26
  %28 = bitcast %"struct.std::__1::pair"** %7 to i64*
  %29 = icmp ult %"struct.std::__1::pair"* %27, %8
  br i1 %29, label %30, label %59

30:                                               ; preds = %22
  %31 = sub nsw i64 0, %26
  %32 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %8, i64 %31, i32 0
  %33 = bitcast i64* %32 to i8*
  %34 = xor i64 %4, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = ptrtoint i8* %35 to i64
  %37 = lshr i64 %36, 4
  %38 = add nuw nsw i64 %37, 1
  %39 = and i64 %38, 3
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %30, %41
  %42 = phi %"struct.std::__1::pair"* [ %48, %41 ], [ %8, %30 ]
  %43 = phi %"struct.std::__1::pair"* [ %47, %41 ], [ %27, %30 ]
  %44 = phi i64 [ %49, %41 ], [ %39, %30 ]
  %45 = bitcast %"struct.std::__1::pair"* %42 to i8*
  %46 = bitcast %"struct.std::__1::pair"* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 16, i1 false) #17
  %47 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %43, i64 1
  %48 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %42, i64 1
  %49 = add i64 %44, -1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %41, !llvm.loop !249

51:                                               ; preds = %41, %30
  %52 = phi %"struct.std::__1::pair"* [ %8, %30 ], [ %48, %41 ]
  %53 = phi %"struct.std::__1::pair"* [ %27, %30 ], [ %47, %41 ]
  %54 = phi %"struct.std::__1::pair"* [ undef, %30 ], [ %48, %41 ]
  %55 = icmp ult i8* %35, inttoptr (i64 48 to i8*)
  br i1 %55, label %56, label %116

56:                                               ; preds = %116, %51
  %57 = phi %"struct.std::__1::pair"* [ %54, %51 ], [ %134, %116 ]
  %58 = ptrtoint %"struct.std::__1::pair"* %57 to i64
  br label %59

59:                                               ; preds = %56, %22
  %60 = phi i64 [ %58, %56 ], [ %12, %22 ]
  store i64 %60, i64* %28, align 8
  %61 = icmp eq i64 %25, 0
  br i1 %61, label %136, label %62

62:                                               ; preds = %59
  %63 = add i64 %25, -16
  %64 = lshr i64 %63, 4
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 3
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %82, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.std::__1::pair"* [ %73, %68 ], [ %8, %62 ]
  %70 = phi %"struct.std::__1::pair"* [ %72, %68 ], [ %27, %62 ]
  %71 = phi i64 [ %80, %68 ], [ %66, %62 ]
  %72 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 -1
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 -1
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %72, i64 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %73, i64 0, i32 0
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 -1, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 -1, i32 1
  store i32 %78, i32* %79, align 8
  %80 = add i64 %71, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %68, !llvm.loop !250

82:                                               ; preds = %68, %62
  %83 = phi %"struct.std::__1::pair"* [ %8, %62 ], [ %73, %68 ]
  %84 = phi %"struct.std::__1::pair"* [ %27, %62 ], [ %72, %68 ]
  %85 = icmp ult i64 %63, 48
  br i1 %85, label %136, label %86

86:                                               ; preds = %82, %86
  %87 = phi %"struct.std::__1::pair"* [ %108, %86 ], [ %83, %82 ]
  %88 = phi %"struct.std::__1::pair"* [ %107, %86 ], [ %84, %82 ]
  %89 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 -1, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 -1, i32 0
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 -1, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 -1, i32 1
  store i32 %93, i32* %94, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 -2, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 -2, i32 0
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 -2, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 -2, i32 1
  store i32 %99, i32* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 -3, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 -3, i32 0
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 -3, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 -3, i32 1
  store i32 %105, i32* %106, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 -4
  %108 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 -4
  %109 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %107, i64 0, i32 0
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %108, i64 0, i32 0
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 -4, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 -4, i32 1
  store i32 %113, i32* %114, align 8
  %115 = icmp eq %"struct.std::__1::pair"* %107, %1
  br i1 %115, label %136, label %86

116:                                              ; preds = %51, %116
  %117 = phi %"struct.std::__1::pair"* [ %134, %116 ], [ %52, %51 ]
  %118 = phi %"struct.std::__1::pair"* [ %133, %116 ], [ %53, %51 ]
  %119 = bitcast %"struct.std::__1::pair"* %117 to i8*
  %120 = bitcast %"struct.std::__1::pair"* %118 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 16, i1 false) #17
  %121 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %118, i64 1
  %122 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %117, i64 1
  %123 = bitcast %"struct.std::__1::pair"* %122 to i8*
  %124 = bitcast %"struct.std::__1::pair"* %121 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %123, i8* align 8 %124, i64 16, i1 false) #17
  %125 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %118, i64 2
  %126 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %117, i64 2
  %127 = bitcast %"struct.std::__1::pair"* %126 to i8*
  %128 = bitcast %"struct.std::__1::pair"* %125 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* align 8 %128, i64 16, i1 false) #17
  %129 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %118, i64 3
  %130 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %117, i64 3
  %131 = bitcast %"struct.std::__1::pair"* %130 to i8*
  %132 = bitcast %"struct.std::__1::pair"* %129 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 16, i1 false) #17
  %133 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %118, i64 4
  %134 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %117, i64 4
  %135 = icmp ult %"struct.std::__1::pair"* %133, %8
  br i1 %135, label %116, label %56

136:                                              ; preds = %82, %86, %59
  %137 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0
  %138 = load i64, i64* %137, align 8
  %139 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %141 = load i32, i32* %140, align 4
  %142 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  store i32 %141, i32* %142, align 8
  br label %294

143:                                              ; preds = %3
  %144 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %0, i64 0, i32 0, i32 2
  %145 = bitcast %"struct.std::__1::__split_buffer.321"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %145) #17
  %146 = getelementptr inbounds %"struct.std::__1::__split_buffer.321", %"struct.std::__1::__split_buffer.321"* %5, i64 0, i32 0
  %147 = getelementptr inbounds %"struct.std::__1::__split_buffer.321", %"struct.std::__1::__split_buffer.321"* %5, i64 0, i32 1
  %148 = getelementptr inbounds %"struct.std::__1::__split_buffer.321", %"struct.std::__1::__split_buffer.321"* %5, i64 0, i32 2
  %149 = getelementptr inbounds %"struct.std::__1::__split_buffer.321", %"struct.std::__1::__split_buffer.321"* %5, i64 0, i32 3, i32 0, i32 0
  %150 = getelementptr inbounds %"struct.std::__1::__split_buffer.321", %"struct.std::__1::__split_buffer.321"* %5, i64 0, i32 3, i32 1, i32 0
  %151 = bitcast %"struct.std::__1::pair"** %7 to i64*
  %152 = bitcast %"class.std::__1::vector.84"* %0 to i64*
  %153 = bitcast %"struct.std::__1::__split_buffer.321"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %153, i8 -86, i64 40, i1 false)
  %154 = load i64, i64* %152, align 8
  %155 = sub i64 %12, %154
  %156 = ashr exact i64 %155, 4
  %157 = add nsw i64 %156, 1
  %158 = icmp ugt i64 %157, 1152921504606846975
  br i1 %158, label %159, label %161

159:                                              ; preds = %143
  %160 = bitcast %"class.std::__1::vector.84"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %160) #19
  unreachable

161:                                              ; preds = %143
  %162 = bitcast %"struct.std::__1::pair"** %9 to i64*
  %163 = sub i64 %13, %154
  %164 = ashr exact i64 %163, 4
  %165 = icmp ult i64 %164, 576460752303423487
  br i1 %165, label %170, label %166

166:                                              ; preds = %161
  %167 = sub i64 %4, %154
  %168 = ashr exact i64 %167, 4
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %149, align 8
  %169 = bitcast %"class.std::__1::allocator.89"** %150 to %"class.std::__1::__compressed_pair.86"**
  store %"class.std::__1::__compressed_pair.86"* %144, %"class.std::__1::__compressed_pair.86"** %169, align 8
  br label %181

170:                                              ; preds = %161
  %171 = ashr exact i64 %163, 3
  %172 = icmp ult i64 %171, %157
  %173 = select i1 %172, i64 %157, i64 %171
  %174 = sub i64 %4, %154
  %175 = ashr exact i64 %174, 4
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %149, align 8
  %176 = bitcast %"class.std::__1::allocator.89"** %150 to %"class.std::__1::__compressed_pair.86"**
  store %"class.std::__1::__compressed_pair.86"* %144, %"class.std::__1::__compressed_pair.86"** %176, align 8
  %177 = icmp eq i64 %173, 0
  br i1 %177, label %187, label %178

178:                                              ; preds = %170
  %179 = icmp ugt i64 %173, 1152921504606846975
  br i1 %179, label %180, label %181

180:                                              ; preds = %178
  tail call void @abort() #19
  unreachable

181:                                              ; preds = %166, %178
  %182 = phi i64 [ 1152921504606846975, %166 ], [ %173, %178 ]
  %183 = phi i64 [ %168, %166 ], [ %175, %178 ]
  %184 = shl i64 %182, 4
  %185 = tail call i8* @_Znwm(i64 %184) #18
  %186 = bitcast i8* %185 to %"struct.std::__1::pair"*
  br label %187

187:                                              ; preds = %170, %181
  %188 = phi i64 [ %183, %181 ], [ %175, %170 ]
  %189 = phi i64 [ %182, %181 ], [ 0, %170 ]
  %190 = phi %"struct.std::__1::pair"* [ %186, %181 ], [ null, %170 ]
  store %"struct.std::__1::pair"* %190, %"struct.std::__1::pair"** %146, align 8
  %191 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %190, i64 %188
  store %"struct.std::__1::pair"* %191, %"struct.std::__1::pair"** %148, align 8
  store %"struct.std::__1::pair"* %191, %"struct.std::__1::pair"** %147, align 8
  %192 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %190, i64 %189
  store %"struct.std::__1::pair"* %192, %"struct.std::__1::pair"** %149, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairImjEERNS_9allocatorIS2_EEE9push_backEOS2_(%"struct.std::__1::__split_buffer.321"* nonnull %5, %"struct.std::__1::pair"* dereferenceable(16) %2)
  %193 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %147, align 8
  %194 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %195 = ptrtoint %"struct.std::__1::pair"* %194 to i64
  %196 = sub i64 %4, %195
  %197 = ashr exact i64 %196, 4
  %198 = sub nsw i64 0, %197
  %199 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %193, i64 %198
  store %"struct.std::__1::pair"* %199, %"struct.std::__1::pair"** %147, align 8
  %200 = icmp sgt i64 %196, 0
  br i1 %200, label %201, label %204

201:                                              ; preds = %187
  %202 = bitcast %"struct.std::__1::pair"* %199 to i8*
  %203 = bitcast %"struct.std::__1::pair"* %194 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %202, i8* align 8 %203, i64 %196, i1 false) #17
  br label %204

204:                                              ; preds = %201, %187
  %205 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %7, align 8
  %206 = icmp eq %"struct.std::__1::pair"* %205, %1
  br i1 %206, label %207, label %211

207:                                              ; preds = %204
  %208 = ptrtoint %"struct.std::__1::pair"* %205 to i64
  %209 = bitcast %"struct.std::__1::pair"** %148 to i64*
  %210 = load i64, i64* %209, align 8
  br label %268

211:                                              ; preds = %204
  %212 = bitcast %"struct.std::__1::pair"** %148 to i8**
  %213 = load i8*, i8** %212, align 8
  %214 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %205, i64 -1, i32 0
  %215 = ptrtoint i64* %214 to i64
  %216 = sub i64 %215, %4
  %217 = lshr i64 %216, 4
  %218 = add nuw nsw i64 %217, 1
  %219 = and i64 %218, 3
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %234, label %221

221:                                              ; preds = %211, %221
  %222 = phi i8* [ %229, %221 ], [ %213, %211 ]
  %223 = phi %"struct.std::__1::pair"* [ %226, %221 ], [ %1, %211 ]
  %224 = phi i64 [ %230, %221 ], [ %219, %211 ]
  %225 = bitcast %"struct.std::__1::pair"* %223 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* align 8 %225, i64 16, i1 false) #17
  %226 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %223, i64 1
  %227 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %148, align 8
  %228 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %227, i64 1
  store %"struct.std::__1::pair"* %228, %"struct.std::__1::pair"** %148, align 8
  %229 = bitcast %"struct.std::__1::pair"* %228 to i8*
  %230 = add i64 %224, -1
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %232, label %221, !llvm.loop !251

232:                                              ; preds = %221
  %233 = bitcast %"struct.std::__1::pair"* %228 to i8*
  br label %234

234:                                              ; preds = %211, %232
  %235 = phi %"struct.std::__1::pair"* [ undef, %211 ], [ %228, %232 ]
  %236 = phi i8* [ %213, %211 ], [ %233, %232 ]
  %237 = phi %"struct.std::__1::pair"* [ %1, %211 ], [ %226, %232 ]
  %238 = icmp ult i64 %216, 48
  br i1 %238, label %263, label %239

239:                                              ; preds = %234, %239
  %240 = phi i8* [ %262, %239 ], [ %236, %234 ]
  %241 = phi %"struct.std::__1::pair"* [ %258, %239 ], [ %237, %234 ]
  %242 = bitcast %"struct.std::__1::pair"* %241 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %240, i8* align 8 %242, i64 16, i1 false) #17
  %243 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %241, i64 1
  %244 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %148, align 8
  %245 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %244, i64 1
  store %"struct.std::__1::pair"* %245, %"struct.std::__1::pair"** %148, align 8
  %246 = bitcast %"struct.std::__1::pair"* %245 to i8*
  %247 = bitcast %"struct.std::__1::pair"* %243 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %246, i8* align 8 %247, i64 16, i1 false) #17
  %248 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %241, i64 2
  %249 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %148, align 8
  %250 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %249, i64 1
  store %"struct.std::__1::pair"* %250, %"struct.std::__1::pair"** %148, align 8
  %251 = bitcast %"struct.std::__1::pair"* %250 to i8*
  %252 = bitcast %"struct.std::__1::pair"* %248 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %251, i8* align 8 %252, i64 16, i1 false) #17
  %253 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %241, i64 3
  %254 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %148, align 8
  %255 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %254, i64 1
  store %"struct.std::__1::pair"* %255, %"struct.std::__1::pair"** %148, align 8
  %256 = bitcast %"struct.std::__1::pair"* %255 to i8*
  %257 = bitcast %"struct.std::__1::pair"* %253 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %256, i8* align 8 %257, i64 16, i1 false) #17
  %258 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %241, i64 4
  %259 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %148, align 8
  %260 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %259, i64 1
  store %"struct.std::__1::pair"* %260, %"struct.std::__1::pair"** %148, align 8
  %261 = icmp eq %"struct.std::__1::pair"* %258, %205
  %262 = bitcast %"struct.std::__1::pair"* %260 to i8*
  br i1 %261, label %263, label %239

263:                                              ; preds = %239, %234
  %264 = phi %"struct.std::__1::pair"* [ %235, %234 ], [ %260, %239 ]
  %265 = ptrtoint %"struct.std::__1::pair"* %264 to i64
  %266 = load i64, i64* %151, align 8
  %267 = bitcast %"struct.std::__1::pair"** %148 to i64*
  br label %268

268:                                              ; preds = %207, %263
  %269 = phi i64* [ %209, %207 ], [ %267, %263 ]
  %270 = phi i64 [ %210, %207 ], [ %265, %263 ]
  %271 = phi i64 [ %208, %207 ], [ %266, %263 ]
  %272 = load i64, i64* %152, align 8
  %273 = bitcast %"struct.std::__1::pair"** %147 to i64*
  %274 = load i64, i64* %273, align 8
  store i64 %274, i64* %152, align 8
  store i64 %272, i64* %273, align 8
  store i64 %270, i64* %151, align 8
  store i64 %271, i64* %269, align 8
  %275 = load i64, i64* %162, align 8
  %276 = bitcast %"struct.std::__1::pair"** %149 to i64*
  %277 = load i64, i64* %276, align 8
  store i64 %277, i64* %162, align 8
  store i64 %275, i64* %276, align 8
  %278 = bitcast %"struct.std::__1::__split_buffer.321"* %5 to i64*
  store i64 %272, i64* %278, align 8
  %279 = inttoptr i64 %272 to %"struct.std::__1::pair"*
  %280 = inttoptr i64 %271 to %"struct.std::__1::pair"*
  %281 = icmp eq %"struct.std::__1::pair"* %280, %279
  br i1 %281, label %289, label %282

282:                                              ; preds = %268
  %283 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %280, i64 -1, i32 0
  %284 = ptrtoint i64* %283 to i64
  %285 = sub i64 %284, %272
  %286 = lshr i64 %285, 4
  %287 = xor i64 %286, -1
  %288 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %280, i64 %287
  store %"struct.std::__1::pair"* %288, %"struct.std::__1::pair"** %148, align 8
  br label %289

289:                                              ; preds = %282, %268
  %290 = icmp eq i64 %272, 0
  br i1 %290, label %293, label %291

291:                                              ; preds = %289
  %292 = inttoptr i64 %272 to i8*
  call void @_ZdlPv(i8* %292) #18
  br label %293

293:                                              ; preds = %289, %291
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %145) #17
  br label %294

294:                                              ; preds = %16, %136, %293
  %295 = phi %"struct.std::__1::pair"* [ %1, %16 ], [ %1, %136 ], [ %193, %293 ]
  ret %"struct.std::__1::pair"* %295
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairImjEERNS_9allocatorIS2_EEE9push_backEOS2_(%"struct.std::__1::__split_buffer.321"*, %"struct.std::__1::pair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.321", %"struct.std::__1::__split_buffer.321"* %0, i64 0, i32 2
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.321", %"struct.std::__1::__split_buffer.321"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair"* %4, %6
  %8 = ptrtoint %"struct.std::__1::pair"* %6 to i64
  %9 = bitcast %"struct.std::__1::pair"* %4 to i8*
  br i1 %7, label %10, label %176

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.321", %"struct.std::__1::__split_buffer.321"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  %13 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.321", %"struct.std::__1::__split_buffer.321"* %0, i64 0, i32 0
  %15 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %14, align 8
  %16 = icmp ugt %"struct.std::__1::pair"* %12, %15
  %17 = ptrtoint %"struct.std::__1::pair"* %15 to i64
  br i1 %16, label %18, label %91

18:                                               ; preds = %10
  %19 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 4
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 %23
  %25 = icmp eq %"struct.std::__1::pair"* %12, %4
  br i1 %25, label %86, label %26

26:                                               ; preds = %18
  %27 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 -1, i32 0
  %28 = ptrtoint i64* %27 to i64
  %29 = sub i64 %28, %13
  %30 = lshr i64 %29, 4
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 3
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %48, label %34

34:                                               ; preds = %26, %34
  %35 = phi %"struct.std::__1::pair"* [ %45, %34 ], [ %24, %26 ]
  %36 = phi %"struct.std::__1::pair"* [ %44, %34 ], [ %12, %26 ]
  %37 = phi i64 [ %46, %34 ], [ %32, %26 ]
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 0, i32 0
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 0, i32 1
  store i32 %42, i32* %43, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 1
  %45 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 1
  %46 = add i64 %37, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %34, !llvm.loop !252

48:                                               ; preds = %34, %26
  %49 = phi %"struct.std::__1::pair"* [ undef, %26 ], [ %45, %34 ]
  %50 = phi %"struct.std::__1::pair"* [ %24, %26 ], [ %45, %34 ]
  %51 = phi %"struct.std::__1::pair"* [ %12, %26 ], [ %44, %34 ]
  %52 = icmp ult i64 %29, 48
  br i1 %52, label %83, label %53

53:                                               ; preds = %48, %53
  %54 = phi %"struct.std::__1::pair"* [ %81, %53 ], [ %50, %48 ]
  %55 = phi %"struct.std::__1::pair"* [ %80, %53 ], [ %51, %48 ]
  %56 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 0, i32 0
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 0, i32 1
  store i32 %60, i32* %61, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 1, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 1, i32 0
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 1, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 1, i32 1
  store i32 %66, i32* %67, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 2, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 2, i32 0
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 2, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 2, i32 1
  store i32 %72, i32* %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 3, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 3, i32 0
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 3, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 3, i32 1
  store i32 %78, i32* %79, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 4
  %81 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 4
  %82 = icmp eq %"struct.std::__1::pair"* %80, %4
  br i1 %82, label %83, label %53

83:                                               ; preds = %53, %48
  %84 = phi %"struct.std::__1::pair"* [ %49, %48 ], [ %81, %53 ]
  %85 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  br label %86

86:                                               ; preds = %83, %18
  %87 = phi %"struct.std::__1::pair"* [ %4, %18 ], [ %85, %83 ]
  %88 = phi %"struct.std::__1::pair"* [ %24, %18 ], [ %84, %83 ]
  store %"struct.std::__1::pair"* %88, %"struct.std::__1::pair"** %3, align 8
  %89 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 %23
  store %"struct.std::__1::pair"* %89, %"struct.std::__1::pair"** %11, align 8
  %90 = bitcast %"struct.std::__1::pair"* %88 to i8*
  br label %176

91:                                               ; preds = %10
  %92 = bitcast %"struct.std::__1::pair"** %5 to i64*
  %93 = bitcast %"struct.std::__1::__split_buffer.321"* %0 to i64*
  %94 = sub i64 %8, %17
  %95 = ashr exact i64 %94, 3
  %96 = icmp eq i64 %94, 0
  %97 = select i1 %96, i64 1, i64 %95
  %98 = icmp ugt i64 %97, 1152921504606846975
  br i1 %98, label %99, label %100

99:                                               ; preds = %91
  tail call void @abort() #19
  unreachable

100:                                              ; preds = %91
  %101 = lshr i64 %97, 2
  %102 = shl i64 %97, 4
  %103 = tail call i8* @_Znwm(i64 %102) #18
  %104 = bitcast i8* %103 to %"struct.std::__1::pair"*
  %105 = ptrtoint i8* %103 to i64
  %106 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %104, i64 %101
  %107 = ptrtoint %"struct.std::__1::pair"* %106 to i64
  %108 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %104, i64 %97
  %109 = ptrtoint %"struct.std::__1::pair"* %108 to i64
  %110 = ptrtoint %"struct.std::__1::pair"* %4 to i64
  %111 = sub i64 %110, %13
  %112 = ashr exact i64 %111, 4
  %113 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %106, i64 %112
  %114 = icmp eq i64 %111, 0
  br i1 %114, label %165, label %115

115:                                              ; preds = %100
  %116 = add i64 %111, -16
  %117 = lshr i64 %116, 4
  %118 = add nuw nsw i64 %117, 1
  %119 = and i64 %118, 3
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %135, label %121

121:                                              ; preds = %115, %121
  %122 = phi %"struct.std::__1::pair"* [ %128, %121 ], [ %106, %115 ]
  %123 = phi i64 [ %129, %121 ], [ %107, %115 ]
  %124 = phi %"struct.std::__1::pair"* [ %130, %121 ], [ %12, %115 ]
  %125 = phi i64 [ %131, %121 ], [ %119, %115 ]
  %126 = inttoptr i64 %123 to i8*
  %127 = bitcast %"struct.std::__1::pair"* %124 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* align 8 %127, i64 16, i1 false) #17
  %128 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %122, i64 1
  %129 = ptrtoint %"struct.std::__1::pair"* %128 to i64
  %130 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %124, i64 1
  %131 = add i64 %125, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %121, !llvm.loop !253

133:                                              ; preds = %121
  %134 = ptrtoint %"struct.std::__1::pair"* %128 to i64
  br label %135

135:                                              ; preds = %115, %133
  %136 = phi %"struct.std::__1::pair"* [ %106, %115 ], [ %128, %133 ]
  %137 = phi i64 [ %107, %115 ], [ %134, %133 ]
  %138 = phi %"struct.std::__1::pair"* [ %12, %115 ], [ %130, %133 ]
  %139 = icmp ult i64 %116, 48
  br i1 %139, label %162, label %140

140:                                              ; preds = %135, %140
  %141 = phi %"struct.std::__1::pair"* [ %158, %140 ], [ %136, %135 ]
  %142 = phi i64 [ %159, %140 ], [ %137, %135 ]
  %143 = phi %"struct.std::__1::pair"* [ %160, %140 ], [ %138, %135 ]
  %144 = inttoptr i64 %142 to i8*
  %145 = bitcast %"struct.std::__1::pair"* %143 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 8 %145, i64 16, i1 false) #17
  %146 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %141, i64 1
  %147 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %143, i64 1
  %148 = bitcast %"struct.std::__1::pair"* %146 to i8*
  %149 = bitcast %"struct.std::__1::pair"* %147 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %148, i8* align 8 %149, i64 16, i1 false) #17
  %150 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %141, i64 2
  %151 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %143, i64 2
  %152 = bitcast %"struct.std::__1::pair"* %150 to i8*
  %153 = bitcast %"struct.std::__1::pair"* %151 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %153, i64 16, i1 false) #17
  %154 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %141, i64 3
  %155 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %143, i64 3
  %156 = bitcast %"struct.std::__1::pair"* %154 to i8*
  %157 = bitcast %"struct.std::__1::pair"* %155 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %156, i8* align 8 %157, i64 16, i1 false) #17
  %158 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %141, i64 4
  %159 = ptrtoint %"struct.std::__1::pair"* %158 to i64
  %160 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %143, i64 4
  %161 = icmp eq %"struct.std::__1::pair"* %113, %158
  br i1 %161, label %162, label %140

162:                                              ; preds = %140, %135
  %163 = ptrtoint %"struct.std::__1::pair"* %113 to i64
  %164 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %14, align 8
  br label %165

165:                                              ; preds = %100, %162
  %166 = phi %"struct.std::__1::pair"* [ %164, %162 ], [ %15, %100 ]
  %167 = phi i64 [ %163, %162 ], [ %107, %100 ]
  store i64 %105, i64* %93, align 8
  %168 = bitcast %"struct.std::__1::pair"** %11 to i64*
  store i64 %107, i64* %168, align 8
  %169 = bitcast %"struct.std::__1::pair"** %3 to i64*
  store i64 %167, i64* %169, align 8
  store i64 %109, i64* %92, align 8
  %170 = icmp eq %"struct.std::__1::pair"* %166, null
  %171 = inttoptr i64 %167 to i8*
  br i1 %170, label %176, label %172

172:                                              ; preds = %165
  %173 = bitcast %"struct.std::__1::pair"* %166 to i8*
  tail call void @_ZdlPv(i8* %173) #18
  %174 = bitcast %"struct.std::__1::pair"** %3 to i8**
  %175 = load i8*, i8** %174, align 8
  br label %176

176:                                              ; preds = %172, %165, %86, %2
  %177 = phi i8* [ %175, %172 ], [ %171, %165 ], [ %90, %86 ], [ %9, %2 ]
  %178 = bitcast %"struct.std::__1::pair"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %177, i8* align 8 %178, i64 16, i1 false) #17
  %179 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %180 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %179, i64 1
  store %"struct.std::__1::pair"* %180, %"struct.std::__1::pair"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.94"* @_ZNSt3__16vectorINS_4pairImN3gfx13BaselineStyleEEENS_9allocatorIS4_EEE6insertENS_11__wrap_iterIPKS4_EEOS4_(%"class.std::__1::vector.92"*, %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::pair.94"* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.324", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %0, i64 0, i32 0, i32 1
  %8 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %9, align 8
  %11 = icmp ult %"struct.std::__1::pair.94"* %8, %10
  %12 = ptrtoint %"struct.std::__1::pair.94"* %8 to i64
  %13 = ptrtoint %"struct.std::__1::pair.94"* %10 to i64
  br i1 %11, label %14, label %143

14:                                               ; preds = %3
  %15 = icmp eq %"struct.std::__1::pair.94"* %8, %1
  br i1 %15, label %16, label %22

16:                                               ; preds = %14
  %17 = bitcast %"struct.std::__1::pair.94"* %1 to i8*
  %18 = bitcast %"struct.std::__1::pair.94"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 16, i1 false) #17
  %19 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %1, i64 1
  %20 = ptrtoint %"struct.std::__1::pair.94"* %19 to i64
  %21 = bitcast %"struct.std::__1::pair.94"** %7 to i64*
  store i64 %20, i64* %21, align 8
  br label %294

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %1, i64 1
  %24 = ptrtoint %"struct.std::__1::pair.94"* %23 to i64
  %25 = sub i64 %12, %24
  %26 = ashr exact i64 %25, 4
  %27 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %1, i64 %26
  %28 = bitcast %"struct.std::__1::pair.94"** %7 to i64*
  %29 = icmp ult %"struct.std::__1::pair.94"* %27, %8
  br i1 %29, label %30, label %59

30:                                               ; preds = %22
  %31 = sub nsw i64 0, %26
  %32 = getelementptr %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %8, i64 %31, i32 0
  %33 = bitcast i64* %32 to i8*
  %34 = xor i64 %4, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = ptrtoint i8* %35 to i64
  %37 = lshr i64 %36, 4
  %38 = add nuw nsw i64 %37, 1
  %39 = and i64 %38, 3
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %30, %41
  %42 = phi %"struct.std::__1::pair.94"* [ %48, %41 ], [ %8, %30 ]
  %43 = phi %"struct.std::__1::pair.94"* [ %47, %41 ], [ %27, %30 ]
  %44 = phi i64 [ %49, %41 ], [ %39, %30 ]
  %45 = bitcast %"struct.std::__1::pair.94"* %42 to i8*
  %46 = bitcast %"struct.std::__1::pair.94"* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 16, i1 false) #17
  %47 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %43, i64 1
  %48 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %42, i64 1
  %49 = add i64 %44, -1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %41, !llvm.loop !254

51:                                               ; preds = %41, %30
  %52 = phi %"struct.std::__1::pair.94"* [ %8, %30 ], [ %48, %41 ]
  %53 = phi %"struct.std::__1::pair.94"* [ %27, %30 ], [ %47, %41 ]
  %54 = phi %"struct.std::__1::pair.94"* [ undef, %30 ], [ %48, %41 ]
  %55 = icmp ult i8* %35, inttoptr (i64 48 to i8*)
  br i1 %55, label %56, label %116

56:                                               ; preds = %116, %51
  %57 = phi %"struct.std::__1::pair.94"* [ %54, %51 ], [ %134, %116 ]
  %58 = ptrtoint %"struct.std::__1::pair.94"* %57 to i64
  br label %59

59:                                               ; preds = %56, %22
  %60 = phi i64 [ %58, %56 ], [ %12, %22 ]
  store i64 %60, i64* %28, align 8
  %61 = icmp eq i64 %25, 0
  br i1 %61, label %136, label %62

62:                                               ; preds = %59
  %63 = add i64 %25, -16
  %64 = lshr i64 %63, 4
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 3
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %82, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.std::__1::pair.94"* [ %73, %68 ], [ %8, %62 ]
  %70 = phi %"struct.std::__1::pair.94"* [ %72, %68 ], [ %27, %62 ]
  %71 = phi i64 [ %80, %68 ], [ %66, %62 ]
  %72 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %70, i64 -1
  %73 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %69, i64 -1
  %74 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %72, i64 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %73, i64 0, i32 0
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %70, i64 -1, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %69, i64 -1, i32 1
  store i32 %78, i32* %79, align 8
  %80 = add i64 %71, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %68, !llvm.loop !255

82:                                               ; preds = %68, %62
  %83 = phi %"struct.std::__1::pair.94"* [ %8, %62 ], [ %73, %68 ]
  %84 = phi %"struct.std::__1::pair.94"* [ %27, %62 ], [ %72, %68 ]
  %85 = icmp ult i64 %63, 48
  br i1 %85, label %136, label %86

86:                                               ; preds = %82, %86
  %87 = phi %"struct.std::__1::pair.94"* [ %108, %86 ], [ %83, %82 ]
  %88 = phi %"struct.std::__1::pair.94"* [ %107, %86 ], [ %84, %82 ]
  %89 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %88, i64 -1, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %87, i64 -1, i32 0
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %88, i64 -1, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %87, i64 -1, i32 1
  store i32 %93, i32* %94, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %88, i64 -2, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %87, i64 -2, i32 0
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %88, i64 -2, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %87, i64 -2, i32 1
  store i32 %99, i32* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %88, i64 -3, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %87, i64 -3, i32 0
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %88, i64 -3, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %87, i64 -3, i32 1
  store i32 %105, i32* %106, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %88, i64 -4
  %108 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %87, i64 -4
  %109 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %107, i64 0, i32 0
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %108, i64 0, i32 0
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %88, i64 -4, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %87, i64 -4, i32 1
  store i32 %113, i32* %114, align 8
  %115 = icmp eq %"struct.std::__1::pair.94"* %107, %1
  br i1 %115, label %136, label %86

116:                                              ; preds = %51, %116
  %117 = phi %"struct.std::__1::pair.94"* [ %134, %116 ], [ %52, %51 ]
  %118 = phi %"struct.std::__1::pair.94"* [ %133, %116 ], [ %53, %51 ]
  %119 = bitcast %"struct.std::__1::pair.94"* %117 to i8*
  %120 = bitcast %"struct.std::__1::pair.94"* %118 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 16, i1 false) #17
  %121 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %118, i64 1
  %122 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %117, i64 1
  %123 = bitcast %"struct.std::__1::pair.94"* %122 to i8*
  %124 = bitcast %"struct.std::__1::pair.94"* %121 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %123, i8* align 8 %124, i64 16, i1 false) #17
  %125 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %118, i64 2
  %126 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %117, i64 2
  %127 = bitcast %"struct.std::__1::pair.94"* %126 to i8*
  %128 = bitcast %"struct.std::__1::pair.94"* %125 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* align 8 %128, i64 16, i1 false) #17
  %129 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %118, i64 3
  %130 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %117, i64 3
  %131 = bitcast %"struct.std::__1::pair.94"* %130 to i8*
  %132 = bitcast %"struct.std::__1::pair.94"* %129 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 16, i1 false) #17
  %133 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %118, i64 4
  %134 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %117, i64 4
  %135 = icmp ult %"struct.std::__1::pair.94"* %133, %8
  br i1 %135, label %116, label %56

136:                                              ; preds = %82, %86, %59
  %137 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %2, i64 0, i32 0
  %138 = load i64, i64* %137, align 8
  %139 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %1, i64 0, i32 0
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %2, i64 0, i32 1
  %141 = load i32, i32* %140, align 4
  %142 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %1, i64 0, i32 1
  store i32 %141, i32* %142, align 8
  br label %294

143:                                              ; preds = %3
  %144 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %0, i64 0, i32 0, i32 2
  %145 = bitcast %"struct.std::__1::__split_buffer.324"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %145) #17
  %146 = getelementptr inbounds %"struct.std::__1::__split_buffer.324", %"struct.std::__1::__split_buffer.324"* %5, i64 0, i32 0
  %147 = getelementptr inbounds %"struct.std::__1::__split_buffer.324", %"struct.std::__1::__split_buffer.324"* %5, i64 0, i32 1
  %148 = getelementptr inbounds %"struct.std::__1::__split_buffer.324", %"struct.std::__1::__split_buffer.324"* %5, i64 0, i32 2
  %149 = getelementptr inbounds %"struct.std::__1::__split_buffer.324", %"struct.std::__1::__split_buffer.324"* %5, i64 0, i32 3, i32 0, i32 0
  %150 = getelementptr inbounds %"struct.std::__1::__split_buffer.324", %"struct.std::__1::__split_buffer.324"* %5, i64 0, i32 3, i32 1, i32 0
  %151 = bitcast %"struct.std::__1::pair.94"** %7 to i64*
  %152 = bitcast %"class.std::__1::vector.92"* %0 to i64*
  %153 = bitcast %"struct.std::__1::__split_buffer.324"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %153, i8 -86, i64 40, i1 false)
  %154 = load i64, i64* %152, align 8
  %155 = sub i64 %12, %154
  %156 = ashr exact i64 %155, 4
  %157 = add nsw i64 %156, 1
  %158 = icmp ugt i64 %157, 1152921504606846975
  br i1 %158, label %159, label %161

159:                                              ; preds = %143
  %160 = bitcast %"class.std::__1::vector.92"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %160) #19
  unreachable

161:                                              ; preds = %143
  %162 = bitcast %"struct.std::__1::pair.94"** %9 to i64*
  %163 = sub i64 %13, %154
  %164 = ashr exact i64 %163, 4
  %165 = icmp ult i64 %164, 576460752303423487
  br i1 %165, label %170, label %166

166:                                              ; preds = %161
  %167 = sub i64 %4, %154
  %168 = ashr exact i64 %167, 4
  store %"struct.std::__1::pair.94"* null, %"struct.std::__1::pair.94"** %149, align 8
  %169 = bitcast %"class.std::__1::allocator.99"** %150 to %"class.std::__1::__compressed_pair.96"**
  store %"class.std::__1::__compressed_pair.96"* %144, %"class.std::__1::__compressed_pair.96"** %169, align 8
  br label %181

170:                                              ; preds = %161
  %171 = ashr exact i64 %163, 3
  %172 = icmp ult i64 %171, %157
  %173 = select i1 %172, i64 %157, i64 %171
  %174 = sub i64 %4, %154
  %175 = ashr exact i64 %174, 4
  store %"struct.std::__1::pair.94"* null, %"struct.std::__1::pair.94"** %149, align 8
  %176 = bitcast %"class.std::__1::allocator.99"** %150 to %"class.std::__1::__compressed_pair.96"**
  store %"class.std::__1::__compressed_pair.96"* %144, %"class.std::__1::__compressed_pair.96"** %176, align 8
  %177 = icmp eq i64 %173, 0
  br i1 %177, label %187, label %178

178:                                              ; preds = %170
  %179 = icmp ugt i64 %173, 1152921504606846975
  br i1 %179, label %180, label %181

180:                                              ; preds = %178
  tail call void @abort() #19
  unreachable

181:                                              ; preds = %166, %178
  %182 = phi i64 [ 1152921504606846975, %166 ], [ %173, %178 ]
  %183 = phi i64 [ %168, %166 ], [ %175, %178 ]
  %184 = shl i64 %182, 4
  %185 = tail call i8* @_Znwm(i64 %184) #18
  %186 = bitcast i8* %185 to %"struct.std::__1::pair.94"*
  br label %187

187:                                              ; preds = %170, %181
  %188 = phi i64 [ %183, %181 ], [ %175, %170 ]
  %189 = phi i64 [ %182, %181 ], [ 0, %170 ]
  %190 = phi %"struct.std::__1::pair.94"* [ %186, %181 ], [ null, %170 ]
  store %"struct.std::__1::pair.94"* %190, %"struct.std::__1::pair.94"** %146, align 8
  %191 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %190, i64 %188
  store %"struct.std::__1::pair.94"* %191, %"struct.std::__1::pair.94"** %148, align 8
  store %"struct.std::__1::pair.94"* %191, %"struct.std::__1::pair.94"** %147, align 8
  %192 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %190, i64 %189
  store %"struct.std::__1::pair.94"* %192, %"struct.std::__1::pair.94"** %149, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairImN3gfx13BaselineStyleEEERNS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer.324"* nonnull %5, %"struct.std::__1::pair.94"* dereferenceable(16) %2)
  %193 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %147, align 8
  %194 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %6, align 8
  %195 = ptrtoint %"struct.std::__1::pair.94"* %194 to i64
  %196 = sub i64 %4, %195
  %197 = ashr exact i64 %196, 4
  %198 = sub nsw i64 0, %197
  %199 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %193, i64 %198
  store %"struct.std::__1::pair.94"* %199, %"struct.std::__1::pair.94"** %147, align 8
  %200 = icmp sgt i64 %196, 0
  br i1 %200, label %201, label %204

201:                                              ; preds = %187
  %202 = bitcast %"struct.std::__1::pair.94"* %199 to i8*
  %203 = bitcast %"struct.std::__1::pair.94"* %194 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %202, i8* align 8 %203, i64 %196, i1 false) #17
  br label %204

204:                                              ; preds = %201, %187
  %205 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %7, align 8
  %206 = icmp eq %"struct.std::__1::pair.94"* %205, %1
  br i1 %206, label %207, label %211

207:                                              ; preds = %204
  %208 = ptrtoint %"struct.std::__1::pair.94"* %205 to i64
  %209 = bitcast %"struct.std::__1::pair.94"** %148 to i64*
  %210 = load i64, i64* %209, align 8
  br label %268

211:                                              ; preds = %204
  %212 = bitcast %"struct.std::__1::pair.94"** %148 to i8**
  %213 = load i8*, i8** %212, align 8
  %214 = getelementptr %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %205, i64 -1, i32 0
  %215 = ptrtoint i64* %214 to i64
  %216 = sub i64 %215, %4
  %217 = lshr i64 %216, 4
  %218 = add nuw nsw i64 %217, 1
  %219 = and i64 %218, 3
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %234, label %221

221:                                              ; preds = %211, %221
  %222 = phi i8* [ %229, %221 ], [ %213, %211 ]
  %223 = phi %"struct.std::__1::pair.94"* [ %226, %221 ], [ %1, %211 ]
  %224 = phi i64 [ %230, %221 ], [ %219, %211 ]
  %225 = bitcast %"struct.std::__1::pair.94"* %223 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* align 8 %225, i64 16, i1 false) #17
  %226 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %223, i64 1
  %227 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %148, align 8
  %228 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %227, i64 1
  store %"struct.std::__1::pair.94"* %228, %"struct.std::__1::pair.94"** %148, align 8
  %229 = bitcast %"struct.std::__1::pair.94"* %228 to i8*
  %230 = add i64 %224, -1
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %232, label %221, !llvm.loop !256

232:                                              ; preds = %221
  %233 = bitcast %"struct.std::__1::pair.94"* %228 to i8*
  br label %234

234:                                              ; preds = %211, %232
  %235 = phi %"struct.std::__1::pair.94"* [ undef, %211 ], [ %228, %232 ]
  %236 = phi i8* [ %213, %211 ], [ %233, %232 ]
  %237 = phi %"struct.std::__1::pair.94"* [ %1, %211 ], [ %226, %232 ]
  %238 = icmp ult i64 %216, 48
  br i1 %238, label %263, label %239

239:                                              ; preds = %234, %239
  %240 = phi i8* [ %262, %239 ], [ %236, %234 ]
  %241 = phi %"struct.std::__1::pair.94"* [ %258, %239 ], [ %237, %234 ]
  %242 = bitcast %"struct.std::__1::pair.94"* %241 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %240, i8* align 8 %242, i64 16, i1 false) #17
  %243 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %241, i64 1
  %244 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %148, align 8
  %245 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %244, i64 1
  store %"struct.std::__1::pair.94"* %245, %"struct.std::__1::pair.94"** %148, align 8
  %246 = bitcast %"struct.std::__1::pair.94"* %245 to i8*
  %247 = bitcast %"struct.std::__1::pair.94"* %243 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %246, i8* align 8 %247, i64 16, i1 false) #17
  %248 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %241, i64 2
  %249 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %148, align 8
  %250 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %249, i64 1
  store %"struct.std::__1::pair.94"* %250, %"struct.std::__1::pair.94"** %148, align 8
  %251 = bitcast %"struct.std::__1::pair.94"* %250 to i8*
  %252 = bitcast %"struct.std::__1::pair.94"* %248 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %251, i8* align 8 %252, i64 16, i1 false) #17
  %253 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %241, i64 3
  %254 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %148, align 8
  %255 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %254, i64 1
  store %"struct.std::__1::pair.94"* %255, %"struct.std::__1::pair.94"** %148, align 8
  %256 = bitcast %"struct.std::__1::pair.94"* %255 to i8*
  %257 = bitcast %"struct.std::__1::pair.94"* %253 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %256, i8* align 8 %257, i64 16, i1 false) #17
  %258 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %241, i64 4
  %259 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %148, align 8
  %260 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %259, i64 1
  store %"struct.std::__1::pair.94"* %260, %"struct.std::__1::pair.94"** %148, align 8
  %261 = icmp eq %"struct.std::__1::pair.94"* %258, %205
  %262 = bitcast %"struct.std::__1::pair.94"* %260 to i8*
  br i1 %261, label %263, label %239

263:                                              ; preds = %239, %234
  %264 = phi %"struct.std::__1::pair.94"* [ %235, %234 ], [ %260, %239 ]
  %265 = ptrtoint %"struct.std::__1::pair.94"* %264 to i64
  %266 = load i64, i64* %151, align 8
  %267 = bitcast %"struct.std::__1::pair.94"** %148 to i64*
  br label %268

268:                                              ; preds = %207, %263
  %269 = phi i64* [ %209, %207 ], [ %267, %263 ]
  %270 = phi i64 [ %210, %207 ], [ %265, %263 ]
  %271 = phi i64 [ %208, %207 ], [ %266, %263 ]
  %272 = load i64, i64* %152, align 8
  %273 = bitcast %"struct.std::__1::pair.94"** %147 to i64*
  %274 = load i64, i64* %273, align 8
  store i64 %274, i64* %152, align 8
  store i64 %272, i64* %273, align 8
  store i64 %270, i64* %151, align 8
  store i64 %271, i64* %269, align 8
  %275 = load i64, i64* %162, align 8
  %276 = bitcast %"struct.std::__1::pair.94"** %149 to i64*
  %277 = load i64, i64* %276, align 8
  store i64 %277, i64* %162, align 8
  store i64 %275, i64* %276, align 8
  %278 = bitcast %"struct.std::__1::__split_buffer.324"* %5 to i64*
  store i64 %272, i64* %278, align 8
  %279 = inttoptr i64 %272 to %"struct.std::__1::pair.94"*
  %280 = inttoptr i64 %271 to %"struct.std::__1::pair.94"*
  %281 = icmp eq %"struct.std::__1::pair.94"* %280, %279
  br i1 %281, label %289, label %282

282:                                              ; preds = %268
  %283 = getelementptr %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %280, i64 -1, i32 0
  %284 = ptrtoint i64* %283 to i64
  %285 = sub i64 %284, %272
  %286 = lshr i64 %285, 4
  %287 = xor i64 %286, -1
  %288 = getelementptr %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %280, i64 %287
  store %"struct.std::__1::pair.94"* %288, %"struct.std::__1::pair.94"** %148, align 8
  br label %289

289:                                              ; preds = %282, %268
  %290 = icmp eq i64 %272, 0
  br i1 %290, label %293, label %291

291:                                              ; preds = %289
  %292 = inttoptr i64 %272 to i8*
  call void @_ZdlPv(i8* %292) #18
  br label %293

293:                                              ; preds = %289, %291
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %145) #17
  br label %294

294:                                              ; preds = %16, %136, %293
  %295 = phi %"struct.std::__1::pair.94"* [ %1, %16 ], [ %1, %136 ], [ %193, %293 ]
  ret %"struct.std::__1::pair.94"* %295
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairImN3gfx13BaselineStyleEEERNS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer.324"*, %"struct.std::__1::pair.94"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.324", %"struct.std::__1::__split_buffer.324"* %0, i64 0, i32 2
  %4 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.324", %"struct.std::__1::__split_buffer.324"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.94"* %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.94"* %6 to i64
  %9 = bitcast %"struct.std::__1::pair.94"* %4 to i8*
  br i1 %7, label %10, label %176

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.324", %"struct.std::__1::__split_buffer.324"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %11, align 8
  %13 = ptrtoint %"struct.std::__1::pair.94"* %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.324", %"struct.std::__1::__split_buffer.324"* %0, i64 0, i32 0
  %15 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %14, align 8
  %16 = icmp ugt %"struct.std::__1::pair.94"* %12, %15
  %17 = ptrtoint %"struct.std::__1::pair.94"* %15 to i64
  br i1 %16, label %18, label %91

18:                                               ; preds = %10
  %19 = ptrtoint %"struct.std::__1::pair.94"* %12 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 4
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %12, i64 %23
  %25 = icmp eq %"struct.std::__1::pair.94"* %12, %4
  br i1 %25, label %86, label %26

26:                                               ; preds = %18
  %27 = getelementptr %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %4, i64 -1, i32 0
  %28 = ptrtoint i64* %27 to i64
  %29 = sub i64 %28, %13
  %30 = lshr i64 %29, 4
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 3
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %48, label %34

34:                                               ; preds = %26, %34
  %35 = phi %"struct.std::__1::pair.94"* [ %45, %34 ], [ %24, %26 ]
  %36 = phi %"struct.std::__1::pair.94"* [ %44, %34 ], [ %12, %26 ]
  %37 = phi i64 [ %46, %34 ], [ %32, %26 ]
  %38 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %36, i64 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %35, i64 0, i32 0
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %36, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %35, i64 0, i32 1
  store i32 %42, i32* %43, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %36, i64 1
  %45 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %35, i64 1
  %46 = add i64 %37, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %34, !llvm.loop !257

48:                                               ; preds = %34, %26
  %49 = phi %"struct.std::__1::pair.94"* [ undef, %26 ], [ %45, %34 ]
  %50 = phi %"struct.std::__1::pair.94"* [ %24, %26 ], [ %45, %34 ]
  %51 = phi %"struct.std::__1::pair.94"* [ %12, %26 ], [ %44, %34 ]
  %52 = icmp ult i64 %29, 48
  br i1 %52, label %83, label %53

53:                                               ; preds = %48, %53
  %54 = phi %"struct.std::__1::pair.94"* [ %81, %53 ], [ %50, %48 ]
  %55 = phi %"struct.std::__1::pair.94"* [ %80, %53 ], [ %51, %48 ]
  %56 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %55, i64 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %54, i64 0, i32 0
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %55, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %54, i64 0, i32 1
  store i32 %60, i32* %61, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %55, i64 1, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %54, i64 1, i32 0
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %55, i64 1, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %54, i64 1, i32 1
  store i32 %66, i32* %67, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %55, i64 2, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %54, i64 2, i32 0
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %55, i64 2, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %54, i64 2, i32 1
  store i32 %72, i32* %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %55, i64 3, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %54, i64 3, i32 0
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %55, i64 3, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %54, i64 3, i32 1
  store i32 %78, i32* %79, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %55, i64 4
  %81 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %54, i64 4
  %82 = icmp eq %"struct.std::__1::pair.94"* %80, %4
  br i1 %82, label %83, label %53

83:                                               ; preds = %53, %48
  %84 = phi %"struct.std::__1::pair.94"* [ %49, %48 ], [ %81, %53 ]
  %85 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %11, align 8
  br label %86

86:                                               ; preds = %83, %18
  %87 = phi %"struct.std::__1::pair.94"* [ %4, %18 ], [ %85, %83 ]
  %88 = phi %"struct.std::__1::pair.94"* [ %24, %18 ], [ %84, %83 ]
  store %"struct.std::__1::pair.94"* %88, %"struct.std::__1::pair.94"** %3, align 8
  %89 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %87, i64 %23
  store %"struct.std::__1::pair.94"* %89, %"struct.std::__1::pair.94"** %11, align 8
  %90 = bitcast %"struct.std::__1::pair.94"* %88 to i8*
  br label %176

91:                                               ; preds = %10
  %92 = bitcast %"struct.std::__1::pair.94"** %5 to i64*
  %93 = bitcast %"struct.std::__1::__split_buffer.324"* %0 to i64*
  %94 = sub i64 %8, %17
  %95 = ashr exact i64 %94, 3
  %96 = icmp eq i64 %94, 0
  %97 = select i1 %96, i64 1, i64 %95
  %98 = icmp ugt i64 %97, 1152921504606846975
  br i1 %98, label %99, label %100

99:                                               ; preds = %91
  tail call void @abort() #19
  unreachable

100:                                              ; preds = %91
  %101 = lshr i64 %97, 2
  %102 = shl i64 %97, 4
  %103 = tail call i8* @_Znwm(i64 %102) #18
  %104 = bitcast i8* %103 to %"struct.std::__1::pair.94"*
  %105 = ptrtoint i8* %103 to i64
  %106 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %104, i64 %101
  %107 = ptrtoint %"struct.std::__1::pair.94"* %106 to i64
  %108 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %104, i64 %97
  %109 = ptrtoint %"struct.std::__1::pair.94"* %108 to i64
  %110 = ptrtoint %"struct.std::__1::pair.94"* %4 to i64
  %111 = sub i64 %110, %13
  %112 = ashr exact i64 %111, 4
  %113 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %106, i64 %112
  %114 = icmp eq i64 %111, 0
  br i1 %114, label %165, label %115

115:                                              ; preds = %100
  %116 = add i64 %111, -16
  %117 = lshr i64 %116, 4
  %118 = add nuw nsw i64 %117, 1
  %119 = and i64 %118, 3
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %135, label %121

121:                                              ; preds = %115, %121
  %122 = phi %"struct.std::__1::pair.94"* [ %128, %121 ], [ %106, %115 ]
  %123 = phi i64 [ %129, %121 ], [ %107, %115 ]
  %124 = phi %"struct.std::__1::pair.94"* [ %130, %121 ], [ %12, %115 ]
  %125 = phi i64 [ %131, %121 ], [ %119, %115 ]
  %126 = inttoptr i64 %123 to i8*
  %127 = bitcast %"struct.std::__1::pair.94"* %124 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* align 8 %127, i64 16, i1 false) #17
  %128 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %122, i64 1
  %129 = ptrtoint %"struct.std::__1::pair.94"* %128 to i64
  %130 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %124, i64 1
  %131 = add i64 %125, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %121, !llvm.loop !258

133:                                              ; preds = %121
  %134 = ptrtoint %"struct.std::__1::pair.94"* %128 to i64
  br label %135

135:                                              ; preds = %115, %133
  %136 = phi %"struct.std::__1::pair.94"* [ %106, %115 ], [ %128, %133 ]
  %137 = phi i64 [ %107, %115 ], [ %134, %133 ]
  %138 = phi %"struct.std::__1::pair.94"* [ %12, %115 ], [ %130, %133 ]
  %139 = icmp ult i64 %116, 48
  br i1 %139, label %162, label %140

140:                                              ; preds = %135, %140
  %141 = phi %"struct.std::__1::pair.94"* [ %158, %140 ], [ %136, %135 ]
  %142 = phi i64 [ %159, %140 ], [ %137, %135 ]
  %143 = phi %"struct.std::__1::pair.94"* [ %160, %140 ], [ %138, %135 ]
  %144 = inttoptr i64 %142 to i8*
  %145 = bitcast %"struct.std::__1::pair.94"* %143 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 8 %145, i64 16, i1 false) #17
  %146 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %141, i64 1
  %147 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %143, i64 1
  %148 = bitcast %"struct.std::__1::pair.94"* %146 to i8*
  %149 = bitcast %"struct.std::__1::pair.94"* %147 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %148, i8* align 8 %149, i64 16, i1 false) #17
  %150 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %141, i64 2
  %151 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %143, i64 2
  %152 = bitcast %"struct.std::__1::pair.94"* %150 to i8*
  %153 = bitcast %"struct.std::__1::pair.94"* %151 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %153, i64 16, i1 false) #17
  %154 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %141, i64 3
  %155 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %143, i64 3
  %156 = bitcast %"struct.std::__1::pair.94"* %154 to i8*
  %157 = bitcast %"struct.std::__1::pair.94"* %155 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %156, i8* align 8 %157, i64 16, i1 false) #17
  %158 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %141, i64 4
  %159 = ptrtoint %"struct.std::__1::pair.94"* %158 to i64
  %160 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %143, i64 4
  %161 = icmp eq %"struct.std::__1::pair.94"* %113, %158
  br i1 %161, label %162, label %140

162:                                              ; preds = %140, %135
  %163 = ptrtoint %"struct.std::__1::pair.94"* %113 to i64
  %164 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %14, align 8
  br label %165

165:                                              ; preds = %100, %162
  %166 = phi %"struct.std::__1::pair.94"* [ %164, %162 ], [ %15, %100 ]
  %167 = phi i64 [ %163, %162 ], [ %107, %100 ]
  store i64 %105, i64* %93, align 8
  %168 = bitcast %"struct.std::__1::pair.94"** %11 to i64*
  store i64 %107, i64* %168, align 8
  %169 = bitcast %"struct.std::__1::pair.94"** %3 to i64*
  store i64 %167, i64* %169, align 8
  store i64 %109, i64* %92, align 8
  %170 = icmp eq %"struct.std::__1::pair.94"* %166, null
  %171 = inttoptr i64 %167 to i8*
  br i1 %170, label %176, label %172

172:                                              ; preds = %165
  %173 = bitcast %"struct.std::__1::pair.94"* %166 to i8*
  tail call void @_ZdlPv(i8* %173) #18
  %174 = bitcast %"struct.std::__1::pair.94"** %3 to i8**
  %175 = load i8*, i8** %174, align 8
  br label %176

176:                                              ; preds = %172, %165, %86, %2
  %177 = phi i8* [ %175, %172 ], [ %171, %165 ], [ %90, %86 ], [ %9, %2 ]
  %178 = bitcast %"struct.std::__1::pair.94"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %177, i8* align 8 %178, i64 16, i1 false) #17
  %179 = load %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"** %3, align 8
  %180 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %179, i64 1
  store %"struct.std::__1::pair.94"* %180, %"struct.std::__1::pair.94"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.104"* @_ZNSt3__16vectorINS_4pairImiEENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EEOS2_(%"class.std::__1::vector.102"*, %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::pair.104"* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.327", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %0, i64 0, i32 0, i32 1
  %8 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %9, align 8
  %11 = icmp ult %"struct.std::__1::pair.104"* %8, %10
  %12 = ptrtoint %"struct.std::__1::pair.104"* %8 to i64
  %13 = ptrtoint %"struct.std::__1::pair.104"* %10 to i64
  br i1 %11, label %14, label %143

14:                                               ; preds = %3
  %15 = icmp eq %"struct.std::__1::pair.104"* %8, %1
  br i1 %15, label %16, label %22

16:                                               ; preds = %14
  %17 = bitcast %"struct.std::__1::pair.104"* %1 to i8*
  %18 = bitcast %"struct.std::__1::pair.104"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 16, i1 false) #17
  %19 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %1, i64 1
  %20 = ptrtoint %"struct.std::__1::pair.104"* %19 to i64
  %21 = bitcast %"struct.std::__1::pair.104"** %7 to i64*
  store i64 %20, i64* %21, align 8
  br label %294

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %1, i64 1
  %24 = ptrtoint %"struct.std::__1::pair.104"* %23 to i64
  %25 = sub i64 %12, %24
  %26 = ashr exact i64 %25, 4
  %27 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %1, i64 %26
  %28 = bitcast %"struct.std::__1::pair.104"** %7 to i64*
  %29 = icmp ult %"struct.std::__1::pair.104"* %27, %8
  br i1 %29, label %30, label %59

30:                                               ; preds = %22
  %31 = sub nsw i64 0, %26
  %32 = getelementptr %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %8, i64 %31, i32 0
  %33 = bitcast i64* %32 to i8*
  %34 = xor i64 %4, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = ptrtoint i8* %35 to i64
  %37 = lshr i64 %36, 4
  %38 = add nuw nsw i64 %37, 1
  %39 = and i64 %38, 3
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %30, %41
  %42 = phi %"struct.std::__1::pair.104"* [ %48, %41 ], [ %8, %30 ]
  %43 = phi %"struct.std::__1::pair.104"* [ %47, %41 ], [ %27, %30 ]
  %44 = phi i64 [ %49, %41 ], [ %39, %30 ]
  %45 = bitcast %"struct.std::__1::pair.104"* %42 to i8*
  %46 = bitcast %"struct.std::__1::pair.104"* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 16, i1 false) #17
  %47 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %43, i64 1
  %48 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %42, i64 1
  %49 = add i64 %44, -1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %41, !llvm.loop !259

51:                                               ; preds = %41, %30
  %52 = phi %"struct.std::__1::pair.104"* [ %8, %30 ], [ %48, %41 ]
  %53 = phi %"struct.std::__1::pair.104"* [ %27, %30 ], [ %47, %41 ]
  %54 = phi %"struct.std::__1::pair.104"* [ undef, %30 ], [ %48, %41 ]
  %55 = icmp ult i8* %35, inttoptr (i64 48 to i8*)
  br i1 %55, label %56, label %116

56:                                               ; preds = %116, %51
  %57 = phi %"struct.std::__1::pair.104"* [ %54, %51 ], [ %134, %116 ]
  %58 = ptrtoint %"struct.std::__1::pair.104"* %57 to i64
  br label %59

59:                                               ; preds = %56, %22
  %60 = phi i64 [ %58, %56 ], [ %12, %22 ]
  store i64 %60, i64* %28, align 8
  %61 = icmp eq i64 %25, 0
  br i1 %61, label %136, label %62

62:                                               ; preds = %59
  %63 = add i64 %25, -16
  %64 = lshr i64 %63, 4
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 3
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %82, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.std::__1::pair.104"* [ %73, %68 ], [ %8, %62 ]
  %70 = phi %"struct.std::__1::pair.104"* [ %72, %68 ], [ %27, %62 ]
  %71 = phi i64 [ %80, %68 ], [ %66, %62 ]
  %72 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %70, i64 -1
  %73 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %69, i64 -1
  %74 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %72, i64 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %73, i64 0, i32 0
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %70, i64 -1, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %69, i64 -1, i32 1
  store i32 %78, i32* %79, align 8
  %80 = add i64 %71, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %68, !llvm.loop !260

82:                                               ; preds = %68, %62
  %83 = phi %"struct.std::__1::pair.104"* [ %8, %62 ], [ %73, %68 ]
  %84 = phi %"struct.std::__1::pair.104"* [ %27, %62 ], [ %72, %68 ]
  %85 = icmp ult i64 %63, 48
  br i1 %85, label %136, label %86

86:                                               ; preds = %82, %86
  %87 = phi %"struct.std::__1::pair.104"* [ %108, %86 ], [ %83, %82 ]
  %88 = phi %"struct.std::__1::pair.104"* [ %107, %86 ], [ %84, %82 ]
  %89 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %88, i64 -1, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %87, i64 -1, i32 0
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %88, i64 -1, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %87, i64 -1, i32 1
  store i32 %93, i32* %94, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %88, i64 -2, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %87, i64 -2, i32 0
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %88, i64 -2, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %87, i64 -2, i32 1
  store i32 %99, i32* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %88, i64 -3, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %87, i64 -3, i32 0
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %88, i64 -3, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %87, i64 -3, i32 1
  store i32 %105, i32* %106, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %88, i64 -4
  %108 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %87, i64 -4
  %109 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %107, i64 0, i32 0
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %108, i64 0, i32 0
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %88, i64 -4, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %87, i64 -4, i32 1
  store i32 %113, i32* %114, align 8
  %115 = icmp eq %"struct.std::__1::pair.104"* %107, %1
  br i1 %115, label %136, label %86

116:                                              ; preds = %51, %116
  %117 = phi %"struct.std::__1::pair.104"* [ %134, %116 ], [ %52, %51 ]
  %118 = phi %"struct.std::__1::pair.104"* [ %133, %116 ], [ %53, %51 ]
  %119 = bitcast %"struct.std::__1::pair.104"* %117 to i8*
  %120 = bitcast %"struct.std::__1::pair.104"* %118 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 16, i1 false) #17
  %121 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %118, i64 1
  %122 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %117, i64 1
  %123 = bitcast %"struct.std::__1::pair.104"* %122 to i8*
  %124 = bitcast %"struct.std::__1::pair.104"* %121 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %123, i8* align 8 %124, i64 16, i1 false) #17
  %125 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %118, i64 2
  %126 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %117, i64 2
  %127 = bitcast %"struct.std::__1::pair.104"* %126 to i8*
  %128 = bitcast %"struct.std::__1::pair.104"* %125 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* align 8 %128, i64 16, i1 false) #17
  %129 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %118, i64 3
  %130 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %117, i64 3
  %131 = bitcast %"struct.std::__1::pair.104"* %130 to i8*
  %132 = bitcast %"struct.std::__1::pair.104"* %129 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 16, i1 false) #17
  %133 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %118, i64 4
  %134 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %117, i64 4
  %135 = icmp ult %"struct.std::__1::pair.104"* %133, %8
  br i1 %135, label %116, label %56

136:                                              ; preds = %82, %86, %59
  %137 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %2, i64 0, i32 0
  %138 = load i64, i64* %137, align 8
  %139 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %1, i64 0, i32 0
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %2, i64 0, i32 1
  %141 = load i32, i32* %140, align 4
  %142 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %1, i64 0, i32 1
  store i32 %141, i32* %142, align 8
  br label %294

143:                                              ; preds = %3
  %144 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %0, i64 0, i32 0, i32 2
  %145 = bitcast %"struct.std::__1::__split_buffer.327"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %145) #17
  %146 = getelementptr inbounds %"struct.std::__1::__split_buffer.327", %"struct.std::__1::__split_buffer.327"* %5, i64 0, i32 0
  %147 = getelementptr inbounds %"struct.std::__1::__split_buffer.327", %"struct.std::__1::__split_buffer.327"* %5, i64 0, i32 1
  %148 = getelementptr inbounds %"struct.std::__1::__split_buffer.327", %"struct.std::__1::__split_buffer.327"* %5, i64 0, i32 2
  %149 = getelementptr inbounds %"struct.std::__1::__split_buffer.327", %"struct.std::__1::__split_buffer.327"* %5, i64 0, i32 3, i32 0, i32 0
  %150 = getelementptr inbounds %"struct.std::__1::__split_buffer.327", %"struct.std::__1::__split_buffer.327"* %5, i64 0, i32 3, i32 1, i32 0
  %151 = bitcast %"struct.std::__1::pair.104"** %7 to i64*
  %152 = bitcast %"class.std::__1::vector.102"* %0 to i64*
  %153 = bitcast %"struct.std::__1::__split_buffer.327"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %153, i8 -86, i64 40, i1 false)
  %154 = load i64, i64* %152, align 8
  %155 = sub i64 %12, %154
  %156 = ashr exact i64 %155, 4
  %157 = add nsw i64 %156, 1
  %158 = icmp ugt i64 %157, 1152921504606846975
  br i1 %158, label %159, label %161

159:                                              ; preds = %143
  %160 = bitcast %"class.std::__1::vector.102"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %160) #19
  unreachable

161:                                              ; preds = %143
  %162 = bitcast %"struct.std::__1::pair.104"** %9 to i64*
  %163 = sub i64 %13, %154
  %164 = ashr exact i64 %163, 4
  %165 = icmp ult i64 %164, 576460752303423487
  br i1 %165, label %170, label %166

166:                                              ; preds = %161
  %167 = sub i64 %4, %154
  %168 = ashr exact i64 %167, 4
  store %"struct.std::__1::pair.104"* null, %"struct.std::__1::pair.104"** %149, align 8
  %169 = bitcast %"class.std::__1::allocator.109"** %150 to %"class.std::__1::__compressed_pair.106"**
  store %"class.std::__1::__compressed_pair.106"* %144, %"class.std::__1::__compressed_pair.106"** %169, align 8
  br label %181

170:                                              ; preds = %161
  %171 = ashr exact i64 %163, 3
  %172 = icmp ult i64 %171, %157
  %173 = select i1 %172, i64 %157, i64 %171
  %174 = sub i64 %4, %154
  %175 = ashr exact i64 %174, 4
  store %"struct.std::__1::pair.104"* null, %"struct.std::__1::pair.104"** %149, align 8
  %176 = bitcast %"class.std::__1::allocator.109"** %150 to %"class.std::__1::__compressed_pair.106"**
  store %"class.std::__1::__compressed_pair.106"* %144, %"class.std::__1::__compressed_pair.106"** %176, align 8
  %177 = icmp eq i64 %173, 0
  br i1 %177, label %187, label %178

178:                                              ; preds = %170
  %179 = icmp ugt i64 %173, 1152921504606846975
  br i1 %179, label %180, label %181

180:                                              ; preds = %178
  tail call void @abort() #19
  unreachable

181:                                              ; preds = %166, %178
  %182 = phi i64 [ 1152921504606846975, %166 ], [ %173, %178 ]
  %183 = phi i64 [ %168, %166 ], [ %175, %178 ]
  %184 = shl i64 %182, 4
  %185 = tail call i8* @_Znwm(i64 %184) #18
  %186 = bitcast i8* %185 to %"struct.std::__1::pair.104"*
  br label %187

187:                                              ; preds = %170, %181
  %188 = phi i64 [ %183, %181 ], [ %175, %170 ]
  %189 = phi i64 [ %182, %181 ], [ 0, %170 ]
  %190 = phi %"struct.std::__1::pair.104"* [ %186, %181 ], [ null, %170 ]
  store %"struct.std::__1::pair.104"* %190, %"struct.std::__1::pair.104"** %146, align 8
  %191 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %190, i64 %188
  store %"struct.std::__1::pair.104"* %191, %"struct.std::__1::pair.104"** %148, align 8
  store %"struct.std::__1::pair.104"* %191, %"struct.std::__1::pair.104"** %147, align 8
  %192 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %190, i64 %189
  store %"struct.std::__1::pair.104"* %192, %"struct.std::__1::pair.104"** %149, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairImiEERNS_9allocatorIS2_EEE9push_backEOS2_(%"struct.std::__1::__split_buffer.327"* nonnull %5, %"struct.std::__1::pair.104"* dereferenceable(16) %2)
  %193 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %147, align 8
  %194 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %6, align 8
  %195 = ptrtoint %"struct.std::__1::pair.104"* %194 to i64
  %196 = sub i64 %4, %195
  %197 = ashr exact i64 %196, 4
  %198 = sub nsw i64 0, %197
  %199 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %193, i64 %198
  store %"struct.std::__1::pair.104"* %199, %"struct.std::__1::pair.104"** %147, align 8
  %200 = icmp sgt i64 %196, 0
  br i1 %200, label %201, label %204

201:                                              ; preds = %187
  %202 = bitcast %"struct.std::__1::pair.104"* %199 to i8*
  %203 = bitcast %"struct.std::__1::pair.104"* %194 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %202, i8* align 8 %203, i64 %196, i1 false) #17
  br label %204

204:                                              ; preds = %201, %187
  %205 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %7, align 8
  %206 = icmp eq %"struct.std::__1::pair.104"* %205, %1
  br i1 %206, label %207, label %211

207:                                              ; preds = %204
  %208 = ptrtoint %"struct.std::__1::pair.104"* %205 to i64
  %209 = bitcast %"struct.std::__1::pair.104"** %148 to i64*
  %210 = load i64, i64* %209, align 8
  br label %268

211:                                              ; preds = %204
  %212 = bitcast %"struct.std::__1::pair.104"** %148 to i8**
  %213 = load i8*, i8** %212, align 8
  %214 = getelementptr %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %205, i64 -1, i32 0
  %215 = ptrtoint i64* %214 to i64
  %216 = sub i64 %215, %4
  %217 = lshr i64 %216, 4
  %218 = add nuw nsw i64 %217, 1
  %219 = and i64 %218, 3
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %234, label %221

221:                                              ; preds = %211, %221
  %222 = phi i8* [ %229, %221 ], [ %213, %211 ]
  %223 = phi %"struct.std::__1::pair.104"* [ %226, %221 ], [ %1, %211 ]
  %224 = phi i64 [ %230, %221 ], [ %219, %211 ]
  %225 = bitcast %"struct.std::__1::pair.104"* %223 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* align 8 %225, i64 16, i1 false) #17
  %226 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %223, i64 1
  %227 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %148, align 8
  %228 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %227, i64 1
  store %"struct.std::__1::pair.104"* %228, %"struct.std::__1::pair.104"** %148, align 8
  %229 = bitcast %"struct.std::__1::pair.104"* %228 to i8*
  %230 = add i64 %224, -1
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %232, label %221, !llvm.loop !261

232:                                              ; preds = %221
  %233 = bitcast %"struct.std::__1::pair.104"* %228 to i8*
  br label %234

234:                                              ; preds = %211, %232
  %235 = phi %"struct.std::__1::pair.104"* [ undef, %211 ], [ %228, %232 ]
  %236 = phi i8* [ %213, %211 ], [ %233, %232 ]
  %237 = phi %"struct.std::__1::pair.104"* [ %1, %211 ], [ %226, %232 ]
  %238 = icmp ult i64 %216, 48
  br i1 %238, label %263, label %239

239:                                              ; preds = %234, %239
  %240 = phi i8* [ %262, %239 ], [ %236, %234 ]
  %241 = phi %"struct.std::__1::pair.104"* [ %258, %239 ], [ %237, %234 ]
  %242 = bitcast %"struct.std::__1::pair.104"* %241 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %240, i8* align 8 %242, i64 16, i1 false) #17
  %243 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %241, i64 1
  %244 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %148, align 8
  %245 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %244, i64 1
  store %"struct.std::__1::pair.104"* %245, %"struct.std::__1::pair.104"** %148, align 8
  %246 = bitcast %"struct.std::__1::pair.104"* %245 to i8*
  %247 = bitcast %"struct.std::__1::pair.104"* %243 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %246, i8* align 8 %247, i64 16, i1 false) #17
  %248 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %241, i64 2
  %249 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %148, align 8
  %250 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %249, i64 1
  store %"struct.std::__1::pair.104"* %250, %"struct.std::__1::pair.104"** %148, align 8
  %251 = bitcast %"struct.std::__1::pair.104"* %250 to i8*
  %252 = bitcast %"struct.std::__1::pair.104"* %248 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %251, i8* align 8 %252, i64 16, i1 false) #17
  %253 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %241, i64 3
  %254 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %148, align 8
  %255 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %254, i64 1
  store %"struct.std::__1::pair.104"* %255, %"struct.std::__1::pair.104"** %148, align 8
  %256 = bitcast %"struct.std::__1::pair.104"* %255 to i8*
  %257 = bitcast %"struct.std::__1::pair.104"* %253 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %256, i8* align 8 %257, i64 16, i1 false) #17
  %258 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %241, i64 4
  %259 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %148, align 8
  %260 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %259, i64 1
  store %"struct.std::__1::pair.104"* %260, %"struct.std::__1::pair.104"** %148, align 8
  %261 = icmp eq %"struct.std::__1::pair.104"* %258, %205
  %262 = bitcast %"struct.std::__1::pair.104"* %260 to i8*
  br i1 %261, label %263, label %239

263:                                              ; preds = %239, %234
  %264 = phi %"struct.std::__1::pair.104"* [ %235, %234 ], [ %260, %239 ]
  %265 = ptrtoint %"struct.std::__1::pair.104"* %264 to i64
  %266 = load i64, i64* %151, align 8
  %267 = bitcast %"struct.std::__1::pair.104"** %148 to i64*
  br label %268

268:                                              ; preds = %207, %263
  %269 = phi i64* [ %209, %207 ], [ %267, %263 ]
  %270 = phi i64 [ %210, %207 ], [ %265, %263 ]
  %271 = phi i64 [ %208, %207 ], [ %266, %263 ]
  %272 = load i64, i64* %152, align 8
  %273 = bitcast %"struct.std::__1::pair.104"** %147 to i64*
  %274 = load i64, i64* %273, align 8
  store i64 %274, i64* %152, align 8
  store i64 %272, i64* %273, align 8
  store i64 %270, i64* %151, align 8
  store i64 %271, i64* %269, align 8
  %275 = load i64, i64* %162, align 8
  %276 = bitcast %"struct.std::__1::pair.104"** %149 to i64*
  %277 = load i64, i64* %276, align 8
  store i64 %277, i64* %162, align 8
  store i64 %275, i64* %276, align 8
  %278 = bitcast %"struct.std::__1::__split_buffer.327"* %5 to i64*
  store i64 %272, i64* %278, align 8
  %279 = inttoptr i64 %272 to %"struct.std::__1::pair.104"*
  %280 = inttoptr i64 %271 to %"struct.std::__1::pair.104"*
  %281 = icmp eq %"struct.std::__1::pair.104"* %280, %279
  br i1 %281, label %289, label %282

282:                                              ; preds = %268
  %283 = getelementptr %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %280, i64 -1, i32 0
  %284 = ptrtoint i64* %283 to i64
  %285 = sub i64 %284, %272
  %286 = lshr i64 %285, 4
  %287 = xor i64 %286, -1
  %288 = getelementptr %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %280, i64 %287
  store %"struct.std::__1::pair.104"* %288, %"struct.std::__1::pair.104"** %148, align 8
  br label %289

289:                                              ; preds = %282, %268
  %290 = icmp eq i64 %272, 0
  br i1 %290, label %293, label %291

291:                                              ; preds = %289
  %292 = inttoptr i64 %272 to i8*
  call void @_ZdlPv(i8* %292) #18
  br label %293

293:                                              ; preds = %289, %291
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %145) #17
  br label %294

294:                                              ; preds = %16, %136, %293
  %295 = phi %"struct.std::__1::pair.104"* [ %1, %16 ], [ %1, %136 ], [ %193, %293 ]
  ret %"struct.std::__1::pair.104"* %295
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairImiEERNS_9allocatorIS2_EEE9push_backEOS2_(%"struct.std::__1::__split_buffer.327"*, %"struct.std::__1::pair.104"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.327", %"struct.std::__1::__split_buffer.327"* %0, i64 0, i32 2
  %4 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.327", %"struct.std::__1::__split_buffer.327"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.104"* %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.104"* %6 to i64
  %9 = bitcast %"struct.std::__1::pair.104"* %4 to i8*
  br i1 %7, label %10, label %176

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.327", %"struct.std::__1::__split_buffer.327"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %11, align 8
  %13 = ptrtoint %"struct.std::__1::pair.104"* %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.327", %"struct.std::__1::__split_buffer.327"* %0, i64 0, i32 0
  %15 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %14, align 8
  %16 = icmp ugt %"struct.std::__1::pair.104"* %12, %15
  %17 = ptrtoint %"struct.std::__1::pair.104"* %15 to i64
  br i1 %16, label %18, label %91

18:                                               ; preds = %10
  %19 = ptrtoint %"struct.std::__1::pair.104"* %12 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 4
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %12, i64 %23
  %25 = icmp eq %"struct.std::__1::pair.104"* %12, %4
  br i1 %25, label %86, label %26

26:                                               ; preds = %18
  %27 = getelementptr %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %4, i64 -1, i32 0
  %28 = ptrtoint i64* %27 to i64
  %29 = sub i64 %28, %13
  %30 = lshr i64 %29, 4
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 3
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %48, label %34

34:                                               ; preds = %26, %34
  %35 = phi %"struct.std::__1::pair.104"* [ %45, %34 ], [ %24, %26 ]
  %36 = phi %"struct.std::__1::pair.104"* [ %44, %34 ], [ %12, %26 ]
  %37 = phi i64 [ %46, %34 ], [ %32, %26 ]
  %38 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %36, i64 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %35, i64 0, i32 0
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %36, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %35, i64 0, i32 1
  store i32 %42, i32* %43, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %36, i64 1
  %45 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %35, i64 1
  %46 = add i64 %37, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %34, !llvm.loop !262

48:                                               ; preds = %34, %26
  %49 = phi %"struct.std::__1::pair.104"* [ undef, %26 ], [ %45, %34 ]
  %50 = phi %"struct.std::__1::pair.104"* [ %24, %26 ], [ %45, %34 ]
  %51 = phi %"struct.std::__1::pair.104"* [ %12, %26 ], [ %44, %34 ]
  %52 = icmp ult i64 %29, 48
  br i1 %52, label %83, label %53

53:                                               ; preds = %48, %53
  %54 = phi %"struct.std::__1::pair.104"* [ %81, %53 ], [ %50, %48 ]
  %55 = phi %"struct.std::__1::pair.104"* [ %80, %53 ], [ %51, %48 ]
  %56 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %55, i64 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %54, i64 0, i32 0
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %55, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %54, i64 0, i32 1
  store i32 %60, i32* %61, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %55, i64 1, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %54, i64 1, i32 0
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %55, i64 1, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %54, i64 1, i32 1
  store i32 %66, i32* %67, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %55, i64 2, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %54, i64 2, i32 0
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %55, i64 2, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %54, i64 2, i32 1
  store i32 %72, i32* %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %55, i64 3, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %54, i64 3, i32 0
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %55, i64 3, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %54, i64 3, i32 1
  store i32 %78, i32* %79, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %55, i64 4
  %81 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %54, i64 4
  %82 = icmp eq %"struct.std::__1::pair.104"* %80, %4
  br i1 %82, label %83, label %53

83:                                               ; preds = %53, %48
  %84 = phi %"struct.std::__1::pair.104"* [ %49, %48 ], [ %81, %53 ]
  %85 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %11, align 8
  br label %86

86:                                               ; preds = %83, %18
  %87 = phi %"struct.std::__1::pair.104"* [ %4, %18 ], [ %85, %83 ]
  %88 = phi %"struct.std::__1::pair.104"* [ %24, %18 ], [ %84, %83 ]
  store %"struct.std::__1::pair.104"* %88, %"struct.std::__1::pair.104"** %3, align 8
  %89 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %87, i64 %23
  store %"struct.std::__1::pair.104"* %89, %"struct.std::__1::pair.104"** %11, align 8
  %90 = bitcast %"struct.std::__1::pair.104"* %88 to i8*
  br label %176

91:                                               ; preds = %10
  %92 = bitcast %"struct.std::__1::pair.104"** %5 to i64*
  %93 = bitcast %"struct.std::__1::__split_buffer.327"* %0 to i64*
  %94 = sub i64 %8, %17
  %95 = ashr exact i64 %94, 3
  %96 = icmp eq i64 %94, 0
  %97 = select i1 %96, i64 1, i64 %95
  %98 = icmp ugt i64 %97, 1152921504606846975
  br i1 %98, label %99, label %100

99:                                               ; preds = %91
  tail call void @abort() #19
  unreachable

100:                                              ; preds = %91
  %101 = lshr i64 %97, 2
  %102 = shl i64 %97, 4
  %103 = tail call i8* @_Znwm(i64 %102) #18
  %104 = bitcast i8* %103 to %"struct.std::__1::pair.104"*
  %105 = ptrtoint i8* %103 to i64
  %106 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %104, i64 %101
  %107 = ptrtoint %"struct.std::__1::pair.104"* %106 to i64
  %108 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %104, i64 %97
  %109 = ptrtoint %"struct.std::__1::pair.104"* %108 to i64
  %110 = ptrtoint %"struct.std::__1::pair.104"* %4 to i64
  %111 = sub i64 %110, %13
  %112 = ashr exact i64 %111, 4
  %113 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %106, i64 %112
  %114 = icmp eq i64 %111, 0
  br i1 %114, label %165, label %115

115:                                              ; preds = %100
  %116 = add i64 %111, -16
  %117 = lshr i64 %116, 4
  %118 = add nuw nsw i64 %117, 1
  %119 = and i64 %118, 3
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %135, label %121

121:                                              ; preds = %115, %121
  %122 = phi %"struct.std::__1::pair.104"* [ %128, %121 ], [ %106, %115 ]
  %123 = phi i64 [ %129, %121 ], [ %107, %115 ]
  %124 = phi %"struct.std::__1::pair.104"* [ %130, %121 ], [ %12, %115 ]
  %125 = phi i64 [ %131, %121 ], [ %119, %115 ]
  %126 = inttoptr i64 %123 to i8*
  %127 = bitcast %"struct.std::__1::pair.104"* %124 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* align 8 %127, i64 16, i1 false) #17
  %128 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %122, i64 1
  %129 = ptrtoint %"struct.std::__1::pair.104"* %128 to i64
  %130 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %124, i64 1
  %131 = add i64 %125, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %121, !llvm.loop !263

133:                                              ; preds = %121
  %134 = ptrtoint %"struct.std::__1::pair.104"* %128 to i64
  br label %135

135:                                              ; preds = %115, %133
  %136 = phi %"struct.std::__1::pair.104"* [ %106, %115 ], [ %128, %133 ]
  %137 = phi i64 [ %107, %115 ], [ %134, %133 ]
  %138 = phi %"struct.std::__1::pair.104"* [ %12, %115 ], [ %130, %133 ]
  %139 = icmp ult i64 %116, 48
  br i1 %139, label %162, label %140

140:                                              ; preds = %135, %140
  %141 = phi %"struct.std::__1::pair.104"* [ %158, %140 ], [ %136, %135 ]
  %142 = phi i64 [ %159, %140 ], [ %137, %135 ]
  %143 = phi %"struct.std::__1::pair.104"* [ %160, %140 ], [ %138, %135 ]
  %144 = inttoptr i64 %142 to i8*
  %145 = bitcast %"struct.std::__1::pair.104"* %143 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 8 %145, i64 16, i1 false) #17
  %146 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %141, i64 1
  %147 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %143, i64 1
  %148 = bitcast %"struct.std::__1::pair.104"* %146 to i8*
  %149 = bitcast %"struct.std::__1::pair.104"* %147 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %148, i8* align 8 %149, i64 16, i1 false) #17
  %150 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %141, i64 2
  %151 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %143, i64 2
  %152 = bitcast %"struct.std::__1::pair.104"* %150 to i8*
  %153 = bitcast %"struct.std::__1::pair.104"* %151 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %153, i64 16, i1 false) #17
  %154 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %141, i64 3
  %155 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %143, i64 3
  %156 = bitcast %"struct.std::__1::pair.104"* %154 to i8*
  %157 = bitcast %"struct.std::__1::pair.104"* %155 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %156, i8* align 8 %157, i64 16, i1 false) #17
  %158 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %141, i64 4
  %159 = ptrtoint %"struct.std::__1::pair.104"* %158 to i64
  %160 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %143, i64 4
  %161 = icmp eq %"struct.std::__1::pair.104"* %113, %158
  br i1 %161, label %162, label %140

162:                                              ; preds = %140, %135
  %163 = ptrtoint %"struct.std::__1::pair.104"* %113 to i64
  %164 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %14, align 8
  br label %165

165:                                              ; preds = %100, %162
  %166 = phi %"struct.std::__1::pair.104"* [ %164, %162 ], [ %15, %100 ]
  %167 = phi i64 [ %163, %162 ], [ %107, %100 ]
  store i64 %105, i64* %93, align 8
  %168 = bitcast %"struct.std::__1::pair.104"** %11 to i64*
  store i64 %107, i64* %168, align 8
  %169 = bitcast %"struct.std::__1::pair.104"** %3 to i64*
  store i64 %167, i64* %169, align 8
  store i64 %109, i64* %92, align 8
  %170 = icmp eq %"struct.std::__1::pair.104"* %166, null
  %171 = inttoptr i64 %167 to i8*
  br i1 %170, label %176, label %172

172:                                              ; preds = %165
  %173 = bitcast %"struct.std::__1::pair.104"* %166 to i8*
  tail call void @_ZdlPv(i8* %173) #18
  %174 = bitcast %"struct.std::__1::pair.104"** %3 to i8**
  %175 = load i8*, i8** %174, align 8
  br label %176

176:                                              ; preds = %172, %165, %86, %2
  %177 = phi i8* [ %175, %172 ], [ %171, %165 ], [ %90, %86 ], [ %9, %2 ]
  %178 = bitcast %"struct.std::__1::pair.104"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %177, i8* align 8 %178, i64 16, i1 false) #17
  %179 = load %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"** %3, align 8
  %180 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %179, i64 1
  store %"struct.std::__1::pair.104"* %180, %"struct.std::__1::pair.104"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.124"* @_ZNSt3__16vectorINS_4pairImbEENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EEOS2_(%"class.std::__1::vector.122"*, %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::pair.124"* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.333", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %0, i64 0, i32 0, i32 1
  %8 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %9, align 8
  %11 = icmp ult %"struct.std::__1::pair.124"* %8, %10
  %12 = ptrtoint %"struct.std::__1::pair.124"* %8 to i64
  %13 = ptrtoint %"struct.std::__1::pair.124"* %10 to i64
  br i1 %11, label %14, label %143

14:                                               ; preds = %3
  %15 = icmp eq %"struct.std::__1::pair.124"* %8, %1
  br i1 %15, label %16, label %22

16:                                               ; preds = %14
  %17 = bitcast %"struct.std::__1::pair.124"* %1 to i8*
  %18 = bitcast %"struct.std::__1::pair.124"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 16, i1 false) #17
  %19 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %1, i64 1
  %20 = ptrtoint %"struct.std::__1::pair.124"* %19 to i64
  %21 = bitcast %"struct.std::__1::pair.124"** %7 to i64*
  store i64 %20, i64* %21, align 8
  br label %294

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %1, i64 1
  %24 = ptrtoint %"struct.std::__1::pair.124"* %23 to i64
  %25 = sub i64 %12, %24
  %26 = ashr exact i64 %25, 4
  %27 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %1, i64 %26
  %28 = bitcast %"struct.std::__1::pair.124"** %7 to i64*
  %29 = icmp ult %"struct.std::__1::pair.124"* %27, %8
  br i1 %29, label %30, label %59

30:                                               ; preds = %22
  %31 = sub nsw i64 0, %26
  %32 = getelementptr %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %8, i64 %31, i32 0
  %33 = bitcast i64* %32 to i8*
  %34 = xor i64 %4, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = ptrtoint i8* %35 to i64
  %37 = lshr i64 %36, 4
  %38 = add nuw nsw i64 %37, 1
  %39 = and i64 %38, 3
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %30, %41
  %42 = phi %"struct.std::__1::pair.124"* [ %48, %41 ], [ %8, %30 ]
  %43 = phi %"struct.std::__1::pair.124"* [ %47, %41 ], [ %27, %30 ]
  %44 = phi i64 [ %49, %41 ], [ %39, %30 ]
  %45 = bitcast %"struct.std::__1::pair.124"* %42 to i8*
  %46 = bitcast %"struct.std::__1::pair.124"* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 16, i1 false) #17
  %47 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %43, i64 1
  %48 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %42, i64 1
  %49 = add i64 %44, -1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %41, !llvm.loop !264

51:                                               ; preds = %41, %30
  %52 = phi %"struct.std::__1::pair.124"* [ %8, %30 ], [ %48, %41 ]
  %53 = phi %"struct.std::__1::pair.124"* [ %27, %30 ], [ %47, %41 ]
  %54 = phi %"struct.std::__1::pair.124"* [ undef, %30 ], [ %48, %41 ]
  %55 = icmp ult i8* %35, inttoptr (i64 48 to i8*)
  br i1 %55, label %56, label %116

56:                                               ; preds = %116, %51
  %57 = phi %"struct.std::__1::pair.124"* [ %54, %51 ], [ %134, %116 ]
  %58 = ptrtoint %"struct.std::__1::pair.124"* %57 to i64
  br label %59

59:                                               ; preds = %56, %22
  %60 = phi i64 [ %58, %56 ], [ %12, %22 ]
  store i64 %60, i64* %28, align 8
  %61 = icmp eq i64 %25, 0
  br i1 %61, label %136, label %62

62:                                               ; preds = %59
  %63 = add i64 %25, -16
  %64 = lshr i64 %63, 4
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 3
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %82, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.std::__1::pair.124"* [ %73, %68 ], [ %8, %62 ]
  %70 = phi %"struct.std::__1::pair.124"* [ %72, %68 ], [ %27, %62 ]
  %71 = phi i64 [ %80, %68 ], [ %66, %62 ]
  %72 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %70, i64 -1
  %73 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %69, i64 -1
  %74 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %72, i64 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %73, i64 0, i32 0
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %70, i64 -1, i32 1
  %78 = load i8, i8* %77, align 1, !range !2
  %79 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %69, i64 -1, i32 1
  store i8 %78, i8* %79, align 8
  %80 = add i64 %71, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %68, !llvm.loop !265

82:                                               ; preds = %68, %62
  %83 = phi %"struct.std::__1::pair.124"* [ %8, %62 ], [ %73, %68 ]
  %84 = phi %"struct.std::__1::pair.124"* [ %27, %62 ], [ %72, %68 ]
  %85 = icmp ult i64 %63, 48
  br i1 %85, label %136, label %86

86:                                               ; preds = %82, %86
  %87 = phi %"struct.std::__1::pair.124"* [ %108, %86 ], [ %83, %82 ]
  %88 = phi %"struct.std::__1::pair.124"* [ %107, %86 ], [ %84, %82 ]
  %89 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %88, i64 -1, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %87, i64 -1, i32 0
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %88, i64 -1, i32 1
  %93 = load i8, i8* %92, align 1, !range !2
  %94 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %87, i64 -1, i32 1
  store i8 %93, i8* %94, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %88, i64 -2, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %87, i64 -2, i32 0
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %88, i64 -2, i32 1
  %99 = load i8, i8* %98, align 1, !range !2
  %100 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %87, i64 -2, i32 1
  store i8 %99, i8* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %88, i64 -3, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %87, i64 -3, i32 0
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %88, i64 -3, i32 1
  %105 = load i8, i8* %104, align 1, !range !2
  %106 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %87, i64 -3, i32 1
  store i8 %105, i8* %106, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %88, i64 -4
  %108 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %87, i64 -4
  %109 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %107, i64 0, i32 0
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %108, i64 0, i32 0
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %88, i64 -4, i32 1
  %113 = load i8, i8* %112, align 1, !range !2
  %114 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %87, i64 -4, i32 1
  store i8 %113, i8* %114, align 8
  %115 = icmp eq %"struct.std::__1::pair.124"* %107, %1
  br i1 %115, label %136, label %86

116:                                              ; preds = %51, %116
  %117 = phi %"struct.std::__1::pair.124"* [ %134, %116 ], [ %52, %51 ]
  %118 = phi %"struct.std::__1::pair.124"* [ %133, %116 ], [ %53, %51 ]
  %119 = bitcast %"struct.std::__1::pair.124"* %117 to i8*
  %120 = bitcast %"struct.std::__1::pair.124"* %118 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 16, i1 false) #17
  %121 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %118, i64 1
  %122 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %117, i64 1
  %123 = bitcast %"struct.std::__1::pair.124"* %122 to i8*
  %124 = bitcast %"struct.std::__1::pair.124"* %121 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %123, i8* align 8 %124, i64 16, i1 false) #17
  %125 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %118, i64 2
  %126 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %117, i64 2
  %127 = bitcast %"struct.std::__1::pair.124"* %126 to i8*
  %128 = bitcast %"struct.std::__1::pair.124"* %125 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* align 8 %128, i64 16, i1 false) #17
  %129 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %118, i64 3
  %130 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %117, i64 3
  %131 = bitcast %"struct.std::__1::pair.124"* %130 to i8*
  %132 = bitcast %"struct.std::__1::pair.124"* %129 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 16, i1 false) #17
  %133 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %118, i64 4
  %134 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %117, i64 4
  %135 = icmp ult %"struct.std::__1::pair.124"* %133, %8
  br i1 %135, label %116, label %56

136:                                              ; preds = %82, %86, %59
  %137 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %2, i64 0, i32 0
  %138 = load i64, i64* %137, align 8
  %139 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %1, i64 0, i32 0
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %2, i64 0, i32 1
  %141 = load i8, i8* %140, align 1, !range !2
  %142 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %1, i64 0, i32 1
  store i8 %141, i8* %142, align 8
  br label %294

143:                                              ; preds = %3
  %144 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %0, i64 0, i32 0, i32 2
  %145 = bitcast %"struct.std::__1::__split_buffer.333"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %145) #17
  %146 = getelementptr inbounds %"struct.std::__1::__split_buffer.333", %"struct.std::__1::__split_buffer.333"* %5, i64 0, i32 0
  %147 = getelementptr inbounds %"struct.std::__1::__split_buffer.333", %"struct.std::__1::__split_buffer.333"* %5, i64 0, i32 1
  %148 = getelementptr inbounds %"struct.std::__1::__split_buffer.333", %"struct.std::__1::__split_buffer.333"* %5, i64 0, i32 2
  %149 = getelementptr inbounds %"struct.std::__1::__split_buffer.333", %"struct.std::__1::__split_buffer.333"* %5, i64 0, i32 3, i32 0, i32 0
  %150 = getelementptr inbounds %"struct.std::__1::__split_buffer.333", %"struct.std::__1::__split_buffer.333"* %5, i64 0, i32 3, i32 1, i32 0
  %151 = bitcast %"struct.std::__1::pair.124"** %7 to i64*
  %152 = bitcast %"class.std::__1::vector.122"* %0 to i64*
  %153 = bitcast %"struct.std::__1::__split_buffer.333"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %153, i8 -86, i64 40, i1 false)
  %154 = load i64, i64* %152, align 8
  %155 = sub i64 %12, %154
  %156 = ashr exact i64 %155, 4
  %157 = add nsw i64 %156, 1
  %158 = icmp ugt i64 %157, 1152921504606846975
  br i1 %158, label %159, label %161

159:                                              ; preds = %143
  %160 = bitcast %"class.std::__1::vector.122"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %160) #19
  unreachable

161:                                              ; preds = %143
  %162 = bitcast %"struct.std::__1::pair.124"** %9 to i64*
  %163 = sub i64 %13, %154
  %164 = ashr exact i64 %163, 4
  %165 = icmp ult i64 %164, 576460752303423487
  br i1 %165, label %170, label %166

166:                                              ; preds = %161
  %167 = sub i64 %4, %154
  %168 = ashr exact i64 %167, 4
  store %"struct.std::__1::pair.124"* null, %"struct.std::__1::pair.124"** %149, align 8
  %169 = bitcast %"class.std::__1::allocator.129"** %150 to %"class.std::__1::__compressed_pair.126"**
  store %"class.std::__1::__compressed_pair.126"* %144, %"class.std::__1::__compressed_pair.126"** %169, align 8
  br label %181

170:                                              ; preds = %161
  %171 = ashr exact i64 %163, 3
  %172 = icmp ult i64 %171, %157
  %173 = select i1 %172, i64 %157, i64 %171
  %174 = sub i64 %4, %154
  %175 = ashr exact i64 %174, 4
  store %"struct.std::__1::pair.124"* null, %"struct.std::__1::pair.124"** %149, align 8
  %176 = bitcast %"class.std::__1::allocator.129"** %150 to %"class.std::__1::__compressed_pair.126"**
  store %"class.std::__1::__compressed_pair.126"* %144, %"class.std::__1::__compressed_pair.126"** %176, align 8
  %177 = icmp eq i64 %173, 0
  br i1 %177, label %187, label %178

178:                                              ; preds = %170
  %179 = icmp ugt i64 %173, 1152921504606846975
  br i1 %179, label %180, label %181

180:                                              ; preds = %178
  tail call void @abort() #19
  unreachable

181:                                              ; preds = %166, %178
  %182 = phi i64 [ 1152921504606846975, %166 ], [ %173, %178 ]
  %183 = phi i64 [ %168, %166 ], [ %175, %178 ]
  %184 = shl i64 %182, 4
  %185 = tail call i8* @_Znwm(i64 %184) #18
  %186 = bitcast i8* %185 to %"struct.std::__1::pair.124"*
  br label %187

187:                                              ; preds = %170, %181
  %188 = phi i64 [ %183, %181 ], [ %175, %170 ]
  %189 = phi i64 [ %182, %181 ], [ 0, %170 ]
  %190 = phi %"struct.std::__1::pair.124"* [ %186, %181 ], [ null, %170 ]
  store %"struct.std::__1::pair.124"* %190, %"struct.std::__1::pair.124"** %146, align 8
  %191 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %190, i64 %188
  store %"struct.std::__1::pair.124"* %191, %"struct.std::__1::pair.124"** %148, align 8
  store %"struct.std::__1::pair.124"* %191, %"struct.std::__1::pair.124"** %147, align 8
  %192 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %190, i64 %189
  store %"struct.std::__1::pair.124"* %192, %"struct.std::__1::pair.124"** %149, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairImbEERNS_9allocatorIS2_EEE9push_backEOS2_(%"struct.std::__1::__split_buffer.333"* nonnull %5, %"struct.std::__1::pair.124"* dereferenceable(16) %2)
  %193 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %147, align 8
  %194 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %6, align 8
  %195 = ptrtoint %"struct.std::__1::pair.124"* %194 to i64
  %196 = sub i64 %4, %195
  %197 = ashr exact i64 %196, 4
  %198 = sub nsw i64 0, %197
  %199 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %193, i64 %198
  store %"struct.std::__1::pair.124"* %199, %"struct.std::__1::pair.124"** %147, align 8
  %200 = icmp sgt i64 %196, 0
  br i1 %200, label %201, label %204

201:                                              ; preds = %187
  %202 = bitcast %"struct.std::__1::pair.124"* %199 to i8*
  %203 = bitcast %"struct.std::__1::pair.124"* %194 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %202, i8* align 8 %203, i64 %196, i1 false) #17
  br label %204

204:                                              ; preds = %201, %187
  %205 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %7, align 8
  %206 = icmp eq %"struct.std::__1::pair.124"* %205, %1
  br i1 %206, label %207, label %211

207:                                              ; preds = %204
  %208 = ptrtoint %"struct.std::__1::pair.124"* %205 to i64
  %209 = bitcast %"struct.std::__1::pair.124"** %148 to i64*
  %210 = load i64, i64* %209, align 8
  br label %268

211:                                              ; preds = %204
  %212 = bitcast %"struct.std::__1::pair.124"** %148 to i8**
  %213 = load i8*, i8** %212, align 8
  %214 = getelementptr %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %205, i64 -1, i32 0
  %215 = ptrtoint i64* %214 to i64
  %216 = sub i64 %215, %4
  %217 = lshr i64 %216, 4
  %218 = add nuw nsw i64 %217, 1
  %219 = and i64 %218, 3
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %234, label %221

221:                                              ; preds = %211, %221
  %222 = phi i8* [ %229, %221 ], [ %213, %211 ]
  %223 = phi %"struct.std::__1::pair.124"* [ %226, %221 ], [ %1, %211 ]
  %224 = phi i64 [ %230, %221 ], [ %219, %211 ]
  %225 = bitcast %"struct.std::__1::pair.124"* %223 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* align 8 %225, i64 16, i1 false) #17
  %226 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %223, i64 1
  %227 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %148, align 8
  %228 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %227, i64 1
  store %"struct.std::__1::pair.124"* %228, %"struct.std::__1::pair.124"** %148, align 8
  %229 = bitcast %"struct.std::__1::pair.124"* %228 to i8*
  %230 = add i64 %224, -1
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %232, label %221, !llvm.loop !266

232:                                              ; preds = %221
  %233 = bitcast %"struct.std::__1::pair.124"* %228 to i8*
  br label %234

234:                                              ; preds = %211, %232
  %235 = phi %"struct.std::__1::pair.124"* [ undef, %211 ], [ %228, %232 ]
  %236 = phi i8* [ %213, %211 ], [ %233, %232 ]
  %237 = phi %"struct.std::__1::pair.124"* [ %1, %211 ], [ %226, %232 ]
  %238 = icmp ult i64 %216, 48
  br i1 %238, label %263, label %239

239:                                              ; preds = %234, %239
  %240 = phi i8* [ %262, %239 ], [ %236, %234 ]
  %241 = phi %"struct.std::__1::pair.124"* [ %258, %239 ], [ %237, %234 ]
  %242 = bitcast %"struct.std::__1::pair.124"* %241 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %240, i8* align 8 %242, i64 16, i1 false) #17
  %243 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %241, i64 1
  %244 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %148, align 8
  %245 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %244, i64 1
  store %"struct.std::__1::pair.124"* %245, %"struct.std::__1::pair.124"** %148, align 8
  %246 = bitcast %"struct.std::__1::pair.124"* %245 to i8*
  %247 = bitcast %"struct.std::__1::pair.124"* %243 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %246, i8* align 8 %247, i64 16, i1 false) #17
  %248 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %241, i64 2
  %249 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %148, align 8
  %250 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %249, i64 1
  store %"struct.std::__1::pair.124"* %250, %"struct.std::__1::pair.124"** %148, align 8
  %251 = bitcast %"struct.std::__1::pair.124"* %250 to i8*
  %252 = bitcast %"struct.std::__1::pair.124"* %248 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %251, i8* align 8 %252, i64 16, i1 false) #17
  %253 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %241, i64 3
  %254 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %148, align 8
  %255 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %254, i64 1
  store %"struct.std::__1::pair.124"* %255, %"struct.std::__1::pair.124"** %148, align 8
  %256 = bitcast %"struct.std::__1::pair.124"* %255 to i8*
  %257 = bitcast %"struct.std::__1::pair.124"* %253 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %256, i8* align 8 %257, i64 16, i1 false) #17
  %258 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %241, i64 4
  %259 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %148, align 8
  %260 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %259, i64 1
  store %"struct.std::__1::pair.124"* %260, %"struct.std::__1::pair.124"** %148, align 8
  %261 = icmp eq %"struct.std::__1::pair.124"* %258, %205
  %262 = bitcast %"struct.std::__1::pair.124"* %260 to i8*
  br i1 %261, label %263, label %239

263:                                              ; preds = %239, %234
  %264 = phi %"struct.std::__1::pair.124"* [ %235, %234 ], [ %260, %239 ]
  %265 = ptrtoint %"struct.std::__1::pair.124"* %264 to i64
  %266 = load i64, i64* %151, align 8
  %267 = bitcast %"struct.std::__1::pair.124"** %148 to i64*
  br label %268

268:                                              ; preds = %207, %263
  %269 = phi i64* [ %209, %207 ], [ %267, %263 ]
  %270 = phi i64 [ %210, %207 ], [ %265, %263 ]
  %271 = phi i64 [ %208, %207 ], [ %266, %263 ]
  %272 = load i64, i64* %152, align 8
  %273 = bitcast %"struct.std::__1::pair.124"** %147 to i64*
  %274 = load i64, i64* %273, align 8
  store i64 %274, i64* %152, align 8
  store i64 %272, i64* %273, align 8
  store i64 %270, i64* %151, align 8
  store i64 %271, i64* %269, align 8
  %275 = load i64, i64* %162, align 8
  %276 = bitcast %"struct.std::__1::pair.124"** %149 to i64*
  %277 = load i64, i64* %276, align 8
  store i64 %277, i64* %162, align 8
  store i64 %275, i64* %276, align 8
  %278 = bitcast %"struct.std::__1::__split_buffer.333"* %5 to i64*
  store i64 %272, i64* %278, align 8
  %279 = inttoptr i64 %272 to %"struct.std::__1::pair.124"*
  %280 = inttoptr i64 %271 to %"struct.std::__1::pair.124"*
  %281 = icmp eq %"struct.std::__1::pair.124"* %280, %279
  br i1 %281, label %289, label %282

282:                                              ; preds = %268
  %283 = getelementptr %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %280, i64 -1, i32 0
  %284 = ptrtoint i64* %283 to i64
  %285 = sub i64 %284, %272
  %286 = lshr i64 %285, 4
  %287 = xor i64 %286, -1
  %288 = getelementptr %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %280, i64 %287
  store %"struct.std::__1::pair.124"* %288, %"struct.std::__1::pair.124"** %148, align 8
  br label %289

289:                                              ; preds = %282, %268
  %290 = icmp eq i64 %272, 0
  br i1 %290, label %293, label %291

291:                                              ; preds = %289
  %292 = inttoptr i64 %272 to i8*
  call void @_ZdlPv(i8* %292) #18
  br label %293

293:                                              ; preds = %289, %291
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %145) #17
  br label %294

294:                                              ; preds = %16, %136, %293
  %295 = phi %"struct.std::__1::pair.124"* [ %1, %16 ], [ %1, %136 ], [ %193, %293 ]
  ret %"struct.std::__1::pair.124"* %295
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairImbEERNS_9allocatorIS2_EEE9push_backEOS2_(%"struct.std::__1::__split_buffer.333"*, %"struct.std::__1::pair.124"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.333", %"struct.std::__1::__split_buffer.333"* %0, i64 0, i32 2
  %4 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.333", %"struct.std::__1::__split_buffer.333"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.124"* %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.124"* %6 to i64
  %9 = bitcast %"struct.std::__1::pair.124"* %4 to i8*
  br i1 %7, label %10, label %176

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.333", %"struct.std::__1::__split_buffer.333"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %11, align 8
  %13 = ptrtoint %"struct.std::__1::pair.124"* %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.333", %"struct.std::__1::__split_buffer.333"* %0, i64 0, i32 0
  %15 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %14, align 8
  %16 = icmp ugt %"struct.std::__1::pair.124"* %12, %15
  %17 = ptrtoint %"struct.std::__1::pair.124"* %15 to i64
  br i1 %16, label %18, label %91

18:                                               ; preds = %10
  %19 = ptrtoint %"struct.std::__1::pair.124"* %12 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 4
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %12, i64 %23
  %25 = icmp eq %"struct.std::__1::pair.124"* %12, %4
  br i1 %25, label %86, label %26

26:                                               ; preds = %18
  %27 = getelementptr %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %4, i64 -1, i32 0
  %28 = ptrtoint i64* %27 to i64
  %29 = sub i64 %28, %13
  %30 = lshr i64 %29, 4
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 3
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %48, label %34

34:                                               ; preds = %26, %34
  %35 = phi %"struct.std::__1::pair.124"* [ %45, %34 ], [ %24, %26 ]
  %36 = phi %"struct.std::__1::pair.124"* [ %44, %34 ], [ %12, %26 ]
  %37 = phi i64 [ %46, %34 ], [ %32, %26 ]
  %38 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %36, i64 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %35, i64 0, i32 0
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %36, i64 0, i32 1
  %42 = load i8, i8* %41, align 1, !range !2
  %43 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %35, i64 0, i32 1
  store i8 %42, i8* %43, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %36, i64 1
  %45 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %35, i64 1
  %46 = add i64 %37, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %34, !llvm.loop !267

48:                                               ; preds = %34, %26
  %49 = phi %"struct.std::__1::pair.124"* [ undef, %26 ], [ %45, %34 ]
  %50 = phi %"struct.std::__1::pair.124"* [ %24, %26 ], [ %45, %34 ]
  %51 = phi %"struct.std::__1::pair.124"* [ %12, %26 ], [ %44, %34 ]
  %52 = icmp ult i64 %29, 48
  br i1 %52, label %83, label %53

53:                                               ; preds = %48, %53
  %54 = phi %"struct.std::__1::pair.124"* [ %81, %53 ], [ %50, %48 ]
  %55 = phi %"struct.std::__1::pair.124"* [ %80, %53 ], [ %51, %48 ]
  %56 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %55, i64 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %54, i64 0, i32 0
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %55, i64 0, i32 1
  %60 = load i8, i8* %59, align 1, !range !2
  %61 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %54, i64 0, i32 1
  store i8 %60, i8* %61, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %55, i64 1, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %54, i64 1, i32 0
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %55, i64 1, i32 1
  %66 = load i8, i8* %65, align 1, !range !2
  %67 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %54, i64 1, i32 1
  store i8 %66, i8* %67, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %55, i64 2, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %54, i64 2, i32 0
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %55, i64 2, i32 1
  %72 = load i8, i8* %71, align 1, !range !2
  %73 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %54, i64 2, i32 1
  store i8 %72, i8* %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %55, i64 3, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %54, i64 3, i32 0
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %55, i64 3, i32 1
  %78 = load i8, i8* %77, align 1, !range !2
  %79 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %54, i64 3, i32 1
  store i8 %78, i8* %79, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %55, i64 4
  %81 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %54, i64 4
  %82 = icmp eq %"struct.std::__1::pair.124"* %80, %4
  br i1 %82, label %83, label %53

83:                                               ; preds = %53, %48
  %84 = phi %"struct.std::__1::pair.124"* [ %49, %48 ], [ %81, %53 ]
  %85 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %11, align 8
  br label %86

86:                                               ; preds = %83, %18
  %87 = phi %"struct.std::__1::pair.124"* [ %4, %18 ], [ %85, %83 ]
  %88 = phi %"struct.std::__1::pair.124"* [ %24, %18 ], [ %84, %83 ]
  store %"struct.std::__1::pair.124"* %88, %"struct.std::__1::pair.124"** %3, align 8
  %89 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %87, i64 %23
  store %"struct.std::__1::pair.124"* %89, %"struct.std::__1::pair.124"** %11, align 8
  %90 = bitcast %"struct.std::__1::pair.124"* %88 to i8*
  br label %176

91:                                               ; preds = %10
  %92 = bitcast %"struct.std::__1::pair.124"** %5 to i64*
  %93 = bitcast %"struct.std::__1::__split_buffer.333"* %0 to i64*
  %94 = sub i64 %8, %17
  %95 = ashr exact i64 %94, 3
  %96 = icmp eq i64 %94, 0
  %97 = select i1 %96, i64 1, i64 %95
  %98 = icmp ugt i64 %97, 1152921504606846975
  br i1 %98, label %99, label %100

99:                                               ; preds = %91
  tail call void @abort() #19
  unreachable

100:                                              ; preds = %91
  %101 = lshr i64 %97, 2
  %102 = shl i64 %97, 4
  %103 = tail call i8* @_Znwm(i64 %102) #18
  %104 = bitcast i8* %103 to %"struct.std::__1::pair.124"*
  %105 = ptrtoint i8* %103 to i64
  %106 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %104, i64 %101
  %107 = ptrtoint %"struct.std::__1::pair.124"* %106 to i64
  %108 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %104, i64 %97
  %109 = ptrtoint %"struct.std::__1::pair.124"* %108 to i64
  %110 = ptrtoint %"struct.std::__1::pair.124"* %4 to i64
  %111 = sub i64 %110, %13
  %112 = ashr exact i64 %111, 4
  %113 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %106, i64 %112
  %114 = icmp eq i64 %111, 0
  br i1 %114, label %165, label %115

115:                                              ; preds = %100
  %116 = add i64 %111, -16
  %117 = lshr i64 %116, 4
  %118 = add nuw nsw i64 %117, 1
  %119 = and i64 %118, 3
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %135, label %121

121:                                              ; preds = %115, %121
  %122 = phi %"struct.std::__1::pair.124"* [ %128, %121 ], [ %106, %115 ]
  %123 = phi i64 [ %129, %121 ], [ %107, %115 ]
  %124 = phi %"struct.std::__1::pair.124"* [ %130, %121 ], [ %12, %115 ]
  %125 = phi i64 [ %131, %121 ], [ %119, %115 ]
  %126 = inttoptr i64 %123 to i8*
  %127 = bitcast %"struct.std::__1::pair.124"* %124 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* align 8 %127, i64 16, i1 false) #17
  %128 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %122, i64 1
  %129 = ptrtoint %"struct.std::__1::pair.124"* %128 to i64
  %130 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %124, i64 1
  %131 = add i64 %125, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %121, !llvm.loop !268

133:                                              ; preds = %121
  %134 = ptrtoint %"struct.std::__1::pair.124"* %128 to i64
  br label %135

135:                                              ; preds = %115, %133
  %136 = phi %"struct.std::__1::pair.124"* [ %106, %115 ], [ %128, %133 ]
  %137 = phi i64 [ %107, %115 ], [ %134, %133 ]
  %138 = phi %"struct.std::__1::pair.124"* [ %12, %115 ], [ %130, %133 ]
  %139 = icmp ult i64 %116, 48
  br i1 %139, label %162, label %140

140:                                              ; preds = %135, %140
  %141 = phi %"struct.std::__1::pair.124"* [ %158, %140 ], [ %136, %135 ]
  %142 = phi i64 [ %159, %140 ], [ %137, %135 ]
  %143 = phi %"struct.std::__1::pair.124"* [ %160, %140 ], [ %138, %135 ]
  %144 = inttoptr i64 %142 to i8*
  %145 = bitcast %"struct.std::__1::pair.124"* %143 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 8 %145, i64 16, i1 false) #17
  %146 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %141, i64 1
  %147 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %143, i64 1
  %148 = bitcast %"struct.std::__1::pair.124"* %146 to i8*
  %149 = bitcast %"struct.std::__1::pair.124"* %147 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %148, i8* align 8 %149, i64 16, i1 false) #17
  %150 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %141, i64 2
  %151 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %143, i64 2
  %152 = bitcast %"struct.std::__1::pair.124"* %150 to i8*
  %153 = bitcast %"struct.std::__1::pair.124"* %151 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %153, i64 16, i1 false) #17
  %154 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %141, i64 3
  %155 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %143, i64 3
  %156 = bitcast %"struct.std::__1::pair.124"* %154 to i8*
  %157 = bitcast %"struct.std::__1::pair.124"* %155 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %156, i8* align 8 %157, i64 16, i1 false) #17
  %158 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %141, i64 4
  %159 = ptrtoint %"struct.std::__1::pair.124"* %158 to i64
  %160 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %143, i64 4
  %161 = icmp eq %"struct.std::__1::pair.124"* %113, %158
  br i1 %161, label %162, label %140

162:                                              ; preds = %140, %135
  %163 = ptrtoint %"struct.std::__1::pair.124"* %113 to i64
  %164 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %14, align 8
  br label %165

165:                                              ; preds = %100, %162
  %166 = phi %"struct.std::__1::pair.124"* [ %164, %162 ], [ %15, %100 ]
  %167 = phi i64 [ %163, %162 ], [ %107, %100 ]
  store i64 %105, i64* %93, align 8
  %168 = bitcast %"struct.std::__1::pair.124"** %11 to i64*
  store i64 %107, i64* %168, align 8
  %169 = bitcast %"struct.std::__1::pair.124"** %3 to i64*
  store i64 %167, i64* %169, align 8
  store i64 %109, i64* %92, align 8
  %170 = icmp eq %"struct.std::__1::pair.124"* %166, null
  %171 = inttoptr i64 %167 to i8*
  br i1 %170, label %176, label %172

172:                                              ; preds = %165
  %173 = bitcast %"struct.std::__1::pair.124"* %166 to i8*
  tail call void @_ZdlPv(i8* %173) #18
  %174 = bitcast %"struct.std::__1::pair.124"** %3 to i8**
  %175 = load i8*, i8** %174, align 8
  br label %176

176:                                              ; preds = %172, %165, %86, %2
  %177 = phi i8* [ %175, %172 ], [ %171, %165 ], [ %90, %86 ], [ %9, %2 ]
  %178 = bitcast %"struct.std::__1::pair.124"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %177, i8* align 8 %178, i64 16, i1 false) #17
  %179 = load %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"** %3, align 8
  %180 = getelementptr inbounds %"struct.std::__1::pair.124", %"struct.std::__1::pair.124"* %179, i64 1
  store %"struct.std::__1::pair.124"* %180, %"struct.std::__1::pair.124"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.114"* @_ZNSt3__16vectorINS_4pairImN3gfx4Font6WeightEEENS_9allocatorIS5_EEE6insertENS_11__wrap_iterIPKS5_EEOS5_(%"class.std::__1::vector.112"*, %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::pair.114"* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.330", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.112", %"class.std::__1::vector.112"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.112", %"class.std::__1::vector.112"* %0, i64 0, i32 0, i32 1
  %8 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.112", %"class.std::__1::vector.112"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %9, align 8
  %11 = icmp ult %"struct.std::__1::pair.114"* %8, %10
  %12 = ptrtoint %"struct.std::__1::pair.114"* %8 to i64
  %13 = ptrtoint %"struct.std::__1::pair.114"* %10 to i64
  br i1 %11, label %14, label %143

14:                                               ; preds = %3
  %15 = icmp eq %"struct.std::__1::pair.114"* %8, %1
  br i1 %15, label %16, label %22

16:                                               ; preds = %14
  %17 = bitcast %"struct.std::__1::pair.114"* %1 to i8*
  %18 = bitcast %"struct.std::__1::pair.114"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 16, i1 false) #17
  %19 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %1, i64 1
  %20 = ptrtoint %"struct.std::__1::pair.114"* %19 to i64
  %21 = bitcast %"struct.std::__1::pair.114"** %7 to i64*
  store i64 %20, i64* %21, align 8
  br label %294

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %1, i64 1
  %24 = ptrtoint %"struct.std::__1::pair.114"* %23 to i64
  %25 = sub i64 %12, %24
  %26 = ashr exact i64 %25, 4
  %27 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %1, i64 %26
  %28 = bitcast %"struct.std::__1::pair.114"** %7 to i64*
  %29 = icmp ult %"struct.std::__1::pair.114"* %27, %8
  br i1 %29, label %30, label %59

30:                                               ; preds = %22
  %31 = sub nsw i64 0, %26
  %32 = getelementptr %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %8, i64 %31, i32 0
  %33 = bitcast i64* %32 to i8*
  %34 = xor i64 %4, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = ptrtoint i8* %35 to i64
  %37 = lshr i64 %36, 4
  %38 = add nuw nsw i64 %37, 1
  %39 = and i64 %38, 3
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %30, %41
  %42 = phi %"struct.std::__1::pair.114"* [ %48, %41 ], [ %8, %30 ]
  %43 = phi %"struct.std::__1::pair.114"* [ %47, %41 ], [ %27, %30 ]
  %44 = phi i64 [ %49, %41 ], [ %39, %30 ]
  %45 = bitcast %"struct.std::__1::pair.114"* %42 to i8*
  %46 = bitcast %"struct.std::__1::pair.114"* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 16, i1 false) #17
  %47 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %43, i64 1
  %48 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %42, i64 1
  %49 = add i64 %44, -1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %41, !llvm.loop !269

51:                                               ; preds = %41, %30
  %52 = phi %"struct.std::__1::pair.114"* [ %8, %30 ], [ %48, %41 ]
  %53 = phi %"struct.std::__1::pair.114"* [ %27, %30 ], [ %47, %41 ]
  %54 = phi %"struct.std::__1::pair.114"* [ undef, %30 ], [ %48, %41 ]
  %55 = icmp ult i8* %35, inttoptr (i64 48 to i8*)
  br i1 %55, label %56, label %116

56:                                               ; preds = %116, %51
  %57 = phi %"struct.std::__1::pair.114"* [ %54, %51 ], [ %134, %116 ]
  %58 = ptrtoint %"struct.std::__1::pair.114"* %57 to i64
  br label %59

59:                                               ; preds = %56, %22
  %60 = phi i64 [ %58, %56 ], [ %12, %22 ]
  store i64 %60, i64* %28, align 8
  %61 = icmp eq i64 %25, 0
  br i1 %61, label %136, label %62

62:                                               ; preds = %59
  %63 = add i64 %25, -16
  %64 = lshr i64 %63, 4
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 3
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %82, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.std::__1::pair.114"* [ %73, %68 ], [ %8, %62 ]
  %70 = phi %"struct.std::__1::pair.114"* [ %72, %68 ], [ %27, %62 ]
  %71 = phi i64 [ %80, %68 ], [ %66, %62 ]
  %72 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %70, i64 -1
  %73 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %69, i64 -1
  %74 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %72, i64 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %73, i64 0, i32 0
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %70, i64 -1, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %69, i64 -1, i32 1
  store i32 %78, i32* %79, align 8
  %80 = add i64 %71, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %68, !llvm.loop !270

82:                                               ; preds = %68, %62
  %83 = phi %"struct.std::__1::pair.114"* [ %8, %62 ], [ %73, %68 ]
  %84 = phi %"struct.std::__1::pair.114"* [ %27, %62 ], [ %72, %68 ]
  %85 = icmp ult i64 %63, 48
  br i1 %85, label %136, label %86

86:                                               ; preds = %82, %86
  %87 = phi %"struct.std::__1::pair.114"* [ %108, %86 ], [ %83, %82 ]
  %88 = phi %"struct.std::__1::pair.114"* [ %107, %86 ], [ %84, %82 ]
  %89 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %88, i64 -1, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %87, i64 -1, i32 0
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %88, i64 -1, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %87, i64 -1, i32 1
  store i32 %93, i32* %94, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %88, i64 -2, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %87, i64 -2, i32 0
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %88, i64 -2, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %87, i64 -2, i32 1
  store i32 %99, i32* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %88, i64 -3, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %87, i64 -3, i32 0
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %88, i64 -3, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %87, i64 -3, i32 1
  store i32 %105, i32* %106, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %88, i64 -4
  %108 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %87, i64 -4
  %109 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %107, i64 0, i32 0
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %108, i64 0, i32 0
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %88, i64 -4, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %87, i64 -4, i32 1
  store i32 %113, i32* %114, align 8
  %115 = icmp eq %"struct.std::__1::pair.114"* %107, %1
  br i1 %115, label %136, label %86

116:                                              ; preds = %51, %116
  %117 = phi %"struct.std::__1::pair.114"* [ %134, %116 ], [ %52, %51 ]
  %118 = phi %"struct.std::__1::pair.114"* [ %133, %116 ], [ %53, %51 ]
  %119 = bitcast %"struct.std::__1::pair.114"* %117 to i8*
  %120 = bitcast %"struct.std::__1::pair.114"* %118 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 16, i1 false) #17
  %121 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %118, i64 1
  %122 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %117, i64 1
  %123 = bitcast %"struct.std::__1::pair.114"* %122 to i8*
  %124 = bitcast %"struct.std::__1::pair.114"* %121 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %123, i8* align 8 %124, i64 16, i1 false) #17
  %125 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %118, i64 2
  %126 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %117, i64 2
  %127 = bitcast %"struct.std::__1::pair.114"* %126 to i8*
  %128 = bitcast %"struct.std::__1::pair.114"* %125 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* align 8 %128, i64 16, i1 false) #17
  %129 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %118, i64 3
  %130 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %117, i64 3
  %131 = bitcast %"struct.std::__1::pair.114"* %130 to i8*
  %132 = bitcast %"struct.std::__1::pair.114"* %129 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 16, i1 false) #17
  %133 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %118, i64 4
  %134 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %117, i64 4
  %135 = icmp ult %"struct.std::__1::pair.114"* %133, %8
  br i1 %135, label %116, label %56

136:                                              ; preds = %82, %86, %59
  %137 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %2, i64 0, i32 0
  %138 = load i64, i64* %137, align 8
  %139 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %1, i64 0, i32 0
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %2, i64 0, i32 1
  %141 = load i32, i32* %140, align 4
  %142 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %1, i64 0, i32 1
  store i32 %141, i32* %142, align 8
  br label %294

143:                                              ; preds = %3
  %144 = getelementptr inbounds %"class.std::__1::vector.112", %"class.std::__1::vector.112"* %0, i64 0, i32 0, i32 2
  %145 = bitcast %"struct.std::__1::__split_buffer.330"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %145) #17
  %146 = getelementptr inbounds %"struct.std::__1::__split_buffer.330", %"struct.std::__1::__split_buffer.330"* %5, i64 0, i32 0
  %147 = getelementptr inbounds %"struct.std::__1::__split_buffer.330", %"struct.std::__1::__split_buffer.330"* %5, i64 0, i32 1
  %148 = getelementptr inbounds %"struct.std::__1::__split_buffer.330", %"struct.std::__1::__split_buffer.330"* %5, i64 0, i32 2
  %149 = getelementptr inbounds %"struct.std::__1::__split_buffer.330", %"struct.std::__1::__split_buffer.330"* %5, i64 0, i32 3, i32 0, i32 0
  %150 = getelementptr inbounds %"struct.std::__1::__split_buffer.330", %"struct.std::__1::__split_buffer.330"* %5, i64 0, i32 3, i32 1, i32 0
  %151 = bitcast %"struct.std::__1::pair.114"** %7 to i64*
  %152 = bitcast %"class.std::__1::vector.112"* %0 to i64*
  %153 = bitcast %"struct.std::__1::__split_buffer.330"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %153, i8 -86, i64 40, i1 false)
  %154 = load i64, i64* %152, align 8
  %155 = sub i64 %12, %154
  %156 = ashr exact i64 %155, 4
  %157 = add nsw i64 %156, 1
  %158 = icmp ugt i64 %157, 1152921504606846975
  br i1 %158, label %159, label %161

159:                                              ; preds = %143
  %160 = bitcast %"class.std::__1::vector.112"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %160) #19
  unreachable

161:                                              ; preds = %143
  %162 = bitcast %"struct.std::__1::pair.114"** %9 to i64*
  %163 = sub i64 %13, %154
  %164 = ashr exact i64 %163, 4
  %165 = icmp ult i64 %164, 576460752303423487
  br i1 %165, label %170, label %166

166:                                              ; preds = %161
  %167 = sub i64 %4, %154
  %168 = ashr exact i64 %167, 4
  store %"struct.std::__1::pair.114"* null, %"struct.std::__1::pair.114"** %149, align 8
  %169 = bitcast %"class.std::__1::allocator.119"** %150 to %"class.std::__1::__compressed_pair.116"**
  store %"class.std::__1::__compressed_pair.116"* %144, %"class.std::__1::__compressed_pair.116"** %169, align 8
  br label %181

170:                                              ; preds = %161
  %171 = ashr exact i64 %163, 3
  %172 = icmp ult i64 %171, %157
  %173 = select i1 %172, i64 %157, i64 %171
  %174 = sub i64 %4, %154
  %175 = ashr exact i64 %174, 4
  store %"struct.std::__1::pair.114"* null, %"struct.std::__1::pair.114"** %149, align 8
  %176 = bitcast %"class.std::__1::allocator.119"** %150 to %"class.std::__1::__compressed_pair.116"**
  store %"class.std::__1::__compressed_pair.116"* %144, %"class.std::__1::__compressed_pair.116"** %176, align 8
  %177 = icmp eq i64 %173, 0
  br i1 %177, label %187, label %178

178:                                              ; preds = %170
  %179 = icmp ugt i64 %173, 1152921504606846975
  br i1 %179, label %180, label %181

180:                                              ; preds = %178
  tail call void @abort() #19
  unreachable

181:                                              ; preds = %166, %178
  %182 = phi i64 [ 1152921504606846975, %166 ], [ %173, %178 ]
  %183 = phi i64 [ %168, %166 ], [ %175, %178 ]
  %184 = shl i64 %182, 4
  %185 = tail call i8* @_Znwm(i64 %184) #18
  %186 = bitcast i8* %185 to %"struct.std::__1::pair.114"*
  br label %187

187:                                              ; preds = %170, %181
  %188 = phi i64 [ %183, %181 ], [ %175, %170 ]
  %189 = phi i64 [ %182, %181 ], [ 0, %170 ]
  %190 = phi %"struct.std::__1::pair.114"* [ %186, %181 ], [ null, %170 ]
  store %"struct.std::__1::pair.114"* %190, %"struct.std::__1::pair.114"** %146, align 8
  %191 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %190, i64 %188
  store %"struct.std::__1::pair.114"* %191, %"struct.std::__1::pair.114"** %148, align 8
  store %"struct.std::__1::pair.114"* %191, %"struct.std::__1::pair.114"** %147, align 8
  %192 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %190, i64 %189
  store %"struct.std::__1::pair.114"* %192, %"struct.std::__1::pair.114"** %149, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairImN3gfx4Font6WeightEEERNS_9allocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer.330"* nonnull %5, %"struct.std::__1::pair.114"* dereferenceable(16) %2)
  %193 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %147, align 8
  %194 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %6, align 8
  %195 = ptrtoint %"struct.std::__1::pair.114"* %194 to i64
  %196 = sub i64 %4, %195
  %197 = ashr exact i64 %196, 4
  %198 = sub nsw i64 0, %197
  %199 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %193, i64 %198
  store %"struct.std::__1::pair.114"* %199, %"struct.std::__1::pair.114"** %147, align 8
  %200 = icmp sgt i64 %196, 0
  br i1 %200, label %201, label %204

201:                                              ; preds = %187
  %202 = bitcast %"struct.std::__1::pair.114"* %199 to i8*
  %203 = bitcast %"struct.std::__1::pair.114"* %194 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %202, i8* align 8 %203, i64 %196, i1 false) #17
  br label %204

204:                                              ; preds = %201, %187
  %205 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %7, align 8
  %206 = icmp eq %"struct.std::__1::pair.114"* %205, %1
  br i1 %206, label %207, label %211

207:                                              ; preds = %204
  %208 = ptrtoint %"struct.std::__1::pair.114"* %205 to i64
  %209 = bitcast %"struct.std::__1::pair.114"** %148 to i64*
  %210 = load i64, i64* %209, align 8
  br label %268

211:                                              ; preds = %204
  %212 = bitcast %"struct.std::__1::pair.114"** %148 to i8**
  %213 = load i8*, i8** %212, align 8
  %214 = getelementptr %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %205, i64 -1, i32 0
  %215 = ptrtoint i64* %214 to i64
  %216 = sub i64 %215, %4
  %217 = lshr i64 %216, 4
  %218 = add nuw nsw i64 %217, 1
  %219 = and i64 %218, 3
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %234, label %221

221:                                              ; preds = %211, %221
  %222 = phi i8* [ %229, %221 ], [ %213, %211 ]
  %223 = phi %"struct.std::__1::pair.114"* [ %226, %221 ], [ %1, %211 ]
  %224 = phi i64 [ %230, %221 ], [ %219, %211 ]
  %225 = bitcast %"struct.std::__1::pair.114"* %223 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* align 8 %225, i64 16, i1 false) #17
  %226 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %223, i64 1
  %227 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %148, align 8
  %228 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %227, i64 1
  store %"struct.std::__1::pair.114"* %228, %"struct.std::__1::pair.114"** %148, align 8
  %229 = bitcast %"struct.std::__1::pair.114"* %228 to i8*
  %230 = add i64 %224, -1
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %232, label %221, !llvm.loop !271

232:                                              ; preds = %221
  %233 = bitcast %"struct.std::__1::pair.114"* %228 to i8*
  br label %234

234:                                              ; preds = %211, %232
  %235 = phi %"struct.std::__1::pair.114"* [ undef, %211 ], [ %228, %232 ]
  %236 = phi i8* [ %213, %211 ], [ %233, %232 ]
  %237 = phi %"struct.std::__1::pair.114"* [ %1, %211 ], [ %226, %232 ]
  %238 = icmp ult i64 %216, 48
  br i1 %238, label %263, label %239

239:                                              ; preds = %234, %239
  %240 = phi i8* [ %262, %239 ], [ %236, %234 ]
  %241 = phi %"struct.std::__1::pair.114"* [ %258, %239 ], [ %237, %234 ]
  %242 = bitcast %"struct.std::__1::pair.114"* %241 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %240, i8* align 8 %242, i64 16, i1 false) #17
  %243 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %241, i64 1
  %244 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %148, align 8
  %245 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %244, i64 1
  store %"struct.std::__1::pair.114"* %245, %"struct.std::__1::pair.114"** %148, align 8
  %246 = bitcast %"struct.std::__1::pair.114"* %245 to i8*
  %247 = bitcast %"struct.std::__1::pair.114"* %243 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %246, i8* align 8 %247, i64 16, i1 false) #17
  %248 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %241, i64 2
  %249 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %148, align 8
  %250 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %249, i64 1
  store %"struct.std::__1::pair.114"* %250, %"struct.std::__1::pair.114"** %148, align 8
  %251 = bitcast %"struct.std::__1::pair.114"* %250 to i8*
  %252 = bitcast %"struct.std::__1::pair.114"* %248 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %251, i8* align 8 %252, i64 16, i1 false) #17
  %253 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %241, i64 3
  %254 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %148, align 8
  %255 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %254, i64 1
  store %"struct.std::__1::pair.114"* %255, %"struct.std::__1::pair.114"** %148, align 8
  %256 = bitcast %"struct.std::__1::pair.114"* %255 to i8*
  %257 = bitcast %"struct.std::__1::pair.114"* %253 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %256, i8* align 8 %257, i64 16, i1 false) #17
  %258 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %241, i64 4
  %259 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %148, align 8
  %260 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %259, i64 1
  store %"struct.std::__1::pair.114"* %260, %"struct.std::__1::pair.114"** %148, align 8
  %261 = icmp eq %"struct.std::__1::pair.114"* %258, %205
  %262 = bitcast %"struct.std::__1::pair.114"* %260 to i8*
  br i1 %261, label %263, label %239

263:                                              ; preds = %239, %234
  %264 = phi %"struct.std::__1::pair.114"* [ %235, %234 ], [ %260, %239 ]
  %265 = ptrtoint %"struct.std::__1::pair.114"* %264 to i64
  %266 = load i64, i64* %151, align 8
  %267 = bitcast %"struct.std::__1::pair.114"** %148 to i64*
  br label %268

268:                                              ; preds = %207, %263
  %269 = phi i64* [ %209, %207 ], [ %267, %263 ]
  %270 = phi i64 [ %210, %207 ], [ %265, %263 ]
  %271 = phi i64 [ %208, %207 ], [ %266, %263 ]
  %272 = load i64, i64* %152, align 8
  %273 = bitcast %"struct.std::__1::pair.114"** %147 to i64*
  %274 = load i64, i64* %273, align 8
  store i64 %274, i64* %152, align 8
  store i64 %272, i64* %273, align 8
  store i64 %270, i64* %151, align 8
  store i64 %271, i64* %269, align 8
  %275 = load i64, i64* %162, align 8
  %276 = bitcast %"struct.std::__1::pair.114"** %149 to i64*
  %277 = load i64, i64* %276, align 8
  store i64 %277, i64* %162, align 8
  store i64 %275, i64* %276, align 8
  %278 = bitcast %"struct.std::__1::__split_buffer.330"* %5 to i64*
  store i64 %272, i64* %278, align 8
  %279 = inttoptr i64 %272 to %"struct.std::__1::pair.114"*
  %280 = inttoptr i64 %271 to %"struct.std::__1::pair.114"*
  %281 = icmp eq %"struct.std::__1::pair.114"* %280, %279
  br i1 %281, label %289, label %282

282:                                              ; preds = %268
  %283 = getelementptr %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %280, i64 -1, i32 0
  %284 = ptrtoint i64* %283 to i64
  %285 = sub i64 %284, %272
  %286 = lshr i64 %285, 4
  %287 = xor i64 %286, -1
  %288 = getelementptr %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %280, i64 %287
  store %"struct.std::__1::pair.114"* %288, %"struct.std::__1::pair.114"** %148, align 8
  br label %289

289:                                              ; preds = %282, %268
  %290 = icmp eq i64 %272, 0
  br i1 %290, label %293, label %291

291:                                              ; preds = %289
  %292 = inttoptr i64 %272 to i8*
  call void @_ZdlPv(i8* %292) #18
  br label %293

293:                                              ; preds = %289, %291
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %145) #17
  br label %294

294:                                              ; preds = %16, %136, %293
  %295 = phi %"struct.std::__1::pair.114"* [ %1, %16 ], [ %1, %136 ], [ %193, %293 ]
  ret %"struct.std::__1::pair.114"* %295
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairImN3gfx4Font6WeightEEERNS_9allocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer.330"*, %"struct.std::__1::pair.114"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.330", %"struct.std::__1::__split_buffer.330"* %0, i64 0, i32 2
  %4 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.330", %"struct.std::__1::__split_buffer.330"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.114"* %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.114"* %6 to i64
  %9 = bitcast %"struct.std::__1::pair.114"* %4 to i8*
  br i1 %7, label %10, label %176

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.330", %"struct.std::__1::__split_buffer.330"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %11, align 8
  %13 = ptrtoint %"struct.std::__1::pair.114"* %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.330", %"struct.std::__1::__split_buffer.330"* %0, i64 0, i32 0
  %15 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %14, align 8
  %16 = icmp ugt %"struct.std::__1::pair.114"* %12, %15
  %17 = ptrtoint %"struct.std::__1::pair.114"* %15 to i64
  br i1 %16, label %18, label %91

18:                                               ; preds = %10
  %19 = ptrtoint %"struct.std::__1::pair.114"* %12 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 4
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %12, i64 %23
  %25 = icmp eq %"struct.std::__1::pair.114"* %12, %4
  br i1 %25, label %86, label %26

26:                                               ; preds = %18
  %27 = getelementptr %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %4, i64 -1, i32 0
  %28 = ptrtoint i64* %27 to i64
  %29 = sub i64 %28, %13
  %30 = lshr i64 %29, 4
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 3
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %48, label %34

34:                                               ; preds = %26, %34
  %35 = phi %"struct.std::__1::pair.114"* [ %45, %34 ], [ %24, %26 ]
  %36 = phi %"struct.std::__1::pair.114"* [ %44, %34 ], [ %12, %26 ]
  %37 = phi i64 [ %46, %34 ], [ %32, %26 ]
  %38 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %36, i64 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %35, i64 0, i32 0
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %36, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %35, i64 0, i32 1
  store i32 %42, i32* %43, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %36, i64 1
  %45 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %35, i64 1
  %46 = add i64 %37, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %34, !llvm.loop !272

48:                                               ; preds = %34, %26
  %49 = phi %"struct.std::__1::pair.114"* [ undef, %26 ], [ %45, %34 ]
  %50 = phi %"struct.std::__1::pair.114"* [ %24, %26 ], [ %45, %34 ]
  %51 = phi %"struct.std::__1::pair.114"* [ %12, %26 ], [ %44, %34 ]
  %52 = icmp ult i64 %29, 48
  br i1 %52, label %83, label %53

53:                                               ; preds = %48, %53
  %54 = phi %"struct.std::__1::pair.114"* [ %81, %53 ], [ %50, %48 ]
  %55 = phi %"struct.std::__1::pair.114"* [ %80, %53 ], [ %51, %48 ]
  %56 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %55, i64 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %54, i64 0, i32 0
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %55, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %54, i64 0, i32 1
  store i32 %60, i32* %61, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %55, i64 1, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %54, i64 1, i32 0
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %55, i64 1, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %54, i64 1, i32 1
  store i32 %66, i32* %67, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %55, i64 2, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %54, i64 2, i32 0
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %55, i64 2, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %54, i64 2, i32 1
  store i32 %72, i32* %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %55, i64 3, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %54, i64 3, i32 0
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %55, i64 3, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %54, i64 3, i32 1
  store i32 %78, i32* %79, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %55, i64 4
  %81 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %54, i64 4
  %82 = icmp eq %"struct.std::__1::pair.114"* %80, %4
  br i1 %82, label %83, label %53

83:                                               ; preds = %53, %48
  %84 = phi %"struct.std::__1::pair.114"* [ %49, %48 ], [ %81, %53 ]
  %85 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %11, align 8
  br label %86

86:                                               ; preds = %83, %18
  %87 = phi %"struct.std::__1::pair.114"* [ %4, %18 ], [ %85, %83 ]
  %88 = phi %"struct.std::__1::pair.114"* [ %24, %18 ], [ %84, %83 ]
  store %"struct.std::__1::pair.114"* %88, %"struct.std::__1::pair.114"** %3, align 8
  %89 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %87, i64 %23
  store %"struct.std::__1::pair.114"* %89, %"struct.std::__1::pair.114"** %11, align 8
  %90 = bitcast %"struct.std::__1::pair.114"* %88 to i8*
  br label %176

91:                                               ; preds = %10
  %92 = bitcast %"struct.std::__1::pair.114"** %5 to i64*
  %93 = bitcast %"struct.std::__1::__split_buffer.330"* %0 to i64*
  %94 = sub i64 %8, %17
  %95 = ashr exact i64 %94, 3
  %96 = icmp eq i64 %94, 0
  %97 = select i1 %96, i64 1, i64 %95
  %98 = icmp ugt i64 %97, 1152921504606846975
  br i1 %98, label %99, label %100

99:                                               ; preds = %91
  tail call void @abort() #19
  unreachable

100:                                              ; preds = %91
  %101 = lshr i64 %97, 2
  %102 = shl i64 %97, 4
  %103 = tail call i8* @_Znwm(i64 %102) #18
  %104 = bitcast i8* %103 to %"struct.std::__1::pair.114"*
  %105 = ptrtoint i8* %103 to i64
  %106 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %104, i64 %101
  %107 = ptrtoint %"struct.std::__1::pair.114"* %106 to i64
  %108 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %104, i64 %97
  %109 = ptrtoint %"struct.std::__1::pair.114"* %108 to i64
  %110 = ptrtoint %"struct.std::__1::pair.114"* %4 to i64
  %111 = sub i64 %110, %13
  %112 = ashr exact i64 %111, 4
  %113 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %106, i64 %112
  %114 = icmp eq i64 %111, 0
  br i1 %114, label %165, label %115

115:                                              ; preds = %100
  %116 = add i64 %111, -16
  %117 = lshr i64 %116, 4
  %118 = add nuw nsw i64 %117, 1
  %119 = and i64 %118, 3
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %135, label %121

121:                                              ; preds = %115, %121
  %122 = phi %"struct.std::__1::pair.114"* [ %128, %121 ], [ %106, %115 ]
  %123 = phi i64 [ %129, %121 ], [ %107, %115 ]
  %124 = phi %"struct.std::__1::pair.114"* [ %130, %121 ], [ %12, %115 ]
  %125 = phi i64 [ %131, %121 ], [ %119, %115 ]
  %126 = inttoptr i64 %123 to i8*
  %127 = bitcast %"struct.std::__1::pair.114"* %124 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* align 8 %127, i64 16, i1 false) #17
  %128 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %122, i64 1
  %129 = ptrtoint %"struct.std::__1::pair.114"* %128 to i64
  %130 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %124, i64 1
  %131 = add i64 %125, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %121, !llvm.loop !273

133:                                              ; preds = %121
  %134 = ptrtoint %"struct.std::__1::pair.114"* %128 to i64
  br label %135

135:                                              ; preds = %115, %133
  %136 = phi %"struct.std::__1::pair.114"* [ %106, %115 ], [ %128, %133 ]
  %137 = phi i64 [ %107, %115 ], [ %134, %133 ]
  %138 = phi %"struct.std::__1::pair.114"* [ %12, %115 ], [ %130, %133 ]
  %139 = icmp ult i64 %116, 48
  br i1 %139, label %162, label %140

140:                                              ; preds = %135, %140
  %141 = phi %"struct.std::__1::pair.114"* [ %158, %140 ], [ %136, %135 ]
  %142 = phi i64 [ %159, %140 ], [ %137, %135 ]
  %143 = phi %"struct.std::__1::pair.114"* [ %160, %140 ], [ %138, %135 ]
  %144 = inttoptr i64 %142 to i8*
  %145 = bitcast %"struct.std::__1::pair.114"* %143 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 8 %145, i64 16, i1 false) #17
  %146 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %141, i64 1
  %147 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %143, i64 1
  %148 = bitcast %"struct.std::__1::pair.114"* %146 to i8*
  %149 = bitcast %"struct.std::__1::pair.114"* %147 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %148, i8* align 8 %149, i64 16, i1 false) #17
  %150 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %141, i64 2
  %151 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %143, i64 2
  %152 = bitcast %"struct.std::__1::pair.114"* %150 to i8*
  %153 = bitcast %"struct.std::__1::pair.114"* %151 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %153, i64 16, i1 false) #17
  %154 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %141, i64 3
  %155 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %143, i64 3
  %156 = bitcast %"struct.std::__1::pair.114"* %154 to i8*
  %157 = bitcast %"struct.std::__1::pair.114"* %155 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %156, i8* align 8 %157, i64 16, i1 false) #17
  %158 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %141, i64 4
  %159 = ptrtoint %"struct.std::__1::pair.114"* %158 to i64
  %160 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %143, i64 4
  %161 = icmp eq %"struct.std::__1::pair.114"* %113, %158
  br i1 %161, label %162, label %140

162:                                              ; preds = %140, %135
  %163 = ptrtoint %"struct.std::__1::pair.114"* %113 to i64
  %164 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %14, align 8
  br label %165

165:                                              ; preds = %100, %162
  %166 = phi %"struct.std::__1::pair.114"* [ %164, %162 ], [ %15, %100 ]
  %167 = phi i64 [ %163, %162 ], [ %107, %100 ]
  store i64 %105, i64* %93, align 8
  %168 = bitcast %"struct.std::__1::pair.114"** %11 to i64*
  store i64 %107, i64* %168, align 8
  %169 = bitcast %"struct.std::__1::pair.114"** %3 to i64*
  store i64 %167, i64* %169, align 8
  store i64 %109, i64* %92, align 8
  %170 = icmp eq %"struct.std::__1::pair.114"* %166, null
  %171 = inttoptr i64 %167 to i8*
  br i1 %170, label %176, label %172

172:                                              ; preds = %165
  %173 = bitcast %"struct.std::__1::pair.114"* %166 to i8*
  tail call void @_ZdlPv(i8* %173) #18
  %174 = bitcast %"struct.std::__1::pair.114"** %3 to i8**
  %175 = load i8*, i8** %174, align 8
  br label %176

176:                                              ; preds = %172, %165, %86, %2
  %177 = phi i8* [ %175, %172 ], [ %171, %165 ], [ %90, %86 ], [ %9, %2 ]
  %178 = bitcast %"struct.std::__1::pair.114"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %177, i8* align 8 %178, i64 16, i1 false) #17
  %179 = load %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"** %3, align 8
  %180 = getelementptr inbounds %"struct.std::__1::pair.114", %"struct.std::__1::pair.114"* %179, i64 1
  store %"struct.std::__1::pair.114"* %180, %"struct.std::__1::pair.114"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gfx5RangeENS_9allocatorIS2_EEE6assignIPKS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector.157"*, %"class.gfx::Range"*, %"class.gfx::Range"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.gfx::Range"* %2 to i64
  %5 = ptrtoint %"class.gfx::Range"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector.157", %"class.std::__1::vector.157"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.gfx::Range"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.157"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.gfx::Range"*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.157", %"class.std::__1::vector.157"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.gfx::Range"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %1, i64 %22
  %25 = select i1 %23, %"class.gfx::Range"* %24, %"class.gfx::Range"* %2
  %26 = ptrtoint %"class.gfx::Range"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"class.gfx::Range"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #17
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %"class.gfx::Range"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #17
  %42 = inttoptr i64 %35 to %"class.gfx::Range"*
  %43 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %42, i64 %39
  %44 = ptrtoint %"class.gfx::Range"* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %16, i64 %28
  store %"class.gfx::Range"* %48, %"class.gfx::Range"** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.157", %"class.std::__1::vector.157"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"class.gfx::Range"** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #18
  %55 = bitcast %"class.std::__1::vector.157"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #17
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.157"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #19
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.157"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #19
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #18
  %75 = bitcast i8* %74 to %"class.gfx::Range"*
  %76 = getelementptr inbounds %"class.std::__1::vector.157", %"class.std::__1::vector.157"* %0, i64 0, i32 0, i32 1
  %77 = bitcast %"class.gfx::Range"** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.157"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %75, i64 %72
  store %"class.gfx::Range"* %79, %"class.gfx::Range"** %8, align 8
  %80 = bitcast %"class.gfx::Range"** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = bitcast %"class.gfx::Range"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #17
  %86 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %75, i64 %84
  %87 = ptrtoint %"class.gfx::Range"* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator.154"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = icmp ult i64 %13, %2
  br i1 %14, label %15, label %17

15:                                               ; preds = %5
  %16 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %16) #19
  unreachable

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %21 = select i1 %9, i16* %19, i16* %20
  %22 = getelementptr inbounds i16, i16* %21, i64 %2
  %23 = sub i64 %13, %2
  %24 = icmp ult i64 %23, %3
  %25 = select i1 %24, i64 %23, i64 %3
  %26 = icmp ugt i64 %25, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %17
  %28 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #19
  unreachable

29:                                               ; preds = %17
  %30 = icmp ult i64 %25, 11
  br i1 %30, label %44, label %31

31:                                               ; preds = %29
  %32 = add nuw nsw i64 %25, 8
  %33 = and i64 %32, -8
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @abort() #19
  unreachable

36:                                               ; preds = %31
  %37 = shl i64 %33, 1
  %38 = tail call i8* @_Znwm(i64 %37) #18
  %39 = bitcast i8* %38 to i16*
  %40 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %38, i8** %40, align 8
  %41 = or i64 %33, -9223372036854775808
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %43, align 8
  br label %50

44:                                               ; preds = %29
  %45 = trunc i64 %25 to i8
  %46 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  store i8 %45, i8* %47, align 1
  %48 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %49 = icmp eq i64 %25, 0
  br i1 %49, label %195, label %50

50:                                               ; preds = %44, %36
  %51 = phi i16* [ %39, %36 ], [ %48, %44 ]
  %52 = icmp ult i64 %25, 16
  br i1 %52, label %142, label %53

53:                                               ; preds = %50
  %54 = getelementptr i16, i16* %51, i64 %25
  %55 = add i64 %25, %2
  %56 = getelementptr i16, i16* %21, i64 %55
  %57 = icmp ult i16* %51, %56
  %58 = icmp ult i16* %22, %54
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %53
  %61 = and i64 %25, -16
  %62 = sub i64 %25, %61
  %63 = getelementptr i16, i16* %22, i64 %61
  %64 = getelementptr i16, i16* %51, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %22, i64 %73
  %76 = getelementptr i16, i16* %51, i64 %73
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !274
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !274
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !277, !noalias !274
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !277, !noalias !274
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %22, i64 %85
  %87 = getelementptr i16, i16* %51, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !274
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !274
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !277, !noalias !274
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !277, !noalias !274
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %22, i64 %96
  %98 = getelementptr i16, i16* %51, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !274
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !274
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !277, !noalias !274
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !277, !noalias !274
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %22, i64 %107
  %109 = getelementptr i16, i16* %51, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !274
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !274
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !277, !noalias !274
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !277, !noalias !274
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !279

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %22, i64 %125
  %128 = getelementptr i16, i16* %51, i64 %125
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !274
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !274
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !277, !noalias !274
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !277, !noalias !274
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !280

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %25, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %53, %50
  %143 = phi i64 [ %25, %53 ], [ %25, %50 ], [ %62, %140 ]
  %144 = phi i16* [ %22, %53 ], [ %22, %50 ], [ %63, %140 ]
  %145 = phi i16* [ %51, %53 ], [ %51, %50 ], [ %64, %140 ]
  %146 = add i64 %143, -1
  %147 = and i64 %143, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i64 [ %155, %149 ], [ %143, %142 ]
  %151 = phi i16* [ %157, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %156, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %151, align 2
  store i16 %154, i16* %152, align 2
  %155 = add i64 %150, -1
  %156 = getelementptr inbounds i16, i16* %152, i64 1
  %157 = getelementptr inbounds i16, i16* %151, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !281

160:                                              ; preds = %149, %142
  %161 = phi i64 [ %143, %142 ], [ %155, %149 ]
  %162 = phi i16* [ %144, %142 ], [ %157, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %156, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i64 [ %191, %165 ], [ %161, %160 ]
  %167 = phi i16* [ %193, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %192, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %167, align 2
  store i16 %169, i16* %168, align 2
  %170 = getelementptr inbounds i16, i16* %168, i64 1
  %171 = getelementptr inbounds i16, i16* %167, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %168, i64 2
  %174 = getelementptr inbounds i16, i16* %167, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %168, i64 3
  %177 = getelementptr inbounds i16, i16* %167, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %168, i64 4
  %180 = getelementptr inbounds i16, i16* %167, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %168, i64 5
  %183 = getelementptr inbounds i16, i16* %167, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %168, i64 6
  %186 = getelementptr inbounds i16, i16* %167, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %168, i64 7
  %189 = getelementptr inbounds i16, i16* %167, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %166, -8
  %192 = getelementptr inbounds i16, i16* %168, i64 8
  %193 = getelementptr inbounds i16, i16* %167, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !282

195:                                              ; preds = %160, %165, %140, %44
  %196 = phi i16* [ %48, %44 ], [ %51, %140 ], [ %51, %165 ], [ %51, %160 ]
  %197 = getelementptr inbounds i16, i16* %196, i64 %25
  store i16 0, i16* %197, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %8 = sub i64 9223372036854775791, %1
  %9 = icmp ult i64 %8, %2
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %11) #19
  unreachable

12:                                               ; preds = %7
  %13 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  br label %22

20:                                               ; preds = %12
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i16* [ %19, %17 ], [ %21, %20 ]
  %24 = bitcast i16* %23 to i8*
  %25 = icmp ult i64 %1, 4611686018427387879
  br i1 %25, label %26, label %37

26:                                               ; preds = %22
  %27 = add i64 %2, %1
  %28 = shl i64 %1, 1
  %29 = icmp ult i64 %27, %28
  %30 = select i1 %29, i64 %28, i64 %27
  %31 = icmp ult i64 %30, 11
  br i1 %31, label %37, label %32

32:                                               ; preds = %26
  %33 = add i64 %30, 8
  %34 = and i64 %33, -8
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  tail call void @abort() #19
  unreachable

37:                                               ; preds = %22, %26, %32
  %38 = phi i64 [ %34, %32 ], [ 9223372036854775791, %22 ], [ 11, %26 ]
  %39 = shl i64 %38, 1
  %40 = tail call i8* @_Znwm(i64 %39) #18
  %41 = bitcast i8* %40 to i16*
  %42 = icmp eq i64 %4, 0
  br i1 %42, label %188, label %43

43:                                               ; preds = %37
  %44 = icmp ult i64 %4, 16
  br i1 %44, label %135, label %45

45:                                               ; preds = %43
  %46 = shl i64 %4, 1
  %47 = getelementptr i8, i8* %40, i64 %46
  %48 = getelementptr i16, i16* %23, i64 %4
  %49 = bitcast i16* %48 to i8*
  %50 = icmp ult i8* %40, %49
  %51 = icmp ugt i8* %47, %24
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %45
  %54 = and i64 %4, -16
  %55 = sub i64 %4, %54
  %56 = getelementptr i16, i16* %23, i64 %54
  %57 = getelementptr i16, i16* %41, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %23, i64 %66
  %69 = getelementptr i16, i16* %41, i64 %66
  %70 = bitcast i16* %68 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !283
  %72 = getelementptr i16, i16* %68, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !283
  %75 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !286, !noalias !283
  %76 = getelementptr i16, i16* %69, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !286, !noalias !283
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %23, i64 %78
  %80 = getelementptr i16, i16* %41, i64 %78
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !283
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !283
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !286, !noalias !283
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !286, !noalias !283
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %23, i64 %89
  %91 = getelementptr i16, i16* %41, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !283
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !283
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !286, !noalias !283
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !286, !noalias !283
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %23, i64 %100
  %102 = getelementptr i16, i16* %41, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !283
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !283
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !286, !noalias !283
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !286, !noalias !283
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !288

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %23, i64 %118
  %121 = getelementptr i16, i16* %41, i64 %118
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !283
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !283
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !286, !noalias !283
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !286, !noalias !283
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !289

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %54, %4
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %45, %43
  %136 = phi i64 [ %4, %45 ], [ %4, %43 ], [ %55, %133 ]
  %137 = phi i16* [ %23, %45 ], [ %23, %43 ], [ %56, %133 ]
  %138 = phi i16* [ %41, %45 ], [ %41, %43 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i16* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %144, align 2
  store i16 %147, i16* %145, align 2
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !290

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i16* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i16* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %185, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %160, align 2
  store i16 %162, i16* %161, align 2
  %163 = getelementptr inbounds i16, i16* %161, i64 1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %161, i64 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %161, i64 3
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %161, i64 4
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %161, i64 5
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %161, i64 6
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %161, i64 7
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i16, i16* %161, i64 8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !291

188:                                              ; preds = %153, %158, %133, %37
  %189 = sub i64 %3, %5
  %190 = sub i64 %189, %4
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %347, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds i16, i16* %41, i64 %4
  %194 = getelementptr inbounds i16, i16* %193, i64 %6
  %195 = getelementptr inbounds i16, i16* %23, i64 %4
  %196 = getelementptr inbounds i16, i16* %195, i64 %5
  %197 = icmp ult i64 %190, 16
  br i1 %197, label %294, label %198

198:                                              ; preds = %192
  %199 = bitcast i16* %196 to i8*
  %200 = add i64 %6, %4
  %201 = shl i64 %200, 1
  %202 = getelementptr i8, i8* %40, i64 %201
  %203 = add i64 %6, %3
  %204 = sub i64 %203, %5
  %205 = shl i64 %204, 1
  %206 = getelementptr i8, i8* %40, i64 %205
  %207 = getelementptr i16, i16* %23, i64 %3
  %208 = bitcast i16* %207 to i8*
  %209 = icmp ult i8* %202, %208
  %210 = icmp ugt i8* %206, %199
  %211 = and i1 %209, %210
  br i1 %211, label %294, label %212

212:                                              ; preds = %198
  %213 = and i64 %190, -16
  %214 = sub i64 %190, %213
  %215 = getelementptr i16, i16* %196, i64 %213
  %216 = getelementptr i16, i16* %194, i64 %213
  %217 = add i64 %213, -16
  %218 = lshr exact i64 %217, 4
  %219 = add nuw nsw i64 %218, 1
  %220 = and i64 %219, 3
  %221 = icmp ult i64 %217, 48
  br i1 %221, label %273, label %222

222:                                              ; preds = %212
  %223 = sub nsw i64 %219, %220
  br label %224

224:                                              ; preds = %224, %222
  %225 = phi i64 [ 0, %222 ], [ %270, %224 ]
  %226 = phi i64 [ %223, %222 ], [ %271, %224 ]
  %227 = getelementptr i16, i16* %196, i64 %225
  %228 = getelementptr i16, i16* %194, i64 %225
  %229 = bitcast i16* %227 to <8 x i16>*
  %230 = load <8 x i16>, <8 x i16>* %229, align 2, !alias.scope !292
  %231 = getelementptr i16, i16* %227, i64 8
  %232 = bitcast i16* %231 to <8 x i16>*
  %233 = load <8 x i16>, <8 x i16>* %232, align 2, !alias.scope !292
  %234 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %230, <8 x i16>* %234, align 2, !alias.scope !295, !noalias !292
  %235 = getelementptr i16, i16* %228, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  store <8 x i16> %233, <8 x i16>* %236, align 2, !alias.scope !295, !noalias !292
  %237 = or i64 %225, 16
  %238 = getelementptr i16, i16* %196, i64 %237
  %239 = getelementptr i16, i16* %194, i64 %237
  %240 = bitcast i16* %238 to <8 x i16>*
  %241 = load <8 x i16>, <8 x i16>* %240, align 2, !alias.scope !292
  %242 = getelementptr i16, i16* %238, i64 8
  %243 = bitcast i16* %242 to <8 x i16>*
  %244 = load <8 x i16>, <8 x i16>* %243, align 2, !alias.scope !292
  %245 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %241, <8 x i16>* %245, align 2, !alias.scope !295, !noalias !292
  %246 = getelementptr i16, i16* %239, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  store <8 x i16> %244, <8 x i16>* %247, align 2, !alias.scope !295, !noalias !292
  %248 = or i64 %225, 32
  %249 = getelementptr i16, i16* %196, i64 %248
  %250 = getelementptr i16, i16* %194, i64 %248
  %251 = bitcast i16* %249 to <8 x i16>*
  %252 = load <8 x i16>, <8 x i16>* %251, align 2, !alias.scope !292
  %253 = getelementptr i16, i16* %249, i64 8
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !292
  %256 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %252, <8 x i16>* %256, align 2, !alias.scope !295, !noalias !292
  %257 = getelementptr i16, i16* %250, i64 8
  %258 = bitcast i16* %257 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %258, align 2, !alias.scope !295, !noalias !292
  %259 = or i64 %225, 48
  %260 = getelementptr i16, i16* %196, i64 %259
  %261 = getelementptr i16, i16* %194, i64 %259
  %262 = bitcast i16* %260 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !292
  %264 = getelementptr i16, i16* %260, i64 8
  %265 = bitcast i16* %264 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !292
  %267 = bitcast i16* %261 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %267, align 2, !alias.scope !295, !noalias !292
  %268 = getelementptr i16, i16* %261, i64 8
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %269, align 2, !alias.scope !295, !noalias !292
  %270 = add i64 %225, 64
  %271 = add i64 %226, -4
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %224, !llvm.loop !297

273:                                              ; preds = %224, %212
  %274 = phi i64 [ 0, %212 ], [ %270, %224 ]
  %275 = icmp eq i64 %220, 0
  br i1 %275, label %292, label %276

276:                                              ; preds = %273, %276
  %277 = phi i64 [ %289, %276 ], [ %274, %273 ]
  %278 = phi i64 [ %290, %276 ], [ %220, %273 ]
  %279 = getelementptr i16, i16* %196, i64 %277
  %280 = getelementptr i16, i16* %194, i64 %277
  %281 = bitcast i16* %279 to <8 x i16>*
  %282 = load <8 x i16>, <8 x i16>* %281, align 2, !alias.scope !292
  %283 = getelementptr i16, i16* %279, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !292
  %286 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %282, <8 x i16>* %286, align 2, !alias.scope !295, !noalias !292
  %287 = getelementptr i16, i16* %280, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %288, align 2, !alias.scope !295, !noalias !292
  %289 = add i64 %277, 16
  %290 = add i64 %278, -1
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %276, !llvm.loop !298

292:                                              ; preds = %276, %273
  %293 = icmp eq i64 %190, %213
  br i1 %293, label %347, label %294

294:                                              ; preds = %292, %198, %192
  %295 = phi i64 [ %190, %198 ], [ %190, %192 ], [ %214, %292 ]
  %296 = phi i16* [ %196, %198 ], [ %196, %192 ], [ %215, %292 ]
  %297 = phi i16* [ %194, %198 ], [ %194, %192 ], [ %216, %292 ]
  %298 = add i64 %295, -1
  %299 = and i64 %295, 7
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %312, label %301

301:                                              ; preds = %294, %301
  %302 = phi i64 [ %307, %301 ], [ %295, %294 ]
  %303 = phi i16* [ %309, %301 ], [ %296, %294 ]
  %304 = phi i16* [ %308, %301 ], [ %297, %294 ]
  %305 = phi i64 [ %310, %301 ], [ %299, %294 ]
  %306 = load i16, i16* %303, align 2
  store i16 %306, i16* %304, align 2
  %307 = add i64 %302, -1
  %308 = getelementptr inbounds i16, i16* %304, i64 1
  %309 = getelementptr inbounds i16, i16* %303, i64 1
  %310 = add i64 %305, -1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %301, !llvm.loop !299

312:                                              ; preds = %301, %294
  %313 = phi i64 [ %295, %294 ], [ %307, %301 ]
  %314 = phi i16* [ %296, %294 ], [ %309, %301 ]
  %315 = phi i16* [ %297, %294 ], [ %308, %301 ]
  %316 = icmp ult i64 %298, 7
  br i1 %316, label %347, label %317

317:                                              ; preds = %312, %317
  %318 = phi i64 [ %343, %317 ], [ %313, %312 ]
  %319 = phi i16* [ %345, %317 ], [ %314, %312 ]
  %320 = phi i16* [ %344, %317 ], [ %315, %312 ]
  %321 = load i16, i16* %319, align 2
  store i16 %321, i16* %320, align 2
  %322 = getelementptr inbounds i16, i16* %320, i64 1
  %323 = getelementptr inbounds i16, i16* %319, i64 1
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %320, i64 2
  %326 = getelementptr inbounds i16, i16* %319, i64 2
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %320, i64 3
  %329 = getelementptr inbounds i16, i16* %319, i64 3
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = getelementptr inbounds i16, i16* %320, i64 4
  %332 = getelementptr inbounds i16, i16* %319, i64 4
  %333 = load i16, i16* %332, align 2
  store i16 %333, i16* %331, align 2
  %334 = getelementptr inbounds i16, i16* %320, i64 5
  %335 = getelementptr inbounds i16, i16* %319, i64 5
  %336 = load i16, i16* %335, align 2
  store i16 %336, i16* %334, align 2
  %337 = getelementptr inbounds i16, i16* %320, i64 6
  %338 = getelementptr inbounds i16, i16* %319, i64 6
  %339 = load i16, i16* %338, align 2
  store i16 %339, i16* %337, align 2
  %340 = getelementptr inbounds i16, i16* %320, i64 7
  %341 = getelementptr inbounds i16, i16* %319, i64 7
  %342 = load i16, i16* %341, align 2
  store i16 %342, i16* %340, align 2
  %343 = add i64 %318, -8
  %344 = getelementptr inbounds i16, i16* %320, i64 8
  %345 = getelementptr inbounds i16, i16* %319, i64 8
  %346 = icmp eq i64 %343, 0
  br i1 %346, label %347, label %317, !llvm.loop !300

347:                                              ; preds = %312, %317, %292, %188
  %348 = icmp eq i64 %1, 10
  br i1 %348, label %350, label %349

349:                                              ; preds = %347
  tail call void @_ZdlPv(i8* %24) #18
  br label %350

350:                                              ; preds = %347, %349
  %351 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %40, i8** %351, align 8
  %352 = or i64 %38, -9223372036854775808
  %353 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %352, i64* %353, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.186"* @_ZNSt3__16vectorINS_4pairImmEENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EEOS2_(%"class.std::__1::vector.184"*, %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::pair.186"* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.350", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.184", %"class.std::__1::vector.184"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.184", %"class.std::__1::vector.184"* %0, i64 0, i32 0, i32 1
  %8 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.184", %"class.std::__1::vector.184"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %9, align 8
  %11 = icmp ult %"struct.std::__1::pair.186"* %8, %10
  %12 = ptrtoint %"struct.std::__1::pair.186"* %8 to i64
  %13 = ptrtoint %"struct.std::__1::pair.186"* %10 to i64
  br i1 %11, label %14, label %143

14:                                               ; preds = %3
  %15 = icmp eq %"struct.std::__1::pair.186"* %8, %1
  br i1 %15, label %16, label %22

16:                                               ; preds = %14
  %17 = bitcast %"struct.std::__1::pair.186"* %1 to i8*
  %18 = bitcast %"struct.std::__1::pair.186"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 16, i1 false) #17
  %19 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %1, i64 1
  %20 = ptrtoint %"struct.std::__1::pair.186"* %19 to i64
  %21 = bitcast %"struct.std::__1::pair.186"** %7 to i64*
  store i64 %20, i64* %21, align 8
  br label %294

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %1, i64 1
  %24 = ptrtoint %"struct.std::__1::pair.186"* %23 to i64
  %25 = sub i64 %12, %24
  %26 = ashr exact i64 %25, 4
  %27 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %1, i64 %26
  %28 = bitcast %"struct.std::__1::pair.186"** %7 to i64*
  %29 = icmp ult %"struct.std::__1::pair.186"* %27, %8
  br i1 %29, label %30, label %59

30:                                               ; preds = %22
  %31 = sub nsw i64 0, %26
  %32 = getelementptr %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %8, i64 %31, i32 0
  %33 = bitcast i64* %32 to i8*
  %34 = xor i64 %4, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = ptrtoint i8* %35 to i64
  %37 = lshr i64 %36, 4
  %38 = add nuw nsw i64 %37, 1
  %39 = and i64 %38, 3
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %30, %41
  %42 = phi %"struct.std::__1::pair.186"* [ %48, %41 ], [ %8, %30 ]
  %43 = phi %"struct.std::__1::pair.186"* [ %47, %41 ], [ %27, %30 ]
  %44 = phi i64 [ %49, %41 ], [ %39, %30 ]
  %45 = bitcast %"struct.std::__1::pair.186"* %42 to i8*
  %46 = bitcast %"struct.std::__1::pair.186"* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 16, i1 false) #17
  %47 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %43, i64 1
  %48 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %42, i64 1
  %49 = add i64 %44, -1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %41, !llvm.loop !301

51:                                               ; preds = %41, %30
  %52 = phi %"struct.std::__1::pair.186"* [ %8, %30 ], [ %48, %41 ]
  %53 = phi %"struct.std::__1::pair.186"* [ %27, %30 ], [ %47, %41 ]
  %54 = phi %"struct.std::__1::pair.186"* [ undef, %30 ], [ %48, %41 ]
  %55 = icmp ult i8* %35, inttoptr (i64 48 to i8*)
  br i1 %55, label %56, label %116

56:                                               ; preds = %116, %51
  %57 = phi %"struct.std::__1::pair.186"* [ %54, %51 ], [ %134, %116 ]
  %58 = ptrtoint %"struct.std::__1::pair.186"* %57 to i64
  br label %59

59:                                               ; preds = %56, %22
  %60 = phi i64 [ %58, %56 ], [ %12, %22 ]
  store i64 %60, i64* %28, align 8
  %61 = icmp eq i64 %25, 0
  br i1 %61, label %136, label %62

62:                                               ; preds = %59
  %63 = add i64 %25, -16
  %64 = lshr i64 %63, 4
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 3
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %82, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.std::__1::pair.186"* [ %73, %68 ], [ %8, %62 ]
  %70 = phi %"struct.std::__1::pair.186"* [ %72, %68 ], [ %27, %62 ]
  %71 = phi i64 [ %80, %68 ], [ %66, %62 ]
  %72 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %70, i64 -1
  %73 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %69, i64 -1
  %74 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %72, i64 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %73, i64 0, i32 0
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %70, i64 -1, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %69, i64 -1, i32 1
  store i64 %78, i64* %79, align 8
  %80 = add i64 %71, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %68, !llvm.loop !302

82:                                               ; preds = %68, %62
  %83 = phi %"struct.std::__1::pair.186"* [ %8, %62 ], [ %73, %68 ]
  %84 = phi %"struct.std::__1::pair.186"* [ %27, %62 ], [ %72, %68 ]
  %85 = icmp ult i64 %63, 48
  br i1 %85, label %136, label %86

86:                                               ; preds = %82, %86
  %87 = phi %"struct.std::__1::pair.186"* [ %108, %86 ], [ %83, %82 ]
  %88 = phi %"struct.std::__1::pair.186"* [ %107, %86 ], [ %84, %82 ]
  %89 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %88, i64 -1, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %87, i64 -1, i32 0
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %88, i64 -1, i32 1
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %87, i64 -1, i32 1
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %88, i64 -2, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %87, i64 -2, i32 0
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %88, i64 -2, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %87, i64 -2, i32 1
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %88, i64 -3, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %87, i64 -3, i32 0
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %88, i64 -3, i32 1
  %105 = load i64, i64* %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %87, i64 -3, i32 1
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %88, i64 -4
  %108 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %87, i64 -4
  %109 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %107, i64 0, i32 0
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %108, i64 0, i32 0
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %88, i64 -4, i32 1
  %113 = load i64, i64* %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %87, i64 -4, i32 1
  store i64 %113, i64* %114, align 8
  %115 = icmp eq %"struct.std::__1::pair.186"* %107, %1
  br i1 %115, label %136, label %86

116:                                              ; preds = %51, %116
  %117 = phi %"struct.std::__1::pair.186"* [ %134, %116 ], [ %52, %51 ]
  %118 = phi %"struct.std::__1::pair.186"* [ %133, %116 ], [ %53, %51 ]
  %119 = bitcast %"struct.std::__1::pair.186"* %117 to i8*
  %120 = bitcast %"struct.std::__1::pair.186"* %118 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 16, i1 false) #17
  %121 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %118, i64 1
  %122 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %117, i64 1
  %123 = bitcast %"struct.std::__1::pair.186"* %122 to i8*
  %124 = bitcast %"struct.std::__1::pair.186"* %121 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %123, i8* align 8 %124, i64 16, i1 false) #17
  %125 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %118, i64 2
  %126 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %117, i64 2
  %127 = bitcast %"struct.std::__1::pair.186"* %126 to i8*
  %128 = bitcast %"struct.std::__1::pair.186"* %125 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* align 8 %128, i64 16, i1 false) #17
  %129 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %118, i64 3
  %130 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %117, i64 3
  %131 = bitcast %"struct.std::__1::pair.186"* %130 to i8*
  %132 = bitcast %"struct.std::__1::pair.186"* %129 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 16, i1 false) #17
  %133 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %118, i64 4
  %134 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %117, i64 4
  %135 = icmp ult %"struct.std::__1::pair.186"* %133, %8
  br i1 %135, label %116, label %56

136:                                              ; preds = %82, %86, %59
  %137 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %2, i64 0, i32 0
  %138 = load i64, i64* %137, align 8
  %139 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %1, i64 0, i32 0
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %2, i64 0, i32 1
  %141 = load i64, i64* %140, align 8
  %142 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %1, i64 0, i32 1
  store i64 %141, i64* %142, align 8
  br label %294

143:                                              ; preds = %3
  %144 = getelementptr inbounds %"class.std::__1::vector.184", %"class.std::__1::vector.184"* %0, i64 0, i32 0, i32 2
  %145 = bitcast %"struct.std::__1::__split_buffer.350"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %145) #17
  %146 = getelementptr inbounds %"struct.std::__1::__split_buffer.350", %"struct.std::__1::__split_buffer.350"* %5, i64 0, i32 0
  %147 = getelementptr inbounds %"struct.std::__1::__split_buffer.350", %"struct.std::__1::__split_buffer.350"* %5, i64 0, i32 1
  %148 = getelementptr inbounds %"struct.std::__1::__split_buffer.350", %"struct.std::__1::__split_buffer.350"* %5, i64 0, i32 2
  %149 = getelementptr inbounds %"struct.std::__1::__split_buffer.350", %"struct.std::__1::__split_buffer.350"* %5, i64 0, i32 3, i32 0, i32 0
  %150 = getelementptr inbounds %"struct.std::__1::__split_buffer.350", %"struct.std::__1::__split_buffer.350"* %5, i64 0, i32 3, i32 1, i32 0
  %151 = bitcast %"struct.std::__1::pair.186"** %7 to i64*
  %152 = bitcast %"class.std::__1::vector.184"* %0 to i64*
  %153 = bitcast %"struct.std::__1::__split_buffer.350"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %153, i8 -86, i64 40, i1 false)
  %154 = load i64, i64* %152, align 8
  %155 = sub i64 %12, %154
  %156 = ashr exact i64 %155, 4
  %157 = add nsw i64 %156, 1
  %158 = icmp ugt i64 %157, 1152921504606846975
  br i1 %158, label %159, label %161

159:                                              ; preds = %143
  %160 = bitcast %"class.std::__1::vector.184"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %160) #19
  unreachable

161:                                              ; preds = %143
  %162 = bitcast %"struct.std::__1::pair.186"** %9 to i64*
  %163 = sub i64 %13, %154
  %164 = ashr exact i64 %163, 4
  %165 = icmp ult i64 %164, 576460752303423487
  br i1 %165, label %170, label %166

166:                                              ; preds = %161
  %167 = sub i64 %4, %154
  %168 = ashr exact i64 %167, 4
  store %"struct.std::__1::pair.186"* null, %"struct.std::__1::pair.186"** %149, align 8
  %169 = bitcast %"class.std::__1::allocator.190"** %150 to %"class.std::__1::__compressed_pair.187"**
  store %"class.std::__1::__compressed_pair.187"* %144, %"class.std::__1::__compressed_pair.187"** %169, align 8
  br label %181

170:                                              ; preds = %161
  %171 = ashr exact i64 %163, 3
  %172 = icmp ult i64 %171, %157
  %173 = select i1 %172, i64 %157, i64 %171
  %174 = sub i64 %4, %154
  %175 = ashr exact i64 %174, 4
  store %"struct.std::__1::pair.186"* null, %"struct.std::__1::pair.186"** %149, align 8
  %176 = bitcast %"class.std::__1::allocator.190"** %150 to %"class.std::__1::__compressed_pair.187"**
  store %"class.std::__1::__compressed_pair.187"* %144, %"class.std::__1::__compressed_pair.187"** %176, align 8
  %177 = icmp eq i64 %173, 0
  br i1 %177, label %187, label %178

178:                                              ; preds = %170
  %179 = icmp ugt i64 %173, 1152921504606846975
  br i1 %179, label %180, label %181

180:                                              ; preds = %178
  tail call void @abort() #19
  unreachable

181:                                              ; preds = %166, %178
  %182 = phi i64 [ 1152921504606846975, %166 ], [ %173, %178 ]
  %183 = phi i64 [ %168, %166 ], [ %175, %178 ]
  %184 = shl i64 %182, 4
  %185 = tail call i8* @_Znwm(i64 %184) #18
  %186 = bitcast i8* %185 to %"struct.std::__1::pair.186"*
  br label %187

187:                                              ; preds = %170, %181
  %188 = phi i64 [ %183, %181 ], [ %175, %170 ]
  %189 = phi i64 [ %182, %181 ], [ 0, %170 ]
  %190 = phi %"struct.std::__1::pair.186"* [ %186, %181 ], [ null, %170 ]
  store %"struct.std::__1::pair.186"* %190, %"struct.std::__1::pair.186"** %146, align 8
  %191 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %190, i64 %188
  store %"struct.std::__1::pair.186"* %191, %"struct.std::__1::pair.186"** %148, align 8
  store %"struct.std::__1::pair.186"* %191, %"struct.std::__1::pair.186"** %147, align 8
  %192 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %190, i64 %189
  store %"struct.std::__1::pair.186"* %192, %"struct.std::__1::pair.186"** %149, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairImmEERNS_9allocatorIS2_EEE9push_backEOS2_(%"struct.std::__1::__split_buffer.350"* nonnull %5, %"struct.std::__1::pair.186"* dereferenceable(16) %2)
  %193 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %147, align 8
  %194 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %6, align 8
  %195 = ptrtoint %"struct.std::__1::pair.186"* %194 to i64
  %196 = sub i64 %4, %195
  %197 = ashr exact i64 %196, 4
  %198 = sub nsw i64 0, %197
  %199 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %193, i64 %198
  store %"struct.std::__1::pair.186"* %199, %"struct.std::__1::pair.186"** %147, align 8
  %200 = icmp sgt i64 %196, 0
  br i1 %200, label %201, label %204

201:                                              ; preds = %187
  %202 = bitcast %"struct.std::__1::pair.186"* %199 to i8*
  %203 = bitcast %"struct.std::__1::pair.186"* %194 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %202, i8* align 8 %203, i64 %196, i1 false) #17
  br label %204

204:                                              ; preds = %201, %187
  %205 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %7, align 8
  %206 = icmp eq %"struct.std::__1::pair.186"* %205, %1
  br i1 %206, label %207, label %211

207:                                              ; preds = %204
  %208 = ptrtoint %"struct.std::__1::pair.186"* %205 to i64
  %209 = bitcast %"struct.std::__1::pair.186"** %148 to i64*
  %210 = load i64, i64* %209, align 8
  br label %268

211:                                              ; preds = %204
  %212 = bitcast %"struct.std::__1::pair.186"** %148 to i8**
  %213 = load i8*, i8** %212, align 8
  %214 = getelementptr %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %205, i64 -1, i32 0
  %215 = ptrtoint i64* %214 to i64
  %216 = sub i64 %215, %4
  %217 = lshr i64 %216, 4
  %218 = add nuw nsw i64 %217, 1
  %219 = and i64 %218, 3
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %234, label %221

221:                                              ; preds = %211, %221
  %222 = phi i8* [ %229, %221 ], [ %213, %211 ]
  %223 = phi %"struct.std::__1::pair.186"* [ %226, %221 ], [ %1, %211 ]
  %224 = phi i64 [ %230, %221 ], [ %219, %211 ]
  %225 = bitcast %"struct.std::__1::pair.186"* %223 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* align 8 %225, i64 16, i1 false) #17
  %226 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %223, i64 1
  %227 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %148, align 8
  %228 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %227, i64 1
  store %"struct.std::__1::pair.186"* %228, %"struct.std::__1::pair.186"** %148, align 8
  %229 = bitcast %"struct.std::__1::pair.186"* %228 to i8*
  %230 = add i64 %224, -1
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %232, label %221, !llvm.loop !303

232:                                              ; preds = %221
  %233 = bitcast %"struct.std::__1::pair.186"* %228 to i8*
  br label %234

234:                                              ; preds = %211, %232
  %235 = phi %"struct.std::__1::pair.186"* [ undef, %211 ], [ %228, %232 ]
  %236 = phi i8* [ %213, %211 ], [ %233, %232 ]
  %237 = phi %"struct.std::__1::pair.186"* [ %1, %211 ], [ %226, %232 ]
  %238 = icmp ult i64 %216, 48
  br i1 %238, label %263, label %239

239:                                              ; preds = %234, %239
  %240 = phi i8* [ %262, %239 ], [ %236, %234 ]
  %241 = phi %"struct.std::__1::pair.186"* [ %258, %239 ], [ %237, %234 ]
  %242 = bitcast %"struct.std::__1::pair.186"* %241 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %240, i8* align 8 %242, i64 16, i1 false) #17
  %243 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %241, i64 1
  %244 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %148, align 8
  %245 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %244, i64 1
  store %"struct.std::__1::pair.186"* %245, %"struct.std::__1::pair.186"** %148, align 8
  %246 = bitcast %"struct.std::__1::pair.186"* %245 to i8*
  %247 = bitcast %"struct.std::__1::pair.186"* %243 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %246, i8* align 8 %247, i64 16, i1 false) #17
  %248 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %241, i64 2
  %249 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %148, align 8
  %250 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %249, i64 1
  store %"struct.std::__1::pair.186"* %250, %"struct.std::__1::pair.186"** %148, align 8
  %251 = bitcast %"struct.std::__1::pair.186"* %250 to i8*
  %252 = bitcast %"struct.std::__1::pair.186"* %248 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %251, i8* align 8 %252, i64 16, i1 false) #17
  %253 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %241, i64 3
  %254 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %148, align 8
  %255 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %254, i64 1
  store %"struct.std::__1::pair.186"* %255, %"struct.std::__1::pair.186"** %148, align 8
  %256 = bitcast %"struct.std::__1::pair.186"* %255 to i8*
  %257 = bitcast %"struct.std::__1::pair.186"* %253 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %256, i8* align 8 %257, i64 16, i1 false) #17
  %258 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %241, i64 4
  %259 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %148, align 8
  %260 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %259, i64 1
  store %"struct.std::__1::pair.186"* %260, %"struct.std::__1::pair.186"** %148, align 8
  %261 = icmp eq %"struct.std::__1::pair.186"* %258, %205
  %262 = bitcast %"struct.std::__1::pair.186"* %260 to i8*
  br i1 %261, label %263, label %239

263:                                              ; preds = %239, %234
  %264 = phi %"struct.std::__1::pair.186"* [ %235, %234 ], [ %260, %239 ]
  %265 = ptrtoint %"struct.std::__1::pair.186"* %264 to i64
  %266 = load i64, i64* %151, align 8
  %267 = bitcast %"struct.std::__1::pair.186"** %148 to i64*
  br label %268

268:                                              ; preds = %207, %263
  %269 = phi i64* [ %209, %207 ], [ %267, %263 ]
  %270 = phi i64 [ %210, %207 ], [ %265, %263 ]
  %271 = phi i64 [ %208, %207 ], [ %266, %263 ]
  %272 = load i64, i64* %152, align 8
  %273 = bitcast %"struct.std::__1::pair.186"** %147 to i64*
  %274 = load i64, i64* %273, align 8
  store i64 %274, i64* %152, align 8
  store i64 %272, i64* %273, align 8
  store i64 %270, i64* %151, align 8
  store i64 %271, i64* %269, align 8
  %275 = load i64, i64* %162, align 8
  %276 = bitcast %"struct.std::__1::pair.186"** %149 to i64*
  %277 = load i64, i64* %276, align 8
  store i64 %277, i64* %162, align 8
  store i64 %275, i64* %276, align 8
  %278 = bitcast %"struct.std::__1::__split_buffer.350"* %5 to i64*
  store i64 %272, i64* %278, align 8
  %279 = inttoptr i64 %272 to %"struct.std::__1::pair.186"*
  %280 = inttoptr i64 %271 to %"struct.std::__1::pair.186"*
  %281 = icmp eq %"struct.std::__1::pair.186"* %280, %279
  br i1 %281, label %289, label %282

282:                                              ; preds = %268
  %283 = getelementptr %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %280, i64 -1, i32 0
  %284 = ptrtoint i64* %283 to i64
  %285 = sub i64 %284, %272
  %286 = lshr i64 %285, 4
  %287 = xor i64 %286, -1
  %288 = getelementptr %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %280, i64 %287
  store %"struct.std::__1::pair.186"* %288, %"struct.std::__1::pair.186"** %148, align 8
  br label %289

289:                                              ; preds = %282, %268
  %290 = icmp eq i64 %272, 0
  br i1 %290, label %293, label %291

291:                                              ; preds = %289
  %292 = inttoptr i64 %272 to i8*
  call void @_ZdlPv(i8* %292) #18
  br label %293

293:                                              ; preds = %289, %291
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %145) #17
  br label %294

294:                                              ; preds = %16, %136, %293
  %295 = phi %"struct.std::__1::pair.186"* [ %1, %16 ], [ %1, %136 ], [ %193, %293 ]
  ret %"struct.std::__1::pair.186"* %295
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairImmEERNS_9allocatorIS2_EEE9push_backEOS2_(%"struct.std::__1::__split_buffer.350"*, %"struct.std::__1::pair.186"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.350", %"struct.std::__1::__split_buffer.350"* %0, i64 0, i32 2
  %4 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.350", %"struct.std::__1::__split_buffer.350"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.186"* %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.186"* %6 to i64
  %9 = bitcast %"struct.std::__1::pair.186"* %4 to i8*
  br i1 %7, label %10, label %176

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.350", %"struct.std::__1::__split_buffer.350"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %11, align 8
  %13 = ptrtoint %"struct.std::__1::pair.186"* %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.350", %"struct.std::__1::__split_buffer.350"* %0, i64 0, i32 0
  %15 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %14, align 8
  %16 = icmp ugt %"struct.std::__1::pair.186"* %12, %15
  %17 = ptrtoint %"struct.std::__1::pair.186"* %15 to i64
  br i1 %16, label %18, label %91

18:                                               ; preds = %10
  %19 = ptrtoint %"struct.std::__1::pair.186"* %12 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 4
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %12, i64 %23
  %25 = icmp eq %"struct.std::__1::pair.186"* %12, %4
  br i1 %25, label %86, label %26

26:                                               ; preds = %18
  %27 = getelementptr %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %4, i64 -1, i32 0
  %28 = ptrtoint i64* %27 to i64
  %29 = sub i64 %28, %13
  %30 = lshr i64 %29, 4
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 3
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %48, label %34

34:                                               ; preds = %26, %34
  %35 = phi %"struct.std::__1::pair.186"* [ %45, %34 ], [ %24, %26 ]
  %36 = phi %"struct.std::__1::pair.186"* [ %44, %34 ], [ %12, %26 ]
  %37 = phi i64 [ %46, %34 ], [ %32, %26 ]
  %38 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %36, i64 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %35, i64 0, i32 0
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %36, i64 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %35, i64 0, i32 1
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %36, i64 1
  %45 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %35, i64 1
  %46 = add i64 %37, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %34, !llvm.loop !304

48:                                               ; preds = %34, %26
  %49 = phi %"struct.std::__1::pair.186"* [ undef, %26 ], [ %45, %34 ]
  %50 = phi %"struct.std::__1::pair.186"* [ %24, %26 ], [ %45, %34 ]
  %51 = phi %"struct.std::__1::pair.186"* [ %12, %26 ], [ %44, %34 ]
  %52 = icmp ult i64 %29, 48
  br i1 %52, label %83, label %53

53:                                               ; preds = %48, %53
  %54 = phi %"struct.std::__1::pair.186"* [ %81, %53 ], [ %50, %48 ]
  %55 = phi %"struct.std::__1::pair.186"* [ %80, %53 ], [ %51, %48 ]
  %56 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %55, i64 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %54, i64 0, i32 0
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %55, i64 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %54, i64 0, i32 1
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %55, i64 1, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %54, i64 1, i32 0
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %55, i64 1, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %54, i64 1, i32 1
  store i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %55, i64 2, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %54, i64 2, i32 0
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %55, i64 2, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %54, i64 2, i32 1
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %55, i64 3, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %54, i64 3, i32 0
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %55, i64 3, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %54, i64 3, i32 1
  store i64 %78, i64* %79, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %55, i64 4
  %81 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %54, i64 4
  %82 = icmp eq %"struct.std::__1::pair.186"* %80, %4
  br i1 %82, label %83, label %53

83:                                               ; preds = %53, %48
  %84 = phi %"struct.std::__1::pair.186"* [ %49, %48 ], [ %81, %53 ]
  %85 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %11, align 8
  br label %86

86:                                               ; preds = %83, %18
  %87 = phi %"struct.std::__1::pair.186"* [ %4, %18 ], [ %85, %83 ]
  %88 = phi %"struct.std::__1::pair.186"* [ %24, %18 ], [ %84, %83 ]
  store %"struct.std::__1::pair.186"* %88, %"struct.std::__1::pair.186"** %3, align 8
  %89 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %87, i64 %23
  store %"struct.std::__1::pair.186"* %89, %"struct.std::__1::pair.186"** %11, align 8
  %90 = bitcast %"struct.std::__1::pair.186"* %88 to i8*
  br label %176

91:                                               ; preds = %10
  %92 = bitcast %"struct.std::__1::pair.186"** %5 to i64*
  %93 = bitcast %"struct.std::__1::__split_buffer.350"* %0 to i64*
  %94 = sub i64 %8, %17
  %95 = ashr exact i64 %94, 3
  %96 = icmp eq i64 %94, 0
  %97 = select i1 %96, i64 1, i64 %95
  %98 = icmp ugt i64 %97, 1152921504606846975
  br i1 %98, label %99, label %100

99:                                               ; preds = %91
  tail call void @abort() #19
  unreachable

100:                                              ; preds = %91
  %101 = lshr i64 %97, 2
  %102 = shl i64 %97, 4
  %103 = tail call i8* @_Znwm(i64 %102) #18
  %104 = bitcast i8* %103 to %"struct.std::__1::pair.186"*
  %105 = ptrtoint i8* %103 to i64
  %106 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %104, i64 %101
  %107 = ptrtoint %"struct.std::__1::pair.186"* %106 to i64
  %108 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %104, i64 %97
  %109 = ptrtoint %"struct.std::__1::pair.186"* %108 to i64
  %110 = ptrtoint %"struct.std::__1::pair.186"* %4 to i64
  %111 = sub i64 %110, %13
  %112 = ashr exact i64 %111, 4
  %113 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %106, i64 %112
  %114 = icmp eq i64 %111, 0
  br i1 %114, label %165, label %115

115:                                              ; preds = %100
  %116 = add i64 %111, -16
  %117 = lshr i64 %116, 4
  %118 = add nuw nsw i64 %117, 1
  %119 = and i64 %118, 3
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %135, label %121

121:                                              ; preds = %115, %121
  %122 = phi %"struct.std::__1::pair.186"* [ %128, %121 ], [ %106, %115 ]
  %123 = phi i64 [ %129, %121 ], [ %107, %115 ]
  %124 = phi %"struct.std::__1::pair.186"* [ %130, %121 ], [ %12, %115 ]
  %125 = phi i64 [ %131, %121 ], [ %119, %115 ]
  %126 = inttoptr i64 %123 to i8*
  %127 = bitcast %"struct.std::__1::pair.186"* %124 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* align 8 %127, i64 16, i1 false) #17
  %128 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %122, i64 1
  %129 = ptrtoint %"struct.std::__1::pair.186"* %128 to i64
  %130 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %124, i64 1
  %131 = add i64 %125, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %121, !llvm.loop !305

133:                                              ; preds = %121
  %134 = ptrtoint %"struct.std::__1::pair.186"* %128 to i64
  br label %135

135:                                              ; preds = %115, %133
  %136 = phi %"struct.std::__1::pair.186"* [ %106, %115 ], [ %128, %133 ]
  %137 = phi i64 [ %107, %115 ], [ %134, %133 ]
  %138 = phi %"struct.std::__1::pair.186"* [ %12, %115 ], [ %130, %133 ]
  %139 = icmp ult i64 %116, 48
  br i1 %139, label %162, label %140

140:                                              ; preds = %135, %140
  %141 = phi %"struct.std::__1::pair.186"* [ %158, %140 ], [ %136, %135 ]
  %142 = phi i64 [ %159, %140 ], [ %137, %135 ]
  %143 = phi %"struct.std::__1::pair.186"* [ %160, %140 ], [ %138, %135 ]
  %144 = inttoptr i64 %142 to i8*
  %145 = bitcast %"struct.std::__1::pair.186"* %143 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 8 %145, i64 16, i1 false) #17
  %146 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %141, i64 1
  %147 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %143, i64 1
  %148 = bitcast %"struct.std::__1::pair.186"* %146 to i8*
  %149 = bitcast %"struct.std::__1::pair.186"* %147 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %148, i8* align 8 %149, i64 16, i1 false) #17
  %150 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %141, i64 2
  %151 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %143, i64 2
  %152 = bitcast %"struct.std::__1::pair.186"* %150 to i8*
  %153 = bitcast %"struct.std::__1::pair.186"* %151 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %153, i64 16, i1 false) #17
  %154 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %141, i64 3
  %155 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %143, i64 3
  %156 = bitcast %"struct.std::__1::pair.186"* %154 to i8*
  %157 = bitcast %"struct.std::__1::pair.186"* %155 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %156, i8* align 8 %157, i64 16, i1 false) #17
  %158 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %141, i64 4
  %159 = ptrtoint %"struct.std::__1::pair.186"* %158 to i64
  %160 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %143, i64 4
  %161 = icmp eq %"struct.std::__1::pair.186"* %113, %158
  br i1 %161, label %162, label %140

162:                                              ; preds = %140, %135
  %163 = ptrtoint %"struct.std::__1::pair.186"* %113 to i64
  %164 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %14, align 8
  br label %165

165:                                              ; preds = %100, %162
  %166 = phi %"struct.std::__1::pair.186"* [ %164, %162 ], [ %15, %100 ]
  %167 = phi i64 [ %163, %162 ], [ %107, %100 ]
  store i64 %105, i64* %93, align 8
  %168 = bitcast %"struct.std::__1::pair.186"** %11 to i64*
  store i64 %107, i64* %168, align 8
  %169 = bitcast %"struct.std::__1::pair.186"** %3 to i64*
  store i64 %167, i64* %169, align 8
  store i64 %109, i64* %92, align 8
  %170 = icmp eq %"struct.std::__1::pair.186"* %166, null
  %171 = inttoptr i64 %167 to i8*
  br i1 %170, label %176, label %172

172:                                              ; preds = %165
  %173 = bitcast %"struct.std::__1::pair.186"* %166 to i8*
  tail call void @_ZdlPv(i8* %173) #18
  %174 = bitcast %"struct.std::__1::pair.186"** %3 to i8**
  %175 = load i8*, i8** %174, align 8
  br label %176

176:                                              ; preds = %172, %165, %86, %2
  %177 = phi i8* [ %175, %172 ], [ %171, %165 ], [ %90, %86 ], [ %9, %2 ]
  %178 = bitcast %"struct.std::__1::pair.186"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %177, i8* align 8 %178, i64 16, i1 false) #17
  %179 = load %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"** %3, align 8
  %180 = getelementptr inbounds %"struct.std::__1::pair.186", %"struct.std::__1::pair.186"* %179, i64 1
  store %"struct.std::__1::pair.186"* %180, %"struct.std::__1::pair.186"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN3gfx10RenderText22MergeIntersectingRectsERNS_6vectorINS1_4RectENS_9allocatorIS4_EEEEE3$_6PS4_EEvT0_SC_T_"(%"class.gfx::Rect"*, %"class.gfx::Rect"*) unnamed_addr #0 {
  br label %3

3:                                                ; preds = %439, %2
  %4 = phi %"class.gfx::Rect"* [ %1, %2 ], [ %410, %439 ]
  %5 = phi %"class.gfx::Rect"* [ %0, %2 ], [ %30, %439 ]
  %6 = ptrtoint %"class.gfx::Rect"* %4 to i64
  %7 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 -1
  %8 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 0, i32 0
  %9 = bitcast %"class.gfx::Rect"* %7 to i8*
  %10 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 -1, i32 0, i32 1
  %11 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 -1, i32 1, i32 0
  %12 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 -1, i32 1, i32 1
  %13 = bitcast %"class.gfx::Rect"* %7 to i8*
  %14 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 -1, i32 0, i32 1
  %15 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 -1, i32 1, i32 0
  %16 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 -1, i32 1, i32 1
  %17 = bitcast %"class.gfx::Rect"* %7 to i8*
  %18 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 -1, i32 0, i32 1
  %19 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 -1, i32 1, i32 0
  %20 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 -1, i32 1, i32 1
  %21 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 0, i32 0
  %22 = bitcast %"class.gfx::Rect"* %7 to i8*
  %23 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 -1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 -1, i32 1, i32 0
  %25 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 -1, i32 1, i32 1
  %26 = ptrtoint %"class.gfx::Rect"* %4 to i64
  br label %27

27:                                               ; preds = %448, %3
  %28 = phi %"class.gfx::Rect"* [ %5, %3 ], [ %449, %448 ]
  br label %29

29:                                               ; preds = %331, %27
  %30 = phi %"class.gfx::Rect"* [ %28, %27 ], [ %320, %331 ]
  %31 = ptrtoint %"class.gfx::Rect"* %30 to i64
  %32 = sub i64 %6, %31
  %33 = ashr exact i64 %32, 4
  switch i64 %33, label %124 [
    i64 0, label %452
    i64 1, label %452
    i64 2, label %34
    i64 3, label %53
    i64 4, label %113
    i64 5, label %118
  ]

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 -1
  %36 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %35, i64 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp slt i32 %37, %39
  br i1 %40, label %41, label %452

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 0, i32 1, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 0, i32 1, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = bitcast %"class.gfx::Rect"* %30 to i8*
  %49 = bitcast %"class.gfx::Rect"* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %48, i8* align 4 %49, i64 16, i1 false) #17
  store i32 %39, i32* %36, align 4
  %50 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 -1, i32 0, i32 1
  store i32 %43, i32* %50, align 4
  %51 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 -1, i32 1, i32 0
  store i32 %45, i32* %51, align 4
  %52 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 -1, i32 1, i32 1
  store i32 %47, i32* %52, align 4
  br label %452

53:                                               ; preds = %29
  %54 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 1
  %55 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 -1
  %56 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %54, i64 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp slt i32 %57, %59
  %61 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %55, i64 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp slt i32 %62, %57
  br i1 %60, label %88, label %64

64:                                               ; preds = %53
  br i1 %63, label %65, label %452

65:                                               ; preds = %64
  %66 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 1, i32 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 1, i32 1, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 1, i32 1, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = bitcast %"class.gfx::Rect"* %54 to i8*
  %73 = bitcast %"class.gfx::Rect"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 4 %73, i64 16, i1 false) #17
  store i32 %57, i32* %61, align 4
  %74 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 -1, i32 0, i32 1
  store i32 %67, i32* %74, align 4
  %75 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 -1, i32 1, i32 0
  store i32 %69, i32* %75, align 4
  %76 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 -1, i32 1, i32 1
  store i32 %71, i32* %76, align 4
  %77 = load i32, i32* %56, align 4
  %78 = load i32, i32* %58, align 4
  %79 = icmp slt i32 %77, %78
  br i1 %79, label %80, label %452

80:                                               ; preds = %65
  %81 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 0, i32 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 0, i32 1, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 0, i32 1, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = bitcast %"class.gfx::Rect"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %87, i8* align 4 %72, i64 16, i1 false) #17
  store i32 %78, i32* %56, align 4
  store i32 %82, i32* %66, align 4
  store i32 %84, i32* %68, align 4
  store i32 %86, i32* %70, align 4
  br label %452

88:                                               ; preds = %53
  %89 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 0, i32 0, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 0, i32 1, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 0, i32 1, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = bitcast %"class.gfx::Rect"* %30 to i8*
  br i1 %63, label %96, label %101

96:                                               ; preds = %88
  %97 = bitcast %"class.gfx::Rect"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %95, i8* align 4 %97, i64 16, i1 false) #17
  store i32 %59, i32* %61, align 4
  %98 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 -1, i32 0, i32 1
  store i32 %90, i32* %98, align 4
  %99 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 -1, i32 1, i32 0
  store i32 %92, i32* %99, align 4
  %100 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 -1, i32 1, i32 1
  store i32 %94, i32* %100, align 4
  br label %452

101:                                              ; preds = %88
  %102 = bitcast %"class.gfx::Rect"* %54 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %95, i8* align 4 %102, i64 16, i1 false) #17
  store i32 %59, i32* %56, align 4
  %103 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 1, i32 0, i32 1
  store i32 %90, i32* %103, align 4
  %104 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 1, i32 1, i32 0
  store i32 %92, i32* %104, align 4
  %105 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 1, i32 1, i32 1
  store i32 %94, i32* %105, align 4
  %106 = load i32, i32* %61, align 4
  %107 = icmp slt i32 %106, %59
  br i1 %107, label %108, label %452

108:                                              ; preds = %101
  %109 = bitcast %"class.gfx::Rect"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %109, i64 16, i1 false) #17
  store i32 %59, i32* %61, align 4
  %110 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 -1, i32 0, i32 1
  store i32 %90, i32* %110, align 4
  %111 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 -1, i32 1, i32 0
  store i32 %92, i32* %111, align 4
  %112 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 -1, i32 1, i32 1
  store i32 %94, i32* %112, align 4
  br label %452

113:                                              ; preds = %29
  %114 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 1
  %115 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 2
  %116 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 -1
  %117 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN3gfx10RenderText22MergeIntersectingRectsERNS_6vectorINS1_4RectENS_9allocatorIS4_EEEEE3$_6PS4_EEjT0_SC_SC_SC_T_"(%"class.gfx::Rect"* %30, %"class.gfx::Rect"* %114, %"class.gfx::Rect"* %115, %"class.gfx::Rect"* %116)
  br label %452

118:                                              ; preds = %29
  %119 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 1
  %120 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 2
  %121 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 3
  %122 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 -1
  %123 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN3gfx10RenderText22MergeIntersectingRectsERNS_6vectorINS1_4RectENS_9allocatorIS4_EEEEE3$_6PS4_EEjT0_SC_SC_SC_SC_T_"(%"class.gfx::Rect"* %30, %"class.gfx::Rect"* %119, %"class.gfx::Rect"* %120, %"class.gfx::Rect"* %121, %"class.gfx::Rect"* %122)
  br label %452

124:                                              ; preds = %29
  %125 = icmp slt i64 %32, 496
  br i1 %125, label %126, label %224

126:                                              ; preds = %124
  %127 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 2
  %128 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 1
  %129 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %128, i64 0, i32 0, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 0, i32 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = icmp slt i32 %130, %132
  %134 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %127, i64 0, i32 0, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = icmp slt i32 %135, %130
  br i1 %133, label %160, label %137

137:                                              ; preds = %126
  br i1 %136, label %138, label %184

138:                                              ; preds = %137
  %139 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 1, i32 0, i32 1
  %140 = load i32, i32* %139, align 4
  %141 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 1, i32 1, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 1, i32 1, i32 1
  %144 = load i32, i32* %143, align 4
  %145 = bitcast %"class.gfx::Rect"* %128 to i8*
  %146 = bitcast %"class.gfx::Rect"* %127 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %145, i8* align 4 %146, i64 16, i1 false) #17
  store i32 %130, i32* %134, align 4
  %147 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 2, i32 0, i32 1
  store i32 %140, i32* %147, align 4
  %148 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 2, i32 1, i32 0
  store i32 %142, i32* %148, align 4
  %149 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 2, i32 1, i32 1
  store i32 %144, i32* %149, align 4
  %150 = load i32, i32* %129, align 4
  %151 = icmp slt i32 %150, %132
  br i1 %151, label %152, label %184

152:                                              ; preds = %138
  %153 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 0, i32 0, i32 1
  %154 = load i32, i32* %153, align 4
  %155 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 0, i32 1, i32 0
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 0, i32 1, i32 1
  %158 = load i32, i32* %157, align 4
  %159 = bitcast %"class.gfx::Rect"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %159, i8* align 4 %145, i64 16, i1 false) #17
  store i32 %132, i32* %129, align 4
  store i32 %154, i32* %139, align 4
  store i32 %156, i32* %141, align 4
  store i32 %158, i32* %143, align 4
  br label %184

160:                                              ; preds = %126
  %161 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 0, i32 0, i32 1
  %162 = load i32, i32* %161, align 4
  %163 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 0, i32 1, i32 0
  %164 = load i32, i32* %163, align 4
  %165 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 0, i32 1, i32 1
  %166 = load i32, i32* %165, align 4
  %167 = bitcast %"class.gfx::Rect"* %30 to i8*
  br i1 %136, label %168, label %173

168:                                              ; preds = %160
  %169 = bitcast %"class.gfx::Rect"* %127 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %167, i8* align 4 %169, i64 16, i1 false) #17
  store i32 %132, i32* %134, align 4
  %170 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 2, i32 0, i32 1
  store i32 %162, i32* %170, align 4
  %171 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 2, i32 1, i32 0
  store i32 %164, i32* %171, align 4
  %172 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 2, i32 1, i32 1
  store i32 %166, i32* %172, align 4
  br label %184

173:                                              ; preds = %160
  %174 = bitcast %"class.gfx::Rect"* %128 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %167, i8* align 4 %174, i64 16, i1 false) #17
  store i32 %132, i32* %129, align 4
  %175 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 1, i32 0, i32 1
  store i32 %162, i32* %175, align 4
  %176 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 1, i32 1, i32 0
  store i32 %164, i32* %176, align 4
  %177 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 1, i32 1, i32 1
  store i32 %166, i32* %177, align 4
  %178 = icmp slt i32 %135, %132
  br i1 %178, label %179, label %184

179:                                              ; preds = %173
  %180 = bitcast %"class.gfx::Rect"* %127 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %174, i8* align 4 %180, i64 16, i1 false) #17
  store i32 %132, i32* %134, align 4
  %181 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 2, i32 0, i32 1
  store i32 %162, i32* %181, align 4
  %182 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 2, i32 1, i32 0
  store i32 %164, i32* %182, align 4
  %183 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 2, i32 1, i32 1
  store i32 %166, i32* %183, align 4
  br label %184

184:                                              ; preds = %179, %173, %168, %152, %138, %137
  %185 = phi i32 [ %135, %137 ], [ %130, %138 ], [ %130, %152 ], [ %132, %168 ], [ %135, %173 ], [ %132, %179 ]
  %186 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 3
  %187 = icmp eq %"class.gfx::Rect"* %186, %4
  br i1 %187, label %452, label %188

188:                                              ; preds = %184, %222
  %189 = phi i32 [ %223, %222 ], [ %185, %184 ]
  %190 = phi %"class.gfx::Rect"* [ %220, %222 ], [ %186, %184 ]
  %191 = phi %"class.gfx::Rect"* [ %190, %222 ], [ %127, %184 ]
  %192 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %190, i64 0, i32 0, i32 0
  %193 = load i32, i32* %192, align 4
  %194 = icmp slt i32 %193, %189
  br i1 %194, label %195, label %219

195:                                              ; preds = %188
  %196 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %190, i64 0, i32 0, i32 1
  %197 = load i32, i32* %196, align 4
  %198 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %190, i64 0, i32 1, i32 0
  %199 = load i32, i32* %198, align 4
  %200 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %190, i64 0, i32 1, i32 1
  %201 = load i32, i32* %200, align 4
  br label %202

202:                                              ; preds = %208, %195
  %203 = phi %"class.gfx::Rect"* [ %190, %195 ], [ %204, %208 ]
  %204 = phi %"class.gfx::Rect"* [ %191, %195 ], [ %209, %208 ]
  %205 = bitcast %"class.gfx::Rect"* %203 to i8*
  %206 = bitcast %"class.gfx::Rect"* %204 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %205, i8* align 4 %206, i64 16, i1 false) #17
  %207 = icmp eq %"class.gfx::Rect"* %204, %30
  br i1 %207, label %213, label %208

208:                                              ; preds = %202
  %209 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %204, i64 -1
  %210 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %209, i64 0, i32 0, i32 0
  %211 = load i32, i32* %210, align 4
  %212 = icmp slt i32 %193, %211
  br i1 %212, label %202, label %213

213:                                              ; preds = %208, %202
  %214 = phi %"class.gfx::Rect"* [ %30, %202 ], [ %204, %208 ]
  %215 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %214, i64 0, i32 0, i32 0
  store i32 %193, i32* %215, align 4
  %216 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %214, i64 0, i32 0, i32 1
  store i32 %197, i32* %216, align 4
  %217 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %214, i64 0, i32 1, i32 0
  store i32 %199, i32* %217, align 4
  %218 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %214, i64 0, i32 1, i32 1
  store i32 %201, i32* %218, align 4
  br label %219

219:                                              ; preds = %213, %188
  %220 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %190, i64 1
  %221 = icmp eq %"class.gfx::Rect"* %220, %4
  br i1 %221, label %452, label %222

222:                                              ; preds = %219
  %223 = load i32, i32* %192, align 4
  br label %188

224:                                              ; preds = %124
  %225 = icmp sgt i64 %32, 15984
  %226 = sdiv i64 %33, 2
  %227 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 %226
  br i1 %225, label %228, label %233

228:                                              ; preds = %224
  %229 = sdiv i64 %33, 4
  %230 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 %229
  %231 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %227, i64 %229
  %232 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN3gfx10RenderText22MergeIntersectingRectsERNS_6vectorINS1_4RectENS_9allocatorIS4_EEEEE3$_6PS4_EEjT0_SC_SC_SC_SC_T_"(%"class.gfx::Rect"* %30, %"class.gfx::Rect"* %230, %"class.gfx::Rect"* %227, %"class.gfx::Rect"* %231, %"class.gfx::Rect"* %7)
  br label %278

233:                                              ; preds = %224
  %234 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %227, i64 0, i32 0, i32 0
  %235 = load i32, i32* %234, align 4
  %236 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 0, i32 0, i32 0
  %237 = load i32, i32* %236, align 4
  %238 = icmp slt i32 %235, %237
  %239 = load i32, i32* %8, align 4
  %240 = icmp slt i32 %239, %235
  br i1 %238, label %261, label %241

241:                                              ; preds = %233
  br i1 %240, label %242, label %278

242:                                              ; preds = %241
  %243 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 %226, i32 0, i32 1
  %244 = load i32, i32* %243, align 4
  %245 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 %226, i32 1, i32 0
  %246 = load i32, i32* %245, align 4
  %247 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 %226, i32 1, i32 1
  %248 = load i32, i32* %247, align 4
  %249 = bitcast %"class.gfx::Rect"* %227 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %249, i8* align 4 %9, i64 16, i1 false) #17
  store i32 %235, i32* %8, align 4
  store i32 %244, i32* %10, align 4
  store i32 %246, i32* %11, align 4
  store i32 %248, i32* %12, align 4
  %250 = load i32, i32* %234, align 4
  %251 = load i32, i32* %236, align 4
  %252 = icmp slt i32 %250, %251
  br i1 %252, label %253, label %278

253:                                              ; preds = %242
  %254 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 0, i32 0, i32 1
  %255 = load i32, i32* %254, align 4
  %256 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 0, i32 1, i32 0
  %257 = load i32, i32* %256, align 4
  %258 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 0, i32 1, i32 1
  %259 = load i32, i32* %258, align 4
  %260 = bitcast %"class.gfx::Rect"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %260, i8* align 4 %249, i64 16, i1 false) #17
  store i32 %251, i32* %234, align 4
  store i32 %255, i32* %243, align 4
  store i32 %257, i32* %245, align 4
  store i32 %259, i32* %247, align 4
  br label %278

261:                                              ; preds = %233
  %262 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 0, i32 0, i32 1
  %263 = load i32, i32* %262, align 4
  %264 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 0, i32 1, i32 0
  %265 = load i32, i32* %264, align 4
  %266 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 0, i32 1, i32 1
  %267 = load i32, i32* %266, align 4
  %268 = bitcast %"class.gfx::Rect"* %30 to i8*
  br i1 %240, label %269, label %270

269:                                              ; preds = %261
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %268, i8* align 4 %17, i64 16, i1 false) #17
  store i32 %237, i32* %8, align 4
  store i32 %263, i32* %18, align 4
  store i32 %265, i32* %19, align 4
  store i32 %267, i32* %20, align 4
  br label %278

270:                                              ; preds = %261
  %271 = bitcast %"class.gfx::Rect"* %227 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %268, i8* align 4 %271, i64 16, i1 false) #17
  store i32 %237, i32* %234, align 4
  %272 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 %226, i32 0, i32 1
  store i32 %263, i32* %272, align 4
  %273 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 %226, i32 1, i32 0
  store i32 %265, i32* %273, align 4
  %274 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 %226, i32 1, i32 1
  store i32 %267, i32* %274, align 4
  %275 = load i32, i32* %8, align 4
  %276 = icmp slt i32 %275, %237
  br i1 %276, label %277, label %278

277:                                              ; preds = %270
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %271, i8* align 4 %13, i64 16, i1 false) #17
  store i32 %237, i32* %8, align 4
  store i32 %263, i32* %14, align 4
  store i32 %265, i32* %15, align 4
  store i32 %267, i32* %16, align 4
  br label %278

278:                                              ; preds = %277, %270, %269, %253, %242, %241, %228
  %279 = phi i32 [ %232, %228 ], [ 1, %269 ], [ 0, %241 ], [ 2, %253 ], [ 1, %242 ], [ 2, %277 ], [ 1, %270 ]
  %280 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 0, i32 0, i32 0
  %281 = load i32, i32* %280, align 4
  %282 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %227, i64 0, i32 0, i32 0
  %283 = load i32, i32* %282, align 4
  %284 = icmp slt i32 %281, %283
  br i1 %284, label %364, label %285

285:                                              ; preds = %278, %346
  %286 = phi %"class.gfx::Rect"* [ %287, %346 ], [ %7, %278 ]
  %287 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %286, i64 -1
  %288 = icmp eq %"class.gfx::Rect"* %30, %287
  br i1 %288, label %289, label %346

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 1
  %291 = load i32, i32* %21, align 4
  %292 = icmp slt i32 %281, %291
  br i1 %292, label %312, label %293

293:                                              ; preds = %289
  %294 = icmp eq %"class.gfx::Rect"* %290, %7
  br i1 %294, label %452, label %295

295:                                              ; preds = %293, %309
  %296 = phi %"class.gfx::Rect"* [ %310, %309 ], [ %290, %293 ]
  %297 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %296, i64 0, i32 0, i32 0
  %298 = load i32, i32* %297, align 4
  %299 = icmp slt i32 %281, %298
  br i1 %299, label %300, label %309

300:                                              ; preds = %295
  %301 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %296, i64 0, i32 0, i32 1
  %302 = load i32, i32* %301, align 4
  %303 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %296, i64 0, i32 1, i32 0
  %304 = load i32, i32* %303, align 4
  %305 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %296, i64 0, i32 1, i32 1
  %306 = load i32, i32* %305, align 4
  %307 = bitcast %"class.gfx::Rect"* %296 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %307, i8* align 4 %22, i64 16, i1 false) #17
  store i32 %298, i32* %21, align 4
  store i32 %302, i32* %23, align 4
  store i32 %304, i32* %24, align 4
  store i32 %306, i32* %25, align 4
  %308 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %296, i64 1
  br label %312

309:                                              ; preds = %295
  %310 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %296, i64 1
  %311 = icmp eq %"class.gfx::Rect"* %310, %7
  br i1 %311, label %452, label %295

312:                                              ; preds = %300, %289
  %313 = phi %"class.gfx::Rect"* [ %290, %289 ], [ %308, %300 ]
  %314 = icmp eq %"class.gfx::Rect"* %313, %7
  br i1 %314, label %452, label %315

315:                                              ; preds = %312, %333
  %316 = phi %"class.gfx::Rect"* [ %324, %333 ], [ %313, %312 ]
  %317 = phi %"class.gfx::Rect"* [ %327, %333 ], [ %7, %312 ]
  %318 = load i32, i32* %280, align 4
  br label %319

319:                                              ; preds = %319, %315
  %320 = phi %"class.gfx::Rect"* [ %316, %315 ], [ %324, %319 ]
  %321 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %320, i64 0, i32 0, i32 0
  %322 = load i32, i32* %321, align 4
  %323 = icmp slt i32 %318, %322
  %324 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %320, i64 1
  br i1 %323, label %325, label %319

325:                                              ; preds = %319, %325
  %326 = phi %"class.gfx::Rect"* [ %327, %325 ], [ %317, %319 ]
  %327 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %326, i64 -1
  %328 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %327, i64 0, i32 0, i32 0
  %329 = load i32, i32* %328, align 4
  %330 = icmp slt i32 %318, %329
  br i1 %330, label %325, label %331

331:                                              ; preds = %325
  %332 = icmp ult %"class.gfx::Rect"* %320, %327
  br i1 %332, label %333, label %29

333:                                              ; preds = %331
  %334 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %327, i64 0, i32 0, i32 0
  %335 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %320, i64 0, i32 0, i32 1
  %336 = load i32, i32* %335, align 4
  %337 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %320, i64 0, i32 1, i32 0
  %338 = load i32, i32* %337, align 4
  %339 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %320, i64 0, i32 1, i32 1
  %340 = load i32, i32* %339, align 4
  %341 = bitcast %"class.gfx::Rect"* %320 to i8*
  %342 = bitcast %"class.gfx::Rect"* %327 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %341, i8* align 4 %342, i64 16, i1 false) #17
  store i32 %322, i32* %334, align 4
  %343 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %326, i64 -1, i32 0, i32 1
  store i32 %336, i32* %343, align 4
  %344 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %326, i64 -1, i32 1, i32 0
  store i32 %338, i32* %344, align 4
  %345 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %326, i64 -1, i32 1, i32 1
  store i32 %340, i32* %345, align 4
  br label %315

346:                                              ; preds = %285
  %347 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %287, i64 0, i32 0, i32 0
  %348 = load i32, i32* %347, align 4
  %349 = icmp slt i32 %348, %283
  br i1 %349, label %350, label %285

350:                                              ; preds = %346
  %351 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %287, i64 0, i32 0, i32 0
  %352 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 0, i32 0, i32 1
  %353 = load i32, i32* %352, align 4
  %354 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 0, i32 1, i32 0
  %355 = load i32, i32* %354, align 4
  %356 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 0, i32 1, i32 1
  %357 = load i32, i32* %356, align 4
  %358 = bitcast %"class.gfx::Rect"* %30 to i8*
  %359 = bitcast %"class.gfx::Rect"* %287 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %358, i8* align 4 %359, i64 16, i1 false) #17
  store i32 %281, i32* %351, align 4
  %360 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %286, i64 -1, i32 0, i32 1
  store i32 %353, i32* %360, align 4
  %361 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %286, i64 -1, i32 1, i32 0
  store i32 %355, i32* %361, align 4
  %362 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %286, i64 -1, i32 1, i32 1
  store i32 %357, i32* %362, align 4
  %363 = add i32 %279, 1
  br label %364

364:                                              ; preds = %278, %350
  %365 = phi i32 [ %363, %350 ], [ %279, %278 ]
  %366 = phi %"class.gfx::Rect"* [ %287, %350 ], [ %7, %278 ]
  %367 = ptrtoint %"class.gfx::Rect"* %30 to i64
  %368 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %30, i64 1
  %369 = icmp ult %"class.gfx::Rect"* %368, %366
  br i1 %369, label %370, label %407

370:                                              ; preds = %364, %391
  %371 = phi %"class.gfx::Rect"* [ %406, %391 ], [ %227, %364 ]
  %372 = phi i32 [ %404, %391 ], [ %365, %364 ]
  %373 = phi %"class.gfx::Rect"* [ %382, %391 ], [ %368, %364 ]
  %374 = phi %"class.gfx::Rect"* [ %385, %391 ], [ %366, %364 ]
  %375 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %371, i64 0, i32 0, i32 0
  %376 = load i32, i32* %375, align 4
  br label %377

377:                                              ; preds = %377, %370
  %378 = phi %"class.gfx::Rect"* [ %373, %370 ], [ %382, %377 ]
  %379 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %378, i64 0, i32 0, i32 0
  %380 = load i32, i32* %379, align 4
  %381 = icmp slt i32 %380, %376
  %382 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %378, i64 1
  br i1 %381, label %377, label %383

383:                                              ; preds = %377, %383
  %384 = phi %"class.gfx::Rect"* [ %385, %383 ], [ %374, %377 ]
  %385 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %384, i64 -1
  %386 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %385, i64 0, i32 0, i32 0
  %387 = load i32, i32* %386, align 4
  %388 = icmp slt i32 %387, %376
  br i1 %388, label %389, label %383

389:                                              ; preds = %383
  %390 = icmp ugt %"class.gfx::Rect"* %378, %385
  br i1 %390, label %407, label %391

391:                                              ; preds = %389
  %392 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %385, i64 0, i32 0, i32 0
  %393 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %378, i64 0, i32 0, i32 1
  %394 = load i32, i32* %393, align 4
  %395 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %378, i64 0, i32 1, i32 0
  %396 = load i32, i32* %395, align 4
  %397 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %378, i64 0, i32 1, i32 1
  %398 = load i32, i32* %397, align 4
  %399 = bitcast %"class.gfx::Rect"* %378 to i8*
  %400 = bitcast %"class.gfx::Rect"* %385 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %399, i8* align 4 %400, i64 16, i1 false) #17
  store i32 %380, i32* %392, align 4
  %401 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %384, i64 -1, i32 0, i32 1
  store i32 %394, i32* %401, align 4
  %402 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %384, i64 -1, i32 1, i32 0
  store i32 %396, i32* %402, align 4
  %403 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %384, i64 -1, i32 1, i32 1
  store i32 %398, i32* %403, align 4
  %404 = add i32 %372, 1
  %405 = icmp eq %"class.gfx::Rect"* %371, %378
  %406 = select i1 %405, %"class.gfx::Rect"* %385, %"class.gfx::Rect"* %371
  br label %370

407:                                              ; preds = %389, %364
  %408 = phi %"class.gfx::Rect"* [ %227, %364 ], [ %371, %389 ]
  %409 = phi i32 [ %365, %364 ], [ %372, %389 ]
  %410 = phi %"class.gfx::Rect"* [ %368, %364 ], [ %378, %389 ]
  %411 = icmp eq %"class.gfx::Rect"* %410, %408
  br i1 %411, label %431, label %412

412:                                              ; preds = %407
  %413 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %408, i64 0, i32 0, i32 0
  %414 = load i32, i32* %413, align 4
  %415 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %410, i64 0, i32 0, i32 0
  %416 = load i32, i32* %415, align 4
  %417 = icmp slt i32 %414, %416
  br i1 %417, label %418, label %431

418:                                              ; preds = %412
  %419 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %410, i64 0, i32 0, i32 1
  %420 = load i32, i32* %419, align 4
  %421 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %410, i64 0, i32 1, i32 0
  %422 = load i32, i32* %421, align 4
  %423 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %410, i64 0, i32 1, i32 1
  %424 = load i32, i32* %423, align 4
  %425 = bitcast %"class.gfx::Rect"* %410 to i8*
  %426 = bitcast %"class.gfx::Rect"* %408 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %425, i8* align 4 %426, i64 16, i1 false) #17
  store i32 %416, i32* %413, align 4
  %427 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %408, i64 0, i32 0, i32 1
  store i32 %420, i32* %427, align 4
  %428 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %408, i64 0, i32 1, i32 0
  store i32 %422, i32* %428, align 4
  %429 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %408, i64 0, i32 1, i32 1
  store i32 %424, i32* %429, align 4
  %430 = add i32 %409, 1
  br label %431

431:                                              ; preds = %407, %418, %412
  %432 = phi i32 [ %430, %418 ], [ %409, %412 ], [ %409, %407 ]
  %433 = icmp eq i32 %432, 0
  br i1 %433, label %434, label %441

434:                                              ; preds = %431
  %435 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN3gfx10RenderText22MergeIntersectingRectsERNS_6vectorINS1_4RectENS_9allocatorIS4_EEEEE3$_6PS4_EEbT0_SC_T_"(%"class.gfx::Rect"* %30, %"class.gfx::Rect"* %410)
  %436 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %410, i64 1
  %437 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN3gfx10RenderText22MergeIntersectingRectsERNS_6vectorINS1_4RectENS_9allocatorIS4_EEEEE3$_6PS4_EEbT0_SC_T_"(%"class.gfx::Rect"* %436, %"class.gfx::Rect"* %4)
  br i1 %437, label %438, label %440

438:                                              ; preds = %434
  br i1 %435, label %452, label %439

439:                                              ; preds = %438, %450
  br label %3

440:                                              ; preds = %434
  br i1 %435, label %448, label %441

441:                                              ; preds = %440, %431
  %442 = ptrtoint %"class.gfx::Rect"* %410 to i64
  %443 = sub i64 %442, %367
  %444 = sub i64 %26, %442
  %445 = icmp slt i64 %443, %444
  br i1 %445, label %446, label %450

446:                                              ; preds = %441
  tail call fastcc void @"_ZNSt3__16__sortIRZN3gfx10RenderText22MergeIntersectingRectsERNS_6vectorINS1_4RectENS_9allocatorIS4_EEEEE3$_6PS4_EEvT0_SC_T_"(%"class.gfx::Rect"* %30, %"class.gfx::Rect"* %410)
  %447 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %410, i64 1
  br label %448

448:                                              ; preds = %446, %440
  %449 = phi %"class.gfx::Rect"* [ %436, %440 ], [ %447, %446 ]
  br label %27

450:                                              ; preds = %441
  %451 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %410, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZN3gfx10RenderText22MergeIntersectingRectsERNS_6vectorINS1_4RectENS_9allocatorIS4_EEEEE3$_6PS4_EEvT0_SC_T_"(%"class.gfx::Rect"* %451, %"class.gfx::Rect"* %4)
  br label %439

452:                                              ; preds = %438, %312, %29, %29, %293, %309, %219, %184, %108, %101, %96, %80, %65, %64, %34, %41, %113, %118
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZN3gfx10RenderText22MergeIntersectingRectsERNS_6vectorINS1_4RectENS_9allocatorIS4_EEEEE3$_6PS4_EEjT0_SC_SC_SC_T_"(%"class.gfx::Rect"* nocapture, %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.gfx::Rect"* nocapture) unnamed_addr #0 {
  %5 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %6, %8
  %10 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, %6
  br i1 %9, label %38, label %13

13:                                               ; preds = %4
  br i1 %12, label %14, label %63

14:                                               ; preds = %13
  %15 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = bitcast %"class.gfx::Rect"* %1 to i8*
  %22 = bitcast %"class.gfx::Rect"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 %22, i64 16, i1 false) #17
  store i32 %6, i32* %10, align 4
  %23 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 1
  store i32 %16, i32* %23, align 4
  %24 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 0
  store i32 %18, i32* %24, align 4
  %25 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 1
  store i32 %20, i32* %25, align 4
  %26 = load i32, i32* %5, align 4
  %27 = load i32, i32* %7, align 4
  %28 = icmp slt i32 %26, %27
  br i1 %28, label %29, label %63

29:                                               ; preds = %14
  %30 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = bitcast %"class.gfx::Rect"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %21, i64 16, i1 false) #17
  store i32 %27, i32* %5, align 4
  store i32 %31, i32* %15, align 4
  store i32 %33, i32* %17, align 4
  store i32 %35, i32* %19, align 4
  %37 = load i32, i32* %10, align 4
  br label %63

38:                                               ; preds = %4
  %39 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = bitcast %"class.gfx::Rect"* %0 to i8*
  br i1 %12, label %46, label %51

46:                                               ; preds = %38
  %47 = bitcast %"class.gfx::Rect"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* align 4 %47, i64 16, i1 false) #17
  store i32 %8, i32* %10, align 4
  %48 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 1
  store i32 %40, i32* %48, align 4
  %49 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 0
  store i32 %42, i32* %49, align 4
  %50 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 1
  store i32 %44, i32* %50, align 4
  br label %63

51:                                               ; preds = %38
  %52 = bitcast %"class.gfx::Rect"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* align 4 %52, i64 16, i1 false) #17
  store i32 %8, i32* %5, align 4
  %53 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  store i32 %40, i32* %53, align 4
  %54 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  store i32 %42, i32* %54, align 4
  %55 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  store i32 %44, i32* %55, align 4
  %56 = load i32, i32* %10, align 4
  %57 = icmp slt i32 %56, %8
  br i1 %57, label %58, label %63

58:                                               ; preds = %51
  %59 = bitcast %"class.gfx::Rect"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %52, i8* align 4 %59, i64 16, i1 false) #17
  store i32 %8, i32* %10, align 4
  %60 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 1
  store i32 %40, i32* %60, align 4
  %61 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 0
  store i32 %42, i32* %61, align 4
  %62 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 1
  store i32 %44, i32* %62, align 4
  br label %63

63:                                               ; preds = %13, %14, %29, %46, %51, %58
  %64 = phi i32 [ %8, %46 ], [ %11, %13 ], [ %37, %29 ], [ %6, %14 ], [ %8, %58 ], [ %56, %51 ]
  %65 = phi i32 [ 1, %46 ], [ 0, %13 ], [ 2, %29 ], [ 1, %14 ], [ 2, %58 ], [ 1, %51 ]
  %66 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = icmp slt i32 %67, %64
  br i1 %68, label %69, label %106

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = bitcast %"class.gfx::Rect"* %2 to i8*
  %77 = bitcast %"class.gfx::Rect"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 16, i1 false) #17
  store i32 %64, i32* %66, align 4
  %78 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 1
  store i32 %71, i32* %78, align 4
  %79 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 0
  store i32 %73, i32* %79, align 4
  %80 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 1
  store i32 %75, i32* %80, align 4
  %81 = add nuw nsw i32 %65, 1
  %82 = load i32, i32* %10, align 4
  %83 = load i32, i32* %5, align 4
  %84 = icmp slt i32 %82, %83
  br i1 %84, label %85, label %106

85:                                               ; preds = %69
  %86 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = bitcast %"class.gfx::Rect"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %92, i8* align 4 %76, i64 16, i1 false) #17
  store i32 %83, i32* %10, align 4
  store i32 %87, i32* %70, align 4
  store i32 %89, i32* %72, align 4
  store i32 %91, i32* %74, align 4
  %93 = add nuw nsw i32 %65, 2
  %94 = load i32, i32* %5, align 4
  %95 = load i32, i32* %7, align 4
  %96 = icmp slt i32 %94, %95
  br i1 %96, label %97, label %106

97:                                               ; preds = %85
  %98 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = bitcast %"class.gfx::Rect"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %92, i64 16, i1 false) #17
  store i32 %95, i32* %5, align 4
  store i32 %99, i32* %86, align 4
  store i32 %101, i32* %88, align 4
  store i32 %103, i32* %90, align 4
  %105 = add nuw nsw i32 %65, 3
  br label %106

106:                                              ; preds = %69, %97, %85, %63
  %107 = phi i32 [ %105, %97 ], [ %93, %85 ], [ %81, %69 ], [ %65, %63 ]
  ret i32 %107
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort5IRZN3gfx10RenderText22MergeIntersectingRectsERNS_6vectorINS1_4RectENS_9allocatorIS4_EEEEE3$_6PS4_EEjT0_SC_SC_SC_SC_T_"(%"class.gfx::Rect"* nocapture, %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.gfx::Rect"* nocapture, %"class.gfx::Rect"* nocapture) unnamed_addr #0 {
  %6 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN3gfx10RenderText22MergeIntersectingRectsERNS_6vectorINS1_4RectENS_9allocatorIS4_EEEEE3$_6PS4_EEjT0_SC_SC_SC_T_"(%"class.gfx::Rect"* %0, %"class.gfx::Rect"* %1, %"class.gfx::Rect"* %2, %"class.gfx::Rect"* %3)
  %7 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %8, %10
  br i1 %11, label %12, label %64

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = bitcast %"class.gfx::Rect"* %3 to i8*
  %20 = bitcast %"class.gfx::Rect"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 4 %20, i64 16, i1 false) #17
  store i32 %10, i32* %7, align 4
  %21 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 1
  store i32 %14, i32* %21, align 4
  %22 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 0
  store i32 %16, i32* %22, align 4
  %23 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 1
  store i32 %18, i32* %23, align 4
  %24 = add i32 %6, 1
  %25 = load i32, i32* %9, align 4
  %26 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %25, %27
  br i1 %28, label %29, label %64

29:                                               ; preds = %12
  %30 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = bitcast %"class.gfx::Rect"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %19, i64 16, i1 false) #17
  store i32 %27, i32* %9, align 4
  store i32 %31, i32* %13, align 4
  store i32 %33, i32* %15, align 4
  store i32 %35, i32* %17, align 4
  %37 = add i32 %6, 2
  %38 = load i32, i32* %26, align 4
  %39 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp slt i32 %38, %40
  br i1 %41, label %42, label %64

42:                                               ; preds = %29
  %43 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = bitcast %"class.gfx::Rect"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %49, i8* align 4 %36, i64 16, i1 false) #17
  store i32 %40, i32* %26, align 4
  store i32 %44, i32* %30, align 4
  store i32 %46, i32* %32, align 4
  store i32 %48, i32* %34, align 4
  %50 = add i32 %6, 3
  %51 = load i32, i32* %39, align 4
  %52 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp slt i32 %51, %53
  br i1 %54, label %55, label %64

55:                                               ; preds = %42
  %56 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = bitcast %"class.gfx::Rect"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %62, i8* align 4 %49, i64 16, i1 false) #17
  store i32 %53, i32* %39, align 4
  store i32 %57, i32* %43, align 4
  store i32 %59, i32* %45, align 4
  store i32 %61, i32* %47, align 4
  %63 = add i32 %6, 4
  br label %64

64:                                               ; preds = %12, %42, %55, %29, %5
  %65 = phi i32 [ %63, %55 ], [ %50, %42 ], [ %37, %29 ], [ %24, %12 ], [ %6, %5 ]
  ret i32 %65
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN3gfx10RenderText22MergeIntersectingRectsERNS_6vectorINS1_4RectENS_9allocatorIS4_EEEEE3$_6PS4_EEbT0_SC_T_"(%"class.gfx::Rect"*, %"class.gfx::Rect"*) unnamed_addr #0 {
  %3 = ptrtoint %"class.gfx::Rect"* %1 to i64
  %4 = ptrtoint %"class.gfx::Rect"* %0 to i64
  %5 = sub i64 %3, %4
  %6 = ashr exact i64 %5, 4
  switch i64 %6, label %97 [
    i64 0, label %203
    i64 1, label %203
    i64 2, label %7
    i64 3, label %26
    i64 4, label %86
    i64 5, label %91
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 -1
  %9 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %10, %12
  br i1 %13, label %14, label %203

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = bitcast %"class.gfx::Rect"* %0 to i8*
  %22 = bitcast %"class.gfx::Rect"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 %22, i64 16, i1 false) #17
  store i32 %12, i32* %9, align 4
  %23 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 -1, i32 0, i32 1
  store i32 %16, i32* %23, align 4
  %24 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 -1, i32 1, i32 0
  store i32 %18, i32* %24, align 4
  %25 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 -1, i32 1, i32 1
  store i32 %20, i32* %25, align 4
  br label %203

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 1
  %28 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 -1
  %29 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %27, i64 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %30, %32
  %34 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %28, i64 0, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp slt i32 %35, %30
  br i1 %33, label %61, label %37

37:                                               ; preds = %26
  br i1 %36, label %38, label %203

38:                                               ; preds = %37
  %39 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 1, i32 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 1, i32 1, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 1, i32 1, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = bitcast %"class.gfx::Rect"* %27 to i8*
  %46 = bitcast %"class.gfx::Rect"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* align 4 %46, i64 16, i1 false) #17
  store i32 %30, i32* %34, align 4
  %47 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 -1, i32 0, i32 1
  store i32 %40, i32* %47, align 4
  %48 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 -1, i32 1, i32 0
  store i32 %42, i32* %48, align 4
  %49 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 -1, i32 1, i32 1
  store i32 %44, i32* %49, align 4
  %50 = load i32, i32* %29, align 4
  %51 = load i32, i32* %31, align 4
  %52 = icmp slt i32 %50, %51
  br i1 %52, label %53, label %203

53:                                               ; preds = %38
  %54 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = bitcast %"class.gfx::Rect"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %60, i8* align 4 %45, i64 16, i1 false) #17
  store i32 %51, i32* %29, align 4
  store i32 %55, i32* %39, align 4
  store i32 %57, i32* %41, align 4
  store i32 %59, i32* %43, align 4
  br label %203

61:                                               ; preds = %26
  %62 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = bitcast %"class.gfx::Rect"* %0 to i8*
  br i1 %36, label %69, label %74

69:                                               ; preds = %61
  %70 = bitcast %"class.gfx::Rect"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 4 %70, i64 16, i1 false) #17
  store i32 %32, i32* %34, align 4
  %71 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 -1, i32 0, i32 1
  store i32 %63, i32* %71, align 4
  %72 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 -1, i32 1, i32 0
  store i32 %65, i32* %72, align 4
  %73 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 -1, i32 1, i32 1
  store i32 %67, i32* %73, align 4
  br label %203

74:                                               ; preds = %61
  %75 = bitcast %"class.gfx::Rect"* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 4 %75, i64 16, i1 false) #17
  store i32 %32, i32* %29, align 4
  %76 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 1, i32 0, i32 1
  store i32 %63, i32* %76, align 4
  %77 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 1, i32 1, i32 0
  store i32 %65, i32* %77, align 4
  %78 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 1, i32 1, i32 1
  store i32 %67, i32* %78, align 4
  %79 = load i32, i32* %34, align 4
  %80 = icmp slt i32 %79, %32
  br i1 %80, label %81, label %203

81:                                               ; preds = %74
  %82 = bitcast %"class.gfx::Rect"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %75, i8* align 4 %82, i64 16, i1 false) #17
  store i32 %32, i32* %34, align 4
  %83 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 -1, i32 0, i32 1
  store i32 %63, i32* %83, align 4
  %84 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 -1, i32 1, i32 0
  store i32 %65, i32* %84, align 4
  %85 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 -1, i32 1, i32 1
  store i32 %67, i32* %85, align 4
  br label %203

86:                                               ; preds = %2
  %87 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 1
  %88 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 2
  %89 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 -1
  %90 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN3gfx10RenderText22MergeIntersectingRectsERNS_6vectorINS1_4RectENS_9allocatorIS4_EEEEE3$_6PS4_EEjT0_SC_SC_SC_T_"(%"class.gfx::Rect"* %0, %"class.gfx::Rect"* %87, %"class.gfx::Rect"* %88, %"class.gfx::Rect"* %89)
  br label %203

91:                                               ; preds = %2
  %92 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 1
  %93 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 2
  %94 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 3
  %95 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 -1
  %96 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN3gfx10RenderText22MergeIntersectingRectsERNS_6vectorINS1_4RectENS_9allocatorIS4_EEEEE3$_6PS4_EEjT0_SC_SC_SC_SC_T_"(%"class.gfx::Rect"* %0, %"class.gfx::Rect"* %92, %"class.gfx::Rect"* %93, %"class.gfx::Rect"* %94, %"class.gfx::Rect"* %95)
  br label %203

97:                                               ; preds = %2
  %98 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 2
  %99 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 1
  %100 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %99, i64 0, i32 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = icmp slt i32 %101, %103
  %105 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %98, i64 0, i32 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = icmp slt i32 %106, %101
  br i1 %104, label %131, label %108

108:                                              ; preds = %97
  br i1 %107, label %109, label %155

109:                                              ; preds = %108
  %110 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 1, i32 0, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 1, i32 1, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 1, i32 1, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = bitcast %"class.gfx::Rect"* %99 to i8*
  %117 = bitcast %"class.gfx::Rect"* %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %116, i8* align 4 %117, i64 16, i1 false) #17
  store i32 %101, i32* %105, align 4
  %118 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 2, i32 0, i32 1
  store i32 %111, i32* %118, align 4
  %119 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 2, i32 1, i32 0
  store i32 %113, i32* %119, align 4
  %120 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 2, i32 1, i32 1
  store i32 %115, i32* %120, align 4
  %121 = load i32, i32* %100, align 4
  %122 = icmp slt i32 %121, %103
  br i1 %122, label %123, label %155

123:                                              ; preds = %109
  %124 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = bitcast %"class.gfx::Rect"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %130, i8* align 4 %116, i64 16, i1 false) #17
  store i32 %103, i32* %100, align 4
  store i32 %125, i32* %110, align 4
  store i32 %127, i32* %112, align 4
  store i32 %129, i32* %114, align 4
  br label %155

131:                                              ; preds = %97
  %132 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 1
  %133 = load i32, i32* %132, align 4
  %134 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = bitcast %"class.gfx::Rect"* %0 to i8*
  br i1 %107, label %139, label %144

139:                                              ; preds = %131
  %140 = bitcast %"class.gfx::Rect"* %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %138, i8* align 4 %140, i64 16, i1 false) #17
  store i32 %103, i32* %105, align 4
  %141 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 2, i32 0, i32 1
  store i32 %133, i32* %141, align 4
  %142 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 2, i32 1, i32 0
  store i32 %135, i32* %142, align 4
  %143 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 2, i32 1, i32 1
  store i32 %137, i32* %143, align 4
  br label %155

144:                                              ; preds = %131
  %145 = bitcast %"class.gfx::Rect"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %138, i8* align 4 %145, i64 16, i1 false) #17
  store i32 %103, i32* %100, align 4
  %146 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 1, i32 0, i32 1
  store i32 %133, i32* %146, align 4
  %147 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 1, i32 1, i32 0
  store i32 %135, i32* %147, align 4
  %148 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 1, i32 1, i32 1
  store i32 %137, i32* %148, align 4
  %149 = icmp slt i32 %106, %103
  br i1 %149, label %150, label %155

150:                                              ; preds = %144
  %151 = bitcast %"class.gfx::Rect"* %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %145, i8* align 4 %151, i64 16, i1 false) #17
  store i32 %103, i32* %105, align 4
  %152 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 2, i32 0, i32 1
  store i32 %133, i32* %152, align 4
  %153 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 2, i32 1, i32 0
  store i32 %135, i32* %153, align 4
  %154 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 2, i32 1, i32 1
  store i32 %137, i32* %154, align 4
  br label %155

155:                                              ; preds = %108, %109, %123, %139, %144, %150
  %156 = phi i32 [ %106, %108 ], [ %101, %109 ], [ %101, %123 ], [ %103, %139 ], [ %106, %144 ], [ %103, %150 ]
  %157 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 3
  %158 = icmp eq %"class.gfx::Rect"* %157, %1
  br i1 %158, label %203, label %159

159:                                              ; preds = %155, %197
  %160 = phi i32 [ %199, %197 ], [ %156, %155 ]
  %161 = phi %"class.gfx::Rect"* [ %195, %197 ], [ %157, %155 ]
  %162 = phi i32 [ %194, %197 ], [ 0, %155 ]
  %163 = phi %"class.gfx::Rect"* [ %161, %197 ], [ %98, %155 ]
  %164 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %161, i64 0, i32 0, i32 0
  %165 = load i32, i32* %164, align 4
  %166 = icmp slt i32 %165, %160
  br i1 %166, label %167, label %193

167:                                              ; preds = %159
  %168 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %161, i64 0, i32 0, i32 1
  %169 = load i32, i32* %168, align 4
  %170 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %161, i64 0, i32 1, i32 0
  %171 = load i32, i32* %170, align 4
  %172 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %161, i64 0, i32 1, i32 1
  %173 = load i32, i32* %172, align 4
  br label %174

174:                                              ; preds = %180, %167
  %175 = phi %"class.gfx::Rect"* [ %161, %167 ], [ %176, %180 ]
  %176 = phi %"class.gfx::Rect"* [ %163, %167 ], [ %181, %180 ]
  %177 = bitcast %"class.gfx::Rect"* %175 to i8*
  %178 = bitcast %"class.gfx::Rect"* %176 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %177, i8* align 4 %178, i64 16, i1 false)
  %179 = icmp eq %"class.gfx::Rect"* %176, %0
  br i1 %179, label %185, label %180

180:                                              ; preds = %174
  %181 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %176, i64 -1
  %182 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %181, i64 0, i32 0, i32 0
  %183 = load i32, i32* %182, align 4
  %184 = icmp slt i32 %165, %183
  br i1 %184, label %174, label %185

185:                                              ; preds = %174, %180
  %186 = phi %"class.gfx::Rect"* [ %0, %174 ], [ %176, %180 ]
  %187 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %186, i64 0, i32 0, i32 0
  store i32 %165, i32* %187, align 4
  %188 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %186, i64 0, i32 0, i32 1
  store i32 %169, i32* %188, align 4
  %189 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %186, i64 0, i32 1, i32 0
  store i32 %171, i32* %189, align 4
  %190 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %186, i64 0, i32 1, i32 1
  store i32 %173, i32* %190, align 4
  %191 = add i32 %162, 1
  %192 = icmp eq i32 %191, 8
  br i1 %192, label %200, label %193

193:                                              ; preds = %185, %159
  %194 = phi i32 [ %191, %185 ], [ %162, %159 ]
  %195 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %161, i64 1
  %196 = icmp eq %"class.gfx::Rect"* %195, %1
  br i1 %196, label %203, label %197

197:                                              ; preds = %193
  %198 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %161, i64 0, i32 0, i32 0
  %199 = load i32, i32* %198, align 4
  br label %159

200:                                              ; preds = %185
  %201 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %161, i64 1
  %202 = icmp eq %"class.gfx::Rect"* %201, %1
  br label %203

203:                                              ; preds = %193, %200, %155, %81, %74, %69, %53, %38, %37, %7, %14, %2, %2, %91, %86
  %204 = phi i1 [ true, %91 ], [ true, %86 ], [ true, %2 ], [ true, %2 ], [ true, %14 ], [ true, %7 ], [ true, %37 ], [ true, %38 ], [ true, %53 ], [ true, %69 ], [ true, %74 ], [ true, %81 ], [ true, %155 ], [ %202, %200 ], [ true, %193 ]
  ret i1 %204
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.269"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.269", %"class.std::__1::vector.269"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.gfx::Rect"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.269", %"class.std::__1::vector.269"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.gfx::Rect"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 4
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.gfx::Rect"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.gfx::Rect", %"class.gfx::Rect"* %13, i64 %18, i32 0, i32 0
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 16
  %25 = and i64 %24, -16
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #17
  %26 = ptrtoint %"class.gfx::Rect"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.269"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 4
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 1152921504606846975
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.269"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #19
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 4
  %41 = icmp ult i64 %40, 576460752303423487
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 3
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 1152921504606846975
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #19
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 1152921504606846975, %38 ]
  %52 = shl i64 %51, 4
  %53 = tail call i8* @_Znwm(i64 %52) #18
  %54 = bitcast i8* %53 to %"class.gfx::Rect"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"class.gfx::Rect"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %57, i64 %33
  %59 = bitcast %"class.gfx::Rect"* %58 to i8*
  %60 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %57, i64 %56
  %61 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %58, i64 %1
  %62 = shl nsw i64 %1, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 %62, i1 false)
  %63 = ptrtoint %"class.gfx::Rect"* %60 to i64
  %64 = ptrtoint %"class.gfx::Rect"* %61 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.269", %"class.std::__1::vector.269"* %0, i64 0, i32 0, i32 0
  %66 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %"class.gfx::Rect"* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 4
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %58, i64 %71
  %73 = ptrtoint %"class.gfx::Rect"* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %"class.gfx::Rect"* %72 to i8*
  %77 = bitcast %"class.gfx::Rect"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #17
  %78 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %"class.gfx::Rect"* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %"class.gfx::Rect"* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %"class.gfx::Rect"* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #18
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable }
attributes #17 = { nounwind }
attributes #18 = { builtin nounwind }
attributes #19 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !11}
!13 = distinct !{!13, !9}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !9}
!20 = distinct !{!20, !11}
!21 = distinct !{!21, !11}
!22 = distinct !{!22, !9}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !9}
!29 = distinct !{!29, !11}
!30 = distinct !{!30, !11}
!31 = distinct !{!31, !9}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !9}
!38 = distinct !{!38, !11}
!39 = distinct !{!39, !11}
!40 = distinct !{!40, !9}
!41 = !{!"branch_weights", i32 1, i32 2000}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN3gfx10RenderText25GetAdjacentSelectionModelERKNS_14SelectionModelENS_9BreakTypeENS_21VisualCursorDirectionE: argument 0"}
!44 = distinct !{!44, !"_ZN3gfx10RenderText25GetAdjacentSelectionModelERKNS_14SelectionModelENS_9BreakTypeENS_21VisualCursorDirectionE"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZN3gfx10RenderText25GetAdjacentSelectionModelERKNS_14SelectionModelENS_9BreakTypeENS_21VisualCursorDirectionE: argument 0"}
!47 = distinct !{!47, !"_ZN3gfx10RenderText25GetAdjacentSelectionModelERKNS_14SelectionModelENS_9BreakTypeENS_21VisualCursorDirectionE"}
!48 = distinct !{!48, !11}
!49 = distinct !{!49, !11}
!50 = distinct !{!50, !11}
!51 = distinct !{!51, !11}
!52 = distinct !{!52, !11}
!53 = !{!"branch_weights", i32 2000, i32 1}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZNK3gfx10RenderText20GetTextStyleIteratorEv: argument 0"}
!56 = distinct !{!56, !"_ZNK3gfx10RenderText20GetTextStyleIteratorEv"}
!57 = distinct !{!57, !11}
!58 = !{!59}
!59 = distinct !{!59, !60}
!60 = distinct !{!60, !"LVerDomain"}
!61 = !{!62}
!62 = distinct !{!62, !60}
!63 = distinct !{!63, !9}
!64 = distinct !{!64, !11}
!65 = distinct !{!65, !11}
!66 = distinct !{!66, !9}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!69 = distinct !{!69, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!70 = !{!71}
!71 = distinct !{!71, !72}
!72 = distinct !{!72, !"LVerDomain"}
!73 = !{!74}
!74 = distinct !{!74, !72}
!75 = !{!68, !71}
!76 = distinct !{!76, !9}
!77 = distinct !{!77, !11}
!78 = distinct !{!78, !11}
!79 = distinct !{!79, !9}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!82 = distinct !{!82, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!83 = !{!84}
!84 = distinct !{!84, !85}
!85 = distinct !{!85, !"LVerDomain"}
!86 = !{!87}
!87 = distinct !{!87, !85}
!88 = !{!81, !84}
!89 = distinct !{!89, !9}
!90 = distinct !{!90, !11}
!91 = distinct !{!91, !11}
!92 = distinct !{!92, !9}
!93 = !{!94}
!94 = distinct !{!94, !95}
!95 = distinct !{!95, !"LVerDomain"}
!96 = !{!97}
!97 = distinct !{!97, !95}
!98 = distinct !{!98, !9}
!99 = distinct !{!99, !11}
!100 = distinct !{!100, !11}
!101 = distinct !{!101, !9}
!102 = !{!103}
!103 = distinct !{!103, !104}
!104 = distinct !{!104, !"LVerDomain"}
!105 = !{!106}
!106 = distinct !{!106, !104}
!107 = distinct !{!107, !9}
!108 = distinct !{!108, !11}
!109 = distinct !{!109, !11}
!110 = distinct !{!110, !9}
!111 = !{!112}
!112 = distinct !{!112, !113}
!113 = distinct !{!113, !"LVerDomain"}
!114 = !{!115}
!115 = distinct !{!115, !113}
!116 = distinct !{!116, !9}
!117 = distinct !{!117, !11}
!118 = distinct !{!118, !11}
!119 = distinct !{!119, !9}
!120 = !{!121}
!121 = distinct !{!121, !122}
!122 = distinct !{!122, !"LVerDomain"}
!123 = !{!124}
!124 = distinct !{!124, !122}
!125 = distinct !{!125, !9}
!126 = distinct !{!126, !11}
!127 = distinct !{!127, !11}
!128 = distinct !{!128, !9}
!129 = !{!130}
!130 = distinct !{!130, !131}
!131 = distinct !{!131, !"LVerDomain"}
!132 = !{!133}
!133 = distinct !{!133, !131}
!134 = distinct !{!134, !9}
!135 = distinct !{!135, !11}
!136 = distinct !{!136, !11}
!137 = distinct !{!137, !9}
!138 = distinct !{!138, !11}
!139 = !{!140}
!140 = distinct !{!140, !141, !"_ZN3gfx12_GLOBAL__N_116CreateFadeShaderERKNS_8FontListERKNS_4RectES6_S6_j: argument 0"}
!141 = distinct !{!141, !"_ZN3gfx12_GLOBAL__N_116CreateFadeShaderERKNS_8FontListERKNS_4RectES6_S6_j"}
!142 = !{!143}
!143 = distinct !{!143, !144}
!144 = distinct !{!144, !"LVerDomain"}
!145 = !{!146}
!146 = distinct !{!146, !144}
!147 = distinct !{!147, !9}
!148 = distinct !{!148, !11}
!149 = distinct !{!149, !11}
!150 = distinct !{!150, !9}
!151 = !{!152}
!152 = distinct !{!152, !153}
!153 = distinct !{!153, !"LVerDomain"}
!154 = !{!155}
!155 = distinct !{!155, !153}
!156 = distinct !{!156, !9}
!157 = distinct !{!157, !11}
!158 = distinct !{!158, !11}
!159 = distinct !{!159, !9}
!160 = !{!161}
!161 = distinct !{!161, !162}
!162 = distinct !{!162, !"LVerDomain"}
!163 = !{!164}
!164 = distinct !{!164, !162}
!165 = distinct !{!165, !9}
!166 = distinct !{!166, !11}
!167 = distinct !{!167, !11}
!168 = distinct !{!168, !9}
!169 = !{!170}
!170 = distinct !{!170, !171, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!171 = distinct !{!171, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!172 = !{!173}
!173 = distinct !{!173, !174}
!174 = distinct !{!174, !"LVerDomain"}
!175 = !{!176}
!176 = distinct !{!176, !174}
!177 = !{!170, !173}
!178 = distinct !{!178, !9}
!179 = distinct !{!179, !11}
!180 = distinct !{!180, !11}
!181 = distinct !{!181, !9}
!182 = !{!183}
!183 = distinct !{!183, !184}
!184 = distinct !{!184, !"LVerDomain"}
!185 = !{!186}
!186 = distinct !{!186, !184}
!187 = distinct !{!187, !9}
!188 = distinct !{!188, !11}
!189 = distinct !{!189, !11}
!190 = distinct !{!190, !9}
!191 = !{!192}
!192 = distinct !{!192, !193, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!193 = distinct !{!193, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!194 = !{!195}
!195 = distinct !{!195, !196}
!196 = distinct !{!196, !"LVerDomain"}
!197 = !{!198}
!198 = distinct !{!198, !196}
!199 = !{!192, !195}
!200 = distinct !{!200, !9}
!201 = distinct !{!201, !11}
!202 = distinct !{!202, !11}
!203 = distinct !{!203, !9}
!204 = !{!205}
!205 = distinct !{!205, !206}
!206 = distinct !{!206, !"LVerDomain"}
!207 = !{!208}
!208 = distinct !{!208, !206}
!209 = distinct !{!209, !9}
!210 = distinct !{!210, !11}
!211 = distinct !{!211, !11}
!212 = distinct !{!212, !9}
!213 = !{!214}
!214 = distinct !{!214, !215}
!215 = distinct !{!215, !"LVerDomain"}
!216 = !{!217}
!217 = distinct !{!217, !215}
!218 = distinct !{!218, !9}
!219 = distinct !{!219, !11}
!220 = distinct !{!220, !11}
!221 = distinct !{!221, !9}
!222 = distinct !{!222, !11}
!223 = distinct !{!223, !11}
!224 = distinct !{!224, !11}
!225 = distinct !{!225, !11}
!226 = distinct !{!226, !11}
!227 = !{!228}
!228 = distinct !{!228, !229}
!229 = distinct !{!229, !"LVerDomain"}
!230 = !{!231}
!231 = distinct !{!231, !229}
!232 = distinct !{!232, !9}
!233 = distinct !{!233, !11}
!234 = distinct !{!234, !11}
!235 = distinct !{!235, !9}
!236 = distinct !{!236, !9}
!237 = distinct !{!237, !11}
!238 = distinct !{!238, !239, !9}
!239 = !{!"llvm.loop.unroll.runtime.disable"}
!240 = !{!241}
!241 = distinct !{!241, !242}
!242 = distinct !{!242, !"LVerDomain"}
!243 = !{!244}
!244 = distinct !{!244, !242}
!245 = distinct !{!245, !9}
!246 = distinct !{!246, !11}
!247 = distinct !{!247, !11}
!248 = distinct !{!248, !9}
!249 = distinct !{!249, !11}
!250 = distinct !{!250, !11}
!251 = distinct !{!251, !11}
!252 = distinct !{!252, !11}
!253 = distinct !{!253, !11}
!254 = distinct !{!254, !11}
!255 = distinct !{!255, !11}
!256 = distinct !{!256, !11}
!257 = distinct !{!257, !11}
!258 = distinct !{!258, !11}
!259 = distinct !{!259, !11}
!260 = distinct !{!260, !11}
!261 = distinct !{!261, !11}
!262 = distinct !{!262, !11}
!263 = distinct !{!263, !11}
!264 = distinct !{!264, !11}
!265 = distinct !{!265, !11}
!266 = distinct !{!266, !11}
!267 = distinct !{!267, !11}
!268 = distinct !{!268, !11}
!269 = distinct !{!269, !11}
!270 = distinct !{!270, !11}
!271 = distinct !{!271, !11}
!272 = distinct !{!272, !11}
!273 = distinct !{!273, !11}
!274 = !{!275}
!275 = distinct !{!275, !276}
!276 = distinct !{!276, !"LVerDomain"}
!277 = !{!278}
!278 = distinct !{!278, !276}
!279 = distinct !{!279, !9}
!280 = distinct !{!280, !11}
!281 = distinct !{!281, !11}
!282 = distinct !{!282, !9}
!283 = !{!284}
!284 = distinct !{!284, !285}
!285 = distinct !{!285, !"LVerDomain"}
!286 = !{!287}
!287 = distinct !{!287, !285}
!288 = distinct !{!288, !9}
!289 = distinct !{!289, !11}
!290 = distinct !{!290, !11}
!291 = distinct !{!291, !9}
!292 = !{!293}
!293 = distinct !{!293, !294}
!294 = distinct !{!294, !"LVerDomain"}
!295 = !{!296}
!296 = distinct !{!296, !294}
!297 = distinct !{!297, !9}
!298 = distinct !{!298, !11}
!299 = distinct !{!299, !11}
!300 = distinct !{!300, !9}
!301 = distinct !{!301, !11}
!302 = distinct !{!302, !11}
!303 = distinct !{!303, !11}
!304 = distinct !{!304, !11}
!305 = distinct !{!305, !11}
