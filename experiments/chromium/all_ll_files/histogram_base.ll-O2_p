; ModuleID = '../../base/metrics/histogram_base.cc'
source_filename = "../../base/metrics/histogram_base.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [24 x i8] }
%"class.base::NoDestructor.60" = type { [40 x i8] }
%"struct.std::__1::atomic.70" = type { %"struct.std::__1::__atomic_base.71" }
%"struct.std::__1::__atomic_base.71" = type { %"struct.std::__1::__cxx_atomic_impl.72" }
%"struct.std::__1::__cxx_atomic_impl.72" = type { %"struct.std::__1::__cxx_atomic_base_impl.73" }
%"struct.std::__1::__cxx_atomic_base_impl.73" = type { void (i8*, i64, i32)* }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic", [4 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::PickleIterator" = type { i8*, i64, i64 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Pickle" = type { i32 (...)**, %"struct.base::Pickle::Header"*, i64, i64, i64 }
%"struct.base::Pickle::Header" = type { i32 }
%"class.base::HistogramSamples" = type { i32 (...)**, %"struct.base::HistogramSamples::Metadata"* }
%"struct.base::HistogramSamples::Metadata" = type { i64, i64, i32, %"union.base::HistogramSamples::AtomicSingleSample" }
%"union.base::HistogramSamples::AtomicSingleSample" = type { i32 }
%class.JSONStringValueSerializer = type <{ %"class.base::ValueSerializer", %"class.std::__1::basic_string"*, i8, [7 x i8] }>
%"class.base::ValueSerializer" = type { i32 (...)** }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.4" }
%"union.absl::variant_internal::DestructibleUnionImpl.4" = type { %"union.absl::variant_internal::DestructibleUnionImpl.5" }
%"union.absl::variant_internal::DestructibleUnionImpl.5" = type { %"union.absl::variant_internal::DestructibleUnionImpl.6" }
%"union.absl::variant_internal::DestructibleUnionImpl.6" = type { %"union.absl::variant_internal::DestructibleUnionImpl.7" }
%"union.absl::variant_internal::DestructibleUnionImpl.7" = type { %"class.std::__1::basic_string" }
%"class.base::ListValue" = type { %"class.base::Value" }
%"class.base::SampleCountIterator" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.43" }
%"struct.std::__1::atomic.43" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__atomic_base.45" }
%"struct.std::__1::__atomic_base.45" = type { %"struct.std::__1::__cxx_atomic_impl.46" }
%"struct.std::__1::__cxx_atomic_impl.46" = type { %"struct.std::__1::__cxx_atomic_base_impl.47" }
%"struct.std::__1::__cxx_atomic_base_impl.47" = type { i32 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.62", %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.std::__1::basic_string" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@.str = private unnamed_addr constant [10 x i8] c"HISTOGRAM\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"LINEAR_HISTOGRAM\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"BOOLEAN_HISTOGRAM\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"CUSTOM_HISTOGRAM\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"SPARSE_HISTOGRAM\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"DUMMY_HISTOGRAM\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"UNKNOWN\00", align 1
@_ZN4base13HistogramBase15kSampleType_MAXE = hidden local_unnamed_addr constant i32 2147483647, align 4
@_ZTVN4base13HistogramBaseE = hidden unnamed_addr constant { [21 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::HistogramBase"*)* @_ZN4base13HistogramBaseD2Ev to i8*), i8* bitcast (void (%"class.base::HistogramBase"*)* @_ZN4base13HistogramBaseD0Ev to i8*), i8* bitcast (void (%"class.base::HistogramBase"*, %"class.base::BasicStringPiece"*)* @_ZNK4base13HistogramBase9CheckNameERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.base::HistogramBase"*, %"class.base::HistogramSamples"*)* @_ZNK4base13HistogramBase14FindCorruptionERKNS_16HistogramSamplesE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.base::HistogramBase"*, %"class.std::__1::basic_string"*)* @_ZNK4base13HistogramBase10WriteAsciiEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.base::HistogramBase"*)* @_ZNK4base13HistogramBase25ValidateHistogramContentsEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str.7 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"count\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"sum\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"flags\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"params\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"buckets\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"pid\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"low\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"high\00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"O\00", align 1
@.str.18 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c" (%d = %3.1f%%)\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"header\00", align 1
@.str.22 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.23 = private unnamed_addr constant [5 x i8] c"body\00", align 1
@_ZZN4base13HistogramBase16GetPermanentNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE15permanent_names = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN4base13HistogramBase16GetPermanentNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE15permanent_names = internal global i64 0, align 8
@_ZZN4base13HistogramBase16GetPermanentNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE20permanent_names_lock = internal global %"class.base::NoDestructor.60" zeroinitializer, align 8
@_ZGVZN4base13HistogramBase16GetPermanentNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE20permanent_names_lock = internal global i64 0, align 8
@_ZN4base18StatisticsRecorder23global_sample_callback_E = external local_unnamed_addr global %"struct.std::__1::atomic.70", align 8

@_ZN4base13HistogramBaseD1Ev = hidden unnamed_addr alias void (%"class.base::HistogramBase"*), void (%"class.base::HistogramBase"*)* @_ZN4base13HistogramBaseD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base21HistogramTypeToStringENS_13HistogramTypeE(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #0 {
  switch i32 %1, label %36 [
    i32 0, label %3
    i32 1, label %8
    i32 2, label %14
    i32 3, label %19
    i32 4, label %25
    i32 5, label %31
  ]

3:                                                ; preds = %2
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  store i8 9, i8* %5, align 1
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i64 9, i1 false) #16
  %7 = getelementptr inbounds i8, i8* %6, i64 9
  store i8 0, i8* %7, align 1
  br label %41

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 16, i8* %10, align 1
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), i64 16, i1 false) #16
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %13 = bitcast i64* %12 to i8*
  store i8 0, i8* %13, align 8
  br label %41

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  store i8 17, i8* %16, align 1
  %17 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 1 getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i64 17, i1 false) #16
  %18 = getelementptr inbounds i8, i8* %17, i64 17
  store i8 0, i8* %18, align 1
  br label %41

19:                                               ; preds = %2
  %20 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  store i8 16, i8* %21, align 1
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i64 16, i1 false) #16
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %24 = bitcast i64* %23 to i8*
  store i8 0, i8* %24, align 8
  br label %41

25:                                               ; preds = %2
  %26 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  store i8 16, i8* %27, align 1
  %28 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0), i64 16, i1 false) #16
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %30 = bitcast i64* %29 to i8*
  store i8 0, i8* %30, align 8
  br label %41

31:                                               ; preds = %2
  %32 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  store i8 15, i8* %33, align 1
  %34 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 15, i1 false) #16
  %35 = getelementptr inbounds i8, i8* %34, i64 15
  store i8 0, i8* %35, align 1
  br label %41

36:                                               ; preds = %2
  %37 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  store i8 7, i8* %38, align 1
  %39 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i64 7, i1 false) #16
  %40 = getelementptr inbounds i8, i8* %39, i64 7
  store i8 0, i8* %40, align 1
  br label %41

41:                                               ; preds = %36, %31, %25, %19, %14, %8, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base24DeserializeHistogramInfoEPNS_14PickleIteratorE(%"class.base::PickleIterator"*) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #16
  store i32 -1431655766, i32* %2, align 4
  %4 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %0, i32* nonnull %2) #16
  br i1 %4, label %5, label %17

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4
  switch i32 %6, label %17 [
    i32 0, label %7
    i32 1, label %9
    i32 2, label %11
    i32 3, label %13
    i32 4, label %15
  ]

7:                                                ; preds = %5
  %8 = call %"class.base::HistogramBase"* @_ZN4base9Histogram19DeserializeInfoImplEPNS_14PickleIteratorE(%"class.base::PickleIterator"* %0) #16
  br label %17

9:                                                ; preds = %5
  %10 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram19DeserializeInfoImplEPNS_14PickleIteratorE(%"class.base::PickleIterator"* %0) #16
  br label %17

11:                                               ; preds = %5
  %12 = call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram19DeserializeInfoImplEPNS_14PickleIteratorE(%"class.base::PickleIterator"* %0) #16
  br label %17

13:                                               ; preds = %5
  %14 = call %"class.base::HistogramBase"* @_ZN4base15CustomHistogram19DeserializeInfoImplEPNS_14PickleIteratorE(%"class.base::PickleIterator"* %0) #16
  br label %17

15:                                               ; preds = %5
  %16 = call %"class.base::HistogramBase"* @_ZN4base15SparseHistogram19DeserializeInfoImplEPNS_14PickleIteratorE(%"class.base::PickleIterator"* %0) #16
  br label %17

17:                                               ; preds = %5, %1, %15, %13, %11, %9, %7
  %18 = phi %"class.base::HistogramBase"* [ %16, %15 ], [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], [ %8, %7 ], [ null, %1 ], [ null, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #16
  ret %"class.base::HistogramBase"* %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"*, i32*) local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base9Histogram19DeserializeInfoImplEPNS_14PickleIteratorE(%"class.base::PickleIterator"*) local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram19DeserializeInfoImplEPNS_14PickleIteratorE(%"class.base::PickleIterator"*) local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram19DeserializeInfoImplEPNS_14PickleIteratorE(%"class.base::PickleIterator"*) local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base15CustomHistogram19DeserializeInfoImplEPNS_14PickleIteratorE(%"class.base::PickleIterator"*) local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base15SparseHistogram19DeserializeInfoImplEPNS_14PickleIteratorE(%"class.base::PickleIterator"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base13HistogramBaseC2EPKc(%"class.base::HistogramBase"* nocapture, i8*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.base::HistogramBase", %"class.base::HistogramBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTVN4base13HistogramBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.base::HistogramBase", %"class.base::HistogramBase"* %0, i64 0, i32 1
  store i8* %1, i8** %4, align 8
  %5 = getelementptr inbounds %"class.base::HistogramBase", %"class.base::HistogramBase"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %5, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base13HistogramBaseD2Ev(%"class.base::HistogramBase"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN4base13HistogramBaseD0Ev(%"class.base::HistogramBase"* nocapture readnone) unnamed_addr #5 align 2 {
  tail call void @llvm.trap() #17
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK4base13HistogramBase9CheckNameERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::HistogramBase"* nocapture, %"class.base::BasicStringPiece"* nocapture dereferenceable(16)) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base13HistogramBase8SetFlagsEi(%"class.base::HistogramBase"* nocapture, i32) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.base::HistogramBase", %"class.base::HistogramBase"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = atomicrmw or i32* %3, i32 %1 monotonic
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base13HistogramBase10ClearFlagsEi(%"class.base::HistogramBase"* nocapture, i32) local_unnamed_addr #7 align 2 {
  %3 = xor i32 %1, -1
  %4 = getelementptr inbounds %"class.base::HistogramBase", %"class.base::HistogramBase"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = atomicrmw and i32* %4, i32 %3 monotonic
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base13HistogramBase9AddScaledEiii(%"class.base::HistogramBase"*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = sdiv i32 %2, %3
  %6 = sext i32 %5 to i64
  %7 = sext i32 %2 to i64
  %8 = sext i32 %3 to i64
  %9 = mul nsw i64 %6, %8
  %10 = sub nsw i64 %7, %9
  %11 = add nsw i32 %3, -1
  %12 = tail call i32 @_ZN4base7RandIntEii(i32 0, i32 %11) #16
  %13 = sext i32 %12 to i64
  %14 = icmp sgt i64 %10, %13
  %15 = zext i1 %14 to i64
  %16 = add nsw i64 %15, %6
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %4
  %19 = trunc i64 %16 to i32
  %20 = bitcast %"class.base::HistogramBase"* %0 to void (%"class.base::HistogramBase"*, i32, i32)***
  %21 = load void (%"class.base::HistogramBase"*, i32, i32)**, void (%"class.base::HistogramBase"*, i32, i32)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32, i32)*, void (%"class.base::HistogramBase"*, i32, i32)** %21, i64 7
  %23 = load void (%"class.base::HistogramBase"*, i32, i32)*, void (%"class.base::HistogramBase"*, i32, i32)** %22, align 8
  tail call void %23(%"class.base::HistogramBase"* %0, i32 %1, i32 %19) #16
  br label %24

24:                                               ; preds = %4, %18
  ret void
}

declare i32 @_ZN4base7RandIntEii(i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base13HistogramBase7AddKiloEii(%"class.base::HistogramBase"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = sdiv i32 %2, 1000
  %5 = sext i32 %4 to i64
  %6 = sext i32 %2 to i64
  %7 = mul nsw i64 %5, -1000
  %8 = add nsw i64 %7, %6
  %9 = tail call i32 @_ZN4base7RandIntEii(i32 0, i32 999) #16
  %10 = sext i32 %9 to i64
  %11 = icmp sgt i64 %8, %10
  %12 = zext i1 %11 to i64
  %13 = add nsw i64 %12, %5
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %3
  %16 = trunc i64 %13 to i32
  %17 = bitcast %"class.base::HistogramBase"* %0 to void (%"class.base::HistogramBase"*, i32, i32)***
  %18 = load void (%"class.base::HistogramBase"*, i32, i32)**, void (%"class.base::HistogramBase"*, i32, i32)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32, i32)*, void (%"class.base::HistogramBase"*, i32, i32)** %18, i64 7
  %20 = load void (%"class.base::HistogramBase"*, i32, i32)*, void (%"class.base::HistogramBase"*, i32, i32)** %19, align 8
  tail call void %20(%"class.base::HistogramBase"* %0, i32 %1, i32 %16) #16
  br label %21

21:                                               ; preds = %3, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base13HistogramBase6AddKiBEii(%"class.base::HistogramBase"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = sdiv i32 %2, 1024
  %5 = sext i32 %4 to i64
  %6 = sext i32 %2 to i64
  %7 = shl nsw i64 %5, 10
  %8 = sub nsw i64 %6, %7
  %9 = tail call i32 @_ZN4base7RandIntEii(i32 0, i32 1023) #16
  %10 = sext i32 %9 to i64
  %11 = icmp sgt i64 %8, %10
  %12 = zext i1 %11 to i64
  %13 = add nsw i64 %12, %5
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %3
  %16 = trunc i64 %13 to i32
  %17 = bitcast %"class.base::HistogramBase"* %0 to void (%"class.base::HistogramBase"*, i32, i32)***
  %18 = load void (%"class.base::HistogramBase"*, i32, i32)**, void (%"class.base::HistogramBase"*, i32, i32)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32, i32)*, void (%"class.base::HistogramBase"*, i32, i32)** %18, i64 7
  %20 = load void (%"class.base::HistogramBase"*, i32, i32)*, void (%"class.base::HistogramBase"*, i32, i32)** %19, align 8
  tail call void %20(%"class.base::HistogramBase"* %0, i32 %1, i32 %16) #16
  br label %21

21:                                               ; preds = %3, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = tail call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* %1) #16
  %4 = tail call i1 @llvm.is.constant.i64(i64 %3) #16
  br i1 %4, label %12, label %5

5:                                                ; preds = %2
  %6 = icmp slt i64 %3, 0
  %7 = select i1 %6, i32 -2147483648, i32 2147483647
  %8 = add i64 %3, 2147483648
  %9 = icmp ult i64 %8, 4294967296
  %10 = trunc i64 %3 to i32
  %11 = select i1 %9, i32 %10, i32 %7, !prof !2
  br label %18

12:                                               ; preds = %2
  %13 = icmp sgt i64 %3, 2147483647
  br i1 %13, label %18, label %14

14:                                               ; preds = %12
  %15 = icmp sgt i64 %3, -2147483648
  %16 = select i1 %15, i64 %3, i64 -2147483648
  %17 = trunc i64 %16 to i32
  br label %18

18:                                               ; preds = %5, %12, %14
  %19 = phi i32 [ %11, %5 ], [ %17, %14 ], [ 2147483647, %12 ]
  %20 = bitcast %"class.base::HistogramBase"* %0 to void (%"class.base::HistogramBase"*, i32)***
  %21 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %21, i64 6
  %23 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %22, align 8
  tail call void %23(%"class.base::HistogramBase"* %0, i32 %19) #16
  ret void
}

declare i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base13HistogramBase30AddTimeMicrosecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN4base9TimeTicks16IsHighResolutionEv() #16
  br i1 %3, label %4, label %27

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = tail call i1 @llvm.is.constant.i64(i64 %6) #16
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = icmp slt i64 %6, 0
  %10 = select i1 %9, i32 -2147483648, i32 2147483647
  %11 = add i64 %6, 2147483648
  %12 = icmp ult i64 %11, 4294967296
  %13 = trunc i64 %6 to i32
  %14 = select i1 %12, i32 %13, i32 %10, !prof !2
  br label %21

15:                                               ; preds = %4
  %16 = icmp sgt i64 %6, 2147483647
  br i1 %16, label %21, label %17

17:                                               ; preds = %15
  %18 = icmp sgt i64 %6, -2147483648
  %19 = select i1 %18, i64 %6, i64 -2147483648
  %20 = trunc i64 %19 to i32
  br label %21

21:                                               ; preds = %8, %15, %17
  %22 = phi i32 [ %14, %8 ], [ %20, %17 ], [ 2147483647, %15 ]
  %23 = bitcast %"class.base::HistogramBase"* %0 to void (%"class.base::HistogramBase"*, i32)***
  %24 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %24, i64 6
  %26 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %25, align 8
  tail call void %26(%"class.base::HistogramBase"* %0, i32 %22) #16
  br label %27

27:                                               ; preds = %21, %2
  ret void
}

declare zeroext i1 @_ZN4base9TimeTicks16IsHighResolutionEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i32
  %4 = bitcast %"class.base::HistogramBase"* %0 to void (%"class.base::HistogramBase"*, i32)***
  %5 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %5, i64 6
  %7 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %6, align 8
  tail call void %7(%"class.base::HistogramBase"* %0, i32 %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base13HistogramBase13SerializeInfoEPNS_6PickleE(%"class.base::HistogramBase"*, %"class.base::Pickle"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast %"class.base::HistogramBase"* %0 to i32 (%"class.base::HistogramBase"*)***
  %5 = load i32 (%"class.base::HistogramBase"*)**, i32 (%"class.base::HistogramBase"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.base::HistogramBase"*)*, i32 (%"class.base::HistogramBase"*)** %5, i64 4
  %7 = load i32 (%"class.base::HistogramBase"*)*, i32 (%"class.base::HistogramBase"*)** %6, align 8
  %8 = tail call i32 %7(%"class.base::HistogramBase"* %0) #16
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9)
  store i32 %8, i32* %3, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %1, i8* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9)
  %10 = bitcast %"class.base::HistogramBase"* %0 to void (%"class.base::HistogramBase"*, %"class.base::Pickle"*)***
  %11 = load void (%"class.base::HistogramBase"*, %"class.base::Pickle"*)**, void (%"class.base::HistogramBase"*, %"class.base::Pickle"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.base::HistogramBase"*, %"class.base::Pickle"*)*, void (%"class.base::HistogramBase"*, %"class.base::Pickle"*)** %11, i64 17
  %13 = load void (%"class.base::HistogramBase"*, %"class.base::Pickle"*)*, void (%"class.base::HistogramBase"*, %"class.base::Pickle"*)** %12, align 8
  call void %13(%"class.base::HistogramBase"* %0, %"class.base::Pickle"* %1) #16
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK4base13HistogramBase14FindCorruptionERKNS_16HistogramSamplesE(%"class.base::HistogramBase"* nocapture readnone, %"class.base::HistogramSamples"* nocapture readnone dereferenceable(16)) unnamed_addr #4 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK4base13HistogramBase25ValidateHistogramContentsEv(%"class.base::HistogramBase"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base13HistogramBase9WriteJSONEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_18JSONVerbosityLevelE(%"class.base::HistogramBase"*, %"class.std::__1::basic_string"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca %class.JSONStringValueSerializer, align 8
  %7 = alloca %"class.base::DictionaryValue", align 8
  %8 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #16
  store i32 0, i32* %4, align 4
  %9 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  store i64 0, i64* %5, align 8
  %10 = tail call i8* @_Znwm(i64 32) #18
  %11 = bitcast i8* %10 to %"class.base::ListValue"*
  tail call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %11) #16
  %12 = ptrtoint i8* %10 to i64
  call void @_ZNK4base13HistogramBase21GetCountAndBucketDataEPiPlPNS_9ListValueE(%"class.base::HistogramBase"* %0, i32* nonnull %4, i64* nonnull %5, %"class.base::ListValue"* nonnull %11)
  %13 = tail call i8* @_Znwm(i64 32) #18
  %14 = bitcast i8* %13 to %"class.base::DictionaryValue"*
  tail call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %14) #16
  %15 = bitcast %"class.base::HistogramBase"* %0 to void (%"class.base::HistogramBase"*, %"class.base::DictionaryValue"*)***
  %16 = load void (%"class.base::HistogramBase"*, %"class.base::DictionaryValue"*)**, void (%"class.base::HistogramBase"*, %"class.base::DictionaryValue"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.base::HistogramBase"*, %"class.base::DictionaryValue"*)*, void (%"class.base::HistogramBase"*, %"class.base::DictionaryValue"*)** %16, i64 18
  %18 = load void (%"class.base::HistogramBase"*, %"class.base::DictionaryValue"*)*, void (%"class.base::HistogramBase"*, %"class.base::DictionaryValue"*)** %17, align 8
  tail call void %18(%"class.base::HistogramBase"* %0, %"class.base::DictionaryValue"* nonnull %14) #16
  %19 = bitcast %class.JSONStringValueSerializer* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #16
  %20 = bitcast %class.JSONStringValueSerializer* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false)
  call void @_ZN25JSONStringValueSerializerC1EPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.JSONStringValueSerializer* nonnull %6, %"class.std::__1::basic_string"* %1) #16
  %21 = bitcast %"class.base::DictionaryValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #16
  %22 = bitcast %"class.base::DictionaryValue"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 32, i1 false)
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %7) #16
  %23 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %7, i64 0, i32 0
  %24 = getelementptr inbounds %"class.base::HistogramBase", %"class.base::HistogramBase"* %0, i64 0, i32 1
  %25 = load i8*, i8** %24, align 8
  %26 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKc(%"class.base::Value"* nonnull %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i64 4, i8* %25) #16
  %27 = load i32, i32* %4, align 4
  %28 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %23, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i64 5, i32 %27) #16
  %29 = load i64, i64* %5, align 8
  %30 = sitofp i64 %29 to double
  %31 = call %"class.base::Value"* @_ZN4base5Value12SetDoubleKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEd(%"class.base::Value"* nonnull %23, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), i64 3, double %30) #16
  %32 = getelementptr inbounds %"class.base::HistogramBase", %"class.base::HistogramBase"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %23, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), i64 5, i32 %33) #16
  %35 = bitcast i8* %13 to %"class.base::Value"*
  %36 = call %"class.base::Value"* @_ZN4base15DictionaryValue3SetENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0), i64 6, %"class.base::Value"* nonnull %35) #16
  %37 = icmp eq i32 %2, 1
  br i1 %37, label %41, label %38

38:                                               ; preds = %3
  %39 = bitcast i8* %10 to %"class.base::Value"*
  %40 = call %"class.base::Value"* @_ZN4base15DictionaryValue3SetENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i64 7, %"class.base::Value"* nonnull %39) #16
  br label %41

41:                                               ; preds = %38, %3
  %42 = phi i64 [ %12, %3 ], [ 0, %38 ]
  %43 = call i32 @_ZN4base21GetUniqueIdForProcessEv() #16
  %44 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %23, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i64 3, i32 %43) #16
  %45 = call zeroext i1 @_ZN25JSONStringValueSerializer9SerializeERKN4base5ValueE(%class.JSONStringValueSerializer* nonnull %6, %"class.base::Value"* nonnull dereferenceable(32) %23) #16
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %23) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #16
  call void @_ZN25JSONStringValueSerializerD1Ev(%class.JSONStringValueSerializer* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #16
  %46 = icmp eq i64 %42, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %41
  %48 = inttoptr i64 %42 to %"class.base::ListValue"*
  %49 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %48, i64 0, i32 0
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %49) #16
  %50 = inttoptr i64 %42 to i8*
  call void @_ZdlPv(i8* %50) #18
  br label %51

51:                                               ; preds = %41, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #16
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base13HistogramBase21GetCountAndBucketDataEPiPlPNS_9ListValueE(%"class.base::HistogramBase"*, i32* nocapture, i64* nocapture, %"class.base::ListValue"*) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = bitcast %"class.base::HistogramBase"* %0 to %"class.base::HistogramSamples"* (%"class.base::HistogramBase"*)***
  %9 = load %"class.base::HistogramSamples"* (%"class.base::HistogramBase"*)**, %"class.base::HistogramSamples"* (%"class.base::HistogramBase"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.base::HistogramSamples"* (%"class.base::HistogramBase"*)*, %"class.base::HistogramSamples"* (%"class.base::HistogramBase"*)** %9, i64 11
  %11 = load %"class.base::HistogramSamples"* (%"class.base::HistogramBase"*)*, %"class.base::HistogramSamples"* (%"class.base::HistogramBase"*)** %10, align 8
  %12 = tail call %"class.base::HistogramSamples"* %11(%"class.base::HistogramBase"* %0) #16
  %13 = bitcast %"class.base::HistogramSamples"* %12 to i32 (%"class.base::HistogramSamples"*)***
  %14 = load i32 (%"class.base::HistogramSamples"*)**, i32 (%"class.base::HistogramSamples"*)*** %13, align 8
  %15 = getelementptr inbounds i32 (%"class.base::HistogramSamples"*)*, i32 (%"class.base::HistogramSamples"*)** %14, i64 4
  %16 = load i32 (%"class.base::HistogramSamples"*)*, i32 (%"class.base::HistogramSamples"*)** %15, align 8
  %17 = tail call i32 %16(%"class.base::HistogramSamples"* %12) #16
  store i32 %17, i32* %1, align 4
  %18 = getelementptr inbounds %"class.base::HistogramSamples", %"class.base::HistogramSamples"* %12, i64 0, i32 1
  %19 = load %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"** %18, align 8
  %20 = getelementptr inbounds %"struct.base::HistogramSamples::Metadata", %"struct.base::HistogramSamples::Metadata"* %19, i64 0, i32 1
  %21 = load atomic i64, i64* %20 monotonic, align 8
  store i64 %21, i64* %2, align 8
  %22 = bitcast %"class.base::HistogramSamples"* %12 to %"class.base::SampleCountIterator"* (%"class.base::HistogramSamples"*)***
  %23 = load %"class.base::SampleCountIterator"* (%"class.base::HistogramSamples"*)**, %"class.base::SampleCountIterator"* (%"class.base::HistogramSamples"*)*** %22, align 8
  %24 = getelementptr inbounds %"class.base::SampleCountIterator"* (%"class.base::HistogramSamples"*)*, %"class.base::SampleCountIterator"* (%"class.base::HistogramSamples"*)** %23, i64 8
  %25 = load %"class.base::SampleCountIterator"* (%"class.base::HistogramSamples"*)*, %"class.base::SampleCountIterator"* (%"class.base::HistogramSamples"*)** %24, align 8
  %26 = tail call %"class.base::SampleCountIterator"* %25(%"class.base::HistogramSamples"* %12) #16
  %27 = bitcast %"class.base::SampleCountIterator"* %26 to i1 (%"class.base::SampleCountIterator"*)***
  %28 = load i1 (%"class.base::SampleCountIterator"*)**, i1 (%"class.base::SampleCountIterator"*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.base::SampleCountIterator"*)*, i1 (%"class.base::SampleCountIterator"*)** %28, i64 2
  %30 = load i1 (%"class.base::SampleCountIterator"*)*, i1 (%"class.base::SampleCountIterator"*)** %29, align 8
  %31 = call zeroext i1 %30(%"class.base::SampleCountIterator"* %26) #16
  br i1 %31, label %63, label %32

32:                                               ; preds = %4
  %33 = bitcast i32* %5 to i8*
  %34 = bitcast i64* %6 to i8*
  %35 = bitcast i32* %7 to i8*
  %36 = bitcast %"class.base::SampleCountIterator"* %26 to void (%"class.base::SampleCountIterator"*, i32*, i64*, i32*)***
  %37 = bitcast %"class.base::SampleCountIterator"* %26 to void (%"class.base::SampleCountIterator"*)***
  br label %38

38:                                               ; preds = %32, %38
  %39 = phi i32 [ 0, %32 ], [ %58, %38 ]
  %40 = call i8* @_Znwm(i64 32) #18
  %41 = bitcast i8* %40 to %"class.base::DictionaryValue"*
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %41) #16
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #16
  store i32 -1431655766, i32* %5, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #16
  store i64 -6148914691236517206, i64* %6, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #16
  store i32 -1431655766, i32* %7, align 4
  %42 = load void (%"class.base::SampleCountIterator"*, i32*, i64*, i32*)**, void (%"class.base::SampleCountIterator"*, i32*, i64*, i32*)*** %36, align 8
  %43 = getelementptr inbounds void (%"class.base::SampleCountIterator"*, i32*, i64*, i32*)*, void (%"class.base::SampleCountIterator"*, i32*, i64*, i32*)** %42, i64 4
  %44 = load void (%"class.base::SampleCountIterator"*, i32*, i64*, i32*)*, void (%"class.base::SampleCountIterator"*, i32*, i64*, i32*)** %43, align 8
  call void %44(%"class.base::SampleCountIterator"* %26, i32* nonnull %5, i64* nonnull %6, i32* nonnull %7) #16
  %45 = bitcast i8* %40 to %"class.base::Value"*
  %46 = load i32, i32* %5, align 4
  %47 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %45, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0), i64 3, i32 %46) #16
  %48 = load i64, i64* %6, align 8
  %49 = trunc i64 %48 to i32
  %50 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %45, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0), i64 4, i32 %49) #16
  %51 = load i32, i32* %7, align 4
  %52 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %45, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i64 5, i32 %51) #16
  %53 = zext i32 %39 to i64
  %54 = call zeroext i1 @_ZN4base9ListValue3SetEmNSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"* %3, i64 %53, %"class.base::Value"* nonnull %45) #16
  %55 = load void (%"class.base::SampleCountIterator"*)**, void (%"class.base::SampleCountIterator"*)*** %37, align 8
  %56 = getelementptr inbounds void (%"class.base::SampleCountIterator"*)*, void (%"class.base::SampleCountIterator"*)** %55, i64 3
  %57 = load void (%"class.base::SampleCountIterator"*)*, void (%"class.base::SampleCountIterator"*)** %56, align 8
  call void %57(%"class.base::SampleCountIterator"* %26) #16
  %58 = add i32 %39, 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #16
  %59 = load i1 (%"class.base::SampleCountIterator"*)**, i1 (%"class.base::SampleCountIterator"*)*** %27, align 8
  %60 = getelementptr inbounds i1 (%"class.base::SampleCountIterator"*)*, i1 (%"class.base::SampleCountIterator"*)** %59, i64 2
  %61 = load i1 (%"class.base::SampleCountIterator"*)*, i1 (%"class.base::SampleCountIterator"*)** %60, align 8
  %62 = call zeroext i1 %61(%"class.base::SampleCountIterator"* %26) #16
  br i1 %62, label %63, label %38

63:                                               ; preds = %38, %4
  %64 = icmp eq %"class.base::SampleCountIterator"* %26, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %63
  %66 = bitcast %"class.base::SampleCountIterator"* %26 to void (%"class.base::SampleCountIterator"*)***
  %67 = load void (%"class.base::SampleCountIterator"*)**, void (%"class.base::SampleCountIterator"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.base::SampleCountIterator"*)*, void (%"class.base::SampleCountIterator"*)** %67, i64 1
  %69 = load void (%"class.base::SampleCountIterator"*)*, void (%"class.base::SampleCountIterator"*)** %68, align 8
  call void %69(%"class.base::SampleCountIterator"* nonnull %26) #16
  br label %70

70:                                               ; preds = %63, %65
  %71 = icmp eq %"class.base::HistogramSamples"* %12, null
  br i1 %71, label %77, label %72

72:                                               ; preds = %70
  %73 = bitcast %"class.base::HistogramSamples"* %12 to void (%"class.base::HistogramSamples"*)***
  %74 = load void (%"class.base::HistogramSamples"*)**, void (%"class.base::HistogramSamples"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*)** %74, i64 1
  %76 = load void (%"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*)** %75, align 8
  call void %76(%"class.base::HistogramSamples"* nonnull %12) #16
  br label %77

77:                                               ; preds = %70, %72
  ret void
}

declare void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"*) unnamed_addr #2

declare void @_ZN25JSONStringValueSerializerC1EPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.JSONStringValueSerializer*, %"class.std::__1::basic_string"*) unnamed_addr #2

declare %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKc(%"class.base::Value"*, i8*, i64, i8*) local_unnamed_addr #2

declare %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"*, i8*, i64, i32) local_unnamed_addr #2

declare %"class.base::Value"* @_ZN4base5Value12SetDoubleKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEd(%"class.base::Value"*, i8*, i64, double) local_unnamed_addr #2

declare %"class.base::Value"* @_ZN4base15DictionaryValue3SetENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"*, i8*, i64, %"class.base::Value"*) local_unnamed_addr #2

declare i32 @_ZN4base21GetUniqueIdForProcessEv() local_unnamed_addr #2

declare zeroext i1 @_ZN25JSONStringValueSerializer9SerializeERKN4base5ValueE(%class.JSONStringValueSerializer*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN25JSONStringValueSerializerD1Ev(%class.JSONStringValueSerializer*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base13HistogramBase18FindAndRunCallbackEi(%"class.base::HistogramBase"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RepeatingCallback", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = load atomic i64, i64* bitcast (%"struct.std::__1::atomic.70"* @_ZN4base18StatisticsRecorder23global_sample_callback_E to i64*) monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to void (i8*, i64, i32)*
  %9 = getelementptr inbounds %"class.base::HistogramBase", %"class.base::HistogramBase"* %0, i64 0, i32 1
  %10 = load i8*, i8** %9, align 8
  %11 = bitcast %"class.base::HistogramBase"* %0 to i64 (%"class.base::HistogramBase"*)***
  %12 = load i64 (%"class.base::HistogramBase"*)**, i64 (%"class.base::HistogramBase"*)*** %11, align 8
  %13 = getelementptr inbounds i64 (%"class.base::HistogramBase"*)*, i64 (%"class.base::HistogramBase"*)** %12, i64 3
  %14 = load i64 (%"class.base::HistogramBase"*)*, i64 (%"class.base::HistogramBase"*)** %13, align 8
  %15 = tail call i64 %14(%"class.base::HistogramBase"* %0) #16
  tail call void %8(i8* %10, i64 %15, i32 %1) #16
  br label %16

16:                                               ; preds = %2, %7
  %17 = getelementptr inbounds %"class.base::HistogramBase", %"class.base::HistogramBase"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 32
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %76, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.base::RepeatingCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #16
  %23 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %23, align 8
  %24 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #16
  %25 = getelementptr inbounds %"class.base::HistogramBase", %"class.base::HistogramBase"* %0, i64 0, i32 1
  %26 = load i8*, i8** %25, align 8
  %27 = tail call i64 @strlen(i8* %26) #16
  %28 = icmp ugt i64 %27, -17
  br i1 %28, label %29, label %31

29:                                               ; preds = %21
  %30 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %30) #17
  unreachable

31:                                               ; preds = %21
  %32 = icmp ult i64 %27, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %31
  %34 = add nuw i64 %27, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #18
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %27, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

42:                                               ; preds = %31
  %43 = trunc i64 %27 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  %46 = icmp eq i64 %27, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %42, %33
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %44, %42 ], [ %41, %33 ]
  %49 = phi i8* [ %24, %42 ], [ %36, %33 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %49, i8* align 1 %26, i64 %27, i1 false) #16
  br label %50

50:                                               ; preds = %42, %47
  %51 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %44, %42 ], [ %48, %47 ]
  %52 = phi i8* [ %24, %42 ], [ %49, %47 ]
  %53 = getelementptr inbounds i8, i8* %52, i64 %27
  store i8 0, i8* %53, align 1
  call void @_ZN4base18StatisticsRecorder12FindCallbackERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::RepeatingCallback"* nonnull sret %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #16
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %59) #18
  br label %60

60:                                               ; preds = %50, %57
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #16
  %61 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0
  %62 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %23, align 8
  %63 = icmp eq %"class.base::internal::BindStateBase"* %62, null
  br i1 %63, label %75, label %64

64:                                               ; preds = %60
  %65 = load i8*, i8** %25, align 8
  %66 = bitcast %"class.base::HistogramBase"* %0 to i64 (%"class.base::HistogramBase"*)***
  %67 = load i64 (%"class.base::HistogramBase"*)**, i64 (%"class.base::HistogramBase"*)*** %66, align 8
  %68 = getelementptr inbounds i64 (%"class.base::HistogramBase"*)*, i64 (%"class.base::HistogramBase"*)** %67, i64 3
  %69 = load i64 (%"class.base::HistogramBase"*)*, i64 (%"class.base::HistogramBase"*)** %68, align 8
  %70 = call i64 %69(%"class.base::HistogramBase"* %0) #16
  %71 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %23, align 8
  %72 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %71, i64 0, i32 1
  %73 = bitcast void ()** %72 to void (%"class.base::internal::BindStateBase"*, i8*, i64, i32)**
  %74 = load void (%"class.base::internal::BindStateBase"*, i8*, i64, i32)*, void (%"class.base::internal::BindStateBase"*, i8*, i64, i32)** %73, align 8
  call void %74(%"class.base::internal::BindStateBase"* %71, i8* %65, i64 %70, i32 %1) #16
  br label %75

75:                                               ; preds = %64, %60
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %61) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #16
  br label %76

76:                                               ; preds = %16, %75
  ret void
}

declare void @_ZN4base18StatisticsRecorder12FindCallbackERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::RepeatingCallback"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #9

declare zeroext i1 @_ZN4base9ListValue3SetEmNSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"*, i64, %"class.base::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base13HistogramBase21WriteAsciiBucketGraphEdiPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::HistogramBase"* nocapture readnone, double, i32, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %5 = sitofp i32 %2 to double
  %6 = fsub double %5, %1
  %7 = fptosi double %6 to i32
  %8 = fcmp ogt double %1, 0.000000e+00
  br i1 %8, label %9, label %14

9:                                                ; preds = %4, %9
  %10 = phi double [ %11, %9 ], [ %1, %4 ]
  %11 = fadd double %10, -1.000000e+00
  %12 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0)) #16
  %13 = fcmp ogt double %11, 0.000000e+00
  br i1 %13, label %9, label %14

14:                                               ; preds = %9, %4
  %15 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #16
  %16 = icmp sgt i32 %7, 0
  br i1 %16, label %17, label %22

17:                                               ; preds = %14, %17
  %18 = phi i32 [ %19, %17 ], [ %7, %14 ]
  %19 = add nsw i32 %18, -1
  %20 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0)) #16
  %21 = icmp sgt i32 %19, 0
  br i1 %21, label %17, label %22

22:                                               ; preds = %17, %14
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base13HistogramBase25GetSimpleAsciiBucketRangeEi(%"class.std::__1::basic_string"* noalias sret, %"class.base::HistogramBase"* nocapture readnone, i32) local_unnamed_addr #0 align 2 {
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0), i32 %2) #16
  ret void
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base13HistogramBase21WriteAsciiBucketValueEidPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::HistogramBase"* nocapture readnone, i32, double, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %5 = sitofp i32 %1 to double
  %6 = fdiv double %5, %2
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0), i32 %1, double %6) #16
  ret void
}

declare void @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base13HistogramBase10WriteAsciiEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::HistogramBase"*, %"class.std::__1::basic_string"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::DictionaryValue", align 8
  %4 = bitcast %"class.base::DictionaryValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #16
  %5 = bitcast %"class.base::HistogramBase"* %0 to void (%"class.base::DictionaryValue"*, %"class.base::HistogramBase"*)***
  %6 = bitcast %"class.base::DictionaryValue"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  %7 = load void (%"class.base::DictionaryValue"*, %"class.base::HistogramBase"*)**, void (%"class.base::DictionaryValue"*, %"class.base::HistogramBase"*)*** %5, align 8
  %8 = getelementptr inbounds void (%"class.base::DictionaryValue"*, %"class.base::HistogramBase"*)*, void (%"class.base::DictionaryValue"*, %"class.base::HistogramBase"*)** %7, i64 15
  %9 = load void (%"class.base::DictionaryValue"*, %"class.base::HistogramBase"*)*, void (%"class.base::DictionaryValue"*, %"class.base::HistogramBase"*)** %8, align 8
  call void %9(%"class.base::DictionaryValue"* nonnull sret %3, %"class.base::HistogramBase"* %0) #16
  %10 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %3, i64 0, i32 0
  %11 = call %"class.std::__1::basic_string"* @_ZN4base5Value13FindStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0), i64 6) #16
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %21 = zext i8 %14 to i64
  %22 = select i1 %15, i8* %17, i8* %20
  %23 = select i1 %15, i64 %19, i64 %21
  %24 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %1, i8* %22, i64 %23) #16
  %25 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0)) #16
  %26 = call %"class.std::__1::basic_string"* @_ZN4base5Value13FindStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0), i64 4) #16
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  %36 = zext i8 %29 to i64
  %37 = select i1 %30, i8* %32, i8* %35
  %38 = select i1 %30, i64 %34, i64 %36
  %39 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %1, i8* %37, i64 %38) #16
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #16
  ret void
}

declare %"class.std::__1::basic_string"* @_ZN4base5Value13FindStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN4base13HistogramBase16GetPermanentNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base13HistogramBase16GetPermanentNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE15permanent_names to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !3

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base13HistogramBase16GetPermanentNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE15permanent_names) #16
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base13HistogramBase16GetPermanentNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE15permanent_names, i64 0, i32 0, i64 8), i8 0, i64 16, i1 false) #16
  store i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base13HistogramBase16GetPermanentNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE15permanent_names, i64 0, i32 0, i64 8), i8** bitcast (%"class.base::NoDestructor"* @_ZZN4base13HistogramBase16GetPermanentNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE15permanent_names to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base13HistogramBase16GetPermanentNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE15permanent_names) #16
  br label %8

8:                                                ; preds = %4, %7, %1
  %9 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base13HistogramBase16GetPermanentNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE20permanent_names_lock to i8*) acquire, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %15, !prof !3

11:                                               ; preds = %8
  %12 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base13HistogramBase16GetPermanentNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE20permanent_names_lock) #16
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %11
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor.60"* @_ZZN4base13HistogramBase16GetPermanentNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE20permanent_names_lock to %"class.base::internal::LockImpl"*)) #16
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base13HistogramBase16GetPermanentNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE20permanent_names_lock) #16
  br label %15

15:                                               ; preds = %11, %14, %8
  %16 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor.60"* @_ZZN4base13HistogramBase16GetPermanentNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE20permanent_names_lock to %union.pthread_mutex_t*)) #16
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %19, label %18, !prof !2

18:                                               ; preds = %15
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor.60"* @_ZZN4base13HistogramBase16GetPermanentNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE20permanent_names_lock to %"class.base::internal::LockImpl"*)) #16
  br label %19

19:                                               ; preds = %15, %18
  %20 = tail call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* bitcast (%"class.base::NoDestructor"* @_ZZN4base13HistogramBase16GetPermanentNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE15permanent_names to %"class.std::__1::__tree"*), %"class.std::__1::basic_string"* dereferenceable(24) %0, %"class.std::__1::basic_string"* dereferenceable(24) %0) #16
  %21 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %20, 0
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 4
  %23 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %19
  %28 = bitcast %"class.std::__1::__tree_end_node"* %22 to i8**
  %29 = load i8*, i8** %28, align 8
  br label %32

30:                                               ; preds = %19
  %31 = bitcast %"class.std::__1::__tree_end_node"* %22 to i8*
  br label %32

32:                                               ; preds = %27, %30
  %33 = phi i8* [ %29, %27 ], [ %31, %30 ]
  %34 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor.60"* @_ZZN4base13HistogramBase16GetPermanentNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE20permanent_names_lock to %union.pthread_mutex_t*)) #16
  ret i8* %33
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #10

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #11

declare void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #14

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #2

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #9

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %5 = bitcast %"class.std::__1::__tree_end_node"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %4, align 8
  %6 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %4, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %7 = bitcast %"class.std::__1::__tree_node_base"** %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node"* %8, null
  br i1 %9, label %10, label %49

10:                                               ; preds = %3
  %11 = call i8* @_Znwm(i64 56) #18, !noalias !4
  %12 = getelementptr inbounds i8, i8* %11, i64 32
  %13 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1, !noalias !4
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %18, i64 24, i1 false) #16, !noalias !4
  br label %25

19:                                               ; preds = %10
  %20 = bitcast i8* %12 to %"class.std::__1::basic_string"*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8, !noalias !4
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8, !noalias !4
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %20, i8* %22, i64 %24) #16, !noalias !4
  br label %25

25:                                               ; preds = %17, %19
  %26 = bitcast %"class.std::__1::__tree_end_node"** %4 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast i8* %11 to %"class.std::__1::__tree_node"*
  %29 = bitcast i8* %11 to %"class.std::__1::__tree_node_base"*
  %30 = getelementptr inbounds i8, i8* %11, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #16
  %31 = bitcast i8* %30 to i64*
  store i64 %27, i64* %31, align 8
  %32 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8**
  store i8* %11, i8** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %34 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 0, i32 0
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %25
  %39 = ptrtoint %"class.std::__1::__tree_node_base"* %36 to i64
  %40 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %6, align 8
  br label %42

42:                                               ; preds = %38, %25
  %43 = phi %"class.std::__1::__tree_node_base"* [ %29, %25 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %45, %"class.std::__1::__tree_node_base"* %43) #16
  %46 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, 1
  store i64 %48, i64* %46, align 8
  br label %49

49:                                               ; preds = %42, %3
  %50 = phi i8 [ 1, %42 ], [ 0, %3 ]
  %51 = phi %"class.std::__1::__tree_node"* [ %28, %42 ], [ %8, %3 ]
  %52 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %53 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %52, 0
  %54 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %53, i8 %50, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %54
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #16
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #16
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #15

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !7
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !7
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !7
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind }
attributes #11 = { nounwind readnone }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind }
attributes #17 = { noreturn nounwind }
attributes #18 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 1048575}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJRKS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISH_EEEEEEDpOT_: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJRKS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISH_EEEEEEDpOT_"}
!7 = !{i8 0, i8 2}
