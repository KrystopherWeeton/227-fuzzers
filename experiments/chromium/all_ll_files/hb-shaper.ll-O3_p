; ModuleID = '../../third_party/harfbuzz-ng/src/src/hb-shaper.cc'
source_filename = "../../third_party/harfbuzz-ng/src/src/hb-shaper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.hb_atomic_ptr_t = type { %struct.hb_shaper_entry_t* }
%struct.hb_shaper_entry_t = type { [16 x i8], i32 (%struct.hb_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*, %struct.hb_feature_t*, i32)* }
%struct.hb_shape_plan_t = type opaque
%struct.hb_font_t = type opaque
%struct.hb_buffer_t = type opaque
%struct.hb_feature_t = type { i32, i32, i32, i32 }

$_ZN24hb_shapers_lazy_loader_t6createEv = comdat any

@_ZL14static_shapers = internal global { %struct.hb_atomic_ptr_t } zeroinitializer, align 8
@_ZL11all_shapers = internal constant [1 x { <{ i8, i8, [14 x i8] }>, i32 (%struct.hb_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*, %struct.hb_feature_t*, i32)* }] [{ <{ i8, i8, [14 x i8] }>, i32 (%struct.hb_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*, %struct.hb_feature_t*, i32)* } { <{ i8, i8, [14 x i8] }> <{ i8 111, i8 116, [14 x i8] zeroinitializer }>, i32 (%struct.hb_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*, %struct.hb_feature_t*, i32)* @_hb_ot_shape }], align 16
@.str = private unnamed_addr constant [15 x i8] c"HB_SHAPER_LIST\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.hb_shaper_entry_t* @_Z15_hb_shapers_getv() local_unnamed_addr #0 {
  %1 = load atomic i64, i64* bitcast ({ %struct.hb_atomic_ptr_t }* @_ZL14static_shapers to i64*) acquire, align 8
  %2 = inttoptr i64 %1 to %struct.hb_shaper_entry_t*
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %4, label %20, !prof !2

4:                                                ; preds = %0, %15
  %5 = tail call %struct.hb_shaper_entry_t* @_ZN24hb_shapers_lazy_loader_t6createEv() #7
  %6 = icmp eq %struct.hb_shaper_entry_t* %5, null
  %7 = select i1 %6, %struct.hb_shaper_entry_t* bitcast ([1 x { <{ i8, i8, [14 x i8] }>, i32 (%struct.hb_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*, %struct.hb_feature_t*, i32)* }]* @_ZL11all_shapers to %struct.hb_shaper_entry_t*), %struct.hb_shaper_entry_t* %5, !prof !2
  %8 = ptrtoint %struct.hb_shaper_entry_t* %7 to i64
  %9 = cmpxchg weak i64* bitcast ({ %struct.hb_atomic_ptr_t }* @_ZL14static_shapers to i64*), i64 0, i64 %8 acq_rel monotonic
  %10 = extractvalue { i64, i1 } %9, 1
  br i1 %10, label %20, label %11, !prof !3

11:                                               ; preds = %4
  %12 = icmp eq %struct.hb_shaper_entry_t* %7, bitcast ([1 x { <{ i8, i8, [14 x i8] }>, i32 (%struct.hb_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*, %struct.hb_feature_t*, i32)* }]* @_ZL11all_shapers to %struct.hb_shaper_entry_t*)
  br i1 %12, label %15, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.hb_shaper_entry_t, %struct.hb_shaper_entry_t* %7, i64 0, i32 0, i64 0
  tail call void @free(i8* %14) #7
  br label %15

15:                                               ; preds = %13, %11
  %16 = load atomic i64, i64* bitcast ({ %struct.hb_atomic_ptr_t }* @_ZL14static_shapers to i64*) acquire, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %4, label %18, !prof !2

18:                                               ; preds = %15
  %19 = inttoptr i64 %16 to %struct.hb_shaper_entry_t*
  br label %20

20:                                               ; preds = %4, %0, %18
  %21 = phi %struct.hb_shaper_entry_t* [ %19, %18 ], [ %2, %0 ], [ %7, %4 ]
  ret %struct.hb_shaper_entry_t* %21
}

declare hidden i32 @_hb_ot_shape(%struct.hb_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*, %struct.hb_feature_t*, i32) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_shaper_entry_t* @_ZN24hb_shapers_lazy_loader_t6createEv() local_unnamed_addr #0 comdat align 2 {
  %1 = tail call i8* @getenv(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0)) #7
  %2 = icmp eq i8* %1, null
  br i1 %2, label %41, label %3

3:                                                ; preds = %0
  %4 = load i8, i8* %1, align 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %41, label %6

6:                                                ; preds = %3
  %7 = tail call noalias i8* @calloc(i64 1, i64 24) #7
  %8 = bitcast i8* %7 to %struct.hb_shaper_entry_t*
  %9 = icmp eq i8* %7, null
  br i1 %9, label %41, label %10, !prof !2

10:                                               ; preds = %6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 16 getelementptr inbounds ([1 x { <{ i8, i8, [14 x i8] }>, i32 (%struct.hb_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*, %struct.hb_feature_t*, i32)* }], [1 x { <{ i8, i8, [14 x i8] }>, i32 (%struct.hb_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*, %struct.hb_feature_t*, i32)* }]* @_ZL11all_shapers, i64 0, i64 0, i32 0, i32 0), i64 24, i1 false)
  %11 = getelementptr inbounds i8, i8* %7, i64 1
  %12 = getelementptr inbounds i8, i8* %7, i64 2
  br label %13

13:                                               ; preds = %32, %10
  %14 = phi i8* [ %1, %10 ], [ %36, %32 ]
  %15 = phi i32 [ 0, %10 ], [ %33, %32 ]
  %16 = tail call i8* @strchr(i8* %14, i32 44) #8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = tail call i64 @strlen(i8* %14) #8
  %20 = getelementptr inbounds i8, i8* %14, i64 %19
  br label %21

21:                                               ; preds = %13, %18
  %22 = phi i8* [ %16, %13 ], [ %20, %18 ]
  %23 = icmp eq i32 %15, 0
  br i1 %23, label %24, label %32

24:                                               ; preds = %21
  %25 = ptrtoint i8* %22 to i64
  %26 = ptrtoint i8* %14 to i64
  %27 = sub i64 %25, %26
  %28 = tail call i64 @strlen(i8* nonnull %7) #8
  %29 = shl i64 %28, 32
  %30 = ashr exact i64 %29, 32
  %31 = icmp eq i64 %27, %30
  br i1 %31, label %37, label %32

32:                                               ; preds = %40, %37, %24, %21
  %33 = phi i32 [ %15, %21 ], [ 1, %40 ], [ 0, %37 ], [ 0, %24 ]
  %34 = load i8, i8* %22, align 1
  %35 = icmp eq i8 %34, 0
  %36 = getelementptr inbounds i8, i8* %22, i64 1
  br i1 %35, label %41, label %13

37:                                               ; preds = %24
  %38 = tail call i32 @strncmp(i8* nonnull %7, i8* %14, i64 %27) #8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %32

40:                                               ; preds = %37
  store i8 111, i8* %7, align 8
  store i8 116, i8* %11, align 1
  call void @llvm.memset.p0i8.i64(i8* align 2 %12, i8 0, i64 14, i1 false)
  br label %32

41:                                               ; preds = %32, %6, %0, %3
  %42 = phi %struct.hb_shaper_entry_t* [ null, %3 ], [ null, %0 ], [ null, %6 ], [ %8, %32 ]
  ret %struct.hb_shaper_entry_t* %42
}

; Function Attrs: nofree nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @calloc(i64, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nofree nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
