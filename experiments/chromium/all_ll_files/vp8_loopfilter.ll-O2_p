; ModuleID = '../../third_party/libvpx/source/libvpx/vp8/common/vp8_loopfilter.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp8/common/vp8_loopfilter.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.loop_filter_info_n = type { [64 x [16 x i8]], [64 x [16 x i8]], [64 x [16 x i8]], [4 x [16 x i8]], [4 x [4 x [4 x i8]]], [2 x [64 x i8]], [10 x i8], [6 x i8] }
%struct.VP8Common = type { %struct.vpx_internal_error_info, [8 x i8], [128 x [2 x i16]], [128 x [2 x i16]], [128 x [2 x i16]], i32, i32, i32, i32, i32, %struct.yv12_buffer_config*, [4 x %struct.yv12_buffer_config], [4 x i32], i32, i32, i32, i32, %struct.yv12_buffer_config, %struct.yv12_buffer_config, %struct.yv12_buffer_config, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.modeinfo*, %struct.modeinfo*, %struct.modeinfo*, i32, [12 x i8], %struct.loop_filter_info_n, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i32], %struct.ENTROPY_CONTEXT_PLANES*, %struct.ENTROPY_CONTEXT_PLANES, %struct.frame_contexts, %struct.frame_contexts, i32, i32, i32, i32, %struct.postproc_state, i32, [12 x i8] }
%struct.vpx_internal_error_info = type { i32, i32, [80 x i8], i32, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.yv12_buffer_config = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i64, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.modeinfo = type { %struct.MB_MODE_INFO, [16 x %union.b_mode_info] }
%struct.MB_MODE_INFO = type { i8, i8, i8, i8, %union.int_mv, i8, i8, i8, i8 }
%union.int_mv = type { i32 }
%union.b_mode_info = type { i32 }
%struct.ENTROPY_CONTEXT_PLANES = type { [4 x i8], [2 x i8], [2 x i8], i8 }
%struct.frame_contexts = type { [9 x i8], [4 x i8], [3 x i8], [3 x i8], [4 x [8 x [3 x [11 x i8]]]], [2 x %struct.mv_context] }
%struct.mv_context = type { [19 x i8] }
%struct.postproc_state = type { i32, i32, i32, i32, i32, i8* }
%struct.macroblockd = type { [384 x i8], [400 x i16], [400 x i16], [25 x i8], [7 x i8], [16 x i16], [16 x i16], [16 x i16], [16 x i16], [25 x %struct.blockd], i32, %struct.yv12_buffer_config, %struct.yv12_buffer_config, %struct.modeinfo*, i32, i32, i32, i32, [3 x i8*], [3 x i8*], [2 x i32], %struct.ENTROPY_CONTEXT_PLANES*, %struct.ENTROPY_CONTEXT_PLANES*, i8, i8, i8, i8, [3 x i8], [2 x [4 x i8]], i8, i8, [4 x i8], [4 x i8], [4 x i8], [4 x i8], i32, i32, i32, i32, void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)*, i8*, i32, %struct.vpx_internal_error_info, [16 x i8], [704 x i8] }
%struct.blockd = type { i16*, i16*, i8*, i16*, i32, i8*, %union.b_mode_info }
%struct.loop_filter_info = type { i8*, i8*, i8*, i8* }

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_loop_filter_update_sharpness(%struct.loop_filter_info_n* nocapture, i32) local_unnamed_addr #0 {
  %3 = icmp sgt i32 %1, 0
  %4 = zext i1 %3 to i32
  %5 = icmp sgt i32 %1, 4
  %6 = zext i1 %5 to i32
  %7 = sub nsw i32 9, %1
  br label %8

8:                                                ; preds = %8, %2
  %9 = phi i64 [ 0, %2 ], [ %27, %8 ]
  %10 = trunc i64 %9 to i32
  %11 = lshr i32 %10, %4
  %12 = lshr i32 %11, %6
  %13 = icmp sgt i32 %12, %7
  %14 = and i1 %3, %13
  %15 = select i1 %14, i32 %7, i32 %12
  %16 = icmp sgt i32 %15, 1
  %17 = select i1 %16, i32 %15, i32 1
  %18 = getelementptr inbounds %struct.loop_filter_info_n, %struct.loop_filter_info_n* %0, i64 0, i32 2, i64 %9, i64 0
  %19 = trunc i32 %17 to i8
  tail call void @llvm.memset.p0i8.i64(i8* align 16 %18, i8 %19, i64 16, i1 false)
  %20 = getelementptr inbounds %struct.loop_filter_info_n, %struct.loop_filter_info_n* %0, i64 0, i32 1, i64 %9, i64 0
  %21 = trunc i64 %9 to i32
  %22 = shl i32 %21, 1
  %23 = add i32 %17, %22
  %24 = trunc i32 %23 to i8
  tail call void @llvm.memset.p0i8.i64(i8* align 16 %20, i8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.loop_filter_info_n, %struct.loop_filter_info_n* %0, i64 0, i32 0, i64 %9, i64 0
  %26 = add i8 %24, 4
  tail call void @llvm.memset.p0i8.i64(i8* align 16 %25, i8 %26, i64 16, i1 false)
  %27 = add nuw nsw i64 %9, 1
  %28 = icmp eq i64 %27, 64
  br i1 %28, label %29, label %8

29:                                               ; preds = %8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_loop_filter_init(%struct.VP8Common* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 48
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 0
  %5 = zext i1 %4 to i32
  %6 = icmp sgt i32 %3, 4
  %7 = zext i1 %6 to i32
  %8 = sub nsw i32 9, %3
  br label %9

9:                                                ; preds = %9, %1
  %10 = phi i64 [ 0, %1 ], [ %27, %9 ]
  %11 = trunc i64 %10 to i32
  %12 = lshr i32 %11, %5
  %13 = lshr i32 %12, %7
  %14 = icmp sgt i32 %13, %8
  %15 = and i1 %4, %14
  %16 = select i1 %15, i32 %8, i32 %13
  %17 = icmp sgt i32 %16, 1
  %18 = select i1 %17, i32 %16, i32 1
  %19 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 2, i64 %10, i64 0
  %20 = trunc i32 %18 to i8
  tail call void @llvm.memset.p0i8.i64(i8* align 16 %19, i8 %20, i64 16, i1 false) #3
  %21 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 1, i64 %10, i64 0
  %22 = shl i32 %11, 1
  %23 = add i32 %18, %22
  %24 = trunc i32 %23 to i8
  tail call void @llvm.memset.p0i8.i64(i8* align 16 %21, i8 %24, i64 16, i1 false) #3
  %25 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 0, i64 %10, i64 0
  %26 = add i8 %24, 4
  tail call void @llvm.memset.p0i8.i64(i8* align 16 %25, i8 %26, i64 16, i1 false) #3
  %27 = add nuw nsw i64 %10, 1
  %28 = icmp eq i64 %27, 64
  br i1 %28, label %29, label %9

29:                                               ; preds = %9
  %30 = load i32, i32* %2, align 8
  %31 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 47
  store i32 %30, i32* %31, align 4
  br label %32

32:                                               ; preds = %46, %29
  %33 = phi i64 [ 0, %29 ], [ %49, %46 ]
  %34 = icmp ugt i64 %33, 39
  br i1 %34, label %35, label %37

35:                                               ; preds = %32
  %36 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 5, i64 0, i64 %33
  store i8 2, i8* %36, align 1
  br label %46

37:                                               ; preds = %32
  %38 = icmp ugt i64 %33, 19
  br i1 %38, label %39, label %41

39:                                               ; preds = %37
  %40 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 5, i64 0, i64 %33
  store i8 1, i8* %40, align 1
  br label %46

41:                                               ; preds = %37
  %42 = icmp ugt i64 %33, 14
  %43 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 5, i64 0, i64 %33
  br i1 %42, label %44, label %45

44:                                               ; preds = %41
  store i8 1, i8* %43, align 1
  br label %46

45:                                               ; preds = %41
  store i8 0, i8* %43, align 1
  br label %46

46:                                               ; preds = %45, %44, %39, %35
  %47 = phi i8 [ 0, %45 ], [ 1, %44 ], [ 2, %39 ], [ 3, %35 ]
  %48 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 5, i64 1, i64 %33
  store i8 %47, i8* %48, align 1
  %49 = add nuw nsw i64 %33, 1
  %50 = icmp eq i64 %49, 64
  br i1 %50, label %51, label %32

51:                                               ; preds = %46
  %52 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 6, i64 0
  %53 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 6, i64 4
  %54 = bitcast i8* %52 to i32*
  store i32 16843009, i32* %54, align 16
  store i8 0, i8* %53, align 4
  %55 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 6, i64 7
  store i8 1, i8* %55, align 1
  %56 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 6, i64 5
  store i8 2, i8* %56, align 1
  %57 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 6, i64 6
  store i8 2, i8* %57, align 2
  %58 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 6, i64 8
  store i8 2, i8* %58, align 8
  %59 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 6, i64 9
  store i8 3, i8* %59, align 1
  %60 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 3, i64 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 16 %60, i8 0, i64 16, i1 false)
  %61 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 3, i64 1, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 16 %61, i8 1, i64 16, i1 false)
  %62 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 3, i64 2, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 16 %62, i8 2, i64 16, i1 false)
  %63 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 3, i64 3, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 16 %63, i8 3, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_loop_filter_frame_init(%struct.VP8Common* nocapture, %struct.macroblockd* nocapture readonly, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 47
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 48
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %37, label %9

9:                                                ; preds = %3
  %10 = icmp sgt i32 %7, 0
  %11 = zext i1 %10 to i32
  %12 = icmp sgt i32 %7, 4
  %13 = zext i1 %12 to i32
  %14 = sub nsw i32 9, %7
  br label %15

15:                                               ; preds = %15, %9
  %16 = phi i64 [ 0, %9 ], [ %33, %15 ]
  %17 = trunc i64 %16 to i32
  %18 = lshr i32 %17, %11
  %19 = lshr i32 %18, %13
  %20 = icmp sgt i32 %19, %14
  %21 = and i1 %10, %20
  %22 = select i1 %21, i32 %14, i32 %19
  %23 = icmp sgt i32 %22, 1
  %24 = select i1 %23, i32 %22, i32 1
  %25 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 2, i64 %16, i64 0
  %26 = trunc i32 %24 to i8
  tail call void @llvm.memset.p0i8.i64(i8* align 16 %25, i8 %26, i64 16, i1 false) #3
  %27 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 1, i64 %16, i64 0
  %28 = shl i32 %17, 1
  %29 = add i32 %24, %28
  %30 = trunc i32 %29 to i8
  tail call void @llvm.memset.p0i8.i64(i8* align 16 %27, i8 %30, i64 16, i1 false) #3
  %31 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 0, i64 %16, i64 0
  %32 = add i8 %30, 4
  tail call void @llvm.memset.p0i8.i64(i8* align 16 %31, i8 %32, i64 16, i1 false) #3
  %33 = add nuw nsw i64 %16, 1
  %34 = icmp eq i64 %33, 64
  br i1 %34, label %35, label %15

35:                                               ; preds = %15
  %36 = load i32, i32* %6, align 8
  store i32 %36, i32* %4, align 4
  br label %37

37:                                               ; preds = %3, %35
  %38 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 23
  %39 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 26
  %40 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 29
  %41 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 32, i64 0
  %42 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 34, i64 0
  %43 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 34, i64 1
  %44 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 32, i64 1
  %45 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 34, i64 2
  %46 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 34, i64 3
  %47 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 32, i64 2
  %48 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 32, i64 3
  br label %49

49:                                               ; preds = %181, %37
  %50 = phi i64 [ 0, %37 ], [ %182, %181 ]
  %51 = load i8, i8* %38, align 32
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %65, label %53

53:                                               ; preds = %49
  %54 = load i8, i8* %39, align 1
  %55 = icmp eq i8 %54, 1
  %56 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 28, i64 1, i64 %50
  %57 = load i8, i8* %56, align 1
  %58 = sext i8 %57 to i32
  %59 = select i1 %55, i32 0, i32 %2
  %60 = add nsw i32 %59, %58
  %61 = icmp slt i32 %60, 63
  %62 = select i1 %61, i32 %60, i32 63
  %63 = icmp sgt i32 %62, 0
  %64 = select i1 %63, i32 %62, i32 0
  br label %65

65:                                               ; preds = %53, %49
  %66 = phi i32 [ %2, %49 ], [ %64, %53 ]
  %67 = load i8, i8* %40, align 1
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %65
  %70 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 4, i64 %50, i64 0, i64 0
  %71 = trunc i32 %66 to i8
  tail call void @llvm.memset.p0i8.i64(i8* align 16 %70, i8 %71, i64 16, i1 false)
  br label %181

72:                                               ; preds = %65
  %73 = load i8, i8* %41, align 1
  %74 = sext i8 %73 to i32
  %75 = add nsw i32 %66, %74
  %76 = load i8, i8* %42, align 1
  %77 = sext i8 %76 to i32
  %78 = add nsw i32 %75, %77
  %79 = icmp slt i32 %78, 63
  %80 = select i1 %79, i32 %78, i32 63
  %81 = icmp sgt i32 %80, 0
  %82 = select i1 %81, i32 %80, i32 0
  %83 = trunc i32 %82 to i8
  %84 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 4, i64 %50, i64 0, i64 0
  store i8 %83, i8* %84, align 1
  %85 = icmp slt i32 %75, 63
  %86 = select i1 %85, i32 %75, i32 63
  %87 = icmp sgt i32 %86, 0
  %88 = select i1 %87, i32 %86, i32 0
  %89 = trunc i32 %88 to i8
  %90 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 4, i64 %50, i64 0, i64 1
  store i8 %89, i8* %90, align 1
  %91 = load i8, i8* %44, align 1
  %92 = sext i8 %91 to i32
  %93 = add nsw i32 %66, %92
  %94 = load i8, i8* %43, align 1
  %95 = sext i8 %94 to i32
  %96 = add nsw i32 %93, %95
  %97 = icmp slt i32 %96, 63
  %98 = select i1 %97, i32 %96, i32 63
  %99 = icmp sgt i32 %98, 0
  %100 = select i1 %99, i32 %98, i32 0
  %101 = trunc i32 %100 to i8
  %102 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 4, i64 %50, i64 1, i64 1
  store i8 %101, i8* %102, align 1
  %103 = load i8, i8* %45, align 1
  %104 = sext i8 %103 to i32
  %105 = add nsw i32 %93, %104
  %106 = icmp slt i32 %105, 63
  %107 = select i1 %106, i32 %105, i32 63
  %108 = icmp sgt i32 %107, 0
  %109 = select i1 %108, i32 %107, i32 0
  %110 = trunc i32 %109 to i8
  %111 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 4, i64 %50, i64 1, i64 2
  store i8 %110, i8* %111, align 1
  %112 = load i8, i8* %46, align 1
  %113 = sext i8 %112 to i32
  %114 = add nsw i32 %93, %113
  %115 = icmp slt i32 %114, 63
  %116 = select i1 %115, i32 %114, i32 63
  %117 = icmp sgt i32 %116, 0
  %118 = select i1 %117, i32 %116, i32 0
  %119 = trunc i32 %118 to i8
  %120 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 4, i64 %50, i64 1, i64 3
  store i8 %119, i8* %120, align 1
  %121 = load i8, i8* %47, align 1
  %122 = sext i8 %121 to i32
  %123 = add nsw i32 %66, %122
  %124 = load i8, i8* %43, align 1
  %125 = sext i8 %124 to i32
  %126 = add nsw i32 %123, %125
  %127 = icmp slt i32 %126, 63
  %128 = select i1 %127, i32 %126, i32 63
  %129 = icmp sgt i32 %128, 0
  %130 = select i1 %129, i32 %128, i32 0
  %131 = trunc i32 %130 to i8
  %132 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 4, i64 %50, i64 2, i64 1
  store i8 %131, i8* %132, align 1
  %133 = load i8, i8* %45, align 1
  %134 = sext i8 %133 to i32
  %135 = add nsw i32 %123, %134
  %136 = icmp slt i32 %135, 63
  %137 = select i1 %136, i32 %135, i32 63
  %138 = icmp sgt i32 %137, 0
  %139 = select i1 %138, i32 %137, i32 0
  %140 = trunc i32 %139 to i8
  %141 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 4, i64 %50, i64 2, i64 2
  store i8 %140, i8* %141, align 1
  %142 = load i8, i8* %46, align 1
  %143 = sext i8 %142 to i32
  %144 = add nsw i32 %123, %143
  %145 = icmp slt i32 %144, 63
  %146 = select i1 %145, i32 %144, i32 63
  %147 = icmp sgt i32 %146, 0
  %148 = select i1 %147, i32 %146, i32 0
  %149 = trunc i32 %148 to i8
  %150 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 4, i64 %50, i64 2, i64 3
  store i8 %149, i8* %150, align 1
  %151 = load i8, i8* %48, align 1
  %152 = sext i8 %151 to i32
  %153 = add nsw i32 %66, %152
  %154 = load i8, i8* %43, align 1
  %155 = sext i8 %154 to i32
  %156 = add nsw i32 %153, %155
  %157 = icmp slt i32 %156, 63
  %158 = select i1 %157, i32 %156, i32 63
  %159 = icmp sgt i32 %158, 0
  %160 = select i1 %159, i32 %158, i32 0
  %161 = trunc i32 %160 to i8
  %162 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 4, i64 %50, i64 3, i64 1
  store i8 %161, i8* %162, align 1
  %163 = load i8, i8* %45, align 1
  %164 = sext i8 %163 to i32
  %165 = add nsw i32 %153, %164
  %166 = icmp slt i32 %165, 63
  %167 = select i1 %166, i32 %165, i32 63
  %168 = icmp sgt i32 %167, 0
  %169 = select i1 %168, i32 %167, i32 0
  %170 = trunc i32 %169 to i8
  %171 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 4, i64 %50, i64 3, i64 2
  store i8 %170, i8* %171, align 1
  %172 = load i8, i8* %46, align 1
  %173 = sext i8 %172 to i32
  %174 = add nsw i32 %153, %173
  %175 = icmp slt i32 %174, 63
  %176 = select i1 %175, i32 %174, i32 63
  %177 = icmp sgt i32 %176, 0
  %178 = select i1 %177, i32 %176, i32 0
  %179 = trunc i32 %178 to i8
  %180 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 4, i64 %50, i64 3, i64 3
  store i8 %179, i8* %180, align 1
  br label %181

181:                                              ; preds = %72, %69
  %182 = add nuw nsw i64 %50, 1
  %183 = icmp eq i64 %182, 4
  br i1 %183, label %184, label %49

184:                                              ; preds = %181
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_loop_filter_row_normal(%struct.VP8Common*, %struct.modeinfo* nocapture readonly, i32, i32, i32, i8*, i8*, i8*) local_unnamed_addr #0 {
  %9 = alloca %struct.loop_filter_info, align 8
  %10 = bitcast %struct.loop_filter_info* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #3
  %11 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %9, i64 0, i32 0
  %12 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %9, i64 0, i32 1
  %13 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %9, i64 0, i32 2
  %14 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %9, i64 0, i32 3
  %15 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 28
  %16 = bitcast %struct.loop_filter_info* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 32, i1 false)
  %17 = load i32, i32* %15, align 8
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %19, label %76

19:                                               ; preds = %8
  %20 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 23
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = icmp sgt i32 %2, 0
  br label %24

24:                                               ; preds = %19, %68
  %25 = phi %struct.modeinfo* [ %1, %19 ], [ %72, %68 ]
  %26 = phi i8* [ %5, %19 ], [ %69, %68 ]
  %27 = phi i8* [ %6, %19 ], [ %70, %68 ]
  %28 = phi i8* [ %7, %19 ], [ %71, %68 ]
  %29 = phi i32 [ 0, %19 ], [ %73, %68 ]
  %30 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %25, i64 0, i32 0, i32 0
  %31 = load i8, i8* %30, align 4
  switch i8 %31, label %32 [
    i8 4, label %36
    i8 9, label %36
  ]

32:                                               ; preds = %24
  %33 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %25, i64 0, i32 0, i32 6
  %34 = load i8, i8* %33, align 1
  %35 = icmp ne i8 %34, 0
  br label %36

36:                                               ; preds = %24, %24, %32
  %37 = phi i1 [ false, %24 ], [ %35, %32 ], [ false, %24 ]
  %38 = zext i8 %31 to i64
  %39 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 6, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %25, i64 0, i32 0, i32 8
  %42 = load i8, i8* %41, align 1
  %43 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %25, i64 0, i32 0, i32 2
  %44 = load i8, i8* %43, align 2
  %45 = zext i8 %42 to i64
  %46 = zext i8 %44 to i64
  %47 = zext i8 %40 to i64
  %48 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 4, i64 %45, i64 %46, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %68, label %51

51:                                               ; preds = %36
  %52 = zext i8 %49 to i64
  %53 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 5, i64 %22, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 0, i64 %52, i64 0
  store i8* %55, i8** %11, align 8
  %56 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 1, i64 %52, i64 0
  store i8* %56, i8** %12, align 8
  %57 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 2, i64 %52, i64 0
  store i8* %57, i8** %13, align 8
  %58 = zext i8 %54 to i64
  %59 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 3, i64 %58, i64 0
  store i8* %59, i8** %14, align 8
  %60 = icmp eq i32 %29, 0
  br i1 %60, label %62, label %61

61:                                               ; preds = %51
  call void @vp8_loop_filter_mbv_sse2(i8* %26, i8* %27, i8* %28, i32 %3, i32 %4, %struct.loop_filter_info* nonnull %9) #3
  br label %62

62:                                               ; preds = %51, %61
  br i1 %37, label %64, label %63

63:                                               ; preds = %62
  call void @vp8_loop_filter_bv_sse2(i8* %26, i8* %27, i8* %28, i32 %3, i32 %4, %struct.loop_filter_info* nonnull %9) #3
  br label %64

64:                                               ; preds = %63, %62
  br i1 %23, label %65, label %66

65:                                               ; preds = %64
  call void @vp8_loop_filter_mbh_sse2(i8* %26, i8* %27, i8* %28, i32 %3, i32 %4, %struct.loop_filter_info* nonnull %9) #3
  br label %66

66:                                               ; preds = %65, %64
  br i1 %37, label %68, label %67

67:                                               ; preds = %66
  call void @vp8_loop_filter_bh_sse2(i8* %26, i8* %27, i8* %28, i32 %3, i32 %4, %struct.loop_filter_info* nonnull %9) #3
  br label %68

68:                                               ; preds = %66, %67, %36
  %69 = getelementptr inbounds i8, i8* %26, i64 16
  %70 = getelementptr inbounds i8, i8* %27, i64 8
  %71 = getelementptr inbounds i8, i8* %28, i64 8
  %72 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %25, i64 1
  %73 = add nuw nsw i32 %29, 1
  %74 = load i32, i32* %15, align 8
  %75 = icmp slt i32 %73, %74
  br i1 %75, label %24, label %76

76:                                               ; preds = %68, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #3
  ret void
}

declare void @vp8_loop_filter_mbv_sse2(i8*, i8*, i8*, i32, i32, %struct.loop_filter_info*) local_unnamed_addr #2

declare void @vp8_loop_filter_bv_sse2(i8*, i8*, i8*, i32, i32, %struct.loop_filter_info*) local_unnamed_addr #2

declare void @vp8_loop_filter_mbh_sse2(i8*, i8*, i8*, i32, i32, %struct.loop_filter_info*) local_unnamed_addr #2

declare void @vp8_loop_filter_bh_sse2(i8*, i8*, i8*, i32, i32, %struct.loop_filter_info*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_loop_filter_row_simple(%struct.VP8Common*, %struct.modeinfo* nocapture readonly, i32, i32, i8*) local_unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 28
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %59

9:                                                ; preds = %5
  %10 = icmp sgt i32 %2, 0
  br label %11

11:                                               ; preds = %9, %53
  %12 = phi %struct.modeinfo* [ %1, %9 ], [ %55, %53 ]
  %13 = phi i8* [ %4, %9 ], [ %54, %53 ]
  %14 = phi i32 [ 0, %9 ], [ %56, %53 ]
  %15 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %12, i64 0, i32 0, i32 0
  %16 = load i8, i8* %15, align 4
  switch i8 %16, label %17 [
    i8 4, label %21
    i8 9, label %21
  ]

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %12, i64 0, i32 0, i32 6
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  br label %21

21:                                               ; preds = %11, %11, %17
  %22 = phi i1 [ false, %11 ], [ %20, %17 ], [ false, %11 ]
  %23 = zext i8 %16 to i64
  %24 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 6, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %12, i64 0, i32 0, i32 8
  %27 = load i8, i8* %26, align 1
  %28 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %12, i64 0, i32 0, i32 2
  %29 = load i8, i8* %28, align 2
  %30 = zext i8 %27 to i64
  %31 = zext i8 %29 to i64
  %32 = zext i8 %25 to i64
  %33 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 4, i64 %30, i64 %31, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %53, label %36

36:                                               ; preds = %21
  %37 = icmp eq i32 %14, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %36
  %39 = zext i8 %34 to i64
  %40 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 0, i64 %39, i64 0
  tail call void @vp8_loop_filter_simple_vertical_edge_sse2(i8* %13, i32 %3, i8* %40) #3
  br label %41

41:                                               ; preds = %36, %38
  br i1 %22, label %45, label %42

42:                                               ; preds = %41
  %43 = zext i8 %34 to i64
  %44 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 1, i64 %43, i64 0
  tail call void @vp8_loop_filter_bvs_sse2(i8* %13, i32 %3, i8* %44) #3
  br label %45

45:                                               ; preds = %42, %41
  br i1 %10, label %46, label %49

46:                                               ; preds = %45
  %47 = zext i8 %34 to i64
  %48 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 0, i64 %47, i64 0
  tail call void @vp8_loop_filter_simple_horizontal_edge_sse2(i8* %13, i32 %3, i8* %48) #3
  br label %49

49:                                               ; preds = %46, %45
  br i1 %22, label %53, label %50

50:                                               ; preds = %49
  %51 = zext i8 %34 to i64
  %52 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 1, i64 %51, i64 0
  tail call void @vp8_loop_filter_bhs_sse2(i8* %13, i32 %3, i8* %52) #3
  br label %53

53:                                               ; preds = %21, %49, %50
  %54 = getelementptr inbounds i8, i8* %13, i64 16
  %55 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %12, i64 1
  %56 = add nuw nsw i32 %14, 1
  %57 = load i32, i32* %6, align 8
  %58 = icmp slt i32 %56, %57
  br i1 %58, label %11, label %59

59:                                               ; preds = %53, %5
  ret void
}

declare void @vp8_loop_filter_simple_vertical_edge_sse2(i8*, i32, i8*) local_unnamed_addr #2

declare void @vp8_loop_filter_bvs_sse2(i8*, i32, i8*) local_unnamed_addr #2

declare void @vp8_loop_filter_simple_horizontal_edge_sse2(i8*, i32, i8*) local_unnamed_addr #2

declare void @vp8_loop_filter_bhs_sse2(i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_loop_filter_frame(%struct.VP8Common*, %struct.macroblockd* nocapture readonly, i32) local_unnamed_addr #0 {
  %4 = alloca %struct.loop_filter_info, align 8
  %5 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 10
  %6 = load %struct.yv12_buffer_config*, %struct.yv12_buffer_config** %5, align 8
  %7 = bitcast %struct.loop_filter_info* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #3
  %8 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %4, i64 0, i32 0
  %9 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %4, i64 0, i32 1
  %10 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %4, i64 0, i32 2
  %11 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %4, i64 0, i32 3
  %12 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 27
  %13 = bitcast %struct.loop_filter_info* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false)
  %14 = load i32, i32* %12, align 4
  %15 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 28
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 41
  %18 = load %struct.modeinfo*, %struct.modeinfo** %17, align 16
  %19 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %6, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %6, i64 0, i32 9
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 46
  %24 = load i32, i32* %23, align 16
  tail call void @vp8_loop_filter_frame_init(%struct.VP8Common* %0, %struct.macroblockd* %1, i32 %24)
  %25 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %6, i64 0, i32 13
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %6, i64 0, i32 14
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %6, i64 0, i32 15
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 43
  %32 = load i32, i32* %31, align 16
  %33 = icmp eq i32 %32, 0
  %34 = icmp sgt i32 %14, 0
  br i1 %33, label %40, label %35

35:                                               ; preds = %3
  br i1 %34, label %36, label %182

36:                                               ; preds = %35
  %37 = icmp sgt i32 %16, 0
  %38 = shl nsw i32 %20, 4
  %39 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %6, i64 0, i32 0
  br label %124

40:                                               ; preds = %3
  br i1 %34, label %41, label %182

41:                                               ; preds = %40
  %42 = icmp sgt i32 %16, 0
  %43 = sext i32 %2 to i64
  %44 = shl nsw i32 %20, 4
  %45 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %6, i64 0, i32 0
  %46 = shl nsw i32 %22, 3
  %47 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %6, i64 0, i32 5
  br label %48

48:                                               ; preds = %107, %41
  %49 = phi i32 [ 0, %41 ], [ %122, %107 ]
  %50 = phi %struct.modeinfo* [ %18, %41 ], [ %121, %107 ]
  %51 = phi i8* [ %30, %41 ], [ %120, %107 ]
  %52 = phi i8* [ %28, %41 ], [ %119, %107 ]
  %53 = phi i8* [ %26, %41 ], [ %115, %107 ]
  br i1 %42, label %54, label %107

54:                                               ; preds = %48
  %55 = icmp eq i32 %49, 0
  br label %56

56:                                               ; preds = %100, %54
  %57 = phi i32 [ 0, %54 ], [ %105, %100 ]
  %58 = phi %struct.modeinfo* [ %50, %54 ], [ %104, %100 ]
  %59 = phi i8* [ %51, %54 ], [ %103, %100 ]
  %60 = phi i8* [ %52, %54 ], [ %102, %100 ]
  %61 = phi i8* [ %53, %54 ], [ %101, %100 ]
  %62 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %58, i64 0, i32 0, i32 0
  %63 = load i8, i8* %62, align 4
  switch i8 %63, label %64 [
    i8 4, label %68
    i8 9, label %68
  ]

64:                                               ; preds = %56
  %65 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %58, i64 0, i32 0, i32 6
  %66 = load i8, i8* %65, align 1
  %67 = icmp ne i8 %66, 0
  br label %68

68:                                               ; preds = %56, %56, %64
  %69 = phi i1 [ false, %56 ], [ %67, %64 ], [ false, %56 ]
  %70 = zext i8 %63 to i64
  %71 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 6, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %58, i64 0, i32 0, i32 8
  %74 = load i8, i8* %73, align 1
  %75 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %58, i64 0, i32 0, i32 2
  %76 = load i8, i8* %75, align 2
  %77 = zext i8 %74 to i64
  %78 = zext i8 %76 to i64
  %79 = zext i8 %72 to i64
  %80 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 4, i64 %77, i64 %78, i64 %79
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %100, label %83

83:                                               ; preds = %68
  %84 = zext i8 %81 to i64
  %85 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 5, i64 %43, i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 0, i64 %84, i64 0
  store i8* %87, i8** %8, align 8
  %88 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 1, i64 %84, i64 0
  store i8* %88, i8** %9, align 8
  %89 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 2, i64 %84, i64 0
  store i8* %89, i8** %10, align 8
  %90 = zext i8 %86 to i64
  %91 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 3, i64 %90, i64 0
  store i8* %91, i8** %11, align 8
  %92 = icmp eq i32 %57, 0
  br i1 %92, label %94, label %93

93:                                               ; preds = %83
  call void @vp8_loop_filter_mbv_sse2(i8* %61, i8* %60, i8* %59, i32 %20, i32 %22, %struct.loop_filter_info* nonnull %4) #3
  br label %94

94:                                               ; preds = %83, %93
  br i1 %69, label %96, label %95

95:                                               ; preds = %94
  call void @vp8_loop_filter_bv_sse2(i8* %61, i8* %60, i8* %59, i32 %20, i32 %22, %struct.loop_filter_info* nonnull %4) #3
  br label %96

96:                                               ; preds = %95, %94
  br i1 %55, label %98, label %97

97:                                               ; preds = %96
  call void @vp8_loop_filter_mbh_sse2(i8* %61, i8* %60, i8* %59, i32 %20, i32 %22, %struct.loop_filter_info* nonnull %4) #3
  br label %98

98:                                               ; preds = %96, %97
  br i1 %69, label %100, label %99

99:                                               ; preds = %98
  call void @vp8_loop_filter_bh_sse2(i8* %61, i8* %60, i8* %59, i32 %20, i32 %22, %struct.loop_filter_info* nonnull %4) #3
  br label %100

100:                                              ; preds = %98, %99, %68
  %101 = getelementptr inbounds i8, i8* %61, i64 16
  %102 = getelementptr inbounds i8, i8* %60, i64 8
  %103 = getelementptr inbounds i8, i8* %59, i64 8
  %104 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %58, i64 1
  %105 = add nuw nsw i32 %57, 1
  %106 = icmp eq i32 %105, %16
  br i1 %106, label %107, label %56

107:                                              ; preds = %100, %48
  %108 = phi i8* [ %53, %48 ], [ %101, %100 ]
  %109 = phi i8* [ %52, %48 ], [ %102, %100 ]
  %110 = phi i8* [ %51, %48 ], [ %103, %100 ]
  %111 = phi %struct.modeinfo* [ %50, %48 ], [ %104, %100 ]
  %112 = load i32, i32* %45, align 8
  %113 = sub nsw i32 %44, %112
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i8, i8* %108, i64 %114
  %116 = load i32, i32* %47, align 4
  %117 = sub nsw i32 %46, %116
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds i8, i8* %109, i64 %118
  %120 = getelementptr inbounds i8, i8* %110, i64 %118
  %121 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %111, i64 1
  %122 = add nuw nsw i32 %49, 1
  %123 = icmp eq i32 %122, %14
  br i1 %123, label %182, label %48

124:                                              ; preds = %172, %36
  %125 = phi i32 [ 0, %36 ], [ %180, %172 ]
  %126 = phi %struct.modeinfo* [ %18, %36 ], [ %179, %172 ]
  %127 = phi i8* [ %26, %36 ], [ %178, %172 ]
  br i1 %37, label %128, label %172

128:                                              ; preds = %124
  %129 = icmp eq i32 %125, 0
  br label %130

130:                                              ; preds = %167, %128
  %131 = phi i32 [ 0, %128 ], [ %170, %167 ]
  %132 = phi %struct.modeinfo* [ %126, %128 ], [ %169, %167 ]
  %133 = phi i8* [ %127, %128 ], [ %168, %167 ]
  %134 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %132, i64 0, i32 0, i32 0
  %135 = load i8, i8* %134, align 4
  switch i8 %135, label %136 [
    i8 4, label %140
    i8 9, label %140
  ]

136:                                              ; preds = %130
  %137 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %132, i64 0, i32 0, i32 6
  %138 = load i8, i8* %137, align 1
  %139 = icmp ne i8 %138, 0
  br label %140

140:                                              ; preds = %130, %130, %136
  %141 = phi i1 [ false, %130 ], [ %139, %136 ], [ false, %130 ]
  %142 = zext i8 %135 to i64
  %143 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 6, i64 %142
  %144 = load i8, i8* %143, align 1
  %145 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %132, i64 0, i32 0, i32 8
  %146 = load i8, i8* %145, align 1
  %147 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %132, i64 0, i32 0, i32 2
  %148 = load i8, i8* %147, align 2
  %149 = zext i8 %146 to i64
  %150 = zext i8 %148 to i64
  %151 = zext i8 %144 to i64
  %152 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 4, i64 %149, i64 %150, i64 %151
  %153 = load i8, i8* %152, align 1
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %167, label %155

155:                                              ; preds = %140
  %156 = zext i8 %153 to i64
  %157 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 0, i64 %156, i64 0
  %158 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 1, i64 %156, i64 0
  %159 = icmp eq i32 %131, 0
  br i1 %159, label %161, label %160

160:                                              ; preds = %155
  tail call void @vp8_loop_filter_simple_vertical_edge_sse2(i8* %133, i32 %20, i8* %157) #3
  br label %161

161:                                              ; preds = %155, %160
  br i1 %141, label %163, label %162

162:                                              ; preds = %161
  tail call void @vp8_loop_filter_bvs_sse2(i8* %133, i32 %20, i8* %158) #3
  br label %163

163:                                              ; preds = %162, %161
  br i1 %129, label %165, label %164

164:                                              ; preds = %163
  tail call void @vp8_loop_filter_simple_horizontal_edge_sse2(i8* %133, i32 %20, i8* %157) #3
  br label %165

165:                                              ; preds = %163, %164
  br i1 %141, label %167, label %166

166:                                              ; preds = %165
  tail call void @vp8_loop_filter_bhs_sse2(i8* %133, i32 %20, i8* %158) #3
  br label %167

167:                                              ; preds = %165, %166, %140
  %168 = getelementptr inbounds i8, i8* %133, i64 16
  %169 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %132, i64 1
  %170 = add nuw nsw i32 %131, 1
  %171 = icmp eq i32 %170, %16
  br i1 %171, label %172, label %130

172:                                              ; preds = %167, %124
  %173 = phi i8* [ %127, %124 ], [ %168, %167 ]
  %174 = phi %struct.modeinfo* [ %126, %124 ], [ %169, %167 ]
  %175 = load i32, i32* %39, align 8
  %176 = sub nsw i32 %38, %175
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds i8, i8* %173, i64 %177
  %179 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %174, i64 1
  %180 = add nuw nsw i32 %125, 1
  %181 = icmp eq i32 %180, %14
  br i1 %181, label %182, label %124

182:                                              ; preds = %172, %107, %35, %40
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_loop_filter_frame_yonly(%struct.VP8Common*, %struct.macroblockd* nocapture readonly, i32) local_unnamed_addr #0 {
  %4 = alloca %struct.loop_filter_info, align 8
  %5 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 10
  %6 = load %struct.yv12_buffer_config*, %struct.yv12_buffer_config** %5, align 8
  %7 = bitcast %struct.loop_filter_info* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #3
  %8 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %4, i64 0, i32 0
  %9 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %4, i64 0, i32 1
  %10 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %4, i64 0, i32 2
  %11 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %4, i64 0, i32 3
  %12 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 23
  %13 = bitcast %struct.loop_filter_info* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false)
  %14 = load i32, i32* %12, align 4
  %15 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 41
  %16 = load %struct.modeinfo*, %struct.modeinfo** %15, align 16
  tail call void @vp8_loop_filter_frame_init(%struct.VP8Common* %0, %struct.macroblockd* %1, i32 %2)
  %17 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 27
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %130

20:                                               ; preds = %3
  %21 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %6, i64 0, i32 13
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 28
  %24 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 43
  %25 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %6, i64 0, i32 4
  %26 = zext i32 %14 to i64
  %27 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %6, i64 0, i32 0
  %28 = load i32, i32* %23, align 8
  br label %29

29:                                               ; preds = %20, %116
  %30 = phi i32 [ %18, %20 ], [ %117, %116 ]
  %31 = phi i32 [ %28, %20 ], [ %118, %116 ]
  %32 = phi i8* [ %22, %20 ], [ %126, %116 ]
  %33 = phi i32 [ 0, %20 ], [ %128, %116 ]
  %34 = phi %struct.modeinfo* [ %16, %20 ], [ %127, %116 ]
  %35 = icmp sgt i32 %31, 0
  br i1 %35, label %36, label %116

36:                                               ; preds = %29
  %37 = icmp eq i32 %33, 0
  br label %38

38:                                               ; preds = %36, %108
  %39 = phi i8* [ %32, %36 ], [ %109, %108 ]
  %40 = phi i32 [ 0, %36 ], [ %111, %108 ]
  %41 = phi %struct.modeinfo* [ %34, %36 ], [ %110, %108 ]
  %42 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %41, i64 0, i32 0, i32 0
  %43 = load i8, i8* %42, align 4
  switch i8 %43, label %44 [
    i8 4, label %48
    i8 9, label %48
  ]

44:                                               ; preds = %38
  %45 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %41, i64 0, i32 0, i32 6
  %46 = load i8, i8* %45, align 1
  %47 = icmp ne i8 %46, 0
  br label %48

48:                                               ; preds = %38, %38, %44
  %49 = phi i1 [ false, %38 ], [ %47, %44 ], [ false, %38 ]
  %50 = zext i8 %43 to i64
  %51 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 6, i64 %50
  %52 = load i8, i8* %51, align 1
  %53 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %41, i64 0, i32 0, i32 8
  %54 = load i8, i8* %53, align 1
  %55 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %41, i64 0, i32 0, i32 2
  %56 = load i8, i8* %55, align 2
  %57 = zext i8 %54 to i64
  %58 = zext i8 %56 to i64
  %59 = zext i8 %52 to i64
  %60 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 4, i64 %57, i64 %58, i64 %59
  %61 = load i8, i8* %60, align 1
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %108, label %63

63:                                               ; preds = %48
  %64 = load i32, i32* %24, align 16
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %87

66:                                               ; preds = %63
  %67 = zext i8 %61 to i64
  %68 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 5, i64 %26, i64 %67
  %69 = load i8, i8* %68, align 1
  %70 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 0, i64 %67, i64 0
  store i8* %70, i8** %8, align 8
  %71 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 1, i64 %67, i64 0
  store i8* %71, i8** %9, align 8
  %72 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 2, i64 %67, i64 0
  store i8* %72, i8** %10, align 8
  %73 = zext i8 %69 to i64
  %74 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 3, i64 %73, i64 0
  store i8* %74, i8** %11, align 8
  %75 = icmp eq i32 %40, 0
  br i1 %75, label %78, label %76

76:                                               ; preds = %66
  %77 = load i32, i32* %25, align 8
  call void @vp8_loop_filter_mbv_sse2(i8* %39, i8* null, i8* null, i32 %77, i32 0, %struct.loop_filter_info* nonnull %4) #3
  br label %78

78:                                               ; preds = %66, %76
  br i1 %49, label %81, label %79

79:                                               ; preds = %78
  %80 = load i32, i32* %25, align 8
  call void @vp8_loop_filter_bv_sse2(i8* %39, i8* null, i8* null, i32 %80, i32 0, %struct.loop_filter_info* nonnull %4) #3
  br label %81

81:                                               ; preds = %79, %78
  br i1 %37, label %84, label %82

82:                                               ; preds = %81
  %83 = load i32, i32* %25, align 8
  call void @vp8_loop_filter_mbh_sse2(i8* %39, i8* null, i8* null, i32 %83, i32 0, %struct.loop_filter_info* nonnull %4) #3
  br label %84

84:                                               ; preds = %81, %82
  br i1 %49, label %108, label %85

85:                                               ; preds = %84
  %86 = load i32, i32* %25, align 8
  call void @vp8_loop_filter_bh_sse2(i8* %39, i8* null, i8* null, i32 %86, i32 0, %struct.loop_filter_info* nonnull %4) #3
  br label %108

87:                                               ; preds = %63
  %88 = icmp eq i32 %40, 0
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = load i32, i32* %25, align 8
  %91 = zext i8 %61 to i64
  %92 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 0, i64 %91, i64 0
  call void @vp8_loop_filter_simple_vertical_edge_sse2(i8* %39, i32 %90, i8* %92) #3
  br label %93

93:                                               ; preds = %87, %89
  br i1 %49, label %98, label %94

94:                                               ; preds = %93
  %95 = load i32, i32* %25, align 8
  %96 = zext i8 %61 to i64
  %97 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 1, i64 %96, i64 0
  call void @vp8_loop_filter_bvs_sse2(i8* %39, i32 %95, i8* %97) #3
  br label %98

98:                                               ; preds = %94, %93
  br i1 %37, label %103, label %99

99:                                               ; preds = %98
  %100 = load i32, i32* %25, align 8
  %101 = zext i8 %61 to i64
  %102 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 0, i64 %101, i64 0
  call void @vp8_loop_filter_simple_horizontal_edge_sse2(i8* %39, i32 %100, i8* %102) #3
  br label %103

103:                                              ; preds = %98, %99
  br i1 %49, label %108, label %104

104:                                              ; preds = %103
  %105 = load i32, i32* %25, align 8
  %106 = zext i8 %61 to i64
  %107 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 1, i64 %106, i64 0
  call void @vp8_loop_filter_bhs_sse2(i8* %39, i32 %105, i8* %107) #3
  br label %108

108:                                              ; preds = %84, %85, %48, %104, %103
  %109 = getelementptr inbounds i8, i8* %39, i64 16
  %110 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %41, i64 1
  %111 = add nuw nsw i32 %40, 1
  %112 = load i32, i32* %23, align 8
  %113 = icmp slt i32 %111, %112
  br i1 %113, label %38, label %114

114:                                              ; preds = %108
  %115 = load i32, i32* %17, align 4
  br label %116

116:                                              ; preds = %114, %29
  %117 = phi i32 [ %30, %29 ], [ %115, %114 ]
  %118 = phi i32 [ %31, %29 ], [ %112, %114 ]
  %119 = phi %struct.modeinfo* [ %34, %29 ], [ %110, %114 ]
  %120 = phi i8* [ %32, %29 ], [ %109, %114 ]
  %121 = load i32, i32* %25, align 8
  %122 = shl nsw i32 %121, 4
  %123 = load i32, i32* %27, align 8
  %124 = sub nsw i32 %122, %123
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds i8, i8* %120, i64 %125
  %127 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %119, i64 1
  %128 = add nuw nsw i32 %33, 1
  %129 = icmp slt i32 %128, %117
  br i1 %129, label %29, label %130

130:                                              ; preds = %116, %3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_loop_filter_partial_frame(%struct.VP8Common*, %struct.macroblockd* nocapture readonly, i32) local_unnamed_addr #0 {
  %4 = alloca %struct.loop_filter_info, align 8
  %5 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 10
  %6 = load %struct.yv12_buffer_config*, %struct.yv12_buffer_config** %5, align 8
  %7 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = ashr i32 %8, 4
  %10 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %6, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = ashr i32 %11, 4
  %13 = bitcast %struct.loop_filter_info* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #3
  %14 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %4, i64 0, i32 0
  %15 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %4, i64 0, i32 1
  %16 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %4, i64 0, i32 2
  %17 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %4, i64 0, i32 3
  %18 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 23
  %19 = bitcast %struct.loop_filter_info* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 32, i1 false)
  %20 = load i32, i32* %18, align 4
  tail call void @vp8_loop_filter_frame_init(%struct.VP8Common* %0, %struct.macroblockd* %1, i32 %2)
  %21 = sdiv i32 %12, 8
  %22 = add nsw i32 %12, 7
  %23 = icmp ugt i32 %22, 14
  %24 = load i32, i32* %10, align 4
  %25 = ashr i32 %24, 5
  %26 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %6, i64 0, i32 4
  %27 = select i1 %23, i32 %21, i32 1
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %29, label %135

29:                                               ; preds = %3
  %30 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 41
  %31 = load %struct.modeinfo*, %struct.modeinfo** %30, align 16
  %32 = add nsw i32 %9, 1
  %33 = mul nsw i32 %25, %32
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %31, i64 %34
  %36 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %6, i64 0, i32 13
  %37 = load i8*, i8** %36, align 8
  %38 = shl nsw i32 %25, 4
  %39 = load i32, i32* %26, align 8
  %40 = mul nsw i32 %38, %39
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %37, i64 %41
  %43 = icmp sgt i32 %8, 15
  %44 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 43
  %45 = zext i32 %20 to i64
  br label %46

46:                                               ; preds = %123, %29
  %47 = phi i32 [ %39, %29 ], [ %124, %123 ]
  %48 = phi i8* [ %42, %29 ], [ %131, %123 ]
  %49 = phi i32 [ 0, %29 ], [ %133, %123 ]
  %50 = phi %struct.modeinfo* [ %35, %29 ], [ %132, %123 ]
  br i1 %43, label %51, label %123

51:                                               ; preds = %46, %116
  %52 = phi i8* [ %117, %116 ], [ %48, %46 ]
  %53 = phi i32 [ %119, %116 ], [ 0, %46 ]
  %54 = phi %struct.modeinfo* [ %118, %116 ], [ %50, %46 ]
  %55 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %54, i64 0, i32 0, i32 0
  %56 = load i8, i8* %55, align 4
  switch i8 %56, label %57 [
    i8 4, label %61
    i8 9, label %61
  ]

57:                                               ; preds = %51
  %58 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %54, i64 0, i32 0, i32 6
  %59 = load i8, i8* %58, align 1
  %60 = icmp ne i8 %59, 0
  br label %61

61:                                               ; preds = %51, %51, %57
  %62 = phi i1 [ false, %51 ], [ %60, %57 ], [ false, %51 ]
  %63 = zext i8 %56 to i64
  %64 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 6, i64 %63
  %65 = load i8, i8* %64, align 1
  %66 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %54, i64 0, i32 0, i32 8
  %67 = load i8, i8* %66, align 1
  %68 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %54, i64 0, i32 0, i32 2
  %69 = load i8, i8* %68, align 2
  %70 = zext i8 %67 to i64
  %71 = zext i8 %69 to i64
  %72 = zext i8 %65 to i64
  %73 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 4, i64 %70, i64 %71, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %116, label %76

76:                                               ; preds = %61
  %77 = load i32, i32* %44, align 16
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %97

79:                                               ; preds = %76
  %80 = zext i8 %74 to i64
  %81 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 5, i64 %45, i64 %80
  %82 = load i8, i8* %81, align 1
  %83 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 0, i64 %80, i64 0
  store i8* %83, i8** %14, align 8
  %84 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 1, i64 %80, i64 0
  store i8* %84, i8** %15, align 8
  %85 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 2, i64 %80, i64 0
  store i8* %85, i8** %16, align 8
  %86 = zext i8 %82 to i64
  %87 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 3, i64 %86, i64 0
  store i8* %87, i8** %17, align 8
  %88 = icmp eq i32 %53, 0
  br i1 %88, label %91, label %89

89:                                               ; preds = %79
  %90 = load i32, i32* %26, align 8
  call void @vp8_loop_filter_mbv_sse2(i8* %52, i8* null, i8* null, i32 %90, i32 0, %struct.loop_filter_info* nonnull %4) #3
  br label %91

91:                                               ; preds = %79, %89
  %92 = load i32, i32* %26, align 8
  br i1 %62, label %96, label %93

93:                                               ; preds = %91
  call void @vp8_loop_filter_bv_sse2(i8* %52, i8* null, i8* null, i32 %92, i32 0, %struct.loop_filter_info* nonnull %4) #3
  %94 = load i32, i32* %26, align 8
  call void @vp8_loop_filter_mbh_sse2(i8* %52, i8* null, i8* null, i32 %94, i32 0, %struct.loop_filter_info* nonnull %4) #3
  %95 = load i32, i32* %26, align 8
  call void @vp8_loop_filter_bh_sse2(i8* %52, i8* null, i8* null, i32 %95, i32 0, %struct.loop_filter_info* nonnull %4) #3
  br label %116

96:                                               ; preds = %91
  call void @vp8_loop_filter_mbh_sse2(i8* %52, i8* null, i8* null, i32 %92, i32 0, %struct.loop_filter_info* nonnull %4) #3
  br label %116

97:                                               ; preds = %76
  %98 = icmp eq i32 %53, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %97
  %100 = load i32, i32* %26, align 8
  %101 = zext i8 %74 to i64
  %102 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 0, i64 %101, i64 0
  call void @vp8_loop_filter_simple_vertical_edge_sse2(i8* %52, i32 %100, i8* %102) #3
  br label %103

103:                                              ; preds = %97, %99
  br i1 %62, label %104, label %108

104:                                              ; preds = %103
  %105 = zext i8 %74 to i64
  %106 = load i32, i32* %26, align 8
  %107 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 0, i64 %105, i64 0
  call void @vp8_loop_filter_simple_horizontal_edge_sse2(i8* %52, i32 %106, i8* %107) #3
  br label %116

108:                                              ; preds = %103
  %109 = load i32, i32* %26, align 8
  %110 = zext i8 %74 to i64
  %111 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 1, i64 %110, i64 0
  call void @vp8_loop_filter_bvs_sse2(i8* %52, i32 %109, i8* %111) #3
  %112 = load i32, i32* %26, align 8
  %113 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 0, i64 %110, i64 0
  call void @vp8_loop_filter_simple_horizontal_edge_sse2(i8* %52, i32 %112, i8* %113) #3
  %114 = load i32, i32* %26, align 8
  %115 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 45, i32 1, i64 %110, i64 0
  call void @vp8_loop_filter_bhs_sse2(i8* %52, i32 %114, i8* %115) #3
  br label %116

116:                                              ; preds = %104, %93, %96, %61, %108
  %117 = getelementptr inbounds i8, i8* %52, i64 16
  %118 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %54, i64 1
  %119 = add nuw nsw i32 %53, 1
  %120 = icmp slt i32 %119, %9
  br i1 %120, label %51, label %121

121:                                              ; preds = %116
  %122 = load i32, i32* %26, align 8
  br label %123

123:                                              ; preds = %121, %46
  %124 = phi i32 [ %47, %46 ], [ %122, %121 ]
  %125 = phi %struct.modeinfo* [ %50, %46 ], [ %118, %121 ]
  %126 = phi i8* [ %48, %46 ], [ %117, %121 ]
  %127 = shl nsw i32 %124, 4
  %128 = load i32, i32* %7, align 8
  %129 = sub nsw i32 %127, %128
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds i8, i8* %126, i64 %130
  %132 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %125, i64 1
  %133 = add nuw nsw i32 %49, 1
  %134 = icmp eq i32 %133, %27
  br i1 %134, label %135, label %46

135:                                              ; preds = %123, %3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #3
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
