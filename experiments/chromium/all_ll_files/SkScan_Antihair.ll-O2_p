; ModuleID = '../../third_party/skia/src/core/SkScan_Antihair.cpp'
source_filename = "../../third_party/skia/src/core/SkScan_Antihair.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%class.SkBlitter = type { i32 (...)**, %class.SkAutoMalloc }
%class.SkAutoMalloc = type { %"class.std::__1::unique_ptr", i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.SkRegion::Cliperator" = type <{ %"class.SkRegion::Iterator", %struct.SkIRect, %struct.SkIRect, i8, [7 x i8] }>
%"class.SkRegion::Iterator" = type <{ %class.SkRegion*, i32*, %struct.SkIRect, i8, [7 x i8] }>
%class.HLine_SkAntiHairBlitter = type { %class.SkAntiHairBlitter }
%class.SkAntiHairBlitter = type { i32 (...)**, %class.SkBlitter* }
%class.Horish_SkAntiHairBlitter = type { %class.SkAntiHairBlitter }
%class.VLine_SkAntiHairBlitter = type { %class.SkAntiHairBlitter }
%class.Vertish_SkAntiHairBlitter = type { %class.SkAntiHairBlitter }
%class.SkRectClipBlitter = type { %class.SkBlitter, %class.SkBlitter*, %struct.SkIRect }
%class.SkRasterClip = type { %class.SkRegion, %class.SkAAClip, i8, i8, i8, %struct.SkIRect*, %class.sk_sp }
%class.SkAAClip = type { %struct.SkIRect, %"struct.SkAAClip::RunHead"* }
%"struct.SkAAClip::RunHead" = type opaque
%class.sk_sp = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkAAClipBlitterWrapper = type { %class.SkRegion, %class.SkAAClipBlitter, %class.SkRegion*, %class.SkBlitter* }
%class.SkAAClipBlitter = type { %class.SkBlitter, %class.SkBlitter*, %class.SkAAClip*, %struct.SkIRect, i16*, i8*, %class.SkAutoSMalloc, i8* }
%class.SkAutoSMalloc = type { i8*, i64, [256 x i32] }
%class.SkBlitterClipper = type { %class.SkNullBlitter, %class.SkRectClipBlitter, %class.SkRgnClipBlitter }
%class.SkNullBlitter = type { %class.SkBlitter }
%class.SkRgnClipBlitter = type { %class.SkBlitter, %class.SkBlitter*, %class.SkRegion* }

$_ZN17SkAntiHairBlitterD2Ev = comdat any

$_ZN23HLine_SkAntiHairBlitterD0Ev = comdat any

$_ZN23HLine_SkAntiHairBlitter7drawCapEiiii = comdat any

$_ZN23HLine_SkAntiHairBlitter8drawLineEiiii = comdat any

$_ZN24Horish_SkAntiHairBlitterD0Ev = comdat any

$_ZN24Horish_SkAntiHairBlitter7drawCapEiiii = comdat any

$_ZN24Horish_SkAntiHairBlitter8drawLineEiiii = comdat any

$_ZN23VLine_SkAntiHairBlitterD0Ev = comdat any

$_ZN23VLine_SkAntiHairBlitter7drawCapEiiii = comdat any

$_ZN23VLine_SkAntiHairBlitter8drawLineEiiii = comdat any

$_ZN25Vertish_SkAntiHairBlitterD0Ev = comdat any

$_ZN25Vertish_SkAntiHairBlitter7drawCapEiiii = comdat any

$_ZN25Vertish_SkAntiHairBlitter8drawLineEiiii = comdat any

$_ZTV23HLine_SkAntiHairBlitter = comdat any

$_ZTV24Horish_SkAntiHairBlitter = comdat any

$_ZTV23VLine_SkAntiHairBlitter = comdat any

$_ZTV25Vertish_SkAntiHairBlitter = comdat any

@_ZZN6SkScan15AntiHairLineRgnEPK7SkPointiPK8SkRegionP9SkBlitterE11fixedBounds = internal constant %struct.SkRect { float -3.276700e+04, float -3.276700e+04, float 3.276700e+04, float 3.276700e+04 }, align 4
@_ZTV23HLine_SkAntiHairBlitter = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkAntiHairBlitter*)* @_ZN17SkAntiHairBlitterD2Ev to i8*), i8* bitcast (void (%class.HLine_SkAntiHairBlitter*)* @_ZN23HLine_SkAntiHairBlitterD0Ev to i8*), i8* bitcast (i32 (%class.HLine_SkAntiHairBlitter*, i32, i32, i32, i32)* @_ZN23HLine_SkAntiHairBlitter7drawCapEiiii to i8*), i8* bitcast (i32 (%class.HLine_SkAntiHairBlitter*, i32, i32, i32, i32)* @_ZN23HLine_SkAntiHairBlitter8drawLineEiiii to i8*)] }, comdat, align 8
@_ZTV24Horish_SkAntiHairBlitter = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkAntiHairBlitter*)* @_ZN17SkAntiHairBlitterD2Ev to i8*), i8* bitcast (void (%class.Horish_SkAntiHairBlitter*)* @_ZN24Horish_SkAntiHairBlitterD0Ev to i8*), i8* bitcast (i32 (%class.Horish_SkAntiHairBlitter*, i32, i32, i32, i32)* @_ZN24Horish_SkAntiHairBlitter7drawCapEiiii to i8*), i8* bitcast (i32 (%class.Horish_SkAntiHairBlitter*, i32, i32, i32, i32)* @_ZN24Horish_SkAntiHairBlitter8drawLineEiiii to i8*)] }, comdat, align 8
@_ZTV23VLine_SkAntiHairBlitter = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkAntiHairBlitter*)* @_ZN17SkAntiHairBlitterD2Ev to i8*), i8* bitcast (void (%class.VLine_SkAntiHairBlitter*)* @_ZN23VLine_SkAntiHairBlitterD0Ev to i8*), i8* bitcast (i32 (%class.VLine_SkAntiHairBlitter*, i32, i32, i32, i32)* @_ZN23VLine_SkAntiHairBlitter7drawCapEiiii to i8*), i8* bitcast (i32 (%class.VLine_SkAntiHairBlitter*, i32, i32, i32, i32)* @_ZN23VLine_SkAntiHairBlitter8drawLineEiiii to i8*)] }, comdat, align 8
@_ZTV25Vertish_SkAntiHairBlitter = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkAntiHairBlitter*)* @_ZN17SkAntiHairBlitterD2Ev to i8*), i8* bitcast (void (%class.Vertish_SkAntiHairBlitter*)* @_ZN25Vertish_SkAntiHairBlitterD0Ev to i8*), i8* bitcast (i32 (%class.Vertish_SkAntiHairBlitter*, i32, i32, i32, i32)* @_ZN25Vertish_SkAntiHairBlitter7drawCapEiiii to i8*), i8* bitcast (i32 (%class.Vertish_SkAntiHairBlitter*, i32, i32, i32, i32)* @_ZN25Vertish_SkAntiHairBlitter8drawLineEiiii to i8*)] }, comdat, align 8
@_ZTV17SkRectClipBlitter = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZTV13SkNullBlitter = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZTV16SkRgnClipBlitter = external unnamed_addr constant { [16 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkScan15AntiHairLineRgnEPK7SkPointiPK8SkRegionP9SkBlitter(%struct.SkPoint*, i32, %class.SkRegion*, %class.SkBlitter*) local_unnamed_addr #0 align 2 {
  %5 = alloca %struct.SkIRect, align 4
  %6 = alloca <4 x float>, align 16
  %7 = bitcast <4 x float>* %6 to %struct.SkRect*
  %8 = alloca [2 x %struct.SkPoint], align 16
  %9 = alloca <4 x i32>, align 16
  %10 = bitcast <4 x i32>* %9 to %struct.SkIRect*
  %11 = alloca %"class.SkRegion::Cliperator", align 8
  %12 = icmp ne %class.SkRegion* %2, null
  br i1 %12, label %13, label %17

13:                                               ; preds = %4
  %14 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %2, i64 0, i32 1
  %15 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %14, align 8
  %16 = icmp eq %"struct.SkRegion::RunHead"* %15, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  br i1 %16, label %145, label %17

17:                                               ; preds = %13, %4
  %18 = bitcast <4 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #7
  %19 = bitcast <4 x float>* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 -1, i64 16, i1 false)
  br i1 %12, label %20, label %25

20:                                               ; preds = %17
  %21 = bitcast %class.SkRegion* %2 to <4 x i32>*
  %22 = load <4 x i32>, <4 x i32>* %21, align 4
  %23 = sitofp <4 x i32> %22 to <4 x float>
  %24 = fadd <4 x float> %23, <float -1.000000e+00, float -1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %24, <4 x float>* %6, align 16
  br label %25

25:                                               ; preds = %20, %17
  %26 = add i32 %1, -1
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %28, label %52

28:                                               ; preds = %25
  %29 = bitcast [2 x %struct.SkPoint]* %8 to i8*
  %30 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %8, i64 0, i64 0
  %31 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %8, i64 0, i64 0, i32 0
  %32 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %8, i64 0, i64 0, i32 1
  %33 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %8, i64 0, i64 1, i32 0
  %34 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %8, i64 0, i64 1, i32 1
  %35 = bitcast <4 x i32>* %9 to i8*
  %36 = getelementptr inbounds <4 x i32>, <4 x i32>* %9, i64 0, i64 0
  %37 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %10, i64 0, i32 1
  %38 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %10, i64 0, i32 2
  %39 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %10, i64 0, i32 3
  %40 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %2, i64 0, i32 1
  %41 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %2, i64 0, i32 0
  %42 = bitcast %struct.SkIRect* %5 to i8*
  %43 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %2, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %2, i64 0, i32 0, i32 1
  %45 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %2, i64 0, i32 0, i32 2
  %46 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %2, i64 0, i32 0, i32 3
  %47 = bitcast %"class.SkRegion::Cliperator"* %11 to i8*
  %48 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %11, i64 0, i32 2
  %49 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %11, i64 0, i32 3
  %50 = zext i32 %26 to i64
  %51 = bitcast [2 x %struct.SkPoint]* %8 to i8*
  br label %53

52:                                               ; preds = %142, %25
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #7
  br label %145

53:                                               ; preds = %142, %28
  %54 = phi i64 [ 0, %28 ], [ %143, %142 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #7
  %55 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 %54
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %51, i8 -1, i64 16, i1 false)
  %56 = call zeroext i1 @_ZN13SkLineClipper13IntersectLineEPK7SkPointRK6SkRectPS0_(%struct.SkPoint* %55, %struct.SkRect* nonnull dereferenceable(16) @_ZZN6SkScan15AntiHairLineRgnEPK7SkPointiPK8SkRegionP9SkBlitterE11fixedBounds, %struct.SkPoint* nonnull %30) #7
  br i1 %56, label %57, label %142

57:                                               ; preds = %53
  br i1 %12, label %58, label %60

58:                                               ; preds = %57
  %59 = call zeroext i1 @_ZN13SkLineClipper13IntersectLineEPK7SkPointRK6SkRectPS0_(%struct.SkPoint* nonnull %30, %struct.SkRect* nonnull dereferenceable(16) %7, %struct.SkPoint* nonnull %30) #7
  br i1 %59, label %60, label %142

60:                                               ; preds = %58, %57
  %61 = load float, float* %31, align 16
  %62 = fmul float %61, 6.400000e+01
  %63 = fptosi float %62 to i32
  %64 = load float, float* %32, align 4
  %65 = fmul float %64, 6.400000e+01
  %66 = fptosi float %65 to i32
  %67 = load float, float* %33, align 8
  %68 = fmul float %67, 6.400000e+01
  %69 = fptosi float %68 to i32
  %70 = load float, float* %34, align 4
  %71 = fmul float %70, 6.400000e+01
  %72 = fptosi float %71 to i32
  br i1 %12, label %73, label %140

73:                                               ; preds = %60
  %74 = icmp slt i32 %69, %63
  %75 = select i1 %74, i32 %69, i32 %63
  %76 = icmp slt i32 %72, %66
  %77 = select i1 %76, i32 %72, i32 %66
  %78 = icmp slt i32 %63, %69
  %79 = select i1 %78, i32 %69, i32 %63
  %80 = icmp slt i32 %66, %72
  %81 = select i1 %80, i32 %72, i32 %66
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #7
  %82 = add nsw i32 %79, 63
  %83 = add nsw i32 %81, 63
  %84 = insertelement <4 x i32> undef, i32 %75, i32 0
  %85 = insertelement <4 x i32> %84, i32 %77, i32 1
  %86 = insertelement <4 x i32> %85, i32 %82, i32 2
  %87 = insertelement <4 x i32> %86, i32 %83, i32 3
  %88 = ashr <4 x i32> %87, <i32 6, i32 6, i32 6, i32 6>
  %89 = add nsw <4 x i32> %88, <i32 -1, i32 -1, i32 1, i32 1>
  store <4 x i32> %89, <4 x i32>* %9, align 16
  %90 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %40, align 8
  %91 = icmp eq %"struct.SkRegion::RunHead"* %90, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  br i1 %91, label %141, label %92

92:                                               ; preds = %73
  %93 = extractelement <4 x i32> %89, i32 0
  %94 = extractelement <4 x i32> %89, i32 2
  %95 = sub nsw i32 %94, %93
  %96 = extractelement <4 x i32> %89, i32 1
  %97 = extractelement <4 x i32> %89, i32 3
  %98 = sub nsw i32 %97, %96
  %99 = icmp slt i32 %95, 1
  %100 = icmp slt i32 %98, 1
  %101 = or i1 %99, %100
  br i1 %101, label %141, label %102

102:                                              ; preds = %92
  %103 = or i32 %98, %95
  %104 = sext i32 %103 to i64
  %105 = add nsw i64 %104, 2147483648
  %106 = icmp ugt i64 %105, 4294967295
  br i1 %106, label %141, label %107

107:                                              ; preds = %102
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %42, i8 -86, i64 16, i1 false) #7
  %108 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %5, %struct.SkIRect* dereferenceable(16) %41, %struct.SkIRect* nonnull dereferenceable(16) %10) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #7
  br i1 %108, label %109, label %141

109:                                              ; preds = %107
  %110 = load i32, i32* %36, align 16
  %111 = load i32, i32* %38, align 8
  %112 = icmp slt i32 %110, %111
  br i1 %112, label %113, label %132

113:                                              ; preds = %109
  %114 = load i32, i32* %37, align 4
  %115 = load i32, i32* %39, align 4
  %116 = icmp slt i32 %114, %115
  br i1 %116, label %117, label %132

117:                                              ; preds = %113
  %118 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %40, align 8
  %119 = icmp eq %"struct.SkRegion::RunHead"* %118, null
  br i1 %119, label %120, label %132

120:                                              ; preds = %117
  %121 = load i32, i32* %43, align 8
  %122 = icmp sgt i32 %121, %110
  br i1 %122, label %132, label %123

123:                                              ; preds = %120
  %124 = load i32, i32* %44, align 4
  %125 = icmp sgt i32 %124, %114
  br i1 %125, label %132, label %126

126:                                              ; preds = %123
  %127 = load i32, i32* %45, align 8
  %128 = icmp slt i32 %127, %111
  br i1 %128, label %132, label %129

129:                                              ; preds = %126
  %130 = load i32, i32* %46, align 4
  %131 = icmp slt i32 %130, %115
  br i1 %131, label %132, label %139

132:                                              ; preds = %129, %109, %113, %117, %120, %123, %126
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %47) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 80, i1 false)
  call void @_ZN8SkRegion10CliperatorC1ERKS_RK7SkIRect(%"class.SkRegion::Cliperator"* nonnull %11, %class.SkRegion* nonnull dereferenceable(24) %2, %struct.SkIRect* nonnull dereferenceable(16) %10) #7
  %133 = load i8, i8* %49, align 8, !range !2
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %135, label %138

135:                                              ; preds = %132, %135
  call fastcc void @_ZL16do_anti_hairlineiiiiPK7SkIRectP9SkBlitter(i32 %63, i32 %66, i32 %69, i32 %72, %struct.SkIRect* %48, %class.SkBlitter* %3)
  call void @_ZN8SkRegion10Cliperator4nextEv(%"class.SkRegion::Cliperator"* nonnull %11) #7
  %136 = load i8, i8* %49, align 8, !range !2
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %135, label %138

138:                                              ; preds = %135, %132
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %47) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #7
  br label %142

139:                                              ; preds = %129
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #7
  br label %140

140:                                              ; preds = %139, %60
  call fastcc void @_ZL16do_anti_hairlineiiiiPK7SkIRectP9SkBlitter(i32 %63, i32 %66, i32 %69, i32 %72, %struct.SkIRect* null, %class.SkBlitter* %3)
  br label %142

141:                                              ; preds = %107, %92, %73, %102
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #7
  br label %142

142:                                              ; preds = %140, %138, %141, %58, %53
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #7
  %143 = add nuw nsw i64 %54, 1
  %144 = icmp eq i64 %143, %50
  br i1 %144, label %52, label %53

145:                                              ; preds = %13, %52
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN13SkLineClipper13IntersectLineEPK7SkPointRK6SkRectPS0_(%struct.SkPoint*, %struct.SkRect* dereferenceable(16), %struct.SkPoint*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN8SkRegion10CliperatorC1ERKS_RK7SkIRect(%"class.SkRegion::Cliperator"*, %class.SkRegion* dereferenceable(24), %struct.SkIRect* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL16do_anti_hairlineiiiiPK7SkIRectP9SkBlitter(i32, i32, i32, i32, %struct.SkIRect* readonly, %class.SkBlitter*) unnamed_addr #0 {
  %7 = alloca %class.HLine_SkAntiHairBlitter, align 8
  %8 = alloca %class.Horish_SkAntiHairBlitter, align 8
  %9 = alloca %class.VLine_SkAntiHairBlitter, align 8
  %10 = alloca %class.Vertish_SkAntiHairBlitter, align 8
  %11 = alloca %class.SkRectClipBlitter, align 8
  %12 = sub nsw i32 0, %0
  %13 = and i32 %12, %0
  %14 = sub nsw i32 0, %1
  %15 = and i32 %14, %1
  %16 = or i32 %15, %13
  %17 = sub nsw i32 0, %2
  %18 = and i32 %17, %2
  %19 = or i32 %16, %18
  %20 = sub nsw i32 0, %3
  %21 = and i32 %20, %3
  %22 = or i32 %19, %21
  %23 = icmp sgt i32 %22, -1
  br i1 %23, label %24, label %298

24:                                               ; preds = %6
  %25 = sub nsw i32 %2, %0
  %26 = icmp slt i32 %25, 0
  %27 = sub nsw i32 0, %25
  %28 = select i1 %26, i32 %27, i32 %25
  %29 = icmp sgt i32 %28, 32704
  br i1 %29, label %36, label %30

30:                                               ; preds = %24
  %31 = sub nsw i32 %3, %1
  %32 = icmp slt i32 %31, 0
  %33 = sub nsw i32 0, %31
  %34 = select i1 %32, i32 %33, i32 %31
  %35 = icmp sgt i32 %34, 32704
  br i1 %35, label %36, label %43

36:                                               ; preds = %30, %24
  %37 = ashr i32 %0, 1
  %38 = ashr i32 %2, 1
  %39 = add nsw i32 %38, %37
  %40 = ashr i32 %1, 1
  %41 = ashr i32 %3, 1
  %42 = add nsw i32 %41, %40
  tail call fastcc void @_ZL16do_anti_hairlineiiiiPK7SkIRectP9SkBlitter(i32 %0, i32 %1, i32 %39, i32 %42, %struct.SkIRect* %4, %class.SkBlitter* %5)
  tail call fastcc void @_ZL16do_anti_hairlineiiiiPK7SkIRectP9SkBlitter(i32 %39, i32 %42, i32 %2, i32 %3, %struct.SkIRect* %4, %class.SkBlitter* %5)
  br label %298

43:                                               ; preds = %30
  %44 = bitcast %class.HLine_SkAntiHairBlitter* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #7
  %45 = getelementptr inbounds %class.HLine_SkAntiHairBlitter, %class.HLine_SkAntiHairBlitter* %7, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %class.HLine_SkAntiHairBlitter, %class.HLine_SkAntiHairBlitter* %7, i64 0, i32 0, i32 1
  store %class.SkBlitter* null, %class.SkBlitter** %46, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV23HLine_SkAntiHairBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %47 = bitcast %class.Horish_SkAntiHairBlitter* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #7
  %48 = getelementptr inbounds %class.Horish_SkAntiHairBlitter, %class.Horish_SkAntiHairBlitter* %8, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %class.Horish_SkAntiHairBlitter, %class.Horish_SkAntiHairBlitter* %8, i64 0, i32 0, i32 1
  store %class.SkBlitter* null, %class.SkBlitter** %49, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV24Horish_SkAntiHairBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %48, align 8
  %50 = bitcast %class.VLine_SkAntiHairBlitter* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #7
  %51 = getelementptr inbounds %class.VLine_SkAntiHairBlitter, %class.VLine_SkAntiHairBlitter* %9, i64 0, i32 0, i32 0
  %52 = getelementptr inbounds %class.VLine_SkAntiHairBlitter, %class.VLine_SkAntiHairBlitter* %9, i64 0, i32 0, i32 1
  store %class.SkBlitter* null, %class.SkBlitter** %52, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV23VLine_SkAntiHairBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %51, align 8
  %53 = bitcast %class.Vertish_SkAntiHairBlitter* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #7
  %54 = getelementptr inbounds %class.Vertish_SkAntiHairBlitter, %class.Vertish_SkAntiHairBlitter* %10, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %class.Vertish_SkAntiHairBlitter, %class.Vertish_SkAntiHairBlitter* %10, i64 0, i32 0, i32 1
  store %class.SkBlitter* null, %class.SkBlitter** %55, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV25Vertish_SkAntiHairBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %56 = icmp sgt i32 %28, %34
  br i1 %56, label %57, label %150

57:                                               ; preds = %43
  %58 = icmp slt i32 %2, %0
  %59 = select i1 %58, i32 %2, i32 %0
  %60 = select i1 %58, i32 %3, i32 %1
  %61 = select i1 %58, i32 %0, i32 %2
  %62 = select i1 %58, i32 %1, i32 %3
  %63 = ashr i32 %59, 6
  %64 = add i32 %61, 63
  %65 = ashr i32 %64, 6
  %66 = shl i32 %60, 10
  %67 = icmp eq i32 %62, %60
  br i1 %67, label %68, label %70

68:                                               ; preds = %57
  %69 = getelementptr inbounds %class.HLine_SkAntiHairBlitter, %class.HLine_SkAntiHairBlitter* %7, i64 0, i32 0
  br label %82

70:                                               ; preds = %57
  %71 = sub nsw i32 %62, %60
  %72 = sub nsw i32 %61, %59
  %73 = shl i32 %71, 16
  %74 = sdiv i32 %73, %72
  %75 = and i32 %59, 63
  %76 = sub nsw i32 32, %75
  %77 = mul nsw i32 %74, %76
  %78 = add nsw i32 %77, 32
  %79 = ashr i32 %78, 6
  %80 = add nsw i32 %79, %66
  %81 = getelementptr inbounds %class.Horish_SkAntiHairBlitter, %class.Horish_SkAntiHairBlitter* %8, i64 0, i32 0
  br label %82

82:                                               ; preds = %70, %68
  %83 = phi i32 [ %66, %68 ], [ %80, %70 ]
  %84 = phi i32 [ 0, %68 ], [ %74, %70 ]
  %85 = phi %class.SkAntiHairBlitter* [ %69, %68 ], [ %81, %70 ]
  %86 = sub nsw i32 %65, %63
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %88, label %90

88:                                               ; preds = %82
  %89 = sub nsw i32 %61, %59
  br label %94

90:                                               ; preds = %82
  %91 = and i32 %59, 63
  %92 = sub nuw nsw i32 64, %91
  %93 = and i32 %61, 63
  br label %94

94:                                               ; preds = %90, %88
  %95 = phi i32 [ %89, %88 ], [ %92, %90 ]
  %96 = phi i32 [ 0, %88 ], [ %93, %90 ]
  %97 = icmp eq %struct.SkIRect* %4, null
  br i1 %97, label %245, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 2
  %100 = load i32, i32* %99, align 4
  %101 = icmp slt i32 %63, %100
  br i1 %101, label %102, label %297

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp sgt i32 %65, %104
  br i1 %105, label %106, label %297

106:                                              ; preds = %102
  %107 = icmp sgt i32 %104, %63
  br i1 %107, label %108, label %117

108:                                              ; preds = %106
  %109 = sub nsw i32 %104, %63
  %110 = mul nsw i32 %109, %84
  %111 = add nsw i32 %110, %83
  %112 = sub nsw i32 %65, %104
  %113 = icmp eq i32 %112, 1
  br i1 %113, label %114, label %117

114:                                              ; preds = %108
  %115 = and i32 %64, 63
  %116 = add nuw nsw i32 %115, 1
  br label %117

117:                                              ; preds = %108, %114, %106
  %118 = phi i32 [ %116, %114 ], [ 64, %108 ], [ %95, %106 ]
  %119 = phi i32 [ 0, %114 ], [ %96, %108 ], [ %96, %106 ]
  %120 = phi i32 [ %104, %114 ], [ %104, %108 ], [ %63, %106 ]
  %121 = phi i32 [ %111, %114 ], [ %111, %108 ], [ %83, %106 ]
  %122 = icmp sgt i32 %65, %100
  %123 = select i1 %122, i32 0, i32 %119
  %124 = select i1 %122, i32 %100, i32 %65
  %125 = icmp eq i32 %124, %120
  br i1 %125, label %297, label %126

126:                                              ; preds = %117
  %127 = icmp sgt i32 %84, -1
  %128 = xor i32 %120, -1
  %129 = add i32 %124, %128
  %130 = mul nsw i32 %129, %84
  %131 = add nsw i32 %130, %121
  %132 = select i1 %127, i32 %121, i32 %131
  %133 = select i1 %127, i32 %131, i32 %121
  %134 = add nsw i32 %133, 98303
  %135 = add nsw i32 %132, -32768
  %136 = ashr i32 %134, 16
  %137 = ashr i32 %135, 16
  %138 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 3
  %139 = load i32, i32* %138, align 4
  %140 = icmp sgt i32 %137, %139
  br i1 %140, label %297, label %141

141:                                              ; preds = %126
  %142 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = icmp slt i32 %136, %143
  br i1 %144, label %297, label %145

145:                                              ; preds = %141
  %146 = icmp slt i32 %143, %137
  %147 = icmp sgt i32 %139, %136
  %148 = and i1 %147, %146
  %149 = select i1 %148, %struct.SkIRect* null, %struct.SkIRect* %4
  br label %245

150:                                              ; preds = %43
  %151 = icmp slt i32 %3, %1
  %152 = select i1 %151, i32 %2, i32 %0
  %153 = select i1 %151, i32 %3, i32 %1
  %154 = select i1 %151, i32 %0, i32 %2
  %155 = select i1 %151, i32 %1, i32 %3
  %156 = ashr i32 %153, 6
  %157 = add i32 %155, 63
  %158 = ashr i32 %157, 6
  %159 = shl i32 %152, 10
  %160 = icmp eq i32 %154, %152
  br i1 %160, label %161, label %165

161:                                              ; preds = %150
  %162 = icmp eq i32 %155, %153
  br i1 %162, label %297, label %163

163:                                              ; preds = %161
  %164 = getelementptr inbounds %class.VLine_SkAntiHairBlitter, %class.VLine_SkAntiHairBlitter* %9, i64 0, i32 0
  br label %177

165:                                              ; preds = %150
  %166 = sub nsw i32 %154, %152
  %167 = sub nsw i32 %155, %153
  %168 = shl i32 %166, 16
  %169 = sdiv i32 %168, %167
  %170 = and i32 %153, 63
  %171 = sub nsw i32 32, %170
  %172 = mul nsw i32 %169, %171
  %173 = add nsw i32 %172, 32
  %174 = ashr i32 %173, 6
  %175 = add nsw i32 %174, %159
  %176 = getelementptr inbounds %class.Vertish_SkAntiHairBlitter, %class.Vertish_SkAntiHairBlitter* %10, i64 0, i32 0
  br label %177

177:                                              ; preds = %165, %163
  %178 = phi i32 [ %159, %163 ], [ %175, %165 ]
  %179 = phi i32 [ 0, %163 ], [ %169, %165 ]
  %180 = phi %class.SkAntiHairBlitter* [ %164, %163 ], [ %176, %165 ]
  %181 = sub nsw i32 %158, %156
  %182 = icmp eq i32 %181, 1
  br i1 %182, label %183, label %185

183:                                              ; preds = %177
  %184 = sub nsw i32 %155, %153
  br label %189

185:                                              ; preds = %177
  %186 = and i32 %153, 63
  %187 = sub nuw nsw i32 64, %186
  %188 = and i32 %155, 63
  br label %189

189:                                              ; preds = %185, %183
  %190 = phi i32 [ %184, %183 ], [ %187, %185 ]
  %191 = phi i32 [ 0, %183 ], [ %188, %185 ]
  %192 = icmp eq %struct.SkIRect* %4, null
  br i1 %192, label %245, label %193

193:                                              ; preds = %189
  %194 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 3
  %195 = load i32, i32* %194, align 4
  %196 = icmp slt i32 %156, %195
  br i1 %196, label %197, label %297

197:                                              ; preds = %193
  %198 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 1
  %199 = load i32, i32* %198, align 4
  %200 = icmp sgt i32 %158, %199
  br i1 %200, label %201, label %297

201:                                              ; preds = %197
  %202 = icmp sgt i32 %199, %156
  br i1 %202, label %203, label %212

203:                                              ; preds = %201
  %204 = sub nsw i32 %199, %156
  %205 = mul nsw i32 %204, %179
  %206 = add nsw i32 %205, %178
  %207 = sub nsw i32 %158, %199
  %208 = icmp eq i32 %207, 1
  br i1 %208, label %209, label %212

209:                                              ; preds = %203
  %210 = and i32 %157, 63
  %211 = add nuw nsw i32 %210, 1
  br label %212

212:                                              ; preds = %203, %209, %201
  %213 = phi i32 [ %211, %209 ], [ 64, %203 ], [ %190, %201 ]
  %214 = phi i32 [ 0, %209 ], [ %191, %203 ], [ %191, %201 ]
  %215 = phi i32 [ %199, %209 ], [ %199, %203 ], [ %156, %201 ]
  %216 = phi i32 [ %206, %209 ], [ %206, %203 ], [ %178, %201 ]
  %217 = icmp sgt i32 %158, %195
  %218 = select i1 %217, i32 0, i32 %214
  %219 = select i1 %217, i32 %195, i32 %158
  %220 = icmp eq i32 %219, %215
  br i1 %220, label %297, label %221

221:                                              ; preds = %212
  %222 = icmp sgt i32 %179, -1
  %223 = xor i32 %215, -1
  %224 = add i32 %219, %223
  %225 = mul nsw i32 %224, %179
  %226 = add nsw i32 %225, %216
  %227 = select i1 %222, i32 %216, i32 %226
  %228 = select i1 %222, i32 %226, i32 %216
  %229 = add nsw i32 %228, 98303
  %230 = add nsw i32 %227, -32768
  %231 = ashr i32 %229, 16
  %232 = ashr i32 %230, 16
  %233 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 2
  %234 = load i32, i32* %233, align 4
  %235 = icmp sgt i32 %232, %234
  br i1 %235, label %297, label %236

236:                                              ; preds = %221
  %237 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 0
  %238 = load i32, i32* %237, align 4
  %239 = icmp slt i32 %231, %238
  br i1 %239, label %297, label %240

240:                                              ; preds = %236
  %241 = icmp slt i32 %238, %232
  %242 = icmp sgt i32 %234, %231
  %243 = and i1 %242, %241
  %244 = select i1 %243, %struct.SkIRect* null, %struct.SkIRect* %4
  br label %245

245:                                              ; preds = %240, %145, %94, %189
  %246 = phi %struct.SkIRect* [ null, %94 ], [ null, %189 ], [ %149, %145 ], [ %244, %240 ]
  %247 = phi i32 [ %95, %94 ], [ %190, %189 ], [ %118, %145 ], [ %213, %240 ]
  %248 = phi i32 [ %96, %94 ], [ %191, %189 ], [ %123, %145 ], [ %218, %240 ]
  %249 = phi i32 [ %63, %94 ], [ %156, %189 ], [ %120, %145 ], [ %215, %240 ]
  %250 = phi i32 [ %65, %94 ], [ %158, %189 ], [ %124, %145 ], [ %219, %240 ]
  %251 = phi i32 [ %83, %94 ], [ %178, %189 ], [ %121, %145 ], [ %216, %240 ]
  %252 = phi i32 [ %84, %94 ], [ %179, %189 ], [ %84, %145 ], [ %179, %240 ]
  %253 = phi %class.SkAntiHairBlitter* [ %85, %94 ], [ %180, %189 ], [ %85, %145 ], [ %180, %240 ]
  %254 = bitcast %class.SkRectClipBlitter* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %254) #7
  %255 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %11, i64 0, i32 1
  %256 = bitcast %class.SkBlitter** %255 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %256, i8 -86, i64 24, i1 false)
  %257 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %11, i64 0, i32 0, i32 0
  %258 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %11, i64 0, i32 0, i32 1
  %259 = bitcast %class.SkAutoMalloc* %258 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %259, i8 0, i64 16, i1 false) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17SkRectClipBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %257, align 8
  %260 = icmp eq %struct.SkIRect* %246, null
  br i1 %260, label %267, label %261

261:                                              ; preds = %245
  %262 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %11, i64 0, i32 1
  store %class.SkBlitter* %5, %class.SkBlitter** %262, align 8
  %263 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %11, i64 0, i32 2
  %264 = bitcast %struct.SkIRect* %263 to i8*
  %265 = bitcast %struct.SkIRect* %246 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %264, i8* nonnull align 4 %265, i64 16, i1 false) #7
  %266 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %11, i64 0, i32 0
  br label %267

267:                                              ; preds = %245, %261
  %268 = phi %class.SkBlitter* [ %266, %261 ], [ %5, %245 ]
  %269 = getelementptr inbounds %class.SkAntiHairBlitter, %class.SkAntiHairBlitter* %253, i64 0, i32 1
  store %class.SkBlitter* %268, %class.SkBlitter** %269, align 8
  %270 = bitcast %class.SkAntiHairBlitter* %253 to i32 (%class.SkAntiHairBlitter*, i32, i32, i32, i32)***
  %271 = load i32 (%class.SkAntiHairBlitter*, i32, i32, i32, i32)**, i32 (%class.SkAntiHairBlitter*, i32, i32, i32, i32)*** %270, align 8
  %272 = getelementptr inbounds i32 (%class.SkAntiHairBlitter*, i32, i32, i32, i32)*, i32 (%class.SkAntiHairBlitter*, i32, i32, i32, i32)** %271, i64 2
  %273 = load i32 (%class.SkAntiHairBlitter*, i32, i32, i32, i32)*, i32 (%class.SkAntiHairBlitter*, i32, i32, i32, i32)** %272, align 8
  %274 = call i32 %273(%class.SkAntiHairBlitter* %253, i32 %249, i32 %251, i32 %252, i32 %247) #7
  %275 = add nsw i32 %249, 1
  %276 = sub nsw i32 %250, %275
  %277 = icmp sgt i32 %248, 0
  %278 = zext i1 %277 to i32
  %279 = sub i32 %276, %278
  %280 = icmp sgt i32 %279, 0
  br i1 %280, label %281, label %287

281:                                              ; preds = %267
  %282 = add nsw i32 %279, %275
  %283 = load i32 (%class.SkAntiHairBlitter*, i32, i32, i32, i32)**, i32 (%class.SkAntiHairBlitter*, i32, i32, i32, i32)*** %270, align 8
  %284 = getelementptr inbounds i32 (%class.SkAntiHairBlitter*, i32, i32, i32, i32)*, i32 (%class.SkAntiHairBlitter*, i32, i32, i32, i32)** %283, i64 3
  %285 = load i32 (%class.SkAntiHairBlitter*, i32, i32, i32, i32)*, i32 (%class.SkAntiHairBlitter*, i32, i32, i32, i32)** %284, align 8
  %286 = call i32 %285(%class.SkAntiHairBlitter* %253, i32 %275, i32 %282, i32 %274, i32 %252) #7
  br label %287

287:                                              ; preds = %281, %267
  %288 = phi i32 [ %286, %281 ], [ %274, %267 ]
  br i1 %277, label %289, label %295

289:                                              ; preds = %287
  %290 = add nsw i32 %250, -1
  %291 = load i32 (%class.SkAntiHairBlitter*, i32, i32, i32, i32)**, i32 (%class.SkAntiHairBlitter*, i32, i32, i32, i32)*** %270, align 8
  %292 = getelementptr inbounds i32 (%class.SkAntiHairBlitter*, i32, i32, i32, i32)*, i32 (%class.SkAntiHairBlitter*, i32, i32, i32, i32)** %291, i64 2
  %293 = load i32 (%class.SkAntiHairBlitter*, i32, i32, i32, i32)*, i32 (%class.SkAntiHairBlitter*, i32, i32, i32, i32)** %292, align 8
  %294 = call i32 %293(%class.SkAntiHairBlitter* %253, i32 %290, i32 %288, i32 %252, i32 %248) #7
  br label %295

295:                                              ; preds = %289, %287
  %296 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %11, i64 0, i32 0
  call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* nonnull %296) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %254) #7
  br label %297

297:                                              ; preds = %221, %236, %126, %141, %212, %193, %197, %161, %117, %98, %102, %295
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #7
  br label %298

298:                                              ; preds = %6, %297, %36
  ret void
}

declare void @_ZN8SkRegion10Cliperator4nextEv(%"class.SkRegion::Cliperator"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkScan12AntiHairRectERK6SkRectRK12SkRasterClipP9SkBlitter(%struct.SkRect* nocapture readonly dereferenceable(16), %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #0 align 2 {
  %4 = alloca [5 x %struct.SkPoint], align 16
  %5 = bitcast [5 x %struct.SkPoint]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #7
  %6 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %4, i64 0, i64 0
  %7 = bitcast %struct.SkRect* %0 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 1
  %10 = bitcast [5 x %struct.SkPoint]* %4 to i32*
  store i32 %8, i32* %10, align 16
  %11 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %4, i64 0, i64 0, i32 1
  %12 = bitcast float* %9 to <2 x i32>*
  %13 = load <2 x i32>, <2 x i32>* %12, align 4
  %14 = shufflevector <2 x i32> %13, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %15 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 3
  %16 = bitcast float* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = bitcast float* %11 to <4 x i32>*
  store <4 x i32> %14, <4 x i32>* %18, align 4
  %19 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %4, i64 0, i64 2, i32 1
  %20 = bitcast float* %19 to i32*
  store i32 %17, i32* %20, align 4
  %21 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %4, i64 0, i64 3
  %22 = bitcast %struct.SkPoint* %21 to i32*
  store i32 %8, i32* %22, align 8
  %23 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %4, i64 0, i64 3, i32 1
  %24 = bitcast float* %23 to i32*
  store i32 %17, i32* %24, align 4
  %25 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %4, i64 0, i64 4
  %26 = bitcast [5 x %struct.SkPoint]* %4 to i64*
  %27 = bitcast %struct.SkPoint* %25 to i64*
  %28 = load i64, i64* %26, align 16
  store i64 %28, i64* %27, align 16
  call void @_ZN6SkScan12AntiHairLineEPK7SkPointiRK12SkRasterClipP9SkBlitter(%struct.SkPoint* nonnull %6, i32 5, %class.SkRasterClip* dereferenceable(72) %1, %class.SkBlitter* %2) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN6SkScan12AntiHairLineEPK7SkPointiRK12SkRasterClipP9SkBlitter(%struct.SkPoint*, i32, %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkScan13AntiFillXRectERK7SkIRectPK8SkRegionP9SkBlitter(%struct.SkIRect* dereferenceable(16), %class.SkRegion*, %class.SkBlitter*) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkIRect, align 4
  %5 = alloca <4 x i32>, align 16
  %6 = bitcast <4 x i32>* %5 to %struct.SkIRect*
  %7 = alloca %"class.SkRegion::Cliperator", align 8
  %8 = alloca <4 x i32>, align 16
  %9 = bitcast <4 x i32>* %8 to %struct.SkIRect*
  %10 = icmp eq %class.SkRegion* %1, null
  br i1 %10, label %11, label %28

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = add nsw i32 %13, 128
  %15 = ashr i32 %14, 8
  %16 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = add nsw i32 %17, 128
  %19 = ashr i32 %18, 8
  %20 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = add nsw i32 %21, 128
  %23 = ashr i32 %22, 8
  %24 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = add nsw i32 %25, 128
  %27 = ashr i32 %26, 8
  tail call fastcc void @_ZL12antifilldot8iiiiP9SkBlitterb(i32 %15, i32 %19, i32 %23, i32 %27, %class.SkBlitter* %2, i1 zeroext true) #7
  br label %161

28:                                               ; preds = %3
  %29 = bitcast %struct.SkIRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #7
  %30 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 0
  %31 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 1
  %32 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 2
  %33 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 3
  %34 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = ashr i32 %35, 16
  store i32 %36, i32* %30, align 4
  %37 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = ashr i32 %38, 16
  store i32 %39, i32* %31, align 4
  %40 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = add nsw i32 %41, 65535
  %43 = ashr i32 %42, 16
  store i32 %43, i32* %32, align 4
  %44 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 3
  %45 = load i32, i32* %44, align 4
  %46 = add nsw i32 %45, 65535
  %47 = ashr i32 %46, 16
  store i32 %47, i32* %33, align 4
  %48 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 1
  %49 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %48, align 8
  %50 = icmp eq %"struct.SkRegion::RunHead"* %49, null
  br i1 %50, label %51, label %126

51:                                               ; preds = %28
  %52 = sub nsw i32 %43, %36
  %53 = sub nsw i32 %47, %39
  %54 = icmp slt i32 %52, 1
  %55 = icmp slt i32 %53, 1
  %56 = or i1 %54, %55
  br i1 %56, label %102, label %57

57:                                               ; preds = %51
  %58 = or i32 %53, %52
  %59 = sext i32 %58 to i64
  %60 = add nsw i64 %59, 2147483648
  %61 = icmp ugt i64 %60, 4294967295
  br i1 %61, label %102, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = sext i32 %67 to i64
  %69 = sub nsw i64 %65, %68
  %70 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0, i32 3
  %71 = load i32, i32* %70, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = sext i32 %74 to i64
  %76 = sub nsw i64 %72, %75
  %77 = icmp slt i64 %69, 1
  %78 = icmp slt i64 %76, 1
  %79 = or i1 %77, %78
  br i1 %79, label %102, label %80

80:                                               ; preds = %62
  %81 = or i64 %76, %69
  %82 = add nsw i64 %81, 2147483648
  %83 = icmp ugt i64 %82, 4294967295
  %84 = icmp sgt i32 %67, %36
  %85 = or i1 %84, %83
  %86 = icmp sgt i32 %74, %39
  %87 = or i1 %86, %85
  %88 = icmp slt i32 %64, %43
  %89 = or i1 %88, %87
  %90 = icmp sge i32 %71, %47
  %91 = xor i1 %89, true
  %92 = and i1 %90, %91
  br i1 %92, label %93, label %102

93:                                               ; preds = %80
  %94 = add nsw i32 %35, 128
  %95 = ashr i32 %94, 8
  %96 = add nsw i32 %38, 128
  %97 = ashr i32 %96, 8
  %98 = add nsw i32 %41, 128
  %99 = ashr i32 %98, 8
  %100 = add nsw i32 %45, 128
  %101 = ashr i32 %100, 8
  tail call fastcc void @_ZL12antifilldot8iiiiP9SkBlitterb(i32 %95, i32 %97, i32 %99, i32 %101, %class.SkBlitter* %2, i1 zeroext true) #7
  br label %160

102:                                              ; preds = %51, %57, %62, %80
  %103 = bitcast <4 x i32>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %103) #7
  %104 = bitcast %class.SkRegion* %1 to <4 x i32>*
  %105 = load <4 x i32>, <4 x i32>* %104, align 4
  %106 = shl <4 x i32> %105, <i32 16, i32 16, i32 16, i32 16>
  store <4 x i32> %106, <4 x i32>* %5, align 16
  %107 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %6, %struct.SkIRect* nonnull dereferenceable(16) %6, %struct.SkIRect* dereferenceable(16) %0) #7
  br i1 %107, label %108, label %125

108:                                              ; preds = %102
  %109 = getelementptr inbounds <4 x i32>, <4 x i32>* %5, i64 0, i64 0
  %110 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 3
  %111 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 2
  %112 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 1
  %113 = load i32, i32* %109, align 16
  %114 = add nsw i32 %113, 128
  %115 = ashr i32 %114, 8
  %116 = load i32, i32* %112, align 4
  %117 = add nsw i32 %116, 128
  %118 = ashr i32 %117, 8
  %119 = load i32, i32* %111, align 8
  %120 = add nsw i32 %119, 128
  %121 = ashr i32 %120, 8
  %122 = load i32, i32* %110, align 4
  %123 = add nsw i32 %122, 128
  %124 = ashr i32 %123, 8
  call fastcc void @_ZL12antifilldot8iiiiP9SkBlitterb(i32 %115, i32 %118, i32 %121, i32 %124, %class.SkBlitter* %2, i1 zeroext true) #7
  br label %125

125:                                              ; preds = %108, %102
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103) #7
  br label %160

126:                                              ; preds = %28
  %127 = bitcast %"class.SkRegion::Cliperator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %127) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %127, i8 -86, i64 80, i1 false)
  call void @_ZN8SkRegion10CliperatorC1ERKS_RK7SkIRect(%"class.SkRegion::Cliperator"* nonnull %7, %class.SkRegion* nonnull dereferenceable(24) %1, %struct.SkIRect* nonnull dereferenceable(16) %4) #7
  %128 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %7, i64 0, i32 3
  %129 = load i8, i8* %128, align 8, !range !2
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %131, label %159

131:                                              ; preds = %126
  %132 = bitcast <4 x i32>* %8 to i8*
  %133 = getelementptr inbounds <4 x i32>, <4 x i32>* %8, i64 0, i64 0
  %134 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %9, i64 0, i32 1
  %135 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %9, i64 0, i32 2
  %136 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %9, i64 0, i32 3
  %137 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %7, i64 0, i32 2, i32 0
  %138 = bitcast i32* %137 to <4 x i32>*
  br label %139

139:                                              ; preds = %131, %156
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %132) #7
  %140 = load <4 x i32>, <4 x i32>* %138, align 8
  %141 = shl <4 x i32> %140, <i32 16, i32 16, i32 16, i32 16>
  store <4 x i32> %141, <4 x i32>* %8, align 16
  %142 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %9, %struct.SkIRect* nonnull dereferenceable(16) %9, %struct.SkIRect* dereferenceable(16) %0) #7
  br i1 %142, label %143, label %156

143:                                              ; preds = %139
  %144 = load i32, i32* %133, align 16
  %145 = add nsw i32 %144, 128
  %146 = ashr i32 %145, 8
  %147 = load i32, i32* %134, align 4
  %148 = add nsw i32 %147, 128
  %149 = ashr i32 %148, 8
  %150 = load i32, i32* %135, align 8
  %151 = add nsw i32 %150, 128
  %152 = ashr i32 %151, 8
  %153 = load i32, i32* %136, align 4
  %154 = add nsw i32 %153, 128
  %155 = ashr i32 %154, 8
  call fastcc void @_ZL12antifilldot8iiiiP9SkBlitterb(i32 %146, i32 %149, i32 %152, i32 %155, %class.SkBlitter* %2, i1 zeroext true) #7
  br label %156

156:                                              ; preds = %143, %139
  call void @_ZN8SkRegion10Cliperator4nextEv(%"class.SkRegion::Cliperator"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %132) #7
  %157 = load i8, i8* %128, align 8, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %139, label %159

159:                                              ; preds = %156, %126
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %127) #7
  br label %160

160:                                              ; preds = %93, %125, %159
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #7
  br label %161

161:                                              ; preds = %160, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkScan13AntiFillXRectERK7SkIRectRK12SkRasterClipP9SkBlitter(%struct.SkIRect* dereferenceable(16), %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #0 align 2 {
  %4 = alloca <4 x i32>, align 16
  %5 = alloca %class.SkAAClipBlitterWrapper, align 8
  %6 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 2
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 0
  tail call void @_ZN6SkScan13AntiFillXRectERK7SkIRectPK8SkRegionP9SkBlitter(%struct.SkIRect* dereferenceable(16) %0, %class.SkRegion* %10, %class.SkBlitter* %2)
  br label %54

11:                                               ; preds = %3
  %12 = bitcast <4 x i32>* %4 to %struct.SkIRect*
  %13 = bitcast <4 x i32>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #7
  %14 = bitcast %struct.SkIRect* %0 to <2 x i32>*
  %15 = load <2 x i32>, <2 x i32>* %14, align 4
  %16 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = add nsw i32 %17, 65535
  %19 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = add nsw i32 %20, 65535
  %22 = extractelement <2 x i32> %15, i32 0
  %23 = insertelement <4 x i32> undef, i32 %22, i32 0
  %24 = extractelement <2 x i32> %15, i32 1
  %25 = insertelement <4 x i32> %23, i32 %24, i32 1
  %26 = insertelement <4 x i32> %25, i32 %18, i32 2
  %27 = insertelement <4 x i32> %26, i32 %21, i32 3
  %28 = ashr <4 x i32> %27, <i32 16, i32 16, i32 16, i32 16>
  store <4 x i32> %28, <4 x i32>* %4, align 16
  %29 = call zeroext i1 @_ZNK12SkRasterClip13quickContainsERK7SkIRect(%class.SkRasterClip* %1, %struct.SkIRect* nonnull dereferenceable(16) %12) #7
  br i1 %29, label %30, label %45

30:                                               ; preds = %11
  %31 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 0
  %32 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 1
  %33 = load i32, i32* %31, align 4
  %34 = add nsw i32 %33, 128
  %35 = ashr i32 %34, 8
  %36 = load i32, i32* %32, align 4
  %37 = add nsw i32 %36, 128
  %38 = ashr i32 %37, 8
  %39 = load i32, i32* %16, align 4
  %40 = add nsw i32 %39, 128
  %41 = ashr i32 %40, 8
  %42 = load i32, i32* %19, align 4
  %43 = add nsw i32 %42, 128
  %44 = ashr i32 %43, 8
  call fastcc void @_ZL12antifilldot8iiiiP9SkBlitterb(i32 %35, i32 %38, i32 %41, i32 %44, %class.SkBlitter* %2, i1 zeroext true) #7
  br label %53

45:                                               ; preds = %11
  %46 = bitcast %class.SkAAClipBlitterWrapper* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1160, i8* nonnull %46) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 1160, i1 false)
  call void @_ZN22SkAAClipBlitterWrapperC1ERK12SkRasterClipP9SkBlitter(%class.SkAAClipBlitterWrapper* nonnull %5, %class.SkRasterClip* dereferenceable(72) %1, %class.SkBlitter* %2) #7
  %47 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %5, i64 0, i32 2
  %48 = load %class.SkRegion*, %class.SkRegion** %47, align 8
  %49 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %5, i64 0, i32 3
  %50 = load %class.SkBlitter*, %class.SkBlitter** %49, align 8
  call void @_ZN6SkScan13AntiFillXRectERK7SkIRectPK8SkRegionP9SkBlitter(%struct.SkIRect* dereferenceable(16) %0, %class.SkRegion* %48, %class.SkBlitter* %50)
  %51 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %5, i64 0, i32 1
  call void @_ZN15SkAAClipBlitterD1Ev(%class.SkAAClipBlitter* %51) #7
  %52 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %5, i64 0, i32 0
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %52) #7
  call void @llvm.lifetime.end.p0i8(i64 1160, i8* nonnull %46) #7
  br label %53

53:                                               ; preds = %45, %30
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #7
  br label %54

54:                                               ; preds = %53, %9
  ret void
}

declare zeroext i1 @_ZNK12SkRasterClip13quickContainsERK7SkIRect(%class.SkRasterClip*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN22SkAAClipBlitterWrapperC1ERK12SkRasterClipP9SkBlitter(%class.SkAAClipBlitterWrapper*, %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkScan12AntiFillRectERK6SkRectPK8SkRegionP9SkBlitter(%struct.SkRect* dereferenceable(16), %class.SkRegion*, %class.SkBlitter*) local_unnamed_addr #0 align 2 {
  %4 = alloca <4 x float>, align 16
  %5 = bitcast <4 x float>* %4 to %struct.SkRect*
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %struct.SkIRect*
  %8 = alloca %"class.SkRegion::Cliperator", align 8
  %9 = icmp eq %class.SkRegion* %1, null
  br i1 %9, label %151, label %10

10:                                               ; preds = %3
  %11 = bitcast <4 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #7
  %12 = getelementptr inbounds <4 x float>, <4 x float>* %4, i64 0, i64 0
  %13 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %5, i64 0, i32 1
  %14 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %5, i64 0, i32 2
  %15 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %5, i64 0, i32 3
  %16 = bitcast %class.SkRegion* %1 to <4 x i32>*
  %17 = load <4 x i32>, <4 x i32>* %16, align 4
  %18 = sitofp <4 x i32> %17 to <4 x float>
  store <4 x float> %18, <4 x float>* %4, align 16
  %19 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* nonnull %5, %struct.SkRect* dereferenceable(16) %0) #7
  br i1 %19, label %20, label %150

20:                                               ; preds = %10
  %21 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #7
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %23 = load float, float* %12, align 16
  %24 = call float @llvm.floor.f32(float %23) #7
  %25 = fcmp olt float %24, 0x41DFFFFFE0000000
  %26 = select i1 %25, float %24, float 0x41DFFFFFE0000000
  %27 = fcmp ogt float %26, 0xC1DFFFFFE0000000
  %28 = select i1 %27, float %26, float 0xC1DFFFFFE0000000
  %29 = fptosi float %28 to i32
  %30 = load float, float* %13, align 4
  %31 = call float @llvm.floor.f32(float %30) #7
  %32 = fcmp olt float %31, 0x41DFFFFFE0000000
  %33 = select i1 %32, float %31, float 0x41DFFFFFE0000000
  %34 = fcmp ogt float %33, 0xC1DFFFFFE0000000
  %35 = select i1 %34, float %33, float 0xC1DFFFFFE0000000
  %36 = fptosi float %35 to i32
  %37 = load float, float* %14, align 8
  %38 = call float @llvm.ceil.f32(float %37) #7
  %39 = fcmp olt float %38, 0x41DFFFFFE0000000
  %40 = select i1 %39, float %38, float 0x41DFFFFFE0000000
  %41 = fcmp ogt float %40, 0xC1DFFFFFE0000000
  %42 = select i1 %41, float %40, float 0xC1DFFFFFE0000000
  %43 = fptosi float %42 to i32
  %44 = load float, float* %15, align 4
  %45 = call float @llvm.ceil.f32(float %44) #7
  %46 = fcmp olt float %45, 0x41DFFFFFE0000000
  %47 = select i1 %46, float %45, float 0x41DFFFFFE0000000
  %48 = fcmp ogt float %47, 0xC1DFFFFFE0000000
  %49 = select i1 %48, float %47, float 0xC1DFFFFFE0000000
  %50 = fptosi float %49 to i32
  %51 = zext i32 %36 to i64
  %52 = shl nuw i64 %51, 32
  %53 = zext i32 %29 to i64
  %54 = or i64 %52, %53
  %55 = zext i32 %50 to i64
  %56 = shl nuw i64 %55, 32
  %57 = zext i32 %43 to i64
  %58 = or i64 %56, %57
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %54, i64* %59, align 8
  store i64 %58, i64* %22, align 8
  %60 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 1
  %61 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %60, align 8
  %62 = icmp eq %"struct.SkRegion::RunHead"* %61, null
  br i1 %62, label %63, label %96

63:                                               ; preds = %20
  %64 = fmul float %23, 6.553600e+04
  %65 = fcmp olt float %64, 0x41DFFFFFE0000000
  %66 = select i1 %65, float %64, float 0x41DFFFFFE0000000
  %67 = fcmp ogt float %66, 0xC1DFFFFFE0000000
  %68 = select i1 %67, float %66, float 0xC1DFFFFFE0000000
  %69 = fptosi float %68 to i32
  %70 = fmul float %30, 6.553600e+04
  %71 = fcmp olt float %70, 0x41DFFFFFE0000000
  %72 = select i1 %71, float %70, float 0x41DFFFFFE0000000
  %73 = fcmp ogt float %72, 0xC1DFFFFFE0000000
  %74 = select i1 %73, float %72, float 0xC1DFFFFFE0000000
  %75 = fptosi float %74 to i32
  %76 = fmul float %37, 6.553600e+04
  %77 = fcmp olt float %76, 0x41DFFFFFE0000000
  %78 = select i1 %77, float %76, float 0x41DFFFFFE0000000
  %79 = fcmp ogt float %78, 0xC1DFFFFFE0000000
  %80 = select i1 %79, float %78, float 0xC1DFFFFFE0000000
  %81 = fptosi float %80 to i32
  %82 = fmul float %44, 6.553600e+04
  %83 = fcmp olt float %82, 0x41DFFFFFE0000000
  %84 = select i1 %83, float %82, float 0x41DFFFFFE0000000
  %85 = fcmp ogt float %84, 0xC1DFFFFFE0000000
  %86 = select i1 %85, float %84, float 0xC1DFFFFFE0000000
  %87 = fptosi float %86 to i32
  %88 = add nsw i32 %69, 128
  %89 = ashr i32 %88, 8
  %90 = add nsw i32 %75, 128
  %91 = ashr i32 %90, 8
  %92 = add nsw i32 %81, 128
  %93 = ashr i32 %92, 8
  %94 = add nsw i32 %87, 128
  %95 = ashr i32 %94, 8
  call fastcc void @_ZL12antifilldot8iiiiP9SkBlitterb(i32 %89, i32 %91, i32 %93, i32 %95, %class.SkBlitter* %2, i1 zeroext true) #7
  br label %149

96:                                               ; preds = %20
  %97 = bitcast %"class.SkRegion::Cliperator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %97) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %97, i8 -86, i64 80, i1 false)
  call void @_ZN8SkRegion10CliperatorC1ERKS_RK7SkIRect(%"class.SkRegion::Cliperator"* nonnull %8, %class.SkRegion* nonnull dereferenceable(24) %1, %struct.SkIRect* nonnull dereferenceable(16) %7) #7
  %98 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %8, i64 0, i32 3
  %99 = load i8, i8* %98, align 8, !range !2
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %101, label %148

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %8, i64 0, i32 2, i32 0
  %103 = bitcast i32* %102 to <4 x i32>*
  br label %104

104:                                              ; preds = %101, %145
  %105 = load <4 x i32>, <4 x i32>* %103, align 8
  %106 = sitofp <4 x i32> %105 to <4 x float>
  store <4 x float> %106, <4 x float>* %4, align 16
  %107 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* nonnull %5, %struct.SkRect* dereferenceable(16) %0) #7
  br i1 %107, label %108, label %145

108:                                              ; preds = %104
  %109 = load float, float* %12, align 16
  %110 = fmul float %109, 6.553600e+04
  %111 = fcmp olt float %110, 0x41DFFFFFE0000000
  %112 = select i1 %111, float %110, float 0x41DFFFFFE0000000
  %113 = fcmp ogt float %112, 0xC1DFFFFFE0000000
  %114 = select i1 %113, float %112, float 0xC1DFFFFFE0000000
  %115 = fptosi float %114 to i32
  %116 = load float, float* %13, align 4
  %117 = fmul float %116, 6.553600e+04
  %118 = fcmp olt float %117, 0x41DFFFFFE0000000
  %119 = select i1 %118, float %117, float 0x41DFFFFFE0000000
  %120 = fcmp ogt float %119, 0xC1DFFFFFE0000000
  %121 = select i1 %120, float %119, float 0xC1DFFFFFE0000000
  %122 = fptosi float %121 to i32
  %123 = load float, float* %14, align 8
  %124 = fmul float %123, 6.553600e+04
  %125 = fcmp olt float %124, 0x41DFFFFFE0000000
  %126 = select i1 %125, float %124, float 0x41DFFFFFE0000000
  %127 = fcmp ogt float %126, 0xC1DFFFFFE0000000
  %128 = select i1 %127, float %126, float 0xC1DFFFFFE0000000
  %129 = fptosi float %128 to i32
  %130 = load float, float* %15, align 4
  %131 = fmul float %130, 6.553600e+04
  %132 = fcmp olt float %131, 0x41DFFFFFE0000000
  %133 = select i1 %132, float %131, float 0x41DFFFFFE0000000
  %134 = fcmp ogt float %133, 0xC1DFFFFFE0000000
  %135 = select i1 %134, float %133, float 0xC1DFFFFFE0000000
  %136 = fptosi float %135 to i32
  %137 = add nsw i32 %115, 128
  %138 = ashr i32 %137, 8
  %139 = add nsw i32 %122, 128
  %140 = ashr i32 %139, 8
  %141 = add nsw i32 %129, 128
  %142 = ashr i32 %141, 8
  %143 = add nsw i32 %136, 128
  %144 = ashr i32 %143, 8
  call fastcc void @_ZL12antifilldot8iiiiP9SkBlitterb(i32 %138, i32 %140, i32 %142, i32 %144, %class.SkBlitter* %2, i1 zeroext true) #7
  br label %145

145:                                              ; preds = %108, %104
  call void @_ZN8SkRegion10Cliperator4nextEv(%"class.SkRegion::Cliperator"* nonnull %8) #7
  %146 = load i8, i8* %98, align 8, !range !2
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %104, label %148

148:                                              ; preds = %145, %96
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %97) #7
  br label %149

149:                                              ; preds = %148, %63
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #7
  br label %150

150:                                              ; preds = %10, %149
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #7
  ret void

151:                                              ; preds = %3
  %152 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 0
  %153 = load float, float* %152, align 4
  %154 = fmul float %153, 6.553600e+04
  %155 = fcmp olt float %154, 0x41DFFFFFE0000000
  %156 = select i1 %155, float %154, float 0x41DFFFFFE0000000
  %157 = fcmp ogt float %156, 0xC1DFFFFFE0000000
  %158 = select i1 %157, float %156, float 0xC1DFFFFFE0000000
  %159 = fptosi float %158 to i32
  %160 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 1
  %161 = load float, float* %160, align 4
  %162 = fmul float %161, 6.553600e+04
  %163 = fcmp olt float %162, 0x41DFFFFFE0000000
  %164 = select i1 %163, float %162, float 0x41DFFFFFE0000000
  %165 = fcmp ogt float %164, 0xC1DFFFFFE0000000
  %166 = select i1 %165, float %164, float 0xC1DFFFFFE0000000
  %167 = fptosi float %166 to i32
  %168 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 2
  %169 = load float, float* %168, align 4
  %170 = fmul float %169, 6.553600e+04
  %171 = fcmp olt float %170, 0x41DFFFFFE0000000
  %172 = select i1 %171, float %170, float 0x41DFFFFFE0000000
  %173 = fcmp ogt float %172, 0xC1DFFFFFE0000000
  %174 = select i1 %173, float %172, float 0xC1DFFFFFE0000000
  %175 = fptosi float %174 to i32
  %176 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 3
  %177 = load float, float* %176, align 4
  %178 = fmul float %177, 6.553600e+04
  %179 = fcmp olt float %178, 0x41DFFFFFE0000000
  %180 = select i1 %179, float %178, float 0x41DFFFFFE0000000
  %181 = fcmp ogt float %180, 0xC1DFFFFFE0000000
  %182 = select i1 %181, float %180, float 0xC1DFFFFFE0000000
  %183 = fptosi float %182 to i32
  %184 = add nsw i32 %159, 128
  %185 = ashr i32 %184, 8
  %186 = add nsw i32 %167, 128
  %187 = ashr i32 %186, 8
  %188 = add nsw i32 %175, 128
  %189 = ashr i32 %188, 8
  %190 = add nsw i32 %183, 128
  %191 = ashr i32 %190, 8
  tail call fastcc void @_ZL12antifilldot8iiiiP9SkBlitterb(i32 %185, i32 %187, i32 %189, i32 %191, %class.SkBlitter* %2, i1 zeroext true) #7
  ret void
}

declare zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkScan12AntiFillRectERK6SkRectRK12SkRasterClipP9SkBlitter(%struct.SkRect* dereferenceable(16), %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkAAClipBlitterWrapper, align 8
  %5 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 2
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 0
  tail call void @_ZN6SkScan12AntiFillRectERK6SkRectPK8SkRegionP9SkBlitter(%struct.SkRect* dereferenceable(16) %0, %class.SkRegion* %9, %class.SkBlitter* %2)
  br label %18

10:                                               ; preds = %3
  %11 = bitcast %class.SkAAClipBlitterWrapper* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1160, i8* nonnull %11) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 1160, i1 false)
  call void @_ZN22SkAAClipBlitterWrapperC1ERK12SkRasterClipP9SkBlitter(%class.SkAAClipBlitterWrapper* nonnull %4, %class.SkRasterClip* dereferenceable(72) %1, %class.SkBlitter* %2) #7
  %12 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %4, i64 0, i32 2
  %13 = load %class.SkRegion*, %class.SkRegion** %12, align 8
  %14 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %4, i64 0, i32 3
  %15 = load %class.SkBlitter*, %class.SkBlitter** %14, align 8
  call void @_ZN6SkScan12AntiFillRectERK6SkRectPK8SkRegionP9SkBlitter(%struct.SkRect* dereferenceable(16) %0, %class.SkRegion* %13, %class.SkBlitter* %15)
  %16 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %4, i64 0, i32 1
  call void @_ZN15SkAAClipBlitterD1Ev(%class.SkAAClipBlitter* %16) #7
  %17 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %4, i64 0, i32 0
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %17) #7
  call void @llvm.lifetime.end.p0i8(i64 1160, i8* nonnull %11) #7
  br label %18

18:                                               ; preds = %10, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkScan13AntiFrameRectERK6SkRectRK7SkPointPK8SkRegionP9SkBlitter(%struct.SkRect* nocapture readonly dereferenceable(16), %struct.SkPoint* nocapture readonly dereferenceable(8), %class.SkRegion*, %class.SkBlitter*) local_unnamed_addr #0 align 2 {
  %5 = alloca %struct.SkIRect, align 4
  %6 = alloca %struct.SkIRect, align 4
  %7 = alloca %class.SkBlitterClipper, align 8
  %8 = bitcast %struct.SkPoint* %1 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 4
  %10 = fmul <2 x float> %9, <float 5.000000e-01, float 5.000000e-01>
  %11 = shufflevector <2 x float> %10, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %12 = bitcast %struct.SkRect* %0 to <4 x float>*
  %13 = load <4 x float>, <4 x float>* %12, align 4
  %14 = fsub <4 x float> %13, %11
  %15 = fadd <4 x float> %13, %11
  %16 = shufflevector <4 x float> %14, <4 x float> %15, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %17 = fmul <4 x float> %16, <float 2.560000e+02, float 2.560000e+02, float 2.560000e+02, float 2.560000e+02>
  %18 = fptosi <4 x float> %17 to <4 x i32>
  %19 = bitcast %struct.SkIRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #7
  %20 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 0
  %21 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 1
  %22 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 2
  %23 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 3
  %24 = extractelement <4 x i32> %18, i32 0
  %25 = ashr i32 %24, 8
  %26 = extractelement <4 x i32> %18, i32 1
  %27 = ashr i32 %26, 8
  %28 = extractelement <4 x i32> %18, i32 2
  %29 = add nsw i32 %28, 255
  %30 = ashr i32 %29, 8
  %31 = extractelement <4 x i32> %18, i32 3
  %32 = add nsw i32 %31, 255
  %33 = ashr i32 %32, 8
  store i32 %25, i32* %20, align 4
  store i32 %27, i32* %21, align 4
  store i32 %30, i32* %22, align 4
  store i32 %33, i32* %23, align 4
  %34 = bitcast %class.SkBlitterClipper* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %34) #7
  %35 = getelementptr inbounds %class.SkBlitterClipper, %class.SkBlitterClipper* %7, i64 0, i32 1, i32 1
  %36 = bitcast %class.SkBlitter** %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 64, i1 false)
  %37 = getelementptr inbounds %class.SkBlitterClipper, %class.SkBlitterClipper* %7, i64 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %class.SkBlitterClipper, %class.SkBlitterClipper* %7, i64 0, i32 0, i32 0, i32 1
  %39 = bitcast %class.SkAutoMalloc* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV13SkNullBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %40 = getelementptr inbounds %class.SkBlitterClipper, %class.SkBlitterClipper* %7, i64 0, i32 1, i32 0, i32 0
  %41 = getelementptr inbounds %class.SkBlitterClipper, %class.SkBlitterClipper* %7, i64 0, i32 1, i32 0, i32 1
  %42 = bitcast %class.SkAutoMalloc* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 16, i1 false) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17SkRectClipBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %43 = getelementptr inbounds %class.SkBlitterClipper, %class.SkBlitterClipper* %7, i64 0, i32 2, i32 0, i32 0
  %44 = getelementptr inbounds %class.SkBlitterClipper, %class.SkBlitterClipper* %7, i64 0, i32 2, i32 0, i32 1
  %45 = bitcast %class.SkAutoMalloc* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16SkRgnClipBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %46 = icmp eq %class.SkRegion* %2, null
  br i1 %46, label %70, label %47

47:                                               ; preds = %4
  %48 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %2, i64 0, i32 1
  %49 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %48, align 8
  %50 = icmp eq %"struct.SkRegion::RunHead"* %49, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  br i1 %50, label %267, label %51

51:                                               ; preds = %47
  %52 = sub nsw i32 %30, %25
  %53 = sub nsw i32 %33, %27
  %54 = icmp slt i32 %52, 1
  %55 = icmp slt i32 %53, 1
  %56 = or i1 %54, %55
  br i1 %56, label %267, label %57

57:                                               ; preds = %51
  %58 = or i32 %53, %52
  %59 = sext i32 %58 to i64
  %60 = add nsw i64 %59, 2147483648
  %61 = icmp ugt i64 %60, 4294967295
  br i1 %61, label %267, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %2, i64 0, i32 0
  %64 = bitcast %struct.SkIRect* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %64, i8 -86, i64 16, i1 false) #7
  %65 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %5, %struct.SkIRect* dereferenceable(16) %63, %struct.SkIRect* nonnull dereferenceable(16) %6) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #7
  br i1 %65, label %66, label %267

66:                                               ; preds = %62
  %67 = call zeroext i1 @_ZNK8SkRegion8containsERK7SkIRect(%class.SkRegion* nonnull %2, %struct.SkIRect* nonnull dereferenceable(16) %6) #7
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = call %class.SkBlitter* @_ZN16SkBlitterClipper5applyEP9SkBlitterPK8SkRegionPK7SkIRect(%class.SkBlitterClipper* nonnull %7, %class.SkBlitter* %3, %class.SkRegion* nonnull %2, %struct.SkIRect* nonnull %6) #7
  br label %70

70:                                               ; preds = %4, %66, %68
  %71 = phi %class.SkBlitter* [ %3, %66 ], [ %69, %68 ], [ %3, %4 ]
  %72 = bitcast %struct.SkPoint* %1 to <2 x float>*
  %73 = load <2 x float>, <2 x float>* %72, align 4
  %74 = fsub <2 x float> %73, %10
  %75 = shufflevector <2 x float> %74, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %76 = bitcast %struct.SkRect* %0 to <4 x float>*
  %77 = load <4 x float>, <4 x float>* %76, align 4
  %78 = fadd <4 x float> %77, %75
  %79 = fsub <4 x float> %77, %75
  %80 = shufflevector <4 x float> %78, <4 x float> %79, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %81 = fmul <4 x float> %80, <float 2.560000e+02, float 2.560000e+02, float 2.560000e+02, float 2.560000e+02>
  %82 = fptosi <4 x float> %81 to <4 x i32>
  %83 = extractelement <2 x float> %73, i32 0
  %84 = fcmp olt float %83, 1.000000e+00
  %85 = extractelement <2 x float> %73, i32 1
  %86 = fcmp olt float %85, 1.000000e+00
  %87 = or i1 %84, %86
  br i1 %87, label %88, label %136

88:                                               ; preds = %70
  %89 = extractelement <4 x i32> %82, i32 0
  %90 = xor i32 %89, %24
  %91 = icmp ult i32 %90, 256
  br i1 %91, label %92, label %96

92:                                               ; preds = %88
  %93 = and i32 %24, 255
  %94 = sub nsw i32 %89, %93
  %95 = and i32 %24, -256
  br label %96

96:                                               ; preds = %88, %92
  %97 = phi i32 [ %95, %92 ], [ %24, %88 ]
  %98 = phi i32 [ %94, %92 ], [ %89, %88 ]
  %99 = extractelement <4 x i32> %82, i32 1
  %100 = xor i32 %99, %26
  %101 = icmp ult i32 %100, 256
  br i1 %101, label %102, label %106

102:                                              ; preds = %96
  %103 = and i32 %26, 255
  %104 = sub nsw i32 %99, %103
  %105 = and i32 %26, -256
  br label %106

106:                                              ; preds = %96, %102
  %107 = phi i32 [ %105, %102 ], [ %26, %96 ]
  %108 = phi i32 [ %104, %102 ], [ %99, %96 ]
  %109 = extractelement <4 x i32> %82, i32 2
  %110 = xor i32 %109, %28
  %111 = icmp ult i32 %110, 256
  br i1 %111, label %112, label %116

112:                                              ; preds = %106
  %113 = and i32 %109, 255
  %114 = sub nsw i32 %28, %113
  %115 = and i32 %109, -256
  br label %116

116:                                              ; preds = %106, %112
  %117 = phi i32 [ %114, %112 ], [ %28, %106 ]
  %118 = phi i32 [ %115, %112 ], [ %109, %106 ]
  %119 = extractelement <4 x i32> %82, i32 3
  %120 = xor i32 %119, %31
  %121 = icmp ult i32 %120, 256
  %122 = insertelement <4 x i32> undef, i32 %97, i32 0
  %123 = insertelement <4 x i32> %122, i32 %107, i32 1
  %124 = insertelement <4 x i32> %123, i32 %117, i32 2
  %125 = shufflevector <4 x i32> %124, <4 x i32> %18, <4 x i32> <i32 0, i32 1, i32 2, i32 7>
  %126 = insertelement <4 x i32> undef, i32 %98, i32 0
  %127 = insertelement <4 x i32> %126, i32 %108, i32 1
  %128 = insertelement <4 x i32> %127, i32 %118, i32 2
  %129 = shufflevector <4 x i32> %128, <4 x i32> %82, <4 x i32> <i32 0, i32 1, i32 2, i32 7>
  br i1 %121, label %130, label %136

130:                                              ; preds = %116
  %131 = and i32 %119, 255
  %132 = sub nsw i32 %31, %131
  %133 = and i32 %119, -256
  %134 = insertelement <4 x i32> %124, i32 %132, i32 3
  %135 = insertelement <4 x i32> %128, i32 %133, i32 3
  br label %136

136:                                              ; preds = %130, %116, %70
  %137 = phi <4 x i32> [ %18, %70 ], [ %125, %116 ], [ %134, %130 ]
  %138 = phi <4 x i32> [ %82, %70 ], [ %129, %116 ], [ %135, %130 ]
  %139 = extractelement <4 x i32> %137, i32 0
  %140 = extractelement <4 x i32> %137, i32 1
  %141 = extractelement <4 x i32> %137, i32 2
  %142 = extractelement <4 x i32> %137, i32 3
  call fastcc void @_ZL12antifilldot8iiiiP9SkBlitterb(i32 %139, i32 %140, i32 %141, i32 %142, %class.SkBlitter* %71, i1 zeroext false)
  %143 = add nsw i32 %139, 255
  %144 = ashr i32 %143, 8
  %145 = add nsw i32 %140, 255
  %146 = ashr i32 %145, 8
  %147 = ashr i32 %141, 8
  %148 = ashr i32 %142, 8
  store i32 %144, i32* %20, align 4
  store i32 %146, i32* %21, align 4
  store i32 %147, i32* %22, align 4
  store i32 %148, i32* %23, align 4
  %149 = extractelement <4 x i32> %138, i32 0
  %150 = extractelement <4 x i32> %138, i32 2
  %151 = icmp slt i32 %149, %150
  %152 = extractelement <4 x i32> %138, i32 1
  %153 = extractelement <4 x i32> %138, i32 3
  %154 = icmp slt i32 %152, %153
  %155 = and i1 %151, %154
  br i1 %155, label %167, label %156

156:                                              ; preds = %136
  %157 = icmp sgt i32 %147, %144
  %158 = icmp sgt i32 %148, %146
  %159 = and i1 %157, %158
  br i1 %159, label %160, label %267

160:                                              ; preds = %156
  %161 = sub nsw i32 %147, %144
  %162 = sub nsw i32 %148, %146
  %163 = bitcast %class.SkBlitter* %71 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %164 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %163, align 8
  %165 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %164, i64 5
  %166 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %165, align 8
  call void %166(%class.SkBlitter* %71, i32 %144, i32 %146, i32 %161, i32 %162) #7
  br label %267

167:                                              ; preds = %136
  %168 = ashr i32 %149, 8
  %169 = ashr i32 %152, 8
  %170 = add nsw i32 %150, 255
  %171 = ashr i32 %170, 8
  %172 = add nsw i32 %153, 255
  %173 = ashr i32 %172, 8
  %174 = icmp sgt i32 %147, %144
  %175 = icmp sgt i32 %169, %146
  %176 = and i1 %174, %175
  br i1 %176, label %177, label %185

177:                                              ; preds = %167
  %178 = sub nsw i32 %147, %144
  %179 = sub nsw i32 %169, %146
  %180 = bitcast %class.SkBlitter* %71 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %181 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %180, align 8
  %182 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %181, i64 5
  %183 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %182, align 8
  call void %183(%class.SkBlitter* %71, i32 %144, i32 %146, i32 %178, i32 %179) #7
  %184 = load i32, i32* %20, align 4
  br label %185

185:                                              ; preds = %167, %177
  %186 = phi i32 [ %144, %167 ], [ %184, %177 ]
  %187 = icmp sgt i32 %168, %186
  %188 = icmp sgt i32 %173, %169
  %189 = and i1 %188, %187
  br i1 %189, label %190, label %197

190:                                              ; preds = %185
  %191 = sub nsw i32 %168, %186
  %192 = sub nsw i32 %173, %169
  %193 = bitcast %class.SkBlitter* %71 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %194 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %193, align 8
  %195 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %194, i64 5
  %196 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %195, align 8
  call void %196(%class.SkBlitter* %71, i32 %186, i32 %169, i32 %191, i32 %192) #7
  br label %197

197:                                              ; preds = %185, %190
  %198 = load i32, i32* %22, align 4
  %199 = icmp sgt i32 %198, %171
  %200 = and i1 %188, %199
  br i1 %200, label %201, label %209

201:                                              ; preds = %197
  %202 = sub nsw i32 %198, %171
  %203 = sub nsw i32 %173, %169
  %204 = bitcast %class.SkBlitter* %71 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %205 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %204, align 8
  %206 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %205, i64 5
  %207 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %206, align 8
  call void %207(%class.SkBlitter* %71, i32 %171, i32 %169, i32 %202, i32 %203) #7
  %208 = load i32, i32* %22, align 4
  br label %209

209:                                              ; preds = %197, %201
  %210 = phi i32 [ %198, %197 ], [ %208, %201 ]
  %211 = load i32, i32* %20, align 4
  %212 = load i32, i32* %23, align 4
  %213 = icmp sgt i32 %210, %211
  %214 = icmp sgt i32 %212, %173
  %215 = and i1 %213, %214
  br i1 %215, label %216, label %223

216:                                              ; preds = %209
  %217 = sub nsw i32 %210, %211
  %218 = sub nsw i32 %212, %173
  %219 = bitcast %class.SkBlitter* %71 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %220 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %219, align 8
  %221 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %220, i64 5
  %222 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %221, align 8
  call void %222(%class.SkBlitter* %71, i32 %211, i32 %173, i32 %217, i32 %218) #7
  br label %223

223:                                              ; preds = %209, %216
  %224 = add nsw i32 %153, -1
  %225 = ashr i32 %224, 8
  %226 = icmp eq i32 %169, %225
  br i1 %226, label %227, label %232

227:                                              ; preds = %223
  %228 = sub i32 %152, %153
  %229 = add i32 %228, 256
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %267, label %231

231:                                              ; preds = %227
  call fastcc void @_ZL14inner_scanlineiiijP9SkBlitter(i32 %149, i32 %169, i32 %150, i32 %229, %class.SkBlitter* %71) #7
  br label %267

232:                                              ; preds = %223
  %233 = and i32 %152, 255
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %237, label %235

235:                                              ; preds = %232
  call fastcc void @_ZL14inner_scanlineiiijP9SkBlitter(i32 %149, i32 %169, i32 %150, i32 %233, %class.SkBlitter* %71) #7
  %236 = add nsw i32 %169, 1
  br label %237

237:                                              ; preds = %235, %232
  %238 = phi i32 [ %236, %235 ], [ %169, %232 ]
  %239 = ashr i32 %153, 8
  %240 = sub nsw i32 %239, %238
  %241 = icmp sgt i32 %240, 0
  br i1 %241, label %242, label %262

242:                                              ; preds = %237
  %243 = and i32 %149, 255
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %251, label %245

245:                                              ; preds = %242
  %246 = trunc i32 %149 to i8
  %247 = bitcast %class.SkBlitter* %71 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %248 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %247, align 8
  %249 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %248, i64 4
  %250 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %249, align 8
  call void %250(%class.SkBlitter* %71, i32 %168, i32 %238, i32 %240, i8 zeroext %246) #7
  br label %251

251:                                              ; preds = %245, %242
  %252 = and i32 %150, 255
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %262, label %254

254:                                              ; preds = %251
  %255 = ashr i32 %150, 8
  %256 = trunc i32 %150 to i8
  %257 = xor i8 %256, -1
  %258 = bitcast %class.SkBlitter* %71 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %259 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %258, align 8
  %260 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %259, i64 4
  %261 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %260, align 8
  call void %261(%class.SkBlitter* %71, i32 %255, i32 %238, i32 %240, i8 zeroext %257) #7
  br label %262

262:                                              ; preds = %254, %251, %237
  %263 = and i32 %153, 255
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %267, label %265

265:                                              ; preds = %262
  %266 = xor i32 %263, 255
  call fastcc void @_ZL14inner_scanlineiiijP9SkBlitter(i32 %149, i32 %239, i32 %150, i32 %266, %class.SkBlitter* %71) #7
  br label %267

267:                                              ; preds = %62, %51, %47, %57, %156, %160, %227, %231, %262, %265
  %268 = getelementptr inbounds %class.SkBlitterClipper, %class.SkBlitterClipper* %7, i64 0, i32 2, i32 0
  call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* %268) #7
  %269 = getelementptr inbounds %class.SkBlitterClipper, %class.SkBlitterClipper* %7, i64 0, i32 1, i32 0
  call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* %269) #7
  %270 = getelementptr inbounds %class.SkBlitterClipper, %class.SkBlitterClipper* %7, i64 0, i32 0, i32 0
  call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* nonnull %270) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %34) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #7
  ret void
}

declare zeroext i1 @_ZNK8SkRegion8containsERK7SkIRect(%class.SkRegion*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

declare %class.SkBlitter* @_ZN16SkBlitterClipper5applyEP9SkBlitterPK8SkRegionPK7SkIRect(%class.SkBlitterClipper*, %class.SkBlitter*, %class.SkRegion*, %struct.SkIRect*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL12antifilldot8iiiiP9SkBlitterb(i32, i32, i32, i32, %class.SkBlitter*, i1 zeroext) unnamed_addr #0 {
  %7 = icmp sgt i32 %2, %0
  %8 = icmp sgt i32 %3, %1
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %78

10:                                               ; preds = %6
  %11 = ashr i32 %1, 8
  %12 = add nsw i32 %3, -1
  %13 = ashr i32 %12, 8
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = xor i32 %1, -1
  %17 = add i32 %16, %3
  tail call fastcc void @_ZL11do_scanlineiiijP9SkBlitter(i32 %0, i32 %11, i32 %2, i32 %17, %class.SkBlitter* %4)
  br label %78

18:                                               ; preds = %10
  %19 = and i32 %1, 255
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %18
  %22 = sub nuw nsw i32 256, %19
  tail call fastcc void @_ZL11do_scanlineiiijP9SkBlitter(i32 %0, i32 %11, i32 %2, i32 %22, %class.SkBlitter* %4)
  %23 = add nsw i32 %11, 1
  br label %24

24:                                               ; preds = %18, %21
  %25 = phi i32 [ %23, %21 ], [ %11, %18 ]
  %26 = ashr i32 %3, 8
  %27 = sub nsw i32 %26, %25
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %29, label %74

29:                                               ; preds = %24
  %30 = ashr i32 %0, 8
  %31 = add nsw i32 %2, -1
  %32 = ashr i32 %31, 8
  %33 = icmp eq i32 %30, %32
  br i1 %33, label %34, label %42

34:                                               ; preds = %29
  %35 = xor i32 %0, 255
  %36 = add i32 %35, %2
  %37 = trunc i32 %36 to i8
  %38 = bitcast %class.SkBlitter* %4 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %39 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %39, i64 4
  %41 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %40, align 8
  tail call void %41(%class.SkBlitter* %4, i32 %30, i32 %25, i32 %27, i8 zeroext %37) #7
  br label %74

42:                                               ; preds = %29
  %43 = and i32 %0, 255
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %42
  %46 = trunc i32 %0 to i8
  %47 = sub i8 0, %46
  %48 = bitcast %class.SkBlitter* %4 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %49 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %48, align 8
  %50 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %49, i64 4
  %51 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %50, align 8
  tail call void %51(%class.SkBlitter* %4, i32 %30, i32 %25, i32 %27, i8 zeroext %47) #7
  %52 = add nsw i32 %30, 1
  br label %53

53:                                               ; preds = %42, %45
  %54 = phi i32 [ %52, %45 ], [ %30, %42 ]
  %55 = ashr i32 %2, 8
  %56 = sub nsw i32 %55, %54
  %57 = icmp slt i32 %56, 1
  %58 = xor i1 %5, true
  %59 = or i1 %57, %58
  br i1 %59, label %65, label %60

60:                                               ; preds = %53
  %61 = bitcast %class.SkBlitter* %4 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %62 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %61, align 8
  %63 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %62, i64 5
  %64 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %63, align 8
  tail call void %64(%class.SkBlitter* %4, i32 %54, i32 %25, i32 %56, i32 %27) #7
  br label %65

65:                                               ; preds = %53, %60
  %66 = and i32 %2, 255
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %74, label %68

68:                                               ; preds = %65
  %69 = trunc i32 %2 to i8
  %70 = bitcast %class.SkBlitter* %4 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %71 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %70, align 8
  %72 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %71, i64 4
  %73 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %72, align 8
  tail call void %73(%class.SkBlitter* %4, i32 %55, i32 %25, i32 %27, i8 zeroext %69) #7
  br label %74

74:                                               ; preds = %34, %65, %68, %24
  %75 = and i32 %3, 255
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %78, label %77

77:                                               ; preds = %74
  tail call fastcc void @_ZL11do_scanlineiiijP9SkBlitter(i32 %0, i32 %26, i32 %2, i32 %75, %class.SkBlitter* %4)
  br label %78

78:                                               ; preds = %15, %74, %77, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkScan13AntiFrameRectERK6SkRectRK7SkPointRK12SkRasterClipP9SkBlitter(%struct.SkRect* nocapture readonly dereferenceable(16), %struct.SkPoint* nocapture readonly dereferenceable(8), %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkAAClipBlitterWrapper, align 8
  %6 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %2, i64 0, i32 2
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %2, i64 0, i32 0
  tail call void @_ZN6SkScan13AntiFrameRectERK6SkRectRK7SkPointPK8SkRegionP9SkBlitter(%struct.SkRect* dereferenceable(16) %0, %struct.SkPoint* dereferenceable(8) %1, %class.SkRegion* %10, %class.SkBlitter* %3)
  br label %19

11:                                               ; preds = %4
  %12 = bitcast %class.SkAAClipBlitterWrapper* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1160, i8* nonnull %12) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 1160, i1 false)
  call void @_ZN22SkAAClipBlitterWrapperC1ERK12SkRasterClipP9SkBlitter(%class.SkAAClipBlitterWrapper* nonnull %5, %class.SkRasterClip* dereferenceable(72) %2, %class.SkBlitter* %3) #7
  %13 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %5, i64 0, i32 2
  %14 = load %class.SkRegion*, %class.SkRegion** %13, align 8
  %15 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %5, i64 0, i32 3
  %16 = load %class.SkBlitter*, %class.SkBlitter** %15, align 8
  call void @_ZN6SkScan13AntiFrameRectERK6SkRectRK7SkPointPK8SkRegionP9SkBlitter(%struct.SkRect* dereferenceable(16) %0, %struct.SkPoint* dereferenceable(8) %1, %class.SkRegion* %14, %class.SkBlitter* %16)
  %17 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %5, i64 0, i32 1
  call void @_ZN15SkAAClipBlitterD1Ev(%class.SkAAClipBlitter* %17) #7
  %18 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %5, i64 0, i32 0
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %18) #7
  call void @llvm.lifetime.end.p0i8(i64 1160, i8* nonnull %12) #7
  br label %19

19:                                               ; preds = %11, %9
  ret void
}

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17SkAntiHairBlitterD2Ev(%class.SkAntiHairBlitter*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23HLine_SkAntiHairBlitterD0Ev(%class.HLine_SkAntiHairBlitter*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %class.HLine_SkAntiHairBlitter* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN23HLine_SkAntiHairBlitter7drawCapEiiii(%class.HLine_SkAntiHairBlitter*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %6 = alloca [101 x i16], align 16
  %7 = alloca [100 x i8], align 16
  %8 = add nsw i32 %2, 32768
  %9 = ashr i32 %8, 16
  %10 = lshr i32 %8, 8
  %11 = and i32 %10, 255
  %12 = mul nsw i32 %11, %4
  %13 = ashr i32 %12, 6
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %class.HLine_SkAntiHairBlitter, %class.HLine_SkAntiHairBlitter* %0, i64 0, i32 0, i32 1
  %17 = load %class.SkBlitter*, %class.SkBlitter** %16, align 8
  %18 = bitcast [101 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 202, i8* nonnull %18) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 -86, i64 202, i1 false) #7
  %19 = getelementptr inbounds [100 x i8], [100 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %19) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 -86, i64 100, i1 false) #7
  %20 = trunc i32 %13 to i8
  %21 = getelementptr inbounds [101 x i16], [101 x i16]* %6, i64 0, i64 0
  %22 = bitcast %class.SkBlitter* %17 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  store i8 %20, i8* %19, align 16
  store i16 1, i16* %21, align 16
  %23 = getelementptr inbounds [101 x i16], [101 x i16]* %6, i64 0, i64 1
  store i16 0, i16* %23, align 2
  %24 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %22, align 8
  %25 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %24, i64 3
  %26 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %25, align 8
  call void %26(%class.SkBlitter* %17, i32 %1, i32 %9, i8* nonnull %19, i16* nonnull %21) #7
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %19) #7
  call void @llvm.lifetime.end.p0i8(i64 202, i8* nonnull %18) #7
  br label %27

27:                                               ; preds = %5, %15
  %28 = xor i32 %11, 255
  %29 = mul nsw i32 %28, %4
  %30 = ashr i32 %29, 6
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %45, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %class.HLine_SkAntiHairBlitter, %class.HLine_SkAntiHairBlitter* %0, i64 0, i32 0, i32 1
  %34 = load %class.SkBlitter*, %class.SkBlitter** %33, align 8
  %35 = add nsw i32 %9, -1
  %36 = bitcast [101 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 202, i8* nonnull %36) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %36, i8 -86, i64 202, i1 false) #7
  %37 = getelementptr inbounds [100 x i8], [100 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %37) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 -86, i64 100, i1 false) #7
  %38 = trunc i32 %30 to i8
  %39 = getelementptr inbounds [101 x i16], [101 x i16]* %6, i64 0, i64 0
  %40 = bitcast %class.SkBlitter* %34 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  store i8 %38, i8* %37, align 16
  store i16 1, i16* %39, align 16
  %41 = getelementptr inbounds [101 x i16], [101 x i16]* %6, i64 0, i64 1
  store i16 0, i16* %41, align 2
  %42 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %40, align 8
  %43 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %42, i64 3
  %44 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %43, align 8
  call void %44(%class.SkBlitter* %34, i32 %1, i32 %35, i8* nonnull %37, i16* nonnull %39) #7
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %37) #7
  call void @llvm.lifetime.end.p0i8(i64 202, i8* nonnull %36) #7
  br label %45

45:                                               ; preds = %27, %32
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN23HLine_SkAntiHairBlitter8drawLineEiiii(%class.HLine_SkAntiHairBlitter*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %6 = alloca [101 x i16], align 16
  %7 = alloca [100 x i8], align 16
  %8 = sub nsw i32 %2, %1
  %9 = add nsw i32 %3, 32768
  %10 = ashr i32 %9, 16
  %11 = lshr i32 %9, 8
  %12 = trunc i32 %11 to i8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %5
  %15 = bitcast [101 x i16]* %6 to i8*
  br label %39

16:                                               ; preds = %5
  %17 = getelementptr inbounds %class.HLine_SkAntiHairBlitter, %class.HLine_SkAntiHairBlitter* %0, i64 0, i32 0, i32 1
  %18 = load %class.SkBlitter*, %class.SkBlitter** %17, align 8
  %19 = bitcast [101 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 202, i8* nonnull %19) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 -86, i64 202, i1 false) #7
  %20 = getelementptr inbounds [100 x i8], [100 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %20) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -86, i64 100, i1 false) #7
  %21 = getelementptr inbounds [101 x i16], [101 x i16]* %6, i64 0, i64 0
  %22 = bitcast %class.SkBlitter* %18 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  br label %23

23:                                               ; preds = %23, %16
  %24 = phi i32 [ %8, %16 ], [ %35, %23 ]
  %25 = phi i32 [ %1, %16 ], [ %34, %23 ]
  store i8 %12, i8* %20, align 16
  %26 = icmp slt i32 %24, 100
  %27 = select i1 %26, i32 %24, i32 100
  %28 = trunc i32 %27 to i16
  store i16 %28, i16* %21, align 16
  %29 = sext i32 %27 to i64
  %30 = getelementptr inbounds [101 x i16], [101 x i16]* %6, i64 0, i64 %29
  store i16 0, i16* %30, align 2
  %31 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %22, align 8
  %32 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %31, i64 3
  %33 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %32, align 8
  call void %33(%class.SkBlitter* %18, i32 %25, i32 %10, i8* nonnull %20, i16* nonnull %21) #7
  %34 = add nsw i32 %27, %25
  %35 = sub nsw i32 %24, %27
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %23, label %37

37:                                               ; preds = %23
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %20) #7
  call void @llvm.lifetime.end.p0i8(i64 202, i8* nonnull %19) #7
  %38 = icmp eq i8 %12, -1
  br i1 %38, label %63, label %39

39:                                               ; preds = %14, %37
  %40 = phi i8* [ %15, %14 ], [ %19, %37 ]
  %41 = getelementptr inbounds %class.HLine_SkAntiHairBlitter, %class.HLine_SkAntiHairBlitter* %0, i64 0, i32 0, i32 1
  %42 = load %class.SkBlitter*, %class.SkBlitter** %41, align 8
  %43 = add nsw i32 %10, -1
  call void @llvm.lifetime.start.p0i8(i64 202, i8* nonnull %40) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %40, i8 -86, i64 202, i1 false) #7
  %44 = getelementptr inbounds [100 x i8], [100 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %44) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %44, i8 -86, i64 100, i1 false) #7
  %45 = xor i8 %12, -1
  %46 = getelementptr inbounds [101 x i16], [101 x i16]* %6, i64 0, i64 0
  %47 = bitcast %class.SkBlitter* %42 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  br label %48

48:                                               ; preds = %48, %39
  %49 = phi i32 [ %8, %39 ], [ %60, %48 ]
  %50 = phi i32 [ %1, %39 ], [ %59, %48 ]
  store i8 %45, i8* %44, align 16
  %51 = icmp slt i32 %49, 100
  %52 = select i1 %51, i32 %49, i32 100
  %53 = trunc i32 %52 to i16
  store i16 %53, i16* %46, align 16
  %54 = sext i32 %52 to i64
  %55 = getelementptr inbounds [101 x i16], [101 x i16]* %6, i64 0, i64 %54
  store i16 0, i16* %55, align 2
  %56 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %47, align 8
  %57 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %56, i64 3
  %58 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %57, align 8
  call void %58(%class.SkBlitter* %42, i32 %50, i32 %43, i8* nonnull %44, i16* nonnull %46) #7
  %59 = add nsw i32 %52, %50
  %60 = sub nsw i32 %49, %52
  %61 = icmp sgt i32 %60, 0
  br i1 %61, label %48, label %62

62:                                               ; preds = %48
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %44) #7
  call void @llvm.lifetime.end.p0i8(i64 202, i8* nonnull %40) #7
  br label %63

63:                                               ; preds = %37, %62
  ret i32 %3
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN24Horish_SkAntiHairBlitterD0Ev(%class.Horish_SkAntiHairBlitter*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %class.Horish_SkAntiHairBlitter* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN24Horish_SkAntiHairBlitter7drawCapEiiii(%class.Horish_SkAntiHairBlitter*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %6 = add nsw i32 %2, 32768
  %7 = ashr i32 %6, 16
  %8 = lshr i32 %6, 8
  %9 = and i32 %8, 255
  %10 = xor i32 %9, 255
  %11 = mul nsw i32 %10, %4
  %12 = ashr i32 %11, 6
  %13 = mul nsw i32 %9, %4
  %14 = ashr i32 %13, 6
  %15 = getelementptr inbounds %class.Horish_SkAntiHairBlitter, %class.Horish_SkAntiHairBlitter* %0, i64 0, i32 0, i32 1
  %16 = load %class.SkBlitter*, %class.SkBlitter** %15, align 8
  %17 = add nsw i32 %7, -1
  %18 = bitcast %class.SkBlitter* %16 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %19 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %18, align 8
  %20 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %19, i64 10
  %21 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %20, align 8
  tail call void %21(%class.SkBlitter* %16, i32 %1, i32 %17, i32 %12, i32 %14) #7
  %22 = add i32 %3, %2
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN24Horish_SkAntiHairBlitter8drawLineEiiii(%class.Horish_SkAntiHairBlitter*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %6 = add nsw i32 %3, 32768
  %7 = getelementptr inbounds %class.Horish_SkAntiHairBlitter, %class.Horish_SkAntiHairBlitter* %0, i64 0, i32 0, i32 1
  %8 = load %class.SkBlitter*, %class.SkBlitter** %7, align 8
  %9 = bitcast %class.SkBlitter* %8 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  br label %10

10:                                               ; preds = %10, %5
  %11 = phi i32 [ %6, %5 ], [ %21, %10 ]
  %12 = phi i32 [ %1, %5 ], [ %22, %10 ]
  %13 = ashr i32 %11, 16
  %14 = lshr i32 %11, 8
  %15 = add nsw i32 %13, -1
  %16 = and i32 %14, 255
  %17 = xor i32 %16, 255
  %18 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %9, align 8
  %19 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %18, i64 10
  %20 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %19, align 8
  tail call void %20(%class.SkBlitter* %8, i32 %12, i32 %15, i32 %17, i32 %16) #7
  %21 = add nsw i32 %11, %4
  %22 = add nsw i32 %12, 1
  %23 = icmp slt i32 %22, %2
  br i1 %23, label %10, label %24

24:                                               ; preds = %10
  %25 = add nsw i32 %21, -32768
  ret i32 %25
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23VLine_SkAntiHairBlitterD0Ev(%class.VLine_SkAntiHairBlitter*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %class.VLine_SkAntiHairBlitter* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN23VLine_SkAntiHairBlitter7drawCapEiiii(%class.VLine_SkAntiHairBlitter*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %6 = add nsw i32 %2, 32768
  %7 = ashr i32 %6, 16
  %8 = lshr i32 %6, 8
  %9 = and i32 %8, 255
  %10 = mul nsw i32 %9, %4
  %11 = ashr i32 %10, 6
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %21, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %class.VLine_SkAntiHairBlitter, %class.VLine_SkAntiHairBlitter* %0, i64 0, i32 0, i32 1
  %15 = load %class.SkBlitter*, %class.SkBlitter** %14, align 8
  %16 = trunc i32 %11 to i8
  %17 = bitcast %class.SkBlitter* %15 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %18 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %18, i64 4
  %20 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %19, align 8
  tail call void %20(%class.SkBlitter* %15, i32 %7, i32 %1, i32 1, i8 zeroext %16) #7
  br label %21

21:                                               ; preds = %5, %13
  %22 = xor i32 %9, 255
  %23 = mul nsw i32 %22, %4
  %24 = ashr i32 %23, 6
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %35, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %class.VLine_SkAntiHairBlitter, %class.VLine_SkAntiHairBlitter* %0, i64 0, i32 0, i32 1
  %28 = load %class.SkBlitter*, %class.SkBlitter** %27, align 8
  %29 = add nsw i32 %7, -1
  %30 = trunc i32 %24 to i8
  %31 = bitcast %class.SkBlitter* %28 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %32 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %31, align 8
  %33 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %32, i64 4
  %34 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %33, align 8
  tail call void %34(%class.SkBlitter* %28, i32 %29, i32 %1, i32 1, i8 zeroext %30) #7
  br label %35

35:                                               ; preds = %21, %26
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN23VLine_SkAntiHairBlitter8drawLineEiiii(%class.VLine_SkAntiHairBlitter*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %6 = add nsw i32 %3, 32768
  %7 = ashr i32 %6, 16
  %8 = lshr i32 %6, 8
  %9 = and i32 %8, 255
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %5
  %12 = sub nsw i32 %2, %1
  br label %24

13:                                               ; preds = %5
  %14 = trunc i32 %8 to i8
  %15 = getelementptr inbounds %class.VLine_SkAntiHairBlitter, %class.VLine_SkAntiHairBlitter* %0, i64 0, i32 0, i32 1
  %16 = load %class.SkBlitter*, %class.SkBlitter** %15, align 8
  %17 = sub nsw i32 %2, %1
  %18 = bitcast %class.SkBlitter* %16 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %19 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %18, align 8
  %20 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %19, i64 4
  %21 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %20, align 8
  tail call void %21(%class.SkBlitter* %16, i32 %7, i32 %1, i32 %17, i8 zeroext %14) #7
  %22 = xor i32 %9, 255
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %35, label %24

24:                                               ; preds = %11, %13
  %25 = phi i32 [ %12, %11 ], [ %17, %13 ]
  %26 = phi i32 [ 255, %11 ], [ %22, %13 ]
  %27 = getelementptr inbounds %class.VLine_SkAntiHairBlitter, %class.VLine_SkAntiHairBlitter* %0, i64 0, i32 0, i32 1
  %28 = load %class.SkBlitter*, %class.SkBlitter** %27, align 8
  %29 = add nsw i32 %7, -1
  %30 = trunc i32 %26 to i8
  %31 = bitcast %class.SkBlitter* %28 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %32 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %31, align 8
  %33 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %32, i64 4
  %34 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %33, align 8
  tail call void %34(%class.SkBlitter* %28, i32 %29, i32 %1, i32 %25, i8 zeroext %30) #7
  br label %35

35:                                               ; preds = %13, %24
  ret i32 %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN25Vertish_SkAntiHairBlitterD0Ev(%class.Vertish_SkAntiHairBlitter*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %class.Vertish_SkAntiHairBlitter* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN25Vertish_SkAntiHairBlitter7drawCapEiiii(%class.Vertish_SkAntiHairBlitter*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %6 = add nsw i32 %2, 32768
  %7 = ashr i32 %6, 16
  %8 = lshr i32 %6, 8
  %9 = getelementptr inbounds %class.Vertish_SkAntiHairBlitter, %class.Vertish_SkAntiHairBlitter* %0, i64 0, i32 0, i32 1
  %10 = load %class.SkBlitter*, %class.SkBlitter** %9, align 8
  %11 = add nsw i32 %7, -1
  %12 = and i32 %8, 255
  %13 = xor i32 %12, 255
  %14 = mul nsw i32 %13, %4
  %15 = ashr i32 %14, 6
  %16 = mul nsw i32 %12, %4
  %17 = ashr i32 %16, 6
  %18 = bitcast %class.SkBlitter* %10 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %19 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %18, align 8
  %20 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %19, i64 9
  %21 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %20, align 8
  tail call void %21(%class.SkBlitter* %10, i32 %11, i32 %1, i32 %15, i32 %17) #7
  %22 = add i32 %3, %2
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN25Vertish_SkAntiHairBlitter8drawLineEiiii(%class.Vertish_SkAntiHairBlitter*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %6 = add nsw i32 %3, 32768
  %7 = getelementptr inbounds %class.Vertish_SkAntiHairBlitter, %class.Vertish_SkAntiHairBlitter* %0, i64 0, i32 0, i32 1
  br label %8

8:                                                ; preds = %8, %5
  %9 = phi i32 [ %6, %5 ], [ %21, %8 ]
  %10 = phi i32 [ %1, %5 ], [ %22, %8 ]
  %11 = ashr i32 %9, 16
  %12 = lshr i32 %9, 8
  %13 = load %class.SkBlitter*, %class.SkBlitter** %7, align 8
  %14 = add nsw i32 %11, -1
  %15 = and i32 %12, 255
  %16 = xor i32 %15, 255
  %17 = bitcast %class.SkBlitter* %13 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %18 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %18, i64 9
  %20 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %19, align 8
  tail call void %20(%class.SkBlitter* %13, i32 %14, i32 %10, i32 %16, i32 %15) #7
  %21 = add nsw i32 %9, %4
  %22 = add nsw i32 %10, 1
  %23 = icmp slt i32 %22, %2
  br i1 %23, label %8, label %24

24:                                               ; preds = %8
  %25 = add nsw i32 %21, -32768
  ret i32 %25
}

; Function Attrs: nounwind
declare void @_ZN15SkAAClipBlitterD1Ev(%class.SkAAClipBlitter*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN8SkRegionD1Ev(%class.SkRegion*) unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL11do_scanlineiiijP9SkBlitter(i32, i32, i32, i32, %class.SkBlitter*) unnamed_addr #0 {
  %6 = alloca [101 x i16], align 16
  %7 = alloca [100 x i8], align 16
  %8 = ashr i32 %0, 8
  %9 = add nsw i32 %2, -1
  %10 = ashr i32 %9, 8
  %11 = icmp eq i32 %8, %10
  br i1 %11, label %12, label %21

12:                                               ; preds = %5
  %13 = sub nsw i32 %2, %0
  %14 = mul i32 %13, %3
  %15 = lshr i32 %14, 8
  %16 = trunc i32 %15 to i8
  %17 = bitcast %class.SkBlitter* %4 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %18 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %18, i64 4
  %20 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %19, align 8
  tail call void %20(%class.SkBlitter* %4, i32 %8, i32 %1, i32 1, i8 zeroext %16) #7
  br label %71

21:                                               ; preds = %5
  %22 = and i32 %0, 255
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %34, label %24

24:                                               ; preds = %21
  %25 = sub nuw nsw i32 256, %22
  %26 = mul i32 %25, %3
  %27 = lshr i32 %26, 8
  %28 = trunc i32 %27 to i8
  %29 = bitcast %class.SkBlitter* %4 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %30 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %29, align 8
  %31 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %30, i64 4
  %32 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %31, align 8
  tail call void %32(%class.SkBlitter* %4, i32 %8, i32 %1, i32 1, i8 zeroext %28) #7
  %33 = add nsw i32 %8, 1
  br label %34

34:                                               ; preds = %21, %24
  %35 = phi i32 [ %33, %24 ], [ %8, %21 ]
  %36 = ashr i32 %2, 8
  %37 = sub nsw i32 %36, %35
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %39, label %60

39:                                               ; preds = %34
  %40 = bitcast [101 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 202, i8* nonnull %40) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %40, i8 -86, i64 202, i1 false) #7
  %41 = getelementptr inbounds [100 x i8], [100 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %41) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %41, i8 -86, i64 100, i1 false) #7
  %42 = trunc i32 %3 to i8
  %43 = getelementptr inbounds [101 x i16], [101 x i16]* %6, i64 0, i64 0
  %44 = bitcast %class.SkBlitter* %4 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %37, %39 ], [ %57, %45 ]
  %47 = phi i32 [ %35, %39 ], [ %56, %45 ]
  store i8 %42, i8* %41, align 16
  %48 = icmp slt i32 %46, 100
  %49 = select i1 %48, i32 %46, i32 100
  %50 = trunc i32 %49 to i16
  store i16 %50, i16* %43, align 16
  %51 = sext i32 %49 to i64
  %52 = getelementptr inbounds [101 x i16], [101 x i16]* %6, i64 0, i64 %51
  store i16 0, i16* %52, align 2
  %53 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %44, align 8
  %54 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %53, i64 3
  %55 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %54, align 8
  call void %55(%class.SkBlitter* %4, i32 %47, i32 %1, i8* nonnull %41, i16* nonnull %43) #7
  %56 = add nsw i32 %49, %47
  %57 = sub nsw i32 %46, %49
  %58 = icmp sgt i32 %57, 0
  br i1 %58, label %45, label %59

59:                                               ; preds = %45
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %41) #7
  call void @llvm.lifetime.end.p0i8(i64 202, i8* nonnull %40) #7
  br label %60

60:                                               ; preds = %59, %34
  %61 = and i32 %2, 255
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %60
  %64 = mul i32 %61, %3
  %65 = lshr i32 %64, 8
  %66 = trunc i32 %65 to i8
  %67 = bitcast %class.SkBlitter* %4 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %68 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %67, align 8
  %69 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %68, i64 4
  %70 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %69, align 8
  call void %70(%class.SkBlitter* %4, i32 %36, i32 %1, i32 1, i8 zeroext %66) #7
  br label %71

71:                                               ; preds = %63, %60, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL14inner_scanlineiiijP9SkBlitter(i32, i32, i32, i32, %class.SkBlitter*) unnamed_addr #0 {
  %6 = alloca [101 x i16], align 16
  %7 = alloca [100 x i8], align 16
  %8 = ashr i32 %0, 8
  %9 = add nsw i32 %2, -1
  %10 = ashr i32 %9, 8
  %11 = icmp eq i32 %8, %10
  br i1 %11, label %12, label %28

12:                                               ; preds = %5
  %13 = sub nsw i32 %2, %0
  %14 = ashr i32 %13, 8
  %15 = sub nsw i32 %13, %14
  %16 = add i32 %15, %3
  %17 = mul i32 %15, %3
  %18 = add i32 %17, 128
  %19 = lshr i32 %18, 8
  %20 = add i32 %19, %18
  %21 = lshr i32 %20, 8
  %22 = sub i32 %16, %21
  %23 = trunc i32 %22 to i8
  %24 = bitcast %class.SkBlitter* %4 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %25 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %24, align 8
  %26 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %25, i64 4
  %27 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %26, align 8
  tail call void %27(%class.SkBlitter* %4, i32 %8, i32 %1, i32 1, i8 zeroext %23) #7
  br label %88

28:                                               ; preds = %5
  %29 = and i32 %0, 255
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %45, label %31

31:                                               ; preds = %28
  %32 = add i32 %3, %0
  %33 = mul i32 %29, %3
  %34 = add i32 %33, 128
  %35 = lshr i32 %34, 8
  %36 = add i32 %35, %34
  %37 = lshr i32 %36, 8
  %38 = sub i32 %32, %37
  %39 = trunc i32 %38 to i8
  %40 = bitcast %class.SkBlitter* %4 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %41 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %41, i64 4
  %43 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %42, align 8
  tail call void %43(%class.SkBlitter* %4, i32 %8, i32 %1, i32 1, i8 zeroext %39) #7
  %44 = add nsw i32 %8, 1
  br label %45

45:                                               ; preds = %28, %31
  %46 = phi i32 [ %44, %31 ], [ %8, %28 ]
  %47 = ashr i32 %2, 8
  %48 = sub nsw i32 %47, %46
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %50, label %71

50:                                               ; preds = %45
  %51 = bitcast [101 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 202, i8* nonnull %51) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %51, i8 -86, i64 202, i1 false) #7
  %52 = getelementptr inbounds [100 x i8], [100 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %52) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %52, i8 -86, i64 100, i1 false) #7
  %53 = trunc i32 %3 to i8
  %54 = getelementptr inbounds [101 x i16], [101 x i16]* %6, i64 0, i64 0
  %55 = bitcast %class.SkBlitter* %4 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  br label %56

56:                                               ; preds = %56, %50
  %57 = phi i32 [ %48, %50 ], [ %68, %56 ]
  %58 = phi i32 [ %46, %50 ], [ %67, %56 ]
  store i8 %53, i8* %52, align 16
  %59 = icmp slt i32 %57, 100
  %60 = select i1 %59, i32 %57, i32 100
  %61 = trunc i32 %60 to i16
  store i16 %61, i16* %54, align 16
  %62 = sext i32 %60 to i64
  %63 = getelementptr inbounds [101 x i16], [101 x i16]* %6, i64 0, i64 %62
  store i16 0, i16* %63, align 2
  %64 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %55, align 8
  %65 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %64, i64 3
  %66 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %65, align 8
  call void %66(%class.SkBlitter* %4, i32 %58, i32 %1, i8* nonnull %52, i16* nonnull %54) #7
  %67 = add nsw i32 %60, %58
  %68 = sub nsw i32 %57, %60
  %69 = icmp sgt i32 %68, 0
  br i1 %69, label %56, label %70

70:                                               ; preds = %56
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %52) #7
  call void @llvm.lifetime.end.p0i8(i64 202, i8* nonnull %51) #7
  br label %71

71:                                               ; preds = %70, %45
  %72 = and i32 %2, 255
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %88, label %74

74:                                               ; preds = %71
  %75 = xor i32 %72, 255
  %76 = add i32 %75, %3
  %77 = mul i32 %75, %3
  %78 = add i32 %77, 128
  %79 = lshr i32 %78, 8
  %80 = add i32 %79, %78
  %81 = lshr i32 %80, 8
  %82 = sub i32 %76, %81
  %83 = trunc i32 %82 to i8
  %84 = bitcast %class.SkBlitter* %4 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %85 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %84, align 8
  %86 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %85, i64 4
  %87 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %86, align 8
  call void %87(%class.SkBlitter* %4, i32 %47, i32 %1, i32 1, i8 zeroext %83) #7
  br label %88

88:                                               ; preds = %74, %71, %12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN9SkBlitterD2Ev(%class.SkBlitter*) unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
