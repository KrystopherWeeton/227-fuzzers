; ModuleID = '../../third_party/harfbuzz-ng/src/src/hb-ot-shape-complex-khmer.cc'
source_filename = "../../third_party/harfbuzz-ng/src/src/hb-ot-shape-complex-khmer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.hb_ot_shape_planner_t = type { %struct.hb_face_t*, %struct.hb_segment_properties_t, %struct.hb_ot_map_builder_t, %struct.hb_aat_map_builder_t, i8, %struct.hb_ot_complex_shaper_t* }
%struct.hb_face_t = type { %struct.hb_object_header_t, %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)*, i8*, void (i8*)*, i32, %struct.hb_atomic_int_t, %struct.hb_atomic_int_t, %struct.hb_shaper_object_dataset_t, %struct.hb_ot_face_t, %struct.hb_atomic_ptr_t.126 }
%struct.hb_object_header_t = type { %struct.hb_reference_count_t, %struct.hb_atomic_int_t, %struct.hb_atomic_ptr_t }
%struct.hb_reference_count_t = type { %struct.hb_atomic_int_t }
%struct.hb_atomic_ptr_t = type { %struct.hb_user_data_array_t* }
%struct.hb_user_data_array_t = type { %struct.hb_mutex_t, %struct.hb_lockable_set_t }
%struct.hb_mutex_t = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.hb_lockable_set_t = type { %struct.hb_vector_t }
%struct.hb_vector_t = type { i32, i32, %"struct.hb_user_data_array_t::hb_user_data_item_t"* }
%"struct.hb_user_data_array_t::hb_user_data_item_t" = type { %struct.hb_user_data_key_t*, i8*, void (i8*)* }
%struct.hb_user_data_key_t = type { i8 }
%struct.hb_blob_t = type { %struct.hb_object_header_t, i8*, i32, i32, i8*, void (i8*)* }
%struct.hb_atomic_int_t = type { i32 }
%struct.hb_shaper_object_dataset_t = type { %struct.hb_face_t*, %struct.hb_shaper_lazy_loader_t }
%struct.hb_shaper_lazy_loader_t = type { %struct.hb_lazy_loader_t }
%struct.hb_lazy_loader_t = type { %struct.hb_atomic_ptr_t.0 }
%struct.hb_atomic_ptr_t.0 = type { %struct.hb_ot_face_data_t* }
%struct.hb_ot_face_data_t = type opaque
%struct.hb_ot_face_t = type { %struct.hb_face_t*, %struct.hb_table_lazy_loader_t, %struct.hb_face_lazy_loader_t, %struct.hb_table_lazy_loader_t.6, %struct.hb_face_lazy_loader_t.9, %struct.hb_table_lazy_loader_t.13, %struct.hb_face_lazy_loader_t.16, %struct.hb_face_lazy_loader_t.20, %struct.hb_table_lazy_loader_t.24, %struct.hb_face_lazy_loader_t.27, %struct.hb_table_lazy_loader_t.31, %struct.hb_face_lazy_loader_t.34, %struct.hb_face_lazy_loader_t.38, %struct.hb_face_lazy_loader_t.42, %struct.hb_face_lazy_loader_t.46, %struct.hb_table_lazy_loader_t.50, %struct.hb_table_lazy_loader_t.53, %struct.hb_table_lazy_loader_t.56, %struct.hb_face_lazy_loader_t.59, %struct.hb_table_lazy_loader_t.63, %struct.hb_table_lazy_loader_t.66, %struct.hb_face_lazy_loader_t.69, %struct.hb_face_lazy_loader_t.73, %struct.hb_face_lazy_loader_t.77, %struct.hb_table_lazy_loader_t.81, %struct.hb_table_lazy_loader_t.84, %struct.hb_table_lazy_loader_t.87, %struct.hb_table_lazy_loader_t.90, %struct.hb_table_lazy_loader_t.93, %struct.hb_table_lazy_loader_t.96, %struct.hb_table_lazy_loader_t.99, %struct.hb_table_lazy_loader_t.102, %struct.hb_table_lazy_loader_t.105, %struct.hb_table_lazy_loader_t.108, %struct.hb_face_lazy_loader_t.111, %struct.hb_face_lazy_loader_t.115, %struct.hb_face_lazy_loader_t.119, %struct.hb_table_lazy_loader_t.123 }
%struct.hb_table_lazy_loader_t = type { %struct.hb_lazy_loader_t.1 }
%struct.hb_lazy_loader_t.1 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_atomic_ptr_t.2 = type { %struct.hb_blob_t* }
%struct.hb_face_lazy_loader_t = type { %struct.hb_lazy_loader_t.3 }
%struct.hb_lazy_loader_t.3 = type { %struct.hb_atomic_ptr_t.5 }
%struct.hb_atomic_ptr_t.5 = type { %"struct.OT::cmap_accelerator_t"* }
%"struct.OT::cmap_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.6 = type { %struct.hb_lazy_loader_t.7 }
%struct.hb_lazy_loader_t.7 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.9 = type { %struct.hb_lazy_loader_t.10 }
%struct.hb_lazy_loader_t.10 = type { %struct.hb_atomic_ptr_t.12 }
%struct.hb_atomic_ptr_t.12 = type { %"struct.OT::hmtx_accelerator_t"* }
%"struct.OT::hmtx_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.13 = type { %struct.hb_lazy_loader_t.14 }
%struct.hb_lazy_loader_t.14 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.16 = type { %struct.hb_lazy_loader_t.17 }
%struct.hb_lazy_loader_t.17 = type { %struct.hb_atomic_ptr_t.19 }
%struct.hb_atomic_ptr_t.19 = type { %"struct.OT::post_accelerator_t"* }
%"struct.OT::post_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.20 = type { %struct.hb_lazy_loader_t.21 }
%struct.hb_lazy_loader_t.21 = type { %struct.hb_atomic_ptr_t.23 }
%struct.hb_atomic_ptr_t.23 = type { %"struct.OT::name_accelerator_t"* }
%"struct.OT::name_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.24 = type { %struct.hb_lazy_loader_t.25 }
%struct.hb_lazy_loader_t.25 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.27 = type { %struct.hb_lazy_loader_t.28 }
%struct.hb_lazy_loader_t.28 = type { %struct.hb_atomic_ptr_t.30 }
%struct.hb_atomic_ptr_t.30 = type { %"struct.OT::meta_accelerator_t"* }
%"struct.OT::meta_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.31 = type { %struct.hb_lazy_loader_t.32 }
%struct.hb_lazy_loader_t.32 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.34 = type { %struct.hb_lazy_loader_t.35 }
%struct.hb_lazy_loader_t.35 = type { %struct.hb_atomic_ptr_t.37 }
%struct.hb_atomic_ptr_t.37 = type { %"struct.OT::vmtx_accelerator_t"* }
%"struct.OT::vmtx_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.38 = type { %struct.hb_lazy_loader_t.39 }
%struct.hb_lazy_loader_t.39 = type { %struct.hb_atomic_ptr_t.41 }
%struct.hb_atomic_ptr_t.41 = type { %"struct.OT::glyf_accelerator_t"* }
%"struct.OT::glyf_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.42 = type { %struct.hb_lazy_loader_t.43 }
%struct.hb_lazy_loader_t.43 = type { %struct.hb_atomic_ptr_t.45 }
%struct.hb_atomic_ptr_t.45 = type { %"struct.OT::cff1_accelerator_t"* }
%"struct.OT::cff1_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.46 = type { %struct.hb_lazy_loader_t.47 }
%struct.hb_lazy_loader_t.47 = type { %struct.hb_atomic_ptr_t.49 }
%struct.hb_atomic_ptr_t.49 = type { %"struct.OT::cff2_accelerator_t"* }
%"struct.OT::cff2_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.50 = type { %struct.hb_lazy_loader_t.51 }
%struct.hb_lazy_loader_t.51 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.53 = type { %struct.hb_lazy_loader_t.54 }
%struct.hb_lazy_loader_t.54 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.56 = type { %struct.hb_lazy_loader_t.57 }
%struct.hb_lazy_loader_t.57 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.59 = type { %struct.hb_lazy_loader_t.60 }
%struct.hb_lazy_loader_t.60 = type { %struct.hb_atomic_ptr_t.62 }
%struct.hb_atomic_ptr_t.62 = type { %"struct.OT::gvar_accelerator_t"* }
%"struct.OT::gvar_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.63 = type { %struct.hb_lazy_loader_t.64 }
%struct.hb_lazy_loader_t.64 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.66 = type { %struct.hb_lazy_loader_t.67 }
%struct.hb_lazy_loader_t.67 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.69 = type { %struct.hb_lazy_loader_t.70 }
%struct.hb_lazy_loader_t.70 = type { %struct.hb_atomic_ptr_t.72 }
%struct.hb_atomic_ptr_t.72 = type { %"struct.OT::GDEF_accelerator_t"* }
%"struct.OT::GDEF_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.73 = type { %struct.hb_lazy_loader_t.74 }
%struct.hb_lazy_loader_t.74 = type { %struct.hb_atomic_ptr_t.76 }
%struct.hb_atomic_ptr_t.76 = type { %"struct.OT::GSUB_accelerator_t"* }
%"struct.OT::GSUB_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.77 = type { %struct.hb_lazy_loader_t.78 }
%struct.hb_lazy_loader_t.78 = type { %struct.hb_atomic_ptr_t.80 }
%struct.hb_atomic_ptr_t.80 = type { %"struct.OT::GPOS_accelerator_t"* }
%"struct.OT::GPOS_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.81 = type { %struct.hb_lazy_loader_t.82 }
%struct.hb_lazy_loader_t.82 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.84 = type { %struct.hb_lazy_loader_t.85 }
%struct.hb_lazy_loader_t.85 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.87 = type { %struct.hb_lazy_loader_t.88 }
%struct.hb_lazy_loader_t.88 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.90 = type { %struct.hb_lazy_loader_t.91 }
%struct.hb_lazy_loader_t.91 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.93 = type { %struct.hb_lazy_loader_t.94 }
%struct.hb_lazy_loader_t.94 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.96 = type { %struct.hb_lazy_loader_t.97 }
%struct.hb_lazy_loader_t.97 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.99 = type { %struct.hb_lazy_loader_t.100 }
%struct.hb_lazy_loader_t.100 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.102 = type { %struct.hb_lazy_loader_t.103 }
%struct.hb_lazy_loader_t.103 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.105 = type { %struct.hb_lazy_loader_t.106 }
%struct.hb_lazy_loader_t.106 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.108 = type { %struct.hb_lazy_loader_t.109 }
%struct.hb_lazy_loader_t.109 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.111 = type { %struct.hb_lazy_loader_t.112 }
%struct.hb_lazy_loader_t.112 = type { %struct.hb_atomic_ptr_t.114 }
%struct.hb_atomic_ptr_t.114 = type { %"struct.OT::CBDT_accelerator_t"* }
%"struct.OT::CBDT_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.115 = type { %struct.hb_lazy_loader_t.116 }
%struct.hb_lazy_loader_t.116 = type { %struct.hb_atomic_ptr_t.118 }
%struct.hb_atomic_ptr_t.118 = type { %"struct.OT::sbix_accelerator_t"* }
%"struct.OT::sbix_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.119 = type { %struct.hb_lazy_loader_t.120 }
%struct.hb_lazy_loader_t.120 = type { %struct.hb_atomic_ptr_t.122 }
%struct.hb_atomic_ptr_t.122 = type { %"struct.OT::SVG_accelerator_t"* }
%"struct.OT::SVG_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.123 = type { %struct.hb_lazy_loader_t.124 }
%struct.hb_lazy_loader_t.124 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_atomic_ptr_t.126 = type { %"struct.hb_face_t::plan_node_t"* }
%"struct.hb_face_t::plan_node_t" = type { %struct.hb_shape_plan_t*, %"struct.hb_face_t::plan_node_t"* }
%struct.hb_shape_plan_t = type { %struct.hb_object_header_t, %struct.hb_face_t*, %struct.hb_shape_plan_key_t, %struct.hb_ot_shape_plan_t }
%struct.hb_shape_plan_key_t = type { %struct.hb_segment_properties_t, %struct.hb_feature_t*, i32, %struct.hb_ot_shape_plan_key_t, i32 (%struct.hb_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*, %struct.hb_feature_t*, i32)*, i8* }
%struct.hb_feature_t = type { i32, i32, i32, i32 }
%struct.hb_ot_shape_plan_key_t = type { [2 x i32] }
%struct.hb_font_t = type { %struct.hb_object_header_t, %struct.hb_font_t*, %struct.hb_face_t*, i32, i32, i64, i64, i32, i32, float, i32, i32*, float*, %struct.hb_font_funcs_t*, i8*, void (i8*)*, %struct.hb_shaper_object_dataset_t.128 }
%struct.hb_font_funcs_t = type { %struct.hb_object_header_t, %struct.anon, %struct.anon.127, %"union.hb_font_funcs_t::get_t" }
%struct.anon = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.anon.127 = type { void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)* }
%"union.hb_font_funcs_t::get_t" = type { %"struct.hb_font_funcs_t::get_t::get_funcs_t" }
%"struct.hb_font_funcs_t::get_t::get_funcs_t" = type { i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*)*, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, %struct.hb_glyph_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i8*, i32, i32*, i8*)* }
%struct.hb_font_extents_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.hb_glyph_extents_t = type { i32, i32, i32, i32 }
%struct.hb_shaper_object_dataset_t.128 = type { %struct.hb_font_t*, %struct.hb_shaper_lazy_loader_t.129 }
%struct.hb_shaper_lazy_loader_t.129 = type { %struct.hb_lazy_loader_t.130 }
%struct.hb_lazy_loader_t.130 = type { %struct.hb_atomic_ptr_t.132 }
%struct.hb_atomic_ptr_t.132 = type { %struct.hb_ot_font_data_t* }
%struct.hb_ot_font_data_t = type opaque
%struct.hb_buffer_t = type { %struct.hb_object_header_t, %struct.hb_unicode_funcs_t*, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hb_segment_properties_t, i8, i8, i8, i32, i32, i32, i32, %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t*, %struct.hb_glyph_position_t*, i32, [2 x [5 x i32]], [2 x i32], i32 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, i8*)*, i8*, void (i8*)* }
%struct.hb_unicode_funcs_t = type { %struct.hb_object_header_t, %struct.hb_unicode_funcs_t*, %struct.anon.133, %struct.anon.134, %struct.anon.135 }
%struct.anon.133 = type { i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i8*)* }
%struct.anon.134 = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.anon.135 = type { void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)* }
%struct.hb_glyph_info_t = type { i32, i32, i32, %union._hb_var_int_t, %union._hb_var_int_t }
%union._hb_var_int_t = type { i32 }
%struct.hb_glyph_position_t = type { i32, i32, i32, i32, %union._hb_var_int_t }
%struct.hb_ot_shape_plan_t = type <{ %struct.hb_segment_properties_t, %struct.hb_ot_complex_shaper_t*, %struct.hb_ot_map_t, %struct.hb_aat_map_t, i8*, i32, i32, i32, i32, i32, i32, i16, [6 x i8] }>
%struct.hb_ot_map_t = type { [2 x i32], [2 x i8], i32, %struct.hb_sorted_vector_t, [2 x %struct.hb_vector_t.137], [2 x %struct.hb_vector_t.138] }
%struct.hb_sorted_vector_t = type { %struct.hb_vector_t.136 }
%struct.hb_vector_t.136 = type { i32, i32, %"struct.hb_ot_map_t::feature_map_t"* }
%"struct.hb_ot_map_t::feature_map_t" = type { i32, [2 x i32], [2 x i32], i32, i32, i32, i8 }
%struct.hb_vector_t.137 = type { i32, i32, %"struct.hb_ot_map_t::lookup_map_t"* }
%"struct.hb_ot_map_t::lookup_map_t" = type { i16, i8, i32 }
%struct.hb_vector_t.138 = type { i32, i32, %"struct.hb_ot_map_t::stage_map_t"* }
%"struct.hb_ot_map_t::stage_map_t" = type { i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* }
%struct.hb_aat_map_t = type { %struct.hb_vector_t.139 }
%struct.hb_vector_t.139 = type { i32, i32, i32* }
%struct.hb_segment_properties_t = type { i32, i32, %struct.hb_language_impl_t*, i8*, i8* }
%struct.hb_language_impl_t = type opaque
%struct.hb_ot_map_builder_t = type { %struct.hb_face_t*, %struct.hb_segment_properties_t, [2 x i32], [2 x i8], [2 x i32], [2 x i32], [2 x i32], %struct.hb_vector_t.140, [2 x %struct.hb_vector_t.141] }
%struct.hb_vector_t.140 = type { i32, i32, %"struct.hb_ot_map_builder_t::feature_info_t"* }
%"struct.hb_ot_map_builder_t::feature_info_t" = type { i32, i32, i32, i32, i32, [2 x i32] }
%struct.hb_vector_t.141 = type { i32, i32, %"struct.hb_ot_map_builder_t::stage_info_t"* }
%"struct.hb_ot_map_builder_t::stage_info_t" = type { i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* }
%struct.hb_aat_map_builder_t = type { %struct.hb_face_t*, %struct.hb_sorted_vector_t.142 }
%struct.hb_sorted_vector_t.142 = type { %struct.hb_vector_t.143 }
%struct.hb_vector_t.143 = type { i32, i32, %"struct.hb_aat_map_builder_t::feature_info_t"* }
%"struct.hb_aat_map_builder_t::feature_info_t" = type { i32, i32, i8, i32 }
%struct.hb_ot_complex_shaper_t = type { {}*, {}*, i8* (%struct.hb_ot_shape_plan_t*)*, void (i8*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, i32, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32*, i32*)*, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32, i32*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, i32, i32)*, i32, i8 }
%struct.hb_ot_shape_normalize_context_t = type { %struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*, %struct.hb_unicode_funcs_t*, {}*, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32, i32*)* }
%struct.hb_ot_map_feature_t = type { i32, i32 }
%struct.khmer_shape_plan_t = type { [9 x i32] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZN11hb_buffer_t7messageEP9hb_font_tPKcz = comdat any

@_hb_ot_complex_shaper_khmer = hidden local_unnamed_addr constant { void (%struct.hb_ot_shape_planner_t*)*, void (%struct.hb_ot_shape_planner_t*)*, i8* (%struct.hb_ot_shape_plan_t*)*, void (i8*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, i32, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32*, i32*)*, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32, i32*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, i32, i32)*, i32, i8 } { void (%struct.hb_ot_shape_planner_t*)* @_ZL22collect_features_khmerP21hb_ot_shape_planner_t, void (%struct.hb_ot_shape_planner_t*)* @_ZL23override_features_khmerP21hb_ot_shape_planner_t, i8* (%struct.hb_ot_shape_plan_t*)* @_ZL17data_create_khmerPK18hb_ot_shape_plan_t, void (i8*)* @_ZL18data_destroy_khmerPv, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)* null, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)* null, i32 3, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32*, i32*)* @_ZL15decompose_khmerPK31hb_ot_shape_normalize_context_tjPjS2_, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32, i32*)* @_ZL13compose_khmerPK31hb_ot_shape_normalize_context_tjjPj, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)* @_ZL17setup_masks_khmerPK18hb_ot_shape_plan_tP11hb_buffer_tP9hb_font_t, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, i32, i32)* null, i32 0, i8 0 }, align 8
@_ZL14khmer_features = internal unnamed_addr constant [9 x %struct.hb_ot_map_feature_t] [%struct.hb_ot_map_feature_t { i32 1886545254, i32 12 }, %struct.hb_ot_map_feature_t { i32 1651275622, i32 12 }, %struct.hb_ot_map_feature_t { i32 1633842790, i32 12 }, %struct.hb_ot_map_feature_t { i32 1886614630, i32 12 }, %struct.hb_ot_map_feature_t { i32 1667654002, i32 12 }, %struct.hb_ot_map_feature_t { i32 1886545267, i32 13 }, %struct.hb_ot_map_feature_t { i32 1633842803, i32 13 }, %struct.hb_ot_map_feature_t { i32 1651275635, i32 13 }, %struct.hb_ot_map_feature_t { i32 1886614643, i32 13 }], align 16
@_ZL33_khmer_syllable_machine_eof_trans = internal unnamed_addr constant [41 x i8] c"\01\01\01\01\01\01\01\01\01\01\0E\11\11\11\11\11\11\11\11\11\1C!!!!!!!!!()))))))))\00", align 16
@_ZL34_khmer_syllable_machine_trans_keys = internal unnamed_addr constant [81 x i8] c"\02\08\02\06\02\08\02\06\00\00\02\06\02\08\02\06\02\08\02\06\02\06\02\08\02\06\00\00\02\06\02\08\02\06\02\08\02\06\02\08\00\0B\02\0B\02\0B\02\0B\07\07\02\07\02\0B\02\0B\02\0B\00\00\02\08\02\0B\02\0B\07\07\02\07\02\0B\02\0B\00\00\02\0B\02\0B\00", align 16
@_ZL32_khmer_syllable_machine_indicies = internal unnamed_addr constant [264 x i8] c"\01\00\00\02\03\00\04\01\00\00\00\03\01\00\00\00\03\00\04\05\00\00\00\04\06\07\00\00\00\08\09\00\00\00\0A\00\04\09\00\00\00\0A\0B\00\00\00\0C\00\04\0B\00\00\00\0C\0E\0D\0D\0D\0F\0E\10\10\10\0F\10\11\12\10\10\10\11\13\14\10\10\10\15\16\10\10\10\17\10\11\16\10\10\10\17\18\10\10\10\19\10\11\18\10\10\10\19\0E\10\10\1A\0F\10\11\1D\1C\1E\02\1F\1C\0F\13\11\17\19\15! \22\02\03\06\04\0A\0C\08# $ \03\06\04\0A\0C\08\05 $ \04\06   \08\06\07 $ \08\06% $ \0A\06\04  \08& $ \0C\06\04\0A \08# \22 \03\06\04\0A\0C\08\1D\0E'''\0F'\11)(*(\0F\13\11\17\19\15\12(*(\11\13(((\15\13\14(*(\15\13+(*(\17\13\11((\15,(*(\19\13\11\17(\15-.(\1F\1A\0F\13\11\17\19\15)(\1F(\0F\13\11\17\19\15\00", align 16
@_ZL37_khmer_syllable_machine_index_offsets = internal unnamed_addr constant [41 x i16] [i16 0, i16 7, i16 12, i16 19, i16 24, i16 25, i16 30, i16 37, i16 42, i16 49, i16 54, i16 59, i16 66, i16 71, i16 72, i16 77, i16 84, i16 89, i16 96, i16 101, i16 108, i16 120, i16 130, i16 140, i16 150, i16 151, i16 157, i16 167, i16 177, i16 187, i16 188, i16 195, i16 205, i16 215, i16 216, i16 222, i16 232, i16 242, i16 243, i16 253, i16 0], align 16
@_ZL34_khmer_syllable_machine_char_class = internal unnamed_addr constant [30 x i8] c"\00\00\01\01\02\02\01\01\01\01\03\03\01\04\01\00\01\01\01\05\06\07\01\01\01\08\09\0A\0B\00", align 16
@_ZL38_khmer_syllable_machine_index_defaults = internal unnamed_addr constant [41 x i8] c"\00\00\00\00\00\00\00\00\00\00\0D\10\10\10\10\10\10\10\10\10\1C         '(((((((((\00", align 16
@_ZL34_khmer_syllable_machine_cond_targs = internal unnamed_addr constant [48 x i8] c"\14\01\1C\16\17\03\18\05\19\07\1A\09\1B\14\0A\1F\14 \0C!\0E\22\10#\12$'\14\14\15\1E%\14\00\1D\02\04\06\08\14\14\0B\0D\0F\11&\13\00", align 16
@_ZL36_khmer_syllable_machine_cond_actions = internal unnamed_addr constant [48 x i8] c"\01\00\02\02\02\00\00\00\02\00\02\00\02\03\00\04\05\02\00\00\00\02\00\02\00\02\04\00\08\02\09\00\0A\00\00\00\00\00\00\0B\0C\00\00\00\00\04\00\00", align 16
@_ZL42_khmer_syllable_machine_from_state_actions = internal unnamed_addr constant <{ [21 x i8], [20 x i8] }> <{ [21 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\07", [20 x i8] zeroinitializer }>, align 16
@_ZL40_khmer_syllable_machine_to_state_actions = internal unnamed_addr constant <{ [21 x i8], [20 x i8] }> <{ [21 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\06", [20 x i8] zeroinitializer }>, align 16
@.str = private unnamed_addr constant [23 x i8] c"start reordering khmer\00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"end reordering khmer\00", align 1
@_hb_options = external hidden local_unnamed_addr global %struct.hb_atomic_int_t, align 4
@switch.table._ZL17setup_masks_khmerPK18hb_ot_shape_plan_tP11hb_buffer_tP9hb_font_t = private unnamed_addr constant [9 x i8] c"\1C\07\07\1A\07\1B\07\07\1D", align 1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL22collect_features_khmerP21hb_ot_shape_planner_t(%struct.hb_ot_shape_planner_t*) #0 {
  %2 = getelementptr inbounds %struct.hb_ot_shape_planner_t, %struct.hb_ot_shape_planner_t* %0, i64 0, i32 2
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* nonnull @_ZL21setup_syllables_khmerPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t) #5
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* nonnull @_ZL13reorder_khmerPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1819239276, i32 1, i32 1) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1667460464, i32 1, i32 1) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1886545254, i32 12, i32 1) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1651275622, i32 12, i32 1) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1633842790, i32 12, i32 1) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1886614630, i32 12, i32 1) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1667654002, i32 12, i32 1) #5
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* nonnull @_ZL19_hb_clear_syllablesPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1886545267, i32 13, i32 1) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1633842803, i32 13, i32 1) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1651275635, i32 13, i32 1) #5
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1886614643, i32 13, i32 1) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL23override_features_khmerP21hb_ot_shape_planner_t(%struct.hb_ot_shape_planner_t*) #0 {
  %2 = getelementptr inbounds %struct.hb_ot_shape_planner_t, %struct.hb_ot_shape_planner_t* %0, i64 0, i32 2
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1668049255, i32 1, i32 1) #5
  %3 = load atomic i32, i32* getelementptr inbounds (%struct.hb_atomic_int_t, %struct.hb_atomic_int_t* @_hb_options, i64 0, i32 0) monotonic, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %7, !prof !2

5:                                                ; preds = %1
  tail call void @_Z16_hb_options_initv() #5
  %6 = load atomic i32, i32* getelementptr inbounds (%struct.hb_atomic_int_t, %struct.hb_atomic_int_t* @_hb_options, i64 0, i32 0) monotonic, align 4
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i32 [ %6, %5 ], [ %3, %1 ]
  %9 = and i32 %8, 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1801810542, i32 1, i32 0) #5
  br label %12

12:                                               ; preds = %7, %11
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1818847073, i32 1, i32 0) #5
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal noalias i8* @_ZL17data_create_khmerPK18hb_ot_shape_plan_t(%struct.hb_ot_shape_plan_t* nocapture readonly) #1 {
  %2 = tail call noalias i8* @calloc(i64 1, i64 36) #5
  %3 = icmp eq i8* %2, null
  br i1 %3, label %50, label %4, !prof !2

4:                                                ; preds = %1
  %5 = bitcast i8* %2 to [9 x i32]*
  %6 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 3, i32 0, i32 2
  %7 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 3, i32 0, i32 1
  br label %8

8:                                                ; preds = %45, %4
  %9 = phi i64 [ 0, %4 ], [ %48, %45 ]
  %10 = icmp ult i64 %9, 5
  br i1 %10, label %11, label %45

11:                                               ; preds = %8
  %12 = getelementptr inbounds [9 x %struct.hb_ot_map_feature_t], [9 x %struct.hb_ot_map_feature_t]* @_ZL14khmer_features, i64 0, i64 %9, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = load %"struct.hb_ot_map_t::feature_map_t"*, %"struct.hb_ot_map_t::feature_map_t"** %6, align 8
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %45, label %17

17:                                               ; preds = %11
  %18 = add nsw i32 %15, -1
  br label %19

19:                                               ; preds = %34, %17
  %20 = phi i32 [ %18, %17 ], [ %36, %34 ]
  %21 = phi i32 [ 0, %17 ], [ %35, %34 ]
  %22 = add i32 %21, %20
  %23 = lshr i32 %22, 1
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %14, i64 %24, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp ugt i32 %26, %13
  br i1 %27, label %28, label %30

28:                                               ; preds = %19
  %29 = add nsw i32 %23, -1
  br label %34

30:                                               ; preds = %19
  %31 = icmp ult i32 %26, %13
  br i1 %31, label %32, label %38

32:                                               ; preds = %30
  %33 = add nuw nsw i32 %23, 1
  br label %34

34:                                               ; preds = %32, %28
  %35 = phi i32 [ %21, %28 ], [ %33, %32 ]
  %36 = phi i32 [ %29, %28 ], [ %20, %32 ]
  %37 = icmp sgt i32 %35, %36
  br i1 %37, label %45, label %19

38:                                               ; preds = %30
  %39 = zext i32 %23 to i64
  %40 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %14, i64 %39
  %41 = icmp eq %"struct.hb_ot_map_t::feature_map_t"* %40, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %14, i64 %39, i32 5
  %44 = load i32, i32* %43, align 4
  br label %45

45:                                               ; preds = %34, %42, %38, %11, %8
  %46 = phi i32 [ 0, %8 ], [ %44, %42 ], [ 0, %38 ], [ 0, %11 ], [ 0, %34 ]
  %47 = getelementptr inbounds [9 x i32], [9 x i32]* %5, i64 0, i64 %9
  store i32 %46, i32* %47, align 4
  %48 = add nuw nsw i64 %9, 1
  %49 = icmp eq i64 %48, 9
  br i1 %49, label %50, label %8

50:                                               ; preds = %45, %1
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL18data_destroy_khmerPv(i8* nocapture) #0 {
  tail call void @free(i8* %0) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZL15decompose_khmerPK31hb_ot_shape_normalize_context_tjPjS2_(%struct.hb_ot_shape_normalize_context_t* nocapture readonly, i32, i32*, i32*) #0 {
  switch i32 %1, label %10 [
    i32 6078, label %5
    i32 6079, label %6
    i32 6080, label %7
    i32 6084, label %8
    i32 6085, label %9
  ]

5:                                                ; preds = %4
  store i32 6081, i32* %2, align 4
  store i32 6078, i32* %3, align 4
  br label %19

6:                                                ; preds = %4
  store i32 6081, i32* %2, align 4
  store i32 6079, i32* %3, align 4
  br label %19

7:                                                ; preds = %4
  store i32 6081, i32* %2, align 4
  store i32 6080, i32* %3, align 4
  br label %19

8:                                                ; preds = %4
  store i32 6081, i32* %2, align 4
  store i32 6084, i32* %3, align 4
  br label %19

9:                                                ; preds = %4
  store i32 6081, i32* %2, align 4
  store i32 6085, i32* %3, align 4
  br label %19

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.hb_ot_shape_normalize_context_t, %struct.hb_ot_shape_normalize_context_t* %0, i64 0, i32 3
  %12 = load %struct.hb_unicode_funcs_t*, %struct.hb_unicode_funcs_t** %11, align 8
  store i32 %1, i32* %2, align 4
  store i32 0, i32* %3, align 4
  %13 = getelementptr inbounds %struct.hb_unicode_funcs_t, %struct.hb_unicode_funcs_t* %12, i64 0, i32 2, i32 6
  %14 = load i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i32*, i8*)** %13, align 8
  %15 = getelementptr inbounds %struct.hb_unicode_funcs_t, %struct.hb_unicode_funcs_t* %12, i64 0, i32 3, i32 6
  %16 = load i8*, i8** %15, align 8
  %17 = tail call i32 %14(%struct.hb_unicode_funcs_t* %12, i32 %1, i32* %2, i32* %3, i8* %16) #5
  %18 = icmp ne i32 %17, 0
  br label %19

19:                                               ; preds = %10, %9, %8, %7, %6, %5
  %20 = phi i1 [ %18, %10 ], [ true, %9 ], [ true, %8 ], [ true, %7 ], [ true, %6 ], [ true, %5 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZL13compose_khmerPK31hb_ot_shape_normalize_context_tjjPj(%struct.hb_ot_shape_normalize_context_t* nocapture readonly, i32, i32, i32*) #0 {
  %5 = getelementptr inbounds %struct.hb_ot_shape_normalize_context_t, %struct.hb_ot_shape_normalize_context_t* %0, i64 0, i32 3
  %6 = load %struct.hb_unicode_funcs_t*, %struct.hb_unicode_funcs_t** %5, align 8
  %7 = getelementptr inbounds %struct.hb_unicode_funcs_t, %struct.hb_unicode_funcs_t* %6, i64 0, i32 2, i32 2
  %8 = load i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)** %7, align 8
  %9 = getelementptr inbounds %struct.hb_unicode_funcs_t, %struct.hb_unicode_funcs_t* %6, i64 0, i32 3, i32 2
  %10 = load i8*, i8** %9, align 8
  %11 = tail call i32 %8(%struct.hb_unicode_funcs_t* %6, i32 %1, i8* %10) #5
  %12 = icmp ult i32 %11, 32
  br i1 %12, label %13, label %23

13:                                               ; preds = %4
  %14 = load %struct.hb_unicode_funcs_t*, %struct.hb_unicode_funcs_t** %5, align 8
  %15 = getelementptr inbounds %struct.hb_unicode_funcs_t, %struct.hb_unicode_funcs_t* %14, i64 0, i32 2, i32 2
  %16 = load i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)** %15, align 8
  %17 = getelementptr inbounds %struct.hb_unicode_funcs_t, %struct.hb_unicode_funcs_t* %14, i64 0, i32 3, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = tail call i32 %16(%struct.hb_unicode_funcs_t* %14, i32 %1, i8* %18) #5
  %20 = shl i32 1, %19
  %21 = and i32 %20, 7168
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %35

23:                                               ; preds = %13, %4
  %24 = load %struct.hb_unicode_funcs_t*, %struct.hb_unicode_funcs_t** %5, align 8
  store i32 0, i32* %3, align 4
  %25 = icmp eq i32 %1, 0
  %26 = icmp eq i32 %2, 0
  %27 = or i1 %25, %26
  br i1 %27, label %35, label %28, !prof !2

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.hb_unicode_funcs_t, %struct.hb_unicode_funcs_t* %24, i64 0, i32 2, i32 5
  %30 = load i32 (%struct.hb_unicode_funcs_t*, i32, i32, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32, i32*, i8*)** %29, align 8
  %31 = getelementptr inbounds %struct.hb_unicode_funcs_t, %struct.hb_unicode_funcs_t* %24, i64 0, i32 3, i32 5
  %32 = load i8*, i8** %31, align 8
  %33 = tail call i32 %30(%struct.hb_unicode_funcs_t* %24, i32 %1, i32 %2, i32* %3, i8* %32) #5
  %34 = icmp ne i32 %33, 0
  br label %35

35:                                               ; preds = %28, %23, %13
  %36 = phi i1 [ false, %13 ], [ %34, %28 ], [ false, %23 ]
  ret i1 %36
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL17setup_masks_khmerPK18hb_ot_shape_plan_tP11hb_buffer_tP9hb_font_t(%struct.hb_ot_shape_plan_t* nocapture readnone, %struct.hb_buffer_t* nocapture readonly, %struct.hb_font_t* nocapture readnone) #0 {
  %4 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %1, i64 0, i32 15
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %1, i64 0, i32 18
  %7 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %6, align 8
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = zext i32 %5 to i64
  br label %12

11:                                               ; preds = %33, %3
  ret void

12:                                               ; preds = %33, %9
  %13 = phi i64 [ 0, %9 ], [ %38, %33 ]
  %14 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %13, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = tail call zeroext i16 @_Z23hb_indic_get_categoriesj(i32 %15) #5
  switch i32 %15, label %20 [
    i32 6042, label %33
    i32 6092, label %17
    i32 6089, label %17
    i32 6090, label %17
    i32 6086, label %18
    i32 6091, label %18
    i32 6093, label %18
    i32 6094, label %18
    i32 6095, label %18
    i32 6096, label %18
    i32 6097, label %18
    i32 6087, label %19
    i32 6088, label %19
    i32 6109, label %19
    i32 6099, label %19
  ]

17:                                               ; preds = %12, %12, %12
  br label %33

18:                                               ; preds = %12, %12, %12, %12, %12, %12, %12
  br label %33

19:                                               ; preds = %12, %12, %12, %12
  br label %33

20:                                               ; preds = %12
  %21 = and i16 %16, 255
  %22 = trunc i16 %16 to i8
  %23 = icmp eq i16 %21, 7
  br i1 %23, label %24, label %33

24:                                               ; preds = %20
  %25 = lshr i16 %16, 8
  %26 = trunc i16 %25 to i8
  %27 = add i8 %26, -3
  %28 = icmp ult i8 %27, 9
  br i1 %28, label %29, label %33

29:                                               ; preds = %24
  %30 = sext i8 %27 to i64
  %31 = getelementptr inbounds [9 x i8], [9 x i8]* @switch.table._ZL17setup_masks_khmerPK18hb_ot_shape_plan_tP11hb_buffer_tP9hb_font_t, i64 0, i64 %30
  %32 = load i8, i8* %31, align 1
  br label %33

33:                                               ; preds = %29, %24, %12, %17, %18, %19, %20
  %34 = phi i8 [ 7, %24 ], [ %22, %20 ], [ 20, %17 ], [ 21, %18 ], [ 22, %19 ], [ 16, %12 ], [ %32, %29 ]
  %35 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %13, i32 4
  %36 = bitcast %union._hb_var_int_t* %35 to [4 x i8]*
  %37 = getelementptr inbounds [4 x i8], [4 x i8]* %36, i64 0, i64 2
  store i8 %34, i8* %37, align 2
  %38 = add nuw nsw i64 %13, 1
  %39 = icmp eq i64 %38, %10
  br i1 %39, label %11, label %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL21setup_syllables_khmerPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t(%struct.hb_ot_shape_plan_t* nocapture readnone, %struct.hb_font_t* nocapture readnone, %struct.hb_buffer_t*) #0 {
  %4 = getelementptr %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 15
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 18
  %7 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %6, align 8
  br label %8

8:                                                ; preds = %616, %3
  %9 = phi i32 [ 0, %3 ], [ %622, %616 ]
  %10 = phi i32 [ 0, %3 ], [ %621, %616 ]
  %11 = phi i32 [ 0, %3 ], [ %612, %616 ]
  %12 = phi i32 [ 0, %3 ], [ %613, %616 ]
  %13 = phi i32 [ 20, %3 ], [ %77, %616 ]
  %14 = phi i32 [ 1, %3 ], [ %614, %616 ]
  %15 = phi i32 [ 0, %3 ], [ %73, %616 ]
  %16 = icmp eq i32 %9, %5
  %17 = sext i32 %13 to i64
  %18 = getelementptr inbounds [41 x i8], [41 x i8]* bitcast (<{ [21 x i8], [20 x i8] }>* @_ZL42_khmer_syllable_machine_from_state_actions to [41 x i8]*), i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = icmp eq i8 %19, 7
  %21 = select i1 %20, i32 %9, i32 %10
  br i1 %16, label %22, label %29

22:                                               ; preds = %8
  %23 = icmp eq i32 %13, 40
  br i1 %23, label %72, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds [41 x i8], [41 x i8]* @_ZL33_khmer_syllable_machine_eof_trans, i64 0, i64 %17
  %26 = load i8, i8* %25, align 1
  %27 = sext i8 %26 to i32
  %28 = add nsw i32 %27, -1
  br label %72

29:                                               ; preds = %8
  %30 = shl nsw i32 %13, 1
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [81 x i8], [81 x i8]* @_ZL34_khmer_syllable_machine_trans_keys, i64 0, i64 %31
  %33 = getelementptr inbounds [41 x i16], [41 x i16]* @_ZL37_khmer_syllable_machine_index_offsets, i64 0, i64 %17
  %34 = load i16, i16* %33, align 2
  %35 = sext i16 %34 to i64
  %36 = getelementptr inbounds [264 x i8], [264 x i8]* @_ZL32_khmer_syllable_machine_indicies, i64 0, i64 %35
  %37 = zext i32 %9 to i64
  %38 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %37, i32 4
  %39 = bitcast %union._hb_var_int_t* %38 to [4 x i8]*
  %40 = getelementptr inbounds [4 x i8], [4 x i8]* %39, i64 0, i64 2
  %41 = load i8, i8* %40, align 2
  %42 = add i8 %41, -1
  %43 = icmp ugt i8 %42, 28
  br i1 %43, label %68, label %44

44:                                               ; preds = %29
  %45 = zext i8 %41 to i64
  %46 = add nsw i64 %45, -1
  %47 = getelementptr inbounds [30 x i8], [30 x i8]* @_ZL34_khmer_syllable_machine_char_class, i64 0, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = sext i8 %48 to i32
  %50 = getelementptr inbounds i8, i8* %32, i64 1
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = icmp sgt i32 %49, %52
  br i1 %53, label %64, label %54

54:                                               ; preds = %44
  %55 = load i8, i8* %32, align 2
  %56 = zext i8 %55 to i32
  %57 = icmp slt i32 %49, %56
  br i1 %57, label %64, label %58

58:                                               ; preds = %54
  %59 = sub nsw i32 %49, %56
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %36, i64 %60
  %62 = load i8, i8* %61, align 1
  %63 = sext i8 %62 to i32
  br label %72

64:                                               ; preds = %54, %44
  %65 = getelementptr inbounds [41 x i8], [41 x i8]* @_ZL38_khmer_syllable_machine_index_defaults, i64 0, i64 %17
  %66 = load i8, i8* %65, align 1
  %67 = sext i8 %66 to i32
  br label %72

68:                                               ; preds = %29
  %69 = getelementptr inbounds [41 x i8], [41 x i8]* @_ZL38_khmer_syllable_machine_index_defaults, i64 0, i64 %17
  %70 = load i8, i8* %69, align 1
  %71 = sext i8 %70 to i32
  br label %72

72:                                               ; preds = %68, %64, %58, %24, %22
  %73 = phi i32 [ %28, %24 ], [ %15, %22 ], [ %63, %58 ], [ %67, %64 ], [ %71, %68 ]
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds [48 x i8], [48 x i8]* @_ZL34_khmer_syllable_machine_cond_targs, i64 0, i64 %74
  %76 = load i8, i8* %75, align 1
  %77 = sext i8 %76 to i32
  %78 = lshr i64 36839924938013, %74
  %79 = and i64 %78, 1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %610, label %81

81:                                               ; preds = %72
  %82 = getelementptr inbounds [48 x i8], [48 x i8]* @_ZL36_khmer_syllable_machine_cond_actions, i64 0, i64 %74
  %83 = load i8, i8* %82, align 1
  %84 = sext i8 %83 to i32
  switch i32 %84, label %610 [
    i32 2, label %85
    i32 8, label %87
    i32 10, label %152
    i32 12, label %216
    i32 11, label %281
    i32 1, label %346
    i32 5, label %410
    i32 3, label %475
    i32 4, label %606
    i32 9, label %608
  ]

85:                                               ; preds = %81
  %86 = add i32 %9, 1
  br label %610

87:                                               ; preds = %81
  %88 = add i32 %9, 1
  %89 = icmp ult i32 %21, %88
  br i1 %89, label %90, label %113

90:                                               ; preds = %87
  %91 = trunc i32 %14 to i8
  %92 = shl i8 %91, 4
  %93 = or i8 %92, 2
  %94 = zext i32 %21 to i64
  %95 = zext i32 %88 to i64
  %96 = sub nsw i64 %95, %94
  %97 = xor i64 %94, -1
  %98 = add nsw i64 %97, %95
  %99 = and i64 %96, 7
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %110, label %101

101:                                              ; preds = %90, %101
  %102 = phi i64 [ %107, %101 ], [ %94, %90 ]
  %103 = phi i64 [ %108, %101 ], [ %99, %90 ]
  %104 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %102, i32 3
  %105 = bitcast %union._hb_var_int_t* %104 to [4 x i8]*
  %106 = getelementptr inbounds [4 x i8], [4 x i8]* %105, i64 0, i64 3
  store i8 %93, i8* %106, align 1
  %107 = add nuw nsw i64 %102, 1
  %108 = add i64 %103, -1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %101, !llvm.loop !3

110:                                              ; preds = %101, %90
  %111 = phi i64 [ %94, %90 ], [ %107, %101 ]
  %112 = icmp ult i64 %98, 7
  br i1 %112, label %113, label %117

113:                                              ; preds = %110, %117, %87
  %114 = add i32 %14, 1
  %115 = icmp eq i32 %114, 16
  %116 = select i1 %115, i32 1, i32 %114, !prof !2
  br label %610

117:                                              ; preds = %110, %117
  %118 = phi i64 [ %150, %117 ], [ %111, %110 ]
  %119 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %118, i32 3
  %120 = bitcast %union._hb_var_int_t* %119 to [4 x i8]*
  %121 = getelementptr inbounds [4 x i8], [4 x i8]* %120, i64 0, i64 3
  store i8 %93, i8* %121, align 1
  %122 = add nuw nsw i64 %118, 1
  %123 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %122, i32 3
  %124 = bitcast %union._hb_var_int_t* %123 to [4 x i8]*
  %125 = getelementptr inbounds [4 x i8], [4 x i8]* %124, i64 0, i64 3
  store i8 %93, i8* %125, align 1
  %126 = add nuw nsw i64 %118, 2
  %127 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %126, i32 3
  %128 = bitcast %union._hb_var_int_t* %127 to [4 x i8]*
  %129 = getelementptr inbounds [4 x i8], [4 x i8]* %128, i64 0, i64 3
  store i8 %93, i8* %129, align 1
  %130 = add nuw nsw i64 %118, 3
  %131 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %130, i32 3
  %132 = bitcast %union._hb_var_int_t* %131 to [4 x i8]*
  %133 = getelementptr inbounds [4 x i8], [4 x i8]* %132, i64 0, i64 3
  store i8 %93, i8* %133, align 1
  %134 = add nuw nsw i64 %118, 4
  %135 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %134, i32 3
  %136 = bitcast %union._hb_var_int_t* %135 to [4 x i8]*
  %137 = getelementptr inbounds [4 x i8], [4 x i8]* %136, i64 0, i64 3
  store i8 %93, i8* %137, align 1
  %138 = add nuw nsw i64 %118, 5
  %139 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %138, i32 3
  %140 = bitcast %union._hb_var_int_t* %139 to [4 x i8]*
  %141 = getelementptr inbounds [4 x i8], [4 x i8]* %140, i64 0, i64 3
  store i8 %93, i8* %141, align 1
  %142 = add nuw nsw i64 %118, 6
  %143 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %142, i32 3
  %144 = bitcast %union._hb_var_int_t* %143 to [4 x i8]*
  %145 = getelementptr inbounds [4 x i8], [4 x i8]* %144, i64 0, i64 3
  store i8 %93, i8* %145, align 1
  %146 = add nuw nsw i64 %118, 7
  %147 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %146, i32 3
  %148 = bitcast %union._hb_var_int_t* %147 to [4 x i8]*
  %149 = getelementptr inbounds [4 x i8], [4 x i8]* %148, i64 0, i64 3
  store i8 %93, i8* %149, align 1
  %150 = add nuw nsw i64 %118, 8
  %151 = icmp eq i64 %150, %95
  br i1 %151, label %113, label %117

152:                                              ; preds = %81
  %153 = add i32 %9, -1
  %154 = icmp ult i32 %21, %9
  br i1 %154, label %155, label %177

155:                                              ; preds = %152
  %156 = trunc i32 %14 to i8
  %157 = shl i8 %156, 4
  %158 = zext i32 %21 to i64
  %159 = zext i32 %9 to i64
  %160 = sub nsw i64 %159, %158
  %161 = xor i64 %158, -1
  %162 = add nsw i64 %161, %159
  %163 = and i64 %160, 7
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %174, label %165

165:                                              ; preds = %155, %165
  %166 = phi i64 [ %171, %165 ], [ %158, %155 ]
  %167 = phi i64 [ %172, %165 ], [ %163, %155 ]
  %168 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %166, i32 3
  %169 = bitcast %union._hb_var_int_t* %168 to [4 x i8]*
  %170 = getelementptr inbounds [4 x i8], [4 x i8]* %169, i64 0, i64 3
  store i8 %157, i8* %170, align 1
  %171 = add nuw nsw i64 %166, 1
  %172 = add i64 %167, -1
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %165, !llvm.loop !5

174:                                              ; preds = %165, %155
  %175 = phi i64 [ %158, %155 ], [ %171, %165 ]
  %176 = icmp ult i64 %162, 7
  br i1 %176, label %177, label %181

177:                                              ; preds = %174, %181, %152
  %178 = add i32 %14, 1
  %179 = icmp eq i32 %178, 16
  %180 = select i1 %179, i32 1, i32 %178, !prof !2
  br label %610

181:                                              ; preds = %174, %181
  %182 = phi i64 [ %214, %181 ], [ %175, %174 ]
  %183 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %182, i32 3
  %184 = bitcast %union._hb_var_int_t* %183 to [4 x i8]*
  %185 = getelementptr inbounds [4 x i8], [4 x i8]* %184, i64 0, i64 3
  store i8 %157, i8* %185, align 1
  %186 = add nuw nsw i64 %182, 1
  %187 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %186, i32 3
  %188 = bitcast %union._hb_var_int_t* %187 to [4 x i8]*
  %189 = getelementptr inbounds [4 x i8], [4 x i8]* %188, i64 0, i64 3
  store i8 %157, i8* %189, align 1
  %190 = add nuw nsw i64 %182, 2
  %191 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %190, i32 3
  %192 = bitcast %union._hb_var_int_t* %191 to [4 x i8]*
  %193 = getelementptr inbounds [4 x i8], [4 x i8]* %192, i64 0, i64 3
  store i8 %157, i8* %193, align 1
  %194 = add nuw nsw i64 %182, 3
  %195 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %194, i32 3
  %196 = bitcast %union._hb_var_int_t* %195 to [4 x i8]*
  %197 = getelementptr inbounds [4 x i8], [4 x i8]* %196, i64 0, i64 3
  store i8 %157, i8* %197, align 1
  %198 = add nuw nsw i64 %182, 4
  %199 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %198, i32 3
  %200 = bitcast %union._hb_var_int_t* %199 to [4 x i8]*
  %201 = getelementptr inbounds [4 x i8], [4 x i8]* %200, i64 0, i64 3
  store i8 %157, i8* %201, align 1
  %202 = add nuw nsw i64 %182, 5
  %203 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %202, i32 3
  %204 = bitcast %union._hb_var_int_t* %203 to [4 x i8]*
  %205 = getelementptr inbounds [4 x i8], [4 x i8]* %204, i64 0, i64 3
  store i8 %157, i8* %205, align 1
  %206 = add nuw nsw i64 %182, 6
  %207 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %206, i32 3
  %208 = bitcast %union._hb_var_int_t* %207 to [4 x i8]*
  %209 = getelementptr inbounds [4 x i8], [4 x i8]* %208, i64 0, i64 3
  store i8 %157, i8* %209, align 1
  %210 = add nuw nsw i64 %182, 7
  %211 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %210, i32 3
  %212 = bitcast %union._hb_var_int_t* %211 to [4 x i8]*
  %213 = getelementptr inbounds [4 x i8], [4 x i8]* %212, i64 0, i64 3
  store i8 %157, i8* %213, align 1
  %214 = add nuw nsw i64 %182, 8
  %215 = icmp eq i64 %214, %159
  br i1 %215, label %177, label %181

216:                                              ; preds = %81
  %217 = add i32 %9, -1
  %218 = icmp ult i32 %21, %9
  br i1 %218, label %219, label %242

219:                                              ; preds = %216
  %220 = trunc i32 %14 to i8
  %221 = shl i8 %220, 4
  %222 = or i8 %221, 1
  %223 = zext i32 %21 to i64
  %224 = zext i32 %9 to i64
  %225 = sub nsw i64 %224, %223
  %226 = xor i64 %223, -1
  %227 = add nsw i64 %226, %224
  %228 = and i64 %225, 7
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %239, label %230

230:                                              ; preds = %219, %230
  %231 = phi i64 [ %236, %230 ], [ %223, %219 ]
  %232 = phi i64 [ %237, %230 ], [ %228, %219 ]
  %233 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %231, i32 3
  %234 = bitcast %union._hb_var_int_t* %233 to [4 x i8]*
  %235 = getelementptr inbounds [4 x i8], [4 x i8]* %234, i64 0, i64 3
  store i8 %222, i8* %235, align 1
  %236 = add nuw nsw i64 %231, 1
  %237 = add i64 %232, -1
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %239, label %230, !llvm.loop !6

239:                                              ; preds = %230, %219
  %240 = phi i64 [ %223, %219 ], [ %236, %230 ]
  %241 = icmp ult i64 %227, 7
  br i1 %241, label %242, label %246

242:                                              ; preds = %239, %246, %216
  %243 = add i32 %14, 1
  %244 = icmp eq i32 %243, 16
  %245 = select i1 %244, i32 1, i32 %243, !prof !2
  br label %610

246:                                              ; preds = %239, %246
  %247 = phi i64 [ %279, %246 ], [ %240, %239 ]
  %248 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %247, i32 3
  %249 = bitcast %union._hb_var_int_t* %248 to [4 x i8]*
  %250 = getelementptr inbounds [4 x i8], [4 x i8]* %249, i64 0, i64 3
  store i8 %222, i8* %250, align 1
  %251 = add nuw nsw i64 %247, 1
  %252 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %251, i32 3
  %253 = bitcast %union._hb_var_int_t* %252 to [4 x i8]*
  %254 = getelementptr inbounds [4 x i8], [4 x i8]* %253, i64 0, i64 3
  store i8 %222, i8* %254, align 1
  %255 = add nuw nsw i64 %247, 2
  %256 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %255, i32 3
  %257 = bitcast %union._hb_var_int_t* %256 to [4 x i8]*
  %258 = getelementptr inbounds [4 x i8], [4 x i8]* %257, i64 0, i64 3
  store i8 %222, i8* %258, align 1
  %259 = add nuw nsw i64 %247, 3
  %260 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %259, i32 3
  %261 = bitcast %union._hb_var_int_t* %260 to [4 x i8]*
  %262 = getelementptr inbounds [4 x i8], [4 x i8]* %261, i64 0, i64 3
  store i8 %222, i8* %262, align 1
  %263 = add nuw nsw i64 %247, 4
  %264 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %263, i32 3
  %265 = bitcast %union._hb_var_int_t* %264 to [4 x i8]*
  %266 = getelementptr inbounds [4 x i8], [4 x i8]* %265, i64 0, i64 3
  store i8 %222, i8* %266, align 1
  %267 = add nuw nsw i64 %247, 5
  %268 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %267, i32 3
  %269 = bitcast %union._hb_var_int_t* %268 to [4 x i8]*
  %270 = getelementptr inbounds [4 x i8], [4 x i8]* %269, i64 0, i64 3
  store i8 %222, i8* %270, align 1
  %271 = add nuw nsw i64 %247, 6
  %272 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %271, i32 3
  %273 = bitcast %union._hb_var_int_t* %272 to [4 x i8]*
  %274 = getelementptr inbounds [4 x i8], [4 x i8]* %273, i64 0, i64 3
  store i8 %222, i8* %274, align 1
  %275 = add nuw nsw i64 %247, 7
  %276 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %275, i32 3
  %277 = bitcast %union._hb_var_int_t* %276 to [4 x i8]*
  %278 = getelementptr inbounds [4 x i8], [4 x i8]* %277, i64 0, i64 3
  store i8 %222, i8* %278, align 1
  %279 = add nuw nsw i64 %247, 8
  %280 = icmp eq i64 %279, %224
  br i1 %280, label %242, label %246

281:                                              ; preds = %81
  %282 = add i32 %9, -1
  %283 = icmp ult i32 %21, %9
  br i1 %283, label %284, label %307

284:                                              ; preds = %281
  %285 = trunc i32 %14 to i8
  %286 = shl i8 %285, 4
  %287 = or i8 %286, 2
  %288 = zext i32 %21 to i64
  %289 = zext i32 %9 to i64
  %290 = sub nsw i64 %289, %288
  %291 = xor i64 %288, -1
  %292 = add nsw i64 %291, %289
  %293 = and i64 %290, 7
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %304, label %295

295:                                              ; preds = %284, %295
  %296 = phi i64 [ %301, %295 ], [ %288, %284 ]
  %297 = phi i64 [ %302, %295 ], [ %293, %284 ]
  %298 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %296, i32 3
  %299 = bitcast %union._hb_var_int_t* %298 to [4 x i8]*
  %300 = getelementptr inbounds [4 x i8], [4 x i8]* %299, i64 0, i64 3
  store i8 %287, i8* %300, align 1
  %301 = add nuw nsw i64 %296, 1
  %302 = add i64 %297, -1
  %303 = icmp eq i64 %302, 0
  br i1 %303, label %304, label %295, !llvm.loop !7

304:                                              ; preds = %295, %284
  %305 = phi i64 [ %288, %284 ], [ %301, %295 ]
  %306 = icmp ult i64 %292, 7
  br i1 %306, label %307, label %311

307:                                              ; preds = %304, %311, %281
  %308 = add i32 %14, 1
  %309 = icmp eq i32 %308, 16
  %310 = select i1 %309, i32 1, i32 %308, !prof !2
  br label %610

311:                                              ; preds = %304, %311
  %312 = phi i64 [ %344, %311 ], [ %305, %304 ]
  %313 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %312, i32 3
  %314 = bitcast %union._hb_var_int_t* %313 to [4 x i8]*
  %315 = getelementptr inbounds [4 x i8], [4 x i8]* %314, i64 0, i64 3
  store i8 %287, i8* %315, align 1
  %316 = add nuw nsw i64 %312, 1
  %317 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %316, i32 3
  %318 = bitcast %union._hb_var_int_t* %317 to [4 x i8]*
  %319 = getelementptr inbounds [4 x i8], [4 x i8]* %318, i64 0, i64 3
  store i8 %287, i8* %319, align 1
  %320 = add nuw nsw i64 %312, 2
  %321 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %320, i32 3
  %322 = bitcast %union._hb_var_int_t* %321 to [4 x i8]*
  %323 = getelementptr inbounds [4 x i8], [4 x i8]* %322, i64 0, i64 3
  store i8 %287, i8* %323, align 1
  %324 = add nuw nsw i64 %312, 3
  %325 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %324, i32 3
  %326 = bitcast %union._hb_var_int_t* %325 to [4 x i8]*
  %327 = getelementptr inbounds [4 x i8], [4 x i8]* %326, i64 0, i64 3
  store i8 %287, i8* %327, align 1
  %328 = add nuw nsw i64 %312, 4
  %329 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %328, i32 3
  %330 = bitcast %union._hb_var_int_t* %329 to [4 x i8]*
  %331 = getelementptr inbounds [4 x i8], [4 x i8]* %330, i64 0, i64 3
  store i8 %287, i8* %331, align 1
  %332 = add nuw nsw i64 %312, 5
  %333 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %332, i32 3
  %334 = bitcast %union._hb_var_int_t* %333 to [4 x i8]*
  %335 = getelementptr inbounds [4 x i8], [4 x i8]* %334, i64 0, i64 3
  store i8 %287, i8* %335, align 1
  %336 = add nuw nsw i64 %312, 6
  %337 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %336, i32 3
  %338 = bitcast %union._hb_var_int_t* %337 to [4 x i8]*
  %339 = getelementptr inbounds [4 x i8], [4 x i8]* %338, i64 0, i64 3
  store i8 %287, i8* %339, align 1
  %340 = add nuw nsw i64 %312, 7
  %341 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %340, i32 3
  %342 = bitcast %union._hb_var_int_t* %341 to [4 x i8]*
  %343 = getelementptr inbounds [4 x i8], [4 x i8]* %342, i64 0, i64 3
  store i8 %287, i8* %343, align 1
  %344 = add nuw nsw i64 %312, 8
  %345 = icmp eq i64 %344, %289
  br i1 %345, label %307, label %311

346:                                              ; preds = %81
  %347 = add i32 %11, -1
  %348 = icmp ult i32 %21, %11
  br i1 %348, label %349, label %371

349:                                              ; preds = %346
  %350 = trunc i32 %14 to i8
  %351 = shl i8 %350, 4
  %352 = zext i32 %21 to i64
  %353 = zext i32 %11 to i64
  %354 = sub nsw i64 %353, %352
  %355 = xor i64 %352, -1
  %356 = add nsw i64 %355, %353
  %357 = and i64 %354, 7
  %358 = icmp eq i64 %357, 0
  br i1 %358, label %368, label %359

359:                                              ; preds = %349, %359
  %360 = phi i64 [ %365, %359 ], [ %352, %349 ]
  %361 = phi i64 [ %366, %359 ], [ %357, %349 ]
  %362 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %360, i32 3
  %363 = bitcast %union._hb_var_int_t* %362 to [4 x i8]*
  %364 = getelementptr inbounds [4 x i8], [4 x i8]* %363, i64 0, i64 3
  store i8 %351, i8* %364, align 1
  %365 = add nuw nsw i64 %360, 1
  %366 = add i64 %361, -1
  %367 = icmp eq i64 %366, 0
  br i1 %367, label %368, label %359, !llvm.loop !8

368:                                              ; preds = %359, %349
  %369 = phi i64 [ %352, %349 ], [ %365, %359 ]
  %370 = icmp ult i64 %356, 7
  br i1 %370, label %371, label %375

371:                                              ; preds = %368, %375, %346
  %372 = add i32 %14, 1
  %373 = icmp eq i32 %372, 16
  %374 = select i1 %373, i32 1, i32 %372, !prof !2
  br label %610

375:                                              ; preds = %368, %375
  %376 = phi i64 [ %408, %375 ], [ %369, %368 ]
  %377 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %376, i32 3
  %378 = bitcast %union._hb_var_int_t* %377 to [4 x i8]*
  %379 = getelementptr inbounds [4 x i8], [4 x i8]* %378, i64 0, i64 3
  store i8 %351, i8* %379, align 1
  %380 = add nuw nsw i64 %376, 1
  %381 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %380, i32 3
  %382 = bitcast %union._hb_var_int_t* %381 to [4 x i8]*
  %383 = getelementptr inbounds [4 x i8], [4 x i8]* %382, i64 0, i64 3
  store i8 %351, i8* %383, align 1
  %384 = add nuw nsw i64 %376, 2
  %385 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %384, i32 3
  %386 = bitcast %union._hb_var_int_t* %385 to [4 x i8]*
  %387 = getelementptr inbounds [4 x i8], [4 x i8]* %386, i64 0, i64 3
  store i8 %351, i8* %387, align 1
  %388 = add nuw nsw i64 %376, 3
  %389 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %388, i32 3
  %390 = bitcast %union._hb_var_int_t* %389 to [4 x i8]*
  %391 = getelementptr inbounds [4 x i8], [4 x i8]* %390, i64 0, i64 3
  store i8 %351, i8* %391, align 1
  %392 = add nuw nsw i64 %376, 4
  %393 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %392, i32 3
  %394 = bitcast %union._hb_var_int_t* %393 to [4 x i8]*
  %395 = getelementptr inbounds [4 x i8], [4 x i8]* %394, i64 0, i64 3
  store i8 %351, i8* %395, align 1
  %396 = add nuw nsw i64 %376, 5
  %397 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %396, i32 3
  %398 = bitcast %union._hb_var_int_t* %397 to [4 x i8]*
  %399 = getelementptr inbounds [4 x i8], [4 x i8]* %398, i64 0, i64 3
  store i8 %351, i8* %399, align 1
  %400 = add nuw nsw i64 %376, 6
  %401 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %400, i32 3
  %402 = bitcast %union._hb_var_int_t* %401 to [4 x i8]*
  %403 = getelementptr inbounds [4 x i8], [4 x i8]* %402, i64 0, i64 3
  store i8 %351, i8* %403, align 1
  %404 = add nuw nsw i64 %376, 7
  %405 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %404, i32 3
  %406 = bitcast %union._hb_var_int_t* %405 to [4 x i8]*
  %407 = getelementptr inbounds [4 x i8], [4 x i8]* %406, i64 0, i64 3
  store i8 %351, i8* %407, align 1
  %408 = add nuw nsw i64 %376, 8
  %409 = icmp eq i64 %408, %353
  br i1 %409, label %371, label %375

410:                                              ; preds = %81
  %411 = add i32 %11, -1
  %412 = icmp ult i32 %21, %11
  br i1 %412, label %413, label %436

413:                                              ; preds = %410
  %414 = trunc i32 %14 to i8
  %415 = shl i8 %414, 4
  %416 = or i8 %415, 1
  %417 = zext i32 %21 to i64
  %418 = zext i32 %11 to i64
  %419 = sub nsw i64 %418, %417
  %420 = xor i64 %417, -1
  %421 = add nsw i64 %420, %418
  %422 = and i64 %419, 7
  %423 = icmp eq i64 %422, 0
  br i1 %423, label %433, label %424

424:                                              ; preds = %413, %424
  %425 = phi i64 [ %430, %424 ], [ %417, %413 ]
  %426 = phi i64 [ %431, %424 ], [ %422, %413 ]
  %427 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %425, i32 3
  %428 = bitcast %union._hb_var_int_t* %427 to [4 x i8]*
  %429 = getelementptr inbounds [4 x i8], [4 x i8]* %428, i64 0, i64 3
  store i8 %416, i8* %429, align 1
  %430 = add nuw nsw i64 %425, 1
  %431 = add i64 %426, -1
  %432 = icmp eq i64 %431, 0
  br i1 %432, label %433, label %424, !llvm.loop !9

433:                                              ; preds = %424, %413
  %434 = phi i64 [ %417, %413 ], [ %430, %424 ]
  %435 = icmp ult i64 %421, 7
  br i1 %435, label %436, label %440

436:                                              ; preds = %433, %440, %410
  %437 = add i32 %14, 1
  %438 = icmp eq i32 %437, 16
  %439 = select i1 %438, i32 1, i32 %437, !prof !2
  br label %610

440:                                              ; preds = %433, %440
  %441 = phi i64 [ %473, %440 ], [ %434, %433 ]
  %442 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %441, i32 3
  %443 = bitcast %union._hb_var_int_t* %442 to [4 x i8]*
  %444 = getelementptr inbounds [4 x i8], [4 x i8]* %443, i64 0, i64 3
  store i8 %416, i8* %444, align 1
  %445 = add nuw nsw i64 %441, 1
  %446 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %445, i32 3
  %447 = bitcast %union._hb_var_int_t* %446 to [4 x i8]*
  %448 = getelementptr inbounds [4 x i8], [4 x i8]* %447, i64 0, i64 3
  store i8 %416, i8* %448, align 1
  %449 = add nuw nsw i64 %441, 2
  %450 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %449, i32 3
  %451 = bitcast %union._hb_var_int_t* %450 to [4 x i8]*
  %452 = getelementptr inbounds [4 x i8], [4 x i8]* %451, i64 0, i64 3
  store i8 %416, i8* %452, align 1
  %453 = add nuw nsw i64 %441, 3
  %454 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %453, i32 3
  %455 = bitcast %union._hb_var_int_t* %454 to [4 x i8]*
  %456 = getelementptr inbounds [4 x i8], [4 x i8]* %455, i64 0, i64 3
  store i8 %416, i8* %456, align 1
  %457 = add nuw nsw i64 %441, 4
  %458 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %457, i32 3
  %459 = bitcast %union._hb_var_int_t* %458 to [4 x i8]*
  %460 = getelementptr inbounds [4 x i8], [4 x i8]* %459, i64 0, i64 3
  store i8 %416, i8* %460, align 1
  %461 = add nuw nsw i64 %441, 5
  %462 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %461, i32 3
  %463 = bitcast %union._hb_var_int_t* %462 to [4 x i8]*
  %464 = getelementptr inbounds [4 x i8], [4 x i8]* %463, i64 0, i64 3
  store i8 %416, i8* %464, align 1
  %465 = add nuw nsw i64 %441, 6
  %466 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %465, i32 3
  %467 = bitcast %union._hb_var_int_t* %466 to [4 x i8]*
  %468 = getelementptr inbounds [4 x i8], [4 x i8]* %467, i64 0, i64 3
  store i8 %416, i8* %468, align 1
  %469 = add nuw nsw i64 %441, 7
  %470 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %469, i32 3
  %471 = bitcast %union._hb_var_int_t* %470 to [4 x i8]*
  %472 = getelementptr inbounds [4 x i8], [4 x i8]* %471, i64 0, i64 3
  store i8 %416, i8* %472, align 1
  %473 = add nuw nsw i64 %441, 8
  %474 = icmp eq i64 %473, %418
  br i1 %474, label %436, label %440

475:                                              ; preds = %81
  switch i32 %12, label %610 [
    i32 2, label %476
    i32 3, label %541
  ]

476:                                              ; preds = %475
  %477 = add i32 %11, -1
  %478 = icmp ult i32 %21, %11
  br i1 %478, label %479, label %502

479:                                              ; preds = %476
  %480 = trunc i32 %14 to i8
  %481 = shl i8 %480, 4
  %482 = or i8 %481, 1
  %483 = zext i32 %21 to i64
  %484 = zext i32 %11 to i64
  %485 = sub nsw i64 %484, %483
  %486 = xor i64 %483, -1
  %487 = add nsw i64 %486, %484
  %488 = and i64 %485, 7
  %489 = icmp eq i64 %488, 0
  br i1 %489, label %499, label %490

490:                                              ; preds = %479, %490
  %491 = phi i64 [ %496, %490 ], [ %483, %479 ]
  %492 = phi i64 [ %497, %490 ], [ %488, %479 ]
  %493 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %491, i32 3
  %494 = bitcast %union._hb_var_int_t* %493 to [4 x i8]*
  %495 = getelementptr inbounds [4 x i8], [4 x i8]* %494, i64 0, i64 3
  store i8 %482, i8* %495, align 1
  %496 = add nuw nsw i64 %491, 1
  %497 = add i64 %492, -1
  %498 = icmp eq i64 %497, 0
  br i1 %498, label %499, label %490, !llvm.loop !10

499:                                              ; preds = %490, %479
  %500 = phi i64 [ %483, %479 ], [ %496, %490 ]
  %501 = icmp ult i64 %487, 7
  br i1 %501, label %502, label %506

502:                                              ; preds = %499, %506, %476
  %503 = add i32 %14, 1
  %504 = icmp eq i32 %503, 16
  %505 = select i1 %504, i32 1, i32 %503, !prof !2
  br label %610

506:                                              ; preds = %499, %506
  %507 = phi i64 [ %539, %506 ], [ %500, %499 ]
  %508 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %507, i32 3
  %509 = bitcast %union._hb_var_int_t* %508 to [4 x i8]*
  %510 = getelementptr inbounds [4 x i8], [4 x i8]* %509, i64 0, i64 3
  store i8 %482, i8* %510, align 1
  %511 = add nuw nsw i64 %507, 1
  %512 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %511, i32 3
  %513 = bitcast %union._hb_var_int_t* %512 to [4 x i8]*
  %514 = getelementptr inbounds [4 x i8], [4 x i8]* %513, i64 0, i64 3
  store i8 %482, i8* %514, align 1
  %515 = add nuw nsw i64 %507, 2
  %516 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %515, i32 3
  %517 = bitcast %union._hb_var_int_t* %516 to [4 x i8]*
  %518 = getelementptr inbounds [4 x i8], [4 x i8]* %517, i64 0, i64 3
  store i8 %482, i8* %518, align 1
  %519 = add nuw nsw i64 %507, 3
  %520 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %519, i32 3
  %521 = bitcast %union._hb_var_int_t* %520 to [4 x i8]*
  %522 = getelementptr inbounds [4 x i8], [4 x i8]* %521, i64 0, i64 3
  store i8 %482, i8* %522, align 1
  %523 = add nuw nsw i64 %507, 4
  %524 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %523, i32 3
  %525 = bitcast %union._hb_var_int_t* %524 to [4 x i8]*
  %526 = getelementptr inbounds [4 x i8], [4 x i8]* %525, i64 0, i64 3
  store i8 %482, i8* %526, align 1
  %527 = add nuw nsw i64 %507, 5
  %528 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %527, i32 3
  %529 = bitcast %union._hb_var_int_t* %528 to [4 x i8]*
  %530 = getelementptr inbounds [4 x i8], [4 x i8]* %529, i64 0, i64 3
  store i8 %482, i8* %530, align 1
  %531 = add nuw nsw i64 %507, 6
  %532 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %531, i32 3
  %533 = bitcast %union._hb_var_int_t* %532 to [4 x i8]*
  %534 = getelementptr inbounds [4 x i8], [4 x i8]* %533, i64 0, i64 3
  store i8 %482, i8* %534, align 1
  %535 = add nuw nsw i64 %507, 7
  %536 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %535, i32 3
  %537 = bitcast %union._hb_var_int_t* %536 to [4 x i8]*
  %538 = getelementptr inbounds [4 x i8], [4 x i8]* %537, i64 0, i64 3
  store i8 %482, i8* %538, align 1
  %539 = add nuw nsw i64 %507, 8
  %540 = icmp eq i64 %539, %484
  br i1 %540, label %502, label %506

541:                                              ; preds = %475
  %542 = add i32 %11, -1
  %543 = icmp ult i32 %21, %11
  br i1 %543, label %544, label %567

544:                                              ; preds = %541
  %545 = trunc i32 %14 to i8
  %546 = shl i8 %545, 4
  %547 = or i8 %546, 2
  %548 = zext i32 %21 to i64
  %549 = zext i32 %11 to i64
  %550 = sub nsw i64 %549, %548
  %551 = xor i64 %548, -1
  %552 = add nsw i64 %551, %549
  %553 = and i64 %550, 7
  %554 = icmp eq i64 %553, 0
  br i1 %554, label %564, label %555

555:                                              ; preds = %544, %555
  %556 = phi i64 [ %561, %555 ], [ %548, %544 ]
  %557 = phi i64 [ %562, %555 ], [ %553, %544 ]
  %558 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %556, i32 3
  %559 = bitcast %union._hb_var_int_t* %558 to [4 x i8]*
  %560 = getelementptr inbounds [4 x i8], [4 x i8]* %559, i64 0, i64 3
  store i8 %547, i8* %560, align 1
  %561 = add nuw nsw i64 %556, 1
  %562 = add i64 %557, -1
  %563 = icmp eq i64 %562, 0
  br i1 %563, label %564, label %555, !llvm.loop !11

564:                                              ; preds = %555, %544
  %565 = phi i64 [ %548, %544 ], [ %561, %555 ]
  %566 = icmp ult i64 %552, 7
  br i1 %566, label %567, label %571

567:                                              ; preds = %564, %571, %541
  %568 = add i32 %14, 1
  %569 = icmp eq i32 %568, 16
  %570 = select i1 %569, i32 1, i32 %568, !prof !2
  br label %610

571:                                              ; preds = %564, %571
  %572 = phi i64 [ %604, %571 ], [ %565, %564 ]
  %573 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %572, i32 3
  %574 = bitcast %union._hb_var_int_t* %573 to [4 x i8]*
  %575 = getelementptr inbounds [4 x i8], [4 x i8]* %574, i64 0, i64 3
  store i8 %547, i8* %575, align 1
  %576 = add nuw nsw i64 %572, 1
  %577 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %576, i32 3
  %578 = bitcast %union._hb_var_int_t* %577 to [4 x i8]*
  %579 = getelementptr inbounds [4 x i8], [4 x i8]* %578, i64 0, i64 3
  store i8 %547, i8* %579, align 1
  %580 = add nuw nsw i64 %572, 2
  %581 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %580, i32 3
  %582 = bitcast %union._hb_var_int_t* %581 to [4 x i8]*
  %583 = getelementptr inbounds [4 x i8], [4 x i8]* %582, i64 0, i64 3
  store i8 %547, i8* %583, align 1
  %584 = add nuw nsw i64 %572, 3
  %585 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %584, i32 3
  %586 = bitcast %union._hb_var_int_t* %585 to [4 x i8]*
  %587 = getelementptr inbounds [4 x i8], [4 x i8]* %586, i64 0, i64 3
  store i8 %547, i8* %587, align 1
  %588 = add nuw nsw i64 %572, 4
  %589 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %588, i32 3
  %590 = bitcast %union._hb_var_int_t* %589 to [4 x i8]*
  %591 = getelementptr inbounds [4 x i8], [4 x i8]* %590, i64 0, i64 3
  store i8 %547, i8* %591, align 1
  %592 = add nuw nsw i64 %572, 5
  %593 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %592, i32 3
  %594 = bitcast %union._hb_var_int_t* %593 to [4 x i8]*
  %595 = getelementptr inbounds [4 x i8], [4 x i8]* %594, i64 0, i64 3
  store i8 %547, i8* %595, align 1
  %596 = add nuw nsw i64 %572, 6
  %597 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %596, i32 3
  %598 = bitcast %union._hb_var_int_t* %597 to [4 x i8]*
  %599 = getelementptr inbounds [4 x i8], [4 x i8]* %598, i64 0, i64 3
  store i8 %547, i8* %599, align 1
  %600 = add nuw nsw i64 %572, 7
  %601 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %600, i32 3
  %602 = bitcast %union._hb_var_int_t* %601 to [4 x i8]*
  %603 = getelementptr inbounds [4 x i8], [4 x i8]* %602, i64 0, i64 3
  store i8 %547, i8* %603, align 1
  %604 = add nuw nsw i64 %572, 8
  %605 = icmp eq i64 %604, %549
  br i1 %605, label %567, label %571

606:                                              ; preds = %81
  %607 = add i32 %9, 1
  br label %610

608:                                              ; preds = %81
  %609 = add i32 %9, 1
  br label %610

610:                                              ; preds = %608, %606, %567, %502, %475, %436, %371, %307, %242, %177, %113, %85, %81, %72
  %611 = phi i32 [ %9, %81 ], [ %9, %608 ], [ %9, %606 ], [ %9, %475 ], [ %542, %567 ], [ %477, %502 ], [ %411, %436 ], [ %347, %371 ], [ %282, %307 ], [ %217, %242 ], [ %153, %177 ], [ %9, %113 ], [ %9, %85 ], [ %9, %72 ]
  %612 = phi i32 [ %11, %81 ], [ %609, %608 ], [ %607, %606 ], [ %11, %475 ], [ %11, %567 ], [ %11, %502 ], [ %11, %436 ], [ %11, %371 ], [ %9, %307 ], [ %9, %242 ], [ %9, %177 ], [ %88, %113 ], [ %86, %85 ], [ %11, %72 ]
  %613 = phi i32 [ %12, %81 ], [ 3, %608 ], [ 2, %606 ], [ %12, %475 ], [ 3, %567 ], [ 2, %502 ], [ %12, %436 ], [ %12, %371 ], [ %12, %307 ], [ %12, %242 ], [ %12, %177 ], [ %12, %113 ], [ %12, %85 ], [ %12, %72 ]
  %614 = phi i32 [ %14, %81 ], [ %14, %608 ], [ %14, %606 ], [ %14, %475 ], [ %570, %567 ], [ %505, %502 ], [ %439, %436 ], [ %374, %371 ], [ %310, %307 ], [ %245, %242 ], [ %180, %177 ], [ %116, %113 ], [ %14, %85 ], [ %14, %72 ]
  %615 = icmp eq i32 %611, %5
  br i1 %615, label %623, label %616

616:                                              ; preds = %610
  %617 = sext i8 %76 to i64
  %618 = getelementptr inbounds [41 x i8], [41 x i8]* bitcast (<{ [21 x i8], [20 x i8] }>* @_ZL40_khmer_syllable_machine_to_state_actions to [41 x i8]*), i64 0, i64 %617
  %619 = load i8, i8* %618, align 1
  %620 = icmp eq i8 %619, 6
  %621 = select i1 %620, i32 0, i32 %21
  %622 = add i32 %611, 1
  br label %8

623:                                              ; preds = %610
  %624 = load i32, i32* %4, align 8
  %625 = icmp eq i32 %624, 0
  br i1 %625, label %647, label %626

626:                                              ; preds = %623
  %627 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %6, align 8
  %628 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %627, i64 0, i32 3
  %629 = bitcast %union._hb_var_int_t* %628 to [4 x i8]*
  %630 = getelementptr inbounds [4 x i8], [4 x i8]* %629, i64 0, i64 3
  %631 = load i8, i8* %630, align 1
  %632 = add i32 %624, -1
  %633 = zext i32 %632 to i64
  br label %634

634:                                              ; preds = %638, %626
  %635 = phi i64 [ %636, %638 ], [ 0, %626 ]
  %636 = add nuw nsw i64 %635, 1
  %637 = icmp eq i64 %635, %633
  br i1 %637, label %644, label %638

638:                                              ; preds = %634
  %639 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %627, i64 %636, i32 3
  %640 = bitcast %union._hb_var_int_t* %639 to [4 x i8]*
  %641 = getelementptr inbounds [4 x i8], [4 x i8]* %640, i64 0, i64 3
  %642 = load i8, i8* %641, align 1
  %643 = icmp eq i8 %631, %642
  br i1 %643, label %634, label %644

644:                                              ; preds = %638, %634
  br i1 %625, label %647, label %645

645:                                              ; preds = %644
  %646 = trunc i64 %636 to i32
  br label %648

647:                                              ; preds = %675, %623, %644
  ret void

648:                                              ; preds = %645, %675
  %649 = phi i32 [ %657, %675 ], [ %624, %645 ]
  %650 = phi i32 [ %666, %675 ], [ %646, %645 ]
  %651 = phi i32 [ %650, %675 ], [ 0, %645 ]
  %652 = sub i32 %650, %651
  %653 = icmp ult i32 %652, 2
  br i1 %653, label %656, label %654

654:                                              ; preds = %648
  tail call void @_ZN11hb_buffer_t20unsafe_to_break_implEjj(%struct.hb_buffer_t* %2, i32 %651, i32 %650) #5
  %655 = load i32, i32* %4, align 8
  br label %656

656:                                              ; preds = %648, %654
  %657 = phi i32 [ %649, %648 ], [ %655, %654 ]
  %658 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %6, align 8
  %659 = zext i32 %650 to i64
  %660 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %658, i64 %659, i32 3
  %661 = bitcast %union._hb_var_int_t* %660 to [4 x i8]*
  %662 = getelementptr inbounds [4 x i8], [4 x i8]* %661, i64 0, i64 3
  %663 = load i8, i8* %662, align 1
  br label %664

664:                                              ; preds = %668, %656
  %665 = phi i32 [ %650, %656 ], [ %666, %668 ]
  %666 = add i32 %665, 1
  %667 = icmp ult i32 %666, %657
  br i1 %667, label %668, label %675

668:                                              ; preds = %664
  %669 = zext i32 %666 to i64
  %670 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %658, i64 %669, i32 3
  %671 = bitcast %union._hb_var_int_t* %670 to [4 x i8]*
  %672 = getelementptr inbounds [4 x i8], [4 x i8]* %671, i64 0, i64 3
  %673 = load i8, i8* %672, align 1
  %674 = icmp eq i8 %663, %673
  br i1 %674, label %664, label %675

675:                                              ; preds = %664, %668
  %676 = icmp ult i32 %650, %624
  br i1 %676, label %648, label %647
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL13reorder_khmerPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t(%struct.hb_ot_shape_plan_t* nocapture readonly, %struct.hb_font_t*, %struct.hb_buffer_t*) #0 {
  %4 = tail call zeroext i1 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, ...) @_ZN11hb_buffer_t7messageEP9hb_font_tPKcz(%struct.hb_buffer_t* %2, %struct.hb_font_t* %1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0))
  br i1 %4, label %5, label %264

5:                                                ; preds = %3
  tail call void @_Z33hb_syllabic_insert_dotted_circlesP9hb_font_tP11hb_buffer_tjji(%struct.hb_font_t* %1, %struct.hb_buffer_t* %2, i32 1, i32 12, i32 15) #5
  %6 = getelementptr %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 15
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %39, label %9

9:                                                ; preds = %5
  %10 = getelementptr %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 18
  %11 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %10, align 8
  %12 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %11, i64 0, i32 3
  %13 = bitcast %union._hb_var_int_t* %12 to [4 x i8]*
  %14 = getelementptr inbounds [4 x i8], [4 x i8]* %13, i64 0, i64 3
  %15 = load i8, i8* %14, align 1
  %16 = add i32 %7, -1
  %17 = zext i32 %16 to i64
  br label %18

18:                                               ; preds = %22, %9
  %19 = phi i64 [ %20, %22 ], [ 0, %9 ]
  %20 = add nuw nsw i64 %19, 1
  %21 = icmp eq i64 %19, %17
  br i1 %21, label %28, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %11, i64 %20, i32 3
  %24 = bitcast %union._hb_var_int_t* %23 to [4 x i8]*
  %25 = getelementptr inbounds [4 x i8], [4 x i8]* %24, i64 0, i64 3
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %15, %26
  br i1 %27, label %18, label %28

28:                                               ; preds = %22, %18
  br i1 %8, label %39, label %29

29:                                               ; preds = %28
  %30 = trunc i64 %20 to i32
  %31 = getelementptr %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 18
  %32 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 4
  %33 = bitcast i8** %32 to %struct.khmer_shape_plan_t**
  %34 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %31, align 8
  %35 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %34, i64 0, i32 3
  %36 = bitcast %union._hb_var_int_t* %35 to [4 x i8]*
  %37 = getelementptr inbounds [4 x i8], [4 x i8]* %36, i64 0, i64 3
  %38 = load i8, i8* %37, align 1
  br label %41

39:                                               ; preds = %262, %5, %28
  %40 = tail call zeroext i1 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, ...) @_ZN11hb_buffer_t7messageEP9hb_font_tPKcz(%struct.hb_buffer_t* %2, %struct.hb_font_t* %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0))
  br label %264

41:                                               ; preds = %29, %262
  %42 = phi %struct.hb_glyph_info_t* [ %34, %29 ], [ %244, %262 ]
  %43 = phi i32 [ %7, %29 ], [ %245, %262 ]
  %44 = phi i8 [ %38, %29 ], [ %250, %262 ]
  %45 = phi i32 [ %30, %29 ], [ %253, %262 ]
  %46 = phi i32 [ 0, %29 ], [ %45, %262 ]
  %47 = zext i32 %46 to i64
  %48 = and i8 %44, 14
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %243

50:                                               ; preds = %41
  %51 = load %struct.khmer_shape_plan_t*, %struct.khmer_shape_plan_t** %33, align 8
  %52 = getelementptr inbounds %struct.khmer_shape_plan_t, %struct.khmer_shape_plan_t* %51, i64 0, i32 0, i64 1
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %struct.khmer_shape_plan_t, %struct.khmer_shape_plan_t* %51, i64 0, i32 0, i64 2
  %55 = load i32, i32* %54, align 4
  %56 = or i32 %55, %53
  %57 = getelementptr inbounds %struct.khmer_shape_plan_t, %struct.khmer_shape_plan_t* %51, i64 0, i32 0, i64 3
  %58 = load i32, i32* %57, align 4
  %59 = or i32 %56, %58
  %60 = add nuw i32 %46, 1
  %61 = icmp ult i32 %60, %45
  br i1 %61, label %62, label %243

62:                                               ; preds = %50
  %63 = zext i32 %60 to i64
  %64 = xor i32 %46, 3
  %65 = add i32 %45, %64
  %66 = add i32 %45, -2
  %67 = sub i32 %66, %46
  %68 = and i32 %65, 3
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %79, label %70

70:                                               ; preds = %62, %70
  %71 = phi i64 [ %76, %70 ], [ %63, %62 ]
  %72 = phi i32 [ %77, %70 ], [ %68, %62 ]
  %73 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %42, i64 %71, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = or i32 %59, %74
  store i32 %75, i32* %73, align 4
  %76 = add nuw nsw i64 %71, 1
  %77 = add i32 %72, -1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %70, !llvm.loop !12

79:                                               ; preds = %70, %62
  %80 = phi i64 [ %63, %62 ], [ %76, %70 ]
  %81 = icmp ult i32 %67, 3
  br i1 %81, label %82, label %104

82:                                               ; preds = %104, %79
  %83 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %42, i64 %63
  %84 = bitcast %struct.hb_glyph_info_t* %83 to i8*
  %85 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %42, i64 %47
  %86 = bitcast %struct.hb_glyph_info_t* %85 to i8*
  %87 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %42, i64 %47, i32 4, i32 0
  %88 = getelementptr inbounds %struct.khmer_shape_plan_t, %struct.khmer_shape_plan_t* %51, i64 0, i32 0, i64 0
  %89 = add i32 %46, 2
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %42, i64 %90
  %92 = bitcast %struct.hb_glyph_info_t* %91 to i8*
  %93 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %42, i64 %63, i32 0
  %94 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %42, i64 %63, i32 4, i32 0
  %95 = getelementptr inbounds %struct.khmer_shape_plan_t, %struct.khmer_shape_plan_t* %51, i64 0, i32 0, i64 4
  %96 = add i32 %46, 3
  %97 = zext i32 %45 to i64
  %98 = sub i32 %45, %46
  %99 = add i32 %45, -5
  %100 = sub i32 %99, %46
  %101 = bitcast %struct.hb_glyph_info_t* %85 to <4 x i32>*
  %102 = bitcast %struct.hb_glyph_info_t* %85 to <4 x i32>*
  %103 = bitcast i32* %93 to <4 x i32>*
  br label %124

104:                                              ; preds = %79, %104
  %105 = phi i64 [ %121, %104 ], [ %80, %79 ]
  %106 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %42, i64 %105, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = or i32 %59, %107
  store i32 %108, i32* %106, align 4
  %109 = add nuw nsw i64 %105, 1
  %110 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %42, i64 %109, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = or i32 %59, %111
  store i32 %112, i32* %110, align 4
  %113 = add nuw nsw i64 %105, 2
  %114 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %42, i64 %113, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = or i32 %59, %115
  store i32 %116, i32* %114, align 4
  %117 = add nuw nsw i64 %105, 3
  %118 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %42, i64 %117, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = or i32 %59, %119
  store i32 %120, i32* %118, align 4
  %121 = add nuw nsw i64 %105, 4
  %122 = trunc i64 %121 to i32
  %123 = icmp eq i32 %45, %122
  br i1 %123, label %82, label %104

124:                                              ; preds = %233, %82
  %125 = phi i32 [ %239, %233 ], [ 0, %82 ]
  %126 = phi i64 [ %234, %233 ], [ %63, %82 ]
  %127 = phi i32 [ %237, %233 ], [ %96, %82 ]
  %128 = phi i32 [ %235, %233 ], [ 0, %82 ]
  %129 = phi i32 [ %236, %233 ], [ %60, %82 ]
  %130 = sub i32 %98, %125
  %131 = zext i32 %127 to i64
  %132 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %42, i64 %126
  %133 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %42, i64 %126, i32 4
  %134 = bitcast %union._hb_var_int_t* %133 to [4 x i8]*
  %135 = getelementptr inbounds [4 x i8], [4 x i8]* %134, i64 0, i64 2
  %136 = load i8, i8* %135, align 2
  %137 = icmp eq i8 %136, 14
  %138 = icmp ult i32 %128, 3
  %139 = and i1 %138, %137
  br i1 %139, label %140, label %216

140:                                              ; preds = %124
  %141 = add nuw nsw i64 %126, 1
  %142 = icmp ult i64 %141, %97
  br i1 %142, label %143, label %233

143:                                              ; preds = %140
  %144 = add nuw nsw i32 %128, 1
  %145 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %42, i64 %141, i32 4
  %146 = bitcast %union._hb_var_int_t* %145 to [4 x i8]*
  %147 = getelementptr inbounds [4 x i8], [4 x i8]* %146, i64 0, i64 2
  %148 = load i8, i8* %147, align 2
  %149 = icmp eq i8 %148, 16
  br i1 %149, label %150, label %233

150:                                              ; preds = %143
  %151 = load i32, i32* %88, align 4
  %152 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %42, i64 %126, i32 1
  %153 = load i32, i32* %152, align 4
  %154 = or i32 %153, %151
  store i32 %154, i32* %152, align 4
  %155 = load i32, i32* %88, align 4
  %156 = add i32 %129, 1
  %157 = zext i32 %156 to i64
  %158 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %42, i64 %157, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = or i32 %159, %155
  store i32 %160, i32* %158, align 4
  %161 = trunc i64 %126 to i32
  %162 = add i32 %161, 2
  %163 = sub i32 %162, %46
  %164 = icmp ult i32 %163, 2
  br i1 %164, label %166, label %165

165:                                              ; preds = %150
  tail call void @_ZN11hb_buffer_t19merge_clusters_implEjj(%struct.hb_buffer_t* %2, i32 %46, i32 %162) #5
  br label %166

166:                                              ; preds = %165, %150
  %167 = bitcast %struct.hb_glyph_info_t* %132 to <4 x i32>*
  %168 = load <4 x i32>, <4 x i32>* %167, align 4
  %169 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %42, i64 %126, i32 4, i32 0
  %170 = load i32, i32* %169, align 4
  %171 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %42, i64 %141, i32 0
  %172 = bitcast i32* %171 to <4 x i32>*
  %173 = load <4 x i32>, <4 x i32>* %172, align 4
  %174 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %42, i64 %141, i32 4, i32 0
  %175 = load i32, i32* %174, align 4
  %176 = sub i32 %161, %46
  %177 = zext i32 %176 to i64
  %178 = mul nuw nsw i64 %177, 20
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %92, i8* align 4 %86, i64 %178, i1 false) #5
  store <4 x i32> %168, <4 x i32>* %102, align 4
  store i32 %170, i32* %87, align 4
  store <4 x i32> %173, <4 x i32>* %103, align 4
  store i32 %175, i32* %94, align 4
  %179 = load i32, i32* %95, align 4
  %180 = icmp ne i32 %179, 0
  %181 = icmp ult i32 %162, %45
  %182 = and i1 %181, %180
  br i1 %182, label %183, label %233

183:                                              ; preds = %166
  %184 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %42, i64 %131, i32 1
  %185 = load i32, i32* %184, align 4
  %186 = or i32 %185, %179
  store i32 %186, i32* %184, align 4
  %187 = add nuw nsw i64 %131, 1
  %188 = trunc i64 %187 to i32
  %189 = icmp eq i32 %45, %188
  br i1 %189, label %233, label %190

190:                                              ; preds = %183
  %191 = and i32 %130, 1
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %199, label %193

193:                                              ; preds = %190
  %194 = load i32, i32* %95, align 4
  %195 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %42, i64 %187, i32 1
  %196 = load i32, i32* %195, align 4
  %197 = or i32 %196, %194
  store i32 %197, i32* %195, align 4
  %198 = add nuw nsw i64 %131, 2
  br label %199

199:                                              ; preds = %193, %190
  %200 = phi i64 [ %198, %193 ], [ %187, %190 ]
  %201 = icmp eq i32 %100, %125
  br i1 %201, label %233, label %202

202:                                              ; preds = %199, %202
  %203 = phi i64 [ %213, %202 ], [ %200, %199 ]
  %204 = load i32, i32* %95, align 4
  %205 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %42, i64 %203, i32 1
  %206 = load i32, i32* %205, align 4
  %207 = or i32 %206, %204
  store i32 %207, i32* %205, align 4
  %208 = add nuw nsw i64 %203, 1
  %209 = load i32, i32* %95, align 4
  %210 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %42, i64 %208, i32 1
  %211 = load i32, i32* %210, align 4
  %212 = or i32 %211, %209
  store i32 %212, i32* %210, align 4
  %213 = add nuw nsw i64 %203, 2
  %214 = trunc i64 %213 to i32
  %215 = icmp eq i32 %45, %214
  br i1 %215, label %233, label %202

216:                                              ; preds = %124
  %217 = icmp eq i8 %136, 28
  %218 = add nuw nsw i64 %126, 1
  br i1 %217, label %219, label %233

219:                                              ; preds = %216
  %220 = trunc i64 %218 to i32
  %221 = sub i32 %220, %46
  %222 = icmp ult i32 %221, 2
  br i1 %222, label %224, label %223

223:                                              ; preds = %219
  tail call void @_ZN11hb_buffer_t19merge_clusters_implEjj(%struct.hb_buffer_t* %2, i32 %46, i32 %220) #5
  br label %224

224:                                              ; preds = %223, %219
  %225 = bitcast %struct.hb_glyph_info_t* %132 to <4 x i32>*
  %226 = load <4 x i32>, <4 x i32>* %225, align 4
  %227 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %42, i64 %126, i32 4, i32 0
  %228 = load i32, i32* %227, align 4
  %229 = trunc i64 %126 to i32
  %230 = sub i32 %229, %46
  %231 = zext i32 %230 to i64
  %232 = mul nuw nsw i64 %231, 20
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %84, i8* align 4 %86, i64 %232, i1 false) #5
  store <4 x i32> %226, <4 x i32>* %101, align 4
  store i32 %228, i32* %87, align 4
  br label %233

233:                                              ; preds = %199, %202, %224, %216, %183, %166, %143, %140
  %234 = phi i64 [ %141, %166 ], [ %141, %140 ], [ %141, %143 ], [ %218, %224 ], [ %218, %216 ], [ %141, %183 ], [ %141, %202 ], [ %141, %199 ]
  %235 = phi i32 [ 2, %166 ], [ %128, %140 ], [ %144, %143 ], [ %128, %224 ], [ %128, %216 ], [ 2, %183 ], [ 2, %202 ], [ 2, %199 ]
  %236 = add i32 %129, 1
  %237 = add i32 %127, 1
  %238 = icmp eq i32 %236, %45
  %239 = add i32 %125, 1
  br i1 %238, label %240, label %124

240:                                              ; preds = %233
  %241 = load i32, i32* %6, align 8
  %242 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %31, align 8
  br label %243

243:                                              ; preds = %240, %41, %50
  %244 = phi %struct.hb_glyph_info_t* [ %242, %240 ], [ %42, %41 ], [ %42, %50 ]
  %245 = phi i32 [ %241, %240 ], [ %43, %41 ], [ %43, %50 ]
  %246 = zext i32 %45 to i64
  %247 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %244, i64 %246, i32 3
  %248 = bitcast %union._hb_var_int_t* %247 to [4 x i8]*
  %249 = getelementptr inbounds [4 x i8], [4 x i8]* %248, i64 0, i64 3
  %250 = load i8, i8* %249, align 1
  br label %251

251:                                              ; preds = %255, %243
  %252 = phi i32 [ %45, %243 ], [ %253, %255 ]
  %253 = add i32 %252, 1
  %254 = icmp ult i32 %253, %245
  br i1 %254, label %255, label %262

255:                                              ; preds = %251
  %256 = zext i32 %253 to i64
  %257 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %244, i64 %256, i32 3
  %258 = bitcast %union._hb_var_int_t* %257 to [4 x i8]*
  %259 = getelementptr inbounds [4 x i8], [4 x i8]* %258, i64 0, i64 3
  %260 = load i8, i8* %259, align 1
  %261 = icmp eq i8 %250, %260
  br i1 %261, label %251, label %262

262:                                              ; preds = %251, %255
  %263 = icmp ult i32 %45, %7
  br i1 %263, label %41, label %39

264:                                              ; preds = %39, %3
  ret void
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @_ZL19_hb_clear_syllablesPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t(%struct.hb_ot_shape_plan_t* nocapture readnone, %struct.hb_font_t* nocapture readnone, %struct.hb_buffer_t* nocapture readonly) #3 {
  %4 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 18
  %5 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %4, align 8
  %6 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 15
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %28, label %9

9:                                                ; preds = %3
  %10 = zext i32 %7 to i64
  %11 = add nsw i64 %10, -1
  %12 = and i64 %10, 7
  %13 = icmp ult i64 %11, 7
  br i1 %13, label %16, label %14

14:                                               ; preds = %9
  %15 = sub nsw i64 %10, %12
  br label %29

16:                                               ; preds = %29, %9
  %17 = phi i64 [ 0, %9 ], [ %63, %29 ]
  %18 = icmp eq i64 %12, 0
  br i1 %18, label %28, label %19

19:                                               ; preds = %16, %19
  %20 = phi i64 [ %25, %19 ], [ %17, %16 ]
  %21 = phi i64 [ %26, %19 ], [ %12, %16 ]
  %22 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %20, i32 3
  %23 = bitcast %union._hb_var_int_t* %22 to [4 x i8]*
  %24 = getelementptr inbounds [4 x i8], [4 x i8]* %23, i64 0, i64 3
  store i8 0, i8* %24, align 1
  %25 = add nuw nsw i64 %20, 1
  %26 = add i64 %21, -1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %19, !llvm.loop !13

28:                                               ; preds = %16, %19, %3
  ret void

29:                                               ; preds = %29, %14
  %30 = phi i64 [ 0, %14 ], [ %63, %29 ]
  %31 = phi i64 [ %15, %14 ], [ %64, %29 ]
  %32 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %30, i32 3
  %33 = bitcast %union._hb_var_int_t* %32 to [4 x i8]*
  %34 = getelementptr inbounds [4 x i8], [4 x i8]* %33, i64 0, i64 3
  store i8 0, i8* %34, align 1
  %35 = or i64 %30, 1
  %36 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %35, i32 3
  %37 = bitcast %union._hb_var_int_t* %36 to [4 x i8]*
  %38 = getelementptr inbounds [4 x i8], [4 x i8]* %37, i64 0, i64 3
  store i8 0, i8* %38, align 1
  %39 = or i64 %30, 2
  %40 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %39, i32 3
  %41 = bitcast %union._hb_var_int_t* %40 to [4 x i8]*
  %42 = getelementptr inbounds [4 x i8], [4 x i8]* %41, i64 0, i64 3
  store i8 0, i8* %42, align 1
  %43 = or i64 %30, 3
  %44 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %43, i32 3
  %45 = bitcast %union._hb_var_int_t* %44 to [4 x i8]*
  %46 = getelementptr inbounds [4 x i8], [4 x i8]* %45, i64 0, i64 3
  store i8 0, i8* %46, align 1
  %47 = or i64 %30, 4
  %48 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %47, i32 3
  %49 = bitcast %union._hb_var_int_t* %48 to [4 x i8]*
  %50 = getelementptr inbounds [4 x i8], [4 x i8]* %49, i64 0, i64 3
  store i8 0, i8* %50, align 1
  %51 = or i64 %30, 5
  %52 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %51, i32 3
  %53 = bitcast %union._hb_var_int_t* %52 to [4 x i8]*
  %54 = getelementptr inbounds [4 x i8], [4 x i8]* %53, i64 0, i64 3
  store i8 0, i8* %54, align 1
  %55 = or i64 %30, 6
  %56 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %55, i32 3
  %57 = bitcast %union._hb_var_int_t* %56 to [4 x i8]*
  %58 = getelementptr inbounds [4 x i8], [4 x i8]* %57, i64 0, i64 3
  store i8 0, i8* %58, align 1
  %59 = or i64 %30, 7
  %60 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %59, i32 3
  %61 = bitcast %union._hb_var_int_t* %60 to [4 x i8]*
  %62 = getelementptr inbounds [4 x i8], [4 x i8]* %61, i64 0, i64 3
  store i8 0, i8* %62, align 1
  %63 = add nuw nsw i64 %30, 8
  %64 = add i64 %31, -8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %16, label %29
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare hidden void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t*, i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)*) local_unnamed_addr #4

declare hidden void @_ZN11hb_buffer_t20unsafe_to_break_implEjj(%struct.hb_buffer_t*, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN11hb_buffer_t7messageEP9hb_font_tPKcz(%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, ...) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca [1 x %struct.__va_list_tag], align 16
  %5 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %0, i64 0, i32 24
  %6 = load i32 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, i8*)*, i32 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, i8*)** %5, align 8
  %7 = icmp eq i32 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, i8*)* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #5
  %10 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %4, i64 0, i64 0
  %11 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %9)
  %12 = call zeroext i1 @_ZN11hb_buffer_t12message_implEP9hb_font_tPKcP13__va_list_tag(%struct.hb_buffer_t* %0, %struct.hb_font_t* %1, i8* %2, %struct.__va_list_tag* nonnull %10) #5
  call void @llvm.va_end(i8* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #5
  br label %13

13:                                               ; preds = %3, %8
  %14 = phi i1 [ %12, %8 ], [ true, %3 ]
  ret i1 %14
}

declare hidden void @_Z33hb_syllabic_insert_dotted_circlesP9hb_font_tP11hb_buffer_tjji(%struct.hb_font_t*, %struct.hb_buffer_t*, i32, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #5

declare hidden zeroext i1 @_ZN11hb_buffer_t12message_implEP9hb_font_tPKcP13__va_list_tag(%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, %struct.__va_list_tag*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare hidden void @_ZN11hb_buffer_t19merge_clusters_implEjj(%struct.hb_buffer_t*, i32, i32) local_unnamed_addr #4

declare hidden void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t*, i32, i32, i32) local_unnamed_addr #4

declare hidden void @_Z16_hb_options_initv() local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noalias i8* @calloc(i64, i64) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

declare hidden zeroext i16 @_Z23hb_indic_get_categoriesj(i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = distinct !{!5, !4}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !4}
!8 = distinct !{!8, !4}
!9 = distinct !{!9, !4}
!10 = distinct !{!10, !4}
!11 = distinct !{!11, !4}
!12 = distinct !{!12, !4}
!13 = distinct !{!13, !4}
