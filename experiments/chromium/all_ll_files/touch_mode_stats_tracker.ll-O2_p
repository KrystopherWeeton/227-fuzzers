; ModuleID = '../../chrome/browser/metrics/desktop_session_duration/touch_mode_stats_tracker.cc'
source_filename = "../../chrome/browser/metrics/desktop_session_duration/touch_mode_stats_tracker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [48 x i8] }
%class.TouchModeStatsTracker = type { %"class.metrics::DesktopSessionDurationTracker::Observer", %"class.ui::TouchUiController"*, %"class.base::CallbackListSubscription", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta" }
%"class.metrics::DesktopSessionDurationTracker::Observer" = type { i32 (...)** }
%"class.base::CallbackListSubscription" = type { %"class.base::OnceCallback" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.8 }
%class.scoped_refptr.8 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.9", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.9" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.metrics::DesktopSessionDurationTracker" = type { %"class.metrics::AudibleContentsTracker::Observer", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::OneShotTimer", %"class.base::ObserverList", %"class.metrics::ChromeVisibilityObserver", %"class.metrics::AudibleContentsTracker", %"class.base::WeakPtrFactory.30" }
%"class.metrics::AudibleContentsTracker::Observer" = type { i32 (...)** }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.2", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.metrics::ChromeVisibilityObserver" = type { %class.BrowserListObserver, %"class.base::TimeDelta", %"class.base::WeakPtrFactory.11" }
%class.BrowserListObserver = type { i32 (...)** }
%"class.base::WeakPtrFactory.11" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.metrics::AudibleContentsTracker" = type { %class.BrowserListObserver, %class.TabStripModelObserver, %"class.metrics::AudibleContentsTracker::Observer"*, %"class.std::__1::set.20" }
%class.TabStripModelObserver = type { i32 (...)**, %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.12", %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { i64 }
%"class.std::__1::set.20" = type { %"class.std::__1::__tree.21" }
%"class.std::__1::__tree.21" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.22", %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.base::WeakPtrFactory.30" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.ui::TouchUiController" = type { i8, i32, %"class.base::RepeatingCallbackList" }
%"class.base::RepeatingCallbackList" = type { %"class.base::internal::CallbackListBase" }
%"class.base::internal::CallbackListBase" = type { %"class.std::__1::list", i8, %"class.base::RepeatingCallback", %"class.base::WeakPtrFactory.35" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.31" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.35" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN4base8internal7InvokerINS0_9BindStateIM21TouchModeStatsTrackerFvvEJNS0_17UnretainedWrapperIS3_EEEEEFvvEE3RunEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIM21TouchModeStatsTrackerFvvEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZZN21TouchModeStatsTracker10InitializeEPN7metrics29DesktopSessionDurationTrackerEPN2ui17TouchUiControllerEE13stats_tracker = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN21TouchModeStatsTracker10InitializeEPN7metrics29DesktopSessionDurationTrackerEPN2ui17TouchUiControllerEE13stats_tracker = internal global i64 0, align 8
@_ZTV21TouchModeStatsTracker = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.TouchModeStatsTracker*)* @_ZN21TouchModeStatsTrackerD2Ev to i8*), i8* bitcast (void (%class.TouchModeStatsTracker*)* @_ZN21TouchModeStatsTrackerD0Ev to i8*), i8* bitcast (void (%class.TouchModeStatsTracker*, i64)* @_ZN21TouchModeStatsTracker16OnSessionStartedEN4base9TimeTicksE to i8*), i8* bitcast (void (%class.TouchModeStatsTracker*, i64, i64)* @_ZN21TouchModeStatsTracker14OnSessionEndedEN4base9TimeDeltaENS0_9TimeTicksE to i8*)] }, align 8
@_ZN21TouchModeStatsTracker34kSessionTouchDurationHistogramNameE = hidden constant [32 x i8] c"Session.TotalDuration.TouchMode\00", align 16
@.str = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1

@_ZN21TouchModeStatsTrackerC1EPN7metrics29DesktopSessionDurationTrackerEPN2ui17TouchUiControllerE = hidden unnamed_addr alias void (%class.TouchModeStatsTracker*, %"class.metrics::DesktopSessionDurationTracker"*, %"class.ui::TouchUiController"*), void (%class.TouchModeStatsTracker*, %"class.metrics::DesktopSessionDurationTracker"*, %"class.ui::TouchUiController"*)* @_ZN21TouchModeStatsTrackerC2EPN7metrics29DesktopSessionDurationTrackerEPN2ui17TouchUiControllerE
@_ZN21TouchModeStatsTrackerD1Ev = hidden unnamed_addr alias void (%class.TouchModeStatsTracker*), void (%class.TouchModeStatsTracker*)* @_ZN21TouchModeStatsTrackerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21TouchModeStatsTracker10InitializeEPN7metrics29DesktopSessionDurationTrackerEPN2ui17TouchUiControllerE(%"class.metrics::DesktopSessionDurationTracker"*, %"class.ui::TouchUiController"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::CallbackListSubscription", align 8
  %4 = alloca %"class.base::RepeatingCallback", align 8
  %5 = load atomic i8, i8* bitcast (i64* @_ZGVZN21TouchModeStatsTracker10InitializeEPN7metrics29DesktopSessionDurationTrackerEPN2ui17TouchUiControllerEE13stats_tracker to i8*) acquire, align 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %22, !prof !2

7:                                                ; preds = %2
  %8 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN21TouchModeStatsTracker10InitializeEPN7metrics29DesktopSessionDurationTrackerEPN2ui17TouchUiControllerEE13stats_tracker) #9
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %22, label %10

10:                                               ; preds = %7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV21TouchModeStatsTracker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** bitcast (%"class.base::NoDestructor"* @_ZZN21TouchModeStatsTracker10InitializeEPN7metrics29DesktopSessionDurationTrackerEPN2ui17TouchUiControllerEE13stats_tracker to i32 (...)***), align 8
  store %"class.ui::TouchUiController"* %1, %"class.ui::TouchUiController"** bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN21TouchModeStatsTracker10InitializeEPN7metrics29DesktopSessionDurationTrackerEPN2ui17TouchUiControllerEE13stats_tracker, i64 0, i32 0, i64 8) to %"class.ui::TouchUiController"**), align 8
  tail call void @_ZN4base24CallbackListSubscriptionC1Ev(%"class.base::CallbackListSubscription"* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN21TouchModeStatsTracker10InitializeEPN7metrics29DesktopSessionDurationTrackerEPN2ui17TouchUiControllerEE13stats_tracker, i64 0, i32 0, i64 16) to %"class.base::CallbackListSubscription"*)) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN21TouchModeStatsTracker10InitializeEPN7metrics29DesktopSessionDurationTrackerEPN2ui17TouchUiControllerEE13stats_tracker, i64 0, i32 0, i64 24), i8 0, i64 24, i1 false) #9
  tail call void @_ZN7metrics29DesktopSessionDurationTracker11AddObserverEPNS0_8ObserverE(%"class.metrics::DesktopSessionDurationTracker"* %0, %"class.metrics::DesktopSessionDurationTracker::Observer"* bitcast (%"class.base::NoDestructor"* @_ZZN21TouchModeStatsTracker10InitializeEPN7metrics29DesktopSessionDurationTrackerEPN2ui17TouchUiControllerEE13stats_tracker to %"class.metrics::DesktopSessionDurationTracker::Observer"*)) #9
  %11 = bitcast %"class.base::CallbackListSubscription"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  %12 = bitcast %"class.base::RepeatingCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  %13 = tail call i8* @_Znwm(i64 56) #10, !noalias !3
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIM21TouchModeStatsTrackerFvvEJNS0_17UnretainedWrapperIS3_EEEEEFvvEE3RunEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIM21TouchModeStatsTrackerFvvEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !3
  %15 = getelementptr inbounds i8, i8* %13, i64 32
  %16 = bitcast i8* %15 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%class.TouchModeStatsTracker*)* @_ZN21TouchModeStatsTracker16TouchModeChangedEv to i64), i64 0>, <2 x i64>* %16, align 8, !noalias !3
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to i64*
  store i64 ptrtoint (%"class.base::NoDestructor"* @_ZZN21TouchModeStatsTracker10InitializeEPN7metrics29DesktopSessionDurationTrackerEPN2ui17TouchUiControllerEE13stats_tracker to i64), i64* %18, align 8, !noalias !3
  %19 = bitcast %"class.base::RepeatingCallback"* %4 to i8**
  store i8* %13, i8** %19, align 8, !alias.scope !3
  call void @_ZN2ui17TouchUiController16RegisterCallbackERKN4base17RepeatingCallbackIFvvEEE(%"class.base::CallbackListSubscription"* nonnull sret %3, %"class.ui::TouchUiController"* %1, %"class.base::RepeatingCallback"* nonnull dereferenceable(8) %4) #9
  %20 = call dereferenceable(8) %"class.base::CallbackListSubscription"* @_ZN4base24CallbackListSubscriptionaSEOS0_(%"class.base::CallbackListSubscription"* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN21TouchModeStatsTracker10InitializeEPN7metrics29DesktopSessionDurationTrackerEPN2ui17TouchUiControllerEE13stats_tracker, i64 0, i32 0, i64 16) to %"class.base::CallbackListSubscription"*), %"class.base::CallbackListSubscription"* nonnull dereferenceable(8) %3) #9
  call void @_ZN4base24CallbackListSubscriptionD1Ev(%"class.base::CallbackListSubscription"* nonnull %3) #9
  %21 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN21TouchModeStatsTracker10InitializeEPN7metrics29DesktopSessionDurationTrackerEPN2ui17TouchUiControllerEE13stats_tracker) #9
  br label %22

22:                                               ; preds = %7, %10, %2
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21TouchModeStatsTrackerC2EPN7metrics29DesktopSessionDurationTrackerEPN2ui17TouchUiControllerE(%class.TouchModeStatsTracker*, %"class.metrics::DesktopSessionDurationTracker"*, %"class.ui::TouchUiController"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::CallbackListSubscription", align 8
  %5 = alloca %"class.base::RepeatingCallback", align 8
  %6 = getelementptr inbounds %class.TouchModeStatsTracker, %class.TouchModeStatsTracker* %0, i64 0, i32 0
  %7 = getelementptr inbounds %class.TouchModeStatsTracker, %class.TouchModeStatsTracker* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV21TouchModeStatsTracker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.TouchModeStatsTracker, %class.TouchModeStatsTracker* %0, i64 0, i32 1
  store %"class.ui::TouchUiController"* %2, %"class.ui::TouchUiController"** %8, align 8
  %9 = getelementptr inbounds %class.TouchModeStatsTracker, %class.TouchModeStatsTracker* %0, i64 0, i32 2
  tail call void @_ZN4base24CallbackListSubscriptionC1Ev(%"class.base::CallbackListSubscription"* %9) #9
  %10 = getelementptr inbounds %class.TouchModeStatsTracker, %class.TouchModeStatsTracker* %0, i64 0, i32 3, i32 0, i32 0
  %11 = bitcast i64* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false)
  tail call void @_ZN7metrics29DesktopSessionDurationTracker11AddObserverEPNS0_8ObserverE(%"class.metrics::DesktopSessionDurationTracker"* %1, %"class.metrics::DesktopSessionDurationTracker::Observer"* %6) #9
  %12 = bitcast %"class.base::CallbackListSubscription"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  %13 = bitcast %"class.base::RepeatingCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = ptrtoint %class.TouchModeStatsTracker* %0 to i64
  %15 = tail call i8* @_Znwm(i64 56) #10, !noalias !8
  %16 = bitcast i8* %15 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %16, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIM21TouchModeStatsTrackerFvvEJNS0_17UnretainedWrapperIS3_EEEEEFvvEE3RunEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIM21TouchModeStatsTrackerFvvEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !8
  %17 = getelementptr inbounds i8, i8* %15, i64 32
  %18 = bitcast i8* %17 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%class.TouchModeStatsTracker*)* @_ZN21TouchModeStatsTracker16TouchModeChangedEv to i64), i64 0>, <2 x i64>* %18, align 8, !noalias !8
  %19 = getelementptr inbounds i8, i8* %15, i64 48
  %20 = bitcast i8* %19 to i64*
  store i64 %14, i64* %20, align 8, !noalias !8
  %21 = bitcast %"class.base::RepeatingCallback"* %5 to i8**
  store i8* %15, i8** %21, align 8, !alias.scope !8
  call void @_ZN2ui17TouchUiController16RegisterCallbackERKN4base17RepeatingCallbackIFvvEEE(%"class.base::CallbackListSubscription"* nonnull sret %4, %"class.ui::TouchUiController"* %2, %"class.base::RepeatingCallback"* nonnull dereferenceable(8) %5) #9
  %22 = call dereferenceable(8) %"class.base::CallbackListSubscription"* @_ZN4base24CallbackListSubscriptionaSEOS0_(%"class.base::CallbackListSubscription"* %9, %"class.base::CallbackListSubscription"* nonnull dereferenceable(8) %4) #9
  call void @_ZN4base24CallbackListSubscriptionD1Ev(%"class.base::CallbackListSubscription"* nonnull %4) #9
  %23 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  ret void
}

declare void @_ZN4base24CallbackListSubscriptionC1Ev(%"class.base::CallbackListSubscription"*) unnamed_addr #2

declare void @_ZN7metrics29DesktopSessionDurationTracker11AddObserverEPNS0_8ObserverE(%"class.metrics::DesktopSessionDurationTracker"*, %"class.metrics::DesktopSessionDurationTracker::Observer"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN2ui17TouchUiController16RegisterCallbackERKN4base17RepeatingCallbackIFvvEEE(%"class.base::CallbackListSubscription"* sret, %"class.ui::TouchUiController"*, %"class.base::RepeatingCallback"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21TouchModeStatsTracker16TouchModeChangedEv(%class.TouchModeStatsTracker* nocapture) #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %class.TouchModeStatsTracker, %class.TouchModeStatsTracker* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %43, label %6

6:                                                ; preds = %1
  %7 = tail call i64 @_ZN4base9TimeTicks3NowEv() #9
  %8 = getelementptr inbounds %class.TouchModeStatsTracker, %class.TouchModeStatsTracker* %0, i64 0, i32 1
  %9 = load %"class.ui::TouchUiController"*, %"class.ui::TouchUiController"** %8, align 8
  %10 = getelementptr inbounds %"class.ui::TouchUiController", %"class.ui::TouchUiController"* %9, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  switch i32 %11, label %16 [
    i32 2, label %41
    i32 1, label %12
  ]

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.ui::TouchUiController", %"class.ui::TouchUiController"* %9, i64 0, i32 0
  %14 = load i8, i8* %13, align 8, !range !13
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %41

16:                                               ; preds = %12, %6
  %17 = getelementptr inbounds %class.TouchModeStatsTracker, %class.TouchModeStatsTracker* %0, i64 0, i32 4, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = sub nsw i64 %7, %18
  %20 = add i64 %19, -9223372036854775807
  %21 = icmp ult i64 %20, 2
  %22 = getelementptr inbounds %class.TouchModeStatsTracker, %class.TouchModeStatsTracker* %0, i64 0, i32 5, i32 0
  %23 = load i64, i64* %22, align 8
  br i1 %21, label %31, label %24

24:                                               ; preds = %16
  %25 = icmp slt i64 %19, 0
  %26 = select i1 %25, i64 -9223372036854775808, i64 9223372036854775807
  %27 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %23, i64 %19) #9
  %28 = extractvalue { i64, i1 } %27, 1
  %29 = extractvalue { i64, i1 } %27, 0
  %30 = select i1 %28, i64 %26, i64 %29, !prof !14
  br label %39

31:                                               ; preds = %16
  %32 = add i64 %23, -9223372036854775807
  %33 = icmp ugt i64 %32, 1
  %34 = icmp eq i64 %23, %19
  %35 = or i1 %34, %33
  br i1 %35, label %39, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #9
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #9
  br label %39

39:                                               ; preds = %24, %31, %36
  %40 = phi i64 [ %30, %24 ], [ %19, %31 ], [ %19, %36 ]
  store i64 %40, i64* %22, align 8
  br label %41

41:                                               ; preds = %12, %6, %39
  %42 = getelementptr inbounds %class.TouchModeStatsTracker, %class.TouchModeStatsTracker* %0, i64 0, i32 4, i32 0, i32 0
  store i64 %7, i64* %42, align 8
  br label %43

43:                                               ; preds = %1, %41
  ret void
}

declare dereferenceable(8) %"class.base::CallbackListSubscription"* @_ZN4base24CallbackListSubscriptionaSEOS0_(%"class.base::CallbackListSubscription"*, %"class.base::CallbackListSubscription"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base24CallbackListSubscriptionD1Ev(%"class.base::CallbackListSubscription"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21TouchModeStatsTrackerD2Ev(%class.TouchModeStatsTracker*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.TouchModeStatsTracker, %class.TouchModeStatsTracker* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV21TouchModeStatsTracker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.TouchModeStatsTracker, %class.TouchModeStatsTracker* %0, i64 0, i32 2
  tail call void @_ZN4base24CallbackListSubscriptionD1Ev(%"class.base::CallbackListSubscription"* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21TouchModeStatsTrackerD0Ev(%class.TouchModeStatsTracker*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.TouchModeStatsTracker, %class.TouchModeStatsTracker* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV21TouchModeStatsTracker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.TouchModeStatsTracker, %class.TouchModeStatsTracker* %0, i64 0, i32 2
  tail call void @_ZN4base24CallbackListSubscriptionD1Ev(%"class.base::CallbackListSubscription"* %3) #9
  %4 = bitcast %class.TouchModeStatsTracker* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @_ZN21TouchModeStatsTracker16OnSessionStartedEN4base9TimeTicksE(%class.TouchModeStatsTracker* nocapture, i64) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.TouchModeStatsTracker, %class.TouchModeStatsTracker* %0, i64 0, i32 3, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds %class.TouchModeStatsTracker, %class.TouchModeStatsTracker* %0, i64 0, i32 4, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %class.TouchModeStatsTracker, %class.TouchModeStatsTracker* %0, i64 0, i32 5, i32 0
  store i64 0, i64* %5, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21TouchModeStatsTracker14OnSessionEndedEN4base9TimeDeltaENS0_9TimeTicksE(%class.TouchModeStatsTracker* nocapture, i64, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %class.TouchModeStatsTracker, %class.TouchModeStatsTracker* %0, i64 0, i32 1
  %6 = load %"class.ui::TouchUiController"*, %"class.ui::TouchUiController"** %5, align 8
  %7 = getelementptr inbounds %"class.ui::TouchUiController", %"class.ui::TouchUiController"* %6, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  switch i32 %8, label %40 [
    i32 2, label %13
    i32 1, label %9
  ]

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.ui::TouchUiController", %"class.ui::TouchUiController"* %6, i64 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !13
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %40, label %13

13:                                               ; preds = %9, %3
  %14 = getelementptr inbounds %class.TouchModeStatsTracker, %class.TouchModeStatsTracker* %0, i64 0, i32 4, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp sgt i64 %15, %2
  br i1 %16, label %40, label %17

17:                                               ; preds = %13
  %18 = sub nsw i64 %2, %15
  %19 = add i64 %18, -9223372036854775807
  %20 = icmp ult i64 %19, 2
  %21 = getelementptr inbounds %class.TouchModeStatsTracker, %class.TouchModeStatsTracker* %0, i64 0, i32 5, i32 0
  %22 = load i64, i64* %21, align 8
  br i1 %20, label %30, label %23

23:                                               ; preds = %17
  %24 = icmp slt i64 %18, 0
  %25 = select i1 %24, i64 -9223372036854775808, i64 9223372036854775807
  %26 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %22, i64 %18) #9
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = extractvalue { i64, i1 } %26, 0
  %29 = select i1 %27, i64 %25, i64 %28, !prof !14
  br label %38

30:                                               ; preds = %17
  %31 = add i64 %22, -9223372036854775807
  %32 = icmp ugt i64 %31, 1
  %33 = icmp eq i64 %22, %18
  %34 = or i1 %33, %32
  br i1 %34, label %38, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #9
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9
  br label %38

38:                                               ; preds = %23, %30, %35
  %39 = phi i64 [ %29, %23 ], [ %18, %30 ], [ %18, %35 ]
  store i64 %39, i64* %21, align 8
  br label %40

40:                                               ; preds = %13, %9, %3, %38
  %41 = getelementptr inbounds %class.TouchModeStatsTracker, %class.TouchModeStatsTracker* %0, i64 0, i32 5, i32 0
  %42 = load i64, i64* %41, align 8
  call void @_ZN4base21UmaHistogramLongTimesEPKcNS_9TimeDeltaE(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZN21TouchModeStatsTracker34kSessionTouchDurationHistogramNameE, i64 0, i64 0), i64 %42) #9
  %43 = getelementptr inbounds %class.TouchModeStatsTracker, %class.TouchModeStatsTracker* %0, i64 0, i32 3, i32 0, i32 0
  %44 = bitcast i64* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false)
  ret void
}

declare void @_ZN4base21UmaHistogramLongTimesEPKcNS_9TimeDeltaE(i8*, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIM21TouchModeStatsTrackerFvvEJNS0_17UnretainedWrapperIS3_EEEEEFvvEE3RunEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %class.TouchModeStatsTracker*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%class.TouchModeStatsTracker*)**
  %21 = load void (%class.TouchModeStatsTracker*)*, void (%class.TouchModeStatsTracker*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%class.TouchModeStatsTracker*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%class.TouchModeStatsTracker*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%class.TouchModeStatsTracker* %12) #9
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIM21TouchModeStatsTrackerFvvEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEM21TouchModeStatsTrackerFvvEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_: argument 0"}
!5 = distinct !{!5, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEM21TouchModeStatsTrackerFvvEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_"}
!6 = distinct !{!6, !7, !"_ZN4base13BindRepeatingIM21TouchModeStatsTrackerFvvEJNS_8internal17UnretainedWrapperIS1_EEEEENS_17RepeatingCallbackINS4_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!7 = distinct !{!7, !"_ZN4base13BindRepeatingIM21TouchModeStatsTrackerFvvEJNS_8internal17UnretainedWrapperIS1_EEEEENS_17RepeatingCallbackINS4_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEM21TouchModeStatsTrackerFvvEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEM21TouchModeStatsTrackerFvvEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_"}
!11 = distinct !{!11, !12, !"_ZN4base13BindRepeatingIM21TouchModeStatsTrackerFvvEJNS_8internal17UnretainedWrapperIS1_EEEEENS_17RepeatingCallbackINS4_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!12 = distinct !{!12, !"_ZN4base13BindRepeatingIM21TouchModeStatsTrackerFvvEJNS_8internal17UnretainedWrapperIS1_EEEEENS_17RepeatingCallbackINS4_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!13 = !{i8 0, i8 2}
!14 = !{!"branch_weights", i32 1, i32 2000}
