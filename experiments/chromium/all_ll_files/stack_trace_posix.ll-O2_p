; ModuleID = '../../base/debug/stack_trace_posix.cc'
source_filename = "../../base/debug/stack_trace_posix.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.siginfo_t = type { i32, i32, i32, i32, %union.anon.15 }
%union.anon.15 = type { %struct.anon.19, [80 x i8] }
%struct.anon.19 = type { i32, i32, i32, i64, i64 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.base::debug::StackTrace" = type { [250 x i8*], i64 }
%struct.sigaction = type { %union.anon.14, %struct.__sigset_t, i32, void ()* }
%union.anon.14 = type { void (i32)* }
%struct.__sigset_t = type { [16 x i64] }
%"class.base::debug::(anonymous namespace)::SandboxSymbolizeHelper" = type { i8, %"class.std::__1::map", %"class.std::__1::vector" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::debug::MappedMemoryRegion"*, %"struct.base::debug::MappedMemoryRegion"*, %"class.std::__1::__compressed_pair.9" }
%"struct.base::debug::MappedMemoryRegion" = type { i64, i64, i64, i64, i8, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.base::debug::MappedMemoryRegion"* }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%struct.Elf64_Ehdr = type { [16 x i8], i16, i16, i32, i64, i64, i64, i32, i16, i16, i16, i16, i16, i16 }
%struct.Elf64_Phdr = type { i32, i32, i64, i64, i64, i64, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%struct.anon.33 = type { i8*, i64 }
%"class.base::debug::(anonymous namespace)::PrintBacktraceOutputHandler" = type { %"class.base::debug::(anonymous namespace)::BacktraceOutputHandler" }
%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler" = type { i32 (...)** }
%"class.base::debug::(anonymous namespace)::StreamBacktraceOutputHandler" = type { %"class.base::debug::(anonymous namespace)::BacktraceOutputHandler", %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.27" }
%"struct.std::__1::pair.27" = type { %"class.std::__1::basic_string", %"class.base::ScopedGeneric" }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev = comdat any

$_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base13ScopedGenericIiNS8_8internal19ScopedFDCloseTraitsEEEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE4findIS7_EENS_15__tree_iteratorISD_PNS_11__tree_nodeISD_PvEElEERKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base13ScopedGenericIiNS8_8internal19ScopedFDCloseTraitsEEEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE25__emplace_unique_key_argsIS7_JRKS7_SC_EEENS_4pairINS_15__tree_iteratorISD_PNS_11__tree_nodeISD_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base13ScopedGenericIiNS8_8internal19ScopedFDCloseTraitsEEEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISO_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE = comdat any

@_ZN4base5debug12_GLOBAL__N_117try_handle_signalE = internal unnamed_addr global i1 (i32, %struct.siginfo_t*, i8*)* null, align 8
@.str = private unnamed_addr constant [17 x i8] c"0123456789abcdef\00", align 1
@_ZN4base9SingletonINS_5debug12_GLOBAL__N_122SandboxSymbolizeHelperENS_20LeakySingletonTraitsIS3_EES3_E9instance_E = internal global i64 0, align 8
@.str.1 = private unnamed_addr constant [38 x i8] c"../../base/debug/stack_trace_posix.cc\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"Failed to read /proc/self/maps\00", align 1
@.str.3 = private unnamed_addr constant [48 x i8] c"Failed to parse the contents of /proc/self/maps\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.5 = private unnamed_addr constant [15 x i8] c"/proc/self/mem\00", align 1
@_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::ScopedGeneric"*)* @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev to i8*), i8* bitcast (void (%"class.base::ScopedGeneric"*)* @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev to i8*)] }, comdat, align 8
@.str.7 = private unnamed_addr constant [28 x i8] c"../../base/scoped_generic.h\00", align 1
@.str.8 = private unnamed_addr constant [12 x i8] c"!receiving_\00", align 1
@.str.9 = private unnamed_addr constant [45 x i8] c"ScopedGeneric destroyed with active receiver\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c" (deleted)\00", align 1
@.str.11 = private unnamed_addr constant [22 x i8] c"Failed to open file: \00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"\0A  Error: \00", align 1
@_ZN4base5debug12_GLOBAL__N_117in_signal_handlerE = internal global i32 0, align 4
@.str.15 = private unnamed_addr constant [17 x i8] c"Received signal \00", align 1
@.str.16 = private unnamed_addr constant [13 x i8] c" BUS_ADRALN \00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c" BUS_ADRERR \00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c" BUS_OBJERR \00", align 1
@.str.19 = private unnamed_addr constant [12 x i8] c" <unknown> \00", align 1
@.str.20 = private unnamed_addr constant [13 x i8] c" FPE_FLTDIV \00", align 1
@.str.21 = private unnamed_addr constant [13 x i8] c" FPE_FLTINV \00", align 1
@.str.22 = private unnamed_addr constant [13 x i8] c" FPE_FLTOVF \00", align 1
@.str.23 = private unnamed_addr constant [13 x i8] c" FPE_FLTRES \00", align 1
@.str.24 = private unnamed_addr constant [13 x i8] c" FPE_FLTSUB \00", align 1
@.str.25 = private unnamed_addr constant [13 x i8] c" FPE_FLTUND \00", align 1
@.str.26 = private unnamed_addr constant [13 x i8] c" FPE_INTDIV \00", align 1
@.str.27 = private unnamed_addr constant [13 x i8] c" FPE_INTOVF \00", align 1
@.str.28 = private unnamed_addr constant [13 x i8] c" ILL_BADSTK \00", align 1
@.str.29 = private unnamed_addr constant [13 x i8] c" ILL_COPROC \00", align 1
@.str.30 = private unnamed_addr constant [13 x i8] c" ILL_ILLOPN \00", align 1
@.str.31 = private unnamed_addr constant [13 x i8] c" ILL_ILLADR \00", align 1
@.str.32 = private unnamed_addr constant [13 x i8] c" ILL_ILLTRP \00", align 1
@.str.33 = private unnamed_addr constant [13 x i8] c" ILL_PRVOPC \00", align 1
@.str.34 = private unnamed_addr constant [13 x i8] c" ILL_PRVREG \00", align 1
@.str.35 = private unnamed_addr constant [14 x i8] c" SEGV_MAPERR \00", align 1
@.str.36 = private unnamed_addr constant [14 x i8] c" SEGV_ACCERR \00", align 1
@.str.37 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.38 = private unnamed_addr constant [7 x i8] c"  r8: \00", align 1
@.str.39 = private unnamed_addr constant [7 x i8] c"  r9: \00", align 1
@.str.40 = private unnamed_addr constant [7 x i8] c" r10: \00", align 1
@.str.41 = private unnamed_addr constant [7 x i8] c" r11: \00", align 1
@.str.42 = private unnamed_addr constant [7 x i8] c" r12: \00", align 1
@.str.43 = private unnamed_addr constant [7 x i8] c" r13: \00", align 1
@.str.44 = private unnamed_addr constant [7 x i8] c" r14: \00", align 1
@.str.45 = private unnamed_addr constant [7 x i8] c" r15: \00", align 1
@.str.46 = private unnamed_addr constant [7 x i8] c"  di: \00", align 1
@.str.47 = private unnamed_addr constant [7 x i8] c"  si: \00", align 1
@.str.48 = private unnamed_addr constant [7 x i8] c"  bp: \00", align 1
@.str.49 = private unnamed_addr constant [7 x i8] c"  bx: \00", align 1
@.str.50 = private unnamed_addr constant [7 x i8] c"  dx: \00", align 1
@.str.51 = private unnamed_addr constant [7 x i8] c"  ax: \00", align 1
@.str.52 = private unnamed_addr constant [7 x i8] c"  cx: \00", align 1
@.str.53 = private unnamed_addr constant [7 x i8] c"  sp: \00", align 1
@.str.54 = private unnamed_addr constant [7 x i8] c"  ip: \00", align 1
@.str.55 = private unnamed_addr constant [7 x i8] c" efl: \00", align 1
@.str.56 = private unnamed_addr constant [7 x i8] c" cgf: \00", align 1
@.str.57 = private unnamed_addr constant [7 x i8] c" erf: \00", align 1
@.str.58 = private unnamed_addr constant [7 x i8] c" trp: \00", align 1
@.str.59 = private unnamed_addr constant [7 x i8] c" msk: \00", align 1
@.str.60 = private unnamed_addr constant [7 x i8] c" cr2: \00", align 1
@.str.61 = private unnamed_addr constant [22 x i8] c"[end of stack trace]\0A\00", align 1
@_ZTVN4base5debug12_GLOBAL__N_127PrintBacktraceOutputHandlerE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::debug::(anonymous namespace)::PrintBacktraceOutputHandler"*, i8*)* @_ZN4base5debug12_GLOBAL__N_127PrintBacktraceOutputHandler12HandleOutputEPKc to i8*), i8* bitcast (void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*)* @_ZN4base5debug12_GLOBAL__N_122BacktraceOutputHandlerD2Ev to i8*), i8* bitcast (void (%"class.base::debug::(anonymous namespace)::PrintBacktraceOutputHandler"*)* @_ZN4base5debug12_GLOBAL__N_127PrintBacktraceOutputHandlerD0Ev to i8*)] }, align 8
@.str.62 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.63 = private unnamed_addr constant [10 x i8] c"<unknown>\00", align 1
@.str.64 = private unnamed_addr constant [2 x i8] c"#\00", align 1
@.str.65 = private unnamed_addr constant [3 x i8] c"0x\00", align 1
@_ZTVN4base5debug12_GLOBAL__N_128StreamBacktraceOutputHandlerE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::debug::(anonymous namespace)::StreamBacktraceOutputHandler"*, i8*)* @_ZN4base5debug12_GLOBAL__N_128StreamBacktraceOutputHandler12HandleOutputEPKc to i8*), i8* bitcast (void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*)* @_ZN4base5debug12_GLOBAL__N_122BacktraceOutputHandlerD2Ev to i8*), i8* bitcast (void (%"class.base::debug::(anonymous namespace)::StreamBacktraceOutputHandler"*)* @_ZN4base5debug12_GLOBAL__N_128StreamBacktraceOutputHandlerD0Ev to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base5debug27EnableInProcessStackDumpingEv() local_unnamed_addr #0 {
  %1 = alloca %"class.base::debug::StackTrace", align 8
  %2 = alloca %struct.sigaction, align 8
  %3 = alloca %struct.sigaction, align 8
  %4 = tail call fastcc %"class.base::debug::(anonymous namespace)::SandboxSymbolizeHelper"* @_ZN4base5debug12_GLOBAL__N_122SandboxSymbolizeHelper11GetInstanceEv()
  %5 = bitcast %struct.sigaction* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %5) #17
  %6 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %2, i64 0, i32 1
  %7 = bitcast %struct.__sigset_t* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 144, i1 false)
  %8 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %2, i64 0, i32 0, i32 0
  store void (i32)* inttoptr (i64 1 to void (i32)*), void (i32)** %8, align 8
  %9 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %2, i64 0, i32 1
  %10 = call i32 @sigemptyset(%struct.__sigset_t* %9) #17
  %11 = call i32 @sigaction(i32 13, %struct.sigaction* nonnull %2, %struct.sigaction* null) #17
  %12 = bitcast %"class.base::debug::StackTrace"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2008, i8* nonnull %12) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 2008, i1 false) #17
  call void @_ZN4base5debug10StackTraceC1Ev(%"class.base::debug::StackTrace"* nonnull %1) #17
  call void @llvm.lifetime.end.p0i8(i64 2008, i8* nonnull %12) #17
  %13 = bitcast %struct.sigaction* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %13) #17
  %14 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %3, i64 0, i32 1
  %15 = bitcast %struct.__sigset_t* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 144, i1 false)
  %16 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %3, i64 0, i32 2
  store i32 -2147483644, i32* %16, align 8
  %17 = bitcast %struct.sigaction* %3 to void (i32, %struct.siginfo_t*, i8*)**
  store void (i32, %struct.siginfo_t*, i8*)* @_ZN4base5debug12_GLOBAL__N_122StackDumpSignalHandlerEiP9siginfo_tPv, void (i32, %struct.siginfo_t*, i8*)** %17, align 8
  %18 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %3, i64 0, i32 1
  %19 = call i32 @sigemptyset(%struct.__sigset_t* %18) #17
  %20 = call i32 @sigaction(i32 4, %struct.sigaction* nonnull %3, %struct.sigaction* null) #17
  %21 = or i32 %20, %11
  %22 = call i32 @sigaction(i32 6, %struct.sigaction* nonnull %3, %struct.sigaction* null) #17
  %23 = or i32 %21, %22
  %24 = call i32 @sigaction(i32 8, %struct.sigaction* nonnull %3, %struct.sigaction* null) #17
  %25 = or i32 %23, %24
  %26 = call i32 @sigaction(i32 7, %struct.sigaction* nonnull %3, %struct.sigaction* null) #17
  %27 = or i32 %25, %26
  %28 = call i32 @sigaction(i32 11, %struct.sigaction* nonnull %3, %struct.sigaction* null) #17
  %29 = or i32 %27, %28
  %30 = icmp eq i32 %29, 0
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %13) #17
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %5) #17
  ret i1 %30
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.base::debug::(anonymous namespace)::SandboxSymbolizeHelper"* @_ZN4base5debug12_GLOBAL__N_122SandboxSymbolizeHelper11GetInstanceEv() unnamed_addr #0 align 2 {
  %1 = alloca %"class.base::ScopedGeneric", align 8
  %2 = alloca %"class.logging::LogMessage", align 8
  %3 = alloca %"class.base::ScopedGeneric", align 8
  %4 = alloca %struct.Elf64_Ehdr, align 8
  %5 = alloca %struct.Elf64_Phdr, align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.logging::LogMessage", align 8
  %8 = alloca %"class.logging::LogMessage", align 8
  %9 = load atomic i64, i64* @_ZN4base9SingletonINS_5debug12_GLOBAL__N_122SandboxSymbolizeHelperENS_20LeakySingletonTraitsIS3_EES3_E9instance_E acquire, align 8
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %242, label %11

11:                                               ; preds = %0
  %12 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* nonnull @_ZN4base9SingletonINS_5debug12_GLOBAL__N_122SandboxSymbolizeHelperENS_20LeakySingletonTraitsIS3_EES3_E9instance_E) #17
  br i1 %12, label %13, label %240

13:                                               ; preds = %11
  %14 = tail call i8* @_Znwm(i64 56) #18
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 16
  %16 = bitcast i8* %15 to %"class.std::__1::__tree_end_node"*
  %17 = getelementptr inbounds i8, i8* %14, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #17
  %18 = bitcast i8* %17 to i8**
  store i8* %15, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %14, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #17
  %20 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #17
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 24, i1 false) #17
  %22 = call zeroext i1 @_ZN4base5debug12ReadProcMapsEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull %6) #17
  br i1 %22, label %30, label %23

23:                                               ; preds = %13
  %24 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #17
  br i1 %24, label %25, label %136

25:                                               ; preds = %23
  %26 = bitcast %"class.logging::LogMessage"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %26) #17
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 670, i32 2) #17
  %27 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %7, i64 0, i32 2
  %28 = bitcast %"class.std::__1::basic_ostringstream"* %27 to %"class.std::__1::basic_ostream"*
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %28, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i64 30) #17
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %26) #17
  br label %136

30:                                               ; preds = %13
  %31 = bitcast i8* %19 to %"class.std::__1::vector"*
  %32 = call zeroext i1 @_ZN4base5debug13ParseProcMapsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_6vectorINS0_18MappedMemoryRegionENS5_ISB_EEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, %"class.std::__1::vector"* %31) #17
  br i1 %32, label %40, label %33

33:                                               ; preds = %30
  %34 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #17
  br i1 %34, label %35, label %136

35:                                               ; preds = %33
  %36 = bitcast %"class.logging::LogMessage"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %36) #17
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 676, i32 2) #17
  %37 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %8, i64 0, i32 2
  %38 = bitcast %"class.std::__1::basic_ostringstream"* %37 to %"class.std::__1::basic_ostream"*
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3, i64 0, i64 0), i64 47) #17
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %36) #17
  br label %136

40:                                               ; preds = %30
  %41 = bitcast %"class.base::ScopedGeneric"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #17
  %42 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %3, i64 0, i32 0
  %43 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %3, i64 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %3, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 16, i1 false) #17
  br label %45

45:                                               ; preds = %48, %40
  %46 = call i32 (i8*, i32, ...) @open64(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0), i32 524288) #17
  %47 = icmp eq i32 %46, -1
  br i1 %47, label %48, label %53

48:                                               ; preds = %45
  %49 = tail call i32* @__errno_location() #19
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 4
  br i1 %51, label %45, label %52

52:                                               ; preds = %48
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  store i32 -1, i32* %43, align 8
  store i8 0, i8* %44, align 4
  br label %135

53:                                               ; preds = %45
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  store i32 %46, i32* %43, align 8
  store i8 0, i8* %44, align 4
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %3, i32 %46) #17
  %54 = load i32, i32* %43, align 8
  %55 = icmp eq i32 %54, -1
  br i1 %55, label %135, label %56

56:                                               ; preds = %53
  %57 = bitcast i8* %19 to %"struct.base::debug::MappedMemoryRegion"**
  %58 = load %"struct.base::debug::MappedMemoryRegion"*, %"struct.base::debug::MappedMemoryRegion"** %57, align 8
  %59 = getelementptr inbounds i8, i8* %14, i64 40
  %60 = bitcast i8* %59 to %"struct.base::debug::MappedMemoryRegion"**
  %61 = load %"struct.base::debug::MappedMemoryRegion"*, %"struct.base::debug::MappedMemoryRegion"** %60, align 8
  %62 = icmp eq %"struct.base::debug::MappedMemoryRegion"* %58, %61
  br i1 %62, label %135, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %4, i64 0, i32 0, i64 0
  %65 = bitcast %struct.Elf64_Ehdr* %4 to i32*
  %66 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %4, i64 0, i32 1
  %67 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %4, i64 0, i32 10
  %68 = bitcast %struct.Elf64_Phdr* %5 to i8*
  %69 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %4, i64 0, i32 5
  %70 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %5, i64 0, i32 0
  %71 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %5, i64 0, i32 2
  %72 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %5, i64 0, i32 3
  br label %73

73:                                               ; preds = %130, %63
  %74 = phi i64 [ 0, %63 ], [ %131, %130 ]
  %75 = phi %"struct.base::debug::MappedMemoryRegion"* [ %58, %63 ], [ %133, %130 ]
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %64) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 64, i1 false) #17
  %76 = getelementptr inbounds %"struct.base::debug::MappedMemoryRegion", %"struct.base::debug::MappedMemoryRegion"* %75, i64 0, i32 4
  %77 = load i8, i8* %76, align 8
  %78 = and i8 %77, 1
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %130, label %80

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"struct.base::debug::MappedMemoryRegion", %"struct.base::debug::MappedMemoryRegion"* %75, i64 0, i32 0
  %82 = load i64, i64* %81, align 8
  br label %83

83:                                               ; preds = %86, %80
  %84 = load i32, i32* %43, align 8
  %85 = call i64 @pread64(i32 %84, i8* nonnull %64, i64 64, i64 %82) #17
  switch i64 %85, label %130 [
    i64 -1, label %86
    i64 64, label %90
  ]

86:                                               ; preds = %83
  %87 = tail call i32* @__errno_location() #19
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, 4
  br i1 %89, label %83, label %130

90:                                               ; preds = %83
  %91 = load i32, i32* %65, align 8
  %92 = icmp eq i32 %91, 1179403647
  br i1 %92, label %93, label %130

93:                                               ; preds = %90
  %94 = load i16, i16* %66, align 8
  switch i16 %94, label %130 [
    i16 2, label %95
    i16 3, label %96
  ]

95:                                               ; preds = %93
  br label %130

96:                                               ; preds = %93
  %97 = load i64, i64* %81, align 8
  %98 = load i16, i16* %67, align 8
  %99 = icmp eq i16 %98, 0
  br i1 %99, label %130, label %100

100:                                              ; preds = %96, %125
  %101 = phi i32 [ %126, %125 ], [ 0, %96 ]
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %68) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 56, i1 false) #17
  %102 = load i64, i64* %81, align 8
  %103 = load i64, i64* %69, align 8
  %104 = zext i32 %101 to i64
  %105 = mul nuw nsw i64 %104, 56
  %106 = add i64 %102, %105
  %107 = add i64 %106, %103
  br label %108

108:                                              ; preds = %111, %100
  %109 = load i32, i32* %43, align 8
  %110 = call i64 @pread64(i32 %109, i8* nonnull %68, i64 56, i64 %107) #17
  switch i64 %110, label %125 [
    i64 -1, label %111
    i64 56, label %115
  ]

111:                                              ; preds = %108
  %112 = tail call i32* @__errno_location() #19
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %113, 4
  br i1 %114, label %108, label %125

115:                                              ; preds = %108
  %116 = load i32, i32* %70, align 8
  %117 = icmp eq i32 %116, 1
  %118 = load i64, i64* %71, align 8
  %119 = icmp eq i64 %118, 0
  %120 = and i1 %117, %119
  br i1 %120, label %121, label %125

121:                                              ; preds = %115
  %122 = load i64, i64* %81, align 8
  %123 = load i64, i64* %72, align 8
  %124 = sub i64 %122, %123
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %68) #17
  br label %130

125:                                              ; preds = %111, %108, %115
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %68) #17
  %126 = add i32 %101, 1
  %127 = load i16, i16* %67, align 8
  %128 = zext i16 %127 to i32
  %129 = icmp eq i32 %126, %128
  br i1 %129, label %130, label %100

130:                                              ; preds = %86, %83, %125, %121, %96, %95, %93, %90, %73
  %131 = phi i64 [ %74, %93 ], [ 0, %95 ], [ %74, %90 ], [ %74, %73 ], [ %124, %121 ], [ %97, %96 ], [ %97, %125 ], [ %74, %83 ], [ %74, %86 ]
  %132 = getelementptr inbounds %"struct.base::debug::MappedMemoryRegion", %"struct.base::debug::MappedMemoryRegion"* %75, i64 0, i32 3
  store i64 %131, i64* %132, align 8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %64) #17
  %133 = getelementptr inbounds %"struct.base::debug::MappedMemoryRegion", %"struct.base::debug::MappedMemoryRegion"* %75, i64 1
  %134 = icmp eq %"struct.base::debug::MappedMemoryRegion"* %133, %61
  br i1 %134, label %135, label %73

135:                                              ; preds = %130, %56, %53, %52
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #17
  store i8 1, i8* %14, align 8
  br label %136

136:                                              ; preds = %135, %35, %33, %25, %23
  %137 = phi i1 [ true, %135 ], [ false, %23 ], [ false, %25 ], [ false, %33 ], [ false, %35 ]
  %138 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %139 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %138, i64 0, i32 1, i32 0
  %140 = load i8, i8* %139, align 1
  %141 = icmp slt i8 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %136
  %143 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %143) #18
  br label %144

144:                                              ; preds = %142, %136
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #17
  br i1 %137, label %145, label %238

145:                                              ; preds = %144
  %146 = bitcast i8* %19 to %"struct.base::debug::MappedMemoryRegion"**
  %147 = load %"struct.base::debug::MappedMemoryRegion"*, %"struct.base::debug::MappedMemoryRegion"** %146, align 8
  %148 = getelementptr inbounds i8, i8* %14, i64 40
  %149 = bitcast i8* %148 to %"struct.base::debug::MappedMemoryRegion"**
  %150 = load %"struct.base::debug::MappedMemoryRegion"*, %"struct.base::debug::MappedMemoryRegion"** %149, align 8
  %151 = icmp eq %"struct.base::debug::MappedMemoryRegion"* %147, %150
  br i1 %151, label %237, label %152

152:                                              ; preds = %145
  %153 = bitcast i8* %17 to %"class.std::__1::__tree"*
  %154 = bitcast %"class.logging::LogMessage"* %2 to i8*
  %155 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %2, i64 0, i32 2
  %156 = bitcast %"class.std::__1::basic_ostringstream"* %155 to %"class.std::__1::basic_ostream"*
  %157 = bitcast %"class.base::ScopedGeneric"* %1 to i8*
  %158 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %1, i64 0, i32 0
  %159 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %1, i64 0, i32 1, i32 0
  %160 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %1, i64 0, i32 2
  br label %161

161:                                              ; preds = %233, %152
  %162 = phi %"struct.base::debug::MappedMemoryRegion"* [ %147, %152 ], [ %234, %233 ]
  %163 = getelementptr inbounds %"struct.base::debug::MappedMemoryRegion", %"struct.base::debug::MappedMemoryRegion"* %162, i64 0, i32 4
  %164 = load i8, i8* %163, align 8
  %165 = and i8 %164, 7
  %166 = icmp eq i8 %165, 5
  br i1 %166, label %167, label %233

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"struct.base::debug::MappedMemoryRegion", %"struct.base::debug::MappedMemoryRegion"* %162, i64 0, i32 5
  %169 = bitcast %"class.std::__1::basic_string"* %168 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %170 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %169, i64 0, i32 1, i32 0
  %171 = load i8, i8* %170, align 1
  %172 = icmp slt i8 %171, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"struct.base::debug::MappedMemoryRegion", %"struct.base::debug::MappedMemoryRegion"* %162, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %175 = load i64, i64* %174, align 8
  br label %178

176:                                              ; preds = %167
  %177 = zext i8 %171 to i64
  br label %178

178:                                              ; preds = %176, %173
  %179 = phi i64 [ %175, %173 ], [ %177, %176 ]
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %233, label %181

181:                                              ; preds = %178
  br i1 %172, label %182, label %185

182:                                              ; preds = %181
  %183 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %168, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load i8*, i8** %183, align 8
  br label %187

185:                                              ; preds = %181
  %186 = bitcast %"class.std::__1::basic_string"* %168 to i8*
  br label %187

187:                                              ; preds = %185, %182
  %188 = phi i8* [ %184, %182 ], [ %186, %185 ]
  %189 = load i8, i8* %188, align 1
  %190 = icmp eq i8 %189, 91
  br i1 %190, label %233, label %191

191:                                              ; preds = %187
  %192 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %168, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = load i8*, i8** %192, align 8
  %194 = bitcast %"class.std::__1::basic_string"* %168 to i8*
  %195 = select i1 %172, i8* %193, i8* %194
  %196 = getelementptr inbounds %"struct.base::debug::MappedMemoryRegion", %"struct.base::debug::MappedMemoryRegion"* %162, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %197 = load i64, i64* %196, align 8
  %198 = zext i8 %171 to i64
  %199 = select i1 %172, i64 %197, i64 %198
  %200 = call zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %195, i64 %199, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i64 10, i32 0) #17
  br i1 %200, label %233, label %201

201:                                              ; preds = %191
  %202 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base13ScopedGenericIiNS8_8internal19ScopedFDCloseTraitsEEEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE4findIS7_EENS_15__tree_iteratorISD_PNS_11__tree_nodeISD_PvEElEERKT_(%"class.std::__1::__tree"* %153, %"class.std::__1::basic_string"* dereferenceable(24) %168) #17
  %203 = icmp eq %"class.std::__1::__tree_end_node"* %202, %16
  br i1 %203, label %204, label %233

204:                                              ; preds = %201
  %205 = load i8, i8* %170, align 1
  %206 = icmp slt i8 %205, 0
  br i1 %206, label %207, label %209

207:                                              ; preds = %204
  %208 = load i8*, i8** %192, align 8
  br label %209

209:                                              ; preds = %207, %204
  %210 = phi i8* [ %208, %207 ], [ %194, %204 ]
  %211 = call i32 (i8*, i32, ...) @open64(i8* %210, i32 524288) #17
  %212 = icmp sgt i32 %211, -1
  br i1 %212, label %213, label %215

213:                                              ; preds = %209
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %157) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %158, align 8
  store i32 %211, i32* %159, align 8
  store i8 0, i8* %160, align 4
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %1, i32 %211) #17
  %214 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base13ScopedGenericIiNS8_8internal19ScopedFDCloseTraitsEEEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE25__emplace_unique_key_argsIS7_JRKS7_SC_EEENS_4pairINS_15__tree_iteratorISD_PNS_11__tree_nodeISD_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %153, %"class.std::__1::basic_string"* dereferenceable(24) %168, %"class.std::__1::basic_string"* dereferenceable(24) %168, %"class.base::ScopedGeneric"* nonnull dereferenceable(16) %1) #17
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %1) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %157) #17
  br label %233

215:                                              ; preds = %209
  %216 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 1) #17
  br i1 %216, label %217, label %233

217:                                              ; preds = %215
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %154) #17
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %2, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 722, i32 1) #17
  %218 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %156, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.11, i64 0, i64 0), i64 21) #17
  %219 = load i8, i8* %170, align 1
  %220 = icmp slt i8 %219, 0
  %221 = load i8*, i8** %192, align 8
  %222 = load i64, i64* %196, align 8
  %223 = zext i8 %219 to i64
  %224 = select i1 %220, i8* %221, i8* %194
  %225 = select i1 %220, i64 %222, i64 %223
  %226 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %218, i8* %224, i64 %225) #17
  %227 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %226, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i64 10) #17
  %228 = tail call i32* @__errno_location() #19
  %229 = load i32, i32* %228, align 4
  %230 = call i8* @strerror(i32 %229) #17
  %231 = call i64 @strlen(i8* %230) #17
  %232 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %227, i8* %230, i64 %231) #17
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %154) #17
  br label %233

233:                                              ; preds = %217, %215, %213, %201, %191, %187, %178, %161
  %234 = getelementptr inbounds %"struct.base::debug::MappedMemoryRegion", %"struct.base::debug::MappedMemoryRegion"* %162, i64 1
  %235 = load %"struct.base::debug::MappedMemoryRegion"*, %"struct.base::debug::MappedMemoryRegion"** %149, align 8
  %236 = icmp eq %"struct.base::debug::MappedMemoryRegion"* %234, %235
  br i1 %236, label %237, label %161

237:                                              ; preds = %233, %145
  call void @_ZN6google38InstallSymbolizeOpenObjectFileCallbackEPFimRmS0_PciE(i32 (i64, i64*, i64*, i8*, i32)* nonnull @_ZN4base5debug12_GLOBAL__N_122SandboxSymbolizeHelper26OpenObjectFileContainingPcEmRmS3_Pci) #17
  br label %238

238:                                              ; preds = %237, %144
  %239 = ptrtoint i8* %14 to i64
  call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* nonnull @_ZN4base9SingletonINS_5debug12_GLOBAL__N_122SandboxSymbolizeHelperENS_20LeakySingletonTraitsIS3_EES3_E9instance_E, i64 %239, void (i8*)* null, i8* null) #17
  br label %242

240:                                              ; preds = %11
  %241 = load atomic i64, i64* @_ZN4base9SingletonINS_5debug12_GLOBAL__N_122SandboxSymbolizeHelperENS_20LeakySingletonTraitsIS3_EES3_E9instance_E acquire, align 8
  br label %242

242:                                              ; preds = %0, %238, %240
  %243 = phi i64 [ %9, %0 ], [ %239, %238 ], [ %241, %240 ]
  %244 = inttoptr i64 %243 to %"class.base::debug::(anonymous namespace)::SandboxSymbolizeHelper"*
  ret %"class.base::debug::(anonymous namespace)::SandboxSymbolizeHelper"* %244
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare i32 @sigemptyset(%struct.__sigset_t*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @sigaction(i32, %struct.sigaction*, %struct.sigaction*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base5debug12_GLOBAL__N_122StackDumpSignalHandlerEiP9siginfo_tPv(i32, %struct.siginfo_t*, i8*) #0 {
  %4 = alloca %struct.sigaction, align 8
  %5 = alloca [1024 x i8], align 16
  %6 = alloca %"class.base::debug::StackTrace", align 8
  %7 = alloca [23 x %struct.anon.33], align 16
  %8 = load i1 (i32, %struct.siginfo_t*, i8*)*, i1 (i32, %struct.siginfo_t*, i8*)** @_ZN4base5debug12_GLOBAL__N_117try_handle_signalE, align 8
  %9 = icmp eq i1 (i32, %struct.siginfo_t*, i8*)* %8, null
  br i1 %9, label %21, label %10

10:                                               ; preds = %3
  %11 = tail call zeroext i1 %8(i32 %0, %struct.siginfo_t* %1, i8* %2) #17
  br i1 %11, label %12, label %21

12:                                               ; preds = %10
  %13 = bitcast %struct.sigaction* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %13) #17
  %14 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %4, i64 0, i32 1
  %15 = bitcast %struct.__sigset_t* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 144, i1 false)
  %16 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %4, i64 0, i32 2
  store i32 -2147483644, i32* %16, align 8
  %17 = bitcast %struct.sigaction* %4 to void (i32, %struct.siginfo_t*, i8*)**
  store void (i32, %struct.siginfo_t*, i8*)* @_ZN4base5debug12_GLOBAL__N_122StackDumpSignalHandlerEiP9siginfo_tPv, void (i32, %struct.siginfo_t*, i8*)** %17, align 8
  %18 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %4, i64 0, i32 1
  %19 = call i32 @sigemptyset(%struct.__sigset_t* %18) #17
  %20 = call i32 @sigaction(i32 %0, %struct.sigaction* nonnull %4, %struct.sigaction* null) #17
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %13) #17
  br label %529

21:                                               ; preds = %3, %10
  store volatile i32 1, i32* @_ZN4base5debug12_GLOBAL__N_117in_signal_handlerE, align 4
  %22 = tail call zeroext i1 @_ZN4base5debug13BeingDebuggedEv() #17
  br i1 %22, label %23, label %24

23:                                               ; preds = %21
  tail call void @_ZN4base5debug13BreakDebuggerEv() #17
  br label %24

24:                                               ; preds = %23, %21
  br label %25

25:                                               ; preds = %24, %28
  %26 = tail call i64 @write(i32 2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i64 0, i64 0), i64 16) #17
  %27 = icmp eq i64 %26, -1
  br i1 %27, label %28, label %32

28:                                               ; preds = %25
  %29 = tail call i32* @__errno_location() #19
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 4
  br i1 %31, label %25, label %32

32:                                               ; preds = %25, %28
  %33 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %33) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %33, i8 0, i64 1024, i1 false)
  %34 = sext i32 %0 to i64
  %35 = icmp slt i32 %0, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %32
  %37 = sub nsw i64 0, %34
  %38 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 1
  store i8 45, i8* %33, align 16
  br label %39

39:                                               ; preds = %36, %32
  %40 = phi i64 [ 1022, %36 ], [ 1023, %32 ]
  %41 = phi i8* [ %38, %36 ], [ %33, %32 ]
  %42 = phi i64 [ %37, %36 ], [ %34, %32 ]
  br label %43

43:                                               ; preds = %49, %39
  %44 = phi i64 [ %42, %39 ], [ %54, %49 ]
  %45 = phi i64 [ 0, %39 ], [ %53, %49 ]
  %46 = getelementptr inbounds i8, i8* %41, i64 %45
  %47 = icmp eq i64 %45, %40
  br i1 %47, label %48, label %49

48:                                               ; preds = %43
  store i8 0, i8* %33, align 16
  br label %74

49:                                               ; preds = %43
  %50 = urem i64 %44, 10
  %51 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %50
  %52 = load i8, i8* %51, align 1
  %53 = add nuw nsw i64 %45, 1
  store i8 %52, i8* %46, align 1
  %54 = udiv i64 %44, 10
  %55 = icmp ugt i64 %44, 9
  br i1 %55, label %43, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds i8, i8* %41, i64 %53
  store i8 0, i8* %57, align 1
  %58 = icmp eq i64 %45, 0
  br i1 %58, label %74, label %59

59:                                               ; preds = %56
  %60 = load i8, i8* %41, align 1
  store i8 %60, i8* %46, align 1
  store i8 %52, i8* %41, align 1
  %61 = add nsw i64 %45, -1
  %62 = icmp sgt i64 %61, 1
  br i1 %62, label %63, label %74

63:                                               ; preds = %59
  %64 = getelementptr inbounds i8, i8* %41, i64 %61
  %65 = getelementptr inbounds i8, i8* %41, i64 1
  br label %66

66:                                               ; preds = %63, %66
  %67 = phi i8* [ %72, %66 ], [ %64, %63 ]
  %68 = phi i8* [ %71, %66 ], [ %65, %63 ]
  %69 = load i8, i8* %67, align 1
  %70 = load i8, i8* %68, align 1
  store i8 %70, i8* %67, align 1
  %71 = getelementptr inbounds i8, i8* %68, i64 1
  store i8 %69, i8* %68, align 1
  %72 = getelementptr inbounds i8, i8* %67, i64 -1
  %73 = icmp ugt i8* %72, %71
  br i1 %73, label %66, label %74

74:                                               ; preds = %66, %56, %59, %48
  br label %75

75:                                               ; preds = %74, %79
  %76 = call i64 @strlen(i8* nonnull %33) #20
  %77 = call i64 @write(i32 2, i8* nonnull %33, i64 %76) #17
  %78 = icmp eq i64 %77, -1
  br i1 %78, label %79, label %83

79:                                               ; preds = %75
  %80 = tail call i32* @__errno_location() #19
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 4
  br i1 %82, label %75, label %83

83:                                               ; preds = %75, %79
  switch i32 %0, label %264 [
    i32 7, label %84
    i32 8, label %115
    i32 4, label %181
    i32 11, label %240
  ]

84:                                               ; preds = %83
  %85 = getelementptr inbounds %struct.siginfo_t, %struct.siginfo_t* %1, i64 0, i32 2
  %86 = load i32, i32* %85, align 8
  switch i32 %86, label %108 [
    i32 1, label %87
    i32 2, label %94
    i32 3, label %101
  ]

87:                                               ; preds = %84, %90
  %88 = call i64 @write(i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0), i64 12) #17
  %89 = icmp eq i64 %88, -1
  br i1 %89, label %90, label %264

90:                                               ; preds = %87
  %91 = tail call i32* @__errno_location() #19
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 4
  br i1 %93, label %87, label %264

94:                                               ; preds = %84, %97
  %95 = call i64 @write(i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i64 12) #17
  %96 = icmp eq i64 %95, -1
  br i1 %96, label %97, label %264

97:                                               ; preds = %94
  %98 = tail call i32* @__errno_location() #19
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, 4
  br i1 %100, label %94, label %264

101:                                              ; preds = %84, %104
  %102 = call i64 @write(i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i64 12) #17
  %103 = icmp eq i64 %102, -1
  br i1 %103, label %104, label %264

104:                                              ; preds = %101
  %105 = tail call i32* @__errno_location() #19
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %106, 4
  br i1 %107, label %101, label %264

108:                                              ; preds = %84, %111
  %109 = call i64 @write(i32 2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i64 0, i64 0), i64 11) #17
  %110 = icmp eq i64 %109, -1
  br i1 %110, label %111, label %264

111:                                              ; preds = %108
  %112 = tail call i32* @__errno_location() #19
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %113, 4
  br i1 %114, label %108, label %264

115:                                              ; preds = %83
  %116 = getelementptr inbounds %struct.siginfo_t, %struct.siginfo_t* %1, i64 0, i32 2
  %117 = load i32, i32* %116, align 8
  switch i32 %117, label %174 [
    i32 3, label %118
    i32 7, label %125
    i32 4, label %132
    i32 6, label %139
    i32 8, label %146
    i32 5, label %153
    i32 1, label %160
    i32 2, label %167
  ]

118:                                              ; preds = %115, %121
  %119 = call i64 @write(i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0), i64 12) #17
  %120 = icmp eq i64 %119, -1
  br i1 %120, label %121, label %264

121:                                              ; preds = %118
  %122 = tail call i32* @__errno_location() #19
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %123, 4
  br i1 %124, label %118, label %264

125:                                              ; preds = %115, %128
  %126 = call i64 @write(i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0), i64 12) #17
  %127 = icmp eq i64 %126, -1
  br i1 %127, label %128, label %264

128:                                              ; preds = %125
  %129 = tail call i32* @__errno_location() #19
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, 4
  br i1 %131, label %125, label %264

132:                                              ; preds = %115, %135
  %133 = call i64 @write(i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i64 0, i64 0), i64 12) #17
  %134 = icmp eq i64 %133, -1
  br i1 %134, label %135, label %264

135:                                              ; preds = %132
  %136 = tail call i32* @__errno_location() #19
  %137 = load i32, i32* %136, align 4
  %138 = icmp eq i32 %137, 4
  br i1 %138, label %132, label %264

139:                                              ; preds = %115, %142
  %140 = call i64 @write(i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0), i64 12) #17
  %141 = icmp eq i64 %140, -1
  br i1 %141, label %142, label %264

142:                                              ; preds = %139
  %143 = tail call i32* @__errno_location() #19
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, 4
  br i1 %145, label %139, label %264

146:                                              ; preds = %115, %149
  %147 = call i64 @write(i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i64 12) #17
  %148 = icmp eq i64 %147, -1
  br i1 %148, label %149, label %264

149:                                              ; preds = %146
  %150 = tail call i32* @__errno_location() #19
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, 4
  br i1 %152, label %146, label %264

153:                                              ; preds = %115, %156
  %154 = call i64 @write(i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.25, i64 0, i64 0), i64 12) #17
  %155 = icmp eq i64 %154, -1
  br i1 %155, label %156, label %264

156:                                              ; preds = %153
  %157 = tail call i32* @__errno_location() #19
  %158 = load i32, i32* %157, align 4
  %159 = icmp eq i32 %158, 4
  br i1 %159, label %153, label %264

160:                                              ; preds = %115, %163
  %161 = call i64 @write(i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i64 12) #17
  %162 = icmp eq i64 %161, -1
  br i1 %162, label %163, label %264

163:                                              ; preds = %160
  %164 = tail call i32* @__errno_location() #19
  %165 = load i32, i32* %164, align 4
  %166 = icmp eq i32 %165, 4
  br i1 %166, label %160, label %264

167:                                              ; preds = %115, %170
  %168 = call i64 @write(i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.27, i64 0, i64 0), i64 12) #17
  %169 = icmp eq i64 %168, -1
  br i1 %169, label %170, label %264

170:                                              ; preds = %167
  %171 = tail call i32* @__errno_location() #19
  %172 = load i32, i32* %171, align 4
  %173 = icmp eq i32 %172, 4
  br i1 %173, label %167, label %264

174:                                              ; preds = %115, %177
  %175 = call i64 @write(i32 2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i64 0, i64 0), i64 11) #17
  %176 = icmp eq i64 %175, -1
  br i1 %176, label %177, label %264

177:                                              ; preds = %174
  %178 = tail call i32* @__errno_location() #19
  %179 = load i32, i32* %178, align 4
  %180 = icmp eq i32 %179, 4
  br i1 %180, label %174, label %264

181:                                              ; preds = %83
  %182 = getelementptr inbounds %struct.siginfo_t, %struct.siginfo_t* %1, i64 0, i32 2
  %183 = load i32, i32* %182, align 8
  switch i32 %183, label %233 [
    i32 8, label %184
    i32 7, label %191
    i32 2, label %198
    i32 3, label %205
    i32 4, label %212
    i32 5, label %219
    i32 6, label %226
  ]

184:                                              ; preds = %181, %187
  %185 = call i64 @write(i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i64 0, i64 0), i64 12) #17
  %186 = icmp eq i64 %185, -1
  br i1 %186, label %187, label %264

187:                                              ; preds = %184
  %188 = tail call i32* @__errno_location() #19
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, 4
  br i1 %190, label %184, label %264

191:                                              ; preds = %181, %194
  %192 = call i64 @write(i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0), i64 12) #17
  %193 = icmp eq i64 %192, -1
  br i1 %193, label %194, label %264

194:                                              ; preds = %191
  %195 = tail call i32* @__errno_location() #19
  %196 = load i32, i32* %195, align 4
  %197 = icmp eq i32 %196, 4
  br i1 %197, label %191, label %264

198:                                              ; preds = %181, %201
  %199 = call i64 @write(i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.30, i64 0, i64 0), i64 12) #17
  %200 = icmp eq i64 %199, -1
  br i1 %200, label %201, label %264

201:                                              ; preds = %198
  %202 = tail call i32* @__errno_location() #19
  %203 = load i32, i32* %202, align 4
  %204 = icmp eq i32 %203, 4
  br i1 %204, label %198, label %264

205:                                              ; preds = %181, %208
  %206 = call i64 @write(i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i64 0, i64 0), i64 12) #17
  %207 = icmp eq i64 %206, -1
  br i1 %207, label %208, label %264

208:                                              ; preds = %205
  %209 = tail call i32* @__errno_location() #19
  %210 = load i32, i32* %209, align 4
  %211 = icmp eq i32 %210, 4
  br i1 %211, label %205, label %264

212:                                              ; preds = %181, %215
  %213 = call i64 @write(i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i64 0, i64 0), i64 12) #17
  %214 = icmp eq i64 %213, -1
  br i1 %214, label %215, label %264

215:                                              ; preds = %212
  %216 = tail call i32* @__errno_location() #19
  %217 = load i32, i32* %216, align 4
  %218 = icmp eq i32 %217, 4
  br i1 %218, label %212, label %264

219:                                              ; preds = %181, %222
  %220 = call i64 @write(i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i64 0, i64 0), i64 12) #17
  %221 = icmp eq i64 %220, -1
  br i1 %221, label %222, label %264

222:                                              ; preds = %219
  %223 = tail call i32* @__errno_location() #19
  %224 = load i32, i32* %223, align 4
  %225 = icmp eq i32 %224, 4
  br i1 %225, label %219, label %264

226:                                              ; preds = %181, %229
  %227 = call i64 @write(i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34, i64 0, i64 0), i64 12) #17
  %228 = icmp eq i64 %227, -1
  br i1 %228, label %229, label %264

229:                                              ; preds = %226
  %230 = tail call i32* @__errno_location() #19
  %231 = load i32, i32* %230, align 4
  %232 = icmp eq i32 %231, 4
  br i1 %232, label %226, label %264

233:                                              ; preds = %181, %236
  %234 = call i64 @write(i32 2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i64 0, i64 0), i64 11) #17
  %235 = icmp eq i64 %234, -1
  br i1 %235, label %236, label %264

236:                                              ; preds = %233
  %237 = tail call i32* @__errno_location() #19
  %238 = load i32, i32* %237, align 4
  %239 = icmp eq i32 %238, 4
  br i1 %239, label %233, label %264

240:                                              ; preds = %83
  %241 = getelementptr inbounds %struct.siginfo_t, %struct.siginfo_t* %1, i64 0, i32 2
  %242 = load i32, i32* %241, align 8
  switch i32 %242, label %257 [
    i32 1, label %243
    i32 2, label %250
  ]

243:                                              ; preds = %240, %246
  %244 = call i64 @write(i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.35, i64 0, i64 0), i64 13) #17
  %245 = icmp eq i64 %244, -1
  br i1 %245, label %246, label %264

246:                                              ; preds = %243
  %247 = tail call i32* @__errno_location() #19
  %248 = load i32, i32* %247, align 4
  %249 = icmp eq i32 %248, 4
  br i1 %249, label %243, label %264

250:                                              ; preds = %240, %253
  %251 = call i64 @write(i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i64 0, i64 0), i64 13) #17
  %252 = icmp eq i64 %251, -1
  br i1 %252, label %253, label %264

253:                                              ; preds = %250
  %254 = tail call i32* @__errno_location() #19
  %255 = load i32, i32* %254, align 4
  %256 = icmp eq i32 %255, 4
  br i1 %256, label %250, label %264

257:                                              ; preds = %240, %260
  %258 = call i64 @write(i32 2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i64 0, i64 0), i64 11) #17
  %259 = icmp eq i64 %258, -1
  br i1 %259, label %260, label %264

260:                                              ; preds = %257
  %261 = tail call i32* @__errno_location() #19
  %262 = load i32, i32* %261, align 4
  %263 = icmp eq i32 %262, 4
  br i1 %263, label %257, label %264

264:                                              ; preds = %253, %250, %246, %243, %260, %257, %229, %226, %222, %219, %215, %212, %208, %205, %201, %198, %194, %191, %187, %184, %236, %233, %170, %167, %163, %160, %156, %153, %149, %146, %142, %139, %135, %132, %128, %125, %121, %118, %177, %174, %104, %101, %97, %94, %90, %87, %111, %108, %83
  switch i32 %0, label %313 [
    i32 11, label %265
    i32 8, label %265
    i32 7, label %265
    i32 4, label %265
  ]

265:                                              ; preds = %264, %264, %264, %264
  %266 = getelementptr inbounds %struct.siginfo_t, %struct.siginfo_t* %1, i64 0, i32 4
  %267 = bitcast %union.anon.15* %266 to i64*
  %268 = load i64, i64* %267, align 8
  br label %269

269:                                              ; preds = %276, %265
  %270 = phi i64 [ 12, %265 ], [ %284, %276 ]
  %271 = phi i64 [ %268, %265 ], [ %281, %276 ]
  %272 = phi i64 [ 0, %265 ], [ %280, %276 ]
  %273 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 %272
  %274 = icmp eq i64 %272, 1023
  br i1 %274, label %275, label %276

275:                                              ; preds = %269
  store i8 0, i8* %33, align 16
  br label %304

276:                                              ; preds = %269
  %277 = and i64 %271, 15
  %278 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %277
  %279 = load i8, i8* %278, align 1
  %280 = add nuw nsw i64 %272, 1
  store i8 %279, i8* %273, align 1
  %281 = lshr i64 %271, 4
  %282 = icmp eq i64 %270, 0
  %283 = add i64 %270, -1
  %284 = select i1 %282, i64 0, i64 %283
  %285 = icmp ugt i64 %271, 15
  %286 = icmp ne i64 %284, 0
  %287 = or i1 %286, %285
  br i1 %287, label %269, label %288

288:                                              ; preds = %276
  %289 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 %280
  store i8 0, i8* %289, align 1
  %290 = icmp eq i64 %272, 0
  br i1 %290, label %304, label %291

291:                                              ; preds = %288
  %292 = load i8, i8* %33, align 16
  store i8 %292, i8* %273, align 1
  %293 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 1
  store i8 %279, i8* %33, align 16
  %294 = getelementptr inbounds i8, i8* %273, i64 -1
  %295 = icmp ugt i8* %294, %293
  br i1 %295, label %296, label %304

296:                                              ; preds = %291, %296
  %297 = phi i8* [ %302, %296 ], [ %294, %291 ]
  %298 = phi i8* [ %301, %296 ], [ %293, %291 ]
  %299 = load i8, i8* %297, align 1
  %300 = load i8, i8* %298, align 1
  store i8 %300, i8* %297, align 1
  %301 = getelementptr inbounds i8, i8* %298, i64 1
  store i8 %299, i8* %298, align 1
  %302 = getelementptr inbounds i8, i8* %297, i64 -1
  %303 = icmp ugt i8* %302, %301
  br i1 %303, label %296, label %304

304:                                              ; preds = %296, %291, %288, %275
  br label %305

305:                                              ; preds = %304, %309
  %306 = call i64 @strlen(i8* nonnull %33) #20
  %307 = call i64 @write(i32 2, i8* nonnull %33, i64 %306) #17
  %308 = icmp eq i64 %307, -1
  br i1 %308, label %309, label %313

309:                                              ; preds = %305
  %310 = tail call i32* @__errno_location() #19
  %311 = load i32, i32* %310, align 4
  %312 = icmp eq i32 %311, 4
  br i1 %312, label %305, label %313

313:                                              ; preds = %309, %305, %264
  br label %314

314:                                              ; preds = %313, %317
  %315 = call i64 @write(i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.37, i64 0, i64 0), i64 1) #17
  %316 = icmp eq i64 %315, -1
  br i1 %316, label %317, label %321

317:                                              ; preds = %314
  %318 = tail call i32* @__errno_location() #19
  %319 = load i32, i32* %318, align 4
  %320 = icmp eq i32 %319, 4
  br i1 %320, label %314, label %321

321:                                              ; preds = %314, %317
  %322 = bitcast %"class.base::debug::StackTrace"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2008, i8* nonnull %322) #17
  call void @_ZN4base5debug10StackTraceC1Ev(%"class.base::debug::StackTrace"* nonnull %6) #17
  call void @_ZNK4base5debug10StackTrace5PrintEv(%"class.base::debug::StackTrace"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 2008, i8* nonnull %322) #17
  %323 = bitcast [23 x %struct.anon.33]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 368, i8* nonnull %323) #17
  %324 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 14
  %325 = bitcast %struct.anon.33* %324 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %325, i8 -86, i64 144, i1 false)
  %326 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 0, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i64 0, i64 0), i8** %326, align 16
  %327 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 0, i32 1
  %328 = getelementptr inbounds i8, i8* %2, i64 40
  %329 = bitcast i8* %328 to i64*
  %330 = load i64, i64* %329, align 8
  store i64 %330, i64* %327, align 8
  %331 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 1, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.39, i64 0, i64 0), i8** %331, align 16
  %332 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 1, i32 1
  %333 = getelementptr inbounds i8, i8* %2, i64 48
  %334 = bitcast i8* %333 to i64*
  %335 = load i64, i64* %334, align 8
  store i64 %335, i64* %332, align 8
  %336 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 2, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.40, i64 0, i64 0), i8** %336, align 16
  %337 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 2, i32 1
  %338 = getelementptr inbounds i8, i8* %2, i64 56
  %339 = bitcast i8* %338 to i64*
  %340 = load i64, i64* %339, align 8
  store i64 %340, i64* %337, align 8
  %341 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 3, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.41, i64 0, i64 0), i8** %341, align 16
  %342 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 3, i32 1
  %343 = getelementptr inbounds i8, i8* %2, i64 64
  %344 = bitcast i8* %343 to i64*
  %345 = load i64, i64* %344, align 8
  store i64 %345, i64* %342, align 8
  %346 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 4, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.42, i64 0, i64 0), i8** %346, align 16
  %347 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 4, i32 1
  %348 = getelementptr inbounds i8, i8* %2, i64 72
  %349 = bitcast i8* %348 to i64*
  %350 = load i64, i64* %349, align 8
  store i64 %350, i64* %347, align 8
  %351 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 5, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.43, i64 0, i64 0), i8** %351, align 16
  %352 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 5, i32 1
  %353 = getelementptr inbounds i8, i8* %2, i64 80
  %354 = bitcast i8* %353 to i64*
  %355 = load i64, i64* %354, align 8
  store i64 %355, i64* %352, align 8
  %356 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 6, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.44, i64 0, i64 0), i8** %356, align 16
  %357 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 6, i32 1
  %358 = getelementptr inbounds i8, i8* %2, i64 88
  %359 = bitcast i8* %358 to i64*
  %360 = load i64, i64* %359, align 8
  store i64 %360, i64* %357, align 8
  %361 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 7, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i64 0, i64 0), i8** %361, align 16
  %362 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 7, i32 1
  %363 = getelementptr inbounds i8, i8* %2, i64 96
  %364 = bitcast i8* %363 to i64*
  %365 = load i64, i64* %364, align 8
  store i64 %365, i64* %362, align 8
  %366 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 8, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46, i64 0, i64 0), i8** %366, align 16
  %367 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 8, i32 1
  %368 = getelementptr inbounds i8, i8* %2, i64 104
  %369 = bitcast i8* %368 to i64*
  %370 = load i64, i64* %369, align 8
  store i64 %370, i64* %367, align 8
  %371 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 9, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i64 0, i64 0), i8** %371, align 16
  %372 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 9, i32 1
  %373 = getelementptr inbounds i8, i8* %2, i64 112
  %374 = bitcast i8* %373 to i64*
  %375 = load i64, i64* %374, align 8
  store i64 %375, i64* %372, align 8
  %376 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 10, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48, i64 0, i64 0), i8** %376, align 16
  %377 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 10, i32 1
  %378 = getelementptr inbounds i8, i8* %2, i64 120
  %379 = bitcast i8* %378 to i64*
  %380 = load i64, i64* %379, align 8
  store i64 %380, i64* %377, align 8
  %381 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 11, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49, i64 0, i64 0), i8** %381, align 16
  %382 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 11, i32 1
  %383 = getelementptr inbounds i8, i8* %2, i64 128
  %384 = bitcast i8* %383 to i64*
  %385 = load i64, i64* %384, align 8
  store i64 %385, i64* %382, align 8
  %386 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 12, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i64 0, i64 0), i8** %386, align 16
  %387 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 12, i32 1
  %388 = getelementptr inbounds i8, i8* %2, i64 136
  %389 = bitcast i8* %388 to i64*
  %390 = load i64, i64* %389, align 8
  store i64 %390, i64* %387, align 8
  %391 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 13, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i64 0, i64 0), i8** %391, align 16
  %392 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 13, i32 1
  %393 = getelementptr inbounds i8, i8* %2, i64 144
  %394 = bitcast i8* %393 to i64*
  %395 = load i64, i64* %394, align 8
  store i64 %395, i64* %392, align 8
  %396 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 14, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.52, i64 0, i64 0), i8** %396, align 16
  %397 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 14, i32 1
  %398 = getelementptr inbounds i8, i8* %2, i64 152
  %399 = bitcast i8* %398 to i64*
  %400 = load i64, i64* %399, align 8
  store i64 %400, i64* %397, align 8
  %401 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 15, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i64 0, i64 0), i8** %401, align 16
  %402 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 15, i32 1
  %403 = getelementptr inbounds i8, i8* %2, i64 160
  %404 = bitcast i8* %403 to i64*
  %405 = load i64, i64* %404, align 8
  store i64 %405, i64* %402, align 8
  %406 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 16, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.54, i64 0, i64 0), i8** %406, align 16
  %407 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 16, i32 1
  %408 = getelementptr inbounds i8, i8* %2, i64 168
  %409 = bitcast i8* %408 to i64*
  %410 = load i64, i64* %409, align 8
  store i64 %410, i64* %407, align 8
  %411 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 17, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i64 0, i64 0), i8** %411, align 16
  %412 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 17, i32 1
  %413 = getelementptr inbounds i8, i8* %2, i64 176
  %414 = bitcast i8* %413 to i64*
  %415 = load i64, i64* %414, align 8
  store i64 %415, i64* %412, align 8
  %416 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 18, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.56, i64 0, i64 0), i8** %416, align 16
  %417 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 18, i32 1
  %418 = getelementptr inbounds i8, i8* %2, i64 184
  %419 = bitcast i8* %418 to i64*
  %420 = load i64, i64* %419, align 8
  store i64 %420, i64* %417, align 8
  %421 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 19, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57, i64 0, i64 0), i8** %421, align 16
  %422 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 19, i32 1
  %423 = getelementptr inbounds i8, i8* %2, i64 192
  %424 = bitcast i8* %423 to i64*
  %425 = load i64, i64* %424, align 8
  store i64 %425, i64* %422, align 8
  %426 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 20, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.58, i64 0, i64 0), i8** %426, align 16
  %427 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 20, i32 1
  %428 = getelementptr inbounds i8, i8* %2, i64 200
  %429 = bitcast i8* %428 to i64*
  %430 = load i64, i64* %429, align 8
  store i64 %430, i64* %427, align 8
  %431 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 21, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.59, i64 0, i64 0), i8** %431, align 16
  %432 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 21, i32 1
  %433 = getelementptr inbounds i8, i8* %2, i64 208
  %434 = bitcast i8* %433 to i64*
  %435 = load i64, i64* %434, align 8
  store i64 %435, i64* %432, align 8
  %436 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 22, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.60, i64 0, i64 0), i8** %436, align 16
  %437 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 22, i32 1
  %438 = getelementptr inbounds i8, i8* %2, i64 216
  %439 = bitcast i8* %438 to i64*
  %440 = load i64, i64* %439, align 8
  store i64 %440, i64* %437, align 8
  %441 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 1
  br label %458

442:                                              ; preds = %527, %445
  %443 = call i64 @write(i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.37, i64 0, i64 0), i64 1) #17
  %444 = icmp eq i64 %443, -1
  br i1 %444, label %445, label %449

445:                                              ; preds = %442
  %446 = tail call i32* @__errno_location() #19
  %447 = load i32, i32* %446, align 4
  %448 = icmp eq i32 %447, 4
  br i1 %448, label %442, label %449

449:                                              ; preds = %442, %445
  br label %450

450:                                              ; preds = %449, %453
  %451 = call i64 @write(i32 2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.61, i64 0, i64 0), i64 21) #17
  %452 = icmp eq i64 %451, -1
  br i1 %452, label %453, label %457

453:                                              ; preds = %450
  %454 = tail call i32* @__errno_location() #19
  %455 = load i32, i32* %454, align 4
  %456 = icmp eq i32 %455, 4
  br i1 %456, label %450, label %457

457:                                              ; preds = %450, %453
  call void @llvm.lifetime.end.p0i8(i64 368, i8* nonnull %323) #17
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %33) #17
  br label %529

458:                                              ; preds = %527, %321
  %459 = phi i64 [ 0, %321 ], [ %517, %527 ]
  %460 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 %459, i32 0
  %461 = load i8*, i8** %460, align 16
  br label %462

462:                                              ; preds = %466, %458
  %463 = call i64 @strlen(i8* %461) #20
  %464 = call i64 @write(i32 2, i8* %461, i64 %463) #17
  %465 = icmp eq i64 %464, -1
  br i1 %465, label %466, label %470

466:                                              ; preds = %462
  %467 = tail call i32* @__errno_location() #19
  %468 = load i32, i32* %467, align 4
  %469 = icmp eq i32 %468, 4
  br i1 %469, label %462, label %470

470:                                              ; preds = %462, %466
  %471 = getelementptr inbounds [23 x %struct.anon.33], [23 x %struct.anon.33]* %7, i64 0, i64 %459, i32 1
  %472 = load i64, i64* %471, align 8
  br label %473

473:                                              ; preds = %480, %470
  %474 = phi i64 [ 16, %470 ], [ %488, %480 ]
  %475 = phi i64 [ %472, %470 ], [ %485, %480 ]
  %476 = phi i64 [ 0, %470 ], [ %484, %480 ]
  %477 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 %476
  %478 = icmp eq i64 %476, 1023
  br i1 %478, label %479, label %480

479:                                              ; preds = %473
  store i8 0, i8* %33, align 16
  br label %507

480:                                              ; preds = %473
  %481 = and i64 %475, 15
  %482 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %481
  %483 = load i8, i8* %482, align 1
  %484 = add nuw nsw i64 %476, 1
  store i8 %483, i8* %477, align 1
  %485 = lshr i64 %475, 4
  %486 = icmp eq i64 %474, 0
  %487 = add i64 %474, -1
  %488 = select i1 %486, i64 0, i64 %487
  %489 = icmp ugt i64 %475, 15
  %490 = icmp ne i64 %488, 0
  %491 = or i1 %490, %489
  br i1 %491, label %473, label %492

492:                                              ; preds = %480
  %493 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 %484
  store i8 0, i8* %493, align 1
  %494 = icmp eq i64 %476, 0
  br i1 %494, label %507, label %495

495:                                              ; preds = %492
  %496 = load i8, i8* %33, align 16
  store i8 %496, i8* %477, align 1
  store i8 %483, i8* %33, align 16
  %497 = getelementptr inbounds i8, i8* %477, i64 -1
  %498 = icmp ugt i8* %497, %441
  br i1 %498, label %499, label %507

499:                                              ; preds = %495, %499
  %500 = phi i8* [ %505, %499 ], [ %497, %495 ]
  %501 = phi i8* [ %504, %499 ], [ %441, %495 ]
  %502 = load i8, i8* %500, align 1
  %503 = load i8, i8* %501, align 1
  store i8 %503, i8* %500, align 1
  %504 = getelementptr inbounds i8, i8* %501, i64 1
  store i8 %502, i8* %501, align 1
  %505 = getelementptr inbounds i8, i8* %500, i64 -1
  %506 = icmp ugt i8* %505, %504
  br i1 %506, label %499, label %507

507:                                              ; preds = %499, %495, %492, %479
  br label %508

508:                                              ; preds = %507, %512
  %509 = call i64 @strlen(i8* nonnull %33) #20
  %510 = call i64 @write(i32 2, i8* nonnull %33, i64 %509) #17
  %511 = icmp eq i64 %510, -1
  br i1 %511, label %512, label %516

512:                                              ; preds = %508
  %513 = tail call i32* @__errno_location() #19
  %514 = load i32, i32* %513, align 4
  %515 = icmp eq i32 %514, 4
  br i1 %515, label %508, label %516

516:                                              ; preds = %508, %512
  %517 = add nuw nsw i64 %459, 1
  %518 = and i64 %517, 3
  %519 = icmp eq i64 %518, 0
  br i1 %519, label %520, label %527

520:                                              ; preds = %516, %523
  %521 = call i64 @write(i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.37, i64 0, i64 0), i64 1) #17
  %522 = icmp eq i64 %521, -1
  br i1 %522, label %523, label %527

523:                                              ; preds = %520
  %524 = tail call i32* @__errno_location() #19
  %525 = load i32, i32* %524, align 4
  %526 = icmp eq i32 %525, 4
  br i1 %526, label %520, label %527

527:                                              ; preds = %523, %520, %516
  %528 = icmp eq i64 %517, 23
  br i1 %528, label %442, label %458

529:                                              ; preds = %457, %12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN4base5debug31SetStackDumpFirstChanceCallbackEPFbiP9siginfo_tPvE(i1 (i32, %struct.siginfo_t*, i8*)*) local_unnamed_addr #3 {
  store i1 (i32, %struct.siginfo_t*, i8*)* %0, i1 (i32, %struct.siginfo_t*, i8*)** @_ZN4base5debug12_GLOBAL__N_117try_handle_signalE, align 8
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4base5debug17CollectStackTraceEPPvm(i8**, i64) local_unnamed_addr #0 {
  %3 = trunc i64 %1 to i32
  %4 = tail call i32 @backtrace(i8** %0, i32 %3) #17
  %5 = sext i32 %4 to i64
  %6 = icmp sgt i64 %5, 0
  %7 = select i1 %6, i64 %5, i64 0
  ret i64 %7
}

declare i32 @backtrace(i8**, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base5debug10StackTrace15PrintWithPrefixEPKc(%"class.base::debug::StackTrace"* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::debug::(anonymous namespace)::PrintBacktraceOutputHandler", align 8
  %4 = bitcast %"class.base::debug::(anonymous namespace)::PrintBacktraceOutputHandler"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"class.base::debug::(anonymous namespace)::PrintBacktraceOutputHandler", %"class.base::debug::(anonymous namespace)::PrintBacktraceOutputHandler"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base5debug12_GLOBAL__N_127PrintBacktraceOutputHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.base::debug::StackTrace", %"class.base::debug::StackTrace"* %0, i64 0, i32 0, i64 0
  %7 = getelementptr inbounds %"class.base::debug::StackTrace", %"class.base::debug::StackTrace"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::debug::(anonymous namespace)::PrintBacktraceOutputHandler", %"class.base::debug::(anonymous namespace)::PrintBacktraceOutputHandler"* %3, i64 0, i32 0
  call fastcc void @_ZN4base5debug12_GLOBAL__N_116ProcessBacktraceEPKPvmPKcPNS1_22BacktraceOutputHandlerE(i8** %6, i64 %8, i8* %1, %"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN4base5debug12_GLOBAL__N_116ProcessBacktraceEPKPvmPKcPNS1_22BacktraceOutputHandlerE(i8** nocapture readonly, i64, i8*, %"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*) unnamed_addr #0 {
  %5 = alloca [17 x i8], align 16
  %6 = alloca [30 x i8], align 16
  %7 = alloca [1024 x i8], align 16
  %8 = icmp eq i64 %1, 0
  br i1 %8, label %17, label %9

9:                                                ; preds = %4
  %10 = icmp eq i8* %2, null
  %11 = bitcast %"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"* %3 to void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)***
  %12 = getelementptr inbounds [30 x i8], [30 x i8]* %6, i64 0, i64 0
  %13 = getelementptr inbounds [30 x i8], [30 x i8]* %6, i64 0, i64 1
  %14 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 0
  %15 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 1
  %16 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  br label %18

17:                                               ; preds = %126, %4
  ret void

18:                                               ; preds = %126, %9
  %19 = phi i64 [ 0, %9 ], [ %129, %126 ]
  br i1 %10, label %23, label %20

20:                                               ; preds = %18
  %21 = load void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)**, void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)*** %11, align 8
  %22 = load void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)*, void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)** %21, align 8
  call void %22(%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"* %3, i8* nonnull %2) #17
  br label %23

23:                                               ; preds = %18, %20
  call void @llvm.lifetime.start.p0i8(i64 30, i8* nonnull %12) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 0, i64 30, i1 false) #17
  %24 = load void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)**, void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)*** %11, align 8
  %25 = load void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)*, void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)** %24, align 8
  call void %25(%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.64, i64 0, i64 0)) #17
  %26 = icmp slt i64 %19, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  %28 = sub i64 0, %19
  store i8 45, i8* %12, align 16
  br label %29

29:                                               ; preds = %27, %23
  %30 = phi i64 [ 28, %27 ], [ 29, %23 ]
  %31 = phi i8* [ %13, %27 ], [ %12, %23 ]
  %32 = phi i64 [ %28, %27 ], [ %19, %23 ]
  br label %33

33:                                               ; preds = %40, %29
  %34 = phi i64 [ 1, %29 ], [ %48, %40 ]
  %35 = phi i64 [ %32, %29 ], [ %45, %40 ]
  %36 = phi i64 [ 0, %29 ], [ %44, %40 ]
  %37 = getelementptr inbounds i8, i8* %31, i64 %36
  %38 = icmp eq i64 %36, %30
  br i1 %38, label %39, label %40

39:                                               ; preds = %33
  store i8 0, i8* %12, align 16
  br label %70

40:                                               ; preds = %33
  %41 = urem i64 %35, 10
  %42 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = add nuw nsw i64 %36, 1
  store i8 %43, i8* %37, align 1
  %45 = udiv i64 %35, 10
  %46 = icmp eq i64 %34, 0
  %47 = add i64 %34, -1
  %48 = select i1 %46, i64 0, i64 %47
  %49 = icmp ugt i64 %35, 9
  %50 = icmp ne i64 %48, 0
  %51 = or i1 %49, %50
  br i1 %51, label %33, label %52

52:                                               ; preds = %40
  %53 = getelementptr inbounds i8, i8* %31, i64 %44
  store i8 0, i8* %53, align 1
  %54 = icmp eq i64 %36, 0
  br i1 %54, label %70, label %55

55:                                               ; preds = %52
  %56 = load i8, i8* %31, align 1
  store i8 %56, i8* %37, align 1
  store i8 %43, i8* %31, align 1
  %57 = add nsw i64 %36, -1
  %58 = icmp sgt i64 %57, 1
  br i1 %58, label %59, label %70

59:                                               ; preds = %55
  %60 = getelementptr inbounds i8, i8* %31, i64 %57
  %61 = getelementptr inbounds i8, i8* %31, i64 1
  br label %62

62:                                               ; preds = %62, %59
  %63 = phi i8* [ %68, %62 ], [ %60, %59 ]
  %64 = phi i8* [ %67, %62 ], [ %61, %59 ]
  %65 = load i8, i8* %63, align 1
  %66 = load i8, i8* %64, align 1
  store i8 %66, i8* %63, align 1
  %67 = getelementptr inbounds i8, i8* %64, i64 1
  store i8 %65, i8* %64, align 1
  %68 = getelementptr inbounds i8, i8* %63, i64 -1
  %69 = icmp ugt i8* %68, %67
  br i1 %69, label %62, label %70

70:                                               ; preds = %62, %39, %52, %55
  %71 = load void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)**, void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)*** %11, align 8
  %72 = load void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)*, void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)** %71, align 8
  call void %72(%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"* %3, i8* nonnull %12) #17
  call void @llvm.lifetime.end.p0i8(i64 30, i8* nonnull %12) #17
  %73 = load void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)**, void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)*** %11, align 8
  %74 = load void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)*, void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)** %73, align 8
  call void %74(%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.62, i64 0, i64 0)) #17
  %75 = getelementptr inbounds i8*, i8** %0, i64 %19
  %76 = bitcast i8** %75 to i64*
  %77 = load i64, i64* %76, align 8
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %14) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 0, i64 17, i1 false) #17
  %78 = load void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)**, void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)*** %11, align 8
  %79 = load void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)*, void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)** %78, align 8
  call void %79(%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"* %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.65, i64 0, i64 0)) #17
  br label %80

80:                                               ; preds = %87, %70
  %81 = phi i64 [ 12, %70 ], [ %95, %87 ]
  %82 = phi i64 [ %77, %70 ], [ %92, %87 ]
  %83 = phi i64 [ 0, %70 ], [ %91, %87 ]
  %84 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 %83
  %85 = icmp eq i64 %83, 16
  br i1 %85, label %86, label %87

86:                                               ; preds = %80
  store i8 0, i8* %14, align 16
  br label %114

87:                                               ; preds = %80
  %88 = and i64 %82, 15
  %89 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = add nuw nsw i64 %83, 1
  store i8 %90, i8* %84, align 1
  %92 = lshr i64 %82, 4
  %93 = icmp eq i64 %81, 0
  %94 = add i64 %81, -1
  %95 = select i1 %93, i64 0, i64 %94
  %96 = icmp ugt i64 %82, 15
  %97 = icmp ne i64 %95, 0
  %98 = or i1 %96, %97
  br i1 %98, label %80, label %99

99:                                               ; preds = %87
  %100 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 %91
  store i8 0, i8* %100, align 1
  %101 = icmp eq i64 %83, 0
  br i1 %101, label %114, label %102

102:                                              ; preds = %99
  %103 = load i8, i8* %14, align 16
  store i8 %103, i8* %84, align 1
  store i8 %90, i8* %14, align 16
  %104 = getelementptr inbounds i8, i8* %84, i64 -1
  %105 = icmp ugt i8* %104, %15
  br i1 %105, label %106, label %114

106:                                              ; preds = %102, %106
  %107 = phi i8* [ %112, %106 ], [ %104, %102 ]
  %108 = phi i8* [ %111, %106 ], [ %15, %102 ]
  %109 = load i8, i8* %107, align 1
  %110 = load i8, i8* %108, align 1
  store i8 %110, i8* %107, align 1
  %111 = getelementptr inbounds i8, i8* %108, i64 1
  store i8 %109, i8* %108, align 1
  %112 = getelementptr inbounds i8, i8* %107, i64 -1
  %113 = icmp ugt i8* %112, %111
  br i1 %113, label %106, label %114

114:                                              ; preds = %106, %86, %99, %102
  %115 = load void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)**, void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)*** %11, align 8
  %116 = load void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)*, void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)** %115, align 8
  call void %116(%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"* %3, i8* nonnull %14) #17
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %14) #17
  %117 = load void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)**, void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)*** %11, align 8
  %118 = load void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)*, void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)** %117, align 8
  call void %118(%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.62, i64 0, i64 0)) #17
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %16) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 0, i64 1024, i1 false)
  %119 = load i8*, i8** %75, align 8
  %120 = getelementptr inbounds i8, i8* %119, i64 -1
  %121 = call zeroext i1 @_ZN6google9SymbolizeEPvPci(i8* %120, i8* nonnull %16, i32 1024) #17
  %122 = load void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)**, void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)*** %11, align 8
  %123 = load void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)*, void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)** %122, align 8
  br i1 %121, label %124, label %125

124:                                              ; preds = %114
  call void %123(%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"* %3, i8* nonnull %16) #17
  br label %126

125:                                              ; preds = %114
  call void %123(%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"* %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.63, i64 0, i64 0)) #17
  br label %126

126:                                              ; preds = %125, %124
  %127 = load void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)**, void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)*** %11, align 8
  %128 = load void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)*, void (%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"*, i8*)** %127, align 8
  call void %128(%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.37, i64 0, i64 0)) #17
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %16) #17
  %129 = add nuw i64 %19, 1
  %130 = icmp eq i64 %129, %1
  br i1 %130, label %17, label %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base5debug10StackTrace24OutputToStreamWithPrefixEPNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEEPKc(%"class.base::debug::StackTrace"* nocapture readonly, %"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::debug::(anonymous namespace)::StreamBacktraceOutputHandler", align 8
  %5 = bitcast %"class.base::debug::(anonymous namespace)::StreamBacktraceOutputHandler"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.base::debug::(anonymous namespace)::StreamBacktraceOutputHandler", %"class.base::debug::(anonymous namespace)::StreamBacktraceOutputHandler"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.base::debug::(anonymous namespace)::StreamBacktraceOutputHandler", %"class.base::debug::(anonymous namespace)::StreamBacktraceOutputHandler"* %4, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base5debug12_GLOBAL__N_128StreamBacktraceOutputHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  store %"class.std::__1::basic_ostream"* %1, %"class.std::__1::basic_ostream"** %7, align 8
  %8 = getelementptr inbounds %"class.base::debug::StackTrace", %"class.base::debug::StackTrace"* %0, i64 0, i32 0, i64 0
  %9 = getelementptr inbounds %"class.base::debug::StackTrace", %"class.base::debug::StackTrace"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.base::debug::(anonymous namespace)::StreamBacktraceOutputHandler", %"class.base::debug::(anonymous namespace)::StreamBacktraceOutputHandler"* %4, i64 0, i32 0
  call fastcc void @_ZN4base5debug12_GLOBAL__N_116ProcessBacktraceEPKPvmPKcPNS1_22BacktraceOutputHandlerE(i8** %8, i64 %10, i8* %2, %"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"* nonnull %11)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #17
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN4base5debug12_GLOBAL__N_122BacktraceOutputHandlerD2Ev(%"class.base::debug::(anonymous namespace)::BacktraceOutputHandler"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @_ZN4base5debug8internal6itoa_rElPcmim(i64, i8*, i64, i32, i64) local_unnamed_addr #6 {
  %6 = icmp eq i64 %2, 0
  br i1 %6, label %65, label %7

7:                                                ; preds = %5
  %8 = add i32 %3, -2
  %9 = icmp ugt i32 %8, 14
  br i1 %9, label %10, label %11

10:                                               ; preds = %7
  store i8 0, i8* %1, align 1
  br label %65

11:                                               ; preds = %7
  %12 = icmp slt i64 %0, 0
  %13 = icmp eq i32 %3, 10
  %14 = and i1 %12, %13
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = icmp ult i64 %2, 2
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  store i8 0, i8* %1, align 1
  br label %65

18:                                               ; preds = %15
  %19 = sub i64 0, %0
  %20 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 45, i8* %1, align 1
  br label %21

21:                                               ; preds = %18, %11
  %22 = phi i64 [ 2, %18 ], [ 1, %11 ]
  %23 = phi i8* [ %20, %18 ], [ %1, %11 ]
  %24 = phi i64 [ %19, %18 ], [ %0, %11 ]
  %25 = sext i32 %3 to i64
  br label %26

26:                                               ; preds = %35, %21
  %27 = phi i64 [ %4, %21 ], [ %43, %35 ]
  %28 = phi i64 [ %22, %21 ], [ %32, %35 ]
  %29 = phi i64 [ %24, %21 ], [ %40, %35 ]
  %30 = phi i64 [ 0, %21 ], [ %39, %35 ]
  %31 = getelementptr inbounds i8, i8* %23, i64 %30
  %32 = add i64 %28, 1
  %33 = icmp ugt i64 %32, %2
  br i1 %33, label %34, label %35

34:                                               ; preds = %26
  store i8 0, i8* %1, align 1
  br label %65

35:                                               ; preds = %26
  %36 = urem i64 %29, %25
  %37 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = add nuw nsw i64 %30, 1
  store i8 %38, i8* %31, align 1
  %40 = udiv i64 %29, %25
  %41 = icmp eq i64 %27, 0
  %42 = add i64 %27, -1
  %43 = select i1 %41, i64 0, i64 %42
  %44 = icmp uge i64 %29, %25
  %45 = icmp ne i64 %43, 0
  %46 = or i1 %45, %44
  br i1 %46, label %26, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds i8, i8* %23, i64 %39
  store i8 0, i8* %48, align 1
  %49 = icmp eq i64 %30, 0
  br i1 %49, label %65, label %50

50:                                               ; preds = %47
  %51 = load i8, i8* %23, align 1
  store i8 %51, i8* %31, align 1
  store i8 %38, i8* %23, align 1
  %52 = add nsw i64 %30, -1
  %53 = icmp sgt i64 %52, 1
  br i1 %53, label %54, label %65

54:                                               ; preds = %50
  %55 = getelementptr inbounds i8, i8* %23, i64 %52
  %56 = getelementptr inbounds i8, i8* %23, i64 1
  br label %57

57:                                               ; preds = %54, %57
  %58 = phi i8* [ %55, %54 ], [ %63, %57 ]
  %59 = phi i8* [ %56, %54 ], [ %62, %57 ]
  %60 = load i8, i8* %58, align 1
  %61 = load i8, i8* %59, align 1
  store i8 %61, i8* %58, align 1
  %62 = getelementptr inbounds i8, i8* %59, i64 1
  store i8 %60, i8* %59, align 1
  %63 = getelementptr inbounds i8, i8* %58, i64 -1
  %64 = icmp ugt i8* %63, %62
  br i1 %64, label %57, label %65

65:                                               ; preds = %57, %50, %47, %17, %34, %5, %10
  %66 = phi i8* [ null, %10 ], [ null, %5 ], [ null, %17 ], [ null, %34 ], [ %1, %47 ], [ %1, %50 ], [ %1, %57 ]
  ret i8* %66
}

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #4

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN6google38InstallSymbolizeOpenObjectFileCallbackEPFimRmS0_PciE(i32 (i64, i64*, i64*, i8*, i32)*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN4base5debug12_GLOBAL__N_122SandboxSymbolizeHelper26OpenObjectFileContainingPcEmRmS3_Pci(i64, i64* nocapture dereferenceable(8), i64* nocapture dereferenceable(8), i8*, i32) #0 align 2 {
  %6 = tail call fastcc %"class.base::debug::(anonymous namespace)::SandboxSymbolizeHelper"* @_ZN4base5debug12_GLOBAL__N_122SandboxSymbolizeHelper11GetInstanceEv()
  %7 = getelementptr inbounds %"class.base::debug::(anonymous namespace)::SandboxSymbolizeHelper", %"class.base::debug::(anonymous namespace)::SandboxSymbolizeHelper"* %6, i64 0, i32 2
  %8 = getelementptr inbounds %"class.base::debug::(anonymous namespace)::SandboxSymbolizeHelper", %"class.base::debug::(anonymous namespace)::SandboxSymbolizeHelper"* %6, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast %"struct.base::debug::MappedMemoryRegion"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  %14 = inttoptr i64 %12 to %"struct.base::debug::MappedMemoryRegion"*
  br i1 %13, label %138, label %15

15:                                               ; preds = %5
  %16 = sub i64 %10, %12
  %17 = ashr exact i64 %16, 6
  br label %18

18:                                               ; preds = %15, %135
  %19 = phi i64 [ 0, %15 ], [ %136, %135 ]
  %20 = getelementptr inbounds %"struct.base::debug::MappedMemoryRegion", %"struct.base::debug::MappedMemoryRegion"* %14, i64 %19, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp ugt i64 %21, %0
  br i1 %22, label %135, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.base::debug::MappedMemoryRegion", %"struct.base::debug::MappedMemoryRegion"* %14, i64 %19, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = icmp ugt i64 %25, %0
  br i1 %26, label %27, label %135

27:                                               ; preds = %23
  store i64 %21, i64* %1, align 8
  %28 = getelementptr inbounds %"struct.base::debug::MappedMemoryRegion", %"struct.base::debug::MappedMemoryRegion"* %14, i64 %19, i32 3
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %2, align 8
  %30 = icmp ne i8* %3, null
  %31 = icmp sgt i32 %4, 0
  %32 = and i1 %30, %31
  br i1 %32, label %33, label %52

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"struct.base::debug::MappedMemoryRegion", %"struct.base::debug::MappedMemoryRegion"* %14, i64 %19, i32 5
  %35 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  br label %44

42:                                               ; preds = %33
  %43 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  br label %44

44:                                               ; preds = %39, %42
  %45 = phi i8* [ %41, %39 ], [ %43, %42 ]
  %46 = sext i32 %4 to i64
  %47 = tail call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %3, i1 false, i1 true, i1 false) #17
  %48 = tail call i8* @__strncpy_chk(i8* nonnull %3, i8* %45, i64 %46, i64 %47) #17
  %49 = add nsw i32 %4, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i8, i8* %3, i64 %50
  store i8 0, i8* %51, align 1
  br label %52

52:                                               ; preds = %27, %44
  %53 = getelementptr inbounds %"struct.base::debug::MappedMemoryRegion", %"struct.base::debug::MappedMemoryRegion"* %14, i64 %19, i32 5
  %54 = bitcast %"class.std::__1::basic_string"* %53 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  br label %63

61:                                               ; preds = %52
  %62 = bitcast %"class.std::__1::basic_string"* %53 to i8*
  br label %63

63:                                               ; preds = %58, %61
  %64 = phi i8* [ %60, %58 ], [ %62, %61 ]
  %65 = icmp eq i8* %64, null
  br i1 %65, label %138, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %"class.base::debug::(anonymous namespace)::SandboxSymbolizeHelper", %"class.base::debug::(anonymous namespace)::SandboxSymbolizeHelper"* %6, i64 0, i32 1, i32 0, i32 0
  %68 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %67, align 8
  %69 = getelementptr inbounds %"class.base::debug::(anonymous namespace)::SandboxSymbolizeHelper", %"class.base::debug::(anonymous namespace)::SandboxSymbolizeHelper"* %6, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %70 = icmp eq %"class.std::__1::__tree_end_node"* %68, %69
  br i1 %70, label %138, label %71

71:                                               ; preds = %66, %126
  %72 = phi %"class.std::__1::__tree_end_node"* [ %127, %126 ], [ %68, %66 ]
  %73 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 4
  %74 = bitcast %"class.std::__1::__tree_end_node"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %71
  %79 = bitcast %"class.std::__1::__tree_end_node"* %73 to i8**
  %80 = load i8*, i8** %79, align 8
  br label %83

81:                                               ; preds = %71
  %82 = bitcast %"class.std::__1::__tree_end_node"* %73 to i8*
  br label %83

83:                                               ; preds = %81, %78
  %84 = phi i8* [ %80, %78 ], [ %82, %81 ]
  %85 = tail call i32 @strcmp(i8* %84, i8* nonnull %64) #20
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %98

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 8
  %89 = bitcast %"class.std::__1::__tree_end_node"* %88 to i32*
  br label %90

90:                                               ; preds = %94, %87
  %91 = load i32, i32* %89, align 4
  %92 = tail call i32 @dup(i32 %91) #17
  %93 = icmp eq i32 %92, -1
  br i1 %93, label %94, label %129

94:                                               ; preds = %90
  %95 = tail call i32* @__errno_location() #19
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %96, 4
  br i1 %97, label %90, label %138

98:                                               ; preds = %83
  %99 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 1, i32 0
  %100 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %99, align 8
  %101 = icmp eq %"class.std::__1::__tree_node_base"* %100, null
  br i1 %101, label %102, label %110

102:                                              ; preds = %98
  %103 = bitcast %"class.std::__1::__tree_end_node"* %72 to %"class.std::__1::__tree_node_base"*
  %104 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 2
  %105 = bitcast %"class.std::__1::__tree_end_node"* %104 to %"class.std::__1::__tree_end_node"**
  %106 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %105, align 8
  %107 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %106, i64 0, i32 0
  %108 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %107, align 8
  %109 = icmp eq %"class.std::__1::__tree_node_base"* %108, %103
  br i1 %109, label %126, label %117

110:                                              ; preds = %98, %110
  %111 = phi %"class.std::__1::__tree_node_base"* [ %113, %110 ], [ %100, %98 ]
  %112 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %111, i64 0, i32 0, i32 0
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  %114 = icmp eq %"class.std::__1::__tree_node_base"* %113, null
  br i1 %114, label %115, label %110

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %111, i64 0, i32 0
  br label %126

117:                                              ; preds = %102, %117
  %118 = phi %"class.std::__1::__tree_end_node"** [ %121, %117 ], [ %105, %102 ]
  %119 = bitcast %"class.std::__1::__tree_end_node"** %118 to %"class.std::__1::__tree_node_base"**
  %120 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %119, align 8
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %120, i64 0, i32 2
  %122 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %121, align 8
  %123 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %122, i64 0, i32 0
  %124 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %123, align 8
  %125 = icmp eq %"class.std::__1::__tree_node_base"* %124, %120
  br i1 %125, label %126, label %117

126:                                              ; preds = %117, %115, %102
  %127 = phi %"class.std::__1::__tree_end_node"* [ %116, %115 ], [ %106, %102 ], [ %122, %117 ]
  %128 = icmp eq %"class.std::__1::__tree_end_node"* %127, %69
  br i1 %128, label %138, label %71

129:                                              ; preds = %90
  %130 = icmp sgt i32 %92, -1
  br i1 %130, label %131, label %138

131:                                              ; preds = %129
  %132 = tail call i64 @lseek64(i32 %92, i64 0, i32 0) #17
  %133 = icmp slt i64 %132, 0
  %134 = select i1 %133, i32 -1, i32 %92
  br label %138

135:                                              ; preds = %18, %23
  %136 = add nuw i64 %19, 1
  %137 = icmp ult i64 %136, %17
  br i1 %137, label %18, label %138

138:                                              ; preds = %135, %126, %94, %5, %131, %129, %66, %63
  %139 = phi i32 [ -1, %66 ], [ -1, %63 ], [ %92, %129 ], [ %134, %131 ], [ -1, %5 ], [ -1, %94 ], [ -1, %126 ], [ -1, %135 ]
  ret i32 %139
}

declare zeroext i1 @_ZN4base5debug12ReadProcMapsEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"*) local_unnamed_addr #4

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #4

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #2

declare zeroext i1 @_ZN4base5debug13ParseProcMapsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_6vectorINS0_18MappedMemoryRegionENS5_ISB_EEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #17
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #17
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #17
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #17
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #17
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #17
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #17
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #17
  ret %"class.std::__1::basic_ostream"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #17
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #17
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #18
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #17
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #17
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #18
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #17
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #17
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #2

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nofree
declare i32 @open64(i8* nocapture readonly, i32, ...) local_unnamed_addr #9

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #10

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0), i32 128, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i64 0, i64 0)) #17
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #17
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %9, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.9, i64 0, i64 0), i64 44) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #17
  br label %11

11:                                               ; preds = %1, %7
  %12 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %0, i32 %13) #17
  %16 = load i32, i32* %12, align 8
  call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %16) #17
  store i32 -1, i32* %12, align 8
  br label %17

17:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev(%"class.base::ScopedGeneric"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* %0) #17
  %2 = bitcast %"class.base::ScopedGeneric"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

declare void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16), i32) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

declare i64 @pread64(i32, i8*, i64, i64) local_unnamed_addr #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32) local_unnamed_addr #4

declare void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16), i32) local_unnamed_addr #4

declare zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare i8* @strerror(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base13ScopedGenericIiNS8_8internal19ScopedFDCloseTraitsEEEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE4findIS7_EENS_15__tree_iteratorISD_PNS_11__tree_nodeISD_PvEElEERKT_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__value_type"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"struct.std::__1::__value_type"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #17
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node"* %22 to %"class.std::__1::__tree_node"**
  %53 = select i1 %48, %"class.std::__1::__tree_node"** %50, %"class.std::__1::__tree_node"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #17
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base13ScopedGenericIiNS8_8internal19ScopedFDCloseTraitsEEEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE25__emplace_unique_key_argsIS7_JRKS7_SC_EEENS_4pairINS_15__tree_iteratorISD_PNS_11__tree_nodeISD_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::ScopedGeneric"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %6 = bitcast %"class.std::__1::__tree_end_node"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %5, align 8
  %7 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base13ScopedGenericIiNS8_8internal19ScopedFDCloseTraitsEEEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISO_EERKT_(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %5, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  %10 = icmp eq %"class.std::__1::__tree_node"* %9, null
  br i1 %10, label %11, label %64

11:                                               ; preds = %4
  %12 = call i8* @_Znwm(i64 72) #18, !noalias !3
  %13 = getelementptr inbounds i8, i8* %12, i64 32
  %14 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1, !noalias !3
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %11
  %19 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %19, i64 24, i1 false) #17, !noalias !3
  br label %26

20:                                               ; preds = %11
  %21 = bitcast i8* %13 to %"class.std::__1::basic_string"*
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8, !noalias !3
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8, !noalias !3
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %21, i8* %23, i64 %25) #17, !noalias !3
  br label %26

26:                                               ; preds = %20, %18
  %27 = getelementptr inbounds i8, i8* %12, i64 56
  %28 = bitcast i8* %27 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8, !noalias !3
  %29 = getelementptr inbounds i8, i8* %12, i64 64
  %30 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %3, i64 0, i32 1, i32 0
  %31 = load i32, i32* %30, align 8, !noalias !3
  store i32 -1, i32* %30, align 8, !noalias !3
  %32 = icmp eq i32 %31, -1
  br i1 %32, label %33, label %36

33:                                               ; preds = %26
  %34 = bitcast i8* %29 to i32*
  store i32 -1, i32* %34, align 4, !noalias !3
  %35 = getelementptr inbounds i8, i8* %12, i64 68
  store i8 0, i8* %35, align 4, !noalias !3
  br label %40

36:                                               ; preds = %26
  %37 = bitcast i8* %27 to %"class.base::ScopedGeneric"*
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %3, i32 %31) #17, !noalias !3
  %38 = bitcast i8* %29 to i32*
  store i32 %31, i32* %38, align 4, !noalias !3
  %39 = getelementptr inbounds i8, i8* %12, i64 68
  store i8 0, i8* %39, align 4, !noalias !3
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %37, i32 %31) #17, !noalias !3
  br label %40

40:                                               ; preds = %33, %36
  %41 = bitcast %"class.std::__1::__tree_end_node"** %5 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast i8* %12 to %"class.std::__1::__tree_node"*
  %44 = bitcast i8* %12 to %"class.std::__1::__tree_node_base"*
  %45 = getelementptr inbounds i8, i8* %12, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 16, i1 false) #17
  %46 = bitcast i8* %45 to i64*
  store i64 %42, i64* %46, align 8
  %47 = bitcast %"class.std::__1::__tree_node_base"** %7 to i8**
  store i8* %12, i8** %47, align 8
  %48 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %49 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %48, align 8
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %49, i64 0, i32 0
  %51 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  %52 = icmp eq %"class.std::__1::__tree_node_base"* %51, null
  br i1 %52, label %57, label %53

53:                                               ; preds = %40
  %54 = ptrtoint %"class.std::__1::__tree_node_base"* %51 to i64
  %55 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %54, i64* %55, align 8
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  br label %57

57:                                               ; preds = %53, %40
  %58 = phi %"class.std::__1::__tree_node_base"* [ %44, %40 ], [ %56, %53 ]
  %59 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %60, %"class.std::__1::__tree_node_base"* %58) #17
  %61 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %61, align 8
  br label %64

64:                                               ; preds = %57, %4
  %65 = phi i8 [ 1, %57 ], [ 0, %4 ]
  %66 = phi %"class.std::__1::__tree_node"* [ %43, %57 ], [ %9, %4 ]
  %67 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %66, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  %68 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %67, 0
  %69 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %68, i8 %65, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base13ScopedGenericIiNS8_8internal19ScopedFDCloseTraitsEEEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISO_EERKT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1
  %26 = bitcast %"struct.std::__1::__value_type"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #17
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #17
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nofree nounwind
declare i8* @__strncpy_chk(i8*, i8*, i64, i64) local_unnamed_addr #13

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.objectsize.i64.p0i8(i8*, i1 immarg, i1 immarg, i1 immarg) #14

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #11

; Function Attrs: nounwind
declare i32 @dup(i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare i64 @lseek64(i32, i64, i32) local_unnamed_addr #2

declare void @_ZN4base5debug10StackTraceC1Ev(%"class.base::debug::StackTrace"*) unnamed_addr #4

declare zeroext i1 @_ZN4base5debug13BeingDebuggedEv() local_unnamed_addr #4

declare void @_ZN4base5debug13BreakDebuggerEv() local_unnamed_addr #4

declare void @_ZNK4base5debug10StackTrace5PrintEv(%"class.base::debug::StackTrace"*) local_unnamed_addr #4

; Function Attrs: nofree
declare i64 @write(i32, i8* nocapture readonly, i64) local_unnamed_addr #9

; Function Attrs: nofree nounwind ssp uwtable
define internal void @_ZN4base5debug12_GLOBAL__N_127PrintBacktraceOutputHandler12HandleOutputEPKc(%"class.base::debug::(anonymous namespace)::PrintBacktraceOutputHandler"* nocapture readnone, i8* nocapture readonly) unnamed_addr #15 align 2 {
  br label %3

3:                                                ; preds = %7, %2
  %4 = tail call i64 @strlen(i8* %1) #20
  %5 = tail call i64 @write(i32 2, i8* %1, i64 %4) #17
  %6 = icmp eq i64 %5, -1
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = tail call i32* @__errno_location() #19
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 4
  br i1 %10, label %3, label %11

11:                                               ; preds = %3, %7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN4base5debug12_GLOBAL__N_127PrintBacktraceOutputHandlerD0Ev(%"class.base::debug::(anonymous namespace)::PrintBacktraceOutputHandler"*) unnamed_addr #16 align 2 {
  %2 = bitcast %"class.base::debug::(anonymous namespace)::PrintBacktraceOutputHandler"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

declare zeroext i1 @_ZN6google9SymbolizeEPvPci(i8*, i8*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base5debug12_GLOBAL__N_128StreamBacktraceOutputHandler12HandleOutputEPKc(%"class.base::debug::(anonymous namespace)::StreamBacktraceOutputHandler"* nocapture readonly, i8*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::debug::(anonymous namespace)::StreamBacktraceOutputHandler", %"class.base::debug::(anonymous namespace)::StreamBacktraceOutputHandler"* %0, i64 0, i32 1
  %4 = load %"class.std::__1::basic_ostream"*, %"class.std::__1::basic_ostream"** %3, align 8
  %5 = tail call i64 @strlen(i8* %1) #17
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %4, i8* %1, i64 %5) #17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN4base5debug12_GLOBAL__N_128StreamBacktraceOutputHandlerD0Ev(%"class.base::debug::(anonymous namespace)::StreamBacktraceOutputHandler"*) unnamed_addr #16 align 2 {
  %2 = bitcast %"class.base::debug::(anonymous namespace)::StreamBacktraceOutputHandler"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone speculatable }
attributes #15 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nounwind }
attributes #18 = { builtin nounwind }
attributes #19 = { nounwind readnone }
attributes #20 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base13ScopedGenericIiNS8_8internal19ScopedFDCloseTraitsEEEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE16__construct_nodeIJRKS7_SC_EEENS_10unique_ptrINS_11__tree_nodeISD_PvEENS_22__tree_node_destructorINS5_ISQ_EEEEEEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4base13ScopedGenericIiNS8_8internal19ScopedFDCloseTraitsEEEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE16__construct_nodeIJRKS7_SC_EEENS_10unique_ptrINS_11__tree_nodeISD_PvEENS_22__tree_node_destructorINS5_ISQ_EEEEEEDpOT_"}
