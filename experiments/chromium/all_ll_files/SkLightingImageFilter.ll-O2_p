; ModuleID = '../../third_party/skia/src/effects/imagefilters/SkLightingImageFilter.cpp'
source_filename = "../../third_party/skia/src/effects/imagefilters/SkLightingImageFilter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.SkImageFilter_Base::CropRect" = type { %struct.SkRect, i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkSTArray.204 = type { %class.SkAlignedSTStorage.205, %class.SkTArray.206 }
%class.SkAlignedSTStorage.205 = type { [16 x i8] }
%class.SkTArray.206 = type { %class.sk_sp*, i64 }
%class.sk_sp = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkDiffuseLightingImageFilter = type { %class.SkLightingImageFilterInternal.base, float }
%class.SkLightingImageFilterInternal.base = type <{ %class.SkImageFilter_Base.base, [4 x i8], %class.sk_sp.1, float }>
%class.SkImageFilter_Base.base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32 }>
%class.SkImageFilter.base = type { %class.SkFlattenable.base }
%class.SkAutoSTArray = type { i32, %class.sk_sp*, [16 x i8] }
%class.sk_sp.1 = type { %class.SkImageFilterLight* }
%class.SkImageFilterLight = type { %class.SkRefCnt.base, %struct.SkPoint3 }
%struct.SkPoint3 = type { float, float, float }
%class.SkSpecularLightingImageFilter = type { %class.SkLightingImageFilterInternal.base, float, float, [4 x i8] }
%class.GrDiffuseLightingEffect = type <{ %class.GrLightingEffect, float, [4 x i8] }>
%class.GrLightingEffect = type { %class.GrFragmentProcessor.base, %class.sk_sp.209, float, %class.SkMatrix, i32 }
%class.GrFragmentProcessor.base = type <{ %class.GrProcessor, %class.SkSTArray.125, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage" }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.125 = type { %class.SkAlignedSTStorage.126, %class.SkTArray.127 }
%class.SkAlignedSTStorage.126 = type { [8 x i8] }
%class.SkTArray.127 = type { %"class.std::__1::unique_ptr.122"*, i64 }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.125, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.sk_sp.209 = type { %class.SkImageFilterLight* }
%class.SkMatrix = type { [9 x float], i32 }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.52, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.52 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt, %class.sk_sp.53, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.96" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.sk_sp.53 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.56 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.54, i8* }
%class.sk_sp.54 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.55, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.55 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.56 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.57, void (i8*)*, i8* }
%class.SkNVRefCnt.57 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.58, i32, [4 x i8] }
%union.anon.58 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.SkISize = type { i32, i32 }
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.53, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.93, %class.sk_sp.95, %class.sk_sp.95 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.68, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.84, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.60 }
%class.SkTHashTable.60 = type { i32, i32, %class.SkAutoTArray.61 }
%class.SkAutoTArray.61 = type { %"class.std::__1::unique_ptr.62" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.68 = type { %class.SkTHashTable.69 }
%class.SkTHashTable.69 = type { i32, i32, %class.SkAutoTArray.70 }
%class.SkAutoTArray.70 = type { %"class.std::__1::unique_ptr.71" }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.77, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.77 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.78" }
%"struct.std::__1::atomic.78" = type { %"struct.std::__1::__atomic_base.79" }
%"struct.std::__1::__atomic_base.79" = type { %"struct.std::__1::__atomic_base.80" }
%"struct.std::__1::__atomic_base.80" = type { %"struct.std::__1::__cxx_atomic_impl.81" }
%"struct.std::__1::__cxx_atomic_impl.81" = type { %"struct.std::__1::__cxx_atomic_base_impl.82" }
%"struct.std::__1::__cxx_atomic_base_impl.82" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.83, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.83 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.84 = type { %class.SkTHashTable.85 }
%class.SkTHashTable.85 = type { i32, i32, %class.SkAutoTArray.86 }
%class.SkAutoTArray.86 = type { %"class.std::__1::unique_ptr.87" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.GrSingleOwner = type { i8 }
%class.sk_sp.93 = type { %class.GrCaps* }
%class.sk_sp.95 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__atomic_base.98" }
%"struct.std::__1::__atomic_base.98" = type { %"struct.std::__1::__cxx_atomic_impl.99" }
%"struct.std::__1::__cxx_atomic_impl.99" = type { %"struct.std::__1::__cxx_atomic_base_impl.100" }
%"struct.std::__1::__cxx_atomic_base_impl.100" = type { i64 }
%class.GrSwizzle = type { i16 }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.94, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.94 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.GrSpecularLightingEffect = type { %class.GrLightingEffect, float, float }
%class.SkLightingImageFilterInternal = type <{ %class.SkImageFilter_Base.base, [4 x i8], %class.sk_sp.1, float, [4 x i8] }>
%class.GrSurfaceFillContext = type <{ %class.GrSurfaceContext, %class.GrSurfaceProxyView, %class.sk_sp.178, i8, [7 x i8] }>
%class.GrSurfaceContext = type { i32 (...)**, %class.GrRecordingContext*, %class.GrSurfaceProxyView, %class.GrColorInfo }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.169" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.2 }
%class.sk_sp.2 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.8, %class.SkTArray.17, %class.SkTArray.19, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.3"*, i64 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.19, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.20 }
%class.sk_sp.20 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.4" }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.252" }
%"struct.std::__1::pair.252" = type { i32, i32 }
%class.SkTHashMap.8 = type { %class.SkTHashTable.9 }
%class.SkTHashTable.9 = type { i32, i32, %class.SkAutoTArray.10 }
%class.SkAutoTArray.10 = type { %"class.std::__1::unique_ptr.11" }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.253" }
%"struct.std::__1::pair.253" = type { i32, %class.SkTArray.254* }
%class.SkTArray.254 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.17 = type { %"class.std::__1::unique_ptr.18"*, i64 }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.254, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%class.SkTArray.19 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.33 }
%class.SkFibBlockSizes.33 = type { i32 }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type { %class.GrRecordingContext*, %"struct.GrPathRendererChain::Options", %class.sk_sp.40, %class.SkTArray.49, %class.GrOpsTask*, %class.SkSTArray.134, %class.SkSTArray.137, %"class.std::__1::unique_ptr.139", %class.sk_sp.155, %class.GrTokenTracker, i8, i8, %class.SkTArray.156, %class.GrHashMapWithCache }
%"struct.GrPathRendererChain::Options" = type { i8, i32 }
%class.sk_sp.40 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef, [4 x i8], %"class.std::__1::unique_ptr.41", i32, [4 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.44, i8, [7 x i8] }>
%class.sk_sp.44 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.45, i8*, i64 }
%class.GrNonAtomicRef.45 = type { i32 }
%class.SkTArray.49 = type { %class.sk_sp.50*, i64 }
%class.sk_sp.50 = type { %class.GrRenderTask* }
%class.GrRenderTask = type { %class.SkRefCnt.base, %class.GrRenderTask*, %class.GrRenderTask*, %class.SkSTArray, %class.SkTArray.101, i32, i32, %class.SkSTArray.108, %class.SkSTArray.108, %class.GrTextureResolveRenderTask* }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.51 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.51 = type { %class.sk_sp.52*, i64 }
%class.SkTArray.101 = type { %class.GrTextureProxy**, i64 }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.102", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.SkSTArray.108 = type { %class.SkAlignedSTStorage.109, %class.SkTArray.110 }
%class.SkAlignedSTStorage.109 = type { [8 x i8] }
%class.SkTArray.110 = type { %class.GrRenderTask**, i64 }
%class.GrTextureResolveRenderTask = type opaque
%class.GrOpsTask = type { %class.GrRenderTask, %class.GrAuditTrail*, i8, %class.GrSwizzle, i32, i32, %"struct.std::__1::array", i32, i8, i32, %struct.SkIRect, i32, i32, %class.SkSTArray.111, %class.sk_sp.131, %class.SkTArray.133, %struct.SkRect, %struct.SkIRect }
%"struct.std::__1::array" = type { [4 x float] }
%class.SkSTArray.111 = type { %class.SkAlignedSTStorage.112, %class.SkTArray.113 }
%class.SkAlignedSTStorage.112 = type { [2000 x i8] }
%class.SkTArray.113 = type { %"class.GrOpsTask::OpChain"*, i64 }
%"class.GrOpsTask::OpChain" = type { %"class.GrOpsTask::OpChain::List", %"class.GrProcessorSet::Analysis", [4 x i8], %"class.GrXferProcessor::DstProxyView", %class.GrAppliedClip*, %struct.SkRect }
%"class.GrOpsTask::OpChain::List" = type { %"class.std::__1::unique_ptr.114", %class.GrOp* }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %class.GrOp* }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr.114", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.GrProcessorSet::Analysis" = type { i16, [2 x i8] }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%struct.SkIPoint = type { i32, i32 }
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.122" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.120 }
%union.anon.120 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.121, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.121 = type { i32 }
%class.sk_sp.131 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.132, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.132 = type { %"struct.std::__1::atomic" }
%class.SkTArray.133 = type { %class.GrSurfaceProxy**, i64 }
%class.SkSTArray.134 = type { %class.SkAlignedSTStorage.135, %class.SkTArray.136 }
%class.SkAlignedSTStorage.135 = type { [32 x i8] }
%class.SkTArray.136 = type { i32*, i64 }
%class.SkSTArray.137 = type { %class.SkAlignedSTStorage.138, %class.SkTArray.49 }
%class.SkAlignedSTStorage.138 = type { [32 x i8] }
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %class.GrPathRendererChain* }
%class.GrPathRendererChain = type { %class.SkSTArray.142, %"class.std::__1::unique_ptr.146", %class.GrPathRenderer* }
%class.SkSTArray.142 = type { %class.SkAlignedSTStorage.143, %class.SkTArray.144 }
%class.SkAlignedSTStorage.143 = type { [64 x i8] }
%class.SkTArray.144 = type { %class.sk_sp.145*, i64 }
%class.sk_sp.145 = type { %class.GrPathRenderer* }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %class.GrCoverageCountingPathRenderer* }
%class.GrCoverageCountingPathRenderer = type opaque
%class.GrPathRenderer = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.155 = type { %class.GrSoftwarePathRenderer* }
%class.GrSoftwarePathRenderer = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrDeferredUploadToken = type { i64 }
%class.SkTArray.156 = type { %class.GrOnFlushCallbackObject**, i64 }
%class.GrOnFlushCallbackObject = type opaque
%class.GrHashMapWithCache = type { %class.SkTHashMap.157, i32, %class.GrRenderTask** }
%class.SkTHashMap.157 = type { %class.SkTHashTable.158 }
%class.SkTHashTable.158 = type { i32, i32, %class.SkAutoTArray.159 }
%class.SkAutoTArray.159 = type { %"class.std::__1::unique_ptr.160" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %class.GrProxyProvider* }
%class.GrColorInfo = type { %class.sk_sp.175, %class.sk_sp.177, i32, i32 }
%class.sk_sp.175 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.176, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.176 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.sk_sp.177 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%class.sk_sp.178 = type { %class.GrOpsTask* }
%class.sk_sp.179 = type { %class.SkSpecialImage* }
%"class.skif::Context" = type { %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, %class.SkColorSpace*, %"class.skif::FilterResult" }
%"class.skif::Mapping" = type { %class.SkMatrix, %class.SkMatrix }
%"class.skif::LayerSpace" = type { %struct.SkIRect }
%class.SkImageFilterCache = type opaque
%"class.skif::FilterResult" = type { %class.sk_sp.179, %"class.skif::LayerSpace.180" }
%"class.skif::LayerSpace.180" = type { %struct.SkIPoint }
%class.SkSpecialImage = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%class.GrImageInfo = type { %class.GrColorInfo, %struct.SkISize }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.54*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.54*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.54*, %class.SkTypeface*, i8*)*, i8* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.187", [7 x i8] }>
%"struct.std::__1::atomic.187" = type { %"struct.std::__1::__atomic_base.188" }
%"struct.std::__1::__atomic_base.188" = type { %"struct.std::__1::__cxx_atomic_impl.189" }
%"struct.std::__1::__cxx_atomic_impl.189" = type { %"struct.std::__1::__cxx_atomic_base_impl.190" }
%"struct.std::__1::__cxx_atomic_base_impl.190" = type { i8 }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.175, i32, i32 }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap.191, i32, [4 x i8], %class.sk_sp.200*, i32, [4 x i8], void (%class.sk_sp.201*, %class.SkReadBuffer*)**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap.191 = type { %class.SkTHashTable.192 }
%class.SkTHashTable.192 = type { i32, i32, %class.SkAutoTArray.193 }
%class.SkAutoTArray.193 = type { %"class.std::__1::unique_ptr.194" }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.201*, %class.SkReadBuffer*)* }
%class.sk_sp.201 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.200 = type { %class.SkTypeface* }
%struct.SkDeserialProcs = type { void (%class.sk_sp.202*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.203*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.200*, i8*, i64, i8*)*, i8* }
%class.sk_sp.202 = type { %class.SkPicture* }
%class.sk_sp.203 = type { %class.SkImage* }
%class.SkDistantLight = type { %class.SkImageFilterLight, %struct.SkPoint3, [4 x i8] }
%class.SkPointLight = type { %class.SkImageFilterLight, %struct.SkPoint3, [4 x i8] }
%class.SkSpotLight = type { %class.SkImageFilterLight, %struct.SkPoint3, %struct.SkPoint3, float, float, float, float, %struct.SkPoint3, [4 x i8] }
%"struct.SkImageFilters::CropRect" = type { %struct.SkRect }
%class.SkImageFilter_Base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32, [4 x i8] }>
%"class.SkImageFilter_Base::Common" = type { %"class.SkImageFilter_Base::CropRect", %class.SkSTArray.204 }
%class.SkBitmap = type { %class.sk_sp.207, %class.SkPixmap, %class.sk_sp.208 }
%class.sk_sp.207 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.208 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%class.DiffuseLightingType = type <{ %class.BaseLightingType, float, [4 x i8] }>
%class.BaseLightingType = type { i32 (...)** }
%class.SpecularLightingType = type { %class.BaseLightingType, float, float }
%class.GrProcessorKeyBuilder = type { i32 (...)**, %class.SkTArray.136*, i32, i32 }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray.19, %class.SkTArray.213 }
%class.SkTArray.213 = type { %"class.std::__1::unique_ptr.210"*, i64 }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %class.GrGLSLFragmentProcessor* }
%class.GrGLLight = type <{ i32 (...)**, %class.GrResourceHandle, [4 x i8] }>
%class.GrResourceHandle = type { i32 }
%class.GrGLLightingEffect = type { %class.GrGLSLFragmentProcessor, %class.GrResourceHandle, %class.GrGLLight* }
%"struct.GrGLSLFragmentProcessor::EmitArgs" = type { %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrFragmentProcessor*, i8*, i8*, %"class.GrGLSLFragmentProcessor::BuilderInputProvider"* }
%class.GrGLSLFPFragmentBuilder = type <{ i32 (...)**, [4 x i8], [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.228, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.230, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.239], i32, i8, [3 x i8], i32 }>
%class.GrGLSLProgramBuilder = type opaque
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.225 }
%union.anon.225 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray.228 = type { %class.SkAlignedSTStorage.229, %class.SkTArray.19 }
%class.SkAlignedSTStorage.229 = type { [120 x i8] }
%class.SkSTArray.230 = type { %class.SkAlignedSTStorage.231, %class.SkTArray.232 }
%class.SkAlignedSTStorage.231 = type { [16 x i8] }
%class.SkTArray.232 = type { %"class.std::__1::unique_ptr.233"*, i64 }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.239 = type { %class.SkAlignedSTStorage.240, %class.SkTArray.19 }
%class.SkAlignedSTStorage.240 = type { [8 x i8] }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%"class.GrGLSLFragmentProcessor::BuilderInputProvider" = type opaque
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%class.GrGLSLShaderBuilder = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.228, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.230, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.239], i32, i8, [3 x i8], i32, [12 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.226 }
%struct.anon.226 = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%class.GrGLDiffuseLightingEffect = type <{ %class.GrGLLightingEffect, %class.GrResourceHandle, [4 x i8] }>
%class.GrGLSpecularLightingEffect = type { %class.GrGLLightingEffect, %class.GrResourceHandle, %class.GrResourceHandle }
%class.GrGLDistantLight = type { %class.GrGLLight.base, %class.GrResourceHandle }
%class.GrGLLight.base = type <{ i32 (...)**, %class.GrResourceHandle }>
%class.GrGLPointLight = type { %class.GrGLLight.base, %class.GrResourceHandle }
%class.GrGLSpotLight = type { %class.GrGLLight.base, %class.SkString, %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%struct.SkPoint = type { float, float }

$_ZN14SkDistantLightC2ER12SkReadBuffer = comdat any

$_ZN12SkPointLightC2ER12SkReadBuffer = comdat any

$_ZN11SkSpotLightC2ER12SkReadBuffer = comdat any

$_ZNK29SkLightingImageFilterInternal7flattenER13SkWriteBuffer = comdat any

$_ZN16BaseLightingTypeD2Ev = comdat any

$_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz = comdat any

$_ZN9GrGLLightD0Ev = comdat any

$_ZN9GrGLLightD2Ev = comdat any

$_ZN16GrGLDistantLightD0Ev = comdat any

$_ZN14GrGLPointLightD0Ev = comdat any

$_ZN13GrGLSpotLightD2Ev = comdat any

$_ZN13GrGLSpotLightD0Ev = comdat any

$_ZN29SkLightingImageFilterInternalD2Ev = comdat any

$_ZN28SkDiffuseLightingImageFilterD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK28SkDiffuseLightingImageFilter10getFactoryEv = comdat any

$_ZNK28SkDiffuseLightingImageFilter11getTypeNameEv = comdat any

$_ZNK13SkImageFilter18getFlattenableTypeEv = comdat any

$_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter = comdat any

$_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv = comdat any

$_ZNK29SkLightingImageFilterInternal23affectsTransparentBlackEv = comdat any

$_ZN29SkSpecularLightingImageFilterD0Ev = comdat any

$_ZNK29SkSpecularLightingImageFilter10getFactoryEv = comdat any

$_ZNK29SkSpecularLightingImageFilter11getTypeNameEv = comdat any

$_ZN18GrGLLightingEffectD0Ev = comdat any

$_ZN16GrLightingEffectD0Ev = comdat any

$_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE = comdat any

$_ZN16GrLightingEffectD2Ev = comdat any

$_ZN23GrDiffuseLightingEffectD0Ev = comdat any

$_ZNK23GrDiffuseLightingEffect4nameEv = comdat any

$_ZNK23GrDiffuseLightingEffect5cloneEv = comdat any

$_ZN18GrGLLightingEffectD2Ev = comdat any

$_ZN25GrGLDiffuseLightingEffectD0Ev = comdat any

$_ZN24GrSpecularLightingEffectD0Ev = comdat any

$_ZNK24GrSpecularLightingEffect4nameEv = comdat any

$_ZNK24GrSpecularLightingEffect5cloneEv = comdat any

$_ZN26GrGLSpecularLightingEffectD0Ev = comdat any

$_ZN14SkDistantLightD0Ev = comdat any

$_ZNK14SkDistantLight4typeEv = comdat any

$_ZNK14SkDistantLight13createGLLightEv = comdat any

$_ZNK14SkDistantLight7isEqualERK18SkImageFilterLight = comdat any

$_ZNK14SkDistantLight9transformERK8SkMatrix = comdat any

$_ZNK14SkDistantLight14surfaceToLightEiiif = comdat any

$_ZNK14SkDistantLight10lightColorERK8SkPoint3 = comdat any

$_ZNK14SkDistantLight14onFlattenLightER13SkWriteBuffer = comdat any

$_ZN18SkImageFilterLightD0Ev = comdat any

$_ZNK18SkImageFilterLight7isEqualERKS_ = comdat any

$_ZN12SkRefCntBaseD2Ev = comdat any

$_ZN12SkPointLightD0Ev = comdat any

$_ZNK12SkPointLight4typeEv = comdat any

$_ZNK12SkPointLight13createGLLightEv = comdat any

$_ZNK12SkPointLight7isEqualERK18SkImageFilterLight = comdat any

$_ZNK12SkPointLight9transformERK8SkMatrix = comdat any

$_ZNK12SkPointLight14surfaceToLightEiiif = comdat any

$_ZNK12SkPointLight10lightColorERK8SkPoint3 = comdat any

$_ZNK12SkPointLight14onFlattenLightER13SkWriteBuffer = comdat any

$_ZN11SkSpotLightD0Ev = comdat any

$_ZNK11SkSpotLight4typeEv = comdat any

$_ZNK11SkSpotLight13createGLLightEv = comdat any

$_ZNK11SkSpotLight7isEqualERK18SkImageFilterLight = comdat any

$_ZNK11SkSpotLight9transformERK8SkMatrix = comdat any

$_ZNK11SkSpotLight14surfaceToLightEiiif = comdat any

$_ZNK11SkSpotLight10lightColorERK8SkPoint3 = comdat any

$_ZNK11SkSpotLight14onFlattenLightER13SkWriteBuffer = comdat any

$_ZN29SkLightingImageFilterInternalD0Ev = comdat any

$_ZN19DiffuseLightingTypeD0Ev = comdat any

$_ZNK19DiffuseLightingType5lightERK8SkPoint3S2_S2_ = comdat any

$_ZN20SpecularLightingTypeD0Ev = comdat any

$_ZNK20SpecularLightingType5lightERK8SkPoint3S2_S2_ = comdat any

$_ZN19GrFragmentProcessorD2Ev = comdat any

$_ZN19GrFragmentProcessorD0Ev = comdat any

$_ZN23GrGLSLFragmentProcessorD2Ev = comdat any

$_ZN23GrGLSLFragmentProcessorD0Ev = comdat any

$_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor = comdat any

$_ZN15GrTextureEffect14kDefaultBorderE = comdat any

$_ZTV14SkDistantLight = comdat any

$_ZTV18SkImageFilterLight = comdat any

$_ZTV12SkPointLight = comdat any

$_ZTV11SkSpotLight = comdat any

$_ZTV29SkLightingImageFilterInternal = comdat any

$_ZTV19DiffuseLightingType = comdat any

$_ZTV20SpecularLightingType = comdat any

$_ZTV19GrFragmentProcessor = comdat any

$_ZTV23GrGLSLFragmentProcessor = comdat any

@__const._ZNK29SkLightingImageFilterInternal14filterImageGPUERKN4skif7ContextEP14SkSpecialImageRK7SkIRectRK8SkMatrix.topLeft = private unnamed_addr constant %struct.SkIRect { i32 0, i32 0, i32 1, i32 1 }, align 4
@.str = private unnamed_addr constant [29 x i8] c"SkDiffuseLightingImageFilter\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"SkSpecularLightingImageFilter\00", align 1
@_ZTV28SkDiffuseLightingImageFilter = hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkLightingImageFilterInternal*)* @_ZN29SkLightingImageFilterInternalD2Ev to i8*), i8* bitcast (void (%class.SkDiffuseLightingImageFilter*)* @_ZN28SkDiffuseLightingImageFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.201*, %class.SkReadBuffer*)* (%class.SkDiffuseLightingImageFilter*)* @_ZNK28SkDiffuseLightingImageFilter10getFactoryEv to i8*), i8* bitcast (i8* (%class.SkDiffuseLightingImageFilter*)* @_ZNK28SkDiffuseLightingImageFilter11getTypeNameEv to i8*), i8* bitcast (void (%class.SkDiffuseLightingImageFilter*, %class.SkWriteBuffer*)* @_ZNK28SkDiffuseLightingImageFilter7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkImageFilter*)* @_ZNK13SkImageFilter18getFlattenableTypeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)* @_ZNK13SkImageFilter17computeFastBoundsERK6SkRect to i8*), i8* bitcast (void (%class.sk_sp.179*, %class.SkDiffuseLightingImageFilter*, %"class.skif::Context"*, %struct.SkIPoint*)* @_ZNK28SkDiffuseLightingImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_ to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK18SkImageFilter_Base18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_ to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)* @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*)* @_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv to i8*), i8* bitcast (i1 (%class.SkLightingImageFilterInternal*)* @_ZNK29SkLightingImageFilterInternal23affectsTransparentBlackEv to i8*), i8* bitcast (void ()* @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)* @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)* @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE to i8*), i8* bitcast (%class.GrFragmentProcessor* (%class.SkDiffuseLightingImageFilter*, %class.GrSurfaceProxyView*, %class.SkMatrix*, %struct.SkIRect*, i32, %class.GrCaps*)* @_ZNK28SkDiffuseLightingImageFilter21makeFragmentProcessorE18GrSurfaceProxyViewRK8SkMatrixPK7SkIRect12BoundaryModeRK6GrCaps to i8*)] }, align 8
@_ZTV29SkSpecularLightingImageFilter = hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkLightingImageFilterInternal*)* @_ZN29SkLightingImageFilterInternalD2Ev to i8*), i8* bitcast (void (%class.SkSpecularLightingImageFilter*)* @_ZN29SkSpecularLightingImageFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.201*, %class.SkReadBuffer*)* (%class.SkSpecularLightingImageFilter*)* @_ZNK29SkSpecularLightingImageFilter10getFactoryEv to i8*), i8* bitcast (i8* (%class.SkSpecularLightingImageFilter*)* @_ZNK29SkSpecularLightingImageFilter11getTypeNameEv to i8*), i8* bitcast (void (%class.SkSpecularLightingImageFilter*, %class.SkWriteBuffer*)* @_ZNK29SkSpecularLightingImageFilter7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkImageFilter*)* @_ZNK13SkImageFilter18getFlattenableTypeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)* @_ZNK13SkImageFilter17computeFastBoundsERK6SkRect to i8*), i8* bitcast (void (%class.sk_sp.179*, %class.SkSpecularLightingImageFilter*, %"class.skif::Context"*, %struct.SkIPoint*)* @_ZNK29SkSpecularLightingImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_ to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK18SkImageFilter_Base18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_ to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)* @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*)* @_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv to i8*), i8* bitcast (i1 (%class.SkLightingImageFilterInternal*)* @_ZNK29SkLightingImageFilterInternal23affectsTransparentBlackEv to i8*), i8* bitcast (void ()* @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)* @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)* @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE to i8*), i8* bitcast (%class.GrFragmentProcessor* (%class.SkSpecularLightingImageFilter*, %class.GrSurfaceProxyView*, %class.SkMatrix*, %struct.SkIRect*, i32, %class.GrCaps*)* @_ZNK29SkSpecularLightingImageFilter21makeFragmentProcessorE18GrSurfaceProxyViewRK8SkMatrixPK7SkIRect12BoundaryModeRK6GrCaps to i8*)] }, align 8
@__const._ZN29SkSpecularLightingImageFilter10CreateProcER12SkReadBuffer.common = private unnamed_addr constant { %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray.204 } { %"class.SkImageFilter_Base::CropRect" { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %class.SkSTArray.204 { %class.SkAlignedSTStorage.205 { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, %class.SkTArray.206 { %class.sk_sp* inttoptr (i64 -6148914691236517206 to %class.sk_sp*), i64 -6148914691236517206 } } }, align 8
@_ZTV16GrLightingEffect = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrLightingEffect*)* @_ZN16GrLightingEffectD2Ev to i8*), i8* bitcast (void (%class.GrLightingEffect*)* @_ZN16GrLightingEffectD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%class.GrLightingEffect*, %class.GrFragmentProcessor*)* @_ZNK16GrLightingEffect9onIsEqualERK19GrFragmentProcessor to i8*)] }, align 8
@_ZN15GrTextureEffect14kDefaultBorderE = linkonce_odr hidden constant [4 x float] zeroinitializer, comdat, align 16
@_ZTV23GrDiffuseLightingEffect = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrLightingEffect*)* @_ZN16GrLightingEffectD2Ev to i8*), i8* bitcast (void (%class.GrDiffuseLightingEffect*)* @_ZN23GrDiffuseLightingEffectD0Ev to i8*), i8* bitcast (i8* (%class.GrDiffuseLightingEffect*)* @_ZNK23GrDiffuseLightingEffect4nameEv to i8*), i8* bitcast (%class.GrFragmentProcessor* (%class.GrDiffuseLightingEffect*)* @_ZNK23GrDiffuseLightingEffect5cloneEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (%class.GrGLSLFragmentProcessor* (%class.GrDiffuseLightingEffect*)* @_ZNK23GrDiffuseLightingEffect17onMakeProgramImplEv to i8*), i8* bitcast (void (%class.GrDiffuseLightingEffect*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK23GrDiffuseLightingEffect21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (i1 (%class.GrDiffuseLightingEffect*, %class.GrFragmentProcessor*)* @_ZNK23GrDiffuseLightingEffect9onIsEqualERK19GrFragmentProcessor to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [13 x i8] c"SurfaceScale\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"e\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"f\00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"scale\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"sobel\00", align 1
@.str.11 = private unnamed_addr constant [52 x i8] c"return (-a + b - 2.0 * c + 2.0 * d -e + f) * scale;\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c"y\00", align 1
@.str.14 = private unnamed_addr constant [14 x i8] c"pointToNormal\00", align 1
@.str.15 = private unnamed_addr constant [52 x i8] c"return normalize(half3(-x * scale, -y * scale, 1));\00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c"m\00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c"surfaceScale\00", align 1
@.str.18 = private unnamed_addr constant [7 x i8] c"normal\00", align 1
@.str.19 = private unnamed_addr constant [19 x i8] c"float2 coord = %s;\00", align 1
@.str.20 = private unnamed_addr constant [11 x i8] c"half m[9];\00", align 1
@.str.21 = private unnamed_addr constant [22 x i8] c"coord + half2(%d, %d)\00", align 1
@.str.22 = private unnamed_addr constant [14 x i8] c"m[%d] = %s.a;\00", align 1
@.str.23 = private unnamed_addr constant [24 x i8] c"half3 surfaceToLight = \00", align 1
@.str.24 = private unnamed_addr constant [10 x i8] c"%s * m[4]\00", align 1
@.str.25 = private unnamed_addr constant [2 x i8] c";\00", align 1
@.str.26 = private unnamed_addr constant [38 x i8] c"return %s(%s(m, %s), surfaceToLight, \00", align 1
@.str.27 = private unnamed_addr constant [15 x i8] c"surfaceToLight\00", align 1
@.str.28 = private unnamed_addr constant [3 x i8] c");\00", align 1
@.str.29 = private unnamed_addr constant [3 x i8] c"KD\00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"lightColor\00", align 1
@.str.31 = private unnamed_addr constant [52 x i8] c"half colorScale = %s * dot(normal, surfaceToLight);\00", align 1
@.str.32 = private unnamed_addr constant [54 x i8] c"return half4(saturate(lightColor * colorScale), 1.0);\00", align 1
@.str.33 = private unnamed_addr constant [6 x i8] c"light\00", align 1
@_ZTV24GrSpecularLightingEffect = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrLightingEffect*)* @_ZN16GrLightingEffectD2Ev to i8*), i8* bitcast (void (%class.GrSpecularLightingEffect*)* @_ZN24GrSpecularLightingEffectD0Ev to i8*), i8* bitcast (i8* (%class.GrSpecularLightingEffect*)* @_ZNK24GrSpecularLightingEffect4nameEv to i8*), i8* bitcast (%class.GrFragmentProcessor* (%class.GrSpecularLightingEffect*)* @_ZNK24GrSpecularLightingEffect5cloneEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (%class.GrGLSLFragmentProcessor* (%class.GrSpecularLightingEffect*)* @_ZNK24GrSpecularLightingEffect17onMakeProgramImplEv to i8*), i8* bitcast (void (%class.GrSpecularLightingEffect*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK24GrSpecularLightingEffect21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (i1 (%class.GrSpecularLightingEffect*, %class.GrFragmentProcessor*)* @_ZNK24GrSpecularLightingEffect9onIsEqualERK19GrFragmentProcessor to i8*)] }, align 8
@.str.34 = private unnamed_addr constant [3 x i8] c"KS\00", align 1
@.str.35 = private unnamed_addr constant [10 x i8] c"Shininess\00", align 1
@.str.36 = private unnamed_addr constant [67 x i8] c"half3 halfDir = half3(normalize(surfaceToLight + half3(0, 0, 1)));\00", align 1
@.str.37 = private unnamed_addr constant [60 x i8] c"half colorScale = half(%s * pow(dot(normal, halfDir), %s));\00", align 1
@.str.38 = private unnamed_addr constant [49 x i8] c"half3 color = saturate(lightColor * colorScale);\00", align 1
@.str.39 = private unnamed_addr constant [58 x i8] c"return half4(color, max(max(color.r, color.g), color.b));\00", align 1
@.str.40 = private unnamed_addr constant [11 x i8] c"LightColor\00", align 1
@.str.41 = private unnamed_addr constant [15 x i8] c"LightDirection\00", align 1
@.str.42 = private unnamed_addr constant [14 x i8] c"LightLocation\00", align 1
@.str.43 = private unnamed_addr constant [43 x i8] c"normalize(%s - half3(sk_FragCoord.xy, %s))\00", align 1
@.str.44 = private unnamed_addr constant [9 x i8] c"Exponent\00", align 1
@.str.45 = private unnamed_addr constant [18 x i8] c"CosInnerConeAngle\00", align 1
@.str.46 = private unnamed_addr constant [18 x i8] c"CosOuterConeAngle\00", align 1
@.str.47 = private unnamed_addr constant [10 x i8] c"ConeScale\00", align 1
@.str.48 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@.str.49 = private unnamed_addr constant [42 x i8] c"half cosAngle = -dot(surfaceToLight, %s);\00", align 1
@.str.50 = private unnamed_addr constant [21 x i8] c"if (cosAngle < %s) {\00", align 1
@.str.51 = private unnamed_addr constant [17 x i8] c"return half3(0);\00", align 1
@.str.52 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.53 = private unnamed_addr constant [32 x i8] c"half scale = pow(cosAngle, %s);\00", align 1
@.str.54 = private unnamed_addr constant [42 x i8] c"return %s * scale * (cosAngle - %s) * %s;\00", align 1
@.str.55 = private unnamed_addr constant [19 x i8] c"return %s * scale;\00", align 1
@.str.56 = private unnamed_addr constant [7 x i8] c"%s(%s)\00", align 1
@_ZTV9GrGLLight = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLLight*)* @_ZN9GrGLLightD2Ev to i8*), i8* bitcast (void (%class.GrGLLight*)* @_ZN9GrGLLightD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrGLLight*, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, i8*)* @_ZN9GrGLLight14emitLightColorEPK19GrFragmentProcessorP20GrGLSLUniformHandlerP23GrGLSLFPFragmentBuilderPKc to i8*), i8* bitcast (void (%class.GrGLLight*, %class.GrGLSLProgramDataManager*, %class.SkImageFilterLight*)* @_ZNK9GrGLLight7setDataERK24GrGLSLProgramDataManagerPK18SkImageFilterLight to i8*)] }, align 8
@_ZTV16GrGLDistantLight = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLLight*)* @_ZN9GrGLLightD2Ev to i8*), i8* bitcast (void (%class.GrGLDistantLight*)* @_ZN16GrGLDistantLightD0Ev to i8*), i8* bitcast (void (%class.GrGLDistantLight*, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, i8*)* @_ZN16GrGLDistantLight18emitSurfaceToLightEPK19GrFragmentProcessorP20GrGLSLUniformHandlerP23GrGLSLFPFragmentBuilderPKc to i8*), i8* bitcast (void (%class.GrGLLight*, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, i8*)* @_ZN9GrGLLight14emitLightColorEPK19GrFragmentProcessorP20GrGLSLUniformHandlerP23GrGLSLFPFragmentBuilderPKc to i8*), i8* bitcast (void (%class.GrGLDistantLight*, %class.GrGLSLProgramDataManager*, %class.SkImageFilterLight*)* @_ZNK16GrGLDistantLight7setDataERK24GrGLSLProgramDataManagerPK18SkImageFilterLight to i8*)] }, align 8
@_ZTV14GrGLPointLight = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLLight*)* @_ZN9GrGLLightD2Ev to i8*), i8* bitcast (void (%class.GrGLPointLight*)* @_ZN14GrGLPointLightD0Ev to i8*), i8* bitcast (void (%class.GrGLPointLight*, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, i8*)* @_ZN14GrGLPointLight18emitSurfaceToLightEPK19GrFragmentProcessorP20GrGLSLUniformHandlerP23GrGLSLFPFragmentBuilderPKc to i8*), i8* bitcast (void (%class.GrGLLight*, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, i8*)* @_ZN9GrGLLight14emitLightColorEPK19GrFragmentProcessorP20GrGLSLUniformHandlerP23GrGLSLFPFragmentBuilderPKc to i8*), i8* bitcast (void (%class.GrGLPointLight*, %class.GrGLSLProgramDataManager*, %class.SkImageFilterLight*)* @_ZNK14GrGLPointLight7setDataERK24GrGLSLProgramDataManagerPK18SkImageFilterLight to i8*)] }, align 8
@_ZTV13GrGLSpotLight = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSpotLight*)* @_ZN13GrGLSpotLightD2Ev to i8*), i8* bitcast (void (%class.GrGLSpotLight*)* @_ZN13GrGLSpotLightD0Ev to i8*), i8* bitcast (void (%class.GrGLSpotLight*, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, i8*)* @_ZN13GrGLSpotLight18emitSurfaceToLightEPK19GrFragmentProcessorP20GrGLSLUniformHandlerP23GrGLSLFPFragmentBuilderPKc to i8*), i8* bitcast (void (%class.GrGLSpotLight*, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, i8*)* @_ZN13GrGLSpotLight14emitLightColorEPK19GrFragmentProcessorP20GrGLSLUniformHandlerP23GrGLSLFPFragmentBuilderPKc to i8*), i8* bitcast (void (%class.GrGLSpotLight*, %class.GrGLSLProgramDataManager*, %class.SkImageFilterLight*)* @_ZNK13GrGLSpotLight7setDataERK24GrGLSLProgramDataManagerPK18SkImageFilterLight to i8*)] }, align 8
@_ZTV18GrGLLightingEffect = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLLightingEffect*)* @_ZN18GrGLLightingEffectD2Ev to i8*), i8* bitcast (void (%class.GrGLLightingEffect*)* @_ZN18GrGLLightingEffectD0Ev to i8*), i8* bitcast (void (%class.GrGLLightingEffect*, %"struct.GrGLSLFragmentProcessor::EmitArgs"*)* @_ZN18GrGLLightingEffect8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE to i8*), i8* bitcast (void (%class.GrGLLightingEffect*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN18GrGLLightingEffect9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTV25GrGLDiffuseLightingEffect = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLLightingEffect*)* @_ZN18GrGLLightingEffectD2Ev to i8*), i8* bitcast (void (%class.GrGLDiffuseLightingEffect*)* @_ZN25GrGLDiffuseLightingEffectD0Ev to i8*), i8* bitcast (void (%class.GrGLLightingEffect*, %"struct.GrGLSLFragmentProcessor::EmitArgs"*)* @_ZN18GrGLLightingEffect8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE to i8*), i8* bitcast (void (%class.GrGLDiffuseLightingEffect*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN25GrGLDiffuseLightingEffect9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*), i8* bitcast (void (%class.GrGLDiffuseLightingEffect*, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, %class.SkString*)* @_ZN25GrGLDiffuseLightingEffect13emitLightFuncEPK19GrFragmentProcessorP20GrGLSLUniformHandlerP23GrGLSLFPFragmentBuilderP8SkString to i8*)] }, align 8
@_ZTV26GrGLSpecularLightingEffect = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLLightingEffect*)* @_ZN18GrGLLightingEffectD2Ev to i8*), i8* bitcast (void (%class.GrGLSpecularLightingEffect*)* @_ZN26GrGLSpecularLightingEffectD0Ev to i8*), i8* bitcast (void (%class.GrGLLightingEffect*, %"struct.GrGLSLFragmentProcessor::EmitArgs"*)* @_ZN18GrGLLightingEffect8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE to i8*), i8* bitcast (void (%class.GrGLSpecularLightingEffect*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN26GrGLSpecularLightingEffect9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*), i8* bitcast (void (%class.GrGLSpecularLightingEffect*, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, %class.SkString*)* @_ZN26GrGLSpecularLightingEffect13emitLightFuncEPK19GrFragmentProcessorP20GrGLSLUniformHandlerP23GrGLSLFPFragmentBuilderP8SkString to i8*)] }, align 8
@_ZTV14SkDistantLight = linkonce_odr hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRefCntBase*)* @_ZN12SkRefCntBaseD2Ev to i8*), i8* bitcast (void (%class.SkDistantLight*)* @_ZN14SkDistantLightD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i32 (%class.SkDistantLight*)* @_ZNK14SkDistantLight4typeEv to i8*), i8* bitcast (%class.GrGLLight* (%class.SkDistantLight*)* @_ZNK14SkDistantLight13createGLLightEv to i8*), i8* bitcast (i1 (%class.SkDistantLight*, %class.SkImageFilterLight*)* @_ZNK14SkDistantLight7isEqualERK18SkImageFilterLight to i8*), i8* bitcast (%class.SkImageFilterLight* (%class.SkDistantLight*, %class.SkMatrix*)* @_ZNK14SkDistantLight9transformERK8SkMatrix to i8*), i8* bitcast ({ <2 x float>, float } (%class.SkDistantLight*, i32, i32, i32, float)* @_ZNK14SkDistantLight14surfaceToLightEiiif to i8*), i8* bitcast ({ <2 x float>, float } (%class.SkDistantLight*, %struct.SkPoint3*)* @_ZNK14SkDistantLight10lightColorERK8SkPoint3 to i8*), i8* bitcast (void (%class.SkDistantLight*, %class.SkWriteBuffer*)* @_ZNK14SkDistantLight14onFlattenLightER13SkWriteBuffer to i8*)] }, comdat, align 8
@_ZTV18SkImageFilterLight = linkonce_odr hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRefCntBase*)* @_ZN12SkRefCntBaseD2Ev to i8*), i8* bitcast (void (%class.SkImageFilterLight*)* @_ZN18SkImageFilterLightD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%class.SkImageFilterLight*, %class.SkImageFilterLight*)* @_ZNK18SkImageFilterLight7isEqualERKS_ to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTV12SkPointLight = linkonce_odr hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRefCntBase*)* @_ZN12SkRefCntBaseD2Ev to i8*), i8* bitcast (void (%class.SkPointLight*)* @_ZN12SkPointLightD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i32 (%class.SkPointLight*)* @_ZNK12SkPointLight4typeEv to i8*), i8* bitcast (%class.GrGLLight* (%class.SkPointLight*)* @_ZNK12SkPointLight13createGLLightEv to i8*), i8* bitcast (i1 (%class.SkPointLight*, %class.SkImageFilterLight*)* @_ZNK12SkPointLight7isEqualERK18SkImageFilterLight to i8*), i8* bitcast (%class.SkImageFilterLight* (%class.SkPointLight*, %class.SkMatrix*)* @_ZNK12SkPointLight9transformERK8SkMatrix to i8*), i8* bitcast ({ <2 x float>, float } (%class.SkPointLight*, i32, i32, i32, float)* @_ZNK12SkPointLight14surfaceToLightEiiif to i8*), i8* bitcast ({ <2 x float>, float } (%class.SkPointLight*, %struct.SkPoint3*)* @_ZNK12SkPointLight10lightColorERK8SkPoint3 to i8*), i8* bitcast (void (%class.SkPointLight*, %class.SkWriteBuffer*)* @_ZNK12SkPointLight14onFlattenLightER13SkWriteBuffer to i8*)] }, comdat, align 8
@_ZTV11SkSpotLight = linkonce_odr hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRefCntBase*)* @_ZN12SkRefCntBaseD2Ev to i8*), i8* bitcast (void (%class.SkSpotLight*)* @_ZN11SkSpotLightD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i32 (%class.SkSpotLight*)* @_ZNK11SkSpotLight4typeEv to i8*), i8* bitcast (%class.GrGLLight* (%class.SkSpotLight*)* @_ZNK11SkSpotLight13createGLLightEv to i8*), i8* bitcast (i1 (%class.SkSpotLight*, %class.SkImageFilterLight*)* @_ZNK11SkSpotLight7isEqualERK18SkImageFilterLight to i8*), i8* bitcast (%class.SkImageFilterLight* (%class.SkSpotLight*, %class.SkMatrix*)* @_ZNK11SkSpotLight9transformERK8SkMatrix to i8*), i8* bitcast ({ <2 x float>, float } (%class.SkSpotLight*, i32, i32, i32, float)* @_ZNK11SkSpotLight14surfaceToLightEiiif to i8*), i8* bitcast ({ <2 x float>, float } (%class.SkSpotLight*, %struct.SkPoint3*)* @_ZNK11SkSpotLight10lightColorERK8SkPoint3 to i8*), i8* bitcast (void (%class.SkSpotLight*, %class.SkWriteBuffer*)* @_ZNK11SkSpotLight14onFlattenLightER13SkWriteBuffer to i8*)] }, comdat, align 8
@_ZTV29SkLightingImageFilterInternal = linkonce_odr hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkLightingImageFilterInternal*)* @_ZN29SkLightingImageFilterInternalD2Ev to i8*), i8* bitcast (void (%class.SkLightingImageFilterInternal*)* @_ZN29SkLightingImageFilterInternalD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkLightingImageFilterInternal*, %class.SkWriteBuffer*)* @_ZNK29SkLightingImageFilterInternal7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkImageFilter*)* @_ZNK13SkImageFilter18getFlattenableTypeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)* @_ZNK13SkImageFilter17computeFastBoundsERK6SkRect to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_ to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK18SkImageFilter_Base18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_ to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)* @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*)* @_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv to i8*), i8* bitcast (i1 (%class.SkLightingImageFilterInternal*)* @_ZNK29SkLightingImageFilterInternal23affectsTransparentBlackEv to i8*), i8* bitcast (void ()* @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)* @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)* @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTV19DiffuseLightingType = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.BaseLightingType*)* @_ZN16BaseLightingTypeD2Ev to i8*), i8* bitcast (void (%class.DiffuseLightingType*)* @_ZN19DiffuseLightingTypeD0Ev to i8*), i8* bitcast (i32 (%class.DiffuseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)* @_ZNK19DiffuseLightingType5lightERK8SkPoint3S2_S2_ to i8*)] }, comdat, align 8
@_ZTV20SpecularLightingType = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.BaseLightingType*)* @_ZN16BaseLightingTypeD2Ev to i8*), i8* bitcast (void (%class.SpecularLightingType*)* @_ZN20SpecularLightingTypeD0Ev to i8*), i8* bitcast (i32 (%class.SpecularLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)* @_ZNK20SpecularLightingType5lightERK8SkPoint3S2_S2_ to i8*)] }, comdat, align 8
@_ZTV19GrFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.58 = private unnamed_addr constant [127 x i8] c"return %s(%s(0.0, 0.0, m[4], m[5], m[7], m[8], %g),          %s(0.0, 0.0, m[4], m[7], m[5], m[8], %g),          surfaceScale);\00", align 1
@.str.59 = private unnamed_addr constant [127 x i8] c"return %s(%s(0.0, 0.0, m[3], m[5], m[6], m[8], %g),          %s(0.0, 0.0, m[4], m[7], m[5], m[8], %g),          surfaceScale);\00", align 1
@.str.60 = private unnamed_addr constant [131 x i8] c"return %s(%s( 0.0,  0.0, m[3], m[4], m[6], m[7], %g),          %s(m[3], m[6], m[4], m[7],  0.0,  0.0, %g),          surfaceScale);\00", align 1
@.str.61 = private unnamed_addr constant [131 x i8] c"return %s(%s(m[1], m[2], m[4], m[5], m[7], m[8], %g),          %s( 0.0,  0.0, m[1], m[7], m[2], m[8], %g),          surfaceScale);\00", align 1
@.str.62 = private unnamed_addr constant [131 x i8] c"return %s(%s(m[0], m[2], m[3], m[5], m[6], m[8], %g),          %s(m[0], m[6], m[1], m[7], m[2], m[8], %g),          surfaceScale);\00", align 1
@.str.63 = private unnamed_addr constant [131 x i8] c"return %s(%s(m[0], m[1], m[3], m[4], m[6], m[7], %g),          %s(m[0], m[6], m[1], m[7],  0.0,  0.0, %g),          surfaceScale);\00", align 1
@.str.64 = private unnamed_addr constant [131 x i8] c"return %s(%s(m[1], m[2], m[4], m[5],  0.0,  0.0, %g),          %s( 0.0,  0.0, m[1], m[4], m[2], m[5], %g),          surfaceScale);\00", align 1
@.str.65 = private unnamed_addr constant [131 x i8] c"return %s(%s(m[0], m[2], m[3], m[5],  0.0,  0.0, %g),          %s(m[0], m[3], m[1], m[4], m[2], m[5], %g),          surfaceScale);\00", align 1
@.str.66 = private unnamed_addr constant [131 x i8] c"return %s(%s(m[0], m[1], m[3], m[4],  0.0,  0.0, %g),          %s(m[0], m[3], m[1], m[4],  0.0,  0.0, %g),          surfaceScale);\00", align 1
@.str.68 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@_ZTV23GrGLSLFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*)] }, comdat, align 8
@.str.69 = private unnamed_addr constant [53 x i8] c"../../third_party/skia/src/gpu/GrFragmentProcessor.h\00", align 1
@.str.70 = private unnamed_addr constant [62 x i8] c"Subclass must override this if advertising this optimization.\00", align 1
@.str.71 = private unnamed_addr constant [16 x i8] c"DiffuseLighting\00", align 1
@.str.72 = private unnamed_addr constant [17 x i8] c"SpecularLighting\00", align 1
@switch.table._ZNK29SkLightingImageFilterInternal14filterImageGPUERKN4skif7ContextEP14SkSpecialImageRK7SkIRectRK8SkMatrix = private unnamed_addr constant [21 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 6, i32 8, i32 9, i32 10, i32 0, i32 0, i32 11, i32 15, i32 14, i32 16, i32 7, i32 13, i32 19, i32 17, i32 18, i32 20], align 4

@_ZN28SkDiffuseLightingImageFilterC1E5sk_spI18SkImageFilterLightEffS0_I13SkImageFilterEPK6SkRect = hidden unnamed_addr alias void (%class.SkDiffuseLightingImageFilter*, %class.sk_sp.1*, float, float, %class.sk_sp*, %struct.SkRect*), void (%class.SkDiffuseLightingImageFilter*, %class.sk_sp.1*, float, float, %class.sk_sp*, %struct.SkRect*)* @_ZN28SkDiffuseLightingImageFilterC2E5sk_spI18SkImageFilterLightEffS0_I13SkImageFilterEPK6SkRect
@_ZN29SkSpecularLightingImageFilterC1E5sk_spI18SkImageFilterLightEfffS0_I13SkImageFilterEPK6SkRect = hidden unnamed_addr alias void (%class.SkSpecularLightingImageFilter*, %class.sk_sp.1*, float, float, float, %class.sk_sp*, %struct.SkRect*), void (%class.SkSpecularLightingImageFilter*, %class.sk_sp.1*, float, float, float, %class.sk_sp*, %struct.SkRect*)* @_ZN29SkSpecularLightingImageFilterC2E5sk_spI18SkImageFilterLightEfffS0_I13SkImageFilterEPK6SkRect
@_ZN23GrDiffuseLightingEffectC1E18GrSurfaceProxyView5sk_spIK18SkImageFilterLightEfRK8SkMatrixf12BoundaryModePK7SkIRectRK6GrCaps = hidden unnamed_addr alias void (%class.GrDiffuseLightingEffect*, %class.GrSurfaceProxyView*, %class.sk_sp.209*, float, %class.SkMatrix*, float, i32, %struct.SkIRect*, %class.GrCaps*), void (%class.GrDiffuseLightingEffect*, %class.GrSurfaceProxyView*, %class.sk_sp.209*, float, %class.SkMatrix*, float, i32, %struct.SkIRect*, %class.GrCaps*)* @_ZN23GrDiffuseLightingEffectC2E18GrSurfaceProxyView5sk_spIK18SkImageFilterLightEfRK8SkMatrixf12BoundaryModePK7SkIRectRK6GrCaps
@_ZN23GrDiffuseLightingEffectC1ERKS_ = hidden unnamed_addr alias void (%class.GrDiffuseLightingEffect*, %class.GrDiffuseLightingEffect*), void (%class.GrDiffuseLightingEffect*, %class.GrDiffuseLightingEffect*)* @_ZN23GrDiffuseLightingEffectC2ERKS_
@_ZN24GrSpecularLightingEffectC1E18GrSurfaceProxyView5sk_spIK18SkImageFilterLightEfRK8SkMatrixff12BoundaryModePK7SkIRectRK6GrCaps = hidden unnamed_addr alias void (%class.GrSpecularLightingEffect*, %class.GrSurfaceProxyView*, %class.sk_sp.209*, float, %class.SkMatrix*, float, float, i32, %struct.SkIRect*, %class.GrCaps*), void (%class.GrSpecularLightingEffect*, %class.GrSurfaceProxyView*, %class.sk_sp.209*, float, %class.SkMatrix*, float, float, i32, %struct.SkIRect*, %class.GrCaps*)* @_ZN24GrSpecularLightingEffectC2E18GrSurfaceProxyView5sk_spIK18SkImageFilterLightEfRK8SkMatrixff12BoundaryModePK7SkIRectRK6GrCaps
@_ZN24GrSpecularLightingEffectC1ERKS_ = hidden unnamed_addr alias void (%class.GrSpecularLightingEffect*, %class.GrSpecularLightingEffect*), void (%class.GrSpecularLightingEffect*, %class.GrSpecularLightingEffect*)* @_ZN24GrSpecularLightingEffectC2ERKS_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK29SkLightingImageFilterInternal8drawRectEP20GrSurfaceFillContext18GrSurfaceProxyViewRK8SkMatrixRK7SkIRect12BoundaryModePS7_S8_(%class.SkLightingImageFilterInternal*, %class.GrSurfaceFillContext*, %class.GrSurfaceProxyView* nocapture, %class.SkMatrix* dereferenceable(40), %struct.SkIRect* dereferenceable(16), i32, %struct.SkIRect*, %struct.SkIRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %9 = alloca %class.SkMatrix, align 16
  %10 = alloca { <2 x float>, <2 x float> }, align 8
  %11 = alloca { <2 x float>, <2 x float> }, align 8
  %12 = alloca %class.GrSurfaceProxyView, align 8
  %13 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = sext i32 %18 to i64
  %20 = sext i32 %14 to i64
  %21 = add nsw i64 %19, %20
  %22 = icmp slt i64 %21, 2147483647
  %23 = select i1 %22, i64 %21, i64 2147483647
  %24 = icmp sgt i64 %23, -2147483647
  %25 = select i1 %24, i64 %23, i64 -2147483647
  %26 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = sext i32 %27 to i64
  %29 = sext i32 %16 to i64
  %30 = add nsw i64 %28, %29
  %31 = icmp slt i64 %30, 2147483647
  %32 = select i1 %31, i64 %30, i64 2147483647
  %33 = icmp sgt i64 %32, -2147483647
  %34 = select i1 %33, i64 %32, i64 -2147483647
  %35 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = sext i32 %36 to i64
  %38 = add nsw i64 %37, %20
  %39 = icmp slt i64 %38, 2147483647
  %40 = select i1 %39, i64 %38, i64 2147483647
  %41 = icmp sgt i64 %40, -2147483647
  %42 = select i1 %41, i64 %40, i64 -2147483647
  %43 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 3
  %44 = load i32, i32* %43, align 4
  %45 = sext i32 %44 to i64
  %46 = add nsw i64 %45, %29
  %47 = icmp slt i64 %46, 2147483647
  %48 = select i1 %47, i64 %46, i64 2147483647
  %49 = icmp sgt i64 %48, -2147483647
  %50 = select i1 %49, i64 %48, i64 -2147483647
  %51 = trunc i64 %25 to i32
  %52 = trunc i64 %34 to i32
  %53 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 0, i32 0
  %54 = bitcast %class.GrSurfaceProxyView* %2 to i64*
  %55 = load i64, i64* %54, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %53, align 8
  %56 = bitcast %class.GrSurfaceProxyView* %12 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 1
  %58 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 1
  %59 = load i32, i32* %58, align 8
  store i32 %59, i32* %57, align 8
  %60 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 2, i32 0
  %61 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 2, i32 0
  %62 = load i16, i16* %61, align 2
  store i16 %62, i16* %60, align 4
  %63 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %1, i64 0, i32 0
  %64 = tail call %class.GrCaps* @_ZNK16GrSurfaceContext4capsEv(%class.GrSurfaceContext* %63) #11
  %65 = bitcast %class.SkLightingImageFilterInternal* %0 to %class.GrFragmentProcessor* (%class.SkLightingImageFilterInternal*, %class.GrSurfaceProxyView*, %class.SkMatrix*, %struct.SkIRect*, i32, %class.GrCaps*)***
  %66 = load %class.GrFragmentProcessor* (%class.SkLightingImageFilterInternal*, %class.GrSurfaceProxyView*, %class.SkMatrix*, %struct.SkIRect*, i32, %class.GrCaps*)**, %class.GrFragmentProcessor* (%class.SkLightingImageFilterInternal*, %class.GrSurfaceProxyView*, %class.SkMatrix*, %struct.SkIRect*, i32, %class.GrCaps*)*** %65, align 8
  %67 = getelementptr inbounds %class.GrFragmentProcessor* (%class.SkLightingImageFilterInternal*, %class.GrSurfaceProxyView*, %class.SkMatrix*, %struct.SkIRect*, i32, %class.GrCaps*)*, %class.GrFragmentProcessor* (%class.SkLightingImageFilterInternal*, %class.GrSurfaceProxyView*, %class.SkMatrix*, %struct.SkIRect*, i32, %class.GrCaps*)** %66, i64 17
  %68 = load %class.GrFragmentProcessor* (%class.SkLightingImageFilterInternal*, %class.GrSurfaceProxyView*, %class.SkMatrix*, %struct.SkIRect*, i32, %class.GrCaps*)*, %class.GrFragmentProcessor* (%class.SkLightingImageFilterInternal*, %class.GrSurfaceProxyView*, %class.SkMatrix*, %struct.SkIRect*, i32, %class.GrCaps*)** %67, align 8
  %69 = call %class.GrFragmentProcessor* %68(%class.SkLightingImageFilterInternal* %0, %class.GrSurfaceProxyView* nonnull %12, %class.SkMatrix* dereferenceable(40) %3, %struct.SkIRect* %6, i32 %5, %class.GrCaps* dereferenceable(232) %64) #11
  %70 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 0, i32 0
  %71 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %70, align 8
  %72 = icmp eq %class.GrSurfaceProxy* %71, null
  br i1 %72, label %85, label %73

73:                                               ; preds = %8
  %74 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %71, i64 0, i32 1
  %75 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 -1 acq_rel
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %85

78:                                               ; preds = %73
  %79 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %74, i64 -2
  %80 = bitcast %class.SkNVRefCnt* %79 to %class.GrSurfaceProxy*
  %81 = bitcast %class.SkNVRefCnt* %79 to void (%class.GrSurfaceProxy*)***
  %82 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %81, align 8
  %83 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %82, i64 1
  %84 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %83, align 8
  call void %84(%class.GrSurfaceProxy* nonnull %80) #11
  br label %85

85:                                               ; preds = %78, %73, %8
  %86 = bitcast { <2 x float>, <2 x float> }* %11 to %struct.SkRect*
  %87 = bitcast { <2 x float>, <2 x float> }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #11
  %88 = sitofp i32 %51 to float
  %89 = insertelement <2 x float> undef, float %88, i32 0
  %90 = sitofp i32 %52 to float
  %91 = insertelement <2 x float> %89, float %90, i32 1
  %92 = trunc i64 %42 to i32
  %93 = sitofp i32 %92 to float
  %94 = insertelement <2 x float> undef, float %93, i32 0
  %95 = trunc i64 %50 to i32
  %96 = sitofp i32 %95 to float
  %97 = insertelement <2 x float> %94, float %96, i32 1
  %98 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 0
  store <2 x float> %91, <2 x float>* %98, align 8
  %99 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 1
  store <2 x float> %97, <2 x float>* %99, align 8
  %100 = bitcast { <2 x float>, <2 x float> }* %10 to %struct.SkRect*
  %101 = bitcast %class.SkMatrix* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %101) #11
  %102 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 1
  %103 = bitcast { <2 x float>, <2 x float> }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %103) #11
  %104 = load i32, i32* %17, align 4
  %105 = sitofp i32 %104 to float
  %106 = insertelement <2 x float> undef, float %105, i32 0
  %107 = load i32, i32* %26, align 4
  %108 = sitofp i32 %107 to float
  %109 = insertelement <2 x float> %106, float %108, i32 1
  %110 = load i32, i32* %35, align 4
  %111 = sitofp i32 %110 to float
  %112 = insertelement <2 x float> undef, float %111, i32 0
  %113 = load i32, i32* %43, align 4
  %114 = sitofp i32 %113 to float
  %115 = insertelement <2 x float> %112, float %114, i32 1
  %116 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %10, i64 0, i32 0
  store <2 x float> %109, <2 x float>* %116, align 8
  %117 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %10, i64 0, i32 1
  store <2 x float> %115, <2 x float>* %117, align 8
  %118 = bitcast %class.SkMatrix* %9 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %118, align 16, !alias.scope !2
  %119 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 4
  %120 = bitcast float* %119 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %120, align 16, !alias.scope !2
  %121 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %121, align 16, !alias.scope !2
  store i32 16, i32* %102, align 4, !alias.scope !2
  %122 = call zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix* nonnull %9, %struct.SkRect* nonnull dereferenceable(16) %100, %struct.SkRect* nonnull dereferenceable(16) %86, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103) #11
  %123 = call %class.GrFragmentProcessor* @_ZN14GrMatrixEffect4MakeERK8SkMatrixNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.SkMatrix* nonnull dereferenceable(40) %9, %class.GrFragmentProcessor* %69) #11
  call void @_ZN20GrSurfaceFillContext14fillRectWithFPERK7SkIRectNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.GrSurfaceFillContext* %1, %struct.SkIRect* dereferenceable(16) %4, %class.GrFragmentProcessor* %123) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %101) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %class.GrCaps* @_ZNK16GrSurfaceContext4capsEv(%class.GrSurfaceContext*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK29SkLightingImageFilterInternal14filterImageGPUERKN4skif7ContextEP14SkSpecialImageRK7SkIRectRK8SkMatrix(%class.sk_sp.179* noalias sret, %class.SkLightingImageFilterInternal*, %"class.skif::Context"* nocapture readonly dereferenceable(136), %class.SkSpecialImage*, %struct.SkIRect* readonly dereferenceable(16), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.sk_sp.175, align 8
  %8 = alloca %class.GrSurfaceProxyView, align 8
  %9 = alloca %class.GrImageInfo, align 8
  %10 = alloca %class.GrImageInfo, align 8
  %11 = alloca { i64, i64 }, align 8
  %12 = bitcast { i64, i64 }* %11 to %struct.SkIRect*
  %13 = alloca %struct.SkIRect, align 4
  %14 = alloca { i64, i64 }, align 8
  %15 = bitcast { i64, i64 }* %14 to %struct.SkIRect*
  %16 = alloca { i64, i64 }, align 8
  %17 = bitcast { i64, i64 }* %16 to %struct.SkIRect*
  %18 = alloca { i64, i64 }, align 8
  %19 = bitcast { i64, i64 }* %18 to %struct.SkIRect*
  %20 = alloca { i64, i64 }, align 8
  %21 = bitcast { i64, i64 }* %20 to %struct.SkIRect*
  %22 = alloca { i64, i64 }, align 8
  %23 = bitcast { i64, i64 }* %22 to %struct.SkIRect*
  %24 = alloca { i64, i64 }, align 8
  %25 = bitcast { i64, i64 }* %24 to %struct.SkIRect*
  %26 = alloca { i64, i64 }, align 8
  %27 = bitcast { i64, i64 }* %26 to %struct.SkIRect*
  %28 = alloca { i64, i64 }, align 8
  %29 = bitcast { i64, i64 }* %28 to %struct.SkIRect*
  %30 = alloca %class.GrSurfaceProxyView, align 8
  %31 = alloca %class.GrSurfaceProxyView, align 8
  %32 = alloca %class.GrSurfaceProxyView, align 8
  %33 = alloca %class.GrSurfaceProxyView, align 8
  %34 = alloca %class.GrSurfaceProxyView, align 8
  %35 = alloca %class.GrSurfaceProxyView, align 8
  %36 = alloca %class.GrSurfaceProxyView, align 8
  %37 = alloca %class.GrSurfaceProxyView, align 8
  %38 = alloca %class.GrSurfaceProxyView, align 8
  %39 = alloca { i64, i64 }, align 8
  %40 = alloca %class.GrSurfaceProxyView, align 8
  %41 = alloca %class.sk_sp.175, align 8
  %42 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 5, i32 0, i32 0
  %43 = load %class.SkSpecialImage*, %class.SkSpecialImage** %42, align 8
  %44 = tail call %class.GrRecordingContext* @_ZNK14SkSpecialImage10getContextEv(%class.SkSpecialImage* %43) #11
  %45 = bitcast %class.GrSurfaceProxyView* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #11
  %46 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %8, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %8, i64 0, i32 1
  %48 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %8, i64 0, i32 2, i32 0
  %49 = bitcast %class.GrSurfaceProxyView* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 16, i1 false)
  call void @_ZNK14SkSpecialImage4viewEP18GrRecordingContext(%class.GrSurfaceProxyView* nonnull sret %8, %class.SkSpecialImage* %3, %class.GrRecordingContext* %44) #11
  %50 = bitcast %class.GrImageInfo* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %50) #11
  %51 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %9, i64 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %9, i64 0, i32 0, i32 1, i32 0
  %53 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 3
  %54 = bitcast %class.GrImageInfo* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 32, i1 false)
  %55 = load i32, i32* %53, align 8
  %56 = icmp ult i32 %55, 21
  br i1 %56, label %58, label %57

57:                                               ; preds = %6
  call void @llvm.trap() #11
  unreachable

58:                                               ; preds = %6
  %59 = sext i32 %55 to i64
  %60 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._ZNK29SkLightingImageFilterInternal14filterImageGPUERKN4skif7ContextEP14SkSpecialImageRK7SkIRectRK8SkMatrix, i64 0, i64 %59
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 4
  %63 = load %class.SkColorSpace*, %class.SkColorSpace** %62, align 8, !noalias !7
  %64 = icmp eq %class.SkColorSpace* %63, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i32* %66, i32 1 monotonic, !noalias !10
  br label %68

68:                                               ; preds = %58, %65
  %69 = ptrtoint %class.SkColorSpace* %63 to i64
  %70 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = sub i32 %71, %73
  %75 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 3
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = sub i32 %76, %78
  %80 = zext i32 %79 to i64
  %81 = shl nuw i64 %80, 32
  %82 = zext i32 %74 to i64
  %83 = or i64 %81, %82
  %84 = bitcast %class.sk_sp.175* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84)
  %85 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %9, i64 0, i32 0
  %86 = bitcast %class.sk_sp.175* %7 to i64*
  store i64 %69, i64* %86, align 8
  call void @_ZN11GrColorInfoC1E11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE(%class.GrColorInfo* nonnull %85, i32 %61, i32 2, %class.sk_sp.175* nonnull %7) #11
  %87 = getelementptr inbounds %class.sk_sp.175, %class.sk_sp.175* %7, i64 0, i32 0
  %88 = load %class.SkColorSpace*, %class.SkColorSpace** %87, align 8
  %89 = icmp eq %class.SkColorSpace* %88, null
  br i1 %89, label %96, label %90

90:                                               ; preds = %68
  %91 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = atomicrmw add i32* %91, i32 -1 acq_rel
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %96

94:                                               ; preds = %90
  %95 = bitcast %class.SkColorSpace* %88 to i8*
  call void @_ZdlPv(i8* %95) #14
  br label %96

96:                                               ; preds = %94, %90, %68
  %97 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %9, i64 0, i32 1
  %98 = bitcast %struct.SkISize* %97 to i64*
  store i64 %83, i64* %98, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84)
  %99 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %10, i64 0, i32 0
  call void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo* nonnull %99, %class.GrColorInfo* nonnull dereferenceable(24) %85) #11
  %100 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %10, i64 0, i32 1
  %101 = bitcast %struct.SkISize* %100 to i64*
  %102 = load i64, i64* %98, align 8
  store i64 %102, i64* %101, align 8
  %103 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %46, align 8
  %104 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %103, i64 0, i32 15
  %105 = load i8, i8* %104, align 1, !range !13
  %106 = icmp ne i8 %105, 0
  %107 = call %class.GrSurfaceFillContext* @_ZN20GrSurfaceFillContext4MakeEP18GrRecordingContext11GrImageInfo12SkBackingFiti11GrMipmapped11GrProtected15GrSurfaceOrigin10SkBudgeted(%class.GrRecordingContext* %44, %class.GrImageInfo* nonnull %10, i32 0, i32 1, i1 zeroext false, i1 zeroext %106, i32 1, i1 zeroext true) #11
  %108 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %10, i64 0, i32 0, i32 1, i32 0
  %109 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %108, align 8
  %110 = icmp eq %class.GrColorSpaceXform* %109, null
  br i1 %110, label %121, label %111

111:                                              ; preds = %96
  %112 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %109, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = atomicrmw add i32* %112, i32 -1 acq_rel
  %114 = icmp eq i32 %113, 1
  br i1 %114, label %115, label %121

115:                                              ; preds = %111
  %116 = bitcast %class.GrColorSpaceXform* %109 to %class.SkRefCntBase*
  %117 = bitcast %class.GrColorSpaceXform* %109 to void (%class.SkRefCntBase*)***
  %118 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %117, align 8
  %119 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %118, i64 2
  %120 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %119, align 8
  call void %120(%class.SkRefCntBase* nonnull %116) #11
  br label %121

121:                                              ; preds = %115, %111, %96
  %122 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %10, i64 0, i32 0, i32 0, i32 0
  %123 = load %class.SkColorSpace*, %class.SkColorSpace** %122, align 8
  %124 = icmp eq %class.SkColorSpace* %123, null
  br i1 %124, label %131, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %123, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = atomicrmw add i32* %126, i32 -1 acq_rel
  %128 = icmp eq i32 %127, 1
  br i1 %128, label %129, label %131

129:                                              ; preds = %125
  %130 = bitcast %class.SkColorSpace* %123 to i8*
  call void @_ZdlPv(i8* %130) #14
  br label %131

131:                                              ; preds = %121, %125, %129
  %132 = icmp eq %class.GrSurfaceFillContext* %107, null
  br i1 %132, label %133, label %135

133:                                              ; preds = %131
  %134 = getelementptr inbounds %class.sk_sp.179, %class.sk_sp.179* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %134, align 8
  br label %566

135:                                              ; preds = %131
  %136 = bitcast { i64, i64 }* %39 to %struct.SkIRect*
  %137 = load i32, i32* %70, align 4
  %138 = load i32, i32* %72, align 4
  %139 = sub i32 %137, %138
  %140 = load i32, i32* %75, align 4
  %141 = load i32, i32* %77, align 4
  %142 = sub i32 %140, %141
  %143 = bitcast { i64, i64 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %143) #11
  %144 = bitcast { i64, i64 }* %11 to i32*
  %145 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %12, i64 0, i32 1
  %146 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 1
  %147 = bitcast i64* %146 to i32*
  %148 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %12, i64 0, i32 3
  %149 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %3, i64 0, i32 2, i32 2
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %3, i64 0, i32 2, i32 0
  %152 = load i32, i32* %151, align 4
  %153 = sub i32 %150, %152
  %154 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %3, i64 0, i32 2, i32 3
  %155 = load i32, i32* %154, align 4
  %156 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %3, i64 0, i32 2, i32 1
  %157 = load i32, i32* %156, align 4
  %158 = sub i32 %155, %157
  %159 = zext i32 %158 to i64
  %160 = shl nuw i64 %159, 32
  %161 = zext i32 %153 to i64
  %162 = or i64 %160, %161
  %163 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 0
  store i64 0, i64* %163, align 8
  store i64 %162, i64* %146, align 8
  %164 = bitcast %struct.SkIRect* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %164) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %164, i8* align 4 bitcast (%struct.SkIRect* @__const._ZNK29SkLightingImageFilterInternal14filterImageGPUERKN4skif7ContextEP14SkSpecialImageRK7SkIRectRK8SkMatrix.topLeft to i8*), i64 16, i1 false)
  %165 = bitcast { i64, i64 }* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %165) #11
  %166 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 1
  %167 = sext i32 %139 to i64
  %168 = icmp sgt i64 %167, -2147483646
  %169 = select i1 %168, i64 %167, i64 -2147483646
  %170 = add nsw i64 %169, 4294967295
  %171 = and i64 %170, 4294967295
  %172 = or i64 %171, 4294967296
  %173 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 0
  store i64 1, i64* %173, align 8
  store i64 %172, i64* %166, align 8
  %174 = bitcast { i64, i64 }* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %174) #11
  %175 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i64 0, i32 1
  %176 = add nsw i32 %139, -1
  %177 = icmp slt i64 %167, 2147483647
  %178 = select i1 %177, i64 %167, i64 2147483647
  %179 = icmp sgt i64 %178, -2147483647
  %180 = select i1 %179, i64 %178, i64 -2147483647
  %181 = zext i32 %176 to i64
  %182 = and i64 %180, 4294967295
  %183 = or i64 %182, 4294967296
  %184 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i64 0, i32 0
  store i64 %181, i64* %184, align 8
  store i64 %183, i64* %175, align 8
  %185 = bitcast { i64, i64 }* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %185) #11
  %186 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i64 0, i32 1
  %187 = sext i32 %142 to i64
  %188 = icmp sgt i64 %187, -2147483646
  %189 = select i1 %188, i64 %187, i64 -2147483646
  %190 = shl nsw i64 %189, 32
  %191 = add i64 %190, -4294967296
  %192 = or i64 %191, 1
  %193 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i64 0, i32 0
  store i64 4294967296, i64* %193, align 8
  store i64 %192, i64* %186, align 8
  %194 = bitcast { i64, i64 }* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %194) #11
  %195 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i64 0, i32 1
  %196 = or i64 %191, %171
  %197 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i64 0, i32 0
  store i64 4294967297, i64* %197, align 8
  store i64 %196, i64* %195, align 8
  %198 = bitcast { i64, i64 }* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %198) #11
  %199 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i64 0, i32 1
  %200 = or i64 %181, 4294967296
  %201 = or i64 %191, %182
  %202 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i64 0, i32 0
  store i64 %200, i64* %202, align 8
  store i64 %201, i64* %199, align 8
  %203 = bitcast { i64, i64 }* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %203) #11
  %204 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i64 0, i32 1
  %205 = add nsw i32 %142, -1
  %206 = icmp slt i64 %187, 2147483647
  %207 = select i1 %206, i64 %187, i64 2147483647
  %208 = icmp sgt i64 %207, -2147483647
  %209 = select i1 %208, i64 %207, i64 -2147483647
  %210 = zext i32 %205 to i64
  %211 = shl nuw i64 %210, 32
  %212 = shl nsw i64 %209, 32
  %213 = or i64 %212, 1
  %214 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i64 0, i32 0
  store i64 %211, i64* %214, align 8
  store i64 %213, i64* %204, align 8
  %215 = bitcast { i64, i64 }* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %215) #11
  %216 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i64 0, i32 1
  %217 = or i64 %211, 1
  %218 = or i64 %212, %171
  %219 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i64 0, i32 0
  store i64 %217, i64* %219, align 8
  store i64 %218, i64* %216, align 8
  %220 = bitcast { i64, i64 }* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %220) #11
  %221 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i64 0, i32 1
  %222 = or i64 %211, %181
  %223 = or i64 %212, %182
  %224 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i64 0, i32 0
  store i64 %222, i64* %224, align 8
  store i64 %223, i64* %221, align 8
  %225 = sext i32 %137 to i64
  %226 = sext i32 %138 to i64
  %227 = sub nsw i64 %225, %226
  %228 = sext i32 %140 to i64
  %229 = sext i32 %141 to i64
  %230 = sub nsw i64 %228, %229
  %231 = icmp slt i64 %227, 1
  %232 = icmp slt i64 %230, 1
  %233 = or i1 %231, %232
  br i1 %233, label %266, label %234

234:                                              ; preds = %135
  %235 = or i64 %230, %227
  %236 = add nsw i64 %235, 2147483648
  %237 = icmp ugt i64 %236, 4294967295
  br i1 %237, label %266, label %238

238:                                              ; preds = %234
  %239 = load i32, i32* %147, align 8
  %240 = sext i32 %239 to i64
  %241 = load i32, i32* %144, align 8
  %242 = sext i32 %241 to i64
  %243 = sub nsw i64 %240, %242
  %244 = load i32, i32* %148, align 4
  %245 = sext i32 %244 to i64
  %246 = load i32, i32* %145, align 4
  %247 = sext i32 %246 to i64
  %248 = sub nsw i64 %245, %247
  %249 = icmp slt i64 %243, 1
  %250 = icmp slt i64 %248, 1
  %251 = or i1 %249, %250
  br i1 %251, label %266, label %252

252:                                              ; preds = %238
  %253 = or i64 %248, %243
  %254 = add nsw i64 %253, 2147483648
  %255 = icmp ugt i64 %254, 4294967295
  %256 = icmp sgt i32 %241, %138
  %257 = or i1 %256, %255
  %258 = icmp sgt i32 %246, %141
  %259 = or i1 %258, %257
  %260 = icmp slt i32 %239, %137
  %261 = or i1 %260, %259
  %262 = icmp sge i32 %244, %140
  %263 = xor i1 %261, true
  %264 = and i1 %262, %263
  %265 = select i1 %264, %struct.SkIRect* null, %struct.SkIRect* %12
  br label %266

266:                                              ; preds = %252, %135, %234, %238
  %267 = phi %struct.SkIRect* [ %12, %238 ], [ %12, %234 ], [ %12, %135 ], [ %265, %252 ]
  %268 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %30, i64 0, i32 0, i32 0
  %269 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %46, align 8
  %270 = icmp eq %class.GrSurfaceProxy* %269, null
  br i1 %270, label %274, label %271

271:                                              ; preds = %266
  %272 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %269, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %273 = atomicrmw add i32* %272, i32 1 monotonic
  br label %274

274:                                              ; preds = %266, %271
  store %class.GrSurfaceProxy* %269, %class.GrSurfaceProxy** %268, align 8
  %275 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %30, i64 0, i32 1
  %276 = load i32, i32* %47, align 8
  store i32 %276, i32* %275, align 8
  %277 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %30, i64 0, i32 2, i32 0
  %278 = load i16, i16* %48, align 4
  store i16 %278, i16* %277, align 4
  call void @_ZNK29SkLightingImageFilterInternal8drawRectEP20GrSurfaceFillContext18GrSurfaceProxyViewRK8SkMatrixRK7SkIRect12BoundaryModePS7_S8_(%class.SkLightingImageFilterInternal* %1, %class.GrSurfaceFillContext* nonnull %107, %class.GrSurfaceProxyView* nonnull %30, %class.SkMatrix* dereferenceable(40) %5, %struct.SkIRect* nonnull dereferenceable(16) %13, i32 0, %struct.SkIRect* %267, %struct.SkIRect* dereferenceable(16) %4)
  %279 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %268, align 8
  %280 = icmp eq %class.GrSurfaceProxy* %279, null
  br i1 %280, label %293, label %281

281:                                              ; preds = %274
  %282 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %279, i64 0, i32 1
  %283 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %282, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %284 = atomicrmw add i32* %283, i32 -1 acq_rel
  %285 = icmp eq i32 %284, 1
  br i1 %285, label %286, label %293

286:                                              ; preds = %281
  %287 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %282, i64 -2
  %288 = bitcast %class.SkNVRefCnt* %287 to %class.GrSurfaceProxy*
  %289 = bitcast %class.SkNVRefCnt* %287 to void (%class.GrSurfaceProxy*)***
  %290 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %289, align 8
  %291 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %290, i64 1
  %292 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %291, align 8
  call void %292(%class.GrSurfaceProxy* nonnull %288) #11
  br label %293

293:                                              ; preds = %274, %281, %286
  %294 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %31, i64 0, i32 0, i32 0
  %295 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %46, align 8
  %296 = icmp eq %class.GrSurfaceProxy* %295, null
  br i1 %296, label %300, label %297

297:                                              ; preds = %293
  %298 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %295, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %299 = atomicrmw add i32* %298, i32 1 monotonic
  br label %300

300:                                              ; preds = %293, %297
  store %class.GrSurfaceProxy* %295, %class.GrSurfaceProxy** %294, align 8
  %301 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %31, i64 0, i32 1
  %302 = load i32, i32* %47, align 8
  store i32 %302, i32* %301, align 8
  %303 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %31, i64 0, i32 2, i32 0
  %304 = load i16, i16* %48, align 4
  store i16 %304, i16* %303, align 4
  call void @_ZNK29SkLightingImageFilterInternal8drawRectEP20GrSurfaceFillContext18GrSurfaceProxyViewRK8SkMatrixRK7SkIRect12BoundaryModePS7_S8_(%class.SkLightingImageFilterInternal* %1, %class.GrSurfaceFillContext* nonnull %107, %class.GrSurfaceProxyView* nonnull %31, %class.SkMatrix* dereferenceable(40) %5, %struct.SkIRect* nonnull dereferenceable(16) %15, i32 1, %struct.SkIRect* %267, %struct.SkIRect* dereferenceable(16) %4)
  %305 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %294, align 8
  %306 = icmp eq %class.GrSurfaceProxy* %305, null
  br i1 %306, label %319, label %307

307:                                              ; preds = %300
  %308 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %305, i64 0, i32 1
  %309 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %308, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %310 = atomicrmw add i32* %309, i32 -1 acq_rel
  %311 = icmp eq i32 %310, 1
  br i1 %311, label %312, label %319

312:                                              ; preds = %307
  %313 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %308, i64 -2
  %314 = bitcast %class.SkNVRefCnt* %313 to %class.GrSurfaceProxy*
  %315 = bitcast %class.SkNVRefCnt* %313 to void (%class.GrSurfaceProxy*)***
  %316 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %315, align 8
  %317 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %316, i64 1
  %318 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %317, align 8
  call void %318(%class.GrSurfaceProxy* nonnull %314) #11
  br label %319

319:                                              ; preds = %300, %307, %312
  %320 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %32, i64 0, i32 0, i32 0
  %321 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %46, align 8
  %322 = icmp eq %class.GrSurfaceProxy* %321, null
  br i1 %322, label %326, label %323

323:                                              ; preds = %319
  %324 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %321, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %325 = atomicrmw add i32* %324, i32 1 monotonic
  br label %326

326:                                              ; preds = %319, %323
  store %class.GrSurfaceProxy* %321, %class.GrSurfaceProxy** %320, align 8
  %327 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %32, i64 0, i32 1
  %328 = load i32, i32* %47, align 8
  store i32 %328, i32* %327, align 8
  %329 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %32, i64 0, i32 2, i32 0
  %330 = load i16, i16* %48, align 4
  store i16 %330, i16* %329, align 4
  call void @_ZNK29SkLightingImageFilterInternal8drawRectEP20GrSurfaceFillContext18GrSurfaceProxyViewRK8SkMatrixRK7SkIRect12BoundaryModePS7_S8_(%class.SkLightingImageFilterInternal* %1, %class.GrSurfaceFillContext* nonnull %107, %class.GrSurfaceProxyView* nonnull %32, %class.SkMatrix* dereferenceable(40) %5, %struct.SkIRect* nonnull dereferenceable(16) %17, i32 2, %struct.SkIRect* %267, %struct.SkIRect* dereferenceable(16) %4)
  %331 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %320, align 8
  %332 = icmp eq %class.GrSurfaceProxy* %331, null
  br i1 %332, label %345, label %333

333:                                              ; preds = %326
  %334 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %331, i64 0, i32 1
  %335 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %334, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %336 = atomicrmw add i32* %335, i32 -1 acq_rel
  %337 = icmp eq i32 %336, 1
  br i1 %337, label %338, label %345

338:                                              ; preds = %333
  %339 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %334, i64 -2
  %340 = bitcast %class.SkNVRefCnt* %339 to %class.GrSurfaceProxy*
  %341 = bitcast %class.SkNVRefCnt* %339 to void (%class.GrSurfaceProxy*)***
  %342 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %341, align 8
  %343 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %342, i64 1
  %344 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %343, align 8
  call void %344(%class.GrSurfaceProxy* nonnull %340) #11
  br label %345

345:                                              ; preds = %326, %333, %338
  %346 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %33, i64 0, i32 0, i32 0
  %347 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %46, align 8
  %348 = icmp eq %class.GrSurfaceProxy* %347, null
  br i1 %348, label %352, label %349

349:                                              ; preds = %345
  %350 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %347, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %351 = atomicrmw add i32* %350, i32 1 monotonic
  br label %352

352:                                              ; preds = %345, %349
  store %class.GrSurfaceProxy* %347, %class.GrSurfaceProxy** %346, align 8
  %353 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %33, i64 0, i32 1
  %354 = load i32, i32* %47, align 8
  store i32 %354, i32* %353, align 8
  %355 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %33, i64 0, i32 2, i32 0
  %356 = load i16, i16* %48, align 4
  store i16 %356, i16* %355, align 4
  call void @_ZNK29SkLightingImageFilterInternal8drawRectEP20GrSurfaceFillContext18GrSurfaceProxyViewRK8SkMatrixRK7SkIRect12BoundaryModePS7_S8_(%class.SkLightingImageFilterInternal* %1, %class.GrSurfaceFillContext* nonnull %107, %class.GrSurfaceProxyView* nonnull %33, %class.SkMatrix* dereferenceable(40) %5, %struct.SkIRect* nonnull dereferenceable(16) %19, i32 3, %struct.SkIRect* %267, %struct.SkIRect* dereferenceable(16) %4)
  %357 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %346, align 8
  %358 = icmp eq %class.GrSurfaceProxy* %357, null
  br i1 %358, label %371, label %359

359:                                              ; preds = %352
  %360 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %357, i64 0, i32 1
  %361 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %360, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %362 = atomicrmw add i32* %361, i32 -1 acq_rel
  %363 = icmp eq i32 %362, 1
  br i1 %363, label %364, label %371

364:                                              ; preds = %359
  %365 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %360, i64 -2
  %366 = bitcast %class.SkNVRefCnt* %365 to %class.GrSurfaceProxy*
  %367 = bitcast %class.SkNVRefCnt* %365 to void (%class.GrSurfaceProxy*)***
  %368 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %367, align 8
  %369 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %368, i64 1
  %370 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %369, align 8
  call void %370(%class.GrSurfaceProxy* nonnull %366) #11
  br label %371

371:                                              ; preds = %352, %359, %364
  %372 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %34, i64 0, i32 0, i32 0
  %373 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %46, align 8
  %374 = icmp eq %class.GrSurfaceProxy* %373, null
  br i1 %374, label %378, label %375

375:                                              ; preds = %371
  %376 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %373, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %377 = atomicrmw add i32* %376, i32 1 monotonic
  br label %378

378:                                              ; preds = %371, %375
  store %class.GrSurfaceProxy* %373, %class.GrSurfaceProxy** %372, align 8
  %379 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %34, i64 0, i32 1
  %380 = load i32, i32* %47, align 8
  store i32 %380, i32* %379, align 8
  %381 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %34, i64 0, i32 2, i32 0
  %382 = load i16, i16* %48, align 4
  store i16 %382, i16* %381, align 4
  call void @_ZNK29SkLightingImageFilterInternal8drawRectEP20GrSurfaceFillContext18GrSurfaceProxyViewRK8SkMatrixRK7SkIRect12BoundaryModePS7_S8_(%class.SkLightingImageFilterInternal* %1, %class.GrSurfaceFillContext* nonnull %107, %class.GrSurfaceProxyView* nonnull %34, %class.SkMatrix* dereferenceable(40) %5, %struct.SkIRect* nonnull dereferenceable(16) %21, i32 4, %struct.SkIRect* %267, %struct.SkIRect* dereferenceable(16) %4)
  %383 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %372, align 8
  %384 = icmp eq %class.GrSurfaceProxy* %383, null
  br i1 %384, label %397, label %385

385:                                              ; preds = %378
  %386 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %383, i64 0, i32 1
  %387 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %386, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %388 = atomicrmw add i32* %387, i32 -1 acq_rel
  %389 = icmp eq i32 %388, 1
  br i1 %389, label %390, label %397

390:                                              ; preds = %385
  %391 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %386, i64 -2
  %392 = bitcast %class.SkNVRefCnt* %391 to %class.GrSurfaceProxy*
  %393 = bitcast %class.SkNVRefCnt* %391 to void (%class.GrSurfaceProxy*)***
  %394 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %393, align 8
  %395 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %394, i64 1
  %396 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %395, align 8
  call void %396(%class.GrSurfaceProxy* nonnull %392) #11
  br label %397

397:                                              ; preds = %378, %385, %390
  %398 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %35, i64 0, i32 0, i32 0
  %399 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %46, align 8
  %400 = icmp eq %class.GrSurfaceProxy* %399, null
  br i1 %400, label %404, label %401

401:                                              ; preds = %397
  %402 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %399, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %403 = atomicrmw add i32* %402, i32 1 monotonic
  br label %404

404:                                              ; preds = %397, %401
  store %class.GrSurfaceProxy* %399, %class.GrSurfaceProxy** %398, align 8
  %405 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %35, i64 0, i32 1
  %406 = load i32, i32* %47, align 8
  store i32 %406, i32* %405, align 8
  %407 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %35, i64 0, i32 2, i32 0
  %408 = load i16, i16* %48, align 4
  store i16 %408, i16* %407, align 4
  call void @_ZNK29SkLightingImageFilterInternal8drawRectEP20GrSurfaceFillContext18GrSurfaceProxyViewRK8SkMatrixRK7SkIRect12BoundaryModePS7_S8_(%class.SkLightingImageFilterInternal* %1, %class.GrSurfaceFillContext* nonnull %107, %class.GrSurfaceProxyView* nonnull %35, %class.SkMatrix* dereferenceable(40) %5, %struct.SkIRect* nonnull dereferenceable(16) %23, i32 5, %struct.SkIRect* %267, %struct.SkIRect* dereferenceable(16) %4)
  %409 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %398, align 8
  %410 = icmp eq %class.GrSurfaceProxy* %409, null
  br i1 %410, label %423, label %411

411:                                              ; preds = %404
  %412 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %409, i64 0, i32 1
  %413 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %412, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %414 = atomicrmw add i32* %413, i32 -1 acq_rel
  %415 = icmp eq i32 %414, 1
  br i1 %415, label %416, label %423

416:                                              ; preds = %411
  %417 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %412, i64 -2
  %418 = bitcast %class.SkNVRefCnt* %417 to %class.GrSurfaceProxy*
  %419 = bitcast %class.SkNVRefCnt* %417 to void (%class.GrSurfaceProxy*)***
  %420 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %419, align 8
  %421 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %420, i64 1
  %422 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %421, align 8
  call void %422(%class.GrSurfaceProxy* nonnull %418) #11
  br label %423

423:                                              ; preds = %404, %411, %416
  %424 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %36, i64 0, i32 0, i32 0
  %425 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %46, align 8
  %426 = icmp eq %class.GrSurfaceProxy* %425, null
  br i1 %426, label %430, label %427

427:                                              ; preds = %423
  %428 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %425, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %429 = atomicrmw add i32* %428, i32 1 monotonic
  br label %430

430:                                              ; preds = %423, %427
  store %class.GrSurfaceProxy* %425, %class.GrSurfaceProxy** %424, align 8
  %431 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %36, i64 0, i32 1
  %432 = load i32, i32* %47, align 8
  store i32 %432, i32* %431, align 8
  %433 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %36, i64 0, i32 2, i32 0
  %434 = load i16, i16* %48, align 4
  store i16 %434, i16* %433, align 4
  call void @_ZNK29SkLightingImageFilterInternal8drawRectEP20GrSurfaceFillContext18GrSurfaceProxyViewRK8SkMatrixRK7SkIRect12BoundaryModePS7_S8_(%class.SkLightingImageFilterInternal* %1, %class.GrSurfaceFillContext* nonnull %107, %class.GrSurfaceProxyView* nonnull %36, %class.SkMatrix* dereferenceable(40) %5, %struct.SkIRect* nonnull dereferenceable(16) %25, i32 6, %struct.SkIRect* %267, %struct.SkIRect* dereferenceable(16) %4)
  %435 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %424, align 8
  %436 = icmp eq %class.GrSurfaceProxy* %435, null
  br i1 %436, label %449, label %437

437:                                              ; preds = %430
  %438 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %435, i64 0, i32 1
  %439 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %438, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %440 = atomicrmw add i32* %439, i32 -1 acq_rel
  %441 = icmp eq i32 %440, 1
  br i1 %441, label %442, label %449

442:                                              ; preds = %437
  %443 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %438, i64 -2
  %444 = bitcast %class.SkNVRefCnt* %443 to %class.GrSurfaceProxy*
  %445 = bitcast %class.SkNVRefCnt* %443 to void (%class.GrSurfaceProxy*)***
  %446 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %445, align 8
  %447 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %446, i64 1
  %448 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %447, align 8
  call void %448(%class.GrSurfaceProxy* nonnull %444) #11
  br label %449

449:                                              ; preds = %430, %437, %442
  %450 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %37, i64 0, i32 0, i32 0
  %451 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %46, align 8
  %452 = icmp eq %class.GrSurfaceProxy* %451, null
  br i1 %452, label %456, label %453

453:                                              ; preds = %449
  %454 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %451, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %455 = atomicrmw add i32* %454, i32 1 monotonic
  br label %456

456:                                              ; preds = %449, %453
  store %class.GrSurfaceProxy* %451, %class.GrSurfaceProxy** %450, align 8
  %457 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %37, i64 0, i32 1
  %458 = load i32, i32* %47, align 8
  store i32 %458, i32* %457, align 8
  %459 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %37, i64 0, i32 2, i32 0
  %460 = load i16, i16* %48, align 4
  store i16 %460, i16* %459, align 4
  call void @_ZNK29SkLightingImageFilterInternal8drawRectEP20GrSurfaceFillContext18GrSurfaceProxyViewRK8SkMatrixRK7SkIRect12BoundaryModePS7_S8_(%class.SkLightingImageFilterInternal* %1, %class.GrSurfaceFillContext* nonnull %107, %class.GrSurfaceProxyView* nonnull %37, %class.SkMatrix* dereferenceable(40) %5, %struct.SkIRect* nonnull dereferenceable(16) %27, i32 7, %struct.SkIRect* %267, %struct.SkIRect* dereferenceable(16) %4)
  %461 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %450, align 8
  %462 = icmp eq %class.GrSurfaceProxy* %461, null
  br i1 %462, label %475, label %463

463:                                              ; preds = %456
  %464 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %461, i64 0, i32 1
  %465 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %464, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %466 = atomicrmw add i32* %465, i32 -1 acq_rel
  %467 = icmp eq i32 %466, 1
  br i1 %467, label %468, label %475

468:                                              ; preds = %463
  %469 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %464, i64 -2
  %470 = bitcast %class.SkNVRefCnt* %469 to %class.GrSurfaceProxy*
  %471 = bitcast %class.SkNVRefCnt* %469 to void (%class.GrSurfaceProxy*)***
  %472 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %471, align 8
  %473 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %472, i64 1
  %474 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %473, align 8
  call void %474(%class.GrSurfaceProxy* nonnull %470) #11
  br label %475

475:                                              ; preds = %456, %463, %468
  %476 = bitcast %class.GrSurfaceProxyView* %8 to i64*
  %477 = load i64, i64* %476, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %46, align 8
  %478 = bitcast %class.GrSurfaceProxyView* %38 to i64*
  store i64 %477, i64* %478, align 8
  %479 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %38, i64 0, i32 1
  %480 = load i32, i32* %47, align 8
  store i32 %480, i32* %479, align 8
  %481 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %38, i64 0, i32 2, i32 0
  %482 = load i16, i16* %48, align 4
  store i16 %482, i16* %481, align 4
  call void @_ZNK29SkLightingImageFilterInternal8drawRectEP20GrSurfaceFillContext18GrSurfaceProxyViewRK8SkMatrixRK7SkIRect12BoundaryModePS7_S8_(%class.SkLightingImageFilterInternal* %1, %class.GrSurfaceFillContext* nonnull %107, %class.GrSurfaceProxyView* nonnull %38, %class.SkMatrix* dereferenceable(40) %5, %struct.SkIRect* nonnull dereferenceable(16) %29, i32 8, %struct.SkIRect* %267, %struct.SkIRect* dereferenceable(16) %4)
  %483 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %38, i64 0, i32 0, i32 0
  %484 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %483, align 8
  %485 = icmp eq %class.GrSurfaceProxy* %484, null
  br i1 %485, label %498, label %486

486:                                              ; preds = %475
  %487 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %484, i64 0, i32 1
  %488 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %487, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %489 = atomicrmw add i32* %488, i32 -1 acq_rel
  %490 = icmp eq i32 %489, 1
  br i1 %490, label %491, label %498

491:                                              ; preds = %486
  %492 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %487, i64 -2
  %493 = bitcast %class.SkNVRefCnt* %492 to %class.GrSurfaceProxy*
  %494 = bitcast %class.SkNVRefCnt* %492 to void (%class.GrSurfaceProxy*)***
  %495 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %494, align 8
  %496 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %495, i64 1
  %497 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %496, align 8
  call void %497(%class.GrSurfaceProxy* nonnull %493) #11
  br label %498

498:                                              ; preds = %475, %486, %491
  %499 = bitcast { i64, i64 }* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %499) #11
  %500 = load i32, i32* %70, align 4
  %501 = load i32, i32* %72, align 4
  %502 = sub i32 %500, %501
  %503 = load i32, i32* %75, align 4
  %504 = load i32, i32* %77, align 4
  %505 = sub i32 %503, %504
  %506 = zext i32 %505 to i64
  %507 = shl nuw i64 %506, 32
  %508 = zext i32 %502 to i64
  %509 = or i64 %507, %508
  %510 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %39, i64 0, i32 0
  store i64 0, i64* %510, align 8
  %511 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %39, i64 0, i32 1
  store i64 %509, i64* %511, align 8
  %512 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %40, i64 0, i32 0, i32 0
  %513 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %107, i64 0, i32 0, i32 2, i32 0, i32 0
  %514 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %513, align 8, !noalias !14
  %515 = icmp eq %class.GrSurfaceProxy* %514, null
  br i1 %515, label %519, label %516

516:                                              ; preds = %498
  %517 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %514, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %518 = atomicrmw add i32* %517, i32 1 monotonic, !noalias !14
  br label %519

519:                                              ; preds = %498, %516
  store %class.GrSurfaceProxy* %514, %class.GrSurfaceProxy** %512, align 8, !alias.scope !14
  %520 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %40, i64 0, i32 1
  %521 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %107, i64 0, i32 0, i32 2, i32 1
  %522 = load i32, i32* %521, align 8, !noalias !14
  store i32 %522, i32* %520, align 8, !alias.scope !14
  %523 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %40, i64 0, i32 2, i32 0
  %524 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %107, i64 0, i32 0, i32 2, i32 2, i32 0
  %525 = load i16, i16* %524, align 2, !noalias !14
  store i16 %525, i16* %523, align 4, !alias.scope !14
  %526 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %107, i64 0, i32 0, i32 3, i32 2
  %527 = load i32, i32* %526, align 8
  %528 = getelementptr inbounds %class.sk_sp.175, %class.sk_sp.175* %41, i64 0, i32 0
  %529 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %107, i64 0, i32 0, i32 3, i32 0, i32 0
  %530 = load %class.SkColorSpace*, %class.SkColorSpace** %529, align 8, !noalias !17
  %531 = icmp eq %class.SkColorSpace* %530, null
  br i1 %531, label %535, label %532

532:                                              ; preds = %519
  %533 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %530, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %534 = atomicrmw add i32* %533, i32 1 monotonic, !noalias !17
  br label %535

535:                                              ; preds = %519, %532
  store %class.SkColorSpace* %530, %class.SkColorSpace** %528, align 8, !alias.scope !17
  %536 = load %class.SkSpecialImage*, %class.SkSpecialImage** %42, align 8
  %537 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %536, i64 0, i32 1
  call void @_ZN14SkSpecialImage19MakeDeferredFromGpuEP18GrRecordingContextRK7SkIRectj18GrSurfaceProxyView11GrColorType5sk_spI12SkColorSpaceERK14SkSurfaceProps11SkAlphaType(%class.sk_sp.179* sret %0, %class.GrRecordingContext* %44, %struct.SkIRect* nonnull dereferenceable(16) %136, i32 0, %class.GrSurfaceProxyView* nonnull %40, i32 %527, %class.sk_sp.175* nonnull %41, %class.SkSurfaceProps* dereferenceable(8) %537, i32 2) #11
  %538 = load %class.SkColorSpace*, %class.SkColorSpace** %528, align 8
  %539 = icmp eq %class.SkColorSpace* %538, null
  br i1 %539, label %546, label %540

540:                                              ; preds = %535
  %541 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %538, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %542 = atomicrmw add i32* %541, i32 -1 acq_rel
  %543 = icmp eq i32 %542, 1
  br i1 %543, label %544, label %546

544:                                              ; preds = %540
  %545 = bitcast %class.SkColorSpace* %538 to i8*
  call void @_ZdlPv(i8* %545) #14
  br label %546

546:                                              ; preds = %535, %540, %544
  %547 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %512, align 8
  %548 = icmp eq %class.GrSurfaceProxy* %547, null
  br i1 %548, label %561, label %549

549:                                              ; preds = %546
  %550 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %547, i64 0, i32 1
  %551 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %550, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %552 = atomicrmw add i32* %551, i32 -1 acq_rel
  %553 = icmp eq i32 %552, 1
  br i1 %553, label %554, label %561

554:                                              ; preds = %549
  %555 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %550, i64 -2
  %556 = bitcast %class.SkNVRefCnt* %555 to %class.GrSurfaceProxy*
  %557 = bitcast %class.SkNVRefCnt* %555 to void (%class.GrSurfaceProxy*)***
  %558 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %557, align 8
  %559 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %558, i64 1
  %560 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %559, align 8
  call void %560(%class.GrSurfaceProxy* nonnull %556) #11
  br label %561

561:                                              ; preds = %546, %549, %554
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %499) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %220) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %215) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %203) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %198) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %194) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %185) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %174) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %165) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %164) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %143) #11
  %562 = bitcast %class.GrSurfaceFillContext* %107 to void (%class.GrSurfaceFillContext*)***
  %563 = load void (%class.GrSurfaceFillContext*)**, void (%class.GrSurfaceFillContext*)*** %562, align 8
  %564 = getelementptr inbounds void (%class.GrSurfaceFillContext*)*, void (%class.GrSurfaceFillContext*)** %563, i64 1
  %565 = load void (%class.GrSurfaceFillContext*)*, void (%class.GrSurfaceFillContext*)** %564, align 8
  call void %565(%class.GrSurfaceFillContext* nonnull %107) #11
  br label %566

566:                                              ; preds = %133, %561
  %567 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %52, align 8
  %568 = icmp eq %class.GrColorSpaceXform* %567, null
  br i1 %568, label %579, label %569

569:                                              ; preds = %566
  %570 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %567, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %571 = atomicrmw add i32* %570, i32 -1 acq_rel
  %572 = icmp eq i32 %571, 1
  br i1 %572, label %573, label %579

573:                                              ; preds = %569
  %574 = bitcast %class.GrColorSpaceXform* %567 to %class.SkRefCntBase*
  %575 = bitcast %class.GrColorSpaceXform* %567 to void (%class.SkRefCntBase*)***
  %576 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %575, align 8
  %577 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %576, i64 2
  %578 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %577, align 8
  call void %578(%class.SkRefCntBase* nonnull %574) #11
  br label %579

579:                                              ; preds = %573, %569, %566
  %580 = load %class.SkColorSpace*, %class.SkColorSpace** %51, align 8
  %581 = icmp eq %class.SkColorSpace* %580, null
  br i1 %581, label %588, label %582

582:                                              ; preds = %579
  %583 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %580, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %584 = atomicrmw add i32* %583, i32 -1 acq_rel
  %585 = icmp eq i32 %584, 1
  br i1 %585, label %586, label %588

586:                                              ; preds = %582
  %587 = bitcast %class.SkColorSpace* %580 to i8*
  call void @_ZdlPv(i8* %587) #14
  br label %588

588:                                              ; preds = %579, %582, %586
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %50) #11
  %589 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %46, align 8
  %590 = icmp eq %class.GrSurfaceProxy* %589, null
  br i1 %590, label %603, label %591

591:                                              ; preds = %588
  %592 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %589, i64 0, i32 1
  %593 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %592, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %594 = atomicrmw add i32* %593, i32 -1 acq_rel
  %595 = icmp eq i32 %594, 1
  br i1 %595, label %596, label %603

596:                                              ; preds = %591
  %597 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %592, i64 -2
  %598 = bitcast %class.SkNVRefCnt* %597 to %class.GrSurfaceProxy*
  %599 = bitcast %class.SkNVRefCnt* %597 to void (%class.GrSurfaceProxy*)***
  %600 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %599, align 8
  %601 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %600, i64 1
  %602 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %601, align 8
  call void %602(%class.GrSurfaceProxy* nonnull %598) #11
  br label %603

603:                                              ; preds = %588, %591, %596
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #11
  ret void
}

declare void @_ZNK14SkSpecialImage4viewEP18GrRecordingContext(%class.GrSurfaceProxyView* sret, %class.SkSpecialImage*, %class.GrRecordingContext*) local_unnamed_addr #2

declare %class.GrSurfaceFillContext* @_ZN20GrSurfaceFillContext4MakeEP18GrRecordingContext11GrImageInfo12SkBackingFiti11GrMipmapped11GrProtected15GrSurfaceOrigin10SkBudgeted(%class.GrRecordingContext*, %class.GrImageInfo*, i32, i32, i1 zeroext, i1 zeroext, i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN14SkSpecialImage19MakeDeferredFromGpuEP18GrRecordingContextRK7SkIRectj18GrSurfaceProxyView11GrColorType5sk_spI12SkColorSpaceERK14SkSurfaceProps11SkAlphaType(%class.sk_sp.179* sret, %class.GrRecordingContext*, %struct.SkIRect* dereferenceable(16), i32, %class.GrSurfaceProxyView*, i32, %class.sk_sp.175*, %class.SkSurfaceProps* dereferenceable(8), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK18SkImageFilterLight12flattenLightER13SkWriteBuffer(%class.SkImageFilterLight*, %class.SkWriteBuffer* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %class.SkImageFilterLight* %0 to i32 (%class.SkImageFilterLight*)***
  %4 = load i32 (%class.SkImageFilterLight*)**, i32 (%class.SkImageFilterLight*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%class.SkImageFilterLight*)*, i32 (%class.SkImageFilterLight*)** %4, i64 3
  %6 = load i32 (%class.SkImageFilterLight*)*, i32 (%class.SkImageFilterLight*)** %5, align 8
  %7 = tail call i32 %6(%class.SkImageFilterLight* %0) #11
  %8 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %9 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %9, i64 7
  %11 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %10, align 8
  tail call void %11(%class.SkWriteBuffer* %1, i32 %7) #11
  %12 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %0, i64 0, i32 1, i32 0
  %13 = load float, float* %12, align 4
  %14 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, float)***
  %15 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %14, align 8
  %16 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %15, i64 5
  %17 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %16, align 8
  tail call void %17(%class.SkWriteBuffer* %1, float %13) #11
  %18 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %0, i64 0, i32 1, i32 1
  %19 = load float, float* %18, align 4
  %20 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %14, align 8
  %21 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %20, i64 5
  %22 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %21, align 8
  tail call void %22(%class.SkWriteBuffer* %1, float %19) #11
  %23 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %0, i64 0, i32 1, i32 2
  %24 = load float, float* %23, align 4
  %25 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %14, align 8
  %26 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %25, i64 5
  %27 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %26, align 8
  tail call void %27(%class.SkWriteBuffer* %1, float %24) #11
  %28 = bitcast %class.SkImageFilterLight* %0 to void (%class.SkImageFilterLight*, %class.SkWriteBuffer*)***
  %29 = load void (%class.SkImageFilterLight*, %class.SkWriteBuffer*)**, void (%class.SkImageFilterLight*, %class.SkWriteBuffer*)*** %28, align 8
  %30 = getelementptr inbounds void (%class.SkImageFilterLight*, %class.SkWriteBuffer*)*, void (%class.SkImageFilterLight*, %class.SkWriteBuffer*)** %29, i64 9
  %31 = load void (%class.SkImageFilterLight*, %class.SkWriteBuffer*)*, void (%class.SkImageFilterLight*, %class.SkWriteBuffer*)** %30, align 8
  tail call void %31(%class.SkImageFilterLight* %0, %class.SkWriteBuffer* dereferenceable(56) %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkImageFilterLight* @_ZN18SkImageFilterLight14UnflattenLightER12SkReadBuffer(%class.SkReadBuffer* dereferenceable(136)) local_unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %0) #11
  %3 = icmp ugt i32 %2, 2
  br i1 %3, label %4, label %5

4:                                                ; preds = %1
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %0) #11
  br label %5

5:                                                ; preds = %1, %4
  %6 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %7 = load i8, i8* %6, align 8, !range !13
  %8 = icmp eq i8 %7, 0
  %9 = select i1 %8, i32 %2, i32 0
  switch i32 %9, label %22 [
    i32 0, label %10
    i32 1, label %14
    i32 2, label %18
  ]

10:                                               ; preds = %5
  %11 = tail call i8* @_Znwm(i64 40) #14
  %12 = bitcast i8* %11 to %class.SkDistantLight*
  tail call void @_ZN14SkDistantLightC2ER12SkReadBuffer(%class.SkDistantLight* nonnull %12, %class.SkReadBuffer* dereferenceable(136) %0)
  %13 = bitcast i8* %11 to %class.SkImageFilterLight*
  br label %22

14:                                               ; preds = %5
  %15 = tail call i8* @_Znwm(i64 40) #14
  %16 = bitcast i8* %15 to %class.SkPointLight*
  tail call void @_ZN12SkPointLightC2ER12SkReadBuffer(%class.SkPointLight* nonnull %16, %class.SkReadBuffer* dereferenceable(136) %0)
  %17 = bitcast i8* %15 to %class.SkImageFilterLight*
  br label %22

18:                                               ; preds = %5
  %19 = tail call i8* @_Znwm(i64 80) #14
  %20 = bitcast i8* %19 to %class.SkSpotLight*
  tail call void @_ZN11SkSpotLightC2ER12SkReadBuffer(%class.SkSpotLight* nonnull %20, %class.SkReadBuffer* dereferenceable(136) %0)
  %21 = bitcast i8* %19 to %class.SkImageFilterLight*
  br label %22

22:                                               ; preds = %5, %18, %14, %10
  %23 = phi %class.SkImageFilterLight* [ %21, %18 ], [ %17, %14 ], [ %13, %10 ], [ null, %5 ]
  ret %class.SkImageFilterLight* %23
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkDistantLightC2ER12SkReadBuffer(%class.SkDistantLight*, %class.SkReadBuffer* dereferenceable(136)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkDistantLight, %class.SkDistantLight* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %3, align 4
  %4 = getelementptr inbounds %class.SkDistantLight, %class.SkDistantLight* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTV18SkImageFilterLight, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %6 = insertelement <2 x float> undef, float %5, i32 0
  %7 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %8 = insertelement <2 x float> %6, float %7, i32 1
  %9 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %10 = bitcast float %5 to i32
  %11 = and i32 %10, 2139095040
  %12 = icmp eq i32 %11, 2139095040
  br i1 %12, label %21, label %13

13:                                               ; preds = %2
  %14 = bitcast float %7 to i32
  %15 = and i32 %14, 2139095040
  %16 = icmp eq i32 %15, 2139095040
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = bitcast float %9 to i32
  %19 = and i32 %18, 2139095040
  %20 = icmp eq i32 %19, 2139095040
  br i1 %20, label %21, label %22

21:                                               ; preds = %17, %13, %2
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #11
  br label %22

22:                                               ; preds = %17, %21
  %23 = getelementptr inbounds %class.SkDistantLight, %class.SkDistantLight* %0, i64 0, i32 0, i32 1
  %24 = bitcast %struct.SkPoint3* %23 to <2 x float>*
  store <2 x float> %8, <2 x float>* %24, align 4
  %25 = getelementptr inbounds %class.SkDistantLight, %class.SkDistantLight* %0, i64 0, i32 0, i32 1, i32 2
  store float %9, float* %25, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTV14SkDistantLight, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %26 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %27 = insertelement <2 x float> undef, float %26, i32 0
  %28 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %29 = insertelement <2 x float> %27, float %28, i32 1
  %30 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %31 = bitcast float %26 to i32
  %32 = and i32 %31, 2139095040
  %33 = icmp eq i32 %32, 2139095040
  br i1 %33, label %42, label %34

34:                                               ; preds = %22
  %35 = bitcast float %28 to i32
  %36 = and i32 %35, 2139095040
  %37 = icmp eq i32 %36, 2139095040
  br i1 %37, label %42, label %38

38:                                               ; preds = %34
  %39 = bitcast float %30 to i32
  %40 = and i32 %39, 2139095040
  %41 = icmp eq i32 %40, 2139095040
  br i1 %41, label %42, label %43

42:                                               ; preds = %38, %34, %22
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #11
  br label %43

43:                                               ; preds = %38, %42
  %44 = getelementptr inbounds %class.SkDistantLight, %class.SkDistantLight* %0, i64 0, i32 1
  %45 = bitcast %struct.SkPoint3* %44 to <2 x float>*
  store <2 x float> %29, <2 x float>* %45, align 8
  %46 = getelementptr inbounds %class.SkDistantLight, %class.SkDistantLight* %0, i64 0, i32 1, i32 2
  store float %30, float* %46, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkPointLightC2ER12SkReadBuffer(%class.SkPointLight*, %class.SkReadBuffer* dereferenceable(136)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkPointLight, %class.SkPointLight* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %3, align 4
  %4 = getelementptr inbounds %class.SkPointLight, %class.SkPointLight* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTV18SkImageFilterLight, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %6 = insertelement <2 x float> undef, float %5, i32 0
  %7 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %8 = insertelement <2 x float> %6, float %7, i32 1
  %9 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %10 = bitcast float %5 to i32
  %11 = and i32 %10, 2139095040
  %12 = icmp eq i32 %11, 2139095040
  br i1 %12, label %21, label %13

13:                                               ; preds = %2
  %14 = bitcast float %7 to i32
  %15 = and i32 %14, 2139095040
  %16 = icmp eq i32 %15, 2139095040
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = bitcast float %9 to i32
  %19 = and i32 %18, 2139095040
  %20 = icmp eq i32 %19, 2139095040
  br i1 %20, label %21, label %22

21:                                               ; preds = %17, %13, %2
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #11
  br label %22

22:                                               ; preds = %17, %21
  %23 = getelementptr inbounds %class.SkPointLight, %class.SkPointLight* %0, i64 0, i32 0, i32 1
  %24 = bitcast %struct.SkPoint3* %23 to <2 x float>*
  store <2 x float> %8, <2 x float>* %24, align 4
  %25 = getelementptr inbounds %class.SkPointLight, %class.SkPointLight* %0, i64 0, i32 0, i32 1, i32 2
  store float %9, float* %25, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTV12SkPointLight, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %26 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %27 = insertelement <2 x float> undef, float %26, i32 0
  %28 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %29 = insertelement <2 x float> %27, float %28, i32 1
  %30 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %31 = bitcast float %26 to i32
  %32 = and i32 %31, 2139095040
  %33 = icmp eq i32 %32, 2139095040
  br i1 %33, label %42, label %34

34:                                               ; preds = %22
  %35 = bitcast float %28 to i32
  %36 = and i32 %35, 2139095040
  %37 = icmp eq i32 %36, 2139095040
  br i1 %37, label %42, label %38

38:                                               ; preds = %34
  %39 = bitcast float %30 to i32
  %40 = and i32 %39, 2139095040
  %41 = icmp eq i32 %40, 2139095040
  br i1 %41, label %42, label %43

42:                                               ; preds = %38, %34, %22
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #11
  br label %43

43:                                               ; preds = %38, %42
  %44 = getelementptr inbounds %class.SkPointLight, %class.SkPointLight* %0, i64 0, i32 1
  %45 = bitcast %struct.SkPoint3* %44 to <2 x float>*
  store <2 x float> %29, <2 x float>* %45, align 8
  %46 = getelementptr inbounds %class.SkPointLight, %class.SkPointLight* %0, i64 0, i32 1, i32 2
  store float %30, float* %46, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11SkSpotLightC2ER12SkReadBuffer(%class.SkSpotLight*, %class.SkReadBuffer* dereferenceable(136)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %3, align 4
  %4 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTV18SkImageFilterLight, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %6 = insertelement <2 x float> undef, float %5, i32 0
  %7 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %8 = insertelement <2 x float> %6, float %7, i32 1
  %9 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %10 = bitcast float %5 to i32
  %11 = and i32 %10, 2139095040
  %12 = icmp eq i32 %11, 2139095040
  br i1 %12, label %21, label %13

13:                                               ; preds = %2
  %14 = bitcast float %7 to i32
  %15 = and i32 %14, 2139095040
  %16 = icmp eq i32 %15, 2139095040
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = bitcast float %9 to i32
  %19 = and i32 %18, 2139095040
  %20 = icmp eq i32 %19, 2139095040
  br i1 %20, label %21, label %22

21:                                               ; preds = %17, %13, %2
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #11
  br label %22

22:                                               ; preds = %17, %21
  %23 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 0, i32 1
  %24 = bitcast %struct.SkPoint3* %23 to <2 x float>*
  store <2 x float> %8, <2 x float>* %24, align 4
  %25 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 0, i32 1, i32 2
  store float %9, float* %25, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTV11SkSpotLight, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %26 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %27 = insertelement <2 x float> undef, float %26, i32 0
  %28 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %29 = insertelement <2 x float> %27, float %28, i32 1
  %30 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %31 = bitcast float %26 to i32
  %32 = and i32 %31, 2139095040
  %33 = icmp eq i32 %32, 2139095040
  br i1 %33, label %42, label %34

34:                                               ; preds = %22
  %35 = bitcast float %28 to i32
  %36 = and i32 %35, 2139095040
  %37 = icmp eq i32 %36, 2139095040
  br i1 %37, label %42, label %38

38:                                               ; preds = %34
  %39 = bitcast float %30 to i32
  %40 = and i32 %39, 2139095040
  %41 = icmp eq i32 %40, 2139095040
  br i1 %41, label %42, label %43

42:                                               ; preds = %38, %34, %22
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #11
  br label %43

43:                                               ; preds = %38, %42
  %44 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 1
  %45 = bitcast %struct.SkPoint3* %44 to <2 x float>*
  store <2 x float> %29, <2 x float>* %45, align 8
  %46 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 1, i32 2
  store float %30, float* %46, align 8
  %47 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %48 = insertelement <2 x float> undef, float %47, i32 0
  %49 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %50 = insertelement <2 x float> %48, float %49, i32 1
  %51 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %52 = bitcast float %47 to i32
  %53 = and i32 %52, 2139095040
  %54 = icmp eq i32 %53, 2139095040
  br i1 %54, label %63, label %55

55:                                               ; preds = %43
  %56 = bitcast float %49 to i32
  %57 = and i32 %56, 2139095040
  %58 = icmp eq i32 %57, 2139095040
  br i1 %58, label %63, label %59

59:                                               ; preds = %55
  %60 = bitcast float %51 to i32
  %61 = and i32 %60, 2139095040
  %62 = icmp eq i32 %61, 2139095040
  br i1 %62, label %63, label %64

63:                                               ; preds = %59, %55, %43
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #11
  br label %64

64:                                               ; preds = %59, %63
  %65 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 2
  %66 = bitcast %struct.SkPoint3* %65 to <2 x float>*
  store <2 x float> %50, <2 x float>* %66, align 4
  %67 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 2, i32 2
  store float %51, float* %67, align 4
  %68 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %69 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 3
  store float %68, float* %69, align 8
  %70 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %71 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 4
  store float %70, float* %71, align 4
  %72 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %73 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 5
  store float %72, float* %73, align 8
  %74 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %75 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 6
  store float %74, float* %75, align 4
  %76 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %77 = insertelement <2 x float> undef, float %76, i32 0
  %78 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %79 = insertelement <2 x float> %77, float %78, i32 1
  %80 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %81 = bitcast float %76 to i32
  %82 = and i32 %81, 2139095040
  %83 = icmp eq i32 %82, 2139095040
  br i1 %83, label %92, label %84

84:                                               ; preds = %64
  %85 = bitcast float %78 to i32
  %86 = and i32 %85, 2139095040
  %87 = icmp eq i32 %86, 2139095040
  br i1 %87, label %92, label %88

88:                                               ; preds = %84
  %89 = bitcast float %80 to i32
  %90 = and i32 %89, 2139095040
  %91 = icmp eq i32 %90, 2139095040
  br i1 %91, label %92, label %93

92:                                               ; preds = %88, %84, %64
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #11
  br label %93

93:                                               ; preds = %88, %92
  %94 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 7
  %95 = bitcast %struct.SkPoint3* %94 to <2 x float>*
  store <2 x float> %79, <2 x float>* %95, align 8
  %96 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 7, i32 2
  store float %80, float* %96, align 8
  %97 = bitcast float* %69 to i32*
  %98 = load i32, i32* %97, align 8
  %99 = and i32 %98, 2139095040
  %100 = icmp eq i32 %99, 2139095040
  br i1 %100, label %116, label %101

101:                                              ; preds = %93
  %102 = bitcast float* %71 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = and i32 %103, 2139095040
  %105 = icmp eq i32 %104, 2139095040
  br i1 %105, label %116, label %106

106:                                              ; preds = %101
  %107 = bitcast float* %73 to i32*
  %108 = load i32, i32* %107, align 8
  %109 = and i32 %108, 2139095040
  %110 = icmp eq i32 %109, 2139095040
  br i1 %110, label %116, label %111

111:                                              ; preds = %106
  %112 = bitcast float* %75 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i32 %113, 2139095040
  %115 = icmp eq i32 %114, 2139095040
  br i1 %115, label %116, label %117

116:                                              ; preds = %111, %106, %101, %93
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #11
  br label %117

117:                                              ; preds = %111, %116
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkImageFilters17DistantLitDiffuseERK8SkPoint3jff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* noalias nocapture sret, %struct.SkPoint3* nocapture readonly dereferenceable(12), i32, float, float, %class.sk_sp* nocapture, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %8 = alloca %class.sk_sp, align 8
  %9 = tail call i8* @_Znwm(i64 40) #14
  %10 = getelementptr inbounds i8, i8* %9, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 1, i32* %11, align 4
  %12 = bitcast i8* %9 to i32 (...)***
  %13 = lshr i32 %2, 16
  %14 = and i32 %13, 255
  %15 = uitofp i32 %14 to float
  %16 = lshr i32 %2, 8
  %17 = and i32 %16, 255
  %18 = uitofp i32 %17 to float
  %19 = and i32 %2, 255
  %20 = uitofp i32 %19 to float
  %21 = insertelement <2 x float> undef, float %15, i32 0
  %22 = insertelement <2 x float> %21, float %18, i32 1
  %23 = getelementptr inbounds i8, i8* %9, i64 12
  %24 = bitcast i8* %23 to <2 x float>*
  store <2 x float> %22, <2 x float>* %24, align 4
  %25 = getelementptr inbounds i8, i8* %9, i64 20
  %26 = bitcast i8* %25 to float*
  store float %20, float* %26, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTV14SkDistantLight, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %27 = getelementptr inbounds i8, i8* %9, i64 24
  %28 = bitcast %struct.SkPoint3* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 4 %28, i64 12, i1 false) #11
  %29 = ptrtoint i8* %9 to i64
  %30 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %31 = bitcast %class.sk_sp* %5 to i64*
  %32 = load i64, i64* %31, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %30, align 8
  %33 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %6, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %6, i64 0, i32 0, i32 0
  %35 = load float, float* %34, align 4
  %36 = fcmp une float %35, 0xFFF0000000000000
  br i1 %36, label %49, label %37

37:                                               ; preds = %7
  %38 = getelementptr inbounds float, float* %34, i64 1
  %39 = load float, float* %38, align 4
  %40 = fcmp une float %39, 0xFFF0000000000000
  br i1 %40, label %49, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds float, float* %34, i64 2
  %43 = load float, float* %42, align 4
  %44 = fcmp une float %43, 0x7FF0000000000000
  br i1 %44, label %49, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds float, float* %34, i64 3
  %47 = load float, float* %46, align 4
  %48 = fcmp une float %47, 0x7FF0000000000000
  br i1 %48, label %49, label %50

49:                                               ; preds = %45, %41, %37, %7
  br label %50

50:                                               ; preds = %49, %45
  %51 = phi %struct.SkRect* [ %33, %49 ], [ null, %45 ]
  %52 = bitcast float %3 to i32
  %53 = and i32 %52, 2139095040
  %54 = icmp eq i32 %53, 2139095040
  br i1 %54, label %89, label %55

55:                                               ; preds = %50
  %56 = bitcast float %4 to i32
  %57 = and i32 %56, 2139095040
  %58 = icmp eq i32 %57, 2139095040
  %59 = fcmp olt float %4, 0.000000e+00
  %60 = or i1 %58, %59
  br i1 %60, label %89, label %61

61:                                               ; preds = %55
  %62 = tail call i8* @_Znwm(i64 96) #14, !noalias !20
  %63 = bitcast %class.sk_sp* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #11, !noalias !20
  %64 = bitcast %class.sk_sp* %8 to i64*
  store i64 %32, i64* %64, align 8, !noalias !20
  %65 = bitcast i8* %62 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %65, %class.sk_sp* nonnull %8, i32 1, %struct.SkRect* %51) #11, !noalias !20
  %66 = bitcast i8* %62 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV29SkLightingImageFilterInternal, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8, !noalias !20
  %67 = getelementptr inbounds i8, i8* %62, i64 80
  %68 = bitcast i8* %67 to i64*
  store i64 %29, i64* %68, align 8, !noalias !20
  %69 = getelementptr inbounds i8, i8* %62, i64 88
  %70 = bitcast i8* %69 to float*
  %71 = fdiv float %3, 2.550000e+02
  store float %71, float* %70, align 8, !noalias !20
  %72 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %8, i64 0, i32 0
  %73 = load %class.SkImageFilter*, %class.SkImageFilter** %72, align 8, !noalias !20
  %74 = icmp eq %class.SkImageFilter* %73, null
  br i1 %74, label %85, label %75

75:                                               ; preds = %61
  %76 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %73, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = atomicrmw add i32* %76, i32 -1 acq_rel, !noalias !20
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %85

79:                                               ; preds = %75
  %80 = bitcast %class.SkImageFilter* %73 to %class.SkRefCntBase*
  %81 = bitcast %class.SkImageFilter* %73 to void (%class.SkRefCntBase*)***
  %82 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %81, align 8, !noalias !20
  %83 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %82, i64 2
  %84 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %83, align 8, !noalias !20
  call void %84(%class.SkRefCntBase* nonnull %80) #11, !noalias !20
  br label %85

85:                                               ; preds = %79, %75, %61
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV28SkDiffuseLightingImageFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8, !noalias !20
  %86 = getelementptr inbounds i8, i8* %62, i64 92
  %87 = bitcast i8* %86 to float*
  store float %4, float* %87, align 4, !noalias !20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #11, !noalias !20
  %88 = bitcast %class.sk_sp* %0 to i8**
  store i8* %62, i8** %88, align 8, !alias.scope !20
  br label %112

89:                                               ; preds = %50, %55
  %90 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %90, align 8, !alias.scope !20
  %91 = icmp eq i64 %32, 0
  br i1 %91, label %103, label %92

92:                                               ; preds = %89
  %93 = inttoptr i64 %32 to %class.SkImageFilter*
  %94 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %93, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = atomicrmw add i32* %94, i32 -1 acq_rel
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %97, label %103

97:                                               ; preds = %92
  %98 = inttoptr i64 %32 to %class.SkRefCntBase*
  %99 = inttoptr i64 %32 to void (%class.SkRefCntBase*)***
  %100 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %99, align 8
  %101 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %100, i64 2
  %102 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %101, align 8
  tail call void %102(%class.SkRefCntBase* nonnull %98) #11
  br label %103

103:                                              ; preds = %97, %92, %89
  %104 = atomicrmw add i32* %11, i32 -1 acq_rel
  %105 = icmp eq i32 %104, 1
  br i1 %105, label %106, label %112

106:                                              ; preds = %103
  %107 = bitcast i8* %9 to %class.SkRefCntBase*
  %108 = bitcast i8* %9 to void (%class.SkRefCntBase*)***
  %109 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %108, align 8
  %110 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %109, i64 2
  %111 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %110, align 8
  tail call void %111(%class.SkRefCntBase* nonnull %107) #11
  br label %112

112:                                              ; preds = %106, %103, %85
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN28SkDiffuseLightingImageFilter4MakeE5sk_spI18SkImageFilterLightEffS0_I13SkImageFilterEPK6SkRect(%class.sk_sp* noalias nocapture sret, %class.sk_sp.1* nocapture, float, float, %class.sk_sp* nocapture, %struct.SkRect*) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.sk_sp, align 8
  %8 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %1, i64 0, i32 0
  %9 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %8, align 8
  %10 = icmp eq %class.SkImageFilterLight* %9, null
  %11 = ptrtoint %class.SkImageFilterLight* %9 to i64
  br i1 %10, label %12, label %14

12:                                               ; preds = %6
  %13 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %13, align 8
  br label %59

14:                                               ; preds = %6
  %15 = bitcast float %2 to i32
  %16 = and i32 %15, 2139095040
  %17 = icmp eq i32 %16, 2139095040
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = bitcast float %3 to i32
  %20 = and i32 %19, 2139095040
  %21 = icmp eq i32 %20, 2139095040
  br i1 %21, label %22, label %24

22:                                               ; preds = %18, %14
  %23 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %23, align 8
  br label %59

24:                                               ; preds = %18
  %25 = fcmp olt float %3, 0.000000e+00
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %27, align 8
  br label %59

28:                                               ; preds = %24
  %29 = tail call i8* @_Znwm(i64 96) #14
  store %class.SkImageFilterLight* null, %class.SkImageFilterLight** %8, align 8
  %30 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %31 = bitcast %class.sk_sp* %4 to i64*
  %32 = load i64, i64* %31, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %30, align 8
  %33 = bitcast %class.sk_sp* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33)
  %34 = bitcast %class.sk_sp* %7 to i64*
  store i64 %32, i64* %34, align 8
  %35 = bitcast i8* %29 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %35, %class.sk_sp* nonnull %7, i32 1, %struct.SkRect* %5) #11
  %36 = bitcast i8* %29 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV29SkLightingImageFilterInternal, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = getelementptr inbounds i8, i8* %29, i64 80
  %38 = bitcast i8* %37 to i64*
  store i64 %11, i64* %38, align 8
  %39 = getelementptr inbounds i8, i8* %29, i64 88
  %40 = bitcast i8* %39 to float*
  %41 = fdiv float %2, 2.550000e+02
  store float %41, float* %40, align 8
  %42 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %7, i64 0, i32 0
  %43 = load %class.SkImageFilter*, %class.SkImageFilter** %42, align 8
  %44 = icmp eq %class.SkImageFilter* %43, null
  br i1 %44, label %55, label %45

45:                                               ; preds = %28
  %46 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %43, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 -1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %55

49:                                               ; preds = %45
  %50 = bitcast %class.SkImageFilter* %43 to %class.SkRefCntBase*
  %51 = bitcast %class.SkImageFilter* %43 to void (%class.SkRefCntBase*)***
  %52 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %51, align 8
  %53 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, i64 2
  %54 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, align 8
  call void %54(%class.SkRefCntBase* nonnull %50) #11
  br label %55

55:                                               ; preds = %28, %45, %49
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV28SkDiffuseLightingImageFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %56 = getelementptr inbounds i8, i8* %29, i64 92
  %57 = bitcast i8* %56 to float*
  store float %3, float* %57, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33)
  %58 = bitcast %class.sk_sp* %0 to i8**
  store i8* %29, i8** %58, align 8
  br label %59

59:                                               ; preds = %55, %26, %22, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkImageFilters15PointLitDiffuseERK8SkPoint3jff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* noalias nocapture sret, %struct.SkPoint3* nocapture readonly dereferenceable(12), i32, float, float, %class.sk_sp* nocapture, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %8 = alloca %class.sk_sp, align 8
  %9 = tail call i8* @_Znwm(i64 40) #14
  %10 = getelementptr inbounds i8, i8* %9, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 1, i32* %11, align 4
  %12 = bitcast i8* %9 to i32 (...)***
  %13 = lshr i32 %2, 16
  %14 = and i32 %13, 255
  %15 = uitofp i32 %14 to float
  %16 = lshr i32 %2, 8
  %17 = and i32 %16, 255
  %18 = uitofp i32 %17 to float
  %19 = and i32 %2, 255
  %20 = uitofp i32 %19 to float
  %21 = insertelement <2 x float> undef, float %15, i32 0
  %22 = insertelement <2 x float> %21, float %18, i32 1
  %23 = getelementptr inbounds i8, i8* %9, i64 12
  %24 = bitcast i8* %23 to <2 x float>*
  store <2 x float> %22, <2 x float>* %24, align 4
  %25 = getelementptr inbounds i8, i8* %9, i64 20
  %26 = bitcast i8* %25 to float*
  store float %20, float* %26, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTV12SkPointLight, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %27 = getelementptr inbounds i8, i8* %9, i64 24
  %28 = bitcast %struct.SkPoint3* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 4 %28, i64 12, i1 false) #11
  %29 = ptrtoint i8* %9 to i64
  %30 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %31 = bitcast %class.sk_sp* %5 to i64*
  %32 = load i64, i64* %31, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %30, align 8
  %33 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %6, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %6, i64 0, i32 0, i32 0
  %35 = load float, float* %34, align 4
  %36 = fcmp une float %35, 0xFFF0000000000000
  br i1 %36, label %49, label %37

37:                                               ; preds = %7
  %38 = getelementptr inbounds float, float* %34, i64 1
  %39 = load float, float* %38, align 4
  %40 = fcmp une float %39, 0xFFF0000000000000
  br i1 %40, label %49, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds float, float* %34, i64 2
  %43 = load float, float* %42, align 4
  %44 = fcmp une float %43, 0x7FF0000000000000
  br i1 %44, label %49, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds float, float* %34, i64 3
  %47 = load float, float* %46, align 4
  %48 = fcmp une float %47, 0x7FF0000000000000
  br i1 %48, label %49, label %50

49:                                               ; preds = %45, %41, %37, %7
  br label %50

50:                                               ; preds = %49, %45
  %51 = phi %struct.SkRect* [ %33, %49 ], [ null, %45 ]
  %52 = bitcast float %3 to i32
  %53 = and i32 %52, 2139095040
  %54 = icmp eq i32 %53, 2139095040
  br i1 %54, label %89, label %55

55:                                               ; preds = %50
  %56 = bitcast float %4 to i32
  %57 = and i32 %56, 2139095040
  %58 = icmp eq i32 %57, 2139095040
  %59 = fcmp olt float %4, 0.000000e+00
  %60 = or i1 %58, %59
  br i1 %60, label %89, label %61

61:                                               ; preds = %55
  %62 = tail call i8* @_Znwm(i64 96) #14, !noalias !23
  %63 = bitcast %class.sk_sp* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #11, !noalias !23
  %64 = bitcast %class.sk_sp* %8 to i64*
  store i64 %32, i64* %64, align 8, !noalias !23
  %65 = bitcast i8* %62 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %65, %class.sk_sp* nonnull %8, i32 1, %struct.SkRect* %51) #11, !noalias !23
  %66 = bitcast i8* %62 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV29SkLightingImageFilterInternal, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8, !noalias !23
  %67 = getelementptr inbounds i8, i8* %62, i64 80
  %68 = bitcast i8* %67 to i64*
  store i64 %29, i64* %68, align 8, !noalias !23
  %69 = getelementptr inbounds i8, i8* %62, i64 88
  %70 = bitcast i8* %69 to float*
  %71 = fdiv float %3, 2.550000e+02
  store float %71, float* %70, align 8, !noalias !23
  %72 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %8, i64 0, i32 0
  %73 = load %class.SkImageFilter*, %class.SkImageFilter** %72, align 8, !noalias !23
  %74 = icmp eq %class.SkImageFilter* %73, null
  br i1 %74, label %85, label %75

75:                                               ; preds = %61
  %76 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %73, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = atomicrmw add i32* %76, i32 -1 acq_rel, !noalias !23
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %85

79:                                               ; preds = %75
  %80 = bitcast %class.SkImageFilter* %73 to %class.SkRefCntBase*
  %81 = bitcast %class.SkImageFilter* %73 to void (%class.SkRefCntBase*)***
  %82 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %81, align 8, !noalias !23
  %83 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %82, i64 2
  %84 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %83, align 8, !noalias !23
  call void %84(%class.SkRefCntBase* nonnull %80) #11, !noalias !23
  br label %85

85:                                               ; preds = %79, %75, %61
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV28SkDiffuseLightingImageFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8, !noalias !23
  %86 = getelementptr inbounds i8, i8* %62, i64 92
  %87 = bitcast i8* %86 to float*
  store float %4, float* %87, align 4, !noalias !23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #11, !noalias !23
  %88 = bitcast %class.sk_sp* %0 to i8**
  store i8* %62, i8** %88, align 8, !alias.scope !23
  br label %112

89:                                               ; preds = %50, %55
  %90 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %90, align 8, !alias.scope !23
  %91 = icmp eq i64 %32, 0
  br i1 %91, label %103, label %92

92:                                               ; preds = %89
  %93 = inttoptr i64 %32 to %class.SkImageFilter*
  %94 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %93, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = atomicrmw add i32* %94, i32 -1 acq_rel
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %97, label %103

97:                                               ; preds = %92
  %98 = inttoptr i64 %32 to %class.SkRefCntBase*
  %99 = inttoptr i64 %32 to void (%class.SkRefCntBase*)***
  %100 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %99, align 8
  %101 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %100, i64 2
  %102 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %101, align 8
  tail call void %102(%class.SkRefCntBase* nonnull %98) #11
  br label %103

103:                                              ; preds = %97, %92, %89
  %104 = atomicrmw add i32* %11, i32 -1 acq_rel
  %105 = icmp eq i32 %104, 1
  br i1 %105, label %106, label %112

106:                                              ; preds = %103
  %107 = bitcast i8* %9 to %class.SkRefCntBase*
  %108 = bitcast i8* %9 to void (%class.SkRefCntBase*)***
  %109 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %108, align 8
  %110 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %109, i64 2
  %111 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %110, align 8
  tail call void %111(%class.SkRefCntBase* nonnull %107) #11
  br label %112

112:                                              ; preds = %106, %103, %85
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkImageFilters14SpotLitDiffuseERK8SkPoint3S2_ffjff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* noalias nocapture sret, %struct.SkPoint3* nocapture readonly dereferenceable(12), %struct.SkPoint3* nocapture readonly dereferenceable(12), float, float, i32, float, float, %class.sk_sp* nocapture, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %11 = alloca %class.sk_sp, align 8
  %12 = tail call i8* @_Znwm(i64 80) #14
  %13 = getelementptr inbounds i8, i8* %12, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 1, i32* %14, align 4
  %15 = bitcast i8* %12 to i32 (...)***
  %16 = lshr i32 %5, 16
  %17 = and i32 %16, 255
  %18 = uitofp i32 %17 to float
  %19 = lshr i32 %5, 8
  %20 = and i32 %19, 255
  %21 = uitofp i32 %20 to float
  %22 = and i32 %5, 255
  %23 = uitofp i32 %22 to float
  %24 = insertelement <2 x float> undef, float %18, i32 0
  %25 = insertelement <2 x float> %24, float %21, i32 1
  %26 = getelementptr inbounds i8, i8* %12, i64 12
  %27 = bitcast i8* %26 to <2 x float>*
  store <2 x float> %25, <2 x float>* %27, align 4
  %28 = getelementptr inbounds i8, i8* %12, i64 20
  %29 = bitcast i8* %28 to float*
  store float %23, float* %29, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTV11SkSpotLight, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %30 = getelementptr inbounds i8, i8* %12, i64 24
  %31 = bitcast %struct.SkPoint3* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 4 %31, i64 12, i1 false) #11
  %32 = getelementptr inbounds i8, i8* %12, i64 36
  %33 = bitcast %struct.SkPoint3* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* align 4 %33, i64 12, i1 false) #11
  %34 = getelementptr inbounds i8, i8* %12, i64 48
  %35 = bitcast i8* %34 to float*
  store float %3, float* %35, align 8
  %36 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %2, i64 0, i32 0
  %37 = load float, float* %36, align 4
  %38 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %1, i64 0, i32 0
  %39 = load float, float* %38, align 4
  %40 = fsub float %37, %39
  %41 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %2, i64 0, i32 1
  %42 = load float, float* %41, align 4
  %43 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %1, i64 0, i32 1
  %44 = load float, float* %43, align 4
  %45 = fsub float %42, %44
  %46 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %2, i64 0, i32 2
  %47 = load float, float* %46, align 4
  %48 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %1, i64 0, i32 2
  %49 = load float, float* %48, align 4
  %50 = fsub float %47, %49
  %51 = getelementptr inbounds i8, i8* %12, i64 64
  %52 = getelementptr inbounds i8, i8* %12, i64 72
  %53 = bitcast i8* %52 to float*
  %54 = bitcast i8* %51 to float*
  %55 = fmul float %40, %40
  %56 = getelementptr inbounds i8, i8* %12, i64 68
  %57 = bitcast i8* %56 to float*
  %58 = fmul float %45, %45
  %59 = fadd float %55, %58
  %60 = fmul float %50, %50
  %61 = fadd float %59, %60
  %62 = fadd float %61, 0x3F30000000000000
  %63 = tail call float @sqrtf(float %62) #11
  %64 = fdiv float 1.000000e+00, %63
  %65 = fmul float %64, %40
  store float %65, float* %54, align 4
  %66 = fmul float %64, %45
  store float %66, float* %57, align 4
  %67 = fmul float %64, %50
  store float %67, float* %53, align 4
  %68 = fmul float %4, 0x3F91DF46A0000000
  %69 = tail call float @cosf(float %68) #11
  %70 = getelementptr inbounds i8, i8* %12, i64 52
  %71 = bitcast i8* %70 to float*
  store float %69, float* %71, align 4
  %72 = fadd float %69, 0x3F90624DE0000000
  %73 = getelementptr inbounds i8, i8* %12, i64 56
  %74 = bitcast i8* %73 to float*
  store float %72, float* %74, align 8
  %75 = getelementptr inbounds i8, i8* %12, i64 60
  %76 = bitcast i8* %75 to float*
  store float 0x404F3FFFE0000000, float* %76, align 4
  %77 = ptrtoint i8* %12 to i64
  %78 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %8, i64 0, i32 0
  %79 = bitcast %class.sk_sp* %8 to i64*
  %80 = load i64, i64* %79, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %78, align 8
  %81 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %9, i64 0, i32 0
  %82 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %9, i64 0, i32 0, i32 0
  %83 = load float, float* %82, align 4
  %84 = fcmp une float %83, 0xFFF0000000000000
  br i1 %84, label %97, label %85

85:                                               ; preds = %10
  %86 = getelementptr inbounds float, float* %82, i64 1
  %87 = load float, float* %86, align 4
  %88 = fcmp une float %87, 0xFFF0000000000000
  br i1 %88, label %97, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds float, float* %82, i64 2
  %91 = load float, float* %90, align 4
  %92 = fcmp une float %91, 0x7FF0000000000000
  br i1 %92, label %97, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds float, float* %82, i64 3
  %95 = load float, float* %94, align 4
  %96 = fcmp une float %95, 0x7FF0000000000000
  br i1 %96, label %97, label %98

97:                                               ; preds = %93, %89, %85, %10
  br label %98

98:                                               ; preds = %97, %93
  %99 = phi %struct.SkRect* [ %81, %97 ], [ null, %93 ]
  %100 = bitcast float %6 to i32
  %101 = and i32 %100, 2139095040
  %102 = icmp eq i32 %101, 2139095040
  br i1 %102, label %137, label %103

103:                                              ; preds = %98
  %104 = bitcast float %7 to i32
  %105 = and i32 %104, 2139095040
  %106 = icmp eq i32 %105, 2139095040
  %107 = fcmp olt float %7, 0.000000e+00
  %108 = or i1 %106, %107
  br i1 %108, label %137, label %109

109:                                              ; preds = %103
  %110 = tail call i8* @_Znwm(i64 96) #14, !noalias !26
  %111 = bitcast %class.sk_sp* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #11, !noalias !26
  %112 = bitcast %class.sk_sp* %11 to i64*
  store i64 %80, i64* %112, align 8, !noalias !26
  %113 = bitcast i8* %110 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %113, %class.sk_sp* nonnull %11, i32 1, %struct.SkRect* %99) #11, !noalias !26
  %114 = bitcast i8* %110 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV29SkLightingImageFilterInternal, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %114, align 8, !noalias !26
  %115 = getelementptr inbounds i8, i8* %110, i64 80
  %116 = bitcast i8* %115 to i64*
  store i64 %77, i64* %116, align 8, !noalias !26
  %117 = getelementptr inbounds i8, i8* %110, i64 88
  %118 = bitcast i8* %117 to float*
  %119 = fdiv float %6, 2.550000e+02
  store float %119, float* %118, align 8, !noalias !26
  %120 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %11, i64 0, i32 0
  %121 = load %class.SkImageFilter*, %class.SkImageFilter** %120, align 8, !noalias !26
  %122 = icmp eq %class.SkImageFilter* %121, null
  br i1 %122, label %133, label %123

123:                                              ; preds = %109
  %124 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %121, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = atomicrmw add i32* %124, i32 -1 acq_rel, !noalias !26
  %126 = icmp eq i32 %125, 1
  br i1 %126, label %127, label %133

127:                                              ; preds = %123
  %128 = bitcast %class.SkImageFilter* %121 to %class.SkRefCntBase*
  %129 = bitcast %class.SkImageFilter* %121 to void (%class.SkRefCntBase*)***
  %130 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %129, align 8, !noalias !26
  %131 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %130, i64 2
  %132 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %131, align 8, !noalias !26
  call void %132(%class.SkRefCntBase* nonnull %128) #11, !noalias !26
  br label %133

133:                                              ; preds = %127, %123, %109
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV28SkDiffuseLightingImageFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %114, align 8, !noalias !26
  %134 = getelementptr inbounds i8, i8* %110, i64 92
  %135 = bitcast i8* %134 to float*
  store float %7, float* %135, align 4, !noalias !26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #11, !noalias !26
  %136 = bitcast %class.sk_sp* %0 to i8**
  store i8* %110, i8** %136, align 8, !alias.scope !26
  br label %160

137:                                              ; preds = %98, %103
  %138 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %138, align 8, !alias.scope !26
  %139 = icmp eq i64 %80, 0
  br i1 %139, label %151, label %140

140:                                              ; preds = %137
  %141 = inttoptr i64 %80 to %class.SkImageFilter*
  %142 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %141, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = atomicrmw add i32* %142, i32 -1 acq_rel
  %144 = icmp eq i32 %143, 1
  br i1 %144, label %145, label %151

145:                                              ; preds = %140
  %146 = inttoptr i64 %80 to %class.SkRefCntBase*
  %147 = inttoptr i64 %80 to void (%class.SkRefCntBase*)***
  %148 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %147, align 8
  %149 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %148, i64 2
  %150 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %149, align 8
  tail call void %150(%class.SkRefCntBase* nonnull %146) #11
  br label %151

151:                                              ; preds = %145, %140, %137
  %152 = atomicrmw add i32* %14, i32 -1 acq_rel
  %153 = icmp eq i32 %152, 1
  br i1 %153, label %154, label %160

154:                                              ; preds = %151
  %155 = bitcast i8* %12 to %class.SkRefCntBase*
  %156 = bitcast i8* %12 to void (%class.SkRefCntBase*)***
  %157 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %156, align 8
  %158 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %157, i64 2
  %159 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %158, align 8
  tail call void %159(%class.SkRefCntBase* nonnull %155) #11
  br label %160

160:                                              ; preds = %154, %151, %133
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkImageFilters18DistantLitSpecularERK8SkPoint3jfff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* noalias nocapture sret, %struct.SkPoint3* nocapture readonly dereferenceable(12), i32, float, float, float, %class.sk_sp* nocapture, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %9 = alloca %class.sk_sp, align 8
  %10 = tail call i8* @_Znwm(i64 40) #14
  %11 = getelementptr inbounds i8, i8* %10, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 1, i32* %12, align 4
  %13 = bitcast i8* %10 to i32 (...)***
  %14 = lshr i32 %2, 16
  %15 = and i32 %14, 255
  %16 = uitofp i32 %15 to float
  %17 = lshr i32 %2, 8
  %18 = and i32 %17, 255
  %19 = uitofp i32 %18 to float
  %20 = and i32 %2, 255
  %21 = uitofp i32 %20 to float
  %22 = insertelement <2 x float> undef, float %16, i32 0
  %23 = insertelement <2 x float> %22, float %19, i32 1
  %24 = getelementptr inbounds i8, i8* %10, i64 12
  %25 = bitcast i8* %24 to <2 x float>*
  store <2 x float> %23, <2 x float>* %25, align 4
  %26 = getelementptr inbounds i8, i8* %10, i64 20
  %27 = bitcast i8* %26 to float*
  store float %21, float* %27, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTV14SkDistantLight, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %28 = getelementptr inbounds i8, i8* %10, i64 24
  %29 = bitcast %struct.SkPoint3* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 4 %29, i64 12, i1 false) #11
  %30 = ptrtoint i8* %10 to i64
  %31 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %32 = bitcast %class.sk_sp* %6 to i64*
  %33 = load i64, i64* %32, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %31, align 8
  %34 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %7, i64 0, i32 0
  %35 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %7, i64 0, i32 0, i32 0
  %36 = load float, float* %35, align 4
  %37 = fcmp une float %36, 0xFFF0000000000000
  br i1 %37, label %50, label %38

38:                                               ; preds = %8
  %39 = getelementptr inbounds float, float* %35, i64 1
  %40 = load float, float* %39, align 4
  %41 = fcmp une float %40, 0xFFF0000000000000
  br i1 %41, label %50, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds float, float* %35, i64 2
  %44 = load float, float* %43, align 4
  %45 = fcmp une float %44, 0x7FF0000000000000
  br i1 %45, label %50, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds float, float* %35, i64 3
  %48 = load float, float* %47, align 4
  %49 = fcmp une float %48, 0x7FF0000000000000
  br i1 %49, label %50, label %51

50:                                               ; preds = %46, %42, %38, %8
  br label %51

51:                                               ; preds = %50, %46
  %52 = phi %struct.SkRect* [ %34, %50 ], [ null, %46 ]
  %53 = bitcast float %3 to i32
  %54 = and i32 %53, 2139095040
  %55 = icmp eq i32 %54, 2139095040
  br i1 %55, label %96, label %56

56:                                               ; preds = %51
  %57 = bitcast float %4 to i32
  %58 = and i32 %57, 2139095040
  %59 = icmp eq i32 %58, 2139095040
  br i1 %59, label %96, label %60

60:                                               ; preds = %56
  %61 = bitcast float %5 to i32
  %62 = and i32 %61, 2139095040
  %63 = icmp eq i32 %62, 2139095040
  %64 = fcmp olt float %4, 0.000000e+00
  %65 = or i1 %63, %64
  br i1 %65, label %96, label %66

66:                                               ; preds = %60
  %67 = tail call i8* @_Znwm(i64 104) #14, !noalias !29
  %68 = bitcast %class.sk_sp* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #11, !noalias !29
  %69 = bitcast %class.sk_sp* %9 to i64*
  store i64 %33, i64* %69, align 8, !noalias !29
  %70 = bitcast i8* %67 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %70, %class.sk_sp* nonnull %9, i32 1, %struct.SkRect* %52) #11, !noalias !29
  %71 = bitcast i8* %67 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV29SkLightingImageFilterInternal, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8, !noalias !29
  %72 = getelementptr inbounds i8, i8* %67, i64 80
  %73 = bitcast i8* %72 to i64*
  store i64 %30, i64* %73, align 8, !noalias !29
  %74 = getelementptr inbounds i8, i8* %67, i64 88
  %75 = bitcast i8* %74 to float*
  %76 = fdiv float %3, 2.550000e+02
  store float %76, float* %75, align 8, !noalias !29
  %77 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %9, i64 0, i32 0
  %78 = load %class.SkImageFilter*, %class.SkImageFilter** %77, align 8, !noalias !29
  %79 = icmp eq %class.SkImageFilter* %78, null
  br i1 %79, label %90, label %80

80:                                               ; preds = %66
  %81 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %78, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = atomicrmw add i32* %81, i32 -1 acq_rel, !noalias !29
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %84, label %90

84:                                               ; preds = %80
  %85 = bitcast %class.SkImageFilter* %78 to %class.SkRefCntBase*
  %86 = bitcast %class.SkImageFilter* %78 to void (%class.SkRefCntBase*)***
  %87 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %86, align 8, !noalias !29
  %88 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %87, i64 2
  %89 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %88, align 8, !noalias !29
  call void %89(%class.SkRefCntBase* nonnull %85) #11, !noalias !29
  br label %90

90:                                               ; preds = %84, %80, %66
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV29SkSpecularLightingImageFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8, !noalias !29
  %91 = getelementptr inbounds i8, i8* %67, i64 92
  %92 = bitcast i8* %91 to float*
  store float %4, float* %92, align 4, !noalias !29
  %93 = getelementptr inbounds i8, i8* %67, i64 96
  %94 = bitcast i8* %93 to float*
  store float %5, float* %94, align 8, !noalias !29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #11, !noalias !29
  %95 = bitcast %class.sk_sp* %0 to i8**
  store i8* %67, i8** %95, align 8, !alias.scope !29
  br label %119

96:                                               ; preds = %51, %56, %60
  %97 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %97, align 8, !alias.scope !29
  %98 = icmp eq i64 %33, 0
  br i1 %98, label %110, label %99

99:                                               ; preds = %96
  %100 = inttoptr i64 %33 to %class.SkImageFilter*
  %101 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %100, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = atomicrmw add i32* %101, i32 -1 acq_rel
  %103 = icmp eq i32 %102, 1
  br i1 %103, label %104, label %110

104:                                              ; preds = %99
  %105 = inttoptr i64 %33 to %class.SkRefCntBase*
  %106 = inttoptr i64 %33 to void (%class.SkRefCntBase*)***
  %107 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %106, align 8
  %108 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %107, i64 2
  %109 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %108, align 8
  tail call void %109(%class.SkRefCntBase* nonnull %105) #11
  br label %110

110:                                              ; preds = %104, %99, %96
  %111 = atomicrmw add i32* %12, i32 -1 acq_rel
  %112 = icmp eq i32 %111, 1
  br i1 %112, label %113, label %119

113:                                              ; preds = %110
  %114 = bitcast i8* %10 to %class.SkRefCntBase*
  %115 = bitcast i8* %10 to void (%class.SkRefCntBase*)***
  %116 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %115, align 8
  %117 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %116, i64 2
  %118 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %117, align 8
  tail call void %118(%class.SkRefCntBase* nonnull %114) #11
  br label %119

119:                                              ; preds = %113, %110, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29SkSpecularLightingImageFilter4MakeE5sk_spI18SkImageFilterLightEfffS0_I13SkImageFilterEPK6SkRect(%class.sk_sp* noalias nocapture sret, %class.sk_sp.1* nocapture, float, float, float, %class.sk_sp* nocapture, %struct.SkRect*) local_unnamed_addr #0 align 2 {
  %8 = alloca %class.sk_sp, align 8
  %9 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %1, i64 0, i32 0
  %10 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %9, align 8
  %11 = icmp eq %class.SkImageFilterLight* %10, null
  %12 = ptrtoint %class.SkImageFilterLight* %10 to i64
  br i1 %11, label %13, label %15

13:                                               ; preds = %7
  %14 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %14, align 8
  br label %66

15:                                               ; preds = %7
  %16 = bitcast float %2 to i32
  %17 = and i32 %16, 2139095040
  %18 = icmp eq i32 %17, 2139095040
  br i1 %18, label %27, label %19

19:                                               ; preds = %15
  %20 = bitcast float %3 to i32
  %21 = and i32 %20, 2139095040
  %22 = icmp eq i32 %21, 2139095040
  br i1 %22, label %27, label %23

23:                                               ; preds = %19
  %24 = bitcast float %4 to i32
  %25 = and i32 %24, 2139095040
  %26 = icmp eq i32 %25, 2139095040
  br i1 %26, label %27, label %29

27:                                               ; preds = %23, %19, %15
  %28 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %28, align 8
  br label %66

29:                                               ; preds = %23
  %30 = fcmp olt float %3, 0.000000e+00
  br i1 %30, label %31, label %33

31:                                               ; preds = %29
  %32 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %32, align 8
  br label %66

33:                                               ; preds = %29
  %34 = tail call i8* @_Znwm(i64 104) #14
  store %class.SkImageFilterLight* null, %class.SkImageFilterLight** %9, align 8
  %35 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %36 = bitcast %class.sk_sp* %5 to i64*
  %37 = load i64, i64* %36, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %35, align 8
  %38 = bitcast %class.sk_sp* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38)
  %39 = bitcast %class.sk_sp* %8 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast i8* %34 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %40, %class.sk_sp* nonnull %8, i32 1, %struct.SkRect* %6) #11
  %41 = bitcast i8* %34 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV29SkLightingImageFilterInternal, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %42 = getelementptr inbounds i8, i8* %34, i64 80
  %43 = bitcast i8* %42 to i64*
  store i64 %12, i64* %43, align 8
  %44 = getelementptr inbounds i8, i8* %34, i64 88
  %45 = bitcast i8* %44 to float*
  %46 = fdiv float %2, 2.550000e+02
  store float %46, float* %45, align 8
  %47 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %8, i64 0, i32 0
  %48 = load %class.SkImageFilter*, %class.SkImageFilter** %47, align 8
  %49 = icmp eq %class.SkImageFilter* %48, null
  br i1 %49, label %60, label %50

50:                                               ; preds = %33
  %51 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %48, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = atomicrmw add i32* %51, i32 -1 acq_rel
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %60

54:                                               ; preds = %50
  %55 = bitcast %class.SkImageFilter* %48 to %class.SkRefCntBase*
  %56 = bitcast %class.SkImageFilter* %48 to void (%class.SkRefCntBase*)***
  %57 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %56, align 8
  %58 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %57, i64 2
  %59 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %58, align 8
  call void %59(%class.SkRefCntBase* nonnull %55) #11
  br label %60

60:                                               ; preds = %33, %50, %54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV29SkSpecularLightingImageFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %61 = getelementptr inbounds i8, i8* %34, i64 92
  %62 = bitcast i8* %61 to float*
  store float %3, float* %62, align 4
  %63 = getelementptr inbounds i8, i8* %34, i64 96
  %64 = bitcast i8* %63 to float*
  store float %4, float* %64, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38)
  %65 = bitcast %class.sk_sp* %0 to i8**
  store i8* %34, i8** %65, align 8
  br label %66

66:                                               ; preds = %60, %31, %27, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkImageFilters16PointLitSpecularERK8SkPoint3jfff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* noalias nocapture sret, %struct.SkPoint3* nocapture readonly dereferenceable(12), i32, float, float, float, %class.sk_sp* nocapture, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %9 = alloca %class.sk_sp, align 8
  %10 = tail call i8* @_Znwm(i64 40) #14
  %11 = getelementptr inbounds i8, i8* %10, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 1, i32* %12, align 4
  %13 = bitcast i8* %10 to i32 (...)***
  %14 = lshr i32 %2, 16
  %15 = and i32 %14, 255
  %16 = uitofp i32 %15 to float
  %17 = lshr i32 %2, 8
  %18 = and i32 %17, 255
  %19 = uitofp i32 %18 to float
  %20 = and i32 %2, 255
  %21 = uitofp i32 %20 to float
  %22 = insertelement <2 x float> undef, float %16, i32 0
  %23 = insertelement <2 x float> %22, float %19, i32 1
  %24 = getelementptr inbounds i8, i8* %10, i64 12
  %25 = bitcast i8* %24 to <2 x float>*
  store <2 x float> %23, <2 x float>* %25, align 4
  %26 = getelementptr inbounds i8, i8* %10, i64 20
  %27 = bitcast i8* %26 to float*
  store float %21, float* %27, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTV12SkPointLight, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %28 = getelementptr inbounds i8, i8* %10, i64 24
  %29 = bitcast %struct.SkPoint3* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 4 %29, i64 12, i1 false) #11
  %30 = ptrtoint i8* %10 to i64
  %31 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %32 = bitcast %class.sk_sp* %6 to i64*
  %33 = load i64, i64* %32, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %31, align 8
  %34 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %7, i64 0, i32 0
  %35 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %7, i64 0, i32 0, i32 0
  %36 = load float, float* %35, align 4
  %37 = fcmp une float %36, 0xFFF0000000000000
  br i1 %37, label %50, label %38

38:                                               ; preds = %8
  %39 = getelementptr inbounds float, float* %35, i64 1
  %40 = load float, float* %39, align 4
  %41 = fcmp une float %40, 0xFFF0000000000000
  br i1 %41, label %50, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds float, float* %35, i64 2
  %44 = load float, float* %43, align 4
  %45 = fcmp une float %44, 0x7FF0000000000000
  br i1 %45, label %50, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds float, float* %35, i64 3
  %48 = load float, float* %47, align 4
  %49 = fcmp une float %48, 0x7FF0000000000000
  br i1 %49, label %50, label %51

50:                                               ; preds = %46, %42, %38, %8
  br label %51

51:                                               ; preds = %50, %46
  %52 = phi %struct.SkRect* [ %34, %50 ], [ null, %46 ]
  %53 = bitcast float %3 to i32
  %54 = and i32 %53, 2139095040
  %55 = icmp eq i32 %54, 2139095040
  br i1 %55, label %96, label %56

56:                                               ; preds = %51
  %57 = bitcast float %4 to i32
  %58 = and i32 %57, 2139095040
  %59 = icmp eq i32 %58, 2139095040
  br i1 %59, label %96, label %60

60:                                               ; preds = %56
  %61 = bitcast float %5 to i32
  %62 = and i32 %61, 2139095040
  %63 = icmp eq i32 %62, 2139095040
  %64 = fcmp olt float %4, 0.000000e+00
  %65 = or i1 %63, %64
  br i1 %65, label %96, label %66

66:                                               ; preds = %60
  %67 = tail call i8* @_Znwm(i64 104) #14, !noalias !32
  %68 = bitcast %class.sk_sp* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #11, !noalias !32
  %69 = bitcast %class.sk_sp* %9 to i64*
  store i64 %33, i64* %69, align 8, !noalias !32
  %70 = bitcast i8* %67 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %70, %class.sk_sp* nonnull %9, i32 1, %struct.SkRect* %52) #11, !noalias !32
  %71 = bitcast i8* %67 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV29SkLightingImageFilterInternal, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8, !noalias !32
  %72 = getelementptr inbounds i8, i8* %67, i64 80
  %73 = bitcast i8* %72 to i64*
  store i64 %30, i64* %73, align 8, !noalias !32
  %74 = getelementptr inbounds i8, i8* %67, i64 88
  %75 = bitcast i8* %74 to float*
  %76 = fdiv float %3, 2.550000e+02
  store float %76, float* %75, align 8, !noalias !32
  %77 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %9, i64 0, i32 0
  %78 = load %class.SkImageFilter*, %class.SkImageFilter** %77, align 8, !noalias !32
  %79 = icmp eq %class.SkImageFilter* %78, null
  br i1 %79, label %90, label %80

80:                                               ; preds = %66
  %81 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %78, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = atomicrmw add i32* %81, i32 -1 acq_rel, !noalias !32
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %84, label %90

84:                                               ; preds = %80
  %85 = bitcast %class.SkImageFilter* %78 to %class.SkRefCntBase*
  %86 = bitcast %class.SkImageFilter* %78 to void (%class.SkRefCntBase*)***
  %87 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %86, align 8, !noalias !32
  %88 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %87, i64 2
  %89 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %88, align 8, !noalias !32
  call void %89(%class.SkRefCntBase* nonnull %85) #11, !noalias !32
  br label %90

90:                                               ; preds = %84, %80, %66
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV29SkSpecularLightingImageFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8, !noalias !32
  %91 = getelementptr inbounds i8, i8* %67, i64 92
  %92 = bitcast i8* %91 to float*
  store float %4, float* %92, align 4, !noalias !32
  %93 = getelementptr inbounds i8, i8* %67, i64 96
  %94 = bitcast i8* %93 to float*
  store float %5, float* %94, align 8, !noalias !32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #11, !noalias !32
  %95 = bitcast %class.sk_sp* %0 to i8**
  store i8* %67, i8** %95, align 8, !alias.scope !32
  br label %119

96:                                               ; preds = %51, %56, %60
  %97 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %97, align 8, !alias.scope !32
  %98 = icmp eq i64 %33, 0
  br i1 %98, label %110, label %99

99:                                               ; preds = %96
  %100 = inttoptr i64 %33 to %class.SkImageFilter*
  %101 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %100, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = atomicrmw add i32* %101, i32 -1 acq_rel
  %103 = icmp eq i32 %102, 1
  br i1 %103, label %104, label %110

104:                                              ; preds = %99
  %105 = inttoptr i64 %33 to %class.SkRefCntBase*
  %106 = inttoptr i64 %33 to void (%class.SkRefCntBase*)***
  %107 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %106, align 8
  %108 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %107, i64 2
  %109 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %108, align 8
  tail call void %109(%class.SkRefCntBase* nonnull %105) #11
  br label %110

110:                                              ; preds = %104, %99, %96
  %111 = atomicrmw add i32* %12, i32 -1 acq_rel
  %112 = icmp eq i32 %111, 1
  br i1 %112, label %113, label %119

113:                                              ; preds = %110
  %114 = bitcast i8* %10 to %class.SkRefCntBase*
  %115 = bitcast i8* %10 to void (%class.SkRefCntBase*)***
  %116 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %115, align 8
  %117 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %116, i64 2
  %118 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %117, align 8
  tail call void %118(%class.SkRefCntBase* nonnull %114) #11
  br label %119

119:                                              ; preds = %113, %110, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkImageFilters15SpotLitSpecularERK8SkPoint3S2_ffjfff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* noalias nocapture sret, %struct.SkPoint3* nocapture readonly dereferenceable(12), %struct.SkPoint3* nocapture readonly dereferenceable(12), float, float, i32, float, float, float, %class.sk_sp* nocapture, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %12 = alloca %class.sk_sp, align 8
  %13 = tail call i8* @_Znwm(i64 80) #14
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = bitcast i8* %14 to i32*
  store i32 1, i32* %15, align 4
  %16 = bitcast i8* %13 to i32 (...)***
  %17 = lshr i32 %5, 16
  %18 = and i32 %17, 255
  %19 = uitofp i32 %18 to float
  %20 = lshr i32 %5, 8
  %21 = and i32 %20, 255
  %22 = uitofp i32 %21 to float
  %23 = and i32 %5, 255
  %24 = uitofp i32 %23 to float
  %25 = insertelement <2 x float> undef, float %19, i32 0
  %26 = insertelement <2 x float> %25, float %22, i32 1
  %27 = getelementptr inbounds i8, i8* %13, i64 12
  %28 = bitcast i8* %27 to <2 x float>*
  store <2 x float> %26, <2 x float>* %28, align 4
  %29 = getelementptr inbounds i8, i8* %13, i64 20
  %30 = bitcast i8* %29 to float*
  store float %24, float* %30, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTV11SkSpotLight, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %31 = getelementptr inbounds i8, i8* %13, i64 24
  %32 = bitcast %struct.SkPoint3* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 4 %32, i64 12, i1 false) #11
  %33 = getelementptr inbounds i8, i8* %13, i64 36
  %34 = bitcast %struct.SkPoint3* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* align 4 %34, i64 12, i1 false) #11
  %35 = getelementptr inbounds i8, i8* %13, i64 48
  %36 = bitcast i8* %35 to float*
  store float %3, float* %36, align 8
  %37 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %2, i64 0, i32 0
  %38 = load float, float* %37, align 4
  %39 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %1, i64 0, i32 0
  %40 = load float, float* %39, align 4
  %41 = fsub float %38, %40
  %42 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %2, i64 0, i32 1
  %43 = load float, float* %42, align 4
  %44 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %1, i64 0, i32 1
  %45 = load float, float* %44, align 4
  %46 = fsub float %43, %45
  %47 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %2, i64 0, i32 2
  %48 = load float, float* %47, align 4
  %49 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %1, i64 0, i32 2
  %50 = load float, float* %49, align 4
  %51 = fsub float %48, %50
  %52 = getelementptr inbounds i8, i8* %13, i64 64
  %53 = getelementptr inbounds i8, i8* %13, i64 72
  %54 = bitcast i8* %53 to float*
  %55 = bitcast i8* %52 to float*
  %56 = fmul float %41, %41
  %57 = getelementptr inbounds i8, i8* %13, i64 68
  %58 = bitcast i8* %57 to float*
  %59 = fmul float %46, %46
  %60 = fadd float %56, %59
  %61 = fmul float %51, %51
  %62 = fadd float %60, %61
  %63 = fadd float %62, 0x3F30000000000000
  %64 = tail call float @sqrtf(float %63) #11
  %65 = fdiv float 1.000000e+00, %64
  %66 = fmul float %65, %41
  store float %66, float* %55, align 4
  %67 = fmul float %65, %46
  store float %67, float* %58, align 4
  %68 = fmul float %65, %51
  store float %68, float* %54, align 4
  %69 = fmul float %4, 0x3F91DF46A0000000
  %70 = tail call float @cosf(float %69) #11
  %71 = getelementptr inbounds i8, i8* %13, i64 52
  %72 = bitcast i8* %71 to float*
  store float %70, float* %72, align 4
  %73 = fadd float %70, 0x3F90624DE0000000
  %74 = getelementptr inbounds i8, i8* %13, i64 56
  %75 = bitcast i8* %74 to float*
  store float %73, float* %75, align 8
  %76 = getelementptr inbounds i8, i8* %13, i64 60
  %77 = bitcast i8* %76 to float*
  store float 0x404F3FFFE0000000, float* %77, align 4
  %78 = ptrtoint i8* %13 to i64
  %79 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %9, i64 0, i32 0
  %80 = bitcast %class.sk_sp* %9 to i64*
  %81 = load i64, i64* %80, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %79, align 8
  %82 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %10, i64 0, i32 0
  %83 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %10, i64 0, i32 0, i32 0
  %84 = load float, float* %83, align 4
  %85 = fcmp une float %84, 0xFFF0000000000000
  br i1 %85, label %98, label %86

86:                                               ; preds = %11
  %87 = getelementptr inbounds float, float* %83, i64 1
  %88 = load float, float* %87, align 4
  %89 = fcmp une float %88, 0xFFF0000000000000
  br i1 %89, label %98, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds float, float* %83, i64 2
  %92 = load float, float* %91, align 4
  %93 = fcmp une float %92, 0x7FF0000000000000
  br i1 %93, label %98, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds float, float* %83, i64 3
  %96 = load float, float* %95, align 4
  %97 = fcmp une float %96, 0x7FF0000000000000
  br i1 %97, label %98, label %99

98:                                               ; preds = %94, %90, %86, %11
  br label %99

99:                                               ; preds = %98, %94
  %100 = phi %struct.SkRect* [ %82, %98 ], [ null, %94 ]
  %101 = bitcast float %6 to i32
  %102 = and i32 %101, 2139095040
  %103 = icmp eq i32 %102, 2139095040
  br i1 %103, label %144, label %104

104:                                              ; preds = %99
  %105 = bitcast float %7 to i32
  %106 = and i32 %105, 2139095040
  %107 = icmp eq i32 %106, 2139095040
  br i1 %107, label %144, label %108

108:                                              ; preds = %104
  %109 = bitcast float %8 to i32
  %110 = and i32 %109, 2139095040
  %111 = icmp eq i32 %110, 2139095040
  %112 = fcmp olt float %7, 0.000000e+00
  %113 = or i1 %111, %112
  br i1 %113, label %144, label %114

114:                                              ; preds = %108
  %115 = tail call i8* @_Znwm(i64 104) #14, !noalias !35
  %116 = bitcast %class.sk_sp* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #11, !noalias !35
  %117 = bitcast %class.sk_sp* %12 to i64*
  store i64 %81, i64* %117, align 8, !noalias !35
  %118 = bitcast i8* %115 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %118, %class.sk_sp* nonnull %12, i32 1, %struct.SkRect* %100) #11, !noalias !35
  %119 = bitcast i8* %115 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV29SkLightingImageFilterInternal, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %119, align 8, !noalias !35
  %120 = getelementptr inbounds i8, i8* %115, i64 80
  %121 = bitcast i8* %120 to i64*
  store i64 %78, i64* %121, align 8, !noalias !35
  %122 = getelementptr inbounds i8, i8* %115, i64 88
  %123 = bitcast i8* %122 to float*
  %124 = fdiv float %6, 2.550000e+02
  store float %124, float* %123, align 8, !noalias !35
  %125 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %12, i64 0, i32 0
  %126 = load %class.SkImageFilter*, %class.SkImageFilter** %125, align 8, !noalias !35
  %127 = icmp eq %class.SkImageFilter* %126, null
  br i1 %127, label %138, label %128

128:                                              ; preds = %114
  %129 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %126, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = atomicrmw add i32* %129, i32 -1 acq_rel, !noalias !35
  %131 = icmp eq i32 %130, 1
  br i1 %131, label %132, label %138

132:                                              ; preds = %128
  %133 = bitcast %class.SkImageFilter* %126 to %class.SkRefCntBase*
  %134 = bitcast %class.SkImageFilter* %126 to void (%class.SkRefCntBase*)***
  %135 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %134, align 8, !noalias !35
  %136 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %135, i64 2
  %137 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %136, align 8, !noalias !35
  call void %137(%class.SkRefCntBase* nonnull %133) #11, !noalias !35
  br label %138

138:                                              ; preds = %132, %128, %114
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV29SkSpecularLightingImageFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %119, align 8, !noalias !35
  %139 = getelementptr inbounds i8, i8* %115, i64 92
  %140 = bitcast i8* %139 to float*
  store float %7, float* %140, align 4, !noalias !35
  %141 = getelementptr inbounds i8, i8* %115, i64 96
  %142 = bitcast i8* %141 to float*
  store float %8, float* %142, align 8, !noalias !35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #11, !noalias !35
  %143 = bitcast %class.sk_sp* %0 to i8**
  store i8* %115, i8** %143, align 8, !alias.scope !35
  br label %167

144:                                              ; preds = %99, %104, %108
  %145 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %145, align 8, !alias.scope !35
  %146 = icmp eq i64 %81, 0
  br i1 %146, label %158, label %147

147:                                              ; preds = %144
  %148 = inttoptr i64 %81 to %class.SkImageFilter*
  %149 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %148, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = atomicrmw add i32* %149, i32 -1 acq_rel
  %151 = icmp eq i32 %150, 1
  br i1 %151, label %152, label %158

152:                                              ; preds = %147
  %153 = inttoptr i64 %81 to %class.SkRefCntBase*
  %154 = inttoptr i64 %81 to void (%class.SkRefCntBase*)***
  %155 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %154, align 8
  %156 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %155, i64 2
  %157 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %156, align 8
  tail call void %157(%class.SkRefCntBase* nonnull %153) #11
  br label %158

158:                                              ; preds = %152, %147, %144
  %159 = atomicrmw add i32* %15, i32 -1 acq_rel
  %160 = icmp eq i32 %159, 1
  br i1 %160, label %161, label %167

161:                                              ; preds = %158
  %162 = bitcast i8* %13 to %class.SkRefCntBase*
  %163 = bitcast i8* %13 to void (%class.SkRefCntBase*)***
  %164 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %163, align 8
  %165 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %164, i64 2
  %166 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %165, align 8
  tail call void %166(%class.SkRefCntBase* nonnull %162) #11
  br label %167

167:                                              ; preds = %161, %158, %138
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z41SkRegisterLightingImageFilterFlattenablesv() local_unnamed_addr #0 {
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), void (%class.sk_sp.201*, %class.SkReadBuffer*)* nonnull @_ZN28SkDiffuseLightingImageFilter10CreateProcER12SkReadBuffer) #11
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), void (%class.sk_sp.201*, %class.SkReadBuffer*)* nonnull @_ZN29SkSpecularLightingImageFilter10CreateProcER12SkReadBuffer) #11
  ret void
}

declare void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8*, void (%class.sk_sp.201*, %class.SkReadBuffer*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN28SkDiffuseLightingImageFilter10CreateProcER12SkReadBuffer(%class.sk_sp.201* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = alloca %class.sk_sp, align 8
  %4 = alloca %"class.SkImageFilter_Base::Common", align 8
  %5 = bitcast %"class.SkImageFilter_Base::Common"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray.204 }* @__const._ZN29SkSpecularLightingImageFilter10CreateProcER12SkReadBuffer.common to i8*), i64 40, i1 false)
  %6 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 1, i32 0, i32 0, i64 16
  %8 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 1, i32 0, i32 0, i64 0
  %9 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 1, i32 0, i32 0, i64 24
  %10 = bitcast i8* %9 to i64*
  %11 = bitcast i8* %7 to i8**
  store i8* %8, i8** %11, align 8
  store i64 17179869184, i64* %10, align 8
  %12 = call zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"* nonnull %4, %class.SkReadBuffer* dereferenceable(136) %1, i32 1) #11
  br i1 %12, label %15, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %class.sk_sp.201, %class.sk_sp.201* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %14, align 8
  br label %97

15:                                               ; preds = %2
  %16 = call %class.SkImageFilterLight* @_ZN18SkImageFilterLight14UnflattenLightER12SkReadBuffer(%class.SkReadBuffer* dereferenceable(136) %1)
  %17 = ptrtoint %class.SkImageFilterLight* %16 to i64
  %18 = call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %19 = call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %20 = bitcast i8* %7 to %class.sk_sp**
  %21 = load %class.sk_sp*, %class.sk_sp** %20, align 8, !noalias !38
  %22 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %21, i64 0, i32 0
  %23 = load %class.SkImageFilter*, %class.SkImageFilter** %22, align 8, !noalias !38
  %24 = icmp eq %class.SkImageFilter* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %15
  %26 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 1 monotonic, !noalias !38
  br label %28

28:                                               ; preds = %15, %25
  %29 = ptrtoint %class.SkImageFilter* %23 to i64
  %30 = load i32, i32* %6, align 8
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 0, i32 0
  %33 = select i1 %31, %struct.SkRect* null, %struct.SkRect* %32
  %34 = icmp eq %class.SkImageFilterLight* %16, null
  br i1 %34, label %74, label %35

35:                                               ; preds = %28
  %36 = bitcast float %18 to i32
  %37 = and i32 %36, 2139095040
  %38 = icmp eq i32 %37, 2139095040
  br i1 %38, label %74, label %39

39:                                               ; preds = %35
  %40 = bitcast float %19 to i32
  %41 = and i32 %40, 2139095040
  %42 = icmp eq i32 %41, 2139095040
  %43 = fcmp olt float %19, 0.000000e+00
  %44 = or i1 %43, %42
  br i1 %44, label %74, label %45

45:                                               ; preds = %39
  %46 = call i8* @_Znwm(i64 96) #14, !noalias !41
  %47 = bitcast %class.sk_sp* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11, !noalias !41
  %48 = bitcast %class.sk_sp* %3 to i64*
  store i64 %29, i64* %48, align 8, !noalias !41
  %49 = bitcast i8* %46 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %49, %class.sk_sp* nonnull %3, i32 1, %struct.SkRect* %33) #11, !noalias !41
  %50 = bitcast i8* %46 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV29SkLightingImageFilterInternal, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %50, align 8, !noalias !41
  %51 = getelementptr inbounds i8, i8* %46, i64 80
  %52 = bitcast i8* %51 to i64*
  store i64 %17, i64* %52, align 8, !noalias !41
  %53 = getelementptr inbounds i8, i8* %46, i64 88
  %54 = bitcast i8* %53 to float*
  %55 = fdiv float %18, 2.550000e+02
  store float %55, float* %54, align 8, !noalias !41
  %56 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %57 = load %class.SkImageFilter*, %class.SkImageFilter** %56, align 8, !noalias !41
  %58 = icmp eq %class.SkImageFilter* %57, null
  br i1 %58, label %69, label %59

59:                                               ; preds = %45
  %60 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %57, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i32* %60, i32 -1 acq_rel, !noalias !41
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %69

63:                                               ; preds = %59
  %64 = bitcast %class.SkImageFilter* %57 to %class.SkRefCntBase*
  %65 = bitcast %class.SkImageFilter* %57 to void (%class.SkRefCntBase*)***
  %66 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %65, align 8, !noalias !41
  %67 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %66, i64 2
  %68 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %67, align 8, !noalias !41
  call void %68(%class.SkRefCntBase* nonnull %64) #11, !noalias !41
  br label %69

69:                                               ; preds = %63, %59, %45
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV28SkDiffuseLightingImageFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %50, align 8, !noalias !41
  %70 = getelementptr inbounds i8, i8* %46, i64 92
  %71 = bitcast i8* %70 to float*
  store float %19, float* %71, align 4, !noalias !41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11, !noalias !41
  %72 = ptrtoint i8* %46 to i64
  %73 = bitcast %class.sk_sp.201* %0 to i64*
  store i64 %72, i64* %73, align 8
  br label %97

74:                                               ; preds = %28, %39, %35
  %75 = bitcast %class.sk_sp.201* %0 to i64*
  store i64 0, i64* %75, align 8
  br i1 %24, label %86, label %76

76:                                               ; preds = %74
  %77 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw add i32* %77, i32 -1 acq_rel
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %86

80:                                               ; preds = %76
  %81 = bitcast %class.SkImageFilter* %23 to %class.SkRefCntBase*
  %82 = bitcast %class.SkImageFilter* %23 to void (%class.SkRefCntBase*)***
  %83 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %82, align 8
  %84 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %83, i64 2
  %85 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %84, align 8
  call void %85(%class.SkRefCntBase* nonnull %81) #11
  br label %86

86:                                               ; preds = %74, %76, %80
  br i1 %34, label %97, label %87

87:                                               ; preds = %86
  %88 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %16, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = atomicrmw add i32* %88, i32 -1 acq_rel
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %91, label %97

91:                                               ; preds = %87
  %92 = bitcast %class.SkImageFilterLight* %16 to %class.SkRefCntBase*
  %93 = bitcast %class.SkImageFilterLight* %16 to void (%class.SkRefCntBase*)***
  %94 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %93, align 8
  %95 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %94, i64 2
  %96 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %95, align 8
  call void %96(%class.SkRefCntBase* nonnull %92) #11
  br label %97

97:                                               ; preds = %69, %86, %87, %91, %13
  %98 = load i64, i64* %10, align 8
  %99 = and i64 %98, 4294967294
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = bitcast i8* %7 to %class.sk_sp**
  br label %107

103:                                              ; preds = %123, %97
  %104 = phi i64 [ %98, %97 ], [ %125, %123 ]
  %105 = and i64 %104, 1
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %131, label %129

107:                                              ; preds = %123, %101
  %108 = phi i64 [ 0, %101 ], [ %124, %123 ]
  %109 = load %class.sk_sp*, %class.sk_sp** %102, align 8
  %110 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %109, i64 %108, i32 0
  %111 = load %class.SkImageFilter*, %class.SkImageFilter** %110, align 8
  %112 = icmp eq %class.SkImageFilter* %111, null
  br i1 %112, label %123, label %113

113:                                              ; preds = %107
  %114 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %111, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = atomicrmw add i32* %114, i32 -1 acq_rel
  %116 = icmp eq i32 %115, 1
  br i1 %116, label %117, label %123

117:                                              ; preds = %113
  %118 = bitcast %class.SkImageFilter* %111 to %class.SkRefCntBase*
  %119 = bitcast %class.SkImageFilter* %111 to void (%class.SkRefCntBase*)***
  %120 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %119, align 8
  %121 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %120, i64 2
  %122 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %121, align 8
  call void %122(%class.SkRefCntBase* nonnull %118) #11
  br label %123

123:                                              ; preds = %117, %113, %107
  %124 = add nuw nsw i64 %108, 1
  %125 = load i64, i64* %10, align 8
  %126 = lshr i64 %125, 1
  %127 = and i64 %126, 2147483647
  %128 = icmp ult i64 %124, %127
  br i1 %128, label %107, label %103

129:                                              ; preds = %103
  %130 = load i8*, i8** %11, align 8
  call void @_Z7sk_freePv(i8* %130) #11
  br label %131

131:                                              ; preds = %103, %129
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29SkSpecularLightingImageFilter10CreateProcER12SkReadBuffer(%class.sk_sp.201* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = alloca %class.sk_sp, align 8
  %4 = alloca %"class.SkImageFilter_Base::Common", align 8
  %5 = bitcast %"class.SkImageFilter_Base::Common"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray.204 }* @__const._ZN29SkSpecularLightingImageFilter10CreateProcER12SkReadBuffer.common to i8*), i64 40, i1 false)
  %6 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 1, i32 0, i32 0, i64 16
  %8 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 1, i32 0, i32 0, i64 0
  %9 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 1, i32 0, i32 0, i64 24
  %10 = bitcast i8* %9 to i64*
  %11 = bitcast i8* %7 to i8**
  store i8* %8, i8** %11, align 8
  store i64 17179869184, i64* %10, align 8
  %12 = call zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"* nonnull %4, %class.SkReadBuffer* dereferenceable(136) %1, i32 1) #11
  br i1 %12, label %15, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %class.sk_sp.201, %class.sk_sp.201* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %14, align 8
  br label %104

15:                                               ; preds = %2
  %16 = call %class.SkImageFilterLight* @_ZN18SkImageFilterLight14UnflattenLightER12SkReadBuffer(%class.SkReadBuffer* dereferenceable(136) %1)
  %17 = ptrtoint %class.SkImageFilterLight* %16 to i64
  %18 = call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %19 = call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %20 = call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %21 = bitcast i8* %7 to %class.sk_sp**
  %22 = load %class.sk_sp*, %class.sk_sp** %21, align 8, !noalias !44
  %23 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %22, i64 0, i32 0
  %24 = load %class.SkImageFilter*, %class.SkImageFilter** %23, align 8, !noalias !44
  %25 = icmp eq %class.SkImageFilter* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %15
  %27 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw add i32* %27, i32 1 monotonic, !noalias !44
  br label %29

29:                                               ; preds = %15, %26
  %30 = ptrtoint %class.SkImageFilter* %24 to i64
  %31 = load i32, i32* %6, align 8
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 0, i32 0
  %34 = select i1 %32, %struct.SkRect* null, %struct.SkRect* %33
  %35 = icmp eq %class.SkImageFilterLight* %16, null
  br i1 %35, label %81, label %36

36:                                               ; preds = %29
  %37 = bitcast float %18 to i32
  %38 = and i32 %37, 2139095040
  %39 = icmp eq i32 %38, 2139095040
  br i1 %39, label %81, label %40

40:                                               ; preds = %36
  %41 = bitcast float %19 to i32
  %42 = and i32 %41, 2139095040
  %43 = icmp eq i32 %42, 2139095040
  br i1 %43, label %81, label %44

44:                                               ; preds = %40
  %45 = bitcast float %20 to i32
  %46 = and i32 %45, 2139095040
  %47 = icmp eq i32 %46, 2139095040
  %48 = fcmp olt float %19, 0.000000e+00
  %49 = or i1 %48, %47
  br i1 %49, label %81, label %50

50:                                               ; preds = %44
  %51 = call i8* @_Znwm(i64 104) #14, !noalias !47
  %52 = bitcast %class.sk_sp* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #11, !noalias !47
  %53 = bitcast %class.sk_sp* %3 to i64*
  store i64 %30, i64* %53, align 8, !noalias !47
  %54 = bitcast i8* %51 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %54, %class.sk_sp* nonnull %3, i32 1, %struct.SkRect* %34) #11, !noalias !47
  %55 = bitcast i8* %51 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV29SkLightingImageFilterInternal, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8, !noalias !47
  %56 = getelementptr inbounds i8, i8* %51, i64 80
  %57 = bitcast i8* %56 to i64*
  store i64 %17, i64* %57, align 8, !noalias !47
  %58 = getelementptr inbounds i8, i8* %51, i64 88
  %59 = bitcast i8* %58 to float*
  %60 = fdiv float %18, 2.550000e+02
  store float %60, float* %59, align 8, !noalias !47
  %61 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %62 = load %class.SkImageFilter*, %class.SkImageFilter** %61, align 8, !noalias !47
  %63 = icmp eq %class.SkImageFilter* %62, null
  br i1 %63, label %74, label %64

64:                                               ; preds = %50
  %65 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %62, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 -1 acq_rel, !noalias !47
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %74

68:                                               ; preds = %64
  %69 = bitcast %class.SkImageFilter* %62 to %class.SkRefCntBase*
  %70 = bitcast %class.SkImageFilter* %62 to void (%class.SkRefCntBase*)***
  %71 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %70, align 8, !noalias !47
  %72 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %71, i64 2
  %73 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %72, align 8, !noalias !47
  call void %73(%class.SkRefCntBase* nonnull %69) #11, !noalias !47
  br label %74

74:                                               ; preds = %68, %64, %50
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV29SkSpecularLightingImageFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8, !noalias !47
  %75 = getelementptr inbounds i8, i8* %51, i64 92
  %76 = bitcast i8* %75 to float*
  store float %19, float* %76, align 4, !noalias !47
  %77 = getelementptr inbounds i8, i8* %51, i64 96
  %78 = bitcast i8* %77 to float*
  store float %20, float* %78, align 8, !noalias !47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #11, !noalias !47
  %79 = ptrtoint i8* %51 to i64
  %80 = bitcast %class.sk_sp.201* %0 to i64*
  store i64 %79, i64* %80, align 8
  br label %104

81:                                               ; preds = %29, %44, %40, %36
  %82 = bitcast %class.sk_sp.201* %0 to i64*
  store i64 0, i64* %82, align 8
  br i1 %25, label %93, label %83

83:                                               ; preds = %81
  %84 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = atomicrmw add i32* %84, i32 -1 acq_rel
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %87, label %93

87:                                               ; preds = %83
  %88 = bitcast %class.SkImageFilter* %24 to %class.SkRefCntBase*
  %89 = bitcast %class.SkImageFilter* %24 to void (%class.SkRefCntBase*)***
  %90 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %89, align 8
  %91 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %90, i64 2
  %92 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %91, align 8
  call void %92(%class.SkRefCntBase* nonnull %88) #11
  br label %93

93:                                               ; preds = %81, %83, %87
  br i1 %35, label %104, label %94

94:                                               ; preds = %93
  %95 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %16, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = atomicrmw add i32* %95, i32 -1 acq_rel
  %97 = icmp eq i32 %96, 1
  br i1 %97, label %98, label %104

98:                                               ; preds = %94
  %99 = bitcast %class.SkImageFilterLight* %16 to %class.SkRefCntBase*
  %100 = bitcast %class.SkImageFilterLight* %16 to void (%class.SkRefCntBase*)***
  %101 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %100, align 8
  %102 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %101, i64 2
  %103 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %102, align 8
  call void %103(%class.SkRefCntBase* nonnull %99) #11
  br label %104

104:                                              ; preds = %74, %93, %94, %98, %13
  %105 = load i64, i64* %10, align 8
  %106 = and i64 %105, 4294967294
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %110, label %108

108:                                              ; preds = %104
  %109 = bitcast i8* %7 to %class.sk_sp**
  br label %114

110:                                              ; preds = %130, %104
  %111 = phi i64 [ %105, %104 ], [ %132, %130 ]
  %112 = and i64 %111, 1
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %138, label %136

114:                                              ; preds = %130, %108
  %115 = phi i64 [ 0, %108 ], [ %131, %130 ]
  %116 = load %class.sk_sp*, %class.sk_sp** %109, align 8
  %117 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %116, i64 %115, i32 0
  %118 = load %class.SkImageFilter*, %class.SkImageFilter** %117, align 8
  %119 = icmp eq %class.SkImageFilter* %118, null
  br i1 %119, label %130, label %120

120:                                              ; preds = %114
  %121 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %118, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = atomicrmw add i32* %121, i32 -1 acq_rel
  %123 = icmp eq i32 %122, 1
  br i1 %123, label %124, label %130

124:                                              ; preds = %120
  %125 = bitcast %class.SkImageFilter* %118 to %class.SkRefCntBase*
  %126 = bitcast %class.SkImageFilter* %118 to void (%class.SkRefCntBase*)***
  %127 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %126, align 8
  %128 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %127, i64 2
  %129 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %128, align 8
  call void %129(%class.SkRefCntBase* nonnull %125) #11
  br label %130

130:                                              ; preds = %124, %120, %114
  %131 = add nuw nsw i64 %115, 1
  %132 = load i64, i64* %10, align 8
  %133 = lshr i64 %132, 1
  %134 = and i64 %133, 2147483647
  %135 = icmp ult i64 %131, %134
  br i1 %135, label %114, label %110

136:                                              ; preds = %110
  %137 = load i8*, i8** %11, align 8
  call void @_Z7sk_freePv(i8* %137) #11
  br label %138

138:                                              ; preds = %110, %136
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN28SkDiffuseLightingImageFilterC2E5sk_spI18SkImageFilterLightEffS0_I13SkImageFilterEPK6SkRect(%class.SkDiffuseLightingImageFilter*, %class.sk_sp.1* nocapture, float, float, %class.sk_sp* nocapture, %struct.SkRect*) unnamed_addr #0 align 2 {
  %7 = alloca %class.sk_sp, align 8
  %8 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %1, i64 0, i32 0
  %9 = bitcast %class.sk_sp.1* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store %class.SkImageFilterLight* null, %class.SkImageFilterLight** %8, align 8
  %11 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %12 = bitcast %class.sk_sp* %4 to i64*
  %13 = load i64, i64* %12, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %11, align 8
  %14 = bitcast %class.sk_sp* %7 to i64*
  store i64 %13, i64* %14, align 8
  %15 = bitcast %class.SkDiffuseLightingImageFilter* %0 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* %15, %class.sk_sp* nonnull %7, i32 1, %struct.SkRect* %5) #11
  %16 = getelementptr inbounds %class.SkDiffuseLightingImageFilter, %class.SkDiffuseLightingImageFilter* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV29SkLightingImageFilterInternal, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds %class.SkDiffuseLightingImageFilter, %class.SkDiffuseLightingImageFilter* %0, i64 0, i32 0, i32 2
  %18 = bitcast %class.sk_sp.1* %17 to i64*
  store i64 %10, i64* %18, align 8
  %19 = getelementptr inbounds %class.SkDiffuseLightingImageFilter, %class.SkDiffuseLightingImageFilter* %0, i64 0, i32 0, i32 3
  %20 = fdiv float %2, 2.550000e+02
  store float %20, float* %19, align 8
  %21 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %7, i64 0, i32 0
  %22 = load %class.SkImageFilter*, %class.SkImageFilter** %21, align 8
  %23 = icmp eq %class.SkImageFilter* %22, null
  br i1 %23, label %34, label %24

24:                                               ; preds = %6
  %25 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %22, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 -1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %34

28:                                               ; preds = %24
  %29 = bitcast %class.SkImageFilter* %22 to %class.SkRefCntBase*
  %30 = bitcast %class.SkImageFilter* %22 to void (%class.SkRefCntBase*)***
  %31 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %30, align 8
  %32 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, i64 2
  %33 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %32, align 8
  call void %33(%class.SkRefCntBase* nonnull %29) #11
  br label %34

34:                                               ; preds = %28, %24, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV28SkDiffuseLightingImageFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %35 = getelementptr inbounds %class.SkDiffuseLightingImageFilter, %class.SkDiffuseLightingImageFilter* %0, i64 0, i32 1
  store float %3, float* %35, align 4
  ret void
}

declare zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"*, %class.SkReadBuffer* dereferenceable(136), i32) local_unnamed_addr #2

declare float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK28SkDiffuseLightingImageFilter7flattenER13SkWriteBuffer(%class.SkDiffuseLightingImageFilter*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = bitcast %class.SkDiffuseLightingImageFilter* %0 to %class.SkImageFilter_Base*
  tail call void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base* %3, %class.SkWriteBuffer* dereferenceable(56) %1) #11
  %4 = getelementptr inbounds %class.SkDiffuseLightingImageFilter, %class.SkDiffuseLightingImageFilter* %0, i64 0, i32 0, i32 2, i32 0
  %5 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %4, align 8
  %6 = bitcast %class.SkImageFilterLight* %5 to i32 (%class.SkImageFilterLight*)***
  %7 = load i32 (%class.SkImageFilterLight*)**, i32 (%class.SkImageFilterLight*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%class.SkImageFilterLight*)*, i32 (%class.SkImageFilterLight*)** %7, i64 3
  %9 = load i32 (%class.SkImageFilterLight*)*, i32 (%class.SkImageFilterLight*)** %8, align 8
  %10 = tail call i32 %9(%class.SkImageFilterLight* %5) #11
  %11 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %12 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %12, i64 7
  %14 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %13, align 8
  tail call void %14(%class.SkWriteBuffer* %1, i32 %10) #11
  %15 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %5, i64 0, i32 1, i32 0
  %16 = load float, float* %15, align 4
  %17 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, float)***
  %18 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %18, i64 5
  %20 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %19, align 8
  tail call void %20(%class.SkWriteBuffer* %1, float %16) #11
  %21 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %5, i64 0, i32 1, i32 1
  %22 = load float, float* %21, align 4
  %23 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %17, align 8
  %24 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %23, i64 5
  %25 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %24, align 8
  tail call void %25(%class.SkWriteBuffer* %1, float %22) #11
  %26 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %5, i64 0, i32 1, i32 2
  %27 = load float, float* %26, align 4
  %28 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %17, align 8
  %29 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %28, i64 5
  %30 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %29, align 8
  tail call void %30(%class.SkWriteBuffer* %1, float %27) #11
  %31 = bitcast %class.SkImageFilterLight* %5 to void (%class.SkImageFilterLight*, %class.SkWriteBuffer*)***
  %32 = load void (%class.SkImageFilterLight*, %class.SkWriteBuffer*)**, void (%class.SkImageFilterLight*, %class.SkWriteBuffer*)*** %31, align 8
  %33 = getelementptr inbounds void (%class.SkImageFilterLight*, %class.SkWriteBuffer*)*, void (%class.SkImageFilterLight*, %class.SkWriteBuffer*)** %32, i64 9
  %34 = load void (%class.SkImageFilterLight*, %class.SkWriteBuffer*)*, void (%class.SkImageFilterLight*, %class.SkWriteBuffer*)** %33, align 8
  tail call void %34(%class.SkImageFilterLight* %5, %class.SkWriteBuffer* dereferenceable(56) %1) #11
  %35 = getelementptr inbounds %class.SkDiffuseLightingImageFilter, %class.SkDiffuseLightingImageFilter* %0, i64 0, i32 0, i32 3
  %36 = load float, float* %35, align 8
  %37 = fmul float %36, 2.550000e+02
  %38 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %17, align 8
  %39 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %38, i64 5
  %40 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %39, align 8
  tail call void %40(%class.SkWriteBuffer* %1, float %37) #11
  %41 = getelementptr inbounds %class.SkDiffuseLightingImageFilter, %class.SkDiffuseLightingImageFilter* %0, i64 0, i32 1
  %42 = load float, float* %41, align 4
  %43 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %17, align 8
  %44 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %43, i64 5
  %45 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %44, align 8
  tail call void %45(%class.SkWriteBuffer* %1, float %42) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK29SkLightingImageFilterInternal7flattenER13SkWriteBuffer(%class.SkLightingImageFilterInternal*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %class.SkLightingImageFilterInternal* %0 to %class.SkImageFilter_Base*
  tail call void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base* %3, %class.SkWriteBuffer* dereferenceable(56) %1) #11
  %4 = getelementptr inbounds %class.SkLightingImageFilterInternal, %class.SkLightingImageFilterInternal* %0, i64 0, i32 2, i32 0
  %5 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %4, align 8
  %6 = bitcast %class.SkImageFilterLight* %5 to i32 (%class.SkImageFilterLight*)***
  %7 = load i32 (%class.SkImageFilterLight*)**, i32 (%class.SkImageFilterLight*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%class.SkImageFilterLight*)*, i32 (%class.SkImageFilterLight*)** %7, i64 3
  %9 = load i32 (%class.SkImageFilterLight*)*, i32 (%class.SkImageFilterLight*)** %8, align 8
  %10 = tail call i32 %9(%class.SkImageFilterLight* %5) #11
  %11 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %12 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %12, i64 7
  %14 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %13, align 8
  tail call void %14(%class.SkWriteBuffer* %1, i32 %10) #11
  %15 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %5, i64 0, i32 1, i32 0
  %16 = load float, float* %15, align 4
  %17 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, float)***
  %18 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %18, i64 5
  %20 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %19, align 8
  tail call void %20(%class.SkWriteBuffer* %1, float %16) #11
  %21 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %5, i64 0, i32 1, i32 1
  %22 = load float, float* %21, align 4
  %23 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %17, align 8
  %24 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %23, i64 5
  %25 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %24, align 8
  tail call void %25(%class.SkWriteBuffer* %1, float %22) #11
  %26 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %5, i64 0, i32 1, i32 2
  %27 = load float, float* %26, align 4
  %28 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %17, align 8
  %29 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %28, i64 5
  %30 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %29, align 8
  tail call void %30(%class.SkWriteBuffer* %1, float %27) #11
  %31 = bitcast %class.SkImageFilterLight* %5 to void (%class.SkImageFilterLight*, %class.SkWriteBuffer*)***
  %32 = load void (%class.SkImageFilterLight*, %class.SkWriteBuffer*)**, void (%class.SkImageFilterLight*, %class.SkWriteBuffer*)*** %31, align 8
  %33 = getelementptr inbounds void (%class.SkImageFilterLight*, %class.SkWriteBuffer*)*, void (%class.SkImageFilterLight*, %class.SkWriteBuffer*)** %32, i64 9
  %34 = load void (%class.SkImageFilterLight*, %class.SkWriteBuffer*)*, void (%class.SkImageFilterLight*, %class.SkWriteBuffer*)** %33, align 8
  tail call void %34(%class.SkImageFilterLight* %5, %class.SkWriteBuffer* dereferenceable(56) %1) #11
  %35 = getelementptr inbounds %class.SkLightingImageFilterInternal, %class.SkLightingImageFilterInternal* %0, i64 0, i32 3
  %36 = load float, float* %35, align 8
  %37 = fmul float %36, 2.550000e+02
  %38 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %17, align 8
  %39 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %38, i64 5
  %40 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %39, align 8
  tail call void %40(%class.SkWriteBuffer* %1, float %37) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK28SkDiffuseLightingImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint(%class.sk_sp.179* noalias sret, %class.SkDiffuseLightingImageFilter*, %"class.skif::Context"* dereferenceable(136), %struct.SkIPoint* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.skif::FilterResult", align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %struct.SkIRect*
  %8 = alloca %struct.SkIRect, align 4
  %9 = alloca %class.SkMatrix, align 4
  %10 = alloca %class.SkBitmap, align 8
  %11 = alloca %struct.SkImageInfo, align 16
  %12 = alloca %class.SkBitmap, align 8
  %13 = alloca %class.SkMatrix, align 4
  %14 = alloca %class.DiffuseLightingType, align 8
  %15 = alloca { i64, i64 }, align 8
  %16 = bitcast { i64, i64 }* %15 to %struct.SkIRect*
  %17 = bitcast %class.SkDiffuseLightingImageFilter* %1 to %class.SkImageFilter_Base*
  %18 = bitcast %"class.skif::FilterResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #11, !noalias !50
  call void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* nonnull sret %5, %class.SkImageFilter_Base* %17, i32 0, %"class.skif::Context"* dereferenceable(136) %2) #11, !noalias !50
  %19 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %5, i64 0, i32 0, i32 0
  %20 = load %class.SkSpecialImage*, %class.SkSpecialImage** %19, align 8, !noalias !53
  %21 = icmp eq %class.SkSpecialImage* %20, null
  br i1 %21, label %39, label %22

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %5, i64 0, i32 1, i32 0
  %24 = bitcast %struct.SkIPoint* %23 to i64*
  %25 = load i64, i64* %24, align 8, !noalias !53
  %26 = trunc i64 %25 to i32
  %27 = lshr i64 %25, 32
  %28 = trunc i64 %27 to i32
  %29 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %20, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 1 monotonic, !noalias !53
  %31 = atomicrmw add i32* %29, i32 -1 acq_rel, !noalias !50
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %41

33:                                               ; preds = %22
  %34 = bitcast %class.SkSpecialImage* %20 to %class.SkRefCntBase*
  %35 = bitcast %class.SkSpecialImage* %20 to void (%class.SkRefCntBase*)***
  %36 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %35, align 8, !noalias !50
  %37 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %36, i64 2
  %38 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, align 8, !noalias !50
  call void %38(%class.SkRefCntBase* nonnull %34) #11, !noalias !50
  br label %41

39:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #11, !noalias !50
  %40 = getelementptr inbounds %class.sk_sp.179, %class.sk_sp.179* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %40, align 8
  br label %265

41:                                               ; preds = %33, %22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #11, !noalias !50
  %42 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #11
  %43 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %44 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %20, i64 0, i32 2, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %20, i64 0, i32 2, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = sub i32 %45, %47
  %49 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %20, i64 0, i32 2, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %20, i64 0, i32 2, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = sub i32 %50, %52
  %54 = shl i64 %25, 32
  %55 = ashr exact i64 %54, 32
  %56 = sext i32 %48 to i64
  %57 = add nsw i64 %55, %56
  %58 = icmp slt i64 %57, 2147483647
  %59 = select i1 %58, i64 %57, i64 2147483647
  %60 = icmp sgt i64 %59, -2147483647
  %61 = select i1 %60, i64 %59, i64 -2147483647
  %62 = ashr i64 %25, 32
  %63 = sext i32 %53 to i64
  %64 = add nsw i64 %62, %63
  %65 = icmp slt i64 %64, 2147483647
  %66 = select i1 %65, i64 %64, i64 2147483647
  %67 = icmp sgt i64 %66, -2147483647
  %68 = select i1 %67, i64 %66, i64 -2147483647
  %69 = shl nsw i64 %68, 32
  %70 = and i64 %61, 4294967295
  %71 = or i64 %69, %70
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %25, i64* %72, align 8
  store i64 %71, i64* %43, align 8
  %73 = bitcast %struct.SkIRect* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #11
  %74 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 0
  %75 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 1
  %76 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 2
  %77 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 3
  %78 = bitcast %struct.SkIRect* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %78, i8 -86, i64 16, i1 false)
  %79 = call zeroext i1 @_ZNK18SkImageFilter_Base13applyCropRectERKN4skif7ContextERK7SkIRectPS4_(%class.SkImageFilter_Base* %17, %"class.skif::Context"* dereferenceable(136) %2, %struct.SkIRect* nonnull dereferenceable(16) %7, %struct.SkIRect* nonnull %8) #11
  br i1 %79, label %82, label %80

80:                                               ; preds = %41
  %81 = getelementptr inbounds %class.sk_sp.179, %class.sk_sp.179* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %81, align 8
  br label %256

82:                                               ; preds = %41
  %83 = load i32, i32* %74, align 4
  %84 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 0
  store i32 %83, i32* %84, align 4
  %85 = load i32, i32* %75, align 4
  %86 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 1
  store i32 %85, i32* %86, align 4
  %87 = sub nsw i32 0, %26
  %88 = sub nsw i32 0, %28
  %89 = sext i32 %83 to i64
  %90 = sext i32 %87 to i64
  %91 = add nsw i64 %89, %90
  %92 = icmp slt i64 %91, 2147483647
  %93 = select i1 %92, i64 %91, i64 2147483647
  %94 = icmp sgt i64 %93, -2147483647
  %95 = select i1 %94, i64 %93, i64 -2147483647
  %96 = trunc i64 %95 to i32
  store i32 %96, i32* %74, align 4
  %97 = sext i32 %85 to i64
  %98 = sext i32 %88 to i64
  %99 = add nsw i64 %97, %98
  %100 = icmp slt i64 %99, 2147483647
  %101 = select i1 %100, i64 %99, i64 2147483647
  %102 = icmp sgt i64 %101, -2147483647
  %103 = select i1 %102, i64 %101, i64 -2147483647
  %104 = trunc i64 %103 to i32
  store i32 %104, i32* %75, align 4
  %105 = load i32, i32* %76, align 4
  %106 = sext i32 %105 to i64
  %107 = add nsw i64 %106, %90
  %108 = icmp slt i64 %107, 2147483647
  %109 = select i1 %108, i64 %107, i64 2147483647
  %110 = icmp sgt i64 %109, -2147483647
  %111 = select i1 %110, i64 %109, i64 -2147483647
  %112 = trunc i64 %111 to i32
  store i32 %112, i32* %76, align 4
  %113 = load i32, i32* %77, align 4
  %114 = sext i32 %113 to i64
  %115 = add nsw i64 %114, %98
  %116 = icmp slt i64 %115, 2147483647
  %117 = select i1 %116, i64 %115, i64 2147483647
  %118 = icmp sgt i64 %117, -2147483647
  %119 = select i1 %118, i64 %117, i64 -2147483647
  %120 = trunc i64 %119 to i32
  store i32 %120, i32* %77, align 4
  %121 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 5, i32 0, i32 0
  %122 = load %class.SkSpecialImage*, %class.SkSpecialImage** %121, align 8
  %123 = call zeroext i1 @_ZNK14SkSpecialImage15isTextureBackedEv(%class.SkSpecialImage* %122) #11
  br i1 %123, label %124, label %136

124:                                              ; preds = %82
  %125 = bitcast %class.SkMatrix* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %125) #11
  %126 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1
  %127 = bitcast %class.SkMatrix* %126 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %125, i8* align 4 %127, i64 40, i1 false)
  %128 = load i32, i32* %84, align 4
  %129 = sub nsw i32 0, %128
  %130 = sitofp i32 %129 to float
  %131 = load i32, i32* %86, align 4
  %132 = sub nsw i32 0, %131
  %133 = sitofp i32 %132 to float
  %134 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %9, float %130, float %133) #11
  %135 = bitcast %class.SkDiffuseLightingImageFilter* %1 to %class.SkLightingImageFilterInternal*
  call void @_ZNK29SkLightingImageFilterInternal14filterImageGPUERKN4skif7ContextEP14SkSpecialImageRK7SkIRectRK8SkMatrix(%class.sk_sp.179* sret %0, %class.SkLightingImageFilterInternal* %135, %"class.skif::Context"* dereferenceable(136) %2, %class.SkSpecialImage* nonnull %20, %struct.SkIRect* nonnull dereferenceable(16) %8, %class.SkMatrix* nonnull dereferenceable(40) %9)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %125) #11
  br label %256

136:                                              ; preds = %82
  %137 = load i32, i32* %76, align 4
  %138 = load i32, i32* %74, align 4
  %139 = sub i32 %137, %138
  %140 = icmp slt i32 %139, 2
  br i1 %140, label %146, label %141

141:                                              ; preds = %136
  %142 = load i32, i32* %77, align 4
  %143 = load i32, i32* %75, align 4
  %144 = sub i32 %142, %143
  %145 = icmp slt i32 %144, 2
  br i1 %145, label %146, label %148

146:                                              ; preds = %141, %136
  %147 = getelementptr inbounds %class.sk_sp.179, %class.sk_sp.179* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %147, align 8
  br label %256

148:                                              ; preds = %141
  %149 = bitcast %class.SkBitmap* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %149) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %149, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %10) #11
  %150 = call zeroext i1 @_ZNK14SkSpecialImage11getROPixelsEP8SkBitmap(%class.SkSpecialImage* nonnull %20, %class.SkBitmap* nonnull %10) #11
  br i1 %150, label %153, label %151

151:                                              ; preds = %148
  %152 = getelementptr inbounds %class.sk_sp.179, %class.sk_sp.179* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %152, align 8
  br label %255

153:                                              ; preds = %148
  %154 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %10, i64 0, i32 1, i32 2, i32 0, i32 1
  %155 = load i32, i32* %154, align 8
  %156 = icmp eq i32 %155, 6
  br i1 %156, label %159, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %class.sk_sp.179, %class.sk_sp.179* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %158, align 8
  br label %255

159:                                              ; preds = %153
  %160 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %10, i64 0, i32 1, i32 0
  %161 = load i8*, i8** %160, align 8
  %162 = icmp eq i8* %161, null
  br i1 %162, label %163, label %165

163:                                              ; preds = %159
  %164 = getelementptr inbounds %class.sk_sp.179, %class.sk_sp.179* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %164, align 8
  br label %255

165:                                              ; preds = %159
  %166 = bitcast %struct.SkImageInfo* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %166) #11
  %167 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %11, i64 0, i32 0, i32 0, i32 0
  %168 = load i32, i32* %76, align 4
  %169 = load i32, i32* %74, align 4
  %170 = sub i32 %168, %169
  %171 = load i32, i32* %77, align 4
  %172 = load i32, i32* %75, align 4
  %173 = sub i32 %171, %172
  %174 = zext i32 %173 to i64
  %175 = shl nuw i64 %174, 32
  %176 = zext i32 %170 to i64
  %177 = or i64 %175, %176
  %178 = bitcast %struct.SkImageInfo* %11 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* %178, align 16, !alias.scope !56
  %179 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %11, i64 0, i32 1
  %180 = bitcast %struct.SkISize* %179 to i64*
  store i64 %177, i64* %180, align 16, !alias.scope !56
  %181 = bitcast %class.SkBitmap* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %181) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %181, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %12) #11
  %182 = sext i32 %170 to i64
  %183 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %11, i64 0, i32 0
  %184 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %183) #11
  %185 = sext i32 %184 to i64
  %186 = mul nsw i64 %185, %182
  %187 = icmp ult i64 %186, 2147483648
  %188 = select i1 %187, i64 %186, i64 0
  %189 = call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* nonnull %12, %struct.SkImageInfo* nonnull dereferenceable(24) %11, i64 %188) #11
  br i1 %189, label %192, label %190

190:                                              ; preds = %165
  %191 = getelementptr inbounds %class.sk_sp.179, %class.sk_sp.179* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %191, align 8
  br label %245

192:                                              ; preds = %165
  %193 = bitcast %class.SkMatrix* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %193) #11
  %194 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1
  %195 = bitcast %class.SkMatrix* %194 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %193, i8* align 4 %195, i64 40, i1 false)
  %196 = sitofp i32 %87 to float
  %197 = sitofp i32 %88 to float
  %198 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %13, float %196, float %197) #11
  %199 = getelementptr inbounds %class.SkDiffuseLightingImageFilter, %class.SkDiffuseLightingImageFilter* %1, i64 0, i32 0, i32 2, i32 0
  %200 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %199, align 8
  %201 = bitcast %class.SkImageFilterLight* %200 to %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)***
  %202 = load %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)**, %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)*** %201, align 8
  %203 = getelementptr inbounds %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)*, %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)** %202, i64 6
  %204 = load %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)*, %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)** %203, align 8
  %205 = call %class.SkImageFilterLight* %204(%class.SkImageFilterLight* %200, %class.SkMatrix* nonnull dereferenceable(40) %13) #11
  %206 = bitcast %class.DiffuseLightingType* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %206) #11
  %207 = getelementptr inbounds %class.DiffuseLightingType, %class.DiffuseLightingType* %14, i64 0, i32 0, i32 0
  %208 = getelementptr inbounds %class.DiffuseLightingType, %class.DiffuseLightingType* %14, i64 0, i32 1
  %209 = getelementptr inbounds %class.DiffuseLightingType, %class.DiffuseLightingType* %14, i64 0, i32 2, i64 0
  %210 = getelementptr inbounds %class.SkDiffuseLightingImageFilter, %class.SkDiffuseLightingImageFilter* %1, i64 0, i32 1
  %211 = bitcast float* %210 to i32*
  %212 = bitcast i8* %209 to i32*
  store i32 -1431655766, i32* %212, align 4
  %213 = load i32, i32* %211, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV19DiffuseLightingType, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %207, align 8
  %214 = bitcast float* %208 to i32*
  store i32 %213, i32* %214, align 8
  %215 = getelementptr inbounds %class.DiffuseLightingType, %class.DiffuseLightingType* %14, i64 0, i32 0
  %216 = getelementptr inbounds %class.SkDiffuseLightingImageFilter, %class.SkDiffuseLightingImageFilter* %1, i64 0, i32 0, i32 3
  %217 = load float, float* %216, align 8
  call fastcc void @_ZL11lightBitmapRK16BaseLightingTypePK18SkImageFilterLightRK8SkBitmapPS5_fRK7SkIRect(%class.BaseLightingType* nonnull dereferenceable(8) %215, %class.SkImageFilterLight* %205, %class.SkBitmap* nonnull dereferenceable(56) %10, %class.SkBitmap* nonnull %12, float %217, %struct.SkIRect* nonnull dereferenceable(16) %8)
  %218 = bitcast { i64, i64 }* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %218) #11
  %219 = load i32, i32* %76, align 4
  %220 = load i32, i32* %74, align 4
  %221 = sub i32 %219, %220
  %222 = load i32, i32* %77, align 4
  %223 = load i32, i32* %75, align 4
  %224 = sub i32 %222, %223
  %225 = zext i32 %224 to i64
  %226 = shl nuw i64 %225, 32
  %227 = zext i32 %221 to i64
  %228 = or i64 %226, %227
  %229 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 0
  store i64 0, i64* %229, align 8
  %230 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 1
  store i64 %228, i64* %230, align 8
  %231 = load %class.SkSpecialImage*, %class.SkSpecialImage** %121, align 8
  %232 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %231, i64 0, i32 1
  call void @_ZN14SkSpecialImage14MakeFromRasterERK7SkIRectRK8SkBitmapRK14SkSurfaceProps(%class.sk_sp.179* sret %0, %struct.SkIRect* nonnull dereferenceable(16) %16, %class.SkBitmap* nonnull dereferenceable(56) %12, %class.SkSurfaceProps* dereferenceable(8) %232) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %218) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %206) #11
  %233 = icmp eq %class.SkImageFilterLight* %205, null
  br i1 %233, label %244, label %234

234:                                              ; preds = %192
  %235 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %205, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = atomicrmw add i32* %235, i32 -1 acq_rel
  %237 = icmp eq i32 %236, 1
  br i1 %237, label %238, label %244

238:                                              ; preds = %234
  %239 = bitcast %class.SkImageFilterLight* %205 to %class.SkRefCntBase*
  %240 = bitcast %class.SkImageFilterLight* %205 to void (%class.SkRefCntBase*)***
  %241 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %240, align 8
  %242 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %241, i64 2
  %243 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %242, align 8
  call void %243(%class.SkRefCntBase* nonnull %239) #11
  br label %244

244:                                              ; preds = %192, %234, %238
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %193) #11
  br label %245

245:                                              ; preds = %244, %190
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %181) #11
  %246 = load %class.SkColorSpace*, %class.SkColorSpace** %167, align 16
  %247 = icmp eq %class.SkColorSpace* %246, null
  br i1 %247, label %254, label %248

248:                                              ; preds = %245
  %249 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %246, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = atomicrmw add i32* %249, i32 -1 acq_rel
  %251 = icmp eq i32 %250, 1
  br i1 %251, label %252, label %254

252:                                              ; preds = %248
  %253 = bitcast %class.SkColorSpace* %246 to i8*
  call void @_ZdlPv(i8* %253) #14
  br label %254

254:                                              ; preds = %245, %248, %252
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %166) #11
  br label %255

255:                                              ; preds = %254, %163, %157, %151
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %149) #11
  br label %256

256:                                              ; preds = %255, %146, %124, %80
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #11
  %257 = atomicrmw add i32* %29, i32 -1 acq_rel
  %258 = icmp eq i32 %257, 1
  br i1 %258, label %259, label %265

259:                                              ; preds = %256
  %260 = bitcast %class.SkSpecialImage* %20 to %class.SkRefCntBase*
  %261 = bitcast %class.SkSpecialImage* %20 to void (%class.SkRefCntBase*)***
  %262 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %261, align 8
  %263 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %262, i64 2
  %264 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %263, align 8
  call void %264(%class.SkRefCntBase* nonnull %260) #11
  br label %265

265:                                              ; preds = %39, %256, %259
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZNK18SkImageFilter_Base13applyCropRectERKN4skif7ContextERK7SkIRectPS4_(%class.SkImageFilter_Base*, %"class.skif::Context"* dereferenceable(136), %struct.SkIRect* dereferenceable(16), %struct.SkIRect*) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

declare zeroext i1 @_ZNK14SkSpecialImage11getROPixelsEP8SkBitmap(%class.SkSpecialImage*, %class.SkBitmap*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL11lightBitmapRK16BaseLightingTypePK18SkImageFilterLightRK8SkBitmapPS5_fRK7SkIRect(%class.BaseLightingType* dereferenceable(8), %class.SkImageFilterLight*, %class.SkBitmap* readonly dereferenceable(56), %class.SkBitmap* nocapture readonly, float, %struct.SkIRect* nocapture readonly dereferenceable(16)) unnamed_addr #0 {
  %7 = alloca %struct.SkPoint3, align 8
  %8 = alloca %struct.SkPoint3, align 8
  %9 = alloca %struct.SkPoint3, align 8
  %10 = alloca %struct.SkPoint3, align 8
  %11 = alloca %struct.SkPoint3, align 8
  %12 = alloca %struct.SkPoint3, align 8
  %13 = alloca %struct.SkPoint3, align 8
  %14 = alloca %struct.SkPoint3, align 8
  %15 = alloca %struct.SkPoint3, align 8
  %16 = alloca %struct.SkPoint3, align 8
  %17 = alloca %struct.SkPoint3, align 8
  %18 = alloca %struct.SkPoint3, align 8
  %19 = alloca %struct.SkPoint3, align 8
  %20 = alloca %struct.SkPoint3, align 8
  %21 = alloca %struct.SkPoint3, align 8
  %22 = alloca %struct.SkPoint3, align 8
  %23 = alloca %struct.SkPoint3, align 8
  %24 = alloca %struct.SkPoint3, align 8
  %25 = alloca %struct.SkPoint3, align 8
  %26 = alloca %struct.SkPoint3, align 8
  %27 = alloca %struct.SkPoint3, align 8
  %28 = alloca %struct.SkPoint3, align 8
  %29 = alloca %struct.SkPoint3, align 8
  %30 = alloca %struct.SkPoint3, align 8
  %31 = alloca %struct.SkPoint3, align 8
  %32 = alloca %struct.SkPoint3, align 8
  %33 = alloca %struct.SkPoint3, align 8
  %34 = alloca %struct.SkPoint3, align 8
  %35 = alloca %struct.SkPoint3, align 8
  %36 = alloca %struct.SkPoint3, align 8
  %37 = alloca %struct.SkPoint3, align 8
  %38 = alloca %struct.SkPoint3, align 8
  %39 = alloca %struct.SkPoint3, align 8
  %40 = alloca %struct.SkPoint3, align 8
  %41 = alloca %struct.SkPoint3, align 8
  %42 = alloca %struct.SkPoint3, align 8
  %43 = alloca %struct.SkPoint3, align 8
  %44 = alloca %struct.SkPoint3, align 8
  %45 = alloca %struct.SkPoint3, align 8
  %46 = alloca %struct.SkPoint3, align 8
  %47 = alloca %struct.SkPoint3, align 8
  %48 = alloca %struct.SkPoint3, align 8
  %49 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2, i32 1, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2, i32 1, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = sext i32 %57 to i64
  %59 = sub nsw i64 %55, %58
  %60 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 3
  %61 = load i32, i32* %60, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = sext i32 %64 to i64
  %66 = sub nsw i64 %62, %65
  %67 = icmp slt i64 %59, 1
  %68 = icmp slt i64 %66, 1
  %69 = or i1 %67, %68
  br i1 %69, label %822, label %70

70:                                               ; preds = %6
  %71 = or i64 %66, %59
  %72 = add nsw i64 %71, 2147483648
  %73 = icmp ugt i64 %72, 4294967295
  br i1 %73, label %822, label %74

74:                                               ; preds = %70
  %75 = icmp slt i32 %50, 1
  %76 = icmp slt i32 %52, 1
  %77 = or i1 %75, %76
  br i1 %77, label %822, label %78

78:                                               ; preds = %74
  %79 = or i32 %52, %50
  %80 = sext i32 %79 to i64
  %81 = add nsw i64 %80, 2147483648
  %82 = icmp ugt i64 %81, 4294967295
  %83 = or i32 %64, %57
  %84 = icmp slt i32 %83, 0
  %85 = or i1 %82, %84
  %86 = icmp slt i32 %50, %54
  %87 = or i1 %86, %85
  %88 = icmp sge i32 %52, %61
  %89 = xor i1 %87, true
  %90 = and i1 %88, %89
  br i1 %90, label %91, label %822

91:                                               ; preds = %78
  %92 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %3, i64 0, i32 1, i32 0
  %93 = bitcast i8** %92 to i32**
  %94 = load i32*, i32** %93, align 8
  %95 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 0
  %96 = load i8*, i8** %95, align 8
  %97 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = mul i64 %98, %65
  %100 = getelementptr inbounds i8, i8* %96, i64 %99
  %101 = shl i32 %57, 2
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds i8, i8* %100, i64 %102
  %104 = bitcast i8* %103 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = lshr i32 %105, 24
  %107 = add i32 %57, 1
  %108 = shl i32 %107, 2
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i8, i8* %100, i64 %109
  %111 = bitcast i8* %110 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = lshr i32 %112, 24
  %114 = add i32 %64, 1
  %115 = sext i32 %114 to i64
  %116 = mul i64 %98, %115
  %117 = getelementptr inbounds i8, i8* %96, i64 %116
  %118 = getelementptr inbounds i8, i8* %117, i64 %102
  %119 = bitcast i8* %118 to i32*
  %120 = load i32, i32* %119, align 4
  %121 = lshr i32 %120, 24
  %122 = sub nsw i32 0, %121
  %123 = getelementptr inbounds i8, i8* %117, i64 %109
  %124 = bitcast i8* %123 to i32*
  %125 = load i32, i32* %124, align 4
  %126 = lshr i32 %125, 24
  %127 = bitcast %struct.SkPoint3* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %127) #11
  %128 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %7, i64 0, i32 2
  %129 = bitcast %class.SkImageFilterLight* %1 to { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)***
  %130 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)**, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*** %129, align 8
  %131 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %130, i64 7
  %132 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %131, align 8
  %133 = tail call { <2 x float>, float } %132(%class.SkImageFilterLight* %1, i32 %57, i32 %64, i32 %106, float %4) #11
  %134 = extractvalue { <2 x float>, float } %133, 0
  %135 = extractvalue { <2 x float>, float } %133, 1
  %136 = bitcast %struct.SkPoint3* %7 to <2 x float>*
  store <2 x float> %134, <2 x float>* %136, align 8
  store float %135, float* %128, align 8
  %137 = bitcast %struct.SkPoint3* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %137) #11
  %138 = shl nuw nsw i32 %106, 1
  %139 = shl nuw nsw i32 %113, 1
  %140 = sub nsw i32 %139, %138
  %141 = sub nsw i32 %140, %121
  %142 = add nsw i32 %141, %126
  %143 = sitofp i32 %142 to float
  %144 = fmul float %143, 0x3FE5555560000000
  %145 = shl nuw nsw i32 %121, 1
  %146 = add nuw nsw i32 %113, %138
  %147 = sub nsw i32 %145, %146
  %148 = add nsw i32 %147, %126
  %149 = sitofp i32 %148 to float
  %150 = fmul float %149, 0x3FE5555560000000
  %151 = fmul float %144, %4
  %152 = fmul float %150, %4
  %153 = fmul float %151, %151
  %154 = fmul float %152, %152
  %155 = fadd float %153, %154
  %156 = fadd float %155, 1.000000e+00
  %157 = fadd float %156, 0x3F30000000000000
  %158 = tail call float @sqrtf(float %157) #11
  %159 = fdiv float 1.000000e+00, %158
  %160 = fmul float %151, %159
  %161 = fsub float -0.000000e+00, %160
  %162 = insertelement <2 x float> undef, float %161, i32 0
  %163 = fmul float %152, %159
  %164 = fsub float -0.000000e+00, %163
  %165 = insertelement <2 x float> %162, float %164, i32 1
  %166 = bitcast %struct.SkPoint3* %8 to <2 x float>*
  store <2 x float> %165, <2 x float>* %166, align 8
  %167 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %8, i64 0, i32 2
  store float %159, float* %167, align 8
  %168 = bitcast %struct.SkPoint3* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %168) #11
  %169 = bitcast %class.SkImageFilterLight* %1 to { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)***
  %170 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)**, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*** %169, align 8
  %171 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %170, i64 8
  %172 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %171, align 8
  %173 = call { <2 x float>, float } %172(%class.SkImageFilterLight* %1, %struct.SkPoint3* nonnull dereferenceable(12) %7) #11
  %174 = extractvalue { <2 x float>, float } %173, 0
  %175 = extractvalue { <2 x float>, float } %173, 1
  %176 = bitcast %struct.SkPoint3* %9 to <2 x float>*
  store <2 x float> %174, <2 x float>* %176, align 8
  %177 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %9, i64 0, i32 2
  store float %175, float* %177, align 8
  %178 = bitcast %class.BaseLightingType* %0 to i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)***
  %179 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)**, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*** %178, align 8
  %180 = getelementptr inbounds i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %179, i64 2
  %181 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %180, align 8
  %182 = call i32 %181(%class.BaseLightingType* %0, %struct.SkPoint3* nonnull dereferenceable(12) %8, %struct.SkPoint3* nonnull dereferenceable(12) %7, %struct.SkPoint3* nonnull dereferenceable(12) %9) #11
  store i32 %182, i32* %94, align 4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %168) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %137) #11
  %183 = sub nsw i32 0, %106
  %184 = getelementptr inbounds i32, i32* %94, i64 1
  %185 = add i32 %54, -1
  %186 = icmp slt i32 %107, %185
  br i1 %186, label %187, label %276

187:                                              ; preds = %91
  %188 = bitcast %struct.SkPoint3* %10 to i8*
  %189 = bitcast %struct.SkPoint3* %10 to <2 x float>*
  %190 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %10, i64 0, i32 2
  %191 = bitcast %struct.SkPoint3* %11 to i8*
  %192 = bitcast %struct.SkPoint3* %11 to <2 x float>*
  %193 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %11, i64 0, i32 2
  %194 = sext i32 %107 to i64
  br label %195

195:                                              ; preds = %195, %187
  %196 = phi i64 [ %194, %187 ], [ %204, %195 ]
  %197 = phi i32* [ %184, %187 ], [ %271, %195 ]
  %198 = phi i32 [ %122, %187 ], [ %270, %195 ]
  %199 = phi i32 [ %183, %187 ], [ %269, %195 ]
  %200 = phi i32 [ %126, %187 ], [ %221, %195 ]
  %201 = phi i32 [ %121, %187 ], [ %200, %195 ]
  %202 = phi i32 [ %113, %187 ], [ %215, %195 ]
  %203 = phi i32 [ %106, %187 ], [ %202, %195 ]
  %204 = add nsw i64 %196, 1
  %205 = load i8*, i8** %95, align 8
  %206 = load i64, i64* %97, align 8
  %207 = mul i64 %206, %65
  %208 = getelementptr inbounds i8, i8* %205, i64 %207
  %209 = trunc i64 %204 to i32
  %210 = shl i32 %209, 2
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds i8, i8* %208, i64 %211
  %213 = bitcast i8* %212 to i32*
  %214 = load i32, i32* %213, align 4
  %215 = lshr i32 %214, 24
  %216 = mul i64 %206, %115
  %217 = getelementptr inbounds i8, i8* %205, i64 %216
  %218 = getelementptr inbounds i8, i8* %217, i64 %211
  %219 = bitcast i8* %218 to i32*
  %220 = load i32, i32* %219, align 4
  %221 = lshr i32 %220, 24
  %222 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)**, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*** %129, align 8
  %223 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %222, i64 7
  %224 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %223, align 8
  %225 = trunc i64 %196 to i32
  %226 = call { <2 x float>, float } %224(%class.SkImageFilterLight* %1, i32 %225, i32 %64, i32 %202, float %4) #11
  %227 = extractvalue { <2 x float>, float } %226, 0
  %228 = extractvalue { <2 x float>, float } %226, 1
  store <2 x float> %227, <2 x float>* %136, align 8
  store float %228, float* %128, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %188) #11
  %229 = sub nsw i32 %215, %203
  %230 = shl nsw i32 %229, 1
  %231 = add nsw i32 %221, %198
  %232 = add nsw i32 %231, %230
  %233 = sitofp i32 %232 to float
  %234 = fmul float %233, 0x3FD5555560000000
  %235 = shl nuw nsw i32 %202, 1
  %236 = shl nuw nsw i32 %200, 1
  %237 = add nsw i32 %201, %199
  %238 = add nsw i32 %237, %236
  %239 = sub nsw i32 %238, %235
  %240 = sub nsw i32 %239, %215
  %241 = add nsw i32 %240, %221
  %242 = sitofp i32 %241 to float
  %243 = fmul float %242, 5.000000e-01
  %244 = fmul float %234, %4
  %245 = fmul float %243, %4
  %246 = fmul float %244, %244
  %247 = fmul float %245, %245
  %248 = fadd float %247, %246
  %249 = fadd float %248, 1.000000e+00
  %250 = fadd float %249, 0x3F30000000000000
  %251 = call float @sqrtf(float %250) #11
  %252 = fdiv float 1.000000e+00, %251
  %253 = fmul float %244, %252
  %254 = fsub float -0.000000e+00, %253
  %255 = insertelement <2 x float> undef, float %254, i32 0
  %256 = fmul float %245, %252
  %257 = fsub float -0.000000e+00, %256
  %258 = insertelement <2 x float> %255, float %257, i32 1
  store <2 x float> %258, <2 x float>* %189, align 8
  store float %252, float* %190, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %191) #11
  %259 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)**, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*** %169, align 8
  %260 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %259, i64 8
  %261 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %260, align 8
  %262 = call { <2 x float>, float } %261(%class.SkImageFilterLight* %1, %struct.SkPoint3* nonnull dereferenceable(12) %7) #11
  %263 = extractvalue { <2 x float>, float } %262, 0
  %264 = extractvalue { <2 x float>, float } %262, 1
  store <2 x float> %263, <2 x float>* %192, align 8
  store float %264, float* %193, align 8
  %265 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)**, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*** %178, align 8
  %266 = getelementptr inbounds i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %265, i64 2
  %267 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %266, align 8
  %268 = call i32 %267(%class.BaseLightingType* %0, %struct.SkPoint3* nonnull dereferenceable(12) %10, %struct.SkPoint3* nonnull dereferenceable(12) %7, %struct.SkPoint3* nonnull dereferenceable(12) %11) #11
  store i32 %268, i32* %197, align 4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %191) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %188) #11
  %269 = sub nsw i32 0, %202
  %270 = sub nsw i32 0, %200
  %271 = getelementptr inbounds i32, i32* %197, i64 1
  %272 = icmp eq i32 %185, %209
  br i1 %272, label %273, label %195

273:                                              ; preds = %195
  %274 = shl nuw nsw i32 %215, 1
  %275 = sub nsw i32 %274, %235
  br label %276

276:                                              ; preds = %273, %91
  %277 = phi i32 [ %275, %273 ], [ %140, %91 ]
  %278 = phi i32 [ %274, %273 ], [ %139, %91 ]
  %279 = phi i32 [ %215, %273 ], [ %113, %91 ]
  %280 = phi i32 [ %200, %273 ], [ %121, %91 ]
  %281 = phi i32 [ %221, %273 ], [ %126, %91 ]
  %282 = phi i32 [ %185, %273 ], [ %107, %91 ]
  %283 = phi i32 [ %269, %273 ], [ %183, %91 ]
  %284 = phi i32 [ %270, %273 ], [ %122, %91 ]
  %285 = phi i32* [ %271, %273 ], [ %184, %91 ]
  %286 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)**, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*** %129, align 8
  %287 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %286, i64 7
  %288 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %287, align 8
  %289 = call { <2 x float>, float } %288(%class.SkImageFilterLight* %1, i32 %282, i32 %64, i32 %279, float %4) #11
  %290 = extractvalue { <2 x float>, float } %289, 0
  %291 = extractvalue { <2 x float>, float } %289, 1
  store <2 x float> %290, <2 x float>* %136, align 8
  store float %291, float* %128, align 8
  %292 = bitcast %struct.SkPoint3* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %292) #11
  %293 = add nsw i32 %281, %277
  %294 = add nsw i32 %293, %284
  %295 = sitofp i32 %294 to float
  %296 = fmul float %295, 0x3FE5555560000000
  %297 = shl nuw nsw i32 %281, 1
  %298 = sub nsw i32 %280, %278
  %299 = add nsw i32 %298, %297
  %300 = add nsw i32 %299, %283
  %301 = sitofp i32 %300 to float
  %302 = fmul float %301, 0x3FE5555560000000
  %303 = fmul float %296, %4
  %304 = fmul float %302, %4
  %305 = fmul float %303, %303
  %306 = fmul float %304, %304
  %307 = fadd float %305, %306
  %308 = fadd float %307, 1.000000e+00
  %309 = fadd float %308, 0x3F30000000000000
  %310 = call float @sqrtf(float %309) #11
  %311 = fdiv float 1.000000e+00, %310
  %312 = fmul float %303, %311
  %313 = fsub float -0.000000e+00, %312
  %314 = insertelement <2 x float> undef, float %313, i32 0
  %315 = fmul float %304, %311
  %316 = fsub float -0.000000e+00, %315
  %317 = insertelement <2 x float> %314, float %316, i32 1
  %318 = bitcast %struct.SkPoint3* %12 to <2 x float>*
  store <2 x float> %317, <2 x float>* %318, align 8
  %319 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %12, i64 0, i32 2
  store float %311, float* %319, align 8
  %320 = bitcast %struct.SkPoint3* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %320) #11
  %321 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)**, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*** %169, align 8
  %322 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %321, i64 8
  %323 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %322, align 8
  %324 = call { <2 x float>, float } %323(%class.SkImageFilterLight* %1, %struct.SkPoint3* nonnull dereferenceable(12) %7) #11
  %325 = extractvalue { <2 x float>, float } %324, 0
  %326 = extractvalue { <2 x float>, float } %324, 1
  %327 = bitcast %struct.SkPoint3* %13 to <2 x float>*
  store <2 x float> %325, <2 x float>* %327, align 8
  %328 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %13, i64 0, i32 2
  store float %326, float* %328, align 8
  %329 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)**, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*** %178, align 8
  %330 = getelementptr inbounds i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %329, i64 2
  %331 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %330, align 8
  %332 = call i32 %331(%class.BaseLightingType* %0, %struct.SkPoint3* nonnull dereferenceable(12) %12, %struct.SkPoint3* nonnull dereferenceable(12) %7, %struct.SkPoint3* nonnull dereferenceable(12) %13) #11
  store i32 %332, i32* %285, align 4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %320) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %292) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %127) #11
  %333 = getelementptr inbounds i32, i32* %285, i64 1
  %334 = add i32 %61, -1
  %335 = icmp slt i32 %114, %334
  br i1 %335, label %336, label %598

336:                                              ; preds = %276
  %337 = bitcast %struct.SkPoint3* %14 to i8*
  %338 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %14, i64 0, i32 0
  %339 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %14, i64 0, i32 1
  %340 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %14, i64 0, i32 2
  %341 = bitcast %struct.SkPoint3* %14 to <2 x float>*
  %342 = bitcast %struct.SkPoint3* %15 to i8*
  %343 = bitcast %struct.SkPoint3* %15 to <2 x float>*
  %344 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %15, i64 0, i32 2
  %345 = bitcast %struct.SkPoint3* %16 to i8*
  %346 = bitcast %struct.SkPoint3* %16 to <2 x float>*
  %347 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %16, i64 0, i32 2
  %348 = bitcast %struct.SkPoint3* %17 to i8*
  %349 = bitcast %struct.SkPoint3* %17 to <2 x float>*
  %350 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %17, i64 0, i32 2
  %351 = bitcast %struct.SkPoint3* %18 to i8*
  %352 = bitcast %struct.SkPoint3* %18 to <2 x float>*
  %353 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %18, i64 0, i32 2
  %354 = bitcast %struct.SkPoint3* %19 to i8*
  %355 = bitcast %struct.SkPoint3* %19 to <2 x float>*
  %356 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %19, i64 0, i32 2
  %357 = bitcast %struct.SkPoint3* %20 to i8*
  %358 = bitcast %struct.SkPoint3* %20 to <2 x float>*
  %359 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %20, i64 0, i32 2
  %360 = sext i32 %107 to i64
  br label %361

361:                                              ; preds = %540, %336
  %362 = phi i64 [ %115, %336 ], [ %389, %540 ]
  %363 = phi i32* [ %333, %336 ], [ %595, %540 ]
  %364 = phi i32* [ %285, %336 ], [ %549, %540 ]
  %365 = add nsw i64 %362, -1
  %366 = load i8*, i8** %95, align 8
  %367 = load i64, i64* %97, align 8
  %368 = mul i64 %367, %365
  %369 = getelementptr inbounds i8, i8* %366, i64 %368
  %370 = getelementptr inbounds i8, i8* %369, i64 %102
  %371 = bitcast i8* %370 to i32*
  %372 = load i32, i32* %371, align 4
  %373 = lshr i32 %372, 24
  %374 = sub nsw i32 0, %373
  %375 = getelementptr inbounds i8, i8* %369, i64 %109
  %376 = bitcast i8* %375 to i32*
  %377 = load i32, i32* %376, align 4
  %378 = lshr i32 %377, 24
  %379 = mul i64 %367, %362
  %380 = getelementptr inbounds i8, i8* %366, i64 %379
  %381 = getelementptr inbounds i8, i8* %380, i64 %102
  %382 = bitcast i8* %381 to i32*
  %383 = load i32, i32* %382, align 4
  %384 = lshr i32 %383, 24
  %385 = getelementptr inbounds i8, i8* %380, i64 %109
  %386 = bitcast i8* %385 to i32*
  %387 = load i32, i32* %386, align 4
  %388 = lshr i32 %387, 24
  %389 = add nsw i64 %362, 1
  %390 = mul i64 %367, %389
  %391 = getelementptr inbounds i8, i8* %366, i64 %390
  %392 = getelementptr inbounds i8, i8* %391, i64 %102
  %393 = bitcast i8* %392 to i32*
  %394 = load i32, i32* %393, align 4
  %395 = lshr i32 %394, 24
  %396 = sub nsw i32 0, %395
  %397 = getelementptr inbounds i8, i8* %391, i64 %109
  %398 = bitcast i8* %397 to i32*
  %399 = load i32, i32* %398, align 4
  %400 = lshr i32 %399, 24
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %337) #11
  store float 0xFFFFFFFFE0000000, float* %338, align 8
  store float 0xFFFFFFFFE0000000, float* %339, align 4
  store float 0xFFFFFFFFE0000000, float* %340, align 8
  %401 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)**, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*** %129, align 8
  %402 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %401, i64 7
  %403 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %402, align 8
  %404 = trunc i64 %362 to i32
  %405 = call { <2 x float>, float } %403(%class.SkImageFilterLight* %1, i32 %57, i32 %404, i32 %384, float %4) #11
  %406 = extractvalue { <2 x float>, float } %405, 0
  %407 = extractvalue { <2 x float>, float } %405, 1
  store <2 x float> %406, <2 x float>* %341, align 8
  store float %407, float* %340, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %342) #11
  %408 = sub nsw i32 %378, %373
  %409 = shl nuw nsw i32 %384, 1
  %410 = sub nsw i32 %408, %409
  %411 = shl nuw nsw i32 %388, 1
  %412 = add nsw i32 %410, %411
  %413 = sub nsw i32 %412, %395
  %414 = add nsw i32 %413, %400
  %415 = sitofp i32 %414 to float
  %416 = fmul float %415, 5.000000e-01
  %417 = sub nsw i32 %395, %373
  %418 = shl nsw i32 %417, 1
  %419 = sub nsw i32 %400, %378
  %420 = add nsw i32 %419, %418
  %421 = sitofp i32 %420 to float
  %422 = fmul float %421, 0x3FD5555560000000
  %423 = fmul float %416, %4
  %424 = fmul float %422, %4
  %425 = fmul float %423, %423
  %426 = fmul float %424, %424
  %427 = fadd float %425, %426
  %428 = fadd float %427, 1.000000e+00
  %429 = fadd float %428, 0x3F30000000000000
  %430 = call float @sqrtf(float %429) #11
  %431 = fdiv float 1.000000e+00, %430
  %432 = fmul float %423, %431
  %433 = fsub float -0.000000e+00, %432
  %434 = insertelement <2 x float> undef, float %433, i32 0
  %435 = fmul float %424, %431
  %436 = fsub float -0.000000e+00, %435
  %437 = insertelement <2 x float> %434, float %436, i32 1
  store <2 x float> %437, <2 x float>* %343, align 8
  store float %431, float* %344, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %345) #11
  %438 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)**, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*** %169, align 8
  %439 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %438, i64 8
  %440 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %439, align 8
  %441 = call { <2 x float>, float } %440(%class.SkImageFilterLight* %1, %struct.SkPoint3* nonnull dereferenceable(12) %14) #11
  %442 = extractvalue { <2 x float>, float } %441, 0
  %443 = extractvalue { <2 x float>, float } %441, 1
  store <2 x float> %442, <2 x float>* %346, align 8
  store float %443, float* %347, align 8
  %444 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)**, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*** %178, align 8
  %445 = getelementptr inbounds i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %444, i64 2
  %446 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %445, align 8
  %447 = call i32 %446(%class.BaseLightingType* %0, %struct.SkPoint3* nonnull dereferenceable(12) %15, %struct.SkPoint3* nonnull dereferenceable(12) %14, %struct.SkPoint3* nonnull dereferenceable(12) %16) #11
  %448 = getelementptr inbounds i32, i32* %364, i64 2
  store i32 %447, i32* %363, align 4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %345) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %342) #11
  br i1 %186, label %449, label %540

449:                                              ; preds = %361, %449
  %450 = phi i64 [ %459, %449 ], [ %360, %361 ]
  %451 = phi i32 [ %535, %449 ], [ %396, %361 ]
  %452 = phi i32 [ %534, %449 ], [ %374, %361 ]
  %453 = phi i32* [ %533, %449 ], [ %448, %361 ]
  %454 = phi i32 [ %482, %449 ], [ %400, %361 ]
  %455 = phi i32 [ %454, %449 ], [ %395, %361 ]
  %456 = phi i32 [ %476, %449 ], [ %388, %361 ]
  %457 = phi i32 [ %456, %449 ], [ %384, %361 ]
  %458 = phi i32 [ %470, %449 ], [ %378, %361 ]
  %459 = add nsw i64 %450, 1
  %460 = load i8*, i8** %95, align 8
  %461 = load i64, i64* %97, align 8
  %462 = mul i64 %461, %365
  %463 = getelementptr inbounds i8, i8* %460, i64 %462
  %464 = trunc i64 %459 to i32
  %465 = shl i32 %464, 2
  %466 = sext i32 %465 to i64
  %467 = getelementptr inbounds i8, i8* %463, i64 %466
  %468 = bitcast i8* %467 to i32*
  %469 = load i32, i32* %468, align 4
  %470 = lshr i32 %469, 24
  %471 = mul i64 %461, %362
  %472 = getelementptr inbounds i8, i8* %460, i64 %471
  %473 = getelementptr inbounds i8, i8* %472, i64 %466
  %474 = bitcast i8* %473 to i32*
  %475 = load i32, i32* %474, align 4
  %476 = lshr i32 %475, 24
  %477 = mul i64 %461, %389
  %478 = getelementptr inbounds i8, i8* %460, i64 %477
  %479 = getelementptr inbounds i8, i8* %478, i64 %466
  %480 = bitcast i8* %479 to i32*
  %481 = load i32, i32* %480, align 4
  %482 = lshr i32 %481, 24
  %483 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)**, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*** %129, align 8
  %484 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %483, i64 7
  %485 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %484, align 8
  %486 = trunc i64 %450 to i32
  %487 = call { <2 x float>, float } %485(%class.SkImageFilterLight* %1, i32 %486, i32 %404, i32 %456, float %4) #11
  %488 = extractvalue { <2 x float>, float } %487, 0
  %489 = extractvalue { <2 x float>, float } %487, 1
  store <2 x float> %488, <2 x float>* %341, align 8
  store float %489, float* %340, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %348) #11
  %490 = shl nsw i32 %457, 1
  %491 = shl nuw nsw i32 %476, 1
  %492 = add nsw i32 %452, %451
  %493 = sub nsw i32 %492, %490
  %494 = add nsw i32 %493, %470
  %495 = add nsw i32 %494, %491
  %496 = add nsw i32 %495, %482
  %497 = sitofp i32 %496 to float
  %498 = fmul float %497, 2.500000e-01
  %499 = shl nuw nsw i32 %458, 1
  %500 = shl nuw nsw i32 %454, 1
  %501 = add nsw i32 %455, %452
  %502 = add nsw i32 %501, %500
  %503 = sub nsw i32 %502, %499
  %504 = sub nsw i32 %503, %470
  %505 = add nsw i32 %504, %482
  %506 = sitofp i32 %505 to float
  %507 = fmul float %506, 2.500000e-01
  %508 = fmul float %498, %4
  %509 = fmul float %507, %4
  %510 = fmul float %508, %508
  %511 = fmul float %509, %509
  %512 = fadd float %511, %510
  %513 = fadd float %512, 1.000000e+00
  %514 = fadd float %513, 0x3F30000000000000
  %515 = call float @sqrtf(float %514) #11
  %516 = fdiv float 1.000000e+00, %515
  %517 = fmul float %508, %516
  %518 = fsub float -0.000000e+00, %517
  %519 = insertelement <2 x float> undef, float %518, i32 0
  %520 = fmul float %509, %516
  %521 = fsub float -0.000000e+00, %520
  %522 = insertelement <2 x float> %519, float %521, i32 1
  store <2 x float> %522, <2 x float>* %349, align 8
  store float %516, float* %350, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %351) #11
  %523 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)**, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*** %169, align 8
  %524 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %523, i64 8
  %525 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %524, align 8
  %526 = call { <2 x float>, float } %525(%class.SkImageFilterLight* %1, %struct.SkPoint3* nonnull dereferenceable(12) %14) #11
  %527 = extractvalue { <2 x float>, float } %526, 0
  %528 = extractvalue { <2 x float>, float } %526, 1
  store <2 x float> %527, <2 x float>* %352, align 8
  store float %528, float* %353, align 8
  %529 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)**, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*** %178, align 8
  %530 = getelementptr inbounds i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %529, i64 2
  %531 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %530, align 8
  %532 = call i32 %531(%class.BaseLightingType* %0, %struct.SkPoint3* nonnull dereferenceable(12) %17, %struct.SkPoint3* nonnull dereferenceable(12) %14, %struct.SkPoint3* nonnull dereferenceable(12) %18) #11
  %533 = getelementptr inbounds i32, i32* %453, i64 1
  store i32 %532, i32* %453, align 4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %351) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %348) #11
  %534 = sub nsw i32 0, %458
  %535 = sub nsw i32 0, %454
  %536 = icmp eq i32 %185, %464
  br i1 %536, label %537, label %449

537:                                              ; preds = %449
  %538 = shl nuw nsw i32 %456, 1
  %539 = sub nsw i32 %482, %470
  br label %540

540:                                              ; preds = %537, %361
  %541 = phi i32 [ %539, %537 ], [ %419, %361 ]
  %542 = phi i32 [ %491, %537 ], [ %411, %361 ]
  %543 = phi i32 [ %538, %537 ], [ %409, %361 ]
  %544 = phi i32 [ %470, %537 ], [ %378, %361 ]
  %545 = phi i32 [ %476, %537 ], [ %388, %361 ]
  %546 = phi i32 [ %454, %537 ], [ %395, %361 ]
  %547 = phi i32 [ %482, %537 ], [ %400, %361 ]
  %548 = phi i32 [ %185, %537 ], [ %107, %361 ]
  %549 = phi i32* [ %533, %537 ], [ %448, %361 ]
  %550 = phi i32 [ %534, %537 ], [ %374, %361 ]
  %551 = phi i32 [ %535, %537 ], [ %396, %361 ]
  %552 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)**, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*** %129, align 8
  %553 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %552, i64 7
  %554 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %553, align 8
  %555 = call { <2 x float>, float } %554(%class.SkImageFilterLight* %1, i32 %548, i32 %404, i32 %545, float %4) #11
  %556 = extractvalue { <2 x float>, float } %555, 0
  %557 = extractvalue { <2 x float>, float } %555, 1
  store <2 x float> %556, <2 x float>* %341, align 8
  store float %557, float* %340, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %354) #11
  %558 = sub nsw i32 %542, %543
  %559 = add nsw i32 %558, %544
  %560 = add nsw i32 %559, %547
  %561 = add nsw i32 %560, %550
  %562 = add nsw i32 %561, %551
  %563 = sitofp i32 %562 to float
  %564 = fmul float %563, 5.000000e-01
  %565 = shl nsw i32 %541, 1
  %566 = add nsw i32 %546, %565
  %567 = add nsw i32 %566, %550
  %568 = sitofp i32 %567 to float
  %569 = fmul float %568, 0x3FD5555560000000
  %570 = fmul float %564, %4
  %571 = fmul float %569, %4
  %572 = fmul float %570, %570
  %573 = fmul float %571, %571
  %574 = fadd float %573, %572
  %575 = fadd float %574, 1.000000e+00
  %576 = fadd float %575, 0x3F30000000000000
  %577 = call float @sqrtf(float %576) #11
  %578 = fdiv float 1.000000e+00, %577
  %579 = fmul float %570, %578
  %580 = fsub float -0.000000e+00, %579
  %581 = insertelement <2 x float> undef, float %580, i32 0
  %582 = fmul float %571, %578
  %583 = fsub float -0.000000e+00, %582
  %584 = insertelement <2 x float> %581, float %583, i32 1
  store <2 x float> %584, <2 x float>* %355, align 8
  store float %578, float* %356, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %357) #11
  %585 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)**, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*** %169, align 8
  %586 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %585, i64 8
  %587 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %586, align 8
  %588 = call { <2 x float>, float } %587(%class.SkImageFilterLight* %1, %struct.SkPoint3* nonnull dereferenceable(12) %14) #11
  %589 = extractvalue { <2 x float>, float } %588, 0
  %590 = extractvalue { <2 x float>, float } %588, 1
  store <2 x float> %589, <2 x float>* %358, align 8
  store float %590, float* %359, align 8
  %591 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)**, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*** %178, align 8
  %592 = getelementptr inbounds i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %591, i64 2
  %593 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %592, align 8
  %594 = call i32 %593(%class.BaseLightingType* %0, %struct.SkPoint3* nonnull dereferenceable(12) %19, %struct.SkPoint3* nonnull dereferenceable(12) %14, %struct.SkPoint3* nonnull dereferenceable(12) %20) #11
  store i32 %594, i32* %549, align 4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %357) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %354) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %337) #11
  %595 = getelementptr inbounds i32, i32* %549, i64 1
  %596 = trunc i64 %389 to i32
  %597 = icmp eq i32 %334, %596
  br i1 %597, label %598, label %361

598:                                              ; preds = %540, %276
  %599 = phi i32 [ %114, %276 ], [ %334, %540 ]
  %600 = phi i32* [ %333, %276 ], [ %595, %540 ]
  %601 = add nsw i32 %61, -2
  %602 = load i8*, i8** %95, align 8
  %603 = sext i32 %601 to i64
  %604 = load i64, i64* %97, align 8
  %605 = mul i64 %604, %603
  %606 = getelementptr inbounds i8, i8* %602, i64 %605
  %607 = getelementptr inbounds i8, i8* %606, i64 %102
  %608 = bitcast i8* %607 to i32*
  %609 = load i32, i32* %608, align 4
  %610 = lshr i32 %609, 24
  %611 = sub nsw i32 0, %610
  %612 = getelementptr inbounds i8, i8* %606, i64 %109
  %613 = bitcast i8* %612 to i32*
  %614 = load i32, i32* %613, align 4
  %615 = lshr i32 %614, 24
  %616 = sext i32 %334 to i64
  %617 = mul i64 %604, %616
  %618 = getelementptr inbounds i8, i8* %602, i64 %617
  %619 = getelementptr inbounds i8, i8* %618, i64 %102
  %620 = bitcast i8* %619 to i32*
  %621 = load i32, i32* %620, align 4
  %622 = lshr i32 %621, 24
  %623 = getelementptr inbounds i8, i8* %618, i64 %109
  %624 = bitcast i8* %623 to i32*
  %625 = load i32, i32* %624, align 4
  %626 = lshr i32 %625, 24
  %627 = bitcast %struct.SkPoint3* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %627) #11
  %628 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %21, i64 0, i32 2
  %629 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)**, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*** %129, align 8
  %630 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %629, i64 7
  %631 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %630, align 8
  %632 = call { <2 x float>, float } %631(%class.SkImageFilterLight* %1, i32 %57, i32 %599, i32 %622, float %4) #11
  %633 = extractvalue { <2 x float>, float } %632, 0
  %634 = extractvalue { <2 x float>, float } %632, 1
  %635 = bitcast %struct.SkPoint3* %21 to <2 x float>*
  store <2 x float> %633, <2 x float>* %635, align 8
  store float %634, float* %628, align 8
  %636 = bitcast %struct.SkPoint3* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %636) #11
  %637 = sub nsw i32 %615, %610
  %638 = shl nuw nsw i32 %622, 1
  %639 = sub nsw i32 %637, %638
  %640 = shl nuw nsw i32 %626, 1
  %641 = add nsw i32 %639, %640
  %642 = sitofp i32 %641 to float
  %643 = fmul float %642, 0x3FE5555560000000
  %644 = mul nsw i32 %610, -2
  %645 = sub nsw i32 %644, %615
  %646 = add nsw i32 %645, %638
  %647 = add nsw i32 %646, %626
  %648 = sitofp i32 %647 to float
  %649 = fmul float %648, 0x3FE5555560000000
  %650 = fmul float %643, %4
  %651 = fmul float %649, %4
  %652 = fmul float %650, %650
  %653 = fmul float %651, %651
  %654 = fadd float %652, %653
  %655 = fadd float %654, 1.000000e+00
  %656 = fadd float %655, 0x3F30000000000000
  %657 = call float @sqrtf(float %656) #11
  %658 = fdiv float 1.000000e+00, %657
  %659 = fmul float %650, %658
  %660 = fsub float -0.000000e+00, %659
  %661 = insertelement <2 x float> undef, float %660, i32 0
  %662 = fmul float %651, %658
  %663 = fsub float -0.000000e+00, %662
  %664 = insertelement <2 x float> %661, float %663, i32 1
  %665 = bitcast %struct.SkPoint3* %22 to <2 x float>*
  store <2 x float> %664, <2 x float>* %665, align 8
  %666 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %22, i64 0, i32 2
  store float %658, float* %666, align 8
  %667 = bitcast %struct.SkPoint3* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %667) #11
  %668 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)**, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*** %169, align 8
  %669 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %668, i64 8
  %670 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %669, align 8
  %671 = call { <2 x float>, float } %670(%class.SkImageFilterLight* %1, %struct.SkPoint3* nonnull dereferenceable(12) %21) #11
  %672 = extractvalue { <2 x float>, float } %671, 0
  %673 = extractvalue { <2 x float>, float } %671, 1
  %674 = bitcast %struct.SkPoint3* %23 to <2 x float>*
  store <2 x float> %672, <2 x float>* %674, align 8
  %675 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %23, i64 0, i32 2
  store float %673, float* %675, align 8
  %676 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)**, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*** %178, align 8
  %677 = getelementptr inbounds i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %676, i64 2
  %678 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %677, align 8
  %679 = call i32 %678(%class.BaseLightingType* %0, %struct.SkPoint3* nonnull dereferenceable(12) %22, %struct.SkPoint3* nonnull dereferenceable(12) %21, %struct.SkPoint3* nonnull dereferenceable(12) %23) #11
  store i32 %679, i32* %600, align 4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %667) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %636) #11
  %680 = getelementptr inbounds i32, i32* %600, i64 1
  br i1 %186, label %681, label %765

681:                                              ; preds = %598
  %682 = bitcast %struct.SkPoint3* %24 to i8*
  %683 = bitcast %struct.SkPoint3* %24 to <2 x float>*
  %684 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %24, i64 0, i32 2
  %685 = bitcast %struct.SkPoint3* %25 to i8*
  %686 = bitcast %struct.SkPoint3* %25 to <2 x float>*
  %687 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %25, i64 0, i32 2
  %688 = sext i32 %107 to i64
  br label %689

689:                                              ; preds = %689, %681
  %690 = phi i64 [ %688, %681 ], [ %696, %689 ]
  %691 = phi i32* [ %680, %681 ], [ %763, %689 ]
  %692 = phi i32 [ %611, %681 ], [ %762, %689 ]
  %693 = phi i32 [ %626, %681 ], [ %713, %689 ]
  %694 = phi i32 [ %622, %681 ], [ %693, %689 ]
  %695 = phi i32 [ %615, %681 ], [ %707, %689 ]
  %696 = add nsw i64 %690, 1
  %697 = load i8*, i8** %95, align 8
  %698 = load i64, i64* %97, align 8
  %699 = mul i64 %698, %603
  %700 = getelementptr inbounds i8, i8* %697, i64 %699
  %701 = trunc i64 %696 to i32
  %702 = shl i32 %701, 2
  %703 = sext i32 %702 to i64
  %704 = getelementptr inbounds i8, i8* %700, i64 %703
  %705 = bitcast i8* %704 to i32*
  %706 = load i32, i32* %705, align 4
  %707 = lshr i32 %706, 24
  %708 = mul i64 %698, %616
  %709 = getelementptr inbounds i8, i8* %697, i64 %708
  %710 = getelementptr inbounds i8, i8* %709, i64 %703
  %711 = bitcast i8* %710 to i32*
  %712 = load i32, i32* %711, align 4
  %713 = lshr i32 %712, 24
  %714 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)**, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*** %129, align 8
  %715 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %714, i64 7
  %716 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %715, align 8
  %717 = trunc i64 %690 to i32
  %718 = call { <2 x float>, float } %716(%class.SkImageFilterLight* %1, i32 %717, i32 %599, i32 %693, float %4) #11
  %719 = extractvalue { <2 x float>, float } %718, 0
  %720 = extractvalue { <2 x float>, float } %718, 1
  store <2 x float> %719, <2 x float>* %635, align 8
  store float %720, float* %628, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %682) #11
  %721 = shl nsw i32 %694, 1
  %722 = shl nuw nsw i32 %713, 1
  %723 = sub nsw i32 %692, %721
  %724 = add nsw i32 %723, %707
  %725 = add nsw i32 %724, %722
  %726 = sitofp i32 %725 to float
  %727 = fmul float %726, 0x3FD5555560000000
  %728 = shl nuw nsw i32 %695, 1
  %729 = shl nuw nsw i32 %693, 1
  %730 = add nsw i32 %694, %692
  %731 = add nsw i32 %730, %729
  %732 = sub nsw i32 %731, %728
  %733 = sub nsw i32 %732, %707
  %734 = add nsw i32 %733, %713
  %735 = sitofp i32 %734 to float
  %736 = fmul float %735, 5.000000e-01
  %737 = fmul float %727, %4
  %738 = fmul float %736, %4
  %739 = fmul float %737, %737
  %740 = fmul float %738, %738
  %741 = fadd float %740, %739
  %742 = fadd float %741, 1.000000e+00
  %743 = fadd float %742, 0x3F30000000000000
  %744 = call float @sqrtf(float %743) #11
  %745 = fdiv float 1.000000e+00, %744
  %746 = fmul float %737, %745
  %747 = fsub float -0.000000e+00, %746
  %748 = insertelement <2 x float> undef, float %747, i32 0
  %749 = fmul float %738, %745
  %750 = fsub float -0.000000e+00, %749
  %751 = insertelement <2 x float> %748, float %750, i32 1
  store <2 x float> %751, <2 x float>* %683, align 8
  store float %745, float* %684, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %685) #11
  %752 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)**, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*** %169, align 8
  %753 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %752, i64 8
  %754 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %753, align 8
  %755 = call { <2 x float>, float } %754(%class.SkImageFilterLight* %1, %struct.SkPoint3* nonnull dereferenceable(12) %21) #11
  %756 = extractvalue { <2 x float>, float } %755, 0
  %757 = extractvalue { <2 x float>, float } %755, 1
  store <2 x float> %756, <2 x float>* %686, align 8
  store float %757, float* %687, align 8
  %758 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)**, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*** %178, align 8
  %759 = getelementptr inbounds i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %758, i64 2
  %760 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %759, align 8
  %761 = call i32 %760(%class.BaseLightingType* %0, %struct.SkPoint3* nonnull dereferenceable(12) %24, %struct.SkPoint3* nonnull dereferenceable(12) %21, %struct.SkPoint3* nonnull dereferenceable(12) %25) #11
  store i32 %761, i32* %691, align 4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %685) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %682) #11
  %762 = sub nsw i32 0, %695
  %763 = getelementptr inbounds i32, i32* %691, i64 1
  %764 = icmp eq i32 %185, %701
  br i1 %764, label %765, label %689

765:                                              ; preds = %689, %598
  %766 = phi i32 [ %640, %598 ], [ %722, %689 ]
  %767 = phi i32 [ %638, %598 ], [ %729, %689 ]
  %768 = phi i32 [ %615, %598 ], [ %707, %689 ]
  %769 = phi i32 [ %622, %598 ], [ %693, %689 ]
  %770 = phi i32 [ %626, %598 ], [ %713, %689 ]
  %771 = phi i32 [ %107, %598 ], [ %185, %689 ]
  %772 = phi i32 [ %611, %598 ], [ %762, %689 ]
  %773 = phi i32* [ %680, %598 ], [ %763, %689 ]
  %774 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)**, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*** %129, align 8
  %775 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %774, i64 7
  %776 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %775, align 8
  %777 = call { <2 x float>, float } %776(%class.SkImageFilterLight* %1, i32 %771, i32 %599, i32 %770, float %4) #11
  %778 = extractvalue { <2 x float>, float } %777, 0
  %779 = extractvalue { <2 x float>, float } %777, 1
  store <2 x float> %778, <2 x float>* %635, align 8
  store float %779, float* %628, align 8
  %780 = bitcast %struct.SkPoint3* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %780) #11
  %781 = sub nsw i32 %766, %767
  %782 = add nsw i32 %781, %768
  %783 = add nsw i32 %782, %772
  %784 = sitofp i32 %783 to float
  %785 = fmul float %784, 0x3FE5555560000000
  %786 = shl nuw nsw i32 %768, 1
  %787 = add nuw nsw i32 %769, %766
  %788 = sub nsw i32 %787, %786
  %789 = add nsw i32 %788, %772
  %790 = sitofp i32 %789 to float
  %791 = fmul float %790, 0x3FE5555560000000
  %792 = fmul float %785, %4
  %793 = fmul float %791, %4
  %794 = fmul float %792, %792
  %795 = fmul float %793, %793
  %796 = fadd float %794, %795
  %797 = fadd float %796, 1.000000e+00
  %798 = fadd float %797, 0x3F30000000000000
  %799 = call float @sqrtf(float %798) #11
  %800 = fdiv float 1.000000e+00, %799
  %801 = fmul float %792, %800
  %802 = fsub float -0.000000e+00, %801
  %803 = insertelement <2 x float> undef, float %802, i32 0
  %804 = fmul float %793, %800
  %805 = fsub float -0.000000e+00, %804
  %806 = insertelement <2 x float> %803, float %805, i32 1
  %807 = bitcast %struct.SkPoint3* %26 to <2 x float>*
  store <2 x float> %806, <2 x float>* %807, align 8
  %808 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %26, i64 0, i32 2
  store float %800, float* %808, align 8
  %809 = bitcast %struct.SkPoint3* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %809) #11
  %810 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)**, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*** %169, align 8
  %811 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %810, i64 8
  %812 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %811, align 8
  %813 = call { <2 x float>, float } %812(%class.SkImageFilterLight* %1, %struct.SkPoint3* nonnull dereferenceable(12) %21) #11
  %814 = extractvalue { <2 x float>, float } %813, 0
  %815 = extractvalue { <2 x float>, float } %813, 1
  %816 = bitcast %struct.SkPoint3* %27 to <2 x float>*
  store <2 x float> %814, <2 x float>* %816, align 8
  %817 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %27, i64 0, i32 2
  store float %815, float* %817, align 8
  %818 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)**, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*** %178, align 8
  %819 = getelementptr inbounds i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %818, i64 2
  %820 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %819, align 8
  %821 = call i32 %820(%class.BaseLightingType* %0, %struct.SkPoint3* nonnull dereferenceable(12) %26, %struct.SkPoint3* nonnull dereferenceable(12) %21, %struct.SkPoint3* nonnull dereferenceable(12) %27) #11
  store i32 %821, i32* %773, align 4
  br label %1829

822:                                              ; preds = %6, %70, %74, %78
  %823 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %3, i64 0, i32 1, i32 0
  %824 = bitcast i8** %823 to i32**
  %825 = load i32*, i32** %824, align 8
  %826 = icmp slt i32 %57, 0
  %827 = icmp sgt i32 %50, %57
  %828 = or i32 %64, %57
  %829 = icmp sgt i32 %828, -1
  %830 = and i1 %827, %829
  %831 = icmp sgt i32 %52, %64
  %832 = and i1 %831, %830
  br i1 %832, label %833, label %846

833:                                              ; preds = %822
  %834 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 0
  %835 = load i8*, i8** %834, align 8
  %836 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 1
  %837 = load i64, i64* %836, align 8
  %838 = mul i64 %837, %65
  %839 = getelementptr inbounds i8, i8* %835, i64 %838
  %840 = shl i32 %57, 2
  %841 = sext i32 %840 to i64
  %842 = getelementptr inbounds i8, i8* %839, i64 %841
  %843 = bitcast i8* %842 to i32*
  %844 = load i32, i32* %843, align 4
  %845 = lshr i32 %844, 24
  br label %846

846:                                              ; preds = %833, %822
  %847 = phi i32 [ %845, %833 ], [ 0, %822 ]
  %848 = add i32 %57, 1
  %849 = icmp slt i32 %848, 0
  %850 = icmp sgt i32 %50, %848
  %851 = or i32 %64, %848
  %852 = icmp sgt i32 %851, -1
  %853 = and i1 %850, %852
  %854 = and i1 %831, %853
  br i1 %854, label %855, label %868

855:                                              ; preds = %846
  %856 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 0
  %857 = load i8*, i8** %856, align 8
  %858 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 1
  %859 = load i64, i64* %858, align 8
  %860 = mul i64 %859, %65
  %861 = getelementptr inbounds i8, i8* %857, i64 %860
  %862 = shl i32 %848, 2
  %863 = sext i32 %862 to i64
  %864 = getelementptr inbounds i8, i8* %861, i64 %863
  %865 = bitcast i8* %864 to i32*
  %866 = load i32, i32* %865, align 4
  %867 = lshr i32 %866, 24
  br label %868

868:                                              ; preds = %855, %846
  %869 = phi i32 [ %867, %855 ], [ 0, %846 ]
  %870 = add i32 %64, 1
  %871 = or i32 %870, %57
  %872 = icmp sgt i32 %871, -1
  %873 = and i1 %827, %872
  %874 = icmp sgt i32 %52, %870
  %875 = and i1 %874, %873
  br i1 %875, label %876, label %890

876:                                              ; preds = %868
  %877 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 0
  %878 = load i8*, i8** %877, align 8
  %879 = sext i32 %870 to i64
  %880 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 1
  %881 = load i64, i64* %880, align 8
  %882 = mul i64 %881, %879
  %883 = getelementptr inbounds i8, i8* %878, i64 %882
  %884 = shl i32 %57, 2
  %885 = sext i32 %884 to i64
  %886 = getelementptr inbounds i8, i8* %883, i64 %885
  %887 = bitcast i8* %886 to i32*
  %888 = load i32, i32* %887, align 4
  %889 = lshr i32 %888, 24
  br label %890

890:                                              ; preds = %876, %868
  %891 = phi i32 [ %889, %876 ], [ 0, %868 ]
  %892 = sub nsw i32 0, %891
  %893 = or i32 %870, %848
  %894 = icmp sgt i32 %893, -1
  %895 = and i1 %850, %894
  %896 = and i1 %874, %895
  br i1 %896, label %897, label %911

897:                                              ; preds = %890
  %898 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 0
  %899 = load i8*, i8** %898, align 8
  %900 = sext i32 %870 to i64
  %901 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 1
  %902 = load i64, i64* %901, align 8
  %903 = mul i64 %902, %900
  %904 = getelementptr inbounds i8, i8* %899, i64 %903
  %905 = shl i32 %848, 2
  %906 = sext i32 %905 to i64
  %907 = getelementptr inbounds i8, i8* %904, i64 %906
  %908 = bitcast i8* %907 to i32*
  %909 = load i32, i32* %908, align 4
  %910 = lshr i32 %909, 24
  br label %911

911:                                              ; preds = %897, %890
  %912 = phi i32 [ %910, %897 ], [ 0, %890 ]
  %913 = bitcast %struct.SkPoint3* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %913) #11
  %914 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %28, i64 0, i32 2
  %915 = bitcast %class.SkImageFilterLight* %1 to { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)***
  %916 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)**, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*** %915, align 8
  %917 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %916, i64 7
  %918 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %917, align 8
  %919 = tail call { <2 x float>, float } %918(%class.SkImageFilterLight* %1, i32 %57, i32 %64, i32 %847, float %4) #11
  %920 = extractvalue { <2 x float>, float } %919, 0
  %921 = extractvalue { <2 x float>, float } %919, 1
  %922 = bitcast %struct.SkPoint3* %28 to <2 x float>*
  store <2 x float> %920, <2 x float>* %922, align 8
  store float %921, float* %914, align 8
  %923 = bitcast %struct.SkPoint3* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %923) #11
  %924 = shl nuw nsw i32 %847, 1
  %925 = shl nuw nsw i32 %869, 1
  %926 = sub nsw i32 %925, %924
  %927 = sub nsw i32 %926, %891
  %928 = add nsw i32 %927, %912
  %929 = sitofp i32 %928 to float
  %930 = fmul float %929, 0x3FE5555560000000
  %931 = shl nuw nsw i32 %891, 1
  %932 = add nuw nsw i32 %869, %924
  %933 = sub nsw i32 %931, %932
  %934 = add nsw i32 %933, %912
  %935 = sitofp i32 %934 to float
  %936 = fmul float %935, 0x3FE5555560000000
  %937 = fmul float %930, %4
  %938 = fmul float %936, %4
  %939 = fmul float %937, %937
  %940 = fmul float %938, %938
  %941 = fadd float %939, %940
  %942 = fadd float %941, 1.000000e+00
  %943 = fadd float %942, 0x3F30000000000000
  %944 = tail call float @sqrtf(float %943) #11
  %945 = fdiv float 1.000000e+00, %944
  %946 = fmul float %937, %945
  %947 = fsub float -0.000000e+00, %946
  %948 = insertelement <2 x float> undef, float %947, i32 0
  %949 = fmul float %938, %945
  %950 = fsub float -0.000000e+00, %949
  %951 = insertelement <2 x float> %948, float %950, i32 1
  %952 = bitcast %struct.SkPoint3* %29 to <2 x float>*
  store <2 x float> %951, <2 x float>* %952, align 8
  %953 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %29, i64 0, i32 2
  store float %945, float* %953, align 8
  %954 = bitcast %struct.SkPoint3* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %954) #11
  %955 = bitcast %class.SkImageFilterLight* %1 to { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)***
  %956 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)**, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*** %955, align 8
  %957 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %956, i64 8
  %958 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %957, align 8
  %959 = call { <2 x float>, float } %958(%class.SkImageFilterLight* %1, %struct.SkPoint3* nonnull dereferenceable(12) %28) #11
  %960 = extractvalue { <2 x float>, float } %959, 0
  %961 = extractvalue { <2 x float>, float } %959, 1
  %962 = bitcast %struct.SkPoint3* %30 to <2 x float>*
  store <2 x float> %960, <2 x float>* %962, align 8
  %963 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %30, i64 0, i32 2
  store float %961, float* %963, align 8
  %964 = bitcast %class.BaseLightingType* %0 to i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)***
  %965 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)**, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*** %964, align 8
  %966 = getelementptr inbounds i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %965, i64 2
  %967 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %966, align 8
  %968 = call i32 %967(%class.BaseLightingType* %0, %struct.SkPoint3* nonnull dereferenceable(12) %29, %struct.SkPoint3* nonnull dereferenceable(12) %28, %struct.SkPoint3* nonnull dereferenceable(12) %30) #11
  store i32 %968, i32* %825, align 4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %954) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %923) #11
  %969 = sub nsw i32 0, %847
  %970 = getelementptr inbounds i32, i32* %825, i64 1
  %971 = add i32 %54, -1
  %972 = icmp slt i32 %848, %971
  br i1 %972, label %973, label %1088

973:                                              ; preds = %911
  %974 = icmp sgt i32 %64, -1
  %975 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 0
  %976 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 1
  %977 = icmp sgt i32 %64, -2
  %978 = sext i32 %870 to i64
  %979 = bitcast %struct.SkPoint3* %31 to i8*
  %980 = bitcast %struct.SkPoint3* %31 to <2 x float>*
  %981 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %31, i64 0, i32 2
  %982 = bitcast %struct.SkPoint3* %32 to i8*
  %983 = bitcast %struct.SkPoint3* %32 to <2 x float>*
  %984 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %32, i64 0, i32 2
  %985 = sext i32 %848 to i64
  %986 = sext i32 %50 to i64
  br label %987

987:                                              ; preds = %1030, %973
  %988 = phi i64 [ %985, %973 ], [ %996, %1030 ]
  %989 = phi i32* [ %970, %973 ], [ %1082, %1030 ]
  %990 = phi i32 [ %892, %973 ], [ %1081, %1030 ]
  %991 = phi i32 [ %969, %973 ], [ %1080, %1030 ]
  %992 = phi i32 [ %912, %973 ], [ %1032, %1030 ]
  %993 = phi i32 [ %891, %973 ], [ %992, %1030 ]
  %994 = phi i32 [ %869, %973 ], [ %1031, %1030 ]
  %995 = phi i32 [ %847, %973 ], [ %994, %1030 ]
  %996 = add nsw i64 %988, 1
  %997 = icmp slt i64 %996, 0
  br i1 %997, label %1030, label %998

998:                                              ; preds = %987
  %999 = icmp slt i64 %996, %986
  %1000 = and i1 %974, %999
  %1001 = and i1 %831, %1000
  br i1 %1001, label %1002, label %1014

1002:                                             ; preds = %998
  %1003 = load i8*, i8** %975, align 8
  %1004 = load i64, i64* %976, align 8
  %1005 = mul i64 %1004, %65
  %1006 = getelementptr inbounds i8, i8* %1003, i64 %1005
  %1007 = trunc i64 %996 to i32
  %1008 = shl i32 %1007, 2
  %1009 = sext i32 %1008 to i64
  %1010 = getelementptr inbounds i8, i8* %1006, i64 %1009
  %1011 = bitcast i8* %1010 to i32*
  %1012 = load i32, i32* %1011, align 4
  %1013 = lshr i32 %1012, 24
  br label %1014

1014:                                             ; preds = %1002, %998
  %1015 = phi i32 [ 0, %998 ], [ %1013, %1002 ]
  %1016 = and i1 %977, %999
  %1017 = and i1 %874, %1016
  br i1 %1017, label %1018, label %1030

1018:                                             ; preds = %1014
  %1019 = load i8*, i8** %975, align 8
  %1020 = load i64, i64* %976, align 8
  %1021 = mul i64 %1020, %978
  %1022 = getelementptr inbounds i8, i8* %1019, i64 %1021
  %1023 = trunc i64 %996 to i32
  %1024 = shl i32 %1023, 2
  %1025 = sext i32 %1024 to i64
  %1026 = getelementptr inbounds i8, i8* %1022, i64 %1025
  %1027 = bitcast i8* %1026 to i32*
  %1028 = load i32, i32* %1027, align 4
  %1029 = lshr i32 %1028, 24
  br label %1030

1030:                                             ; preds = %1018, %1014, %987
  %1031 = phi i32 [ %1015, %1018 ], [ %1015, %1014 ], [ 0, %987 ]
  %1032 = phi i32 [ %1029, %1018 ], [ 0, %1014 ], [ 0, %987 ]
  %1033 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)**, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*** %915, align 8
  %1034 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %1033, i64 7
  %1035 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %1034, align 8
  %1036 = trunc i64 %988 to i32
  %1037 = call { <2 x float>, float } %1035(%class.SkImageFilterLight* %1, i32 %1036, i32 %64, i32 %994, float %4) #11
  %1038 = extractvalue { <2 x float>, float } %1037, 0
  %1039 = extractvalue { <2 x float>, float } %1037, 1
  store <2 x float> %1038, <2 x float>* %922, align 8
  store float %1039, float* %914, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %979) #11
  %1040 = sub nsw i32 %1031, %995
  %1041 = shl nsw i32 %1040, 1
  %1042 = add nsw i32 %1032, %990
  %1043 = add i32 %1042, %1041
  %1044 = sitofp i32 %1043 to float
  %1045 = fmul float %1044, 0x3FD5555560000000
  %1046 = shl nsw i32 %994, 1
  %1047 = shl nsw i32 %992, 1
  %1048 = add nsw i32 %993, %991
  %1049 = add nsw i32 %1048, %1047
  %1050 = sub nsw i32 %1049, %1046
  %1051 = sub nsw i32 %1050, %1031
  %1052 = add nsw i32 %1051, %1032
  %1053 = sitofp i32 %1052 to float
  %1054 = fmul float %1053, 5.000000e-01
  %1055 = fmul float %1045, %4
  %1056 = fmul float %1054, %4
  %1057 = fmul float %1055, %1055
  %1058 = fmul float %1056, %1056
  %1059 = fadd float %1058, %1057
  %1060 = fadd float %1059, 1.000000e+00
  %1061 = fadd float %1060, 0x3F30000000000000
  %1062 = call float @sqrtf(float %1061) #11
  %1063 = fdiv float 1.000000e+00, %1062
  %1064 = fmul float %1055, %1063
  %1065 = fsub float -0.000000e+00, %1064
  %1066 = insertelement <2 x float> undef, float %1065, i32 0
  %1067 = fmul float %1056, %1063
  %1068 = fsub float -0.000000e+00, %1067
  %1069 = insertelement <2 x float> %1066, float %1068, i32 1
  store <2 x float> %1069, <2 x float>* %980, align 8
  store float %1063, float* %981, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %982) #11
  %1070 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)**, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*** %955, align 8
  %1071 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %1070, i64 8
  %1072 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %1071, align 8
  %1073 = call { <2 x float>, float } %1072(%class.SkImageFilterLight* %1, %struct.SkPoint3* nonnull dereferenceable(12) %28) #11
  %1074 = extractvalue { <2 x float>, float } %1073, 0
  %1075 = extractvalue { <2 x float>, float } %1073, 1
  store <2 x float> %1074, <2 x float>* %983, align 8
  store float %1075, float* %984, align 8
  %1076 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)**, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*** %964, align 8
  %1077 = getelementptr inbounds i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %1076, i64 2
  %1078 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %1077, align 8
  %1079 = call i32 %1078(%class.BaseLightingType* %0, %struct.SkPoint3* nonnull dereferenceable(12) %31, %struct.SkPoint3* nonnull dereferenceable(12) %28, %struct.SkPoint3* nonnull dereferenceable(12) %32) #11
  store i32 %1079, i32* %989, align 4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %982) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %979) #11
  %1080 = sub nsw i32 0, %994
  %1081 = sub nsw i32 0, %992
  %1082 = getelementptr inbounds i32, i32* %989, i64 1
  %1083 = trunc i64 %996 to i32
  %1084 = icmp eq i32 %971, %1083
  br i1 %1084, label %1085, label %987

1085:                                             ; preds = %1030
  %1086 = shl nsw i32 %1031, 1
  %1087 = sub nsw i32 %1086, %1046
  br label %1088

1088:                                             ; preds = %1085, %911
  %1089 = phi i32 [ %1087, %1085 ], [ %926, %911 ]
  %1090 = phi i32 [ %1086, %1085 ], [ %925, %911 ]
  %1091 = phi i32 [ %1031, %1085 ], [ %869, %911 ]
  %1092 = phi i32 [ %992, %1085 ], [ %891, %911 ]
  %1093 = phi i32 [ %1032, %1085 ], [ %912, %911 ]
  %1094 = phi i32 [ %971, %1085 ], [ %848, %911 ]
  %1095 = phi i32 [ %1080, %1085 ], [ %969, %911 ]
  %1096 = phi i32 [ %1081, %1085 ], [ %892, %911 ]
  %1097 = phi i32* [ %1082, %1085 ], [ %970, %911 ]
  %1098 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)**, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*** %915, align 8
  %1099 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %1098, i64 7
  %1100 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %1099, align 8
  %1101 = call { <2 x float>, float } %1100(%class.SkImageFilterLight* %1, i32 %1094, i32 %64, i32 %1091, float %4) #11
  %1102 = extractvalue { <2 x float>, float } %1101, 0
  %1103 = extractvalue { <2 x float>, float } %1101, 1
  store <2 x float> %1102, <2 x float>* %922, align 8
  store float %1103, float* %914, align 8
  %1104 = bitcast %struct.SkPoint3* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %1104) #11
  %1105 = add nsw i32 %1093, %1089
  %1106 = add nsw i32 %1105, %1096
  %1107 = sitofp i32 %1106 to float
  %1108 = fmul float %1107, 0x3FE5555560000000
  %1109 = shl nsw i32 %1093, 1
  %1110 = sub nsw i32 %1092, %1090
  %1111 = add nsw i32 %1110, %1109
  %1112 = add nsw i32 %1111, %1095
  %1113 = sitofp i32 %1112 to float
  %1114 = fmul float %1113, 0x3FE5555560000000
  %1115 = fmul float %1108, %4
  %1116 = fmul float %1114, %4
  %1117 = fmul float %1115, %1115
  %1118 = fmul float %1116, %1116
  %1119 = fadd float %1117, %1118
  %1120 = fadd float %1119, 1.000000e+00
  %1121 = fadd float %1120, 0x3F30000000000000
  %1122 = call float @sqrtf(float %1121) #11
  %1123 = fdiv float 1.000000e+00, %1122
  %1124 = fmul float %1115, %1123
  %1125 = fsub float -0.000000e+00, %1124
  %1126 = insertelement <2 x float> undef, float %1125, i32 0
  %1127 = fmul float %1116, %1123
  %1128 = fsub float -0.000000e+00, %1127
  %1129 = insertelement <2 x float> %1126, float %1128, i32 1
  %1130 = bitcast %struct.SkPoint3* %33 to <2 x float>*
  store <2 x float> %1129, <2 x float>* %1130, align 8
  %1131 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %33, i64 0, i32 2
  store float %1123, float* %1131, align 8
  %1132 = bitcast %struct.SkPoint3* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %1132) #11
  %1133 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)**, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*** %955, align 8
  %1134 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %1133, i64 8
  %1135 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %1134, align 8
  %1136 = call { <2 x float>, float } %1135(%class.SkImageFilterLight* %1, %struct.SkPoint3* nonnull dereferenceable(12) %28) #11
  %1137 = extractvalue { <2 x float>, float } %1136, 0
  %1138 = extractvalue { <2 x float>, float } %1136, 1
  %1139 = bitcast %struct.SkPoint3* %34 to <2 x float>*
  store <2 x float> %1137, <2 x float>* %1139, align 8
  %1140 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %34, i64 0, i32 2
  store float %1138, float* %1140, align 8
  %1141 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)**, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*** %964, align 8
  %1142 = getelementptr inbounds i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %1141, i64 2
  %1143 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %1142, align 8
  %1144 = call i32 %1143(%class.BaseLightingType* %0, %struct.SkPoint3* nonnull dereferenceable(12) %33, %struct.SkPoint3* nonnull dereferenceable(12) %28, %struct.SkPoint3* nonnull dereferenceable(12) %34) #11
  store i32 %1144, i32* %1097, align 4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %1132) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %1104) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %913) #11
  %1145 = getelementptr inbounds i32, i32* %1097, i64 1
  %1146 = add i32 %61, -1
  %1147 = icmp slt i32 %870, %1146
  br i1 %1147, label %1148, label %1517

1148:                                             ; preds = %1088
  %1149 = icmp sle i32 %50, %57
  %1150 = or i1 %826, %1149
  %1151 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 0
  %1152 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 1
  %1153 = shl i32 %57, 2
  %1154 = sext i32 %1153 to i64
  %1155 = icmp sle i32 %50, %848
  %1156 = or i1 %849, %1155
  %1157 = shl i32 %848, 2
  %1158 = sext i32 %1157 to i64
  %1159 = bitcast %struct.SkPoint3* %35 to i8*
  %1160 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %35, i64 0, i32 0
  %1161 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %35, i64 0, i32 1
  %1162 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %35, i64 0, i32 2
  %1163 = bitcast %struct.SkPoint3* %35 to <2 x float>*
  %1164 = bitcast %struct.SkPoint3* %36 to i8*
  %1165 = bitcast %struct.SkPoint3* %36 to <2 x float>*
  %1166 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %36, i64 0, i32 2
  %1167 = bitcast %struct.SkPoint3* %37 to i8*
  %1168 = bitcast %struct.SkPoint3* %37 to <2 x float>*
  %1169 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %37, i64 0, i32 2
  %1170 = bitcast %struct.SkPoint3* %38 to i8*
  %1171 = bitcast %struct.SkPoint3* %38 to <2 x float>*
  %1172 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %38, i64 0, i32 2
  %1173 = bitcast %struct.SkPoint3* %39 to i8*
  %1174 = bitcast %struct.SkPoint3* %39 to <2 x float>*
  %1175 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %39, i64 0, i32 2
  %1176 = bitcast %struct.SkPoint3* %40 to i8*
  %1177 = bitcast %struct.SkPoint3* %40 to <2 x float>*
  %1178 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %40, i64 0, i32 2
  %1179 = bitcast %struct.SkPoint3* %41 to i8*
  %1180 = bitcast %struct.SkPoint3* %41 to <2 x float>*
  %1181 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %41, i64 0, i32 2
  %1182 = sext i32 %848 to i64
  %1183 = sext i32 %50 to i64
  %1184 = sext i32 %870 to i64
  %1185 = sext i32 %52 to i64
  br label %1186

1186:                                             ; preds = %1460, %1148
  %1187 = phi i64 [ %1184, %1148 ], [ %1254, %1460 ]
  %1188 = phi i32* [ %1145, %1148 ], [ %1515, %1460 ]
  %1189 = phi i32* [ %1097, %1148 ], [ %1468, %1460 ]
  %1190 = add nsw i64 %1187, -1
  %1191 = icmp slt i64 %1187, 1
  %1192 = or i1 %1150, %1191
  %1193 = xor i1 %1192, true
  %1194 = icmp sle i64 %1187, %1185
  %1195 = and i1 %1194, %1193
  br i1 %1195, label %1196, label %1205

1196:                                             ; preds = %1186
  %1197 = load i8*, i8** %1151, align 8
  %1198 = load i64, i64* %1152, align 8
  %1199 = mul i64 %1198, %1190
  %1200 = getelementptr inbounds i8, i8* %1197, i64 %1154
  %1201 = getelementptr inbounds i8, i8* %1200, i64 %1199
  %1202 = bitcast i8* %1201 to i32*
  %1203 = load i32, i32* %1202, align 4
  %1204 = lshr i32 %1203, 24
  br label %1205

1205:                                             ; preds = %1196, %1186
  %1206 = phi i32 [ %1204, %1196 ], [ 0, %1186 ]
  %1207 = sub nsw i32 0, %1206
  %1208 = or i1 %1156, %1191
  %1209 = xor i1 %1208, true
  %1210 = and i1 %1194, %1209
  br i1 %1210, label %1211, label %1220

1211:                                             ; preds = %1205
  %1212 = load i8*, i8** %1151, align 8
  %1213 = load i64, i64* %1152, align 8
  %1214 = mul i64 %1213, %1190
  %1215 = getelementptr inbounds i8, i8* %1212, i64 %1158
  %1216 = getelementptr inbounds i8, i8* %1215, i64 %1214
  %1217 = bitcast i8* %1216 to i32*
  %1218 = load i32, i32* %1217, align 4
  %1219 = lshr i32 %1218, 24
  br label %1220

1220:                                             ; preds = %1211, %1205
  %1221 = phi i32 [ %1219, %1211 ], [ 0, %1205 ]
  %1222 = trunc i64 %1187 to i32
  %1223 = or i32 %57, %1222
  %1224 = icmp sgt i32 %1223, -1
  %1225 = and i1 %827, %1224
  %1226 = icmp slt i64 %1187, %1185
  %1227 = and i1 %1226, %1225
  br i1 %1227, label %1228, label %1237

1228:                                             ; preds = %1220
  %1229 = load i8*, i8** %1151, align 8
  %1230 = load i64, i64* %1152, align 8
  %1231 = mul i64 %1230, %1187
  %1232 = getelementptr inbounds i8, i8* %1229, i64 %1154
  %1233 = getelementptr inbounds i8, i8* %1232, i64 %1231
  %1234 = bitcast i8* %1233 to i32*
  %1235 = load i32, i32* %1234, align 4
  %1236 = lshr i32 %1235, 24
  br label %1237

1237:                                             ; preds = %1228, %1220
  %1238 = phi i32 [ %1236, %1228 ], [ 0, %1220 ]
  %1239 = or i32 %848, %1222
  %1240 = icmp sgt i32 %1239, -1
  %1241 = and i1 %850, %1240
  %1242 = and i1 %1226, %1241
  br i1 %1242, label %1243, label %1252

1243:                                             ; preds = %1237
  %1244 = load i8*, i8** %1151, align 8
  %1245 = load i64, i64* %1152, align 8
  %1246 = mul i64 %1245, %1187
  %1247 = getelementptr inbounds i8, i8* %1244, i64 %1158
  %1248 = getelementptr inbounds i8, i8* %1247, i64 %1246
  %1249 = bitcast i8* %1248 to i32*
  %1250 = load i32, i32* %1249, align 4
  %1251 = lshr i32 %1250, 24
  br label %1252

1252:                                             ; preds = %1243, %1237
  %1253 = phi i32 [ %1251, %1243 ], [ 0, %1237 ]
  %1254 = add nsw i64 %1187, 1
  %1255 = trunc i64 %1254 to i32
  %1256 = or i32 %57, %1255
  %1257 = icmp sgt i32 %1256, -1
  %1258 = and i1 %827, %1257
  %1259 = icmp slt i64 %1254, %1185
  %1260 = and i1 %1259, %1258
  br i1 %1260, label %1261, label %1270

1261:                                             ; preds = %1252
  %1262 = load i8*, i8** %1151, align 8
  %1263 = load i64, i64* %1152, align 8
  %1264 = mul i64 %1263, %1254
  %1265 = getelementptr inbounds i8, i8* %1262, i64 %1154
  %1266 = getelementptr inbounds i8, i8* %1265, i64 %1264
  %1267 = bitcast i8* %1266 to i32*
  %1268 = load i32, i32* %1267, align 4
  %1269 = lshr i32 %1268, 24
  br label %1270

1270:                                             ; preds = %1261, %1252
  %1271 = phi i32 [ %1269, %1261 ], [ 0, %1252 ]
  %1272 = sub nsw i32 0, %1271
  %1273 = or i32 %848, %1255
  %1274 = icmp sgt i32 %1273, -1
  %1275 = and i1 %850, %1274
  %1276 = and i1 %1259, %1275
  br i1 %1276, label %1277, label %1286

1277:                                             ; preds = %1270
  %1278 = load i8*, i8** %1151, align 8
  %1279 = load i64, i64* %1152, align 8
  %1280 = mul i64 %1279, %1254
  %1281 = getelementptr inbounds i8, i8* %1278, i64 %1158
  %1282 = getelementptr inbounds i8, i8* %1281, i64 %1280
  %1283 = bitcast i8* %1282 to i32*
  %1284 = load i32, i32* %1283, align 4
  %1285 = lshr i32 %1284, 24
  br label %1286

1286:                                             ; preds = %1277, %1270
  %1287 = phi i32 [ %1285, %1277 ], [ 0, %1270 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %1159) #11
  store float 0xFFFFFFFFE0000000, float* %1160, align 8
  store float 0xFFFFFFFFE0000000, float* %1161, align 4
  store float 0xFFFFFFFFE0000000, float* %1162, align 8
  %1288 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)**, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*** %915, align 8
  %1289 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %1288, i64 7
  %1290 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %1289, align 8
  %1291 = call { <2 x float>, float } %1290(%class.SkImageFilterLight* %1, i32 %57, i32 %1222, i32 %1238, float %4) #11
  %1292 = extractvalue { <2 x float>, float } %1291, 0
  %1293 = extractvalue { <2 x float>, float } %1291, 1
  store <2 x float> %1292, <2 x float>* %1163, align 8
  store float %1293, float* %1162, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %1164) #11
  %1294 = sub nsw i32 %1221, %1206
  %1295 = shl nuw nsw i32 %1238, 1
  %1296 = sub nsw i32 %1294, %1295
  %1297 = shl nuw nsw i32 %1253, 1
  %1298 = add nsw i32 %1296, %1297
  %1299 = sub nsw i32 %1298, %1271
  %1300 = add nsw i32 %1299, %1287
  %1301 = sitofp i32 %1300 to float
  %1302 = fmul float %1301, 5.000000e-01
  %1303 = sub nsw i32 %1271, %1206
  %1304 = shl nsw i32 %1303, 1
  %1305 = sub nsw i32 %1304, %1221
  %1306 = add nsw i32 %1305, %1287
  %1307 = sitofp i32 %1306 to float
  %1308 = fmul float %1307, 0x3FD5555560000000
  %1309 = fmul float %1302, %4
  %1310 = fmul float %1308, %4
  %1311 = fmul float %1309, %1309
  %1312 = fmul float %1310, %1310
  %1313 = fadd float %1311, %1312
  %1314 = fadd float %1313, 1.000000e+00
  %1315 = fadd float %1314, 0x3F30000000000000
  %1316 = call float @sqrtf(float %1315) #11
  %1317 = fdiv float 1.000000e+00, %1316
  %1318 = fmul float %1309, %1317
  %1319 = fsub float -0.000000e+00, %1318
  %1320 = insertelement <2 x float> undef, float %1319, i32 0
  %1321 = fmul float %1310, %1317
  %1322 = fsub float -0.000000e+00, %1321
  %1323 = insertelement <2 x float> %1320, float %1322, i32 1
  store <2 x float> %1323, <2 x float>* %1165, align 8
  store float %1317, float* %1166, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %1167) #11
  %1324 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)**, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*** %955, align 8
  %1325 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %1324, i64 8
  %1326 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %1325, align 8
  %1327 = call { <2 x float>, float } %1326(%class.SkImageFilterLight* %1, %struct.SkPoint3* nonnull dereferenceable(12) %35) #11
  %1328 = extractvalue { <2 x float>, float } %1327, 0
  %1329 = extractvalue { <2 x float>, float } %1327, 1
  store <2 x float> %1328, <2 x float>* %1168, align 8
  store float %1329, float* %1169, align 8
  %1330 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)**, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*** %964, align 8
  %1331 = getelementptr inbounds i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %1330, i64 2
  %1332 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %1331, align 8
  %1333 = call i32 %1332(%class.BaseLightingType* %0, %struct.SkPoint3* nonnull dereferenceable(12) %36, %struct.SkPoint3* nonnull dereferenceable(12) %35, %struct.SkPoint3* nonnull dereferenceable(12) %37) #11
  %1334 = getelementptr inbounds i32, i32* %1189, i64 2
  store i32 %1333, i32* %1188, align 4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %1167) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %1164) #11
  br i1 %972, label %1335, label %1460

1335:                                             ; preds = %1286
  %1336 = icmp sgt i64 %1187, 0
  %1337 = icmp sgt i64 %1187, -1
  %1338 = icmp sgt i64 %1187, -2
  br label %1339

1339:                                             ; preds = %1399, %1335
  %1340 = phi i64 [ %1182, %1335 ], [ %1349, %1399 ]
  %1341 = phi i32 [ %1272, %1335 ], [ %1455, %1399 ]
  %1342 = phi i32 [ %1207, %1335 ], [ %1454, %1399 ]
  %1343 = phi i32* [ %1334, %1335 ], [ %1453, %1399 ]
  %1344 = phi i32 [ %1287, %1335 ], [ %1402, %1399 ]
  %1345 = phi i32 [ %1271, %1335 ], [ %1344, %1399 ]
  %1346 = phi i32 [ %1253, %1335 ], [ %1400, %1399 ]
  %1347 = phi i32 [ %1238, %1335 ], [ %1346, %1399 ]
  %1348 = phi i32 [ %1221, %1335 ], [ %1401, %1399 ]
  %1349 = add nsw i64 %1340, 1
  %1350 = icmp slt i64 %1349, 0
  br i1 %1350, label %1399, label %1351

1351:                                             ; preds = %1339
  %1352 = icmp slt i64 %1349, %1183
  %1353 = and i1 %1336, %1352
  %1354 = and i1 %1194, %1353
  br i1 %1354, label %1355, label %1367

1355:                                             ; preds = %1351
  %1356 = load i8*, i8** %1151, align 8
  %1357 = load i64, i64* %1152, align 8
  %1358 = mul i64 %1357, %1190
  %1359 = getelementptr inbounds i8, i8* %1356, i64 %1358
  %1360 = trunc i64 %1349 to i32
  %1361 = shl i32 %1360, 2
  %1362 = sext i32 %1361 to i64
  %1363 = getelementptr inbounds i8, i8* %1359, i64 %1362
  %1364 = bitcast i8* %1363 to i32*
  %1365 = load i32, i32* %1364, align 4
  %1366 = lshr i32 %1365, 24
  br label %1367

1367:                                             ; preds = %1355, %1351
  %1368 = phi i32 [ 0, %1351 ], [ %1366, %1355 ]
  %1369 = and i1 %1337, %1352
  %1370 = and i1 %1226, %1369
  br i1 %1370, label %1371, label %1383

1371:                                             ; preds = %1367
  %1372 = load i8*, i8** %1151, align 8
  %1373 = load i64, i64* %1152, align 8
  %1374 = mul i64 %1373, %1187
  %1375 = getelementptr inbounds i8, i8* %1372, i64 %1374
  %1376 = trunc i64 %1349 to i32
  %1377 = shl i32 %1376, 2
  %1378 = sext i32 %1377 to i64
  %1379 = getelementptr inbounds i8, i8* %1375, i64 %1378
  %1380 = bitcast i8* %1379 to i32*
  %1381 = load i32, i32* %1380, align 4
  %1382 = lshr i32 %1381, 24
  br label %1383

1383:                                             ; preds = %1371, %1367
  %1384 = phi i32 [ 0, %1367 ], [ %1382, %1371 ]
  %1385 = and i1 %1338, %1352
  %1386 = and i1 %1259, %1385
  br i1 %1386, label %1387, label %1399

1387:                                             ; preds = %1383
  %1388 = load i8*, i8** %1151, align 8
  %1389 = load i64, i64* %1152, align 8
  %1390 = mul i64 %1389, %1254
  %1391 = getelementptr inbounds i8, i8* %1388, i64 %1390
  %1392 = trunc i64 %1349 to i32
  %1393 = shl i32 %1392, 2
  %1394 = sext i32 %1393 to i64
  %1395 = getelementptr inbounds i8, i8* %1391, i64 %1394
  %1396 = bitcast i8* %1395 to i32*
  %1397 = load i32, i32* %1396, align 4
  %1398 = lshr i32 %1397, 24
  br label %1399

1399:                                             ; preds = %1387, %1383, %1339
  %1400 = phi i32 [ %1384, %1387 ], [ %1384, %1383 ], [ 0, %1339 ]
  %1401 = phi i32 [ %1368, %1387 ], [ %1368, %1383 ], [ 0, %1339 ]
  %1402 = phi i32 [ %1398, %1387 ], [ 0, %1383 ], [ 0, %1339 ]
  %1403 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)**, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*** %915, align 8
  %1404 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %1403, i64 7
  %1405 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %1404, align 8
  %1406 = trunc i64 %1340 to i32
  %1407 = call { <2 x float>, float } %1405(%class.SkImageFilterLight* %1, i32 %1406, i32 %1222, i32 %1346, float %4) #11
  %1408 = extractvalue { <2 x float>, float } %1407, 0
  %1409 = extractvalue { <2 x float>, float } %1407, 1
  store <2 x float> %1408, <2 x float>* %1163, align 8
  store float %1409, float* %1162, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %1170) #11
  %1410 = shl nsw i32 %1347, 1
  %1411 = shl nsw i32 %1400, 1
  %1412 = add nsw i32 %1342, %1341
  %1413 = sub nsw i32 %1412, %1410
  %1414 = add nsw i32 %1413, %1401
  %1415 = add nsw i32 %1414, %1411
  %1416 = add nsw i32 %1415, %1402
  %1417 = sitofp i32 %1416 to float
  %1418 = fmul float %1417, 2.500000e-01
  %1419 = shl nsw i32 %1348, 1
  %1420 = shl nsw i32 %1344, 1
  %1421 = add nsw i32 %1345, %1342
  %1422 = add nsw i32 %1421, %1420
  %1423 = sub nsw i32 %1422, %1419
  %1424 = sub nsw i32 %1423, %1401
  %1425 = add nsw i32 %1424, %1402
  %1426 = sitofp i32 %1425 to float
  %1427 = fmul float %1426, 2.500000e-01
  %1428 = fmul float %1418, %4
  %1429 = fmul float %1427, %4
  %1430 = fmul float %1428, %1428
  %1431 = fmul float %1429, %1429
  %1432 = fadd float %1431, %1430
  %1433 = fadd float %1432, 1.000000e+00
  %1434 = fadd float %1433, 0x3F30000000000000
  %1435 = call float @sqrtf(float %1434) #11
  %1436 = fdiv float 1.000000e+00, %1435
  %1437 = fmul float %1428, %1436
  %1438 = fsub float -0.000000e+00, %1437
  %1439 = insertelement <2 x float> undef, float %1438, i32 0
  %1440 = fmul float %1429, %1436
  %1441 = fsub float -0.000000e+00, %1440
  %1442 = insertelement <2 x float> %1439, float %1441, i32 1
  store <2 x float> %1442, <2 x float>* %1171, align 8
  store float %1436, float* %1172, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %1173) #11
  %1443 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)**, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*** %955, align 8
  %1444 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %1443, i64 8
  %1445 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %1444, align 8
  %1446 = call { <2 x float>, float } %1445(%class.SkImageFilterLight* %1, %struct.SkPoint3* nonnull dereferenceable(12) %35) #11
  %1447 = extractvalue { <2 x float>, float } %1446, 0
  %1448 = extractvalue { <2 x float>, float } %1446, 1
  store <2 x float> %1447, <2 x float>* %1174, align 8
  store float %1448, float* %1175, align 8
  %1449 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)**, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*** %964, align 8
  %1450 = getelementptr inbounds i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %1449, i64 2
  %1451 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %1450, align 8
  %1452 = call i32 %1451(%class.BaseLightingType* %0, %struct.SkPoint3* nonnull dereferenceable(12) %38, %struct.SkPoint3* nonnull dereferenceable(12) %35, %struct.SkPoint3* nonnull dereferenceable(12) %39) #11
  %1453 = getelementptr inbounds i32, i32* %1343, i64 1
  store i32 %1452, i32* %1343, align 4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %1173) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %1170) #11
  %1454 = sub nsw i32 0, %1348
  %1455 = sub nsw i32 0, %1344
  %1456 = trunc i64 %1349 to i32
  %1457 = icmp eq i32 %971, %1456
  br i1 %1457, label %1458, label %1339

1458:                                             ; preds = %1399
  %1459 = shl nsw i32 %1346, 1
  br label %1460

1460:                                             ; preds = %1458, %1286
  %1461 = phi i32 [ %1411, %1458 ], [ %1297, %1286 ]
  %1462 = phi i32 [ %1459, %1458 ], [ %1295, %1286 ]
  %1463 = phi i32 [ %1401, %1458 ], [ %1221, %1286 ]
  %1464 = phi i32 [ %1400, %1458 ], [ %1253, %1286 ]
  %1465 = phi i32 [ %1344, %1458 ], [ %1271, %1286 ]
  %1466 = phi i32 [ %1402, %1458 ], [ %1287, %1286 ]
  %1467 = phi i32 [ %971, %1458 ], [ %848, %1286 ]
  %1468 = phi i32* [ %1453, %1458 ], [ %1334, %1286 ]
  %1469 = phi i32 [ %1454, %1458 ], [ %1207, %1286 ]
  %1470 = phi i32 [ %1455, %1458 ], [ %1272, %1286 ]
  %1471 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)**, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*** %915, align 8
  %1472 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %1471, i64 7
  %1473 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %1472, align 8
  %1474 = call { <2 x float>, float } %1473(%class.SkImageFilterLight* %1, i32 %1467, i32 %1222, i32 %1464, float %4) #11
  %1475 = extractvalue { <2 x float>, float } %1474, 0
  %1476 = extractvalue { <2 x float>, float } %1474, 1
  store <2 x float> %1475, <2 x float>* %1163, align 8
  store float %1476, float* %1162, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %1176) #11
  %1477 = sub nsw i32 %1461, %1462
  %1478 = add nsw i32 %1477, %1463
  %1479 = add nsw i32 %1478, %1466
  %1480 = add nsw i32 %1479, %1469
  %1481 = add nsw i32 %1480, %1470
  %1482 = sitofp i32 %1481 to float
  %1483 = fmul float %1482, 5.000000e-01
  %1484 = sub nsw i32 %1466, %1463
  %1485 = shl nsw i32 %1484, 1
  %1486 = add nsw i32 %1485, %1465
  %1487 = add i32 %1486, %1469
  %1488 = sitofp i32 %1487 to float
  %1489 = fmul float %1488, 0x3FD5555560000000
  %1490 = fmul float %1483, %4
  %1491 = fmul float %1489, %4
  %1492 = fmul float %1490, %1490
  %1493 = fmul float %1491, %1491
  %1494 = fadd float %1493, %1492
  %1495 = fadd float %1494, 1.000000e+00
  %1496 = fadd float %1495, 0x3F30000000000000
  %1497 = call float @sqrtf(float %1496) #11
  %1498 = fdiv float 1.000000e+00, %1497
  %1499 = fmul float %1490, %1498
  %1500 = fsub float -0.000000e+00, %1499
  %1501 = insertelement <2 x float> undef, float %1500, i32 0
  %1502 = fmul float %1491, %1498
  %1503 = fsub float -0.000000e+00, %1502
  %1504 = insertelement <2 x float> %1501, float %1503, i32 1
  store <2 x float> %1504, <2 x float>* %1177, align 8
  store float %1498, float* %1178, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %1179) #11
  %1505 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)**, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*** %955, align 8
  %1506 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %1505, i64 8
  %1507 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %1506, align 8
  %1508 = call { <2 x float>, float } %1507(%class.SkImageFilterLight* %1, %struct.SkPoint3* nonnull dereferenceable(12) %35) #11
  %1509 = extractvalue { <2 x float>, float } %1508, 0
  %1510 = extractvalue { <2 x float>, float } %1508, 1
  store <2 x float> %1509, <2 x float>* %1180, align 8
  store float %1510, float* %1181, align 8
  %1511 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)**, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*** %964, align 8
  %1512 = getelementptr inbounds i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %1511, i64 2
  %1513 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %1512, align 8
  %1514 = call i32 %1513(%class.BaseLightingType* %0, %struct.SkPoint3* nonnull dereferenceable(12) %40, %struct.SkPoint3* nonnull dereferenceable(12) %35, %struct.SkPoint3* nonnull dereferenceable(12) %41) #11
  store i32 %1514, i32* %1468, align 4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %1179) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %1176) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %1159) #11
  %1515 = getelementptr inbounds i32, i32* %1468, i64 1
  %1516 = icmp eq i32 %1146, %1255
  br i1 %1516, label %1517, label %1186

1517:                                             ; preds = %1460, %1088
  %1518 = phi i32 [ %870, %1088 ], [ %1146, %1460 ]
  %1519 = phi i32* [ %1145, %1088 ], [ %1515, %1460 ]
  %1520 = add nsw i32 %61, -2
  %1521 = or i32 %1520, %57
  %1522 = icmp sgt i32 %1521, -1
  %1523 = and i1 %827, %1522
  %1524 = icmp sgt i32 %52, %1520
  %1525 = and i1 %1524, %1523
  br i1 %1525, label %1526, label %1540

1526:                                             ; preds = %1517
  %1527 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 0
  %1528 = load i8*, i8** %1527, align 8
  %1529 = sext i32 %1520 to i64
  %1530 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 1
  %1531 = load i64, i64* %1530, align 8
  %1532 = mul i64 %1531, %1529
  %1533 = getelementptr inbounds i8, i8* %1528, i64 %1532
  %1534 = shl i32 %57, 2
  %1535 = sext i32 %1534 to i64
  %1536 = getelementptr inbounds i8, i8* %1533, i64 %1535
  %1537 = bitcast i8* %1536 to i32*
  %1538 = load i32, i32* %1537, align 4
  %1539 = lshr i32 %1538, 24
  br label %1540

1540:                                             ; preds = %1526, %1517
  %1541 = phi i32 [ %1539, %1526 ], [ 0, %1517 ]
  %1542 = sub nsw i32 0, %1541
  %1543 = or i32 %1520, %848
  %1544 = icmp sgt i32 %1543, -1
  %1545 = and i1 %850, %1544
  %1546 = and i1 %1524, %1545
  br i1 %1546, label %1547, label %1561

1547:                                             ; preds = %1540
  %1548 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 0
  %1549 = load i8*, i8** %1548, align 8
  %1550 = sext i32 %1520 to i64
  %1551 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 1
  %1552 = load i64, i64* %1551, align 8
  %1553 = mul i64 %1552, %1550
  %1554 = getelementptr inbounds i8, i8* %1549, i64 %1553
  %1555 = shl i32 %848, 2
  %1556 = sext i32 %1555 to i64
  %1557 = getelementptr inbounds i8, i8* %1554, i64 %1556
  %1558 = bitcast i8* %1557 to i32*
  %1559 = load i32, i32* %1558, align 4
  %1560 = lshr i32 %1559, 24
  br label %1561

1561:                                             ; preds = %1547, %1540
  %1562 = phi i32 [ %1560, %1547 ], [ 0, %1540 ]
  %1563 = icmp sle i32 %50, %57
  %1564 = or i1 %826, %1563
  %1565 = icmp slt i32 %61, 1
  %1566 = or i1 %1565, %1564
  %1567 = xor i1 %1566, true
  %1568 = icmp sge i32 %52, %61
  %1569 = and i1 %1568, %1567
  br i1 %1569, label %1570, label %1584

1570:                                             ; preds = %1561
  %1571 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 0
  %1572 = load i8*, i8** %1571, align 8
  %1573 = sext i32 %1146 to i64
  %1574 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 1
  %1575 = load i64, i64* %1574, align 8
  %1576 = mul i64 %1575, %1573
  %1577 = getelementptr inbounds i8, i8* %1572, i64 %1576
  %1578 = shl i32 %57, 2
  %1579 = sext i32 %1578 to i64
  %1580 = getelementptr inbounds i8, i8* %1577, i64 %1579
  %1581 = bitcast i8* %1580 to i32*
  %1582 = load i32, i32* %1581, align 4
  %1583 = lshr i32 %1582, 24
  br label %1584

1584:                                             ; preds = %1570, %1561
  %1585 = phi i32 [ %1583, %1570 ], [ 0, %1561 ]
  %1586 = icmp sle i32 %50, %848
  %1587 = or i1 %849, %1586
  %1588 = or i1 %1565, %1587
  %1589 = xor i1 %1588, true
  %1590 = and i1 %1568, %1589
  br i1 %1590, label %1591, label %1605

1591:                                             ; preds = %1584
  %1592 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 0
  %1593 = load i8*, i8** %1592, align 8
  %1594 = sext i32 %1146 to i64
  %1595 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 1
  %1596 = load i64, i64* %1595, align 8
  %1597 = mul i64 %1596, %1594
  %1598 = getelementptr inbounds i8, i8* %1593, i64 %1597
  %1599 = shl i32 %848, 2
  %1600 = sext i32 %1599 to i64
  %1601 = getelementptr inbounds i8, i8* %1598, i64 %1600
  %1602 = bitcast i8* %1601 to i32*
  %1603 = load i32, i32* %1602, align 4
  %1604 = lshr i32 %1603, 24
  br label %1605

1605:                                             ; preds = %1591, %1584
  %1606 = phi i32 [ %1604, %1591 ], [ 0, %1584 ]
  %1607 = bitcast %struct.SkPoint3* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %1607) #11
  %1608 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %42, i64 0, i32 2
  %1609 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)**, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*** %915, align 8
  %1610 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %1609, i64 7
  %1611 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %1610, align 8
  %1612 = call { <2 x float>, float } %1611(%class.SkImageFilterLight* %1, i32 %57, i32 %1518, i32 %1585, float %4) #11
  %1613 = extractvalue { <2 x float>, float } %1612, 0
  %1614 = extractvalue { <2 x float>, float } %1612, 1
  %1615 = bitcast %struct.SkPoint3* %42 to <2 x float>*
  store <2 x float> %1613, <2 x float>* %1615, align 8
  store float %1614, float* %1608, align 8
  %1616 = bitcast %struct.SkPoint3* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %1616) #11
  %1617 = sub nsw i32 %1562, %1541
  %1618 = shl nuw nsw i32 %1585, 1
  %1619 = sub nsw i32 %1617, %1618
  %1620 = shl nuw nsw i32 %1606, 1
  %1621 = add nsw i32 %1619, %1620
  %1622 = sitofp i32 %1621 to float
  %1623 = fmul float %1622, 0x3FE5555560000000
  %1624 = mul nsw i32 %1541, -2
  %1625 = sub nsw i32 %1624, %1562
  %1626 = add nsw i32 %1625, %1618
  %1627 = add nsw i32 %1626, %1606
  %1628 = sitofp i32 %1627 to float
  %1629 = fmul float %1628, 0x3FE5555560000000
  %1630 = fmul float %1623, %4
  %1631 = fmul float %1629, %4
  %1632 = fmul float %1630, %1630
  %1633 = fmul float %1631, %1631
  %1634 = fadd float %1633, %1632
  %1635 = fadd float %1634, 1.000000e+00
  %1636 = fadd float %1635, 0x3F30000000000000
  %1637 = call float @sqrtf(float %1636) #11
  %1638 = fdiv float 1.000000e+00, %1637
  %1639 = fmul float %1630, %1638
  %1640 = fsub float -0.000000e+00, %1639
  %1641 = insertelement <2 x float> undef, float %1640, i32 0
  %1642 = fmul float %1631, %1638
  %1643 = fsub float -0.000000e+00, %1642
  %1644 = insertelement <2 x float> %1641, float %1643, i32 1
  %1645 = bitcast %struct.SkPoint3* %43 to <2 x float>*
  store <2 x float> %1644, <2 x float>* %1645, align 8
  %1646 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %43, i64 0, i32 2
  store float %1638, float* %1646, align 8
  %1647 = bitcast %struct.SkPoint3* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %1647) #11
  %1648 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)**, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*** %955, align 8
  %1649 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %1648, i64 8
  %1650 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %1649, align 8
  %1651 = call { <2 x float>, float } %1650(%class.SkImageFilterLight* %1, %struct.SkPoint3* nonnull dereferenceable(12) %42) #11
  %1652 = extractvalue { <2 x float>, float } %1651, 0
  %1653 = extractvalue { <2 x float>, float } %1651, 1
  %1654 = bitcast %struct.SkPoint3* %44 to <2 x float>*
  store <2 x float> %1652, <2 x float>* %1654, align 8
  %1655 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %44, i64 0, i32 2
  store float %1653, float* %1655, align 8
  %1656 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)**, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*** %964, align 8
  %1657 = getelementptr inbounds i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %1656, i64 2
  %1658 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %1657, align 8
  %1659 = call i32 %1658(%class.BaseLightingType* %0, %struct.SkPoint3* nonnull dereferenceable(12) %43, %struct.SkPoint3* nonnull dereferenceable(12) %42, %struct.SkPoint3* nonnull dereferenceable(12) %44) #11
  store i32 %1659, i32* %1519, align 4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %1647) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %1616) #11
  %1660 = getelementptr inbounds i32, i32* %1519, i64 1
  br i1 %972, label %1661, label %1772

1661:                                             ; preds = %1605
  %1662 = icmp sgt i32 %1520, -1
  %1663 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 0
  %1664 = sext i32 %1520 to i64
  %1665 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 1
  %1666 = icmp sgt i32 %61, 0
  %1667 = sext i32 %1146 to i64
  %1668 = bitcast %struct.SkPoint3* %45 to i8*
  %1669 = bitcast %struct.SkPoint3* %45 to <2 x float>*
  %1670 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %45, i64 0, i32 2
  %1671 = bitcast %struct.SkPoint3* %46 to i8*
  %1672 = bitcast %struct.SkPoint3* %46 to <2 x float>*
  %1673 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %46, i64 0, i32 2
  %1674 = sext i32 %848 to i64
  %1675 = sext i32 %50 to i64
  br label %1676

1676:                                             ; preds = %1717, %1661
  %1677 = phi i64 [ %1674, %1661 ], [ %1683, %1717 ]
  %1678 = phi i32* [ %1660, %1661 ], [ %1769, %1717 ]
  %1679 = phi i32 [ %1542, %1661 ], [ %1768, %1717 ]
  %1680 = phi i32 [ %1606, %1661 ], [ %1719, %1717 ]
  %1681 = phi i32 [ %1585, %1661 ], [ %1680, %1717 ]
  %1682 = phi i32 [ %1562, %1661 ], [ %1718, %1717 ]
  %1683 = add nsw i64 %1677, 1
  %1684 = icmp slt i64 %1683, 0
  br i1 %1684, label %1717, label %1685

1685:                                             ; preds = %1676
  %1686 = icmp slt i64 %1683, %1675
  %1687 = and i1 %1662, %1686
  %1688 = and i1 %1524, %1687
  br i1 %1688, label %1689, label %1701

1689:                                             ; preds = %1685
  %1690 = load i8*, i8** %1663, align 8
  %1691 = load i64, i64* %1665, align 8
  %1692 = mul i64 %1691, %1664
  %1693 = getelementptr inbounds i8, i8* %1690, i64 %1692
  %1694 = trunc i64 %1683 to i32
  %1695 = shl i32 %1694, 2
  %1696 = sext i32 %1695 to i64
  %1697 = getelementptr inbounds i8, i8* %1693, i64 %1696
  %1698 = bitcast i8* %1697 to i32*
  %1699 = load i32, i32* %1698, align 4
  %1700 = lshr i32 %1699, 24
  br label %1701

1701:                                             ; preds = %1689, %1685
  %1702 = phi i32 [ 0, %1685 ], [ %1700, %1689 ]
  %1703 = and i1 %1666, %1686
  %1704 = and i1 %1568, %1703
  br i1 %1704, label %1705, label %1717

1705:                                             ; preds = %1701
  %1706 = load i8*, i8** %1663, align 8
  %1707 = load i64, i64* %1665, align 8
  %1708 = mul i64 %1707, %1667
  %1709 = getelementptr inbounds i8, i8* %1706, i64 %1708
  %1710 = trunc i64 %1683 to i32
  %1711 = shl i32 %1710, 2
  %1712 = sext i32 %1711 to i64
  %1713 = getelementptr inbounds i8, i8* %1709, i64 %1712
  %1714 = bitcast i8* %1713 to i32*
  %1715 = load i32, i32* %1714, align 4
  %1716 = lshr i32 %1715, 24
  br label %1717

1717:                                             ; preds = %1705, %1701, %1676
  %1718 = phi i32 [ %1702, %1705 ], [ %1702, %1701 ], [ 0, %1676 ]
  %1719 = phi i32 [ %1716, %1705 ], [ 0, %1701 ], [ 0, %1676 ]
  %1720 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)**, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*** %915, align 8
  %1721 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %1720, i64 7
  %1722 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %1721, align 8
  %1723 = trunc i64 %1677 to i32
  %1724 = call { <2 x float>, float } %1722(%class.SkImageFilterLight* %1, i32 %1723, i32 %1518, i32 %1680, float %4) #11
  %1725 = extractvalue { <2 x float>, float } %1724, 0
  %1726 = extractvalue { <2 x float>, float } %1724, 1
  store <2 x float> %1725, <2 x float>* %1615, align 8
  store float %1726, float* %1608, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %1668) #11
  %1727 = shl nsw i32 %1681, 1
  %1728 = shl nuw nsw i32 %1719, 1
  %1729 = sub nsw i32 %1679, %1727
  %1730 = add nsw i32 %1729, %1718
  %1731 = add nsw i32 %1730, %1728
  %1732 = sitofp i32 %1731 to float
  %1733 = fmul float %1732, 0x3FD5555560000000
  %1734 = shl nsw i32 %1682, 1
  %1735 = shl nsw i32 %1680, 1
  %1736 = add nsw i32 %1681, %1679
  %1737 = add nsw i32 %1736, %1735
  %1738 = sub nsw i32 %1737, %1734
  %1739 = sub nsw i32 %1738, %1718
  %1740 = add nsw i32 %1739, %1719
  %1741 = sitofp i32 %1740 to float
  %1742 = fmul float %1741, 5.000000e-01
  %1743 = fmul float %1733, %4
  %1744 = fmul float %1742, %4
  %1745 = fmul float %1743, %1743
  %1746 = fmul float %1744, %1744
  %1747 = fadd float %1746, %1745
  %1748 = fadd float %1747, 1.000000e+00
  %1749 = fadd float %1748, 0x3F30000000000000
  %1750 = call float @sqrtf(float %1749) #11
  %1751 = fdiv float 1.000000e+00, %1750
  %1752 = fmul float %1743, %1751
  %1753 = fsub float -0.000000e+00, %1752
  %1754 = insertelement <2 x float> undef, float %1753, i32 0
  %1755 = fmul float %1744, %1751
  %1756 = fsub float -0.000000e+00, %1755
  %1757 = insertelement <2 x float> %1754, float %1756, i32 1
  store <2 x float> %1757, <2 x float>* %1669, align 8
  store float %1751, float* %1670, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %1671) #11
  %1758 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)**, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*** %955, align 8
  %1759 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %1758, i64 8
  %1760 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %1759, align 8
  %1761 = call { <2 x float>, float } %1760(%class.SkImageFilterLight* %1, %struct.SkPoint3* nonnull dereferenceable(12) %42) #11
  %1762 = extractvalue { <2 x float>, float } %1761, 0
  %1763 = extractvalue { <2 x float>, float } %1761, 1
  store <2 x float> %1762, <2 x float>* %1672, align 8
  store float %1763, float* %1673, align 8
  %1764 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)**, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*** %964, align 8
  %1765 = getelementptr inbounds i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %1764, i64 2
  %1766 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %1765, align 8
  %1767 = call i32 %1766(%class.BaseLightingType* %0, %struct.SkPoint3* nonnull dereferenceable(12) %45, %struct.SkPoint3* nonnull dereferenceable(12) %42, %struct.SkPoint3* nonnull dereferenceable(12) %46) #11
  store i32 %1767, i32* %1678, align 4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %1671) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %1668) #11
  %1768 = sub nsw i32 0, %1682
  %1769 = getelementptr inbounds i32, i32* %1678, i64 1
  %1770 = trunc i64 %1683 to i32
  %1771 = icmp eq i32 %971, %1770
  br i1 %1771, label %1772, label %1676

1772:                                             ; preds = %1717, %1605
  %1773 = phi i32 [ %1620, %1605 ], [ %1728, %1717 ]
  %1774 = phi i32 [ %1618, %1605 ], [ %1735, %1717 ]
  %1775 = phi i32 [ %1562, %1605 ], [ %1718, %1717 ]
  %1776 = phi i32 [ %1585, %1605 ], [ %1680, %1717 ]
  %1777 = phi i32 [ %1606, %1605 ], [ %1719, %1717 ]
  %1778 = phi i32 [ %848, %1605 ], [ %971, %1717 ]
  %1779 = phi i32 [ %1542, %1605 ], [ %1768, %1717 ]
  %1780 = phi i32* [ %1660, %1605 ], [ %1769, %1717 ]
  %1781 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)**, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*** %915, align 8
  %1782 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %1781, i64 7
  %1783 = load { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)*, { <2 x float>, float } (%class.SkImageFilterLight*, i32, i32, i32, float)** %1782, align 8
  %1784 = call { <2 x float>, float } %1783(%class.SkImageFilterLight* %1, i32 %1778, i32 %1518, i32 %1777, float %4) #11
  %1785 = extractvalue { <2 x float>, float } %1784, 0
  %1786 = extractvalue { <2 x float>, float } %1784, 1
  store <2 x float> %1785, <2 x float>* %1615, align 8
  store float %1786, float* %1608, align 8
  %1787 = bitcast %struct.SkPoint3* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %1787) #11
  %1788 = sub nsw i32 %1773, %1774
  %1789 = add nsw i32 %1788, %1775
  %1790 = add nsw i32 %1789, %1779
  %1791 = sitofp i32 %1790 to float
  %1792 = fmul float %1791, 0x3FE5555560000000
  %1793 = shl nsw i32 %1775, 1
  %1794 = add nuw nsw i32 %1776, %1773
  %1795 = sub nsw i32 %1794, %1793
  %1796 = add nsw i32 %1795, %1779
  %1797 = sitofp i32 %1796 to float
  %1798 = fmul float %1797, 0x3FE5555560000000
  %1799 = fmul float %1792, %4
  %1800 = fmul float %1798, %4
  %1801 = fmul float %1799, %1799
  %1802 = fmul float %1800, %1800
  %1803 = fadd float %1801, %1802
  %1804 = fadd float %1803, 1.000000e+00
  %1805 = fadd float %1804, 0x3F30000000000000
  %1806 = call float @sqrtf(float %1805) #11
  %1807 = fdiv float 1.000000e+00, %1806
  %1808 = fmul float %1799, %1807
  %1809 = fsub float -0.000000e+00, %1808
  %1810 = insertelement <2 x float> undef, float %1809, i32 0
  %1811 = fmul float %1800, %1807
  %1812 = fsub float -0.000000e+00, %1811
  %1813 = insertelement <2 x float> %1810, float %1812, i32 1
  %1814 = bitcast %struct.SkPoint3* %47 to <2 x float>*
  store <2 x float> %1813, <2 x float>* %1814, align 8
  %1815 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %47, i64 0, i32 2
  store float %1807, float* %1815, align 8
  %1816 = bitcast %struct.SkPoint3* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %1816) #11
  %1817 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)**, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*** %955, align 8
  %1818 = getelementptr inbounds { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %1817, i64 8
  %1819 = load { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)*, { <2 x float>, float } (%class.SkImageFilterLight*, %struct.SkPoint3*)** %1818, align 8
  %1820 = call { <2 x float>, float } %1819(%class.SkImageFilterLight* %1, %struct.SkPoint3* nonnull dereferenceable(12) %42) #11
  %1821 = extractvalue { <2 x float>, float } %1820, 0
  %1822 = extractvalue { <2 x float>, float } %1820, 1
  %1823 = bitcast %struct.SkPoint3* %48 to <2 x float>*
  store <2 x float> %1821, <2 x float>* %1823, align 8
  %1824 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %48, i64 0, i32 2
  store float %1822, float* %1824, align 8
  %1825 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)**, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*** %964, align 8
  %1826 = getelementptr inbounds i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %1825, i64 2
  %1827 = load i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)*, i32 (%class.BaseLightingType*, %struct.SkPoint3*, %struct.SkPoint3*, %struct.SkPoint3*)** %1826, align 8
  %1828 = call i32 %1827(%class.BaseLightingType* %0, %struct.SkPoint3* nonnull dereferenceable(12) %47, %struct.SkPoint3* nonnull dereferenceable(12) %42, %struct.SkPoint3* nonnull dereferenceable(12) %48) #11
  store i32 %1828, i32* %1780, align 4
  br label %1829

1829:                                             ; preds = %1772, %765
  %1830 = phi i8* [ %1816, %1772 ], [ %809, %765 ]
  %1831 = phi i8* [ %1787, %1772 ], [ %780, %765 ]
  %1832 = phi i8* [ %1607, %1772 ], [ %627, %765 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %1830) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %1831) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %1832) #11
  ret void
}

declare void @_ZN14SkSpecialImage14MakeFromRasterERK7SkIRectRK8SkBitmapRK14SkSurfaceProps(%class.sk_sp.179* sret, %struct.SkIRect* dereferenceable(16), %class.SkBitmap* dereferenceable(56), %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16BaseLightingTypeD2Ev(%class.BaseLightingType*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZNK28SkDiffuseLightingImageFilter21makeFragmentProcessorE18GrSurfaceProxyViewRK8SkMatrixPK7SkIRect12BoundaryModeRK6GrCaps(%class.SkDiffuseLightingImageFilter* nocapture readonly, %class.GrSurfaceProxyView* nocapture, %class.SkMatrix* nocapture readonly dereferenceable(40), %struct.SkIRect* readonly, i32, %class.GrCaps* dereferenceable(232)) unnamed_addr #0 align 2 {
  %7 = alloca %class.GrSurfaceProxyView, align 8
  %8 = alloca %class.sk_sp.209, align 8
  %9 = getelementptr inbounds %class.SkDiffuseLightingImageFilter, %class.SkDiffuseLightingImageFilter* %0, i64 0, i32 0, i32 3
  %10 = load float, float* %9, align 8
  %11 = fmul float %10, 2.550000e+02
  %12 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 0, i32 0
  %13 = bitcast %class.GrSurfaceProxyView* %1 to i64*
  %14 = load i64, i64* %13, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %12, align 8
  %15 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 2, i32 0
  %18 = load i16, i16* %17, align 2
  %19 = getelementptr inbounds %class.SkDiffuseLightingImageFilter, %class.SkDiffuseLightingImageFilter* %0, i64 0, i32 0, i32 2, i32 0
  %20 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %19, align 8, !noalias !61
  %21 = icmp eq %class.SkImageFilterLight* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %6
  %23 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %20, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 1 monotonic, !noalias !61
  br label %25

25:                                               ; preds = %6, %22
  %26 = ptrtoint %class.SkImageFilterLight* %20 to i64
  %27 = getelementptr inbounds %class.SkDiffuseLightingImageFilter, %class.SkDiffuseLightingImageFilter* %0, i64 0, i32 1
  %28 = bitcast float* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = tail call i8* @_ZN11GrProcessornwEm(i64 128) #11
  %31 = bitcast %class.GrSurfaceProxyView* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #11
  %32 = bitcast %class.sk_sp.209* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11
  %33 = bitcast i8* %30 to %class.GrLightingEffect*
  %34 = bitcast %class.GrSurfaceProxyView* %7 to i64*
  store i64 %14, i64* %34, align 8
  %35 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %7, i64 0, i32 1
  store i32 %16, i32* %35, align 8
  %36 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %7, i64 0, i32 2, i32 0
  store i16 %18, i16* %36, align 4
  %37 = bitcast %class.sk_sp.209* %8 to i64*
  store i64 %26, i64* %37, align 8
  call void @_ZN16GrLightingEffectC2EN11GrProcessor7ClassIDE18GrSurfaceProxyView5sk_spIK18SkImageFilterLightEfRK8SkMatrix12BoundaryModePK7SkIRectRK6GrCaps(%class.GrLightingEffect* %33, i32 38, %class.GrSurfaceProxyView* nonnull %7, %class.sk_sp.209* nonnull %8, float %11, %class.SkMatrix* dereferenceable(40) %2, i32 %4, %struct.SkIRect* %3, %class.GrCaps* dereferenceable(232) %5) #11
  %38 = getelementptr inbounds %class.sk_sp.209, %class.sk_sp.209* %8, i64 0, i32 0
  %39 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %38, align 8
  %40 = icmp eq %class.SkImageFilterLight* %39, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %25
  %42 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %39, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw add i32* %42, i32 -1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = bitcast %class.SkImageFilterLight* %39 to %class.SkRefCntBase*
  %47 = bitcast %class.SkImageFilterLight* %39 to void (%class.SkRefCntBase*)***
  %48 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %47, align 8
  %49 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, i64 2
  %50 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, align 8
  tail call void %50(%class.SkRefCntBase* nonnull %46) #11
  br label %51

51:                                               ; preds = %45, %41, %25
  %52 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %7, i64 0, i32 0, i32 0
  %53 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %52, align 8
  %54 = icmp eq %class.GrSurfaceProxy* %53, null
  br i1 %54, label %67, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %53, i64 0, i32 1
  %57 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw add i32* %57, i32 -1 acq_rel
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %67

60:                                               ; preds = %55
  %61 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %56, i64 -2
  %62 = bitcast %class.SkNVRefCnt* %61 to %class.GrSurfaceProxy*
  %63 = bitcast %class.SkNVRefCnt* %61 to void (%class.GrSurfaceProxy*)***
  %64 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %63, align 8
  %65 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %64, i64 1
  %66 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %65, align 8
  tail call void %66(%class.GrSurfaceProxy* nonnull %62) #11
  br label %67

67:                                               ; preds = %51, %55, %60
  %68 = bitcast i8* %30 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV23GrDiffuseLightingEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %68, align 8
  %69 = getelementptr inbounds i8, i8* %30, i64 120
  %70 = bitcast i8* %69 to i32*
  store i32 %29, i32* %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  %71 = bitcast i8* %30 to %class.GrFragmentProcessor*
  ret %class.GrFragmentProcessor* %71
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29SkSpecularLightingImageFilterC2E5sk_spI18SkImageFilterLightEfffS0_I13SkImageFilterEPK6SkRect(%class.SkSpecularLightingImageFilter*, %class.sk_sp.1* nocapture, float, float, float, %class.sk_sp* nocapture, %struct.SkRect*) unnamed_addr #0 align 2 {
  %8 = alloca %class.sk_sp, align 8
  %9 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %1, i64 0, i32 0
  %10 = bitcast %class.sk_sp.1* %1 to i64*
  %11 = load i64, i64* %10, align 8
  store %class.SkImageFilterLight* null, %class.SkImageFilterLight** %9, align 8
  %12 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %13 = bitcast %class.sk_sp* %5 to i64*
  %14 = load i64, i64* %13, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %12, align 8
  %15 = bitcast %class.sk_sp* %8 to i64*
  store i64 %14, i64* %15, align 8
  %16 = bitcast %class.SkSpecularLightingImageFilter* %0 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* %16, %class.sk_sp* nonnull %8, i32 1, %struct.SkRect* %6) #11
  %17 = getelementptr inbounds %class.SkSpecularLightingImageFilter, %class.SkSpecularLightingImageFilter* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV29SkLightingImageFilterInternal, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %class.SkSpecularLightingImageFilter, %class.SkSpecularLightingImageFilter* %0, i64 0, i32 0, i32 2
  %19 = bitcast %class.sk_sp.1* %18 to i64*
  store i64 %11, i64* %19, align 8
  %20 = getelementptr inbounds %class.SkSpecularLightingImageFilter, %class.SkSpecularLightingImageFilter* %0, i64 0, i32 0, i32 3
  %21 = fdiv float %2, 2.550000e+02
  store float %21, float* %20, align 8
  %22 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %8, i64 0, i32 0
  %23 = load %class.SkImageFilter*, %class.SkImageFilter** %22, align 8
  %24 = icmp eq %class.SkImageFilter* %23, null
  br i1 %24, label %35, label %25

25:                                               ; preds = %7
  %26 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 -1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %35

29:                                               ; preds = %25
  %30 = bitcast %class.SkImageFilter* %23 to %class.SkRefCntBase*
  %31 = bitcast %class.SkImageFilter* %23 to void (%class.SkRefCntBase*)***
  %32 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %31, align 8
  %33 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %32, i64 2
  %34 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %33, align 8
  call void %34(%class.SkRefCntBase* nonnull %30) #11
  br label %35

35:                                               ; preds = %29, %25, %7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV29SkSpecularLightingImageFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %36 = getelementptr inbounds %class.SkSpecularLightingImageFilter, %class.SkSpecularLightingImageFilter* %0, i64 0, i32 1
  store float %3, float* %36, align 4
  %37 = getelementptr inbounds %class.SkSpecularLightingImageFilter, %class.SkSpecularLightingImageFilter* %0, i64 0, i32 2
  store float %4, float* %37, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK29SkSpecularLightingImageFilter7flattenER13SkWriteBuffer(%class.SkSpecularLightingImageFilter*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = bitcast %class.SkSpecularLightingImageFilter* %0 to %class.SkImageFilter_Base*
  tail call void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base* %3, %class.SkWriteBuffer* dereferenceable(56) %1) #11
  %4 = getelementptr inbounds %class.SkSpecularLightingImageFilter, %class.SkSpecularLightingImageFilter* %0, i64 0, i32 0, i32 2, i32 0
  %5 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %4, align 8
  %6 = bitcast %class.SkImageFilterLight* %5 to i32 (%class.SkImageFilterLight*)***
  %7 = load i32 (%class.SkImageFilterLight*)**, i32 (%class.SkImageFilterLight*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%class.SkImageFilterLight*)*, i32 (%class.SkImageFilterLight*)** %7, i64 3
  %9 = load i32 (%class.SkImageFilterLight*)*, i32 (%class.SkImageFilterLight*)** %8, align 8
  %10 = tail call i32 %9(%class.SkImageFilterLight* %5) #11
  %11 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %12 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %12, i64 7
  %14 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %13, align 8
  tail call void %14(%class.SkWriteBuffer* %1, i32 %10) #11
  %15 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %5, i64 0, i32 1, i32 0
  %16 = load float, float* %15, align 4
  %17 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, float)***
  %18 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %18, i64 5
  %20 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %19, align 8
  tail call void %20(%class.SkWriteBuffer* %1, float %16) #11
  %21 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %5, i64 0, i32 1, i32 1
  %22 = load float, float* %21, align 4
  %23 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %17, align 8
  %24 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %23, i64 5
  %25 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %24, align 8
  tail call void %25(%class.SkWriteBuffer* %1, float %22) #11
  %26 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %5, i64 0, i32 1, i32 2
  %27 = load float, float* %26, align 4
  %28 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %17, align 8
  %29 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %28, i64 5
  %30 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %29, align 8
  tail call void %30(%class.SkWriteBuffer* %1, float %27) #11
  %31 = bitcast %class.SkImageFilterLight* %5 to void (%class.SkImageFilterLight*, %class.SkWriteBuffer*)***
  %32 = load void (%class.SkImageFilterLight*, %class.SkWriteBuffer*)**, void (%class.SkImageFilterLight*, %class.SkWriteBuffer*)*** %31, align 8
  %33 = getelementptr inbounds void (%class.SkImageFilterLight*, %class.SkWriteBuffer*)*, void (%class.SkImageFilterLight*, %class.SkWriteBuffer*)** %32, i64 9
  %34 = load void (%class.SkImageFilterLight*, %class.SkWriteBuffer*)*, void (%class.SkImageFilterLight*, %class.SkWriteBuffer*)** %33, align 8
  tail call void %34(%class.SkImageFilterLight* %5, %class.SkWriteBuffer* dereferenceable(56) %1) #11
  %35 = getelementptr inbounds %class.SkSpecularLightingImageFilter, %class.SkSpecularLightingImageFilter* %0, i64 0, i32 0, i32 3
  %36 = load float, float* %35, align 8
  %37 = fmul float %36, 2.550000e+02
  %38 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %17, align 8
  %39 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %38, i64 5
  %40 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %39, align 8
  tail call void %40(%class.SkWriteBuffer* %1, float %37) #11
  %41 = getelementptr inbounds %class.SkSpecularLightingImageFilter, %class.SkSpecularLightingImageFilter* %0, i64 0, i32 1
  %42 = load float, float* %41, align 4
  %43 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %17, align 8
  %44 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %43, i64 5
  %45 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %44, align 8
  tail call void %45(%class.SkWriteBuffer* %1, float %42) #11
  %46 = getelementptr inbounds %class.SkSpecularLightingImageFilter, %class.SkSpecularLightingImageFilter* %0, i64 0, i32 2
  %47 = load float, float* %46, align 8
  %48 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %17, align 8
  %49 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %48, i64 5
  %50 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %49, align 8
  tail call void %50(%class.SkWriteBuffer* %1, float %47) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK29SkSpecularLightingImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint(%class.sk_sp.179* noalias sret, %class.SkSpecularLightingImageFilter*, %"class.skif::Context"* dereferenceable(136), %struct.SkIPoint* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.skif::FilterResult", align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %struct.SkIRect*
  %8 = alloca %struct.SkIRect, align 4
  %9 = alloca %class.SkMatrix, align 4
  %10 = alloca %class.SkBitmap, align 8
  %11 = alloca %struct.SkImageInfo, align 16
  %12 = alloca %class.SkBitmap, align 8
  %13 = alloca %class.SpecularLightingType, align 8
  %14 = alloca %class.SkMatrix, align 4
  %15 = alloca { i64, i64 }, align 8
  %16 = bitcast { i64, i64 }* %15 to %struct.SkIRect*
  %17 = bitcast %class.SkSpecularLightingImageFilter* %1 to %class.SkImageFilter_Base*
  %18 = bitcast %"class.skif::FilterResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #11, !noalias !64
  call void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* nonnull sret %5, %class.SkImageFilter_Base* %17, i32 0, %"class.skif::Context"* dereferenceable(136) %2) #11, !noalias !64
  %19 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %5, i64 0, i32 0, i32 0
  %20 = load %class.SkSpecialImage*, %class.SkSpecialImage** %19, align 8, !noalias !67
  %21 = icmp eq %class.SkSpecialImage* %20, null
  br i1 %21, label %39, label %22

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %5, i64 0, i32 1, i32 0
  %24 = bitcast %struct.SkIPoint* %23 to i64*
  %25 = load i64, i64* %24, align 8, !noalias !67
  %26 = trunc i64 %25 to i32
  %27 = lshr i64 %25, 32
  %28 = trunc i64 %27 to i32
  %29 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %20, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 1 monotonic, !noalias !67
  %31 = atomicrmw add i32* %29, i32 -1 acq_rel, !noalias !64
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %41

33:                                               ; preds = %22
  %34 = bitcast %class.SkSpecialImage* %20 to %class.SkRefCntBase*
  %35 = bitcast %class.SkSpecialImage* %20 to void (%class.SkRefCntBase*)***
  %36 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %35, align 8, !noalias !64
  %37 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %36, i64 2
  %38 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, align 8, !noalias !64
  call void %38(%class.SkRefCntBase* nonnull %34) #11, !noalias !64
  br label %41

39:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #11, !noalias !64
  %40 = getelementptr inbounds %class.sk_sp.179, %class.sk_sp.179* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %40, align 8
  br label %268

41:                                               ; preds = %33, %22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #11, !noalias !64
  %42 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #11
  %43 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %44 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %20, i64 0, i32 2, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %20, i64 0, i32 2, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = sub i32 %45, %47
  %49 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %20, i64 0, i32 2, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %20, i64 0, i32 2, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = sub i32 %50, %52
  %54 = shl i64 %25, 32
  %55 = ashr exact i64 %54, 32
  %56 = sext i32 %48 to i64
  %57 = add nsw i64 %55, %56
  %58 = icmp slt i64 %57, 2147483647
  %59 = select i1 %58, i64 %57, i64 2147483647
  %60 = icmp sgt i64 %59, -2147483647
  %61 = select i1 %60, i64 %59, i64 -2147483647
  %62 = ashr i64 %25, 32
  %63 = sext i32 %53 to i64
  %64 = add nsw i64 %62, %63
  %65 = icmp slt i64 %64, 2147483647
  %66 = select i1 %65, i64 %64, i64 2147483647
  %67 = icmp sgt i64 %66, -2147483647
  %68 = select i1 %67, i64 %66, i64 -2147483647
  %69 = shl nsw i64 %68, 32
  %70 = and i64 %61, 4294967295
  %71 = or i64 %69, %70
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %25, i64* %72, align 8
  store i64 %71, i64* %43, align 8
  %73 = bitcast %struct.SkIRect* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #11
  %74 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 0
  %75 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 1
  %76 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 2
  %77 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 3
  %78 = bitcast %struct.SkIRect* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %78, i8 -86, i64 16, i1 false)
  %79 = call zeroext i1 @_ZNK18SkImageFilter_Base13applyCropRectERKN4skif7ContextERK7SkIRectPS4_(%class.SkImageFilter_Base* %17, %"class.skif::Context"* dereferenceable(136) %2, %struct.SkIRect* nonnull dereferenceable(16) %7, %struct.SkIRect* nonnull %8) #11
  br i1 %79, label %82, label %80

80:                                               ; preds = %41
  %81 = getelementptr inbounds %class.sk_sp.179, %class.sk_sp.179* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %81, align 8
  br label %259

82:                                               ; preds = %41
  %83 = load i32, i32* %74, align 4
  %84 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 0
  store i32 %83, i32* %84, align 4
  %85 = load i32, i32* %75, align 4
  %86 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 1
  store i32 %85, i32* %86, align 4
  %87 = sub nsw i32 0, %26
  %88 = sub nsw i32 0, %28
  %89 = sext i32 %83 to i64
  %90 = sext i32 %87 to i64
  %91 = add nsw i64 %89, %90
  %92 = icmp slt i64 %91, 2147483647
  %93 = select i1 %92, i64 %91, i64 2147483647
  %94 = icmp sgt i64 %93, -2147483647
  %95 = select i1 %94, i64 %93, i64 -2147483647
  %96 = trunc i64 %95 to i32
  store i32 %96, i32* %74, align 4
  %97 = sext i32 %85 to i64
  %98 = sext i32 %88 to i64
  %99 = add nsw i64 %97, %98
  %100 = icmp slt i64 %99, 2147483647
  %101 = select i1 %100, i64 %99, i64 2147483647
  %102 = icmp sgt i64 %101, -2147483647
  %103 = select i1 %102, i64 %101, i64 -2147483647
  %104 = trunc i64 %103 to i32
  store i32 %104, i32* %75, align 4
  %105 = load i32, i32* %76, align 4
  %106 = sext i32 %105 to i64
  %107 = add nsw i64 %106, %90
  %108 = icmp slt i64 %107, 2147483647
  %109 = select i1 %108, i64 %107, i64 2147483647
  %110 = icmp sgt i64 %109, -2147483647
  %111 = select i1 %110, i64 %109, i64 -2147483647
  %112 = trunc i64 %111 to i32
  store i32 %112, i32* %76, align 4
  %113 = load i32, i32* %77, align 4
  %114 = sext i32 %113 to i64
  %115 = add nsw i64 %114, %98
  %116 = icmp slt i64 %115, 2147483647
  %117 = select i1 %116, i64 %115, i64 2147483647
  %118 = icmp sgt i64 %117, -2147483647
  %119 = select i1 %118, i64 %117, i64 -2147483647
  %120 = trunc i64 %119 to i32
  store i32 %120, i32* %77, align 4
  %121 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 5, i32 0, i32 0
  %122 = load %class.SkSpecialImage*, %class.SkSpecialImage** %121, align 8
  %123 = call zeroext i1 @_ZNK14SkSpecialImage15isTextureBackedEv(%class.SkSpecialImage* %122) #11
  br i1 %123, label %124, label %136

124:                                              ; preds = %82
  %125 = bitcast %class.SkMatrix* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %125) #11
  %126 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1
  %127 = bitcast %class.SkMatrix* %126 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %125, i8* align 4 %127, i64 40, i1 false)
  %128 = load i32, i32* %84, align 4
  %129 = sub nsw i32 0, %128
  %130 = sitofp i32 %129 to float
  %131 = load i32, i32* %86, align 4
  %132 = sub nsw i32 0, %131
  %133 = sitofp i32 %132 to float
  %134 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %9, float %130, float %133) #11
  %135 = bitcast %class.SkSpecularLightingImageFilter* %1 to %class.SkLightingImageFilterInternal*
  call void @_ZNK29SkLightingImageFilterInternal14filterImageGPUERKN4skif7ContextEP14SkSpecialImageRK7SkIRectRK8SkMatrix(%class.sk_sp.179* sret %0, %class.SkLightingImageFilterInternal* %135, %"class.skif::Context"* dereferenceable(136) %2, %class.SkSpecialImage* nonnull %20, %struct.SkIRect* nonnull dereferenceable(16) %8, %class.SkMatrix* nonnull dereferenceable(40) %9)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %125) #11
  br label %259

136:                                              ; preds = %82
  %137 = load i32, i32* %76, align 4
  %138 = load i32, i32* %74, align 4
  %139 = sub i32 %137, %138
  %140 = icmp slt i32 %139, 2
  br i1 %140, label %146, label %141

141:                                              ; preds = %136
  %142 = load i32, i32* %77, align 4
  %143 = load i32, i32* %75, align 4
  %144 = sub i32 %142, %143
  %145 = icmp slt i32 %144, 2
  br i1 %145, label %146, label %148

146:                                              ; preds = %141, %136
  %147 = getelementptr inbounds %class.sk_sp.179, %class.sk_sp.179* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %147, align 8
  br label %259

148:                                              ; preds = %141
  %149 = bitcast %class.SkBitmap* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %149) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %149, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %10) #11
  %150 = call zeroext i1 @_ZNK14SkSpecialImage11getROPixelsEP8SkBitmap(%class.SkSpecialImage* nonnull %20, %class.SkBitmap* nonnull %10) #11
  br i1 %150, label %153, label %151

151:                                              ; preds = %148
  %152 = getelementptr inbounds %class.sk_sp.179, %class.sk_sp.179* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %152, align 8
  br label %258

153:                                              ; preds = %148
  %154 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %10, i64 0, i32 1, i32 2, i32 0, i32 1
  %155 = load i32, i32* %154, align 8
  %156 = icmp eq i32 %155, 6
  br i1 %156, label %159, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %class.sk_sp.179, %class.sk_sp.179* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %158, align 8
  br label %258

159:                                              ; preds = %153
  %160 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %10, i64 0, i32 1, i32 0
  %161 = load i8*, i8** %160, align 8
  %162 = icmp eq i8* %161, null
  br i1 %162, label %163, label %165

163:                                              ; preds = %159
  %164 = getelementptr inbounds %class.sk_sp.179, %class.sk_sp.179* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %164, align 8
  br label %258

165:                                              ; preds = %159
  %166 = bitcast %struct.SkImageInfo* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %166) #11
  %167 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %11, i64 0, i32 0, i32 0, i32 0
  %168 = load i32, i32* %76, align 4
  %169 = load i32, i32* %74, align 4
  %170 = sub i32 %168, %169
  %171 = load i32, i32* %77, align 4
  %172 = load i32, i32* %75, align 4
  %173 = sub i32 %171, %172
  %174 = zext i32 %173 to i64
  %175 = shl nuw i64 %174, 32
  %176 = zext i32 %170 to i64
  %177 = or i64 %175, %176
  %178 = bitcast %struct.SkImageInfo* %11 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* %178, align 16, !alias.scope !70
  %179 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %11, i64 0, i32 1
  %180 = bitcast %struct.SkISize* %179 to i64*
  store i64 %177, i64* %180, align 16, !alias.scope !70
  %181 = bitcast %class.SkBitmap* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %181) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %181, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %12) #11
  %182 = sext i32 %170 to i64
  %183 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %11, i64 0, i32 0
  %184 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %183) #11
  %185 = sext i32 %184 to i64
  %186 = mul nsw i64 %185, %182
  %187 = icmp ult i64 %186, 2147483648
  %188 = select i1 %187, i64 %186, i64 0
  %189 = call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* nonnull %12, %struct.SkImageInfo* nonnull dereferenceable(24) %11, i64 %188) #11
  br i1 %189, label %192, label %190

190:                                              ; preds = %165
  %191 = getelementptr inbounds %class.sk_sp.179, %class.sk_sp.179* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %191, align 8
  br label %248

192:                                              ; preds = %165
  %193 = bitcast %class.SpecularLightingType* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %193) #11
  %194 = getelementptr inbounds %class.SpecularLightingType, %class.SpecularLightingType* %13, i64 0, i32 0, i32 0
  %195 = getelementptr inbounds %class.SpecularLightingType, %class.SpecularLightingType* %13, i64 0, i32 1
  %196 = getelementptr inbounds %class.SpecularLightingType, %class.SpecularLightingType* %13, i64 0, i32 2
  %197 = getelementptr inbounds %class.SkSpecularLightingImageFilter, %class.SkSpecularLightingImageFilter* %1, i64 0, i32 1
  %198 = bitcast float* %197 to i32*
  %199 = load i32, i32* %198, align 4
  %200 = getelementptr inbounds %class.SkSpecularLightingImageFilter, %class.SkSpecularLightingImageFilter* %1, i64 0, i32 2
  %201 = bitcast float* %200 to i32*
  %202 = load i32, i32* %201, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV20SpecularLightingType, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %194, align 8
  %203 = bitcast float* %195 to i32*
  store i32 %199, i32* %203, align 8
  %204 = bitcast float* %196 to i32*
  store i32 %202, i32* %204, align 4
  %205 = bitcast %class.SkMatrix* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %205) #11
  %206 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1
  %207 = bitcast %class.SkMatrix* %206 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %205, i8* align 4 %207, i64 40, i1 false)
  %208 = sitofp i32 %87 to float
  %209 = sitofp i32 %88 to float
  %210 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %14, float %208, float %209) #11
  %211 = getelementptr inbounds %class.SkSpecularLightingImageFilter, %class.SkSpecularLightingImageFilter* %1, i64 0, i32 0, i32 2, i32 0
  %212 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %211, align 8
  %213 = bitcast %class.SkImageFilterLight* %212 to %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)***
  %214 = load %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)**, %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)*** %213, align 8
  %215 = getelementptr inbounds %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)*, %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)** %214, i64 6
  %216 = load %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)*, %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)** %215, align 8
  %217 = call %class.SkImageFilterLight* %216(%class.SkImageFilterLight* %212, %class.SkMatrix* nonnull dereferenceable(40) %14) #11
  %218 = getelementptr inbounds %class.SpecularLightingType, %class.SpecularLightingType* %13, i64 0, i32 0
  %219 = getelementptr inbounds %class.SkSpecularLightingImageFilter, %class.SkSpecularLightingImageFilter* %1, i64 0, i32 0, i32 3
  %220 = load float, float* %219, align 8
  call fastcc void @_ZL11lightBitmapRK16BaseLightingTypePK18SkImageFilterLightRK8SkBitmapPS5_fRK7SkIRect(%class.BaseLightingType* nonnull dereferenceable(8) %218, %class.SkImageFilterLight* %217, %class.SkBitmap* nonnull dereferenceable(56) %10, %class.SkBitmap* nonnull %12, float %220, %struct.SkIRect* nonnull dereferenceable(16) %8)
  %221 = bitcast { i64, i64 }* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %221) #11
  %222 = load i32, i32* %76, align 4
  %223 = load i32, i32* %74, align 4
  %224 = sub i32 %222, %223
  %225 = load i32, i32* %77, align 4
  %226 = load i32, i32* %75, align 4
  %227 = sub i32 %225, %226
  %228 = zext i32 %227 to i64
  %229 = shl nuw i64 %228, 32
  %230 = zext i32 %224 to i64
  %231 = or i64 %229, %230
  %232 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 0
  store i64 0, i64* %232, align 8
  %233 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 1
  store i64 %231, i64* %233, align 8
  %234 = load %class.SkSpecialImage*, %class.SkSpecialImage** %121, align 8
  %235 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %234, i64 0, i32 1
  call void @_ZN14SkSpecialImage14MakeFromRasterERK7SkIRectRK8SkBitmapRK14SkSurfaceProps(%class.sk_sp.179* sret %0, %struct.SkIRect* nonnull dereferenceable(16) %16, %class.SkBitmap* nonnull dereferenceable(56) %12, %class.SkSurfaceProps* dereferenceable(8) %235) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %221) #11
  %236 = icmp eq %class.SkImageFilterLight* %217, null
  br i1 %236, label %247, label %237

237:                                              ; preds = %192
  %238 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %217, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %239 = atomicrmw add i32* %238, i32 -1 acq_rel
  %240 = icmp eq i32 %239, 1
  br i1 %240, label %241, label %247

241:                                              ; preds = %237
  %242 = bitcast %class.SkImageFilterLight* %217 to %class.SkRefCntBase*
  %243 = bitcast %class.SkImageFilterLight* %217 to void (%class.SkRefCntBase*)***
  %244 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %243, align 8
  %245 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %244, i64 2
  %246 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %245, align 8
  call void %246(%class.SkRefCntBase* nonnull %242) #11
  br label %247

247:                                              ; preds = %192, %237, %241
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %205) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %193) #11
  br label %248

248:                                              ; preds = %247, %190
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %181) #11
  %249 = load %class.SkColorSpace*, %class.SkColorSpace** %167, align 16
  %250 = icmp eq %class.SkColorSpace* %249, null
  br i1 %250, label %257, label %251

251:                                              ; preds = %248
  %252 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %249, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = atomicrmw add i32* %252, i32 -1 acq_rel
  %254 = icmp eq i32 %253, 1
  br i1 %254, label %255, label %257

255:                                              ; preds = %251
  %256 = bitcast %class.SkColorSpace* %249 to i8*
  call void @_ZdlPv(i8* %256) #14
  br label %257

257:                                              ; preds = %248, %251, %255
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %166) #11
  br label %258

258:                                              ; preds = %257, %163, %157, %151
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %149) #11
  br label %259

259:                                              ; preds = %258, %146, %124, %80
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #11
  %260 = atomicrmw add i32* %29, i32 -1 acq_rel
  %261 = icmp eq i32 %260, 1
  br i1 %261, label %262, label %268

262:                                              ; preds = %259
  %263 = bitcast %class.SkSpecialImage* %20 to %class.SkRefCntBase*
  %264 = bitcast %class.SkSpecialImage* %20 to void (%class.SkRefCntBase*)***
  %265 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %264, align 8
  %266 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %265, i64 2
  %267 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %266, align 8
  call void %267(%class.SkRefCntBase* nonnull %263) #11
  br label %268

268:                                              ; preds = %39, %259, %262
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZNK29SkSpecularLightingImageFilter21makeFragmentProcessorE18GrSurfaceProxyViewRK8SkMatrixPK7SkIRect12BoundaryModeRK6GrCaps(%class.SkSpecularLightingImageFilter* nocapture readonly, %class.GrSurfaceProxyView* nocapture, %class.SkMatrix* nocapture readonly dereferenceable(40), %struct.SkIRect* readonly, i32, %class.GrCaps* dereferenceable(232)) unnamed_addr #0 align 2 {
  %7 = alloca %class.GrSurfaceProxyView, align 8
  %8 = alloca %class.sk_sp.209, align 8
  %9 = getelementptr inbounds %class.SkSpecularLightingImageFilter, %class.SkSpecularLightingImageFilter* %0, i64 0, i32 0, i32 3
  %10 = load float, float* %9, align 8
  %11 = fmul float %10, 2.550000e+02
  %12 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 0, i32 0
  %13 = bitcast %class.GrSurfaceProxyView* %1 to i64*
  %14 = load i64, i64* %13, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %12, align 8
  %15 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 2, i32 0
  %18 = load i16, i16* %17, align 2
  %19 = getelementptr inbounds %class.SkSpecularLightingImageFilter, %class.SkSpecularLightingImageFilter* %0, i64 0, i32 0, i32 2, i32 0
  %20 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %19, align 8, !noalias !75
  %21 = icmp eq %class.SkImageFilterLight* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %6
  %23 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %20, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 1 monotonic, !noalias !75
  br label %25

25:                                               ; preds = %6, %22
  %26 = ptrtoint %class.SkImageFilterLight* %20 to i64
  %27 = getelementptr inbounds %class.SkSpecularLightingImageFilter, %class.SkSpecularLightingImageFilter* %0, i64 0, i32 1
  %28 = bitcast float* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %class.SkSpecularLightingImageFilter, %class.SkSpecularLightingImageFilter* %0, i64 0, i32 2
  %31 = bitcast float* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = tail call i8* @_ZN11GrProcessornwEm(i64 128) #11
  %34 = bitcast %class.GrSurfaceProxyView* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #11
  %35 = bitcast %class.sk_sp.209* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  %36 = bitcast i8* %33 to %class.GrLightingEffect*
  %37 = bitcast %class.GrSurfaceProxyView* %7 to i64*
  store i64 %14, i64* %37, align 8
  %38 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %7, i64 0, i32 1
  store i32 %16, i32* %38, align 8
  %39 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %7, i64 0, i32 2, i32 0
  store i16 %18, i16* %39, align 4
  %40 = bitcast %class.sk_sp.209* %8 to i64*
  store i64 %26, i64* %40, align 8
  call void @_ZN16GrLightingEffectC2EN11GrProcessor7ClassIDE18GrSurfaceProxyView5sk_spIK18SkImageFilterLightEfRK8SkMatrix12BoundaryModePK7SkIRectRK6GrCaps(%class.GrLightingEffect* %36, i32 77, %class.GrSurfaceProxyView* nonnull %7, %class.sk_sp.209* nonnull %8, float %11, %class.SkMatrix* dereferenceable(40) %2, i32 %4, %struct.SkIRect* %3, %class.GrCaps* dereferenceable(232) %5) #11
  %41 = getelementptr inbounds %class.sk_sp.209, %class.sk_sp.209* %8, i64 0, i32 0
  %42 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %41, align 8
  %43 = icmp eq %class.SkImageFilterLight* %42, null
  br i1 %43, label %54, label %44

44:                                               ; preds = %25
  %45 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %42, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 -1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %54

48:                                               ; preds = %44
  %49 = bitcast %class.SkImageFilterLight* %42 to %class.SkRefCntBase*
  %50 = bitcast %class.SkImageFilterLight* %42 to void (%class.SkRefCntBase*)***
  %51 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %50, align 8
  %52 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, i64 2
  %53 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, align 8
  tail call void %53(%class.SkRefCntBase* nonnull %49) #11
  br label %54

54:                                               ; preds = %48, %44, %25
  %55 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %7, i64 0, i32 0, i32 0
  %56 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %55, align 8
  %57 = icmp eq %class.GrSurfaceProxy* %56, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %56, i64 0, i32 1
  %60 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i32* %60, i32 -1 acq_rel
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %70

63:                                               ; preds = %58
  %64 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %59, i64 -2
  %65 = bitcast %class.SkNVRefCnt* %64 to %class.GrSurfaceProxy*
  %66 = bitcast %class.SkNVRefCnt* %64 to void (%class.GrSurfaceProxy*)***
  %67 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %66, align 8
  %68 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %67, i64 1
  %69 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %68, align 8
  tail call void %69(%class.GrSurfaceProxy* nonnull %65) #11
  br label %70

70:                                               ; preds = %54, %58, %63
  %71 = bitcast i8* %33 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV24GrSpecularLightingEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8
  %72 = getelementptr inbounds i8, i8* %33, i64 120
  %73 = bitcast i8* %72 to i32*
  store i32 %29, i32* %73, align 8
  %74 = getelementptr inbounds i8, i8* %33, i64 124
  %75 = bitcast i8* %74 to i32*
  store i32 %32, i32* %75, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  %76 = bitcast i8* %33 to %class.GrFragmentProcessor*
  ret %class.GrFragmentProcessor* %76
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrLightingEffectC2EN11GrProcessor7ClassIDE18GrSurfaceProxyView5sk_spIK18SkImageFilterLightEfRK8SkMatrix12BoundaryModePK7SkIRectRK6GrCaps(%class.GrLightingEffect*, i32, %class.GrSurfaceProxyView* nocapture, %class.sk_sp.209* nocapture, float, %class.SkMatrix* nocapture readonly dereferenceable(40), i32, %struct.SkIRect* readonly, %class.GrCaps* dereferenceable(232)) unnamed_addr #0 align 2 {
  %10 = alloca %class.GrSurfaceProxyView, align 8
  %11 = alloca { <2 x float>, <2 x float> }, align 8
  %12 = alloca %class.GrSurfaceProxyView, align 8
  %13 = bitcast %class.GrLightingEffect* %0 to %class.GrFragmentProcessor*
  %14 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %1, i32* %15, align 8
  %16 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 0, i32 1, i32 1
  %18 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %19 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %20 = bitcast %class.SkTArray.127* %17 to i8**
  store i8* %18, i8** %20, align 8
  store i64 8589934592, i64* %19, align 8
  %21 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 0, i32 2
  %22 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 0, i32 3
  %23 = bitcast %class.GrFragmentProcessor** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 17, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV16GrLightingEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %24 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 1
  %25 = getelementptr inbounds %class.sk_sp.209, %class.sk_sp.209* %3, i64 0, i32 0
  %26 = bitcast %class.sk_sp.209* %3 to i64*
  %27 = load i64, i64* %26, align 8
  store %class.SkImageFilterLight* null, %class.SkImageFilterLight** %25, align 8
  %28 = bitcast %class.sk_sp.209* %24 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 2
  store float %4, float* %29, align 8
  %30 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 3
  %31 = bitcast %class.SkMatrix* %30 to i8*
  %32 = bitcast %class.SkMatrix* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 40, i1 false)
  %33 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 4
  store i32 %6, i32* %33, align 4
  %34 = icmp eq %struct.SkIRect* %7, null
  br i1 %34, label %84, label %35

35:                                               ; preds = %9
  %36 = bitcast { <2 x float>, <2 x float> }* %11 to %struct.SkRect*
  %37 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 0, i32 0
  %38 = bitcast %class.GrSurfaceProxyView* %2 to i64*
  %39 = load i64, i64* %38, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %37, align 8
  %40 = bitcast %class.GrSurfaceProxyView* %10 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 1
  %42 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  store i32 %43, i32* %41, align 8
  %44 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 2, i32 0
  %45 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 2, i32 0
  %46 = load i16, i16* %45, align 2
  store i16 %46, i16* %44, align 4
  %47 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #11
  %48 = bitcast { <2 x float>, <2 x float> }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #11
  %49 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = sitofp i32 %50 to float
  %52 = insertelement <2 x float> undef, float %51, i32 0
  %53 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = sitofp i32 %54 to float
  %56 = insertelement <2 x float> %52, float %55, i32 1
  %57 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = sitofp i32 %58 to float
  %60 = insertelement <2 x float> undef, float %59, i32 0
  %61 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 3
  %62 = load i32, i32* %61, align 4
  %63 = sitofp i32 %62 to float
  %64 = insertelement <2 x float> %60, float %63, i32 1
  %65 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 0
  store <2 x float> %56, <2 x float>* %65, align 8
  %66 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 1
  store <2 x float> %64, <2 x float>* %66, align 8
  %67 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect10MakeSubsetE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6SkRectRK6GrCapsPKfb(%class.GrSurfaceProxyView* nonnull %10, i32 2, %class.SkMatrix* dereferenceable(40) %47, i64 771, i32 0, %struct.SkRect* nonnull dereferenceable(16) %36, %class.GrCaps* dereferenceable(232) %8, float* getelementptr inbounds ([4 x float], [4 x float]* @_ZN15GrTextureEffect14kDefaultBorderE, i64 0, i64 0), i1 zeroext false) #11
  %68 = ptrtoint %class.GrFragmentProcessor* %67 to i64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #11
  %69 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 0, i32 0
  %70 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %69, align 8
  %71 = icmp eq %class.GrSurfaceProxy* %70, null
  br i1 %71, label %113, label %72

72:                                               ; preds = %35
  %73 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %70, i64 0, i32 1
  %74 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw add i32* %74, i32 -1 acq_rel
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %77, label %113

77:                                               ; preds = %72
  %78 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %73, i64 -2
  %79 = bitcast %class.SkNVRefCnt* %78 to %class.GrSurfaceProxy*
  %80 = bitcast %class.SkNVRefCnt* %78 to void (%class.GrSurfaceProxy*)***
  %81 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %80, align 8
  %82 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %81, i64 1
  %83 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %82, align 8
  call void %83(%class.GrSurfaceProxy* nonnull %79) #11
  br label %113

84:                                               ; preds = %9
  %85 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 0, i32 0
  %86 = bitcast %class.GrSurfaceProxyView* %2 to i64*
  %87 = load i64, i64* %86, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %85, align 8
  %88 = bitcast %class.GrSurfaceProxyView* %12 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 1
  %90 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 1
  %91 = load i32, i32* %90, align 8
  store i32 %91, i32* %89, align 8
  %92 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 2, i32 0
  %93 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 2, i32 0
  %94 = load i16, i16* %93, align 2
  store i16 %94, i16* %92, align 4
  %95 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #11
  %96 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6GrCapsPKf(%class.GrSurfaceProxyView* nonnull %12, i32 2, %class.SkMatrix* dereferenceable(40) %95, i64 771, i32 0, %class.GrCaps* dereferenceable(232) %8, float* getelementptr inbounds ([4 x float], [4 x float]* @_ZN15GrTextureEffect14kDefaultBorderE, i64 0, i64 0)) #11
  %97 = ptrtoint %class.GrFragmentProcessor* %96 to i64
  %98 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 0, i32 0
  %99 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %98, align 8
  %100 = icmp eq %class.GrSurfaceProxy* %99, null
  br i1 %100, label %113, label %101

101:                                              ; preds = %84
  %102 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %99, i64 0, i32 1
  %103 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = atomicrmw add i32* %103, i32 -1 acq_rel
  %105 = icmp eq i32 %104, 1
  br i1 %105, label %106, label %113

106:                                              ; preds = %101
  %107 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %102, i64 -2
  %108 = bitcast %class.SkNVRefCnt* %107 to %class.GrSurfaceProxy*
  %109 = bitcast %class.SkNVRefCnt* %107 to void (%class.GrSurfaceProxy*)***
  %110 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %109, align 8
  %111 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %110, i64 1
  %112 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %111, align 8
  call void %112(%class.GrSurfaceProxy* nonnull %108) #11
  br label %113

113:                                              ; preds = %35, %72, %77, %84, %101, %106
  %114 = phi i64 [ %68, %35 ], [ %68, %72 ], [ %68, %77 ], [ %97, %84 ], [ %97, %101 ], [ %97, %106 ]
  %115 = inttoptr i64 %114 to %class.GrFragmentProcessor*
  call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %13, %class.GrFragmentProcessor* %115, i64 3) #11
  %116 = load i32, i32* %22, align 8
  %117 = or i32 %116, 16
  store i32 %117, i32* %22, align 8
  ret void
}

declare %class.GrFragmentProcessor* @_ZN15GrTextureEffect10MakeSubsetE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6SkRectRK6GrCapsPKfb(%class.GrSurfaceProxyView*, i32, %class.SkMatrix* dereferenceable(40), i64, i32, %struct.SkRect* dereferenceable(16), %class.GrCaps* dereferenceable(232), float*, i1 zeroext) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6GrCapsPKf(%class.GrSurfaceProxyView*, i32, %class.SkMatrix* dereferenceable(40), i64, i32, %class.GrCaps* dereferenceable(232), float*) local_unnamed_addr #2

declare void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor*, %class.GrFragmentProcessor*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrLightingEffectC2ERKS_(%class.GrLightingEffect*, %class.GrLightingEffect* dereferenceable(120)) unnamed_addr #0 align 2 {
  %3 = bitcast %class.GrLightingEffect* %0 to %class.GrFragmentProcessor*
  %4 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %1, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = bitcast %class.GrLightingEffect* %1 to %class.GrFragmentProcessor*
  %7 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %1, i64 0, i32 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 7
  %10 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %5, i32* %11, align 8
  %12 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 0, i32 1, i32 1
  %14 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %15 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %16 = bitcast %class.SkTArray.127* %13 to i8**
  store i8* %14, i8** %16, align 8
  store i64 8589934592, i64* %15, align 8
  %17 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 0, i32 2
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %17, align 8
  %18 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 0, i32 3
  store i32 %9, i32* %18, align 8
  %19 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 0, i32 4, i32 0
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 0, i32 4, i32 1
  store i8 0, i8* %20, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV16GrLightingEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %21 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %1, i64 0, i32 1, i32 0
  %23 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %22, align 8
  %24 = icmp eq %class.SkImageFilterLight* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %23, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 1 monotonic
  br label %28

28:                                               ; preds = %2, %25
  store %class.SkImageFilterLight* %23, %class.SkImageFilterLight** %21, align 8
  %29 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 2
  %30 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %1, i64 0, i32 2
  %31 = bitcast float* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = bitcast float* %29 to i32*
  store i32 %32, i32* %33, align 8
  %34 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 3
  %35 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %1, i64 0, i32 3
  %36 = bitcast %class.SkMatrix* %34 to i8*
  %37 = bitcast %class.SkMatrix* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 40, i1 false)
  %38 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 4
  %39 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %1, i64 0, i32 4
  %40 = load i32, i32* %39, align 4
  store i32 %40, i32* %38, align 4
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %6) #11
  %41 = load i32, i32* %18, align 8
  %42 = or i32 %41, 16
  store i32 %42, i32* %18, align 8
  ret void
}

declare void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor*, %class.GrFragmentProcessor* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK16GrLightingEffect9onIsEqualERK19GrFragmentProcessor(%class.GrLightingEffect* nocapture readonly, %class.GrFragmentProcessor* nocapture readonly dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %3, align 8
  %5 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1
  %6 = bitcast %class.GrFragmentProcessor* %5 to %class.SkImageFilterLight**
  %7 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %6, align 8
  %8 = bitcast %class.SkImageFilterLight* %4 to i1 (%class.SkImageFilterLight*, %class.SkImageFilterLight*)***
  %9 = load i1 (%class.SkImageFilterLight*, %class.SkImageFilterLight*)**, i1 (%class.SkImageFilterLight*, %class.SkImageFilterLight*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%class.SkImageFilterLight*, %class.SkImageFilterLight*)*, i1 (%class.SkImageFilterLight*, %class.SkImageFilterLight*)** %9, i64 5
  %11 = load i1 (%class.SkImageFilterLight*, %class.SkImageFilterLight*)*, i1 (%class.SkImageFilterLight*, %class.SkImageFilterLight*)** %10, align 8
  %12 = tail call zeroext i1 %11(%class.SkImageFilterLight* %4, %class.SkImageFilterLight* dereferenceable(24) %7) #11
  br i1 %12, label %13, label %26

13:                                               ; preds = %2
  %14 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 2
  %15 = load float, float* %14, align 8
  %16 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 0, i32 1
  %17 = bitcast i32* %16 to float*
  %18 = load float, float* %17, align 8
  %19 = fcmp oeq float %15, %18
  br i1 %19, label %20, label %26

20:                                               ; preds = %13
  %21 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 4
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 4, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br label %26

26:                                               ; preds = %20, %13, %2
  %27 = phi i1 [ false, %13 ], [ false, %2 ], [ %25, %20 ]
  ret i1 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23GrDiffuseLightingEffectC2E18GrSurfaceProxyView5sk_spIK18SkImageFilterLightEfRK8SkMatrixf12BoundaryModePK7SkIRectRK6GrCaps(%class.GrDiffuseLightingEffect*, %class.GrSurfaceProxyView* nocapture, %class.sk_sp.209* nocapture, float, %class.SkMatrix* nocapture readonly dereferenceable(40), float, i32, %struct.SkIRect* readonly, %class.GrCaps* dereferenceable(232)) unnamed_addr #0 align 2 {
  %10 = alloca %class.GrSurfaceProxyView, align 8
  %11 = alloca %class.sk_sp.209, align 8
  %12 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 0
  %13 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 0, i32 0
  %14 = bitcast %class.GrSurfaceProxyView* %1 to i64*
  %15 = load i64, i64* %14, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %13, align 8
  %16 = bitcast %class.GrSurfaceProxyView* %10 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 1
  %18 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %17, align 8
  %20 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 2, i32 0
  %21 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 2, i32 0
  %22 = load i16, i16* %21, align 2
  store i16 %22, i16* %20, align 4
  %23 = getelementptr inbounds %class.sk_sp.209, %class.sk_sp.209* %2, i64 0, i32 0
  %24 = bitcast %class.sk_sp.209* %2 to i64*
  %25 = load i64, i64* %24, align 8
  store %class.SkImageFilterLight* null, %class.SkImageFilterLight** %23, align 8
  %26 = bitcast %class.sk_sp.209* %11 to i64*
  store i64 %25, i64* %26, align 8
  call void @_ZN16GrLightingEffectC2EN11GrProcessor7ClassIDE18GrSurfaceProxyView5sk_spIK18SkImageFilterLightEfRK8SkMatrix12BoundaryModePK7SkIRectRK6GrCaps(%class.GrLightingEffect* %12, i32 38, %class.GrSurfaceProxyView* nonnull %10, %class.sk_sp.209* nonnull %11, float %3, %class.SkMatrix* dereferenceable(40) %4, i32 %6, %struct.SkIRect* %7, %class.GrCaps* dereferenceable(232) %8)
  %27 = getelementptr inbounds %class.sk_sp.209, %class.sk_sp.209* %11, i64 0, i32 0
  %28 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %27, align 8
  %29 = icmp eq %class.SkImageFilterLight* %28, null
  br i1 %29, label %40, label %30

30:                                               ; preds = %9
  %31 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %28, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = bitcast %class.SkImageFilterLight* %28 to %class.SkRefCntBase*
  %36 = bitcast %class.SkImageFilterLight* %28 to void (%class.SkRefCntBase*)***
  %37 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, i64 2
  %39 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, align 8
  tail call void %39(%class.SkRefCntBase* nonnull %35) #11
  br label %40

40:                                               ; preds = %9, %30, %34
  %41 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 0, i32 0
  %42 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %41, align 8
  %43 = icmp eq %class.GrSurfaceProxy* %42, null
  br i1 %43, label %56, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %42, i64 0, i32 1
  %46 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 -1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %56

49:                                               ; preds = %44
  %50 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %45, i64 -2
  %51 = bitcast %class.SkNVRefCnt* %50 to %class.GrSurfaceProxy*
  %52 = bitcast %class.SkNVRefCnt* %50 to void (%class.GrSurfaceProxy*)***
  %53 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %52, align 8
  %54 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %53, i64 1
  %55 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %54, align 8
  tail call void %55(%class.GrSurfaceProxy* nonnull %51) #11
  br label %56

56:                                               ; preds = %40, %44, %49
  %57 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV23GrDiffuseLightingEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %58 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 1
  store float %5, float* %58, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23GrDiffuseLightingEffectC2ERKS_(%class.GrDiffuseLightingEffect*, %class.GrDiffuseLightingEffect* dereferenceable(128)) unnamed_addr #0 align 2 {
  %3 = bitcast %class.GrDiffuseLightingEffect* %0 to %class.GrFragmentProcessor*
  %4 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = bitcast %class.GrDiffuseLightingEffect* %1 to %class.GrFragmentProcessor*
  %7 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %1, i64 0, i32 0, i32 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 7
  %10 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 %5, i32* %11, align 8
  %12 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 0, i32 0, i32 1, i32 1
  %14 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %15 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 1
  %16 = bitcast %class.SkTArray.127* %13 to i8**
  store i8* %14, i8** %16, align 8
  store i64 8589934592, i64* %15, align 8
  %17 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 0, i32 0, i32 2
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %17, align 8
  %18 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 0, i32 0, i32 3
  store i32 %9, i32* %18, align 8
  %19 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 0, i32 0, i32 4, i32 0
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 0, i32 0, i32 4, i32 1
  store i8 0, i8* %20, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV16GrLightingEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %21 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 0, i32 1, i32 0
  %22 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %1, i64 0, i32 0, i32 1, i32 0
  %23 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %22, align 8
  %24 = icmp eq %class.SkImageFilterLight* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %23, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 1 monotonic
  br label %28

28:                                               ; preds = %2, %25
  store %class.SkImageFilterLight* %23, %class.SkImageFilterLight** %21, align 8
  %29 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 0, i32 2
  %30 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %1, i64 0, i32 0, i32 2
  %31 = bitcast float* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = bitcast float* %29 to i32*
  store i32 %32, i32* %33, align 8
  %34 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 0, i32 3
  %35 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %1, i64 0, i32 0, i32 3
  %36 = bitcast %class.SkMatrix* %34 to i8*
  %37 = bitcast %class.SkMatrix* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 40, i1 false) #11
  %38 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 0, i32 4
  %39 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %1, i64 0, i32 0, i32 4
  %40 = load i32, i32* %39, align 4
  store i32 %40, i32* %38, align 4
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %6) #11
  %41 = load i32, i32* %18, align 8
  %42 = or i32 %41, 16
  store i32 %42, i32* %18, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV23GrDiffuseLightingEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %43 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 1
  %44 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %1, i64 0, i32 1
  %45 = bitcast float* %44 to i32*
  %46 = load i32, i32* %45, align 8
  %47 = bitcast float* %43 to i32*
  store i32 %46, i32* %47, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK23GrDiffuseLightingEffect9onIsEqualERK19GrFragmentProcessor(%class.GrDiffuseLightingEffect* nocapture readonly, %class.GrFragmentProcessor* nocapture readonly dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 0, i32 1, i32 0
  %4 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %3, align 8
  %5 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1
  %6 = bitcast %class.GrFragmentProcessor* %5 to %class.SkImageFilterLight**
  %7 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %6, align 8
  %8 = bitcast %class.SkImageFilterLight* %4 to i1 (%class.SkImageFilterLight*, %class.SkImageFilterLight*)***
  %9 = load i1 (%class.SkImageFilterLight*, %class.SkImageFilterLight*)**, i1 (%class.SkImageFilterLight*, %class.SkImageFilterLight*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%class.SkImageFilterLight*, %class.SkImageFilterLight*)*, i1 (%class.SkImageFilterLight*, %class.SkImageFilterLight*)** %9, i64 5
  %11 = load i1 (%class.SkImageFilterLight*, %class.SkImageFilterLight*)*, i1 (%class.SkImageFilterLight*, %class.SkImageFilterLight*)** %10, align 8
  %12 = tail call zeroext i1 %11(%class.SkImageFilterLight* %4, %class.SkImageFilterLight* dereferenceable(24) %7) #11
  br i1 %12, label %13, label %33

13:                                               ; preds = %2
  %14 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 0, i32 2
  %15 = load float, float* %14, align 8
  %16 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 0, i32 1
  %17 = bitcast i32* %16 to float*
  %18 = load float, float* %17, align 8
  %19 = fcmp oeq float %15, %18
  br i1 %19, label %20, label %33

20:                                               ; preds = %13
  %21 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 0, i32 4
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 4, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %26, label %33

26:                                               ; preds = %20
  %27 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 1
  %28 = load float, float* %27, align 8
  %29 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 4, i32 1
  %30 = bitcast i8* %29 to float*
  %31 = load float, float* %30, align 8
  %32 = fcmp oeq float %28, %31
  br label %33

33:                                               ; preds = %2, %13, %26, %20
  %34 = phi i1 [ false, %20 ], [ %32, %26 ], [ false, %13 ], [ false, %2 ]
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK23GrDiffuseLightingEffect21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%class.GrDiffuseLightingEffect* nocapture readonly, %class.GrShaderCaps* nocapture readnone dereferenceable(144), %class.GrProcessorKeyBuilder*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 0, i32 4
  %6 = load i32, i32* %5, align 4
  %7 = shl i32 %6, 2
  %8 = getelementptr inbounds %class.GrProcessor, %class.GrProcessor* %4, i64 4
  %9 = bitcast %class.GrProcessor* %8 to %class.SkImageFilterLight**
  %10 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %9, align 8
  %11 = bitcast %class.SkImageFilterLight* %10 to i32 (%class.SkImageFilterLight*)***
  %12 = load i32 (%class.SkImageFilterLight*)**, i32 (%class.SkImageFilterLight*)*** %11, align 8
  %13 = getelementptr inbounds i32 (%class.SkImageFilterLight*)*, i32 (%class.SkImageFilterLight*)** %12, i64 3
  %14 = load i32 (%class.SkImageFilterLight*)*, i32 (%class.SkImageFilterLight*)** %13, align 8
  %15 = tail call i32 %14(%class.SkImageFilterLight* %10) #11
  %16 = or i32 %15, %7
  %17 = bitcast %class.GrProcessorKeyBuilder* %2 to void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)***
  %18 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %18, i64 2
  %20 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %19, align 8
  tail call void %20(%class.GrProcessorKeyBuilder* %2, i32 32, i32 %16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.68, i64 0, i64 0)) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrGLSLFragmentProcessor* @_ZNK23GrDiffuseLightingEffect17onMakeProgramImplEv(%class.GrDiffuseLightingEffect* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 64) #14
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 16
  %5 = bitcast i8* %4 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %2, i8 0, i64 64, i1 false) #11
  store i64 1, i64* %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 32
  %7 = bitcast i8* %6 to i64*
  %8 = getelementptr inbounds i8, i8* %2, i64 24
  %9 = bitcast i8* %8 to %"class.std::__1::unique_ptr.210"**
  store %"class.std::__1::unique_ptr.210"* null, %"class.std::__1::unique_ptr.210"** %9, align 8
  store i64 1, i64* %7, align 8
  %10 = getelementptr inbounds i8, i8* %2, i64 40
  %11 = bitcast i8* %10 to i32*
  store i32 -1, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %2, i64 48
  %13 = bitcast i8* %12 to %class.GrGLLight**
  store %class.GrGLLight* null, %class.GrGLLight** %13, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV25GrGLDiffuseLightingEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %14 = getelementptr inbounds i8, i8* %2, i64 56
  %15 = bitcast i8* %14 to i32*
  store i32 -1, i32* %15, align 4
  %16 = bitcast i8* %2 to %class.GrGLSLFragmentProcessor*
  ret %class.GrGLSLFragmentProcessor* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18GrGLLightingEffect8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE(%class.GrGLLightingEffect*, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %class.SkString, align 8
  %5 = alloca %class.SkString, align 8
  %6 = alloca %class.SkString, align 8
  %7 = alloca %class.SkString, align 8
  %8 = alloca %class.SkString, align 8
  %9 = alloca %class.SkString, align 8
  %10 = alloca %class.SkString, align 8
  %11 = alloca %class.SkString, align 8
  %12 = alloca %class.SkString, align 8
  %13 = alloca %class.SkString, align 8
  %14 = alloca %class.SkString, align 8
  %15 = alloca %class.SkString, align 8
  %16 = alloca %class.SkString, align 8
  %17 = alloca [7 x %class.GrShaderVar], align 16
  %18 = alloca %class.SkString, align 8
  %19 = alloca [3 x %class.GrShaderVar], align 16
  %20 = alloca %class.SkString, align 8
  %21 = alloca [2 x %class.GrShaderVar], align 16
  %22 = alloca %class.SkString, align 8
  %23 = alloca %class.SkString, align 8
  %24 = alloca %class.SkString, align 8
  %25 = alloca %class.SkString, align 8
  %26 = alloca %"class.SkSL::String", align 8
  %27 = alloca %class.SkString, align 8
  %28 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 3
  %29 = bitcast %class.GrFragmentProcessor** %28 to %class.GrLightingEffect**
  %30 = load %class.GrLightingEffect*, %class.GrLightingEffect** %29, align 8
  %31 = getelementptr inbounds %class.GrGLLightingEffect, %class.GrGLLightingEffect* %0, i64 0, i32 2
  %32 = load %class.GrGLLight*, %class.GrGLLight** %31, align 8
  %33 = icmp eq %class.GrGLLight* %32, null
  br i1 %33, label %34, label %42

34:                                               ; preds = %2
  %35 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %30, i64 0, i32 1, i32 0
  %36 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %35, align 8
  %37 = bitcast %class.SkImageFilterLight* %36 to %class.GrGLLight* (%class.SkImageFilterLight*)***
  %38 = load %class.GrGLLight* (%class.SkImageFilterLight*)**, %class.GrGLLight* (%class.SkImageFilterLight*)*** %37, align 8
  %39 = getelementptr inbounds %class.GrGLLight* (%class.SkImageFilterLight*)*, %class.GrGLLight* (%class.SkImageFilterLight*)** %38, i64 4
  %40 = load %class.GrGLLight* (%class.SkImageFilterLight*)*, %class.GrGLLight* (%class.SkImageFilterLight*)** %39, align 8
  %41 = tail call %class.GrGLLight* %40(%class.SkImageFilterLight* %36) #11
  store %class.GrGLLight* %41, %class.GrGLLight** %31, align 8
  br label %42

42:                                               ; preds = %2, %34
  %43 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 1
  %44 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %43, align 8
  %45 = bitcast %class.GrLightingEffect* %30 to %class.GrFragmentProcessor*
  %46 = bitcast %class.GrGLSLUniformHandler* %44 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %47 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %46, align 8
  %48 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %47, i64 13
  %49 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %48, align 8
  %50 = tail call i32 %49(%class.GrGLSLUniformHandler* %44, %class.GrFragmentProcessor* %45, i32 16, i32 28, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #11
  %51 = getelementptr inbounds %class.GrGLLightingEffect, %class.GrGLLightingEffect* %0, i64 0, i32 1, i32 0
  store i32 %50, i32* %51, align 8
  %52 = load %class.GrGLLight*, %class.GrGLLight** %31, align 8
  %53 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %46, align 8
  %54 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %53, i64 13
  %55 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %54, align 8
  %56 = tail call i32 %55(%class.GrGLSLUniformHandler* %44, %class.GrFragmentProcessor* %45, i32 16, i32 30, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.40, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #11
  %57 = getelementptr inbounds %class.GrGLLight, %class.GrGLLight* %52, i64 0, i32 1, i32 0
  store i32 %56, i32* %57, align 8
  %58 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 0
  %59 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %58, align 8
  %60 = bitcast %class.SkString* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #11
  %61 = getelementptr inbounds %class.SkString, %class.SkString* %16, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %61, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %16) #11
  %62 = bitcast %class.GrGLLightingEffect* %0 to void (%class.GrGLLightingEffect*, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, %class.SkString*)***
  %63 = load void (%class.GrGLLightingEffect*, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, %class.SkString*)**, void (%class.GrGLLightingEffect*, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, %class.SkString*)*** %62, align 8
  %64 = getelementptr inbounds void (%class.GrGLLightingEffect*, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, %class.SkString*)*, void (%class.GrGLLightingEffect*, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, %class.SkString*)** %63, i64 4
  %65 = load void (%class.GrGLLightingEffect*, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, %class.SkString*)*, void (%class.GrGLLightingEffect*, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, %class.SkString*)** %64, align 8
  call void %65(%class.GrGLLightingEffect* %0, %class.GrFragmentProcessor* %45, %class.GrGLSLUniformHandler* %44, %class.GrGLSLFPFragmentBuilder* %59, %class.SkString* nonnull %16) #11
  %66 = bitcast [7 x %class.GrShaderVar]* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %66) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %66, i8 -86, i64 280, i1 false)
  %67 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 0
  %68 = bitcast %class.SkString* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68)
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #11
  %69 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 0, i32 0
  store i32 28, i32* %69, align 16
  %70 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 0, i32 1
  store i32 0, i32* %70, align 4
  %71 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 0, i32 2
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %72, %class.SkString* nonnull dereferenceable(8) %15) #11
  %73 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 0, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %73) #11
  %74 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 0, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %74) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68)
  %75 = bitcast %class.SkString* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75)
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #11
  %76 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 1, i32 0
  store i32 28, i32* %76, align 8
  %77 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 1, i32 1
  store i32 0, i32* %77, align 4
  %78 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 1, i32 2
  store i32 0, i32* %78, align 8
  %79 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 1, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %79, %class.SkString* nonnull dereferenceable(8) %14) #11
  %80 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 1, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %80) #11
  %81 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 1, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %81) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75)
  %82 = bitcast %class.SkString* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82)
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #11
  %83 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 2, i32 0
  store i32 28, i32* %83, align 16
  %84 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 2, i32 1
  store i32 0, i32* %84, align 4
  %85 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 2, i32 2
  store i32 0, i32* %85, align 8
  %86 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 2, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %86, %class.SkString* nonnull dereferenceable(8) %13) #11
  %87 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 2, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %87) #11
  %88 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 2, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %88) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82)
  %89 = bitcast %class.SkString* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89)
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #11
  %90 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 3, i32 0
  store i32 28, i32* %90, align 8
  %91 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 3, i32 1
  store i32 0, i32* %91, align 4
  %92 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 3, i32 2
  store i32 0, i32* %92, align 8
  %93 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 3, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %93, %class.SkString* nonnull dereferenceable(8) %12) #11
  %94 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 3, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %94) #11
  %95 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 3, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %95) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89)
  %96 = bitcast %class.SkString* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96)
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #11
  %97 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 4, i32 0
  store i32 28, i32* %97, align 16
  %98 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 4, i32 1
  store i32 0, i32* %98, align 4
  %99 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 4, i32 2
  store i32 0, i32* %99, align 8
  %100 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 4, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %100, %class.SkString* nonnull dereferenceable(8) %11) #11
  %101 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 4, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %101) #11
  %102 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 4, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %102) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96)
  %103 = bitcast %class.SkString* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103)
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #11
  %104 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 5, i32 0
  store i32 28, i32* %104, align 8
  %105 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 5, i32 1
  store i32 0, i32* %105, align 4
  %106 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 5, i32 2
  store i32 0, i32* %106, align 8
  %107 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 5, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %107, %class.SkString* nonnull dereferenceable(8) %10) #11
  %108 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 5, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %108) #11
  %109 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 5, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %109) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103)
  %110 = bitcast %class.SkString* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110)
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0)) #11
  %111 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 6, i32 0
  store i32 28, i32* %111, align 16
  %112 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 6, i32 1
  store i32 0, i32* %112, align 4
  %113 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 6, i32 2
  store i32 0, i32* %113, align 8
  %114 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 6, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %114, %class.SkString* nonnull dereferenceable(8) %9) #11
  %115 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 6, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %115) #11
  %116 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 6, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %116) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110)
  %117 = bitcast %class.SkString* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #11
  %118 = getelementptr inbounds %class.SkString, %class.SkString* %18, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %118, align 8
  %119 = bitcast %class.GrGLSLFPFragmentBuilder* %59 to i8**
  %120 = load i8*, i8** %119, align 8
  %121 = getelementptr i8, i8* %120, i64 -24
  %122 = bitcast i8* %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %class.GrGLSLFPFragmentBuilder* %59 to i8*
  %125 = getelementptr inbounds i8, i8* %124, i64 %123
  %126 = bitcast i8* %125 to %class.GrGLSLShaderBuilder*
  call void @_ZN19GrGLSLShaderBuilder22getMangledFunctionNameEPKc(%class.SkString* nonnull sret %18, %class.GrGLSLShaderBuilder* %126, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0)) #11
  %127 = load i8*, i8** %119, align 8
  %128 = getelementptr i8, i8* %127, i64 -24
  %129 = bitcast i8* %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = getelementptr inbounds i8, i8* %124, i64 %130
  %132 = bitcast i8* %131 to %class.GrGLSLShaderBuilder*
  %133 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %118, align 8
  %134 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %133, i64 0, i32 2
  call void @_ZN19GrGLSLShaderBuilder12emitFunctionE8GrSLTypePKc6SkSpanIK11GrShaderVarES2_(%class.GrGLSLShaderBuilder* %132, i32 28, i8* %134, %class.GrShaderVar* nonnull %67, i64 7, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.11, i64 0, i64 0)) #11
  %135 = bitcast [3 x %class.GrShaderVar]* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %135) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %135, i8 -86, i64 120, i1 false)
  %136 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %19, i64 0, i64 0
  %137 = bitcast %class.SkString* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137)
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #11
  %138 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %19, i64 0, i64 0, i32 0
  store i32 28, i32* %138, align 16
  %139 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %19, i64 0, i64 0, i32 1
  store i32 0, i32* %139, align 4
  %140 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %19, i64 0, i64 0, i32 2
  store i32 0, i32* %140, align 8
  %141 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %19, i64 0, i64 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %141, %class.SkString* nonnull dereferenceable(8) %8) #11
  %142 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %19, i64 0, i64 0, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %142) #11
  %143 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %19, i64 0, i64 0, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %143) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137)
  %144 = bitcast %class.SkString* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %144)
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #11
  %145 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %19, i64 0, i64 1, i32 0
  store i32 28, i32* %145, align 8
  %146 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %19, i64 0, i64 1, i32 1
  store i32 0, i32* %146, align 4
  %147 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %19, i64 0, i64 1, i32 2
  store i32 0, i32* %147, align 8
  %148 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %19, i64 0, i64 1, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %148, %class.SkString* nonnull dereferenceable(8) %7) #11
  %149 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %19, i64 0, i64 1, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %149) #11
  %150 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %19, i64 0, i64 1, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %150) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144)
  %151 = bitcast %class.SkString* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151)
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0)) #11
  %152 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %19, i64 0, i64 2, i32 0
  store i32 28, i32* %152, align 16
  %153 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %19, i64 0, i64 2, i32 1
  store i32 0, i32* %153, align 4
  %154 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %19, i64 0, i64 2, i32 2
  store i32 0, i32* %154, align 8
  %155 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %19, i64 0, i64 2, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %155, %class.SkString* nonnull dereferenceable(8) %6) #11
  %156 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %19, i64 0, i64 2, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %156) #11
  %157 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %19, i64 0, i64 2, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %157) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151)
  %158 = bitcast %class.SkString* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %158) #11
  %159 = getelementptr inbounds %class.SkString, %class.SkString* %20, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %159, align 8
  %160 = load i8*, i8** %119, align 8
  %161 = getelementptr i8, i8* %160, i64 -24
  %162 = bitcast i8* %161 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = getelementptr inbounds i8, i8* %124, i64 %163
  %165 = bitcast i8* %164 to %class.GrGLSLShaderBuilder*
  call void @_ZN19GrGLSLShaderBuilder22getMangledFunctionNameEPKc(%class.SkString* nonnull sret %20, %class.GrGLSLShaderBuilder* %165, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i64 0, i64 0)) #11
  %166 = load i8*, i8** %119, align 8
  %167 = getelementptr i8, i8* %166, i64 -24
  %168 = bitcast i8* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = getelementptr inbounds i8, i8* %124, i64 %169
  %171 = bitcast i8* %170 to %class.GrGLSLShaderBuilder*
  %172 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %159, align 8
  %173 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %172, i64 0, i32 2
  call void @_ZN19GrGLSLShaderBuilder12emitFunctionE8GrSLTypePKc6SkSpanIK11GrShaderVarES2_(%class.GrGLSLShaderBuilder* %171, i32 30, i8* %173, %class.GrShaderVar* nonnull %136, i64 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.15, i64 0, i64 0)) #11
  %174 = bitcast [2 x %class.GrShaderVar]* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %174) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %174, i8 -86, i64 80, i1 false)
  %175 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %21, i64 0, i64 0
  %176 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176)
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0)) #11
  %177 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %21, i64 0, i64 0, i32 0
  store i32 28, i32* %177, align 16
  %178 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %21, i64 0, i64 0, i32 1
  store i32 0, i32* %178, align 4
  %179 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %21, i64 0, i64 0, i32 2
  store i32 9, i32* %179, align 8
  %180 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %21, i64 0, i64 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %180, %class.SkString* nonnull dereferenceable(8) %5) #11
  %181 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %21, i64 0, i64 0, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %181) #11
  %182 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %21, i64 0, i64 0, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %182) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176)
  %183 = bitcast %class.SkString* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %183)
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0)) #11
  %184 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %21, i64 0, i64 1, i32 0
  store i32 28, i32* %184, align 8
  %185 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %21, i64 0, i64 1, i32 1
  store i32 0, i32* %185, align 4
  %186 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %21, i64 0, i64 1, i32 2
  store i32 0, i32* %186, align 8
  %187 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %21, i64 0, i64 1, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %187, %class.SkString* nonnull dereferenceable(8) %4) #11
  %188 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %21, i64 0, i64 1, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %188) #11
  %189 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %21, i64 0, i64 1, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %189) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183)
  %190 = bitcast %class.SkString* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %190) #11
  %191 = getelementptr inbounds %class.SkString, %class.SkString* %22, i64 0, i32 0, i32 0
  %192 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %30, i64 0, i32 4
  %193 = load i32, i32* %192, align 4
  %194 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %159, align 8
  %195 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %194, i64 0, i32 2
  %196 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %118, align 8
  %197 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %196, i64 0, i32 2
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %191, align 8, !alias.scope !78
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %22) #11
  switch i32 %193, label %207 [
    i32 0, label %198
    i32 1, label %199
    i32 2, label %200
    i32 3, label %201
    i32 4, label %202
    i32 5, label %203
    i32 6, label %204
    i32 7, label %205
    i32 8, label %206
  ]

198:                                              ; preds = %42
  call void (%class.SkString*, i8*, ...) @_ZN8SkString6printfEPKcz(%class.SkString* nonnull %22, i8* getelementptr inbounds ([127 x i8], [127 x i8]* @.str.58, i64 0, i64 0), i8* %195, i8* %197, double 0x3FE5555560000000, i8* %197, double 0x3FE5555560000000) #11
  br label %207

199:                                              ; preds = %42
  call void (%class.SkString*, i8*, ...) @_ZN8SkString6printfEPKcz(%class.SkString* nonnull %22, i8* getelementptr inbounds ([127 x i8], [127 x i8]* @.str.59, i64 0, i64 0), i8* %195, i8* %197, double 0x3FD5555560000000, i8* %197, double 5.000000e-01) #11
  br label %207

200:                                              ; preds = %42
  call void (%class.SkString*, i8*, ...) @_ZN8SkString6printfEPKcz(%class.SkString* nonnull %22, i8* getelementptr inbounds ([131 x i8], [131 x i8]* @.str.60, i64 0, i64 0), i8* %195, i8* %197, double 0x3FE5555560000000, i8* %197, double 0x3FE5555560000000) #11
  br label %207

201:                                              ; preds = %42
  call void (%class.SkString*, i8*, ...) @_ZN8SkString6printfEPKcz(%class.SkString* nonnull %22, i8* getelementptr inbounds ([131 x i8], [131 x i8]* @.str.61, i64 0, i64 0), i8* %195, i8* %197, double 5.000000e-01, i8* %197, double 0x3FD5555560000000) #11
  br label %207

202:                                              ; preds = %42
  call void (%class.SkString*, i8*, ...) @_ZN8SkString6printfEPKcz(%class.SkString* nonnull %22, i8* getelementptr inbounds ([131 x i8], [131 x i8]* @.str.62, i64 0, i64 0), i8* %195, i8* %197, double 2.500000e-01, i8* %197, double 2.500000e-01) #11
  br label %207

203:                                              ; preds = %42
  call void (%class.SkString*, i8*, ...) @_ZN8SkString6printfEPKcz(%class.SkString* nonnull %22, i8* getelementptr inbounds ([131 x i8], [131 x i8]* @.str.63, i64 0, i64 0), i8* %195, i8* %197, double 5.000000e-01, i8* %197, double 0x3FD5555560000000) #11
  br label %207

204:                                              ; preds = %42
  call void (%class.SkString*, i8*, ...) @_ZN8SkString6printfEPKcz(%class.SkString* nonnull %22, i8* getelementptr inbounds ([131 x i8], [131 x i8]* @.str.64, i64 0, i64 0), i8* %195, i8* %197, double 0x3FE5555560000000, i8* %197, double 0x3FE5555560000000) #11
  br label %207

205:                                              ; preds = %42
  call void (%class.SkString*, i8*, ...) @_ZN8SkString6printfEPKcz(%class.SkString* nonnull %22, i8* getelementptr inbounds ([131 x i8], [131 x i8]* @.str.65, i64 0, i64 0), i8* %195, i8* %197, double 0x3FD5555560000000, i8* %197, double 5.000000e-01) #11
  br label %207

206:                                              ; preds = %42
  call void (%class.SkString*, i8*, ...) @_ZN8SkString6printfEPKcz(%class.SkString* nonnull %22, i8* getelementptr inbounds ([131 x i8], [131 x i8]* @.str.66, i64 0, i64 0), i8* %195, i8* %197, double 0x3FE5555560000000, i8* %197, double 0x3FE5555560000000) #11
  br label %207

207:                                              ; preds = %42, %198, %199, %200, %201, %202, %203, %204, %205, %206
  %208 = bitcast %class.SkString* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %208) #11
  %209 = getelementptr inbounds %class.SkString, %class.SkString* %23, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %209, align 8
  %210 = load i8*, i8** %119, align 8
  %211 = getelementptr i8, i8* %210, i64 -24
  %212 = bitcast i8* %211 to i64*
  %213 = load i64, i64* %212, align 8
  %214 = getelementptr inbounds i8, i8* %124, i64 %213
  %215 = bitcast i8* %214 to %class.GrGLSLShaderBuilder*
  call void @_ZN19GrGLSLShaderBuilder22getMangledFunctionNameEPKc(%class.SkString* nonnull sret %23, %class.GrGLSLShaderBuilder* %215, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i64 0, i64 0)) #11
  %216 = load i8*, i8** %119, align 8
  %217 = getelementptr i8, i8* %216, i64 -24
  %218 = bitcast i8* %217 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = getelementptr inbounds i8, i8* %124, i64 %219
  %221 = bitcast i8* %220 to %class.GrGLSLShaderBuilder*
  %222 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %209, align 8
  %223 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %222, i64 0, i32 2
  %224 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %191, align 8
  %225 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %224, i64 0, i32 2
  call void @_ZN19GrGLSLShaderBuilder12emitFunctionE8GrSLTypePKc6SkSpanIK11GrShaderVarES2_(%class.GrGLSLShaderBuilder* %221, i32 30, i8* %223, %class.GrShaderVar* nonnull %175, i64 2, i8* %225) #11
  %226 = load i8*, i8** %119, align 8
  %227 = getelementptr i8, i8* %226, i64 -24
  %228 = bitcast i8* %227 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = getelementptr inbounds i8, i8* %124, i64 %229
  %231 = bitcast i8* %230 to %class.GrGLSLShaderBuilder*
  %232 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 5
  %233 = load i8*, i8** %232, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %231, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.19, i64 0, i64 0), i8* %233)
  %234 = load i8*, i8** %119, align 8
  %235 = getelementptr i8, i8* %234, i64 -24
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 8
  %238 = getelementptr inbounds i8, i8* %124, i64 %237
  %239 = getelementptr inbounds i8, i8* %238, i64 160
  %240 = getelementptr inbounds i8, i8* %238, i64 488
  %241 = bitcast i8* %240 to i32*
  %242 = load i32, i32* %241, align 8
  %243 = bitcast i8* %239 to %class.SkString**
  %244 = load %class.SkString*, %class.SkString** %243, align 8
  %245 = sext i32 %242 to i64
  %246 = getelementptr inbounds %class.SkString, %class.SkString* %244, i64 %245
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %246, i64 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i64 0, i64 0)) #11
  %247 = load i32, i32* %51, align 8
  %248 = bitcast %class.GrGLSLUniformHandler* %44 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %249 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %248, align 8
  %250 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %249, i64 3
  %251 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %250, align 8
  %252 = call i8* %251(%class.GrGLSLUniformHandler* %44, i32 %247) #11
  %253 = bitcast %class.SkString* %24 to i8*
  %254 = getelementptr inbounds %class.SkString, %class.SkString* %24, i64 0, i32 0, i32 0
  %255 = bitcast %class.SkString* %25 to i8*
  %256 = getelementptr inbounds %class.SkString, %class.SkString* %25, i64 0, i32 0, i32 0
  %257 = getelementptr inbounds %class.GrGLLightingEffect, %class.GrGLLightingEffect* %0, i64 0, i32 0
  %258 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %260 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %261 = bitcast %"class.SkSL::String"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %262 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %261, i64 0, i32 1, i32 0
  %263 = bitcast %"class.SkSL::String"* %26 to i8*
  %264 = bitcast %"class.SkSL::String"* %3 to i8*
  %265 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0
  %266 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %267 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %266, i64 0, i32 1, i32 0
  %268 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %269

269:                                              ; preds = %372, %207
  %270 = phi i32 [ -1, %207 ], [ %373, %372 ]
  %271 = phi i32 [ 0, %207 ], [ %424, %372 ]
  br label %375

272:                                              ; preds = %372
  %273 = load i8*, i8** %119, align 8
  %274 = getelementptr i8, i8* %273, i64 -24
  %275 = bitcast i8* %274 to i64*
  %276 = load i64, i64* %275, align 8
  %277 = getelementptr inbounds i8, i8* %124, i64 %276
  %278 = getelementptr inbounds i8, i8* %277, i64 160
  %279 = getelementptr inbounds i8, i8* %277, i64 488
  %280 = bitcast i8* %279 to i32*
  %281 = load i32, i32* %280, align 8
  %282 = bitcast i8* %278 to %class.SkString**
  %283 = load %class.SkString*, %class.SkString** %282, align 8
  %284 = sext i32 %281 to i64
  %285 = getelementptr inbounds %class.SkString, %class.SkString* %283, i64 %284
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %285, i64 -1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.23, i64 0, i64 0)) #11
  %286 = bitcast %class.SkString* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %286) #11
  %287 = getelementptr inbounds %class.SkString, %class.SkString* %27, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %287, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %27) #11
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %27, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i64 0, i64 0), i8* %252) #11
  %288 = load %class.GrGLLight*, %class.GrGLLight** %31, align 8
  %289 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %287, align 8
  %290 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %289, i64 0, i32 2
  %291 = bitcast %class.GrGLLight* %288 to void (%class.GrGLLight*, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, i8*)***
  %292 = load void (%class.GrGLLight*, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, i8*)**, void (%class.GrGLLight*, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, i8*)*** %291, align 8
  %293 = getelementptr inbounds void (%class.GrGLLight*, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, i8*)*, void (%class.GrGLLight*, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, i8*)** %292, i64 2
  %294 = load void (%class.GrGLLight*, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, i8*)*, void (%class.GrGLLight*, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, i8*)** %293, align 8
  call void %294(%class.GrGLLight* %288, %class.GrFragmentProcessor* %45, %class.GrGLSLUniformHandler* %44, %class.GrGLSLFPFragmentBuilder* %59, i8* %290) #11
  %295 = load i8*, i8** %119, align 8
  %296 = getelementptr i8, i8* %295, i64 -24
  %297 = bitcast i8* %296 to i64*
  %298 = load i64, i64* %297, align 8
  %299 = getelementptr inbounds i8, i8* %124, i64 %298
  %300 = getelementptr inbounds i8, i8* %299, i64 160
  %301 = getelementptr inbounds i8, i8* %299, i64 488
  %302 = bitcast i8* %301 to i32*
  %303 = load i32, i32* %302, align 8
  %304 = bitcast i8* %300 to %class.SkString**
  %305 = load %class.SkString*, %class.SkString** %304, align 8
  %306 = sext i32 %303 to i64
  %307 = getelementptr inbounds %class.SkString, %class.SkString* %305, i64 %306
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %307, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i64 0, i64 0)) #11
  %308 = load i8*, i8** %119, align 8
  %309 = getelementptr i8, i8* %308, i64 -24
  %310 = bitcast i8* %309 to i64*
  %311 = load i64, i64* %310, align 8
  %312 = getelementptr inbounds i8, i8* %124, i64 %311
  %313 = bitcast i8* %312 to %class.GrGLSLShaderBuilder*
  %314 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %61, align 8
  %315 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %314, i64 0, i32 2
  %316 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %209, align 8
  %317 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %316, i64 0, i32 2
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %313, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.26, i64 0, i64 0), i8* %315, i8* %317, i8* %252)
  %318 = load %class.GrGLLight*, %class.GrGLLight** %31, align 8
  %319 = bitcast %class.GrGLLight* %318 to void (%class.GrGLLight*, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, i8*)***
  %320 = load void (%class.GrGLLight*, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, i8*)**, void (%class.GrGLLight*, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, i8*)*** %319, align 8
  %321 = getelementptr inbounds void (%class.GrGLLight*, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, i8*)*, void (%class.GrGLLight*, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, i8*)** %320, i64 3
  %322 = load void (%class.GrGLLight*, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, i8*)*, void (%class.GrGLLight*, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, i8*)** %321, align 8
  call void %322(%class.GrGLLight* %318, %class.GrFragmentProcessor* %45, %class.GrGLSLUniformHandler* %44, %class.GrGLSLFPFragmentBuilder* %59, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i64 0, i64 0)) #11
  %323 = load i8*, i8** %119, align 8
  %324 = getelementptr i8, i8* %323, i64 -24
  %325 = bitcast i8* %324 to i64*
  %326 = load i64, i64* %325, align 8
  %327 = getelementptr inbounds i8, i8* %124, i64 %326
  %328 = getelementptr inbounds i8, i8* %327, i64 160
  %329 = getelementptr inbounds i8, i8* %327, i64 488
  %330 = bitcast i8* %329 to i32*
  %331 = load i32, i32* %330, align 8
  %332 = bitcast i8* %328 to %class.SkString**
  %333 = load %class.SkString*, %class.SkString** %332, align 8
  %334 = sext i32 %331 to i64
  %335 = getelementptr inbounds %class.SkString, %class.SkString* %333, i64 %334
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %335, i64 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i64 0, i64 0)) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %27) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %286) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %208) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %190) #11
  %336 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %21, i64 0, i64 1, i32 5
  call void @_ZN8SkStringD1Ev(%class.SkString* %336) #11
  %337 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %21, i64 0, i64 1, i32 4
  call void @_ZN8SkStringD1Ev(%class.SkString* %337) #11
  %338 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %21, i64 0, i64 1, i32 3
  call void @_ZN8SkStringD1Ev(%class.SkString* %338) #11
  %339 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %21, i64 0, i64 0, i32 5
  call void @_ZN8SkStringD1Ev(%class.SkString* %339) #11
  %340 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %21, i64 0, i64 0, i32 4
  call void @_ZN8SkStringD1Ev(%class.SkString* %340) #11
  %341 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %21, i64 0, i64 0, i32 3
  call void @_ZN8SkStringD1Ev(%class.SkString* %341) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %174) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %158) #11
  %342 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %19, i64 0, i64 2, i32 5
  call void @_ZN8SkStringD1Ev(%class.SkString* %342) #11
  %343 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %19, i64 0, i64 2, i32 4
  call void @_ZN8SkStringD1Ev(%class.SkString* %343) #11
  %344 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %19, i64 0, i64 2, i32 3
  call void @_ZN8SkStringD1Ev(%class.SkString* %344) #11
  %345 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %19, i64 0, i64 1, i32 5
  call void @_ZN8SkStringD1Ev(%class.SkString* %345) #11
  %346 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %19, i64 0, i64 1, i32 4
  call void @_ZN8SkStringD1Ev(%class.SkString* %346) #11
  %347 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %19, i64 0, i64 1, i32 3
  call void @_ZN8SkStringD1Ev(%class.SkString* %347) #11
  %348 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %19, i64 0, i64 0, i32 5
  call void @_ZN8SkStringD1Ev(%class.SkString* %348) #11
  %349 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %19, i64 0, i64 0, i32 4
  call void @_ZN8SkStringD1Ev(%class.SkString* %349) #11
  %350 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %19, i64 0, i64 0, i32 3
  call void @_ZN8SkStringD1Ev(%class.SkString* %350) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %135) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %18) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #11
  %351 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 6, i32 5
  call void @_ZN8SkStringD1Ev(%class.SkString* %351) #11
  %352 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 6, i32 4
  call void @_ZN8SkStringD1Ev(%class.SkString* %352) #11
  %353 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 6, i32 3
  call void @_ZN8SkStringD1Ev(%class.SkString* %353) #11
  %354 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 5, i32 5
  call void @_ZN8SkStringD1Ev(%class.SkString* %354) #11
  %355 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 5, i32 4
  call void @_ZN8SkStringD1Ev(%class.SkString* %355) #11
  %356 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 5, i32 3
  call void @_ZN8SkStringD1Ev(%class.SkString* %356) #11
  %357 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 4, i32 5
  call void @_ZN8SkStringD1Ev(%class.SkString* %357) #11
  %358 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 4, i32 4
  call void @_ZN8SkStringD1Ev(%class.SkString* %358) #11
  %359 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 4, i32 3
  call void @_ZN8SkStringD1Ev(%class.SkString* %359) #11
  %360 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 3, i32 5
  call void @_ZN8SkStringD1Ev(%class.SkString* %360) #11
  %361 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 3, i32 4
  call void @_ZN8SkStringD1Ev(%class.SkString* %361) #11
  %362 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 3, i32 3
  call void @_ZN8SkStringD1Ev(%class.SkString* %362) #11
  %363 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 2, i32 5
  call void @_ZN8SkStringD1Ev(%class.SkString* %363) #11
  %364 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 2, i32 4
  call void @_ZN8SkStringD1Ev(%class.SkString* %364) #11
  %365 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 2, i32 3
  call void @_ZN8SkStringD1Ev(%class.SkString* %365) #11
  %366 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 1, i32 5
  call void @_ZN8SkStringD1Ev(%class.SkString* %366) #11
  %367 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 1, i32 4
  call void @_ZN8SkStringD1Ev(%class.SkString* %367) #11
  %368 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 1, i32 3
  call void @_ZN8SkStringD1Ev(%class.SkString* %368) #11
  %369 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 0, i32 5
  call void @_ZN8SkStringD1Ev(%class.SkString* %369) #11
  %370 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 0, i32 4
  call void @_ZN8SkStringD1Ev(%class.SkString* %370) #11
  %371 = getelementptr inbounds [7 x %class.GrShaderVar], [7 x %class.GrShaderVar]* %17, i64 0, i64 0, i32 3
  call void @_ZN8SkStringD1Ev(%class.SkString* %371) #11
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %66) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #11
  ret void

372:                                              ; preds = %415
  %373 = add nsw i32 %270, 1
  %374 = icmp eq i32 %373, 2
  br i1 %374, label %272, label %269

375:                                              ; preds = %415, %269
  %376 = phi i32 [ -1, %269 ], [ %425, %415 ]
  %377 = phi i32 [ %271, %269 ], [ %424, %415 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %253) #11
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %254, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %24) #11
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %24, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21, i64 0, i64 0), i32 %376, i32 %270) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %255) #11
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %256, align 8
  %378 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %254, align 8
  %379 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %378, i64 0, i32 2
  %380 = call i64 @strlen(i8* %379) #11
  %381 = icmp ugt i64 %380, -17
  br i1 %381, label %382, label %384

382:                                              ; preds = %375
  %383 = bitcast %"class.SkSL::String"* %26 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %383) #15
  unreachable

384:                                              ; preds = %375
  %385 = icmp ult i64 %380, 23
  br i1 %385, label %391, label %386

386:                                              ; preds = %384
  %387 = add nuw i64 %380, 16
  %388 = and i64 %387, -16
  %389 = call i8* @_Znwm(i64 %388) #14
  store i8* %389, i8** %258, align 8
  %390 = or i64 %388, -9223372036854775808
  store i64 %390, i64* %259, align 8
  store i64 %380, i64* %260, align 8
  br label %394

391:                                              ; preds = %384
  %392 = trunc i64 %380 to i8
  store i8 %392, i8* %262, align 1
  %393 = icmp eq i64 %380, 0
  br i1 %393, label %396, label %394

394:                                              ; preds = %391, %386
  %395 = phi i8* [ %389, %386 ], [ %263, %391 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %395, i8* align 1 %379, i64 %380, i1 false) #11
  br label %396

396:                                              ; preds = %391, %394
  %397 = phi i8* [ %263, %391 ], [ %395, %394 ]
  %398 = getelementptr inbounds i8, i8* %397, i64 %380
  store i8 0, i8* %398, align 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %264)
  %399 = load i8, i8* %262, align 1, !noalias !81
  %400 = icmp slt i8 %399, 0
  br i1 %400, label %402, label %401

401:                                              ; preds = %396
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %264, i8* nonnull align 8 %263, i64 24, i1 false) #11, !noalias !81
  br label %405

402:                                              ; preds = %396
  %403 = load i8*, i8** %258, align 8, !noalias !81
  %404 = load i64, i64* %260, align 8, !noalias !81
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %265, i8* %403, i64 %404) #11
  br label %405

405:                                              ; preds = %402, %401
  call void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* nonnull sret %25, %class.GrGLSLFragmentProcessor* %257, i32 0, i8* null, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56) %1, %"class.SkSL::String"* nonnull %3) #11
  %406 = load i8, i8* %267, align 1, !noalias !81
  %407 = icmp slt i8 %406, 0
  br i1 %407, label %408, label %410

408:                                              ; preds = %405
  %409 = load i8*, i8** %268, align 8, !noalias !81
  call void @_ZdlPv(i8* %409) #14
  br label %410

410:                                              ; preds = %405, %408
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %264)
  %411 = load i8, i8* %262, align 1
  %412 = icmp slt i8 %411, 0
  br i1 %412, label %413, label %415

413:                                              ; preds = %410
  %414 = load i8*, i8** %258, align 8
  call void @_ZdlPv(i8* %414) #14
  br label %415

415:                                              ; preds = %410, %413
  %416 = load i8*, i8** %119, align 8
  %417 = getelementptr i8, i8* %416, i64 -24
  %418 = bitcast i8* %417 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = getelementptr inbounds i8, i8* %124, i64 %419
  %421 = bitcast i8* %420 to %class.GrGLSLShaderBuilder*
  %422 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %256, align 8
  %423 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %422, i64 0, i32 2
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %421, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22, i64 0, i64 0), i32 %377, i8* %423)
  %424 = add nsw i32 %377, 1
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %255) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %253) #11
  %425 = add nsw i32 %376, 1
  %426 = icmp eq i32 %425, 2
  br i1 %426, label %372, label %375
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9GrGLLight21emitLightColorUniformEPK19GrFragmentProcessorP20GrGLSLUniformHandler(%class.GrGLLight* nocapture, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*) local_unnamed_addr #0 align 2 {
  %4 = bitcast %class.GrGLSLUniformHandler* %2 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %5 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %4, align 8
  %6 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %5, i64 13
  %7 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %6, align 8
  %8 = tail call i32 %7(%class.GrGLSLUniformHandler* %2, %class.GrFragmentProcessor* %1, i32 16, i32 30, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.40, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #11
  %9 = getelementptr inbounds %class.GrGLLight, %class.GrGLLight* %0, i64 0, i32 1, i32 0
  store i32 %8, i32* %9, align 8
  ret void
}

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #2

declare void @_ZN19GrGLSLShaderBuilder22getMangledFunctionNameEPKc(%class.SkString* sret, %class.GrGLSLShaderBuilder*, i8*) local_unnamed_addr #2

declare void @_ZN19GrGLSLShaderBuilder12emitFunctionE8GrSLTypePKc6SkSpanIK11GrShaderVarES2_(%class.GrGLSLShaderBuilder*, i32, i8*, %class.GrShaderVar*, i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder*, i8*, ...) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #11
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %8 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %9 = load i32, i32* %8, align 8
  %10 = bitcast i8* %7 to %class.SkString**
  %11 = load %class.SkString*, %class.SkString** %10, align 8
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 %12
  call void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString* %13, i8* %1, %struct.__va_list_tag* nonnull %5) #11
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #11
  ret void
}

declare void @_ZN8SkString7appendfEPKcz(%class.SkString*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18GrGLLightingEffect9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLLightingEffect* nocapture, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrGLLightingEffect, %class.GrGLLightingEffect* %0, i64 0, i32 2
  %5 = load %class.GrGLLight*, %class.GrGLLight** %4, align 8
  %6 = icmp eq %class.GrGLLight* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1
  %9 = bitcast %class.GrFragmentProcessor* %8 to %class.SkImageFilterLight**
  %10 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %9, align 8
  %11 = bitcast %class.SkImageFilterLight* %10 to %class.GrGLLight* (%class.SkImageFilterLight*)***
  %12 = load %class.GrGLLight* (%class.SkImageFilterLight*)**, %class.GrGLLight* (%class.SkImageFilterLight*)*** %11, align 8
  %13 = getelementptr inbounds %class.GrGLLight* (%class.SkImageFilterLight*)*, %class.GrGLLight* (%class.SkImageFilterLight*)** %12, i64 4
  %14 = load %class.GrGLLight* (%class.SkImageFilterLight*)*, %class.GrGLLight* (%class.SkImageFilterLight*)** %13, align 8
  %15 = tail call %class.GrGLLight* %14(%class.SkImageFilterLight* %10) #11
  store %class.GrGLLight* %15, %class.GrGLLight** %4, align 8
  br label %16

16:                                               ; preds = %3, %7
  %17 = getelementptr inbounds %class.GrGLLightingEffect, %class.GrGLLightingEffect* %0, i64 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 0, i32 1
  %20 = bitcast i32* %19 to float*
  %21 = load float, float* %20, align 8
  %22 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, float)***
  %23 = load void (%class.GrGLSLProgramDataManager*, i32, float)**, void (%class.GrGLSLProgramDataManager*, i32, float)*** %22, align 8
  %24 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %23, i64 4
  %25 = load void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %24, align 8
  tail call void %25(%class.GrGLSLProgramDataManager* %1, i32 %18, float %21) #11
  %26 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1
  %27 = bitcast %class.GrFragmentProcessor* %26 to %class.SkImageFilterLight**
  %28 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %27, align 8
  %29 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 0, i32 2
  %30 = bitcast i32* %29 to %class.SkMatrix*
  %31 = bitcast %class.SkImageFilterLight* %28 to %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)***
  %32 = load %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)**, %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)*** %31, align 8
  %33 = getelementptr inbounds %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)*, %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)** %32, i64 6
  %34 = load %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)*, %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)** %33, align 8
  %35 = tail call %class.SkImageFilterLight* %34(%class.SkImageFilterLight* %28, %class.SkMatrix* dereferenceable(40) %30) #11
  %36 = load %class.GrGLLight*, %class.GrGLLight** %4, align 8
  %37 = bitcast %class.GrGLLight* %36 to void (%class.GrGLLight*, %class.GrGLSLProgramDataManager*, %class.SkImageFilterLight*)***
  %38 = load void (%class.GrGLLight*, %class.GrGLSLProgramDataManager*, %class.SkImageFilterLight*)**, void (%class.GrGLLight*, %class.GrGLSLProgramDataManager*, %class.SkImageFilterLight*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.GrGLLight*, %class.GrGLSLProgramDataManager*, %class.SkImageFilterLight*)*, void (%class.GrGLLight*, %class.GrGLSLProgramDataManager*, %class.SkImageFilterLight*)** %38, i64 4
  %40 = load void (%class.GrGLLight*, %class.GrGLSLProgramDataManager*, %class.SkImageFilterLight*)*, void (%class.GrGLLight*, %class.GrGLSLProgramDataManager*, %class.SkImageFilterLight*)** %39, align 8
  tail call void %40(%class.GrGLLight* %36, %class.GrGLSLProgramDataManager* dereferenceable(8) %1, %class.SkImageFilterLight* %35) #11
  %41 = icmp eq %class.SkImageFilterLight* %35, null
  br i1 %41, label %52, label %42

42:                                               ; preds = %16
  %43 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %35, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 -1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %52

46:                                               ; preds = %42
  %47 = bitcast %class.SkImageFilterLight* %35 to %class.SkRefCntBase*
  %48 = bitcast %class.SkImageFilterLight* %35 to void (%class.SkRefCntBase*)***
  %49 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %48, align 8
  %50 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, i64 2
  %51 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %50, align 8
  tail call void %51(%class.SkRefCntBase* nonnull %47) #11
  br label %52

52:                                               ; preds = %16, %42, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN25GrGLDiffuseLightingEffect13emitLightFuncEPK19GrFragmentProcessorP20GrGLSLUniformHandlerP23GrGLSLFPFragmentBuilderP8SkString(%class.GrGLDiffuseLightingEffect* nocapture, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, %class.SkString*) unnamed_addr #0 align 2 {
  %6 = alloca %class.SkString, align 8
  %7 = alloca %class.SkString, align 8
  %8 = alloca %class.SkString, align 8
  %9 = alloca i8*, align 8
  %10 = alloca [3 x %class.GrShaderVar], align 16
  %11 = alloca %class.SkString, align 8
  %12 = alloca %class.SkString, align 8
  %13 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %14 = bitcast %class.GrGLSLUniformHandler* %2 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %15 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %14, align 8
  %16 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %15, i64 13
  %17 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %16, align 8
  %18 = call i32 %17(%class.GrGLSLUniformHandler* %2, %class.GrFragmentProcessor* %1, i32 16, i32 28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i1 zeroext true, i32 0, i8** nonnull %9) #11
  %19 = getelementptr inbounds %class.GrGLDiffuseLightingEffect, %class.GrGLDiffuseLightingEffect* %0, i64 0, i32 1, i32 0
  store i32 %18, i32* %19, align 8
  %20 = bitcast [3 x %class.GrShaderVar]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %20) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -86, i64 120, i1 false)
  %21 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %10, i64 0, i64 0
  %22 = bitcast %class.SkString* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i64 0, i64 0)) #11
  %23 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %10, i64 0, i64 0, i32 0
  store i32 30, i32* %23, align 16
  %24 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %10, i64 0, i64 0, i32 1
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %10, i64 0, i64 0, i32 2
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %10, i64 0, i64 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %26, %class.SkString* nonnull dereferenceable(8) %8) #11
  %27 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %10, i64 0, i64 0, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %27) #11
  %28 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %10, i64 0, i64 0, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %28) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  %29 = bitcast %class.SkString* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29)
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i64 0, i64 0)) #11
  %30 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %10, i64 0, i64 1, i32 0
  store i32 30, i32* %30, align 8
  %31 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %10, i64 0, i64 1, i32 1
  store i32 0, i32* %31, align 4
  %32 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %10, i64 0, i64 1, i32 2
  store i32 0, i32* %32, align 8
  %33 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %10, i64 0, i64 1, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %33, %class.SkString* nonnull dereferenceable(8) %7) #11
  %34 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %10, i64 0, i64 1, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %34) #11
  %35 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %10, i64 0, i64 1, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %35) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29)
  %36 = bitcast %class.SkString* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36)
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0)) #11
  %37 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %10, i64 0, i64 2, i32 0
  store i32 30, i32* %37, align 16
  %38 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %10, i64 0, i64 2, i32 1
  store i32 0, i32* %38, align 4
  %39 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %10, i64 0, i64 2, i32 2
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %10, i64 0, i64 2, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %40, %class.SkString* nonnull dereferenceable(8) %6) #11
  %41 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %10, i64 0, i64 2, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %41) #11
  %42 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %10, i64 0, i64 2, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %42) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  %43 = bitcast %class.SkString* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #11
  %44 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %44, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %11) #11
  %45 = load i8*, i8** %9, align 8
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %11, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.31, i64 0, i64 0), i8* %45) #11
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %11, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.32, i64 0, i64 0)) #11
  %46 = bitcast %class.SkString* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #11
  %47 = bitcast %class.GrGLSLFPFragmentBuilder* %3 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %class.GrGLSLFPFragmentBuilder* %3 to i8*
  %53 = getelementptr inbounds i8, i8* %52, i64 %51
  %54 = bitcast i8* %53 to %class.GrGLSLShaderBuilder*
  call void @_ZN19GrGLSLShaderBuilder22getMangledFunctionNameEPKc(%class.SkString* nonnull sret %12, %class.GrGLSLShaderBuilder* %54, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i64 0, i64 0)) #11
  %55 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %4, %class.SkString* nonnull dereferenceable(8) %12) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #11
  %56 = load i8*, i8** %47, align 8
  %57 = getelementptr i8, i8* %56, i64 -24
  %58 = bitcast i8* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds i8, i8* %52, i64 %59
  %61 = bitcast i8* %60 to %class.GrGLSLShaderBuilder*
  %62 = getelementptr inbounds %class.SkString, %class.SkString* %4, i64 0, i32 0, i32 0
  %63 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %62, align 8
  %64 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %63, i64 0, i32 2
  %65 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %44, align 8
  %66 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %65, i64 0, i32 2
  call void @_ZN19GrGLSLShaderBuilder12emitFunctionE8GrSLTypePKc6SkSpanIK11GrShaderVarES2_(%class.GrGLSLShaderBuilder* %61, i32 31, i8* %64, %class.GrShaderVar* nonnull %21, i64 3, i8* %66) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #11
  %67 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %10, i64 0, i64 2, i32 5
  call void @_ZN8SkStringD1Ev(%class.SkString* %67) #11
  %68 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %10, i64 0, i64 2, i32 4
  call void @_ZN8SkStringD1Ev(%class.SkString* %68) #11
  %69 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %10, i64 0, i64 2, i32 3
  call void @_ZN8SkStringD1Ev(%class.SkString* %69) #11
  %70 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %10, i64 0, i64 1, i32 5
  call void @_ZN8SkStringD1Ev(%class.SkString* %70) #11
  %71 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %10, i64 0, i64 1, i32 4
  call void @_ZN8SkStringD1Ev(%class.SkString* %71) #11
  %72 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %10, i64 0, i64 1, i32 3
  call void @_ZN8SkStringD1Ev(%class.SkString* %72) #11
  %73 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %10, i64 0, i64 0, i32 5
  call void @_ZN8SkStringD1Ev(%class.SkString* %73) #11
  %74 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %10, i64 0, i64 0, i32 4
  call void @_ZN8SkStringD1Ev(%class.SkString* %74) #11
  %75 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %10, i64 0, i64 0, i32 3
  call void @_ZN8SkStringD1Ev(%class.SkString* %75) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  ret void
}

declare dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString*, %class.SkString* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN25GrGLDiffuseLightingEffect9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLDiffuseLightingEffect* nocapture, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrGLDiffuseLightingEffect, %class.GrGLDiffuseLightingEffect* %0, i64 0, i32 0, i32 2
  %5 = load %class.GrGLLight*, %class.GrGLLight** %4, align 8
  %6 = icmp eq %class.GrGLLight* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1
  %9 = bitcast %class.GrFragmentProcessor* %8 to %class.SkImageFilterLight**
  %10 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %9, align 8
  %11 = bitcast %class.SkImageFilterLight* %10 to %class.GrGLLight* (%class.SkImageFilterLight*)***
  %12 = load %class.GrGLLight* (%class.SkImageFilterLight*)**, %class.GrGLLight* (%class.SkImageFilterLight*)*** %11, align 8
  %13 = getelementptr inbounds %class.GrGLLight* (%class.SkImageFilterLight*)*, %class.GrGLLight* (%class.SkImageFilterLight*)** %12, i64 4
  %14 = load %class.GrGLLight* (%class.SkImageFilterLight*)*, %class.GrGLLight* (%class.SkImageFilterLight*)** %13, align 8
  %15 = tail call %class.GrGLLight* %14(%class.SkImageFilterLight* %10) #11
  store %class.GrGLLight* %15, %class.GrGLLight** %4, align 8
  br label %16

16:                                               ; preds = %3, %7
  %17 = getelementptr inbounds %class.GrGLDiffuseLightingEffect, %class.GrGLDiffuseLightingEffect* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 0, i32 1
  %20 = bitcast i32* %19 to float*
  %21 = load float, float* %20, align 8
  %22 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, float)***
  %23 = load void (%class.GrGLSLProgramDataManager*, i32, float)**, void (%class.GrGLSLProgramDataManager*, i32, float)*** %22, align 8
  %24 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %23, i64 4
  %25 = load void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %24, align 8
  tail call void %25(%class.GrGLSLProgramDataManager* %1, i32 %18, float %21) #11
  %26 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1
  %27 = bitcast %class.GrFragmentProcessor* %26 to %class.SkImageFilterLight**
  %28 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %27, align 8
  %29 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 0, i32 2
  %30 = bitcast i32* %29 to %class.SkMatrix*
  %31 = bitcast %class.SkImageFilterLight* %28 to %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)***
  %32 = load %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)**, %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)*** %31, align 8
  %33 = getelementptr inbounds %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)*, %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)** %32, i64 6
  %34 = load %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)*, %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)** %33, align 8
  %35 = tail call %class.SkImageFilterLight* %34(%class.SkImageFilterLight* %28, %class.SkMatrix* dereferenceable(40) %30) #11
  %36 = load %class.GrGLLight*, %class.GrGLLight** %4, align 8
  %37 = bitcast %class.GrGLLight* %36 to void (%class.GrGLLight*, %class.GrGLSLProgramDataManager*, %class.SkImageFilterLight*)***
  %38 = load void (%class.GrGLLight*, %class.GrGLSLProgramDataManager*, %class.SkImageFilterLight*)**, void (%class.GrGLLight*, %class.GrGLSLProgramDataManager*, %class.SkImageFilterLight*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.GrGLLight*, %class.GrGLSLProgramDataManager*, %class.SkImageFilterLight*)*, void (%class.GrGLLight*, %class.GrGLSLProgramDataManager*, %class.SkImageFilterLight*)** %38, i64 4
  %40 = load void (%class.GrGLLight*, %class.GrGLSLProgramDataManager*, %class.SkImageFilterLight*)*, void (%class.GrGLLight*, %class.GrGLSLProgramDataManager*, %class.SkImageFilterLight*)** %39, align 8
  tail call void %40(%class.GrGLLight* %36, %class.GrGLSLProgramDataManager* dereferenceable(8) %1, %class.SkImageFilterLight* %35) #11
  %41 = icmp eq %class.SkImageFilterLight* %35, null
  br i1 %41, label %52, label %42

42:                                               ; preds = %16
  %43 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %35, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 -1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %52

46:                                               ; preds = %42
  %47 = bitcast %class.SkImageFilterLight* %35 to %class.SkRefCntBase*
  %48 = bitcast %class.SkImageFilterLight* %35 to void (%class.SkRefCntBase*)***
  %49 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %48, align 8
  %50 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, i64 2
  %51 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %50, align 8
  tail call void %51(%class.SkRefCntBase* nonnull %47) #11
  br label %52

52:                                               ; preds = %16, %42, %46
  %53 = getelementptr inbounds %class.GrGLDiffuseLightingEffect, %class.GrGLDiffuseLightingEffect* %0, i64 0, i32 1, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 4, i32 1
  %56 = bitcast i8* %55 to float*
  %57 = load float, float* %56, align 8
  %58 = load void (%class.GrGLSLProgramDataManager*, i32, float)**, void (%class.GrGLSLProgramDataManager*, i32, float)*** %22, align 8
  %59 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %58, i64 4
  %60 = load void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %59, align 8
  tail call void %60(%class.GrGLSLProgramDataManager* %1, i32 %54, float %57) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24GrSpecularLightingEffectC2E18GrSurfaceProxyView5sk_spIK18SkImageFilterLightEfRK8SkMatrixff12BoundaryModePK7SkIRectRK6GrCaps(%class.GrSpecularLightingEffect*, %class.GrSurfaceProxyView* nocapture, %class.sk_sp.209* nocapture, float, %class.SkMatrix* nocapture readonly dereferenceable(40), float, float, i32, %struct.SkIRect* readonly, %class.GrCaps* dereferenceable(232)) unnamed_addr #0 align 2 {
  %11 = alloca %class.GrSurfaceProxyView, align 8
  %12 = alloca %class.sk_sp.209, align 8
  %13 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 0
  %14 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 0, i32 0
  %15 = bitcast %class.GrSurfaceProxyView* %1 to i64*
  %16 = load i64, i64* %15, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %14, align 8
  %17 = bitcast %class.GrSurfaceProxyView* %11 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %11, i64 0, i32 1
  %19 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  store i32 %20, i32* %18, align 8
  %21 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %11, i64 0, i32 2, i32 0
  %22 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 2, i32 0
  %23 = load i16, i16* %22, align 2
  store i16 %23, i16* %21, align 4
  %24 = getelementptr inbounds %class.sk_sp.209, %class.sk_sp.209* %2, i64 0, i32 0
  %25 = bitcast %class.sk_sp.209* %2 to i64*
  %26 = load i64, i64* %25, align 8
  store %class.SkImageFilterLight* null, %class.SkImageFilterLight** %24, align 8
  %27 = bitcast %class.sk_sp.209* %12 to i64*
  store i64 %26, i64* %27, align 8
  call void @_ZN16GrLightingEffectC2EN11GrProcessor7ClassIDE18GrSurfaceProxyView5sk_spIK18SkImageFilterLightEfRK8SkMatrix12BoundaryModePK7SkIRectRK6GrCaps(%class.GrLightingEffect* %13, i32 77, %class.GrSurfaceProxyView* nonnull %11, %class.sk_sp.209* nonnull %12, float %3, %class.SkMatrix* dereferenceable(40) %4, i32 %7, %struct.SkIRect* %8, %class.GrCaps* dereferenceable(232) %9)
  %28 = getelementptr inbounds %class.sk_sp.209, %class.sk_sp.209* %12, i64 0, i32 0
  %29 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %28, align 8
  %30 = icmp eq %class.SkImageFilterLight* %29, null
  br i1 %30, label %41, label %31

31:                                               ; preds = %10
  %32 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %29, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = bitcast %class.SkImageFilterLight* %29 to %class.SkRefCntBase*
  %37 = bitcast %class.SkImageFilterLight* %29 to void (%class.SkRefCntBase*)***
  %38 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, i64 2
  %40 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, align 8
  tail call void %40(%class.SkRefCntBase* nonnull %36) #11
  br label %41

41:                                               ; preds = %10, %31, %35
  %42 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %11, i64 0, i32 0, i32 0
  %43 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %42, align 8
  %44 = icmp eq %class.GrSurfaceProxy* %43, null
  br i1 %44, label %57, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %43, i64 0, i32 1
  %47 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %57

50:                                               ; preds = %45
  %51 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %46, i64 -2
  %52 = bitcast %class.SkNVRefCnt* %51 to %class.GrSurfaceProxy*
  %53 = bitcast %class.SkNVRefCnt* %51 to void (%class.GrSurfaceProxy*)***
  %54 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %53, align 8
  %55 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %54, i64 1
  %56 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %55, align 8
  tail call void %56(%class.GrSurfaceProxy* nonnull %52) #11
  br label %57

57:                                               ; preds = %41, %45, %50
  %58 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV24GrSpecularLightingEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %59 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 1
  store float %5, float* %59, align 8
  %60 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 2
  store float %6, float* %60, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24GrSpecularLightingEffectC2ERKS_(%class.GrSpecularLightingEffect*, %class.GrSpecularLightingEffect* dereferenceable(128)) unnamed_addr #0 align 2 {
  %3 = bitcast %class.GrSpecularLightingEffect* %0 to %class.GrFragmentProcessor*
  %4 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = bitcast %class.GrSpecularLightingEffect* %1 to %class.GrFragmentProcessor*
  %7 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %1, i64 0, i32 0, i32 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 7
  %10 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 %5, i32* %11, align 8
  %12 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 0, i32 0, i32 1, i32 1
  %14 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %15 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 1
  %16 = bitcast %class.SkTArray.127* %13 to i8**
  store i8* %14, i8** %16, align 8
  store i64 8589934592, i64* %15, align 8
  %17 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 0, i32 0, i32 2
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %17, align 8
  %18 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 0, i32 0, i32 3
  store i32 %9, i32* %18, align 8
  %19 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 0, i32 0, i32 4, i32 0
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 0, i32 0, i32 4, i32 1
  store i8 0, i8* %20, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV16GrLightingEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %21 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 0, i32 1, i32 0
  %22 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %1, i64 0, i32 0, i32 1, i32 0
  %23 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %22, align 8
  %24 = icmp eq %class.SkImageFilterLight* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %23, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 1 monotonic
  br label %28

28:                                               ; preds = %2, %25
  store %class.SkImageFilterLight* %23, %class.SkImageFilterLight** %21, align 8
  %29 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 0, i32 2
  %30 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %1, i64 0, i32 0, i32 2
  %31 = bitcast float* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = bitcast float* %29 to i32*
  store i32 %32, i32* %33, align 8
  %34 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 0, i32 3
  %35 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %1, i64 0, i32 0, i32 3
  %36 = bitcast %class.SkMatrix* %34 to i8*
  %37 = bitcast %class.SkMatrix* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 40, i1 false) #11
  %38 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 0, i32 4
  %39 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %1, i64 0, i32 0, i32 4
  %40 = load i32, i32* %39, align 4
  store i32 %40, i32* %38, align 4
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %6) #11
  %41 = load i32, i32* %18, align 8
  %42 = or i32 %41, 16
  store i32 %42, i32* %18, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV24GrSpecularLightingEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %43 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 1
  %44 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %1, i64 0, i32 1
  %45 = bitcast float* %44 to i32*
  %46 = load i32, i32* %45, align 8
  %47 = bitcast float* %43 to i32*
  store i32 %46, i32* %47, align 8
  %48 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 2
  %49 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %1, i64 0, i32 2
  %50 = bitcast float* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = bitcast float* %48 to i32*
  store i32 %51, i32* %52, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK24GrSpecularLightingEffect9onIsEqualERK19GrFragmentProcessor(%class.GrSpecularLightingEffect* nocapture readonly, %class.GrFragmentProcessor* nocapture readonly dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 0, i32 1, i32 0
  %4 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %3, align 8
  %5 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1
  %6 = bitcast %class.GrFragmentProcessor* %5 to %class.SkImageFilterLight**
  %7 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %6, align 8
  %8 = bitcast %class.SkImageFilterLight* %4 to i1 (%class.SkImageFilterLight*, %class.SkImageFilterLight*)***
  %9 = load i1 (%class.SkImageFilterLight*, %class.SkImageFilterLight*)**, i1 (%class.SkImageFilterLight*, %class.SkImageFilterLight*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%class.SkImageFilterLight*, %class.SkImageFilterLight*)*, i1 (%class.SkImageFilterLight*, %class.SkImageFilterLight*)** %9, i64 5
  %11 = load i1 (%class.SkImageFilterLight*, %class.SkImageFilterLight*)*, i1 (%class.SkImageFilterLight*, %class.SkImageFilterLight*)** %10, align 8
  %12 = tail call zeroext i1 %11(%class.SkImageFilterLight* %4, %class.SkImageFilterLight* dereferenceable(24) %7) #11
  br i1 %12, label %13, label %40

13:                                               ; preds = %2
  %14 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 0, i32 2
  %15 = load float, float* %14, align 8
  %16 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 0, i32 1
  %17 = bitcast i32* %16 to float*
  %18 = load float, float* %17, align 8
  %19 = fcmp oeq float %15, %18
  br i1 %19, label %20, label %40

20:                                               ; preds = %13
  %21 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 0, i32 4
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 4, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %26, label %40

26:                                               ; preds = %20
  %27 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 1
  %28 = load float, float* %27, align 8
  %29 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 4, i32 1
  %30 = bitcast i8* %29 to float*
  %31 = load float, float* %30, align 8
  %32 = fcmp oeq float %28, %31
  br i1 %32, label %33, label %40

33:                                               ; preds = %26
  %34 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 2
  %35 = load float, float* %34, align 4
  %36 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 5
  %37 = bitcast [4 x i8]* %36 to float*
  %38 = load float, float* %37, align 4
  %39 = fcmp oeq float %35, %38
  br label %40

40:                                               ; preds = %2, %13, %33, %26, %20
  %41 = phi i1 [ false, %26 ], [ false, %20 ], [ %39, %33 ], [ false, %13 ], [ false, %2 ]
  ret i1 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24GrSpecularLightingEffect21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%class.GrSpecularLightingEffect* nocapture readonly, %class.GrShaderCaps* nocapture readnone dereferenceable(144), %class.GrProcessorKeyBuilder*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 0, i32 4
  %6 = load i32, i32* %5, align 4
  %7 = shl i32 %6, 2
  %8 = getelementptr inbounds %class.GrProcessor, %class.GrProcessor* %4, i64 4
  %9 = bitcast %class.GrProcessor* %8 to %class.SkImageFilterLight**
  %10 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %9, align 8
  %11 = bitcast %class.SkImageFilterLight* %10 to i32 (%class.SkImageFilterLight*)***
  %12 = load i32 (%class.SkImageFilterLight*)**, i32 (%class.SkImageFilterLight*)*** %11, align 8
  %13 = getelementptr inbounds i32 (%class.SkImageFilterLight*)*, i32 (%class.SkImageFilterLight*)** %12, i64 3
  %14 = load i32 (%class.SkImageFilterLight*)*, i32 (%class.SkImageFilterLight*)** %13, align 8
  %15 = tail call i32 %14(%class.SkImageFilterLight* %10) #11
  %16 = or i32 %15, %7
  %17 = bitcast %class.GrProcessorKeyBuilder* %2 to void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)***
  %18 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %18, i64 2
  %20 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %19, align 8
  tail call void %20(%class.GrProcessorKeyBuilder* %2, i32 32, i32 %16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.68, i64 0, i64 0)) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrGLSLFragmentProcessor* @_ZNK24GrSpecularLightingEffect17onMakeProgramImplEv(%class.GrSpecularLightingEffect* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 64) #14
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 16
  %5 = bitcast i8* %4 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %2, i8 0, i64 48, i1 false) #11
  store i64 1, i64* %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 32
  %7 = bitcast i8* %6 to i64*
  %8 = getelementptr inbounds i8, i8* %2, i64 24
  %9 = bitcast i8* %8 to %"class.std::__1::unique_ptr.210"**
  store %"class.std::__1::unique_ptr.210"* null, %"class.std::__1::unique_ptr.210"** %9, align 8
  store i64 1, i64* %7, align 8
  %10 = getelementptr inbounds i8, i8* %2, i64 40
  %11 = bitcast i8* %10 to i32*
  store i32 -1, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %2, i64 48
  %13 = bitcast i8* %12 to %class.GrGLLight**
  store %class.GrGLLight* null, %class.GrGLLight** %13, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV26GrGLSpecularLightingEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %14 = getelementptr inbounds i8, i8* %2, i64 56
  %15 = bitcast i8* %14 to i32*
  store i32 -1, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %2, i64 60
  %17 = bitcast i8* %16 to i32*
  store i32 -1, i32* %17, align 4
  %18 = bitcast i8* %2 to %class.GrGLSLFragmentProcessor*
  ret %class.GrGLSLFragmentProcessor* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26GrGLSpecularLightingEffect13emitLightFuncEPK19GrFragmentProcessorP20GrGLSLUniformHandlerP23GrGLSLFPFragmentBuilderP8SkString(%class.GrGLSpecularLightingEffect* nocapture, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, %class.SkString*) unnamed_addr #0 align 2 {
  %6 = alloca %class.SkString, align 8
  %7 = alloca %class.SkString, align 8
  %8 = alloca %class.SkString, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca [3 x %class.GrShaderVar], align 16
  %12 = alloca %class.SkString, align 8
  %13 = alloca %class.SkString, align 8
  %14 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %15 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %16 = bitcast %class.GrGLSLUniformHandler* %2 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %17 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %16, align 8
  %18 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %17, i64 13
  %19 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %18, align 8
  %20 = call i32 %19(%class.GrGLSLUniformHandler* %2, %class.GrFragmentProcessor* %1, i32 16, i32 28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i64 0, i64 0), i1 zeroext true, i32 0, i8** nonnull %9) #11
  %21 = getelementptr inbounds %class.GrGLSpecularLightingEffect, %class.GrGLSpecularLightingEffect* %0, i64 0, i32 1, i32 0
  store i32 %20, i32* %21, align 8
  %22 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %16, align 8
  %23 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %22, i64 13
  %24 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %23, align 8
  %25 = call i32 %24(%class.GrGLSLUniformHandler* %2, %class.GrFragmentProcessor* %1, i32 16, i32 28, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.35, i64 0, i64 0), i1 zeroext true, i32 0, i8** nonnull %10) #11
  %26 = getelementptr inbounds %class.GrGLSpecularLightingEffect, %class.GrGLSpecularLightingEffect* %0, i64 0, i32 2, i32 0
  store i32 %25, i32* %26, align 4
  %27 = bitcast [3 x %class.GrShaderVar]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %27) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %27, i8 -86, i64 120, i1 false)
  %28 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %11, i64 0, i64 0
  %29 = bitcast %class.SkString* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29)
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i64 0, i64 0)) #11
  %30 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %11, i64 0, i64 0, i32 0
  store i32 30, i32* %30, align 16
  %31 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %11, i64 0, i64 0, i32 1
  store i32 0, i32* %31, align 4
  %32 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %11, i64 0, i64 0, i32 2
  store i32 0, i32* %32, align 8
  %33 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %11, i64 0, i64 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %33, %class.SkString* nonnull dereferenceable(8) %8) #11
  %34 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %11, i64 0, i64 0, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %34) #11
  %35 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %11, i64 0, i64 0, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %35) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29)
  %36 = bitcast %class.SkString* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36)
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i64 0, i64 0)) #11
  %37 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %11, i64 0, i64 1, i32 0
  store i32 30, i32* %37, align 8
  %38 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %11, i64 0, i64 1, i32 1
  store i32 0, i32* %38, align 4
  %39 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %11, i64 0, i64 1, i32 2
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %11, i64 0, i64 1, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %40, %class.SkString* nonnull dereferenceable(8) %7) #11
  %41 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %11, i64 0, i64 1, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %41) #11
  %42 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %11, i64 0, i64 1, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %42) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  %43 = bitcast %class.SkString* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43)
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0)) #11
  %44 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %11, i64 0, i64 2, i32 0
  store i32 30, i32* %44, align 16
  %45 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %11, i64 0, i64 2, i32 1
  store i32 0, i32* %45, align 4
  %46 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %11, i64 0, i64 2, i32 2
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %11, i64 0, i64 2, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %47, %class.SkString* nonnull dereferenceable(8) %6) #11
  %48 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %11, i64 0, i64 2, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %48) #11
  %49 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %11, i64 0, i64 2, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %49) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43)
  %50 = bitcast %class.SkString* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #11
  %51 = getelementptr inbounds %class.SkString, %class.SkString* %12, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %51, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %12) #11
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %12, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.36, i64 0, i64 0)) #11
  %52 = load i8*, i8** %9, align 8
  %53 = load i8*, i8** %10, align 8
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %12, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.37, i64 0, i64 0), i8* %52, i8* %53) #11
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %12, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.38, i64 0, i64 0)) #11
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %12, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.39, i64 0, i64 0)) #11
  %54 = bitcast %class.SkString* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #11
  %55 = bitcast %class.GrGLSLFPFragmentBuilder* %3 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr i8, i8* %56, i64 -24
  %58 = bitcast i8* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %class.GrGLSLFPFragmentBuilder* %3 to i8*
  %61 = getelementptr inbounds i8, i8* %60, i64 %59
  %62 = bitcast i8* %61 to %class.GrGLSLShaderBuilder*
  call void @_ZN19GrGLSLShaderBuilder22getMangledFunctionNameEPKc(%class.SkString* nonnull sret %13, %class.GrGLSLShaderBuilder* %62, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i64 0, i64 0)) #11
  %63 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %4, %class.SkString* nonnull dereferenceable(8) %13) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #11
  %64 = load i8*, i8** %55, align 8
  %65 = getelementptr i8, i8* %64, i64 -24
  %66 = bitcast i8* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds i8, i8* %60, i64 %67
  %69 = bitcast i8* %68 to %class.GrGLSLShaderBuilder*
  %70 = getelementptr inbounds %class.SkString, %class.SkString* %4, i64 0, i32 0, i32 0
  %71 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %70, align 8
  %72 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %71, i64 0, i32 2
  %73 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %51, align 8
  %74 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %73, i64 0, i32 2
  call void @_ZN19GrGLSLShaderBuilder12emitFunctionE8GrSLTypePKc6SkSpanIK11GrShaderVarES2_(%class.GrGLSLShaderBuilder* %69, i32 31, i8* %72, %class.GrShaderVar* nonnull %28, i64 3, i8* %74) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #11
  %75 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %11, i64 0, i64 2, i32 5
  call void @_ZN8SkStringD1Ev(%class.SkString* %75) #11
  %76 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %11, i64 0, i64 2, i32 4
  call void @_ZN8SkStringD1Ev(%class.SkString* %76) #11
  %77 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %11, i64 0, i64 2, i32 3
  call void @_ZN8SkStringD1Ev(%class.SkString* %77) #11
  %78 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %11, i64 0, i64 1, i32 5
  call void @_ZN8SkStringD1Ev(%class.SkString* %78) #11
  %79 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %11, i64 0, i64 1, i32 4
  call void @_ZN8SkStringD1Ev(%class.SkString* %79) #11
  %80 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %11, i64 0, i64 1, i32 3
  call void @_ZN8SkStringD1Ev(%class.SkString* %80) #11
  %81 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %11, i64 0, i64 0, i32 5
  call void @_ZN8SkStringD1Ev(%class.SkString* %81) #11
  %82 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %11, i64 0, i64 0, i32 4
  call void @_ZN8SkStringD1Ev(%class.SkString* %82) #11
  %83 = getelementptr inbounds [3 x %class.GrShaderVar], [3 x %class.GrShaderVar]* %11, i64 0, i64 0, i32 3
  call void @_ZN8SkStringD1Ev(%class.SkString* %83) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %27) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26GrGLSpecularLightingEffect9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLSpecularLightingEffect* nocapture, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrGLSpecularLightingEffect, %class.GrGLSpecularLightingEffect* %0, i64 0, i32 0, i32 2
  %5 = load %class.GrGLLight*, %class.GrGLLight** %4, align 8
  %6 = icmp eq %class.GrGLLight* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1
  %9 = bitcast %class.GrFragmentProcessor* %8 to %class.SkImageFilterLight**
  %10 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %9, align 8
  %11 = bitcast %class.SkImageFilterLight* %10 to %class.GrGLLight* (%class.SkImageFilterLight*)***
  %12 = load %class.GrGLLight* (%class.SkImageFilterLight*)**, %class.GrGLLight* (%class.SkImageFilterLight*)*** %11, align 8
  %13 = getelementptr inbounds %class.GrGLLight* (%class.SkImageFilterLight*)*, %class.GrGLLight* (%class.SkImageFilterLight*)** %12, i64 4
  %14 = load %class.GrGLLight* (%class.SkImageFilterLight*)*, %class.GrGLLight* (%class.SkImageFilterLight*)** %13, align 8
  %15 = tail call %class.GrGLLight* %14(%class.SkImageFilterLight* %10) #11
  store %class.GrGLLight* %15, %class.GrGLLight** %4, align 8
  br label %16

16:                                               ; preds = %3, %7
  %17 = getelementptr inbounds %class.GrGLSpecularLightingEffect, %class.GrGLSpecularLightingEffect* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 0, i32 1
  %20 = bitcast i32* %19 to float*
  %21 = load float, float* %20, align 8
  %22 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, float)***
  %23 = load void (%class.GrGLSLProgramDataManager*, i32, float)**, void (%class.GrGLSLProgramDataManager*, i32, float)*** %22, align 8
  %24 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %23, i64 4
  %25 = load void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %24, align 8
  tail call void %25(%class.GrGLSLProgramDataManager* %1, i32 %18, float %21) #11
  %26 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1
  %27 = bitcast %class.GrFragmentProcessor* %26 to %class.SkImageFilterLight**
  %28 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %27, align 8
  %29 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 0, i32 2
  %30 = bitcast i32* %29 to %class.SkMatrix*
  %31 = bitcast %class.SkImageFilterLight* %28 to %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)***
  %32 = load %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)**, %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)*** %31, align 8
  %33 = getelementptr inbounds %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)*, %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)** %32, i64 6
  %34 = load %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)*, %class.SkImageFilterLight* (%class.SkImageFilterLight*, %class.SkMatrix*)** %33, align 8
  %35 = tail call %class.SkImageFilterLight* %34(%class.SkImageFilterLight* %28, %class.SkMatrix* dereferenceable(40) %30) #11
  %36 = load %class.GrGLLight*, %class.GrGLLight** %4, align 8
  %37 = bitcast %class.GrGLLight* %36 to void (%class.GrGLLight*, %class.GrGLSLProgramDataManager*, %class.SkImageFilterLight*)***
  %38 = load void (%class.GrGLLight*, %class.GrGLSLProgramDataManager*, %class.SkImageFilterLight*)**, void (%class.GrGLLight*, %class.GrGLSLProgramDataManager*, %class.SkImageFilterLight*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.GrGLLight*, %class.GrGLSLProgramDataManager*, %class.SkImageFilterLight*)*, void (%class.GrGLLight*, %class.GrGLSLProgramDataManager*, %class.SkImageFilterLight*)** %38, i64 4
  %40 = load void (%class.GrGLLight*, %class.GrGLSLProgramDataManager*, %class.SkImageFilterLight*)*, void (%class.GrGLLight*, %class.GrGLSLProgramDataManager*, %class.SkImageFilterLight*)** %39, align 8
  tail call void %40(%class.GrGLLight* %36, %class.GrGLSLProgramDataManager* dereferenceable(8) %1, %class.SkImageFilterLight* %35) #11
  %41 = icmp eq %class.SkImageFilterLight* %35, null
  br i1 %41, label %52, label %42

42:                                               ; preds = %16
  %43 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %35, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 -1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %52

46:                                               ; preds = %42
  %47 = bitcast %class.SkImageFilterLight* %35 to %class.SkRefCntBase*
  %48 = bitcast %class.SkImageFilterLight* %35 to void (%class.SkRefCntBase*)***
  %49 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %48, align 8
  %50 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, i64 2
  %51 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %50, align 8
  tail call void %51(%class.SkRefCntBase* nonnull %47) #11
  br label %52

52:                                               ; preds = %16, %42, %46
  %53 = getelementptr inbounds %class.GrGLSpecularLightingEffect, %class.GrGLSpecularLightingEffect* %0, i64 0, i32 1, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 4, i32 1
  %56 = bitcast i8* %55 to float*
  %57 = load float, float* %56, align 8
  %58 = load void (%class.GrGLSLProgramDataManager*, i32, float)**, void (%class.GrGLSLProgramDataManager*, i32, float)*** %22, align 8
  %59 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %58, i64 4
  %60 = load void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %59, align 8
  tail call void %60(%class.GrGLSLProgramDataManager* %1, i32 %54, float %57) #11
  %61 = getelementptr inbounds %class.GrGLSpecularLightingEffect, %class.GrGLSpecularLightingEffect* %0, i64 0, i32 2, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 5
  %64 = bitcast [4 x i8]* %63 to float*
  %65 = load float, float* %64, align 4
  %66 = load void (%class.GrGLSLProgramDataManager*, i32, float)**, void (%class.GrGLSLProgramDataManager*, i32, float)*** %22, align 8
  %67 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %66, i64 4
  %68 = load void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %67, align 8
  tail call void %68(%class.GrGLSLProgramDataManager* %1, i32 %62, float %65) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9GrGLLight14emitLightColorEPK19GrFragmentProcessorP20GrGLSLUniformHandlerP23GrGLSLFPFragmentBuilderPKc(%class.GrGLLight* nocapture readonly, %class.GrFragmentProcessor* nocapture readnone, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder* nocapture readonly, i8* nocapture readnone) unnamed_addr #0 align 2 {
  %6 = bitcast %class.GrGLSLFPFragmentBuilder* %3 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr i8, i8* %7, i64 -24
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %class.GrGLSLFPFragmentBuilder* %3 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 %10
  %13 = getelementptr inbounds %class.GrGLLight, %class.GrGLLight* %0, i64 0, i32 1, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = bitcast %class.GrGLSLUniformHandler* %2 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %16 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %15, align 8
  %17 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %16, i64 3
  %18 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %17, align 8
  %19 = tail call i8* %18(%class.GrGLSLUniformHandler* %2, i32 %14) #11
  %20 = getelementptr inbounds i8, i8* %12, i64 160
  %21 = getelementptr inbounds i8, i8* %12, i64 488
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = bitcast i8* %20 to %class.SkString**
  %25 = load %class.SkString*, %class.SkString** %24, align 8
  %26 = sext i32 %23 to i64
  %27 = getelementptr inbounds %class.SkString, %class.SkString* %25, i64 %26
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %27, i64 -1, i8* %19) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9GrGLLight7setDataERK24GrGLSLProgramDataManagerPK18SkImageFilterLight(%class.GrGLLight* nocapture readonly, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.SkImageFilterLight* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkPoint3, align 8
  %5 = getelementptr inbounds %class.GrGLLight, %class.GrGLLight* %0, i64 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = bitcast %struct.SkPoint3* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #11
  %8 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %2, i64 0, i32 1, i32 0
  %9 = bitcast float* %8 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 4
  %11 = fmul <2 x float> %10, <float 0x3F70101020000000, float 0x3F70101020000000>
  %12 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %2, i64 0, i32 1, i32 2
  %13 = load float, float* %12, align 4
  %14 = fmul float %13, 0x3F70101020000000
  %15 = bitcast %struct.SkPoint3* %4 to <2 x float>*
  store <2 x float> %11, <2 x float>* %15, align 8
  %16 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %4, i64 0, i32 2
  store float %14, float* %16, align 8
  %17 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %4, i64 0, i32 0
  %18 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, i32, float*)***
  %19 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %19, i64 13
  %21 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %20, align 8
  call void %21(%class.GrGLSLProgramDataManager* %1, i32 %6, i32 1, float* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK16GrGLDistantLight7setDataERK24GrGLSLProgramDataManagerPK18SkImageFilterLight(%class.GrGLDistantLight* nocapture readonly, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.SkImageFilterLight*) unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkPoint3, align 8
  %5 = getelementptr inbounds %class.GrGLDistantLight, %class.GrGLDistantLight* %0, i64 0, i32 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = bitcast %struct.SkPoint3* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #11
  %8 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %2, i64 0, i32 1, i32 0
  %9 = bitcast float* %8 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 4
  %11 = fmul <2 x float> %10, <float 0x3F70101020000000, float 0x3F70101020000000>
  %12 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %2, i64 0, i32 1, i32 2
  %13 = load float, float* %12, align 4
  %14 = fmul float %13, 0x3F70101020000000
  %15 = bitcast %struct.SkPoint3* %4 to <2 x float>*
  store <2 x float> %11, <2 x float>* %15, align 8
  %16 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %4, i64 0, i32 2
  store float %14, float* %16, align 8
  %17 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %4, i64 0, i32 0
  %18 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, i32, float*)***
  %19 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %19, i64 13
  %21 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %20, align 8
  call void %21(%class.GrGLSLProgramDataManager* %1, i32 %6, i32 1, float* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #11
  %22 = getelementptr inbounds %class.GrGLDistantLight, %class.GrGLDistantLight* %0, i64 0, i32 1, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %2, i64 1
  %25 = bitcast %class.SkImageFilterLight* %24 to float*
  %26 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %18, align 8
  %27 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %26, i64 13
  %28 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %27, align 8
  call void %28(%class.GrGLSLProgramDataManager* %1, i32 %23, i32 1, float* %25) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrGLDistantLight18emitSurfaceToLightEPK19GrFragmentProcessorP20GrGLSLUniformHandlerP23GrGLSLFPFragmentBuilderPKc(%class.GrGLDistantLight* nocapture, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder* nocapture readonly, i8* nocapture readnone) unnamed_addr #0 align 2 {
  %6 = alloca i8*, align 8
  %7 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %8 = bitcast %class.GrGLSLUniformHandler* %2 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %9 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %8, align 8
  %10 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %9, i64 13
  %11 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %10, align 8
  %12 = call i32 %11(%class.GrGLSLUniformHandler* %2, %class.GrFragmentProcessor* %1, i32 16, i32 30, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.41, i64 0, i64 0), i1 zeroext true, i32 0, i8** nonnull %6) #11
  %13 = getelementptr inbounds %class.GrGLDistantLight, %class.GrGLDistantLight* %0, i64 0, i32 1, i32 0
  store i32 %12, i32* %13, align 4
  %14 = bitcast %class.GrGLSLFPFragmentBuilder* %3 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr i8, i8* %15, i64 -24
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %class.GrGLSLFPFragmentBuilder* %3 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  %21 = load i8*, i8** %6, align 8
  %22 = getelementptr inbounds i8, i8* %20, i64 160
  %23 = getelementptr inbounds i8, i8* %20, i64 488
  %24 = bitcast i8* %23 to i32*
  %25 = load i32, i32* %24, align 8
  %26 = bitcast i8* %22 to %class.SkString**
  %27 = load %class.SkString*, %class.SkString** %26, align 8
  %28 = sext i32 %25 to i64
  %29 = getelementptr inbounds %class.SkString, %class.SkString* %27, i64 %28
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %29, i64 -1, i8* %21) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK14GrGLPointLight7setDataERK24GrGLSLProgramDataManagerPK18SkImageFilterLight(%class.GrGLPointLight* nocapture readonly, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.SkImageFilterLight*) unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkPoint3, align 8
  %5 = getelementptr inbounds %class.GrGLPointLight, %class.GrGLPointLight* %0, i64 0, i32 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = bitcast %struct.SkPoint3* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #11
  %8 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %2, i64 0, i32 1, i32 0
  %9 = bitcast float* %8 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 4
  %11 = fmul <2 x float> %10, <float 0x3F70101020000000, float 0x3F70101020000000>
  %12 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %2, i64 0, i32 1, i32 2
  %13 = load float, float* %12, align 4
  %14 = fmul float %13, 0x3F70101020000000
  %15 = bitcast %struct.SkPoint3* %4 to <2 x float>*
  store <2 x float> %11, <2 x float>* %15, align 8
  %16 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %4, i64 0, i32 2
  store float %14, float* %16, align 8
  %17 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %4, i64 0, i32 0
  %18 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, i32, float*)***
  %19 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %19, i64 13
  %21 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %20, align 8
  call void %21(%class.GrGLSLProgramDataManager* %1, i32 %6, i32 1, float* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #11
  %22 = getelementptr inbounds %class.GrGLPointLight, %class.GrGLPointLight* %0, i64 0, i32 1, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %2, i64 1
  %25 = bitcast %class.SkImageFilterLight* %24 to float*
  %26 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %18, align 8
  %27 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %26, i64 13
  %28 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %27, align 8
  call void %28(%class.GrGLSLProgramDataManager* %1, i32 %23, i32 1, float* %25) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrGLPointLight18emitSurfaceToLightEPK19GrFragmentProcessorP20GrGLSLUniformHandlerP23GrGLSLFPFragmentBuilderPKc(%class.GrGLPointLight* nocapture, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, i8*) unnamed_addr #0 align 2 {
  %6 = alloca i8*, align 8
  %7 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %8 = bitcast %class.GrGLSLUniformHandler* %2 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %9 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %8, align 8
  %10 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %9, i64 13
  %11 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %10, align 8
  %12 = call i32 %11(%class.GrGLSLUniformHandler* %2, %class.GrFragmentProcessor* %1, i32 16, i32 30, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i64 0, i64 0), i1 zeroext true, i32 0, i8** nonnull %6) #11
  %13 = getelementptr inbounds %class.GrGLPointLight, %class.GrGLPointLight* %0, i64 0, i32 1, i32 0
  store i32 %12, i32* %13, align 4
  %14 = bitcast %class.GrGLSLFPFragmentBuilder* %3 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr i8, i8* %15, i64 -24
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %class.GrGLSLFPFragmentBuilder* %3 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  %21 = bitcast i8* %20 to %class.GrGLSLShaderBuilder*
  %22 = load i8*, i8** %6, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %21, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.43, i64 0, i64 0), i8* %22, i8* %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13GrGLSpotLight7setDataERK24GrGLSLProgramDataManagerPK18SkImageFilterLight(%class.GrGLSpotLight* nocapture readonly, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.SkImageFilterLight*) unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkPoint3, align 8
  %5 = getelementptr inbounds %class.GrGLSpotLight, %class.GrGLSpotLight* %0, i64 0, i32 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = bitcast %struct.SkPoint3* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #11
  %8 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %2, i64 0, i32 1, i32 0
  %9 = bitcast float* %8 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 4
  %11 = fmul <2 x float> %10, <float 0x3F70101020000000, float 0x3F70101020000000>
  %12 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %2, i64 0, i32 1, i32 2
  %13 = load float, float* %12, align 4
  %14 = fmul float %13, 0x3F70101020000000
  %15 = bitcast %struct.SkPoint3* %4 to <2 x float>*
  store <2 x float> %11, <2 x float>* %15, align 8
  %16 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %4, i64 0, i32 2
  store float %14, float* %16, align 8
  %17 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %4, i64 0, i32 0
  %18 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, i32, float*)***
  %19 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %19, i64 13
  %21 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %20, align 8
  call void %21(%class.GrGLSLProgramDataManager* %1, i32 %6, i32 1, float* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #11
  %22 = bitcast %class.SkImageFilterLight* %2 to %class.SkSpotLight*
  %23 = getelementptr inbounds %class.GrGLSpotLight, %class.GrGLSpotLight* %0, i64 0, i32 2, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %2, i64 1
  %26 = bitcast %class.SkImageFilterLight* %25 to float*
  %27 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %18, align 8
  %28 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %27, i64 13
  %29 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %28, align 8
  call void %29(%class.GrGLSLProgramDataManager* %1, i32 %24, i32 1, float* %26) #11
  %30 = getelementptr inbounds %class.GrGLSpotLight, %class.GrGLSpotLight* %0, i64 0, i32 3, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %2, i64 2
  %33 = bitcast %class.SkImageFilterLight* %32 to float*
  %34 = load float, float* %33, align 8
  %35 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, float)***
  %36 = load void (%class.GrGLSLProgramDataManager*, i32, float)**, void (%class.GrGLSLProgramDataManager*, i32, float)*** %35, align 8
  %37 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %36, i64 4
  %38 = load void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %37, align 8
  call void %38(%class.GrGLSLProgramDataManager* %1, i32 %31, float %34) #11
  %39 = getelementptr inbounds %class.GrGLSpotLight, %class.GrGLSpotLight* %0, i64 0, i32 5, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %2, i64 2, i32 0, i32 0, i32 1
  %42 = bitcast %"struct.std::__1::atomic"* %41 to float*
  %43 = load float, float* %42, align 8
  %44 = load void (%class.GrGLSLProgramDataManager*, i32, float)**, void (%class.GrGLSLProgramDataManager*, i32, float)*** %35, align 8
  %45 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %44, i64 4
  %46 = load void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %45, align 8
  call void %46(%class.GrGLSLProgramDataManager* %1, i32 %40, float %43) #11
  %47 = getelementptr inbounds %class.GrGLSpotLight, %class.GrGLSpotLight* %0, i64 0, i32 4, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %22, i64 0, i32 4
  %50 = load float, float* %49, align 4
  %51 = load void (%class.GrGLSLProgramDataManager*, i32, float)**, void (%class.GrGLSLProgramDataManager*, i32, float)*** %35, align 8
  %52 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %51, i64 4
  %53 = load void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %52, align 8
  call void %53(%class.GrGLSLProgramDataManager* %1, i32 %48, float %50) #11
  %54 = getelementptr inbounds %class.GrGLSpotLight, %class.GrGLSpotLight* %0, i64 0, i32 6, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %2, i64 2, i32 1, i32 0
  %57 = load float, float* %56, align 4
  %58 = load void (%class.GrGLSLProgramDataManager*, i32, float)**, void (%class.GrGLSLProgramDataManager*, i32, float)*** %35, align 8
  %59 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %58, i64 4
  %60 = load void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %59, align 8
  call void %60(%class.GrGLSLProgramDataManager* %1, i32 %55, float %57) #11
  %61 = getelementptr inbounds %class.GrGLSpotLight, %class.GrGLSpotLight* %0, i64 0, i32 7, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %2, i64 2, i32 1, i32 1
  %64 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %18, align 8
  %65 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %64, i64 13
  %66 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %65, align 8
  call void %66(%class.GrGLSLProgramDataManager* %1, i32 %62, i32 1, float* %63) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13GrGLSpotLight18emitSurfaceToLightEPK19GrFragmentProcessorP20GrGLSLUniformHandlerP23GrGLSLFPFragmentBuilderPKc(%class.GrGLSpotLight* nocapture, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, i8*) unnamed_addr #0 align 2 {
  %6 = alloca i8*, align 8
  %7 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %8 = bitcast %class.GrGLSLUniformHandler* %2 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %9 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %8, align 8
  %10 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %9, i64 13
  %11 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %10, align 8
  %12 = call i32 %11(%class.GrGLSLUniformHandler* %2, %class.GrFragmentProcessor* %1, i32 16, i32 30, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i64 0, i64 0), i1 zeroext true, i32 0, i8** nonnull %6) #11
  %13 = getelementptr inbounds %class.GrGLSpotLight, %class.GrGLSpotLight* %0, i64 0, i32 2, i32 0
  store i32 %12, i32* %13, align 8
  %14 = bitcast %class.GrGLSLFPFragmentBuilder* %3 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr i8, i8* %15, i64 -24
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %class.GrGLSLFPFragmentBuilder* %3 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  %21 = bitcast i8* %20 to %class.GrGLSLShaderBuilder*
  %22 = load i8*, i8** %6, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %21, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.43, i64 0, i64 0), i8* %22, i8* %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13GrGLSpotLight14emitLightColorEPK19GrFragmentProcessorP20GrGLSLUniformHandlerP23GrGLSLFPFragmentBuilderPKc(%class.GrGLSpotLight*, %class.GrFragmentProcessor*, %class.GrGLSLUniformHandler*, %class.GrGLSLFPFragmentBuilder*, i8*) unnamed_addr #0 align 2 {
  %6 = alloca %class.SkString, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca [1 x %class.GrShaderVar], align 16
  %13 = alloca %class.SkString, align 8
  %14 = alloca %class.SkString, align 8
  %15 = getelementptr inbounds %class.GrGLSpotLight, %class.GrGLSpotLight* %0, i64 0, i32 0, i32 1, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = bitcast %class.GrGLSLUniformHandler* %2 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %18 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %17, align 8
  %19 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %18, i64 3
  %20 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %19, align 8
  %21 = tail call i8* %20(%class.GrGLSLUniformHandler* %2, i32 %16) #11
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %24 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %25 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %26 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %11, align 8
  %27 = bitcast %class.GrGLSLUniformHandler* %2 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %28 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %27, align 8
  %29 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %28, i64 13
  %30 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %29, align 8
  %31 = call i32 %30(%class.GrGLSLUniformHandler* %2, %class.GrFragmentProcessor* %1, i32 16, i32 28, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.44, i64 0, i64 0), i1 zeroext true, i32 0, i8** nonnull %7) #11
  %32 = getelementptr inbounds %class.GrGLSpotLight, %class.GrGLSpotLight* %0, i64 0, i32 3, i32 0
  store i32 %31, i32* %32, align 4
  %33 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %27, align 8
  %34 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %33, i64 13
  %35 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %34, align 8
  %36 = call i32 %35(%class.GrGLSLUniformHandler* %2, %class.GrFragmentProcessor* %1, i32 16, i32 28, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.45, i64 0, i64 0), i1 zeroext true, i32 0, i8** nonnull %8) #11
  %37 = getelementptr inbounds %class.GrGLSpotLight, %class.GrGLSpotLight* %0, i64 0, i32 5, i32 0
  store i32 %36, i32* %37, align 4
  %38 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %27, align 8
  %39 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %38, i64 13
  %40 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %39, align 8
  %41 = call i32 %40(%class.GrGLSLUniformHandler* %2, %class.GrFragmentProcessor* %1, i32 16, i32 28, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.46, i64 0, i64 0), i1 zeroext true, i32 0, i8** nonnull %9) #11
  %42 = getelementptr inbounds %class.GrGLSpotLight, %class.GrGLSpotLight* %0, i64 0, i32 4, i32 0
  store i32 %41, i32* %42, align 8
  %43 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %27, align 8
  %44 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %43, i64 13
  %45 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %44, align 8
  %46 = call i32 %45(%class.GrGLSLUniformHandler* %2, %class.GrFragmentProcessor* %1, i32 16, i32 28, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.47, i64 0, i64 0), i1 zeroext true, i32 0, i8** nonnull %10) #11
  %47 = getelementptr inbounds %class.GrGLSpotLight, %class.GrGLSpotLight* %0, i64 0, i32 6, i32 0
  store i32 %46, i32* %47, align 8
  %48 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %27, align 8
  %49 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %48, i64 13
  %50 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %49, align 8
  %51 = call i32 %50(%class.GrGLSLUniformHandler* %2, %class.GrFragmentProcessor* %1, i32 16, i32 30, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i64 0, i64 0), i1 zeroext true, i32 0, i8** nonnull %11) #11
  %52 = getelementptr inbounds %class.GrGLSpotLight, %class.GrGLSpotLight* %0, i64 0, i32 7, i32 0
  store i32 %51, i32* %52, align 4
  %53 = bitcast [1 x %class.GrShaderVar]* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %53) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %53, i8 -86, i64 40, i1 false)
  %54 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %12, i64 0, i64 0
  %55 = bitcast %class.SkString* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55)
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %6, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i64 0, i64 0)) #11
  %56 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %12, i64 0, i64 0, i32 0
  store i32 30, i32* %56, align 16
  %57 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %12, i64 0, i64 0, i32 1
  store i32 0, i32* %57, align 4
  %58 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %12, i64 0, i64 0, i32 2
  store i32 0, i32* %58, align 8
  %59 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %12, i64 0, i64 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %59, %class.SkString* nonnull dereferenceable(8) %6) #11
  %60 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %12, i64 0, i64 0, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %60) #11
  %61 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %12, i64 0, i64 0, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %61) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55)
  %62 = bitcast %class.SkString* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #11
  %63 = getelementptr inbounds %class.SkString, %class.SkString* %13, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %63, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %13) #11
  %64 = load i8*, i8** %11, align 8
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.49, i64 0, i64 0), i8* %64) #11
  %65 = load i8*, i8** %9, align 8
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %13, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.50, i64 0, i64 0), i8* %65) #11
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %13, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.51, i64 0, i64 0)) #11
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i64 0, i64 0)) #11
  %66 = load i8*, i8** %7, align 8
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %13, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.53, i64 0, i64 0), i8* %66) #11
  %67 = load i8*, i8** %8, align 8
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %13, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.50, i64 0, i64 0), i8* %67) #11
  %68 = load i8*, i8** %9, align 8
  %69 = load i8*, i8** %10, align 8
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.54, i64 0, i64 0), i8* %21, i8* %68, i8* %69) #11
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i64 0, i64 0)) #11
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %13, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.55, i64 0, i64 0), i8* %21) #11
  %70 = bitcast %class.SkString* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #11
  %71 = bitcast %class.GrGLSLFPFragmentBuilder* %3 to i8**
  %72 = load i8*, i8** %71, align 8
  %73 = getelementptr i8, i8* %72, i64 -24
  %74 = bitcast i8* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %class.GrGLSLFPFragmentBuilder* %3 to i8*
  %77 = getelementptr inbounds i8, i8* %76, i64 %75
  %78 = bitcast i8* %77 to %class.GrGLSLShaderBuilder*
  call void @_ZN19GrGLSLShaderBuilder22getMangledFunctionNameEPKc(%class.SkString* nonnull sret %14, %class.GrGLSLShaderBuilder* %78, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0)) #11
  %79 = getelementptr inbounds %class.GrGLSpotLight, %class.GrGLSpotLight* %0, i64 0, i32 1
  %80 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %79, %class.SkString* nonnull dereferenceable(8) %14) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #11
  %81 = load i8*, i8** %71, align 8
  %82 = getelementptr i8, i8* %81, i64 -24
  %83 = bitcast i8* %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds i8, i8* %76, i64 %84
  %86 = bitcast i8* %85 to %class.GrGLSLShaderBuilder*
  %87 = getelementptr inbounds %class.SkString, %class.SkString* %79, i64 0, i32 0, i32 0
  %88 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %87, align 8
  %89 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %88, i64 0, i32 2
  %90 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %63, align 8
  %91 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %90, i64 0, i32 2
  call void @_ZN19GrGLSLShaderBuilder12emitFunctionE8GrSLTypePKc6SkSpanIK11GrShaderVarES2_(%class.GrGLSLShaderBuilder* %86, i32 30, i8* %89, %class.GrShaderVar* nonnull %54, i64 1, i8* %91) #11
  %92 = load i8*, i8** %71, align 8
  %93 = getelementptr i8, i8* %92, i64 -24
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds i8, i8* %76, i64 %95
  %97 = bitcast i8* %96 to %class.GrGLSLShaderBuilder*
  %98 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %87, align 8
  %99 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %98, i64 0, i32 2
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %97, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.56, i64 0, i64 0), i8* %99, i8* %4)
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #11
  %100 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %12, i64 0, i64 0, i32 5
  call void @_ZN8SkStringD1Ev(%class.SkString* %100) #11
  %101 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %12, i64 0, i64 0, i32 4
  call void @_ZN8SkStringD1Ev(%class.SkString* %101) #11
  %102 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %12, i64 0, i64 0, i32 3
  call void @_ZN8SkStringD1Ev(%class.SkString* %102) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %53) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrGLLightD0Ev(%class.GrGLLight*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrGLLightD2Ev(%class.GrGLLight*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16GrGLDistantLightD0Ev(%class.GrGLDistantLight*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.GrGLDistantLight* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14GrGLPointLightD0Ev(%class.GrGLPointLight*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.GrGLPointLight* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13GrGLSpotLightD2Ev(%class.GrGLSpotLight*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSpotLight, %class.GrGLSpotLight* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV13GrGLSpotLight, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLSpotLight, %class.GrGLSpotLight* %0, i64 0, i32 1
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13GrGLSpotLightD0Ev(%class.GrGLSpotLight*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSpotLight, %class.GrGLSpotLight* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV13GrGLSpotLight, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLSpotLight, %class.GrGLSpotLight* %0, i64 0, i32 1
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %3) #11
  %4 = bitcast %class.GrGLSpotLight* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN29SkLightingImageFilterInternalD2Ev(%class.SkLightingImageFilterInternal*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkLightingImageFilterInternal, %class.SkLightingImageFilterInternal* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV29SkLightingImageFilterInternal, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkLightingImageFilterInternal, %class.SkLightingImageFilterInternal* %0, i64 0, i32 2, i32 0
  %4 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %3, align 8
  %5 = icmp eq %class.SkImageFilterLight* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkImageFilterLight* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkImageFilterLight* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #11
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %class.SkLightingImageFilterInternal* %0 to %class.SkImageFilter_Base*
  tail call void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base* %17) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN28SkDiffuseLightingImageFilterD0Ev(%class.SkDiffuseLightingImageFilter*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkDiffuseLightingImageFilter, %class.SkDiffuseLightingImageFilter* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV29SkLightingImageFilterInternal, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkDiffuseLightingImageFilter, %class.SkDiffuseLightingImageFilter* %0, i64 0, i32 0, i32 2, i32 0
  %4 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %3, align 8
  %5 = icmp eq %class.SkImageFilterLight* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkImageFilterLight* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkImageFilterLight* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #11
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %class.SkDiffuseLightingImageFilter* %0 to %class.SkImageFilter_Base*
  tail call void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base* %17) #11
  %18 = bitcast %class.SkDiffuseLightingImageFilter* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #11
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void (%class.sk_sp.201*, %class.SkReadBuffer*)* @_ZNK28SkDiffuseLightingImageFilter10getFactoryEv(%class.SkDiffuseLightingImageFilter*) unnamed_addr #0 comdat align 2 {
  ret void (%class.sk_sp.201*, %class.SkReadBuffer*)* @_ZN28SkDiffuseLightingImageFilter10CreateProcER12SkReadBuffer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK28SkDiffuseLightingImageFilter11getTypeNameEv(%class.SkDiffuseLightingImageFilter*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK13SkImageFilter18getFlattenableTypeEv(%class.SkImageFilter*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

declare { <2 x float>, <2 x float> } @_ZNK13SkImageFilter17computeFastBoundsERK6SkRect(%class.SkImageFilter*, %struct.SkRect* dereferenceable(16)) unnamed_addr #2

declare { i64, i64 } @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #2

declare { i64, i64 } @_ZNK18SkImageFilter_Base18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter(%class.SkImageFilter_Base*, %class.SkColorFilter**) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv(%class.SkImageFilter_Base*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK29SkLightingImageFilterInternal23affectsTransparentBlackEv(%class.SkLightingImageFilterInternal*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE() unnamed_addr

declare { i64, i64 } @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16), %"class.skif::LayerSpace"* dereferenceable(16), i1 zeroext) unnamed_addr #2

declare { i64, i64 } @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN29SkSpecularLightingImageFilterD0Ev(%class.SkSpecularLightingImageFilter*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkSpecularLightingImageFilter, %class.SkSpecularLightingImageFilter* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV29SkLightingImageFilterInternal, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkSpecularLightingImageFilter, %class.SkSpecularLightingImageFilter* %0, i64 0, i32 0, i32 2, i32 0
  %4 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %3, align 8
  %5 = icmp eq %class.SkImageFilterLight* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkImageFilterLight* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkImageFilterLight* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #11
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %class.SkSpecularLightingImageFilter* %0 to %class.SkImageFilter_Base*
  tail call void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base* %17) #11
  %18 = bitcast %class.SkSpecularLightingImageFilter* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void (%class.sk_sp.201*, %class.SkReadBuffer*)* @_ZNK29SkSpecularLightingImageFilter10getFactoryEv(%class.SkSpecularLightingImageFilter*) unnamed_addr #0 comdat align 2 {
  ret void (%class.sk_sp.201*, %class.SkReadBuffer*)* @_ZN29SkSpecularLightingImageFilter10CreateProcER12SkReadBuffer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK29SkSpecularLightingImageFilter11getTypeNameEv(%class.SkSpecularLightingImageFilter*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18GrGLLightingEffectD0Ev(%class.GrGLLightingEffect*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16GrLightingEffectD0Ev(%class.GrLightingEffect*) unnamed_addr #5 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE(%class.GrFragmentProcessor*, %struct.SkRGBA4f* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.69, i64 0, i64 0), i32 397, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.70, i64 0, i64 0)) #15
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16GrLightingEffectD2Ev(%class.GrLightingEffect*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV16GrLightingEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %3, align 8
  %5 = icmp eq %class.SkImageFilterLight* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkImageFilterLight* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkImageFilterLight* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #11
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 0, i32 1, i32 1
  %18 = getelementptr inbounds %class.GrLightingEffect, %class.GrLightingEffect* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, 4294967294
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.SkTArray.127, %class.SkTArray.127* %17, i64 0, i32 0
  br label %28

24:                                               ; preds = %39, %16
  %25 = phi i64 [ %19, %16 ], [ %41, %39 ]
  %26 = and i64 %25, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %48, label %45

28:                                               ; preds = %39, %22
  %29 = phi i64 [ 0, %22 ], [ %40, %39 ]
  %30 = load %"class.std::__1::unique_ptr.122"*, %"class.std::__1::unique_ptr.122"** %23, align 8
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %30, i64 %29, i32 0, i32 0, i32 0
  %32 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %31, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %31, align 8
  %33 = icmp eq %class.GrFragmentProcessor* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %28
  %35 = bitcast %class.GrFragmentProcessor* %32 to void (%class.GrFragmentProcessor*)***
  %36 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %35, align 8
  %37 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %36, i64 1
  %38 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %37, align 8
  tail call void %38(%class.GrFragmentProcessor* nonnull %32) #11
  br label %39

39:                                               ; preds = %34, %28
  %40 = add nuw nsw i64 %29, 1
  %41 = load i64, i64* %18, align 8
  %42 = lshr i64 %41, 1
  %43 = and i64 %42, 2147483647
  %44 = icmp ult i64 %40, %43
  br i1 %44, label %28, label %24

45:                                               ; preds = %24
  %46 = bitcast %class.SkTArray.127* %17 to i8**
  %47 = load i8*, i8** %46, align 8
  tail call void @_Z7sk_freePv(i8* %47) #11
  br label %48

48:                                               ; preds = %24, %45
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrDiffuseLightingEffectD0Ev(%class.GrDiffuseLightingEffect*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV16GrLightingEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 0, i32 1, i32 0
  %4 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %3, align 8
  %5 = icmp eq %class.SkImageFilterLight* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkImageFilterLight* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkImageFilterLight* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #11
  br label %16

16:                                               ; preds = %10, %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 0, i32 0, i32 1, i32 1
  %18 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, 4294967294
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.SkTArray.127, %class.SkTArray.127* %17, i64 0, i32 0
  br label %28

24:                                               ; preds = %39, %16
  %25 = phi i64 [ %19, %16 ], [ %41, %39 ]
  %26 = and i64 %25, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %48, label %45

28:                                               ; preds = %39, %22
  %29 = phi i64 [ 0, %22 ], [ %40, %39 ]
  %30 = load %"class.std::__1::unique_ptr.122"*, %"class.std::__1::unique_ptr.122"** %23, align 8
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %30, i64 %29, i32 0, i32 0, i32 0
  %32 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %31, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %31, align 8
  %33 = icmp eq %class.GrFragmentProcessor* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %28
  %35 = bitcast %class.GrFragmentProcessor* %32 to void (%class.GrFragmentProcessor*)***
  %36 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %35, align 8
  %37 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %36, i64 1
  %38 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %37, align 8
  tail call void %38(%class.GrFragmentProcessor* nonnull %32) #11
  br label %39

39:                                               ; preds = %34, %28
  %40 = add nuw nsw i64 %29, 1
  %41 = load i64, i64* %18, align 8
  %42 = lshr i64 %41, 1
  %43 = and i64 %42, 2147483647
  %44 = icmp ult i64 %40, %43
  br i1 %44, label %28, label %24

45:                                               ; preds = %24
  %46 = bitcast %class.SkTArray.127* %17 to i8**
  %47 = load i8*, i8** %46, align 8
  tail call void @_Z7sk_freePv(i8* %47) #11
  br label %48

48:                                               ; preds = %24, %45
  %49 = bitcast %class.GrDiffuseLightingEffect* %0 to i8*
  tail call void @_ZN11GrProcessordlEPv(i8* %49) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK23GrDiffuseLightingEffect4nameEv(%class.GrDiffuseLightingEffect*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.71, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrFragmentProcessor* @_ZNK23GrDiffuseLightingEffect5cloneEv(%class.GrDiffuseLightingEffect*) unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_ZN11GrProcessornwEm(i64 128) #11
  %3 = bitcast i8* %2 to %class.GrFragmentProcessor*
  %4 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = bitcast %class.GrDiffuseLightingEffect* %0 to %class.GrFragmentProcessor*
  %7 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 0, i32 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 7
  %10 = bitcast i8* %2 to i32 (...)***
  %11 = getelementptr inbounds i8, i8* %2, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 %5, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %2, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %2, i64 24
  %16 = getelementptr inbounds i8, i8* %2, i64 16
  %17 = getelementptr inbounds i8, i8* %2, i64 32
  %18 = bitcast i8* %17 to i64*
  %19 = bitcast i8* %15 to i8**
  store i8* %16, i8** %19, align 8
  store i64 8589934592, i64* %18, align 8
  %20 = getelementptr inbounds i8, i8* %2, i64 40
  %21 = bitcast i8* %20 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %21, align 8
  %22 = getelementptr inbounds i8, i8* %2, i64 48
  %23 = bitcast i8* %22 to i32*
  store i32 %9, i32* %23, align 8
  %24 = getelementptr inbounds i8, i8* %2, i64 52
  %25 = bitcast i8* %24 to i32*
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds i8, i8* %2, i64 56
  store i8 0, i8* %26, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV16GrLightingEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %27 = getelementptr inbounds i8, i8* %2, i64 64
  %28 = bitcast i8* %27 to %class.SkImageFilterLight**
  %29 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 0, i32 1, i32 0
  %30 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %29, align 8
  %31 = icmp eq %class.SkImageFilterLight* %30, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %1
  %33 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 1 monotonic
  br label %35

35:                                               ; preds = %1, %32
  store %class.SkImageFilterLight* %30, %class.SkImageFilterLight** %28, align 8
  %36 = getelementptr inbounds i8, i8* %2, i64 72
  %37 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 0, i32 2
  %38 = bitcast float* %37 to i32*
  %39 = load i32, i32* %38, align 8
  %40 = bitcast i8* %36 to i32*
  store i32 %39, i32* %40, align 8
  %41 = getelementptr inbounds i8, i8* %2, i64 76
  %42 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 0, i32 3
  %43 = bitcast %class.SkMatrix* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %41, i8* align 4 %43, i64 40, i1 false) #11
  %44 = getelementptr inbounds i8, i8* %2, i64 116
  %45 = bitcast i8* %44 to i32*
  %46 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 0, i32 4
  %47 = load i32, i32* %46, align 4
  store i32 %47, i32* %45, align 4
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %6) #11
  %48 = load i32, i32* %23, align 8
  %49 = or i32 %48, 16
  store i32 %49, i32* %23, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV23GrDiffuseLightingEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %50 = getelementptr inbounds i8, i8* %2, i64 120
  %51 = getelementptr inbounds %class.GrDiffuseLightingEffect, %class.GrDiffuseLightingEffect* %0, i64 0, i32 1
  %52 = bitcast float* %51 to i32*
  %53 = load i32, i32* %52, align 8
  %54 = bitcast i8* %50 to i32*
  store i32 %53, i32* %54, align 8
  ret %class.GrFragmentProcessor* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18GrGLLightingEffectD2Ev(%class.GrGLLightingEffect*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLLightingEffect, %class.GrGLLightingEffect* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV18GrGLLightingEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLLightingEffect, %class.GrGLLightingEffect* %0, i64 0, i32 2
  %4 = load %class.GrGLLight*, %class.GrGLLight** %3, align 8
  %5 = icmp eq %class.GrGLLight* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.GrGLLight* %4 to void (%class.GrGLLight*)***
  %8 = load void (%class.GrGLLight*)**, void (%class.GrGLLight*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.GrGLLight*)*, void (%class.GrGLLight*)** %8, i64 1
  %10 = load void (%class.GrGLLight*)*, void (%class.GrGLLight*)** %9, align 8
  tail call void %10(%class.GrGLLight* nonnull %4) #11
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %class.GrGLLightingEffect, %class.GrGLLightingEffect* %0, i64 0, i32 0
  tail call void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor* %12) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN25GrGLDiffuseLightingEffectD0Ev(%class.GrGLDiffuseLightingEffect*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLDiffuseLightingEffect, %class.GrGLDiffuseLightingEffect* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV18GrGLLightingEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLDiffuseLightingEffect, %class.GrGLDiffuseLightingEffect* %0, i64 0, i32 0, i32 2
  %4 = load %class.GrGLLight*, %class.GrGLLight** %3, align 8
  %5 = icmp eq %class.GrGLLight* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.GrGLLight* %4 to void (%class.GrGLLight*)***
  %8 = load void (%class.GrGLLight*)**, void (%class.GrGLLight*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.GrGLLight*)*, void (%class.GrGLLight*)** %8, i64 1
  %10 = load void (%class.GrGLLight*)*, void (%class.GrGLLight*)** %9, align 8
  tail call void %10(%class.GrGLLight* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %class.GrGLDiffuseLightingEffect, %class.GrGLDiffuseLightingEffect* %0, i64 0, i32 0, i32 0
  tail call void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor* %12) #11
  %13 = bitcast %class.GrGLDiffuseLightingEffect* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN24GrSpecularLightingEffectD0Ev(%class.GrSpecularLightingEffect*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV16GrLightingEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 0, i32 1, i32 0
  %4 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %3, align 8
  %5 = icmp eq %class.SkImageFilterLight* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkImageFilterLight* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkImageFilterLight* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #11
  br label %16

16:                                               ; preds = %10, %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 0, i32 0, i32 1, i32 1
  %18 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, 4294967294
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.SkTArray.127, %class.SkTArray.127* %17, i64 0, i32 0
  br label %28

24:                                               ; preds = %39, %16
  %25 = phi i64 [ %19, %16 ], [ %41, %39 ]
  %26 = and i64 %25, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %48, label %45

28:                                               ; preds = %39, %22
  %29 = phi i64 [ 0, %22 ], [ %40, %39 ]
  %30 = load %"class.std::__1::unique_ptr.122"*, %"class.std::__1::unique_ptr.122"** %23, align 8
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %30, i64 %29, i32 0, i32 0, i32 0
  %32 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %31, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %31, align 8
  %33 = icmp eq %class.GrFragmentProcessor* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %28
  %35 = bitcast %class.GrFragmentProcessor* %32 to void (%class.GrFragmentProcessor*)***
  %36 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %35, align 8
  %37 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %36, i64 1
  %38 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %37, align 8
  tail call void %38(%class.GrFragmentProcessor* nonnull %32) #11
  br label %39

39:                                               ; preds = %34, %28
  %40 = add nuw nsw i64 %29, 1
  %41 = load i64, i64* %18, align 8
  %42 = lshr i64 %41, 1
  %43 = and i64 %42, 2147483647
  %44 = icmp ult i64 %40, %43
  br i1 %44, label %28, label %24

45:                                               ; preds = %24
  %46 = bitcast %class.SkTArray.127* %17 to i8**
  %47 = load i8*, i8** %46, align 8
  tail call void @_Z7sk_freePv(i8* %47) #11
  br label %48

48:                                               ; preds = %24, %45
  %49 = bitcast %class.GrSpecularLightingEffect* %0 to i8*
  tail call void @_ZN11GrProcessordlEPv(i8* %49) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK24GrSpecularLightingEffect4nameEv(%class.GrSpecularLightingEffect*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.72, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrFragmentProcessor* @_ZNK24GrSpecularLightingEffect5cloneEv(%class.GrSpecularLightingEffect*) unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_ZN11GrProcessornwEm(i64 128) #11
  %3 = bitcast i8* %2 to %class.GrFragmentProcessor*
  %4 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = bitcast %class.GrSpecularLightingEffect* %0 to %class.GrFragmentProcessor*
  %7 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 0, i32 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 7
  %10 = bitcast i8* %2 to i32 (...)***
  %11 = getelementptr inbounds i8, i8* %2, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 %5, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %2, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %2, i64 24
  %16 = getelementptr inbounds i8, i8* %2, i64 16
  %17 = getelementptr inbounds i8, i8* %2, i64 32
  %18 = bitcast i8* %17 to i64*
  %19 = bitcast i8* %15 to i8**
  store i8* %16, i8** %19, align 8
  store i64 8589934592, i64* %18, align 8
  %20 = getelementptr inbounds i8, i8* %2, i64 40
  %21 = bitcast i8* %20 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %21, align 8
  %22 = getelementptr inbounds i8, i8* %2, i64 48
  %23 = bitcast i8* %22 to i32*
  store i32 %9, i32* %23, align 8
  %24 = getelementptr inbounds i8, i8* %2, i64 52
  %25 = bitcast i8* %24 to i32*
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds i8, i8* %2, i64 56
  store i8 0, i8* %26, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV16GrLightingEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %27 = getelementptr inbounds i8, i8* %2, i64 64
  %28 = bitcast i8* %27 to %class.SkImageFilterLight**
  %29 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 0, i32 1, i32 0
  %30 = load %class.SkImageFilterLight*, %class.SkImageFilterLight** %29, align 8
  %31 = icmp eq %class.SkImageFilterLight* %30, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %1
  %33 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 1 monotonic
  br label %35

35:                                               ; preds = %1, %32
  store %class.SkImageFilterLight* %30, %class.SkImageFilterLight** %28, align 8
  %36 = getelementptr inbounds i8, i8* %2, i64 72
  %37 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 0, i32 2
  %38 = bitcast float* %37 to i32*
  %39 = load i32, i32* %38, align 8
  %40 = bitcast i8* %36 to i32*
  store i32 %39, i32* %40, align 8
  %41 = getelementptr inbounds i8, i8* %2, i64 76
  %42 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 0, i32 3
  %43 = bitcast %class.SkMatrix* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %41, i8* align 4 %43, i64 40, i1 false) #11
  %44 = getelementptr inbounds i8, i8* %2, i64 116
  %45 = bitcast i8* %44 to i32*
  %46 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 0, i32 4
  %47 = load i32, i32* %46, align 4
  store i32 %47, i32* %45, align 4
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %6) #11
  %48 = load i32, i32* %23, align 8
  %49 = or i32 %48, 16
  store i32 %49, i32* %23, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV24GrSpecularLightingEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %50 = getelementptr inbounds i8, i8* %2, i64 120
  %51 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 1
  %52 = bitcast float* %51 to i32*
  %53 = load i32, i32* %52, align 8
  %54 = bitcast i8* %50 to i32*
  store i32 %53, i32* %54, align 8
  %55 = getelementptr inbounds i8, i8* %2, i64 124
  %56 = getelementptr inbounds %class.GrSpecularLightingEffect, %class.GrSpecularLightingEffect* %0, i64 0, i32 2
  %57 = bitcast float* %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = bitcast i8* %55 to i32*
  store i32 %58, i32* %59, align 4
  ret %class.GrFragmentProcessor* %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN26GrGLSpecularLightingEffectD0Ev(%class.GrGLSpecularLightingEffect*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSpecularLightingEffect, %class.GrGLSpecularLightingEffect* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV18GrGLLightingEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLSpecularLightingEffect, %class.GrGLSpecularLightingEffect* %0, i64 0, i32 0, i32 2
  %4 = load %class.GrGLLight*, %class.GrGLLight** %3, align 8
  %5 = icmp eq %class.GrGLLight* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.GrGLLight* %4 to void (%class.GrGLLight*)***
  %8 = load void (%class.GrGLLight*)**, void (%class.GrGLLight*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.GrGLLight*)*, void (%class.GrGLLight*)** %8, i64 1
  %10 = load void (%class.GrGLLight*)*, void (%class.GrGLLight*)** %9, align 8
  tail call void %10(%class.GrGLLight* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %class.GrGLSpecularLightingEffect, %class.GrGLSpecularLightingEffect* %0, i64 0, i32 0, i32 0
  tail call void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor* %12) #11
  %13 = bitcast %class.GrGLSpecularLightingEffect* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #14
  ret void
}

declare zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix*, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN14GrMatrixEffect4MakeERK8SkMatrixNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.SkMatrix* dereferenceable(40), %class.GrFragmentProcessor*) local_unnamed_addr #2

declare void @_ZN20GrSurfaceFillContext14fillRectWithFPERK7SkIRectNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.GrSurfaceFillContext*, %struct.SkIRect* dereferenceable(16), %class.GrFragmentProcessor*) local_unnamed_addr #2

declare %class.GrRecordingContext* @_ZNK14SkSpecialImage10getContextEv(%class.SkSpecialImage*) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN11GrColorInfoC1E11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE(%class.GrColorInfo*, i32, i32, %class.sk_sp.175*) unnamed_addr #2

declare void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo*, %class.GrColorInfo* dereferenceable(24)) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkDistantLightD0Ev(%class.SkDistantLight*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %class.SkDistantLight* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK14SkDistantLight4typeEv(%class.SkDistantLight*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrGLLight* @_ZNK14SkDistantLight13createGLLightEv(%class.SkDistantLight*) unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_Znwm(i64 16) #14
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = bitcast i8* %4 to i32*
  store i32 -1, i32* %5, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV16GrGLDistantLight, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 12
  %7 = bitcast i8* %6 to i32*
  store i32 -1, i32* %7, align 4
  %8 = bitcast i8* %2 to %class.GrGLLight*
  ret %class.GrGLLight* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK14SkDistantLight7isEqualERK18SkImageFilterLight(%class.SkDistantLight*, %class.SkImageFilterLight* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %class.SkImageFilterLight* %1 to i32 (%class.SkImageFilterLight*)***
  %4 = load i32 (%class.SkImageFilterLight*)**, i32 (%class.SkImageFilterLight*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%class.SkImageFilterLight*)*, i32 (%class.SkImageFilterLight*)** %4, i64 3
  %6 = load i32 (%class.SkImageFilterLight*)*, i32 (%class.SkImageFilterLight*)** %5, align 8
  %7 = tail call i32 %6(%class.SkImageFilterLight* %1) #11
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %48

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.SkDistantLight, %class.SkDistantLight* %0, i64 0, i32 0, i32 1, i32 0
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %1, i64 0, i32 1, i32 0
  %13 = load float, float* %12, align 4
  %14 = fcmp oeq float %11, %13
  br i1 %14, label %15, label %48

15:                                               ; preds = %9
  %16 = getelementptr inbounds %class.SkDistantLight, %class.SkDistantLight* %0, i64 0, i32 0, i32 1, i32 1
  %17 = load float, float* %16, align 4
  %18 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %1, i64 0, i32 1, i32 1
  %19 = load float, float* %18, align 4
  %20 = fcmp oeq float %17, %19
  br i1 %20, label %21, label %48

21:                                               ; preds = %15
  %22 = getelementptr inbounds %class.SkDistantLight, %class.SkDistantLight* %0, i64 0, i32 0, i32 1, i32 2
  %23 = load float, float* %22, align 4
  %24 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %1, i64 0, i32 1, i32 2
  %25 = load float, float* %24, align 4
  %26 = fcmp oeq float %23, %25
  br i1 %26, label %27, label %48

27:                                               ; preds = %21
  %28 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %1, i64 1
  %29 = getelementptr inbounds %class.SkDistantLight, %class.SkDistantLight* %0, i64 0, i32 1, i32 0
  %30 = load float, float* %29, align 4
  %31 = bitcast %class.SkImageFilterLight* %28 to float*
  %32 = load float, float* %31, align 4
  %33 = fcmp oeq float %30, %32
  br i1 %33, label %34, label %48

34:                                               ; preds = %27
  %35 = bitcast %class.SkImageFilterLight* %28 to %struct.SkPoint3*
  %36 = getelementptr inbounds %class.SkDistantLight, %class.SkDistantLight* %0, i64 0, i32 1, i32 1
  %37 = load float, float* %36, align 4
  %38 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %35, i64 0, i32 1
  %39 = load float, float* %38, align 4
  %40 = fcmp oeq float %37, %39
  br i1 %40, label %41, label %48

41:                                               ; preds = %34
  %42 = getelementptr inbounds %class.SkDistantLight, %class.SkDistantLight* %0, i64 0, i32 1, i32 2
  %43 = load float, float* %42, align 4
  %44 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %1, i64 1, i32 0, i32 0, i32 1
  %45 = bitcast %"struct.std::__1::atomic"* %44 to float*
  %46 = load float, float* %45, align 4
  %47 = fcmp oeq float %43, %46
  br label %48

48:                                               ; preds = %9, %15, %41, %34, %27, %21, %2
  %49 = phi i1 [ false, %2 ], [ false, %21 ], [ false, %34 ], [ false, %27 ], [ %47, %41 ], [ false, %15 ], [ false, %9 ]
  ret i1 %49
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkImageFilterLight* @_ZNK14SkDistantLight9transformERK8SkMatrix(%class.SkDistantLight*, %class.SkMatrix* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_Znwm(i64 40) #14
  %4 = getelementptr inbounds %class.SkDistantLight, %class.SkDistantLight* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.SkDistantLight, %class.SkDistantLight* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds i8, i8* %3, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 1, i32* %7, align 4
  %8 = bitcast i8* %3 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %3, i64 12
  %10 = bitcast %struct.SkPoint3* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 12, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTV14SkDistantLight, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %11 = getelementptr inbounds i8, i8* %3, i64 24
  %12 = bitcast %struct.SkPoint3* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 4 %12, i64 12, i1 false) #11
  %13 = bitcast i8* %3 to %class.SkImageFilterLight*
  ret %class.SkImageFilterLight* %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, float } @_ZNK14SkDistantLight14surfaceToLightEiiif(%class.SkDistantLight*, i32, i32, i32, float) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %class.SkDistantLight, %class.SkDistantLight* %0, i64 0, i32 1
  %7 = bitcast %struct.SkPoint3* %6 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 8
  %9 = getelementptr inbounds %class.SkDistantLight, %class.SkDistantLight* %0, i64 0, i32 1, i32 2
  %10 = load float, float* %9, align 8
  %11 = insertvalue { <2 x float>, float } undef, <2 x float> %8, 0
  %12 = insertvalue { <2 x float>, float } %11, float %10, 1
  ret { <2 x float>, float } %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, float } @_ZNK14SkDistantLight10lightColorERK8SkPoint3(%class.SkDistantLight*, %struct.SkPoint3* dereferenceable(12)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkDistantLight, %class.SkDistantLight* %0, i64 0, i32 0, i32 1
  %4 = bitcast %struct.SkPoint3* %3 to <2 x float>*
  %5 = load <2 x float>, <2 x float>* %4, align 4
  %6 = getelementptr inbounds %class.SkDistantLight, %class.SkDistantLight* %0, i64 0, i32 0, i32 1, i32 2
  %7 = load float, float* %6, align 4
  %8 = insertvalue { <2 x float>, float } undef, <2 x float> %5, 0
  %9 = insertvalue { <2 x float>, float } %8, float %7, 1
  ret { <2 x float>, float } %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK14SkDistantLight14onFlattenLightER13SkWriteBuffer(%class.SkDistantLight*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkDistantLight, %class.SkDistantLight* %0, i64 0, i32 1, i32 0
  %4 = load float, float* %3, align 4
  %5 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, float)***
  %6 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %5, align 8
  %7 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %6, i64 5
  %8 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %7, align 8
  tail call void %8(%class.SkWriteBuffer* %1, float %4) #11
  %9 = getelementptr inbounds %class.SkDistantLight, %class.SkDistantLight* %0, i64 0, i32 1, i32 1
  %10 = load float, float* %9, align 4
  %11 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %5, align 8
  %12 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %11, i64 5
  %13 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %12, align 8
  tail call void %13(%class.SkWriteBuffer* %1, float %10) #11
  %14 = getelementptr inbounds %class.SkDistantLight, %class.SkDistantLight* %0, i64 0, i32 1, i32 2
  %15 = load float, float* %14, align 4
  %16 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %5, align 8
  %17 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %16, i64 5
  %18 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %17, align 8
  tail call void %18(%class.SkWriteBuffer* %1, float %15) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18SkImageFilterLightD0Ev(%class.SkImageFilterLight*) unnamed_addr #5 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilterLight7isEqualERKS_(%class.SkImageFilterLight*, %class.SkImageFilterLight* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %0, i64 0, i32 1, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %1, i64 0, i32 1, i32 0
  %6 = load float, float* %5, align 4
  %7 = fcmp oeq float %4, %6
  br i1 %7, label %8, label %20

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %0, i64 0, i32 1, i32 1
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %1, i64 0, i32 1, i32 1
  %12 = load float, float* %11, align 4
  %13 = fcmp oeq float %10, %12
  br i1 %13, label %14, label %20

14:                                               ; preds = %8
  %15 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %0, i64 0, i32 1, i32 2
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %1, i64 0, i32 1, i32 2
  %18 = load float, float* %17, align 4
  %19 = fcmp oeq float %16, %18
  br label %20

20:                                               ; preds = %2, %8, %14
  %21 = phi i1 [ false, %8 ], [ false, %2 ], [ %19, %14 ]
  ret i1 %21
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkRefCntBaseD2Ev(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkPointLightD0Ev(%class.SkPointLight*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %class.SkPointLight* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK12SkPointLight4typeEv(%class.SkPointLight*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrGLLight* @_ZNK12SkPointLight13createGLLightEv(%class.SkPointLight*) unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_Znwm(i64 16) #14
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = bitcast i8* %4 to i32*
  store i32 -1, i32* %5, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV14GrGLPointLight, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 12
  %7 = bitcast i8* %6 to i32*
  store i32 -1, i32* %7, align 4
  %8 = bitcast i8* %2 to %class.GrGLLight*
  ret %class.GrGLLight* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkPointLight7isEqualERK18SkImageFilterLight(%class.SkPointLight*, %class.SkImageFilterLight* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %class.SkImageFilterLight* %1 to i32 (%class.SkImageFilterLight*)***
  %4 = load i32 (%class.SkImageFilterLight*)**, i32 (%class.SkImageFilterLight*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%class.SkImageFilterLight*)*, i32 (%class.SkImageFilterLight*)** %4, i64 3
  %6 = load i32 (%class.SkImageFilterLight*)*, i32 (%class.SkImageFilterLight*)** %5, align 8
  %7 = tail call i32 %6(%class.SkImageFilterLight* %1) #11
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %48

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.SkPointLight, %class.SkPointLight* %0, i64 0, i32 0, i32 1, i32 0
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %1, i64 0, i32 1, i32 0
  %13 = load float, float* %12, align 4
  %14 = fcmp oeq float %11, %13
  br i1 %14, label %15, label %48

15:                                               ; preds = %9
  %16 = getelementptr inbounds %class.SkPointLight, %class.SkPointLight* %0, i64 0, i32 0, i32 1, i32 1
  %17 = load float, float* %16, align 4
  %18 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %1, i64 0, i32 1, i32 1
  %19 = load float, float* %18, align 4
  %20 = fcmp oeq float %17, %19
  br i1 %20, label %21, label %48

21:                                               ; preds = %15
  %22 = getelementptr inbounds %class.SkPointLight, %class.SkPointLight* %0, i64 0, i32 0, i32 1, i32 2
  %23 = load float, float* %22, align 4
  %24 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %1, i64 0, i32 1, i32 2
  %25 = load float, float* %24, align 4
  %26 = fcmp oeq float %23, %25
  br i1 %26, label %27, label %48

27:                                               ; preds = %21
  %28 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %1, i64 1
  %29 = getelementptr inbounds %class.SkPointLight, %class.SkPointLight* %0, i64 0, i32 1, i32 0
  %30 = load float, float* %29, align 4
  %31 = bitcast %class.SkImageFilterLight* %28 to float*
  %32 = load float, float* %31, align 4
  %33 = fcmp oeq float %30, %32
  br i1 %33, label %34, label %48

34:                                               ; preds = %27
  %35 = bitcast %class.SkImageFilterLight* %28 to %struct.SkPoint3*
  %36 = getelementptr inbounds %class.SkPointLight, %class.SkPointLight* %0, i64 0, i32 1, i32 1
  %37 = load float, float* %36, align 4
  %38 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %35, i64 0, i32 1
  %39 = load float, float* %38, align 4
  %40 = fcmp oeq float %37, %39
  br i1 %40, label %41, label %48

41:                                               ; preds = %34
  %42 = getelementptr inbounds %class.SkPointLight, %class.SkPointLight* %0, i64 0, i32 1, i32 2
  %43 = load float, float* %42, align 4
  %44 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %1, i64 1, i32 0, i32 0, i32 1
  %45 = bitcast %"struct.std::__1::atomic"* %44 to float*
  %46 = load float, float* %45, align 4
  %47 = fcmp oeq float %43, %46
  br label %48

48:                                               ; preds = %9, %15, %41, %34, %27, %21, %2
  %49 = phi i1 [ false, %2 ], [ false, %21 ], [ false, %34 ], [ false, %27 ], [ %47, %41 ], [ false, %15 ], [ false, %9 ]
  ret i1 %49
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkImageFilterLight* @_ZNK12SkPointLight9transformERK8SkMatrix(%class.SkPointLight*, %class.SkMatrix* dereferenceable(40)) unnamed_addr #8 comdat align 2 {
  %3 = alloca <2 x float>, align 8
  %4 = bitcast <2 x float>* %3 to %struct.SkPoint*
  %5 = alloca <2 x float>, align 8
  %6 = bitcast <2 x float>* %5 to %struct.SkPoint*
  %7 = bitcast <2 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds %class.SkPointLight, %class.SkPointLight* %0, i64 0, i32 1, i32 0
  %9 = bitcast float* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast <2 x float>* %3 to i64*
  store i64 %10, i64* %11, align 8
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* %1, %struct.SkPoint* nonnull %4, %struct.SkPoint* nonnull %4, i32 1) #11
  %12 = bitcast <2 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #11
  %13 = getelementptr inbounds <2 x float>, <2 x float>* %5, i64 0, i64 0
  %14 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %6, i64 0, i32 1
  %15 = getelementptr inbounds %class.SkPointLight, %class.SkPointLight* %0, i64 0, i32 1, i32 2
  %16 = load float, float* %15, align 8
  %17 = insertelement <2 x float> undef, float %16, i32 0
  %18 = shufflevector <2 x float> %17, <2 x float> undef, <2 x i32> zeroinitializer
  store <2 x float> %18, <2 x float>* %5, align 8
  call void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix* %1, %struct.SkPoint* nonnull %6, %struct.SkPoint* nonnull %6, i32 1) #11
  %19 = bitcast <2 x float>* %3 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = load float, float* %13, align 8
  %22 = load float, float* %14, align 4
  %23 = fadd float %21, %22
  %24 = fmul float %23, 5.000000e-01
  %25 = call i8* @_Znwm(i64 40) #14
  %26 = getelementptr inbounds %class.SkPointLight, %class.SkPointLight* %0, i64 0, i32 0, i32 1
  %27 = getelementptr inbounds i8, i8* %25, i64 8
  %28 = bitcast i8* %27 to i32*
  store i32 1, i32* %28, align 4
  %29 = bitcast i8* %25 to i32 (...)***
  %30 = getelementptr inbounds i8, i8* %25, i64 12
  %31 = bitcast %struct.SkPoint3* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %30, i8* align 4 %31, i64 12, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTV12SkPointLight, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %32 = getelementptr inbounds i8, i8* %25, i64 24
  %33 = bitcast i8* %32 to i64*
  store i64 %20, i64* %33, align 8
  %34 = getelementptr inbounds i8, i8* %25, i64 32
  %35 = bitcast i8* %34 to float*
  store float %24, float* %35, align 8
  %36 = bitcast i8* %25 to %class.SkImageFilterLight*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret %class.SkImageFilterLight* %36
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, float } @_ZNK12SkPointLight14surfaceToLightEiiif(%class.SkPointLight*, i32, i32, i32, float) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %class.SkPointLight, %class.SkPointLight* %0, i64 0, i32 1, i32 0
  %7 = load float, float* %6, align 8
  %8 = sitofp i32 %1 to float
  %9 = fsub float %7, %8
  %10 = getelementptr inbounds %class.SkPointLight, %class.SkPointLight* %0, i64 0, i32 1, i32 1
  %11 = sitofp i32 %2 to float
  %12 = bitcast float* %10 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 4
  %14 = sitofp i32 %3 to float
  %15 = fmul float %14, %4
  %16 = insertelement <2 x float> undef, float %11, i32 0
  %17 = insertelement <2 x float> %16, float %15, i32 1
  %18 = fsub <2 x float> %13, %17
  %19 = fmul float %9, %9
  %20 = fmul <2 x float> %18, %18
  %21 = extractelement <2 x float> %20, i32 0
  %22 = fadd float %19, %21
  %23 = extractelement <2 x float> %20, i32 1
  %24 = fadd float %22, %23
  %25 = fadd float %24, 0x3F30000000000000
  %26 = tail call float @sqrtf(float %25) #11
  %27 = fdiv float 1.000000e+00, %26
  %28 = fmul float %9, %27
  %29 = insertelement <2 x float> undef, float %28, i32 0
  %30 = extractelement <2 x float> %18, i32 0
  %31 = fmul float %30, %27
  %32 = insertelement <2 x float> %29, float %31, i32 1
  %33 = extractelement <2 x float> %18, i32 1
  %34 = fmul float %33, %27
  %35 = insertvalue { <2 x float>, float } undef, <2 x float> %32, 0
  %36 = insertvalue { <2 x float>, float } %35, float %34, 1
  ret { <2 x float>, float } %36
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, float } @_ZNK12SkPointLight10lightColorERK8SkPoint3(%class.SkPointLight*, %struct.SkPoint3* dereferenceable(12)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkPointLight, %class.SkPointLight* %0, i64 0, i32 0, i32 1
  %4 = bitcast %struct.SkPoint3* %3 to <2 x float>*
  %5 = load <2 x float>, <2 x float>* %4, align 4
  %6 = getelementptr inbounds %class.SkPointLight, %class.SkPointLight* %0, i64 0, i32 0, i32 1, i32 2
  %7 = load float, float* %6, align 4
  %8 = insertvalue { <2 x float>, float } undef, <2 x float> %5, 0
  %9 = insertvalue { <2 x float>, float } %8, float %7, 1
  ret { <2 x float>, float } %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkPointLight14onFlattenLightER13SkWriteBuffer(%class.SkPointLight*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkPointLight, %class.SkPointLight* %0, i64 0, i32 1, i32 0
  %4 = load float, float* %3, align 4
  %5 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, float)***
  %6 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %5, align 8
  %7 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %6, i64 5
  %8 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %7, align 8
  tail call void %8(%class.SkWriteBuffer* %1, float %4) #11
  %9 = getelementptr inbounds %class.SkPointLight, %class.SkPointLight* %0, i64 0, i32 1, i32 1
  %10 = load float, float* %9, align 4
  %11 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %5, align 8
  %12 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %11, i64 5
  %13 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %12, align 8
  tail call void %13(%class.SkWriteBuffer* %1, float %10) #11
  %14 = getelementptr inbounds %class.SkPointLight, %class.SkPointLight* %0, i64 0, i32 1, i32 2
  %15 = load float, float* %14, align 4
  %16 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %5, align 8
  %17 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %16, i64 5
  %18 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %17, align 8
  tail call void %18(%class.SkWriteBuffer* %1, float %15) #11
  ret void
}

declare void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32) local_unnamed_addr #2

declare void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11SkSpotLightD0Ev(%class.SkSpotLight*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %class.SkSpotLight* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK11SkSpotLight4typeEv(%class.SkSpotLight*) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrGLLight* @_ZNK11SkSpotLight13createGLLightEv(%class.SkSpotLight*) unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_Znwm(i64 48) #14
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = bitcast i8* %4 to i32*
  store i32 -1, i32* %5, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV13GrGLSpotLight, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 16
  %7 = bitcast i8* %6 to %class.SkString*
  tail call void @_ZN8SkStringC1Ev(%class.SkString* %7) #11
  %8 = getelementptr inbounds i8, i8* %2, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 -1, i64 24, i1 false) #11
  %9 = bitcast i8* %2 to %class.GrGLLight*
  ret %class.GrGLLight* %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK11SkSpotLight7isEqualERK18SkImageFilterLight(%class.SkSpotLight*, %class.SkImageFilterLight* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %class.SkImageFilterLight* %1 to i32 (%class.SkImageFilterLight*)***
  %4 = load i32 (%class.SkImageFilterLight*)**, i32 (%class.SkImageFilterLight*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%class.SkImageFilterLight*)*, i32 (%class.SkImageFilterLight*)** %4, i64 3
  %6 = load i32 (%class.SkImageFilterLight*)*, i32 (%class.SkImageFilterLight*)** %5, align 8
  %7 = tail call i32 %6(%class.SkImageFilterLight* %1) #11
  %8 = icmp eq i32 %7, 2
  br i1 %8, label %9, label %80

9:                                                ; preds = %2
  %10 = bitcast %class.SkImageFilterLight* %1 to %class.SkSpotLight*
  %11 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 0, i32 1, i32 0
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %1, i64 0, i32 1, i32 0
  %14 = load float, float* %13, align 4
  %15 = fcmp oeq float %12, %14
  br i1 %15, label %16, label %80

16:                                               ; preds = %9
  %17 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 0, i32 1, i32 1
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %1, i64 0, i32 1, i32 1
  %20 = load float, float* %19, align 4
  %21 = fcmp oeq float %18, %20
  br i1 %21, label %22, label %80

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 0, i32 1, i32 2
  %24 = load float, float* %23, align 4
  %25 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %1, i64 0, i32 1, i32 2
  %26 = load float, float* %25, align 4
  %27 = fcmp oeq float %24, %26
  br i1 %27, label %28, label %80

28:                                               ; preds = %22
  %29 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %1, i64 1
  %30 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 1, i32 0
  %31 = load float, float* %30, align 4
  %32 = bitcast %class.SkImageFilterLight* %29 to float*
  %33 = load float, float* %32, align 4
  %34 = fcmp oeq float %31, %33
  br i1 %34, label %35, label %80

35:                                               ; preds = %28
  %36 = bitcast %class.SkImageFilterLight* %29 to %struct.SkPoint3*
  %37 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 1, i32 1
  %38 = load float, float* %37, align 4
  %39 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %36, i64 0, i32 1
  %40 = load float, float* %39, align 4
  %41 = fcmp oeq float %38, %40
  br i1 %41, label %42, label %80

42:                                               ; preds = %35
  %43 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 1, i32 2
  %44 = load float, float* %43, align 4
  %45 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %1, i64 1, i32 0, i32 0, i32 1
  %46 = bitcast %"struct.std::__1::atomic"* %45 to float*
  %47 = load float, float* %46, align 4
  %48 = fcmp oeq float %44, %47
  br i1 %48, label %49, label %80

49:                                               ; preds = %42
  %50 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 2, i32 0
  %51 = load float, float* %50, align 4
  %52 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %1, i64 1, i32 1, i32 0
  %53 = load float, float* %52, align 4
  %54 = fcmp oeq float %51, %53
  br i1 %54, label %55, label %80

55:                                               ; preds = %49
  %56 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 2, i32 1
  %57 = load float, float* %56, align 4
  %58 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %1, i64 1, i32 1, i32 1
  %59 = load float, float* %58, align 4
  %60 = fcmp oeq float %57, %59
  br i1 %60, label %61, label %80

61:                                               ; preds = %55
  %62 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 2, i32 2
  %63 = load float, float* %62, align 4
  %64 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %1, i64 1, i32 1, i32 2
  %65 = load float, float* %64, align 4
  %66 = fcmp oeq float %63, %65
  br i1 %66, label %67, label %80

67:                                               ; preds = %61
  %68 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 3
  %69 = load float, float* %68, align 8
  %70 = getelementptr inbounds %class.SkImageFilterLight, %class.SkImageFilterLight* %1, i64 2
  %71 = bitcast %class.SkImageFilterLight* %70 to float*
  %72 = load float, float* %71, align 8
  %73 = fcmp oeq float %69, %72
  br i1 %73, label %74, label %80

74:                                               ; preds = %67
  %75 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 4
  %76 = load float, float* %75, align 4
  %77 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %10, i64 0, i32 4
  %78 = load float, float* %77, align 4
  %79 = fcmp oeq float %76, %78
  br label %80

80:                                               ; preds = %49, %55, %28, %35, %9, %16, %22, %42, %61, %67, %74, %2
  %81 = phi i1 [ false, %2 ], [ false, %67 ], [ false, %61 ], [ false, %42 ], [ false, %22 ], [ %79, %74 ], [ false, %16 ], [ false, %9 ], [ false, %35 ], [ false, %28 ], [ false, %55 ], [ false, %49 ]
  ret i1 %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkImageFilterLight* @_ZNK11SkSpotLight9transformERK8SkMatrix(%class.SkSpotLight*, %class.SkMatrix* dereferenceable(40)) unnamed_addr #8 comdat align 2 {
  %3 = alloca <2 x float>, align 8
  %4 = bitcast <2 x float>* %3 to %struct.SkPoint*
  %5 = alloca <2 x float>, align 8
  %6 = bitcast <2 x float>* %5 to %struct.SkPoint*
  %7 = alloca <2 x float>, align 8
  %8 = bitcast <2 x float>* %7 to %struct.SkPoint*
  %9 = alloca <2 x float>, align 8
  %10 = bitcast <2 x float>* %9 to %struct.SkPoint*
  %11 = bitcast <2 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 1, i32 0
  %13 = bitcast float* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast <2 x float>* %3 to i64*
  store i64 %14, i64* %15, align 8
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* %1, %struct.SkPoint* nonnull %4, %struct.SkPoint* nonnull %4, i32 1) #11
  %16 = bitcast <2 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds <2 x float>, <2 x float>* %5, i64 0, i64 0
  %18 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %6, i64 0, i32 1
  %19 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 1, i32 2
  %20 = load float, float* %19, align 8
  %21 = insertelement <2 x float> undef, float %20, i32 0
  %22 = shufflevector <2 x float> %21, <2 x float> undef, <2 x i32> zeroinitializer
  store <2 x float> %22, <2 x float>* %5, align 8
  call void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix* %1, %struct.SkPoint* nonnull %6, %struct.SkPoint* nonnull %6, i32 1) #11
  %23 = load <2 x float>, <2 x float>* %3, align 8
  %24 = load float, float* %17, align 8
  %25 = load float, float* %18, align 4
  %26 = fadd float %24, %25
  %27 = fmul float %26, 5.000000e-01
  %28 = bitcast <2 x float>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  %29 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 2, i32 0
  %30 = bitcast float* %29 to i64*
  %31 = load i64, i64* %30, align 4
  %32 = bitcast <2 x float>* %7 to i64*
  store i64 %31, i64* %32, align 8
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* %1, %struct.SkPoint* nonnull %8, %struct.SkPoint* nonnull %8, i32 1) #11
  %33 = bitcast <2 x float>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  %34 = getelementptr inbounds <2 x float>, <2 x float>* %9, i64 0, i64 0
  %35 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %10, i64 0, i32 1
  %36 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 2, i32 2
  %37 = load float, float* %36, align 4
  %38 = insertelement <2 x float> undef, float %37, i32 0
  %39 = shufflevector <2 x float> %38, <2 x float> undef, <2 x i32> zeroinitializer
  store <2 x float> %39, <2 x float>* %9, align 8
  call void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix* %1, %struct.SkPoint* nonnull %10, %struct.SkPoint* nonnull %10, i32 1) #11
  %40 = load <2 x float>, <2 x float>* %7, align 8
  %41 = load float, float* %34, align 8
  %42 = load float, float* %35, align 4
  %43 = fadd float %41, %42
  %44 = fmul float %43, 5.000000e-01
  %45 = fsub <2 x float> %40, %23
  %46 = fsub float %44, %27
  %47 = extractelement <2 x float> %45, i32 0
  %48 = fmul float %47, %47
  %49 = extractelement <2 x float> %45, i32 1
  %50 = fmul float %49, %49
  %51 = fadd float %48, %50
  %52 = fmul float %46, %46
  %53 = fadd float %51, %52
  %54 = fadd float %53, 0x3F30000000000000
  %55 = call float @sqrtf(float %54) #11
  %56 = fdiv float 1.000000e+00, %55
  %57 = insertelement <2 x float> undef, float %56, i32 0
  %58 = shufflevector <2 x float> %57, <2 x float> undef, <2 x i32> zeroinitializer
  %59 = fmul <2 x float> %45, %58
  %60 = fmul float %56, %46
  %61 = call i8* @_Znwm(i64 80) #14
  %62 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 3
  %63 = bitcast float* %62 to <4 x i32>*
  %64 = load <4 x i32>, <4 x i32>* %63, align 8
  %65 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 0, i32 1
  %66 = getelementptr inbounds i8, i8* %61, i64 8
  %67 = bitcast i8* %66 to i32*
  store i32 1, i32* %67, align 4
  %68 = bitcast i8* %61 to i32 (...)***
  %69 = getelementptr inbounds i8, i8* %61, i64 12
  %70 = bitcast %struct.SkPoint3* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %69, i8* align 4 %70, i64 12, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTV11SkSpotLight, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %68, align 8
  %71 = getelementptr inbounds i8, i8* %61, i64 24
  %72 = bitcast i8* %71 to <2 x float>*
  store <2 x float> %23, <2 x float>* %72, align 8
  %73 = getelementptr inbounds i8, i8* %61, i64 32
  %74 = bitcast i8* %73 to float*
  store float %27, float* %74, align 8
  %75 = getelementptr inbounds i8, i8* %61, i64 36
  %76 = bitcast i8* %75 to <2 x float>*
  store <2 x float> %40, <2 x float>* %76, align 4
  %77 = getelementptr inbounds i8, i8* %61, i64 44
  %78 = bitcast i8* %77 to float*
  store float %44, float* %78, align 4
  %79 = getelementptr inbounds i8, i8* %61, i64 48
  %80 = bitcast i8* %79 to <4 x i32>*
  store <4 x i32> %64, <4 x i32>* %80, align 8
  %81 = getelementptr inbounds i8, i8* %61, i64 64
  %82 = bitcast i8* %81 to <2 x float>*
  store <2 x float> %59, <2 x float>* %82, align 8
  %83 = getelementptr inbounds i8, i8* %61, i64 72
  %84 = bitcast i8* %83 to float*
  store float %60, float* %84, align 8
  %85 = bitcast i8* %61 to %class.SkImageFilterLight*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  ret %class.SkImageFilterLight* %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, float } @_ZNK11SkSpotLight14surfaceToLightEiiif(%class.SkSpotLight*, i32, i32, i32, float) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 1, i32 0
  %7 = load float, float* %6, align 8
  %8 = sitofp i32 %1 to float
  %9 = fsub float %7, %8
  %10 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 1, i32 1
  %11 = sitofp i32 %2 to float
  %12 = bitcast float* %10 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 4
  %14 = sitofp i32 %3 to float
  %15 = fmul float %14, %4
  %16 = insertelement <2 x float> undef, float %11, i32 0
  %17 = insertelement <2 x float> %16, float %15, i32 1
  %18 = fsub <2 x float> %13, %17
  %19 = fmul float %9, %9
  %20 = fmul <2 x float> %18, %18
  %21 = extractelement <2 x float> %20, i32 0
  %22 = fadd float %19, %21
  %23 = extractelement <2 x float> %20, i32 1
  %24 = fadd float %22, %23
  %25 = fadd float %24, 0x3F30000000000000
  %26 = tail call float @sqrtf(float %25) #11
  %27 = fdiv float 1.000000e+00, %26
  %28 = fmul float %9, %27
  %29 = insertelement <2 x float> undef, float %28, i32 0
  %30 = extractelement <2 x float> %18, i32 0
  %31 = fmul float %30, %27
  %32 = insertelement <2 x float> %29, float %31, i32 1
  %33 = extractelement <2 x float> %18, i32 1
  %34 = fmul float %33, %27
  %35 = insertvalue { <2 x float>, float } undef, <2 x float> %32, 0
  %36 = insertvalue { <2 x float>, float } %35, float %34, 1
  ret { <2 x float>, float } %36
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, float } @_ZNK11SkSpotLight10lightColorERK8SkPoint3(%class.SkSpotLight*, %struct.SkPoint3* dereferenceable(12)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %1, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 7, i32 0
  %6 = load float, float* %5, align 4
  %7 = fmul float %4, %6
  %8 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %1, i64 0, i32 1
  %9 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 7, i32 1
  %10 = bitcast float* %8 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  %12 = bitcast float* %9 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 4
  %14 = fmul <2 x float> %11, %13
  %15 = extractelement <2 x float> %14, i32 0
  %16 = fadd float %7, %15
  %17 = extractelement <2 x float> %14, i32 1
  %18 = fadd float %16, %17
  %19 = fsub float -0.000000e+00, %18
  %20 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 4
  %21 = load float, float* %20, align 4
  %22 = fcmp ugt float %21, %19
  br i1 %22, label %37, label %23

23:                                               ; preds = %2
  %24 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 3
  %25 = load float, float* %24, align 8
  %26 = tail call float @powf(float %19, float %25) #11
  %27 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 5
  %28 = load float, float* %27, align 8
  %29 = fcmp ogt float %28, %19
  br i1 %29, label %30, label %37

30:                                               ; preds = %23
  %31 = load float, float* %20, align 4
  %32 = fsub float %19, %31
  %33 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 6
  %34 = load float, float* %33, align 4
  %35 = fmul float %32, %34
  %36 = fmul float %26, %35
  br label %37

37:                                               ; preds = %2, %23, %30
  %38 = phi float [ %36, %30 ], [ %26, %23 ], [ 0.000000e+00, %2 ]
  %39 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 0, i32 1, i32 0
  %40 = load float, float* %39, align 4
  %41 = fmul float %38, %40
  %42 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 0, i32 1, i32 1
  %43 = load float, float* %42, align 4
  %44 = fmul float %38, %43
  %45 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 0, i32 1, i32 2
  %46 = load float, float* %45, align 4
  %47 = fmul float %38, %46
  %48 = insertelement <2 x float> undef, float %41, i32 0
  %49 = insertelement <2 x float> %48, float %44, i32 1
  %50 = insertvalue { <2 x float>, float } undef, <2 x float> %49, 0
  %51 = insertvalue { <2 x float>, float } %50, float %47, 1
  ret { <2 x float>, float } %51
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK11SkSpotLight14onFlattenLightER13SkWriteBuffer(%class.SkSpotLight*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 1, i32 0
  %4 = load float, float* %3, align 4
  %5 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, float)***
  %6 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %5, align 8
  %7 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %6, i64 5
  %8 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %7, align 8
  tail call void %8(%class.SkWriteBuffer* %1, float %4) #11
  %9 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 1, i32 1
  %10 = load float, float* %9, align 4
  %11 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %5, align 8
  %12 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %11, i64 5
  %13 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %12, align 8
  tail call void %13(%class.SkWriteBuffer* %1, float %10) #11
  %14 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 1, i32 2
  %15 = load float, float* %14, align 4
  %16 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %5, align 8
  %17 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %16, i64 5
  %18 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %17, align 8
  tail call void %18(%class.SkWriteBuffer* %1, float %15) #11
  %19 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 2, i32 0
  %20 = load float, float* %19, align 4
  %21 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %5, align 8
  %22 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %21, i64 5
  %23 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %22, align 8
  tail call void %23(%class.SkWriteBuffer* %1, float %20) #11
  %24 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 2, i32 1
  %25 = load float, float* %24, align 4
  %26 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %5, align 8
  %27 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %26, i64 5
  %28 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %27, align 8
  tail call void %28(%class.SkWriteBuffer* %1, float %25) #11
  %29 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 2, i32 2
  %30 = load float, float* %29, align 4
  %31 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %5, align 8
  %32 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %31, i64 5
  %33 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %32, align 8
  tail call void %33(%class.SkWriteBuffer* %1, float %30) #11
  %34 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 3
  %35 = load float, float* %34, align 8
  %36 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %5, align 8
  %37 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %36, i64 5
  %38 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %37, align 8
  tail call void %38(%class.SkWriteBuffer* %1, float %35) #11
  %39 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 4
  %40 = load float, float* %39, align 4
  %41 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %5, align 8
  %42 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %41, i64 5
  %43 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %42, align 8
  tail call void %43(%class.SkWriteBuffer* %1, float %40) #11
  %44 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 5
  %45 = load float, float* %44, align 8
  %46 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %5, align 8
  %47 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %46, i64 5
  %48 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %47, align 8
  tail call void %48(%class.SkWriteBuffer* %1, float %45) #11
  %49 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 6
  %50 = load float, float* %49, align 4
  %51 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %5, align 8
  %52 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %51, i64 5
  %53 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %52, align 8
  tail call void %53(%class.SkWriteBuffer* %1, float %50) #11
  %54 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 7, i32 0
  %55 = load float, float* %54, align 4
  %56 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %5, align 8
  %57 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %56, i64 5
  %58 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %57, align 8
  tail call void %58(%class.SkWriteBuffer* %1, float %55) #11
  %59 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 7, i32 1
  %60 = load float, float* %59, align 4
  %61 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %5, align 8
  %62 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %61, i64 5
  %63 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %62, align 8
  tail call void %63(%class.SkWriteBuffer* %1, float %60) #11
  %64 = getelementptr inbounds %class.SkSpotLight, %class.SkSpotLight* %0, i64 0, i32 7, i32 2
  %65 = load float, float* %64, align 4
  %66 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %5, align 8
  %67 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %66, i64 5
  %68 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %67, align 8
  tail call void %68(%class.SkWriteBuffer* %1, float %65) #11
  ret void
}

; Function Attrs: nofree nounwind
declare float @powf(float, float) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare float @cosf(float) local_unnamed_addr #9

declare void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base*, %class.sk_sp*, i32, %struct.SkRect*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN29SkLightingImageFilterInternalD0Ev(%class.SkLightingImageFilterInternal*) unnamed_addr #5 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base*) unnamed_addr #4

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

declare void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #2

declare void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* sret, %class.SkImageFilter_Base*, i32, %"class.skif::Context"* dereferenceable(136)) local_unnamed_addr #2

declare zeroext i1 @_ZNK14SkSpecialImage15isTextureBackedEv(%class.SkSpecialImage*) local_unnamed_addr #2

declare zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #2

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19DiffuseLightingTypeD0Ev(%class.DiffuseLightingType*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %class.DiffuseLightingType* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK19DiffuseLightingType5lightERK8SkPoint3S2_S2_(%class.DiffuseLightingType*, %struct.SkPoint3* dereferenceable(12), %struct.SkPoint3* dereferenceable(12), %struct.SkPoint3* dereferenceable(12)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %class.DiffuseLightingType, %class.DiffuseLightingType* %0, i64 0, i32 1
  %6 = load float, float* %5, align 8
  %7 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %1, i64 0, i32 0
  %8 = load float, float* %7, align 4
  %9 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %2, i64 0, i32 0
  %10 = load float, float* %9, align 4
  %11 = fmul float %8, %10
  %12 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %1, i64 0, i32 1
  %13 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %2, i64 0, i32 1
  %14 = bitcast float* %12 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 4
  %16 = bitcast float* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 4
  %18 = fmul <2 x float> %15, %17
  %19 = extractelement <2 x float> %18, i32 0
  %20 = fadd float %11, %19
  %21 = extractelement <2 x float> %18, i32 1
  %22 = fadd float %20, %21
  %23 = fmul float %6, %22
  %24 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %3, i64 0, i32 0
  %25 = load float, float* %24, align 4
  %26 = fmul float %25, %23
  %27 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %3, i64 0, i32 1
  %28 = load float, float* %27, align 4
  %29 = fmul float %28, %23
  %30 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %3, i64 0, i32 2
  %31 = load float, float* %30, align 4
  %32 = fmul float %31, %23
  %33 = fadd float %26, 5.000000e-01
  %34 = tail call float @llvm.floor.f32(float %33)
  %35 = fcmp olt float %34, 0x41DFFFFFE0000000
  %36 = select i1 %35, float %34, float 0x41DFFFFFE0000000
  %37 = fcmp ogt float %36, 0xC1DFFFFFE0000000
  %38 = select i1 %37, float %36, float 0xC1DFFFFFE0000000
  %39 = fptosi float %38 to i32
  %40 = icmp slt i32 %39, 255
  %41 = select i1 %40, i32 %39, i32 255
  %42 = icmp sgt i32 %41, 0
  %43 = select i1 %42, i32 %41, i32 0
  %44 = fadd float %29, 5.000000e-01
  %45 = tail call float @llvm.floor.f32(float %44)
  %46 = fcmp olt float %45, 0x41DFFFFFE0000000
  %47 = select i1 %46, float %45, float 0x41DFFFFFE0000000
  %48 = fcmp ogt float %47, 0xC1DFFFFFE0000000
  %49 = select i1 %48, float %47, float 0xC1DFFFFFE0000000
  %50 = fptosi float %49 to i32
  %51 = icmp slt i32 %50, 255
  %52 = select i1 %51, i32 %50, i32 255
  %53 = icmp sgt i32 %52, 0
  %54 = select i1 %53, i32 %52, i32 0
  %55 = fadd float %32, 5.000000e-01
  %56 = tail call float @llvm.floor.f32(float %55)
  %57 = fcmp olt float %56, 0x41DFFFFFE0000000
  %58 = select i1 %57, float %56, float 0x41DFFFFFE0000000
  %59 = fcmp ogt float %58, 0xC1DFFFFFE0000000
  %60 = select i1 %59, float %58, float 0xC1DFFFFFE0000000
  %61 = fptosi float %60 to i32
  %62 = icmp slt i32 %61, 255
  %63 = select i1 %62, i32 %61, i32 255
  %64 = icmp sgt i32 %63, 0
  %65 = select i1 %64, i32 %63, i32 0
  %66 = shl nsw i32 %43, 16
  %67 = shl nsw i32 %54, 8
  %68 = or i32 %65, %67
  %69 = or i32 %68, %66
  %70 = or i32 %69, -16777216
  ret i32 %70
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #10

declare i8* @_ZN11GrProcessornwEm(i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20SpecularLightingTypeD0Ev(%class.SpecularLightingType*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %class.SpecularLightingType* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK20SpecularLightingType5lightERK8SkPoint3S2_S2_(%class.SpecularLightingType*, %struct.SkPoint3* dereferenceable(12), %struct.SkPoint3* dereferenceable(12), %struct.SkPoint3* dereferenceable(12)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %2, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %2, i64 0, i32 1
  %8 = load float, float* %7, align 4
  %9 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %2, i64 0, i32 2
  %10 = load float, float* %9, align 4
  %11 = fadd float %10, 1.000000e+00
  %12 = fmul float %6, %6
  %13 = fmul float %8, %8
  %14 = fadd float %12, %13
  %15 = fmul float %11, %11
  %16 = fadd float %14, %15
  %17 = fadd float %16, 0x3F30000000000000
  %18 = tail call float @sqrtf(float %17) #11
  %19 = fdiv float 1.000000e+00, %18
  %20 = fmul float %6, %19
  %21 = insertelement <2 x float> undef, float %8, i32 0
  %22 = insertelement <2 x float> %21, float %11, i32 1
  %23 = insertelement <2 x float> undef, float %19, i32 0
  %24 = shufflevector <2 x float> %23, <2 x float> undef, <2 x i32> zeroinitializer
  %25 = fmul <2 x float> %22, %24
  %26 = getelementptr inbounds %class.SpecularLightingType, %class.SpecularLightingType* %0, i64 0, i32 1
  %27 = load float, float* %26, align 8
  %28 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %1, i64 0, i32 0
  %29 = load float, float* %28, align 4
  %30 = fmul float %29, %20
  %31 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %1, i64 0, i32 1
  %32 = bitcast float* %31 to <2 x float>*
  %33 = load <2 x float>, <2 x float>* %32, align 4
  %34 = fmul <2 x float> %25, %33
  %35 = extractelement <2 x float> %34, i32 0
  %36 = fadd float %30, %35
  %37 = extractelement <2 x float> %34, i32 1
  %38 = fadd float %36, %37
  %39 = getelementptr inbounds %class.SpecularLightingType, %class.SpecularLightingType* %0, i64 0, i32 2
  %40 = load float, float* %39, align 4
  %41 = tail call float @powf(float %38, float %40) #11
  %42 = fmul float %27, %41
  %43 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %3, i64 0, i32 0
  %44 = load float, float* %43, align 4
  %45 = fmul float %44, %42
  %46 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %3, i64 0, i32 1
  %47 = bitcast float* %46 to <2 x float>*
  %48 = load <2 x float>, <2 x float>* %47, align 4
  %49 = insertelement <2 x float> undef, float %42, i32 0
  %50 = shufflevector <2 x float> %49, <2 x float> undef, <2 x i32> zeroinitializer
  %51 = fmul <2 x float> %50, %48
  %52 = extractelement <2 x float> %51, i32 0
  %53 = fcmp ogt float %45, %52
  %54 = extractelement <2 x float> %51, i32 1
  br i1 %53, label %55, label %58

55:                                               ; preds = %4
  %56 = fcmp ogt float %45, %54
  br i1 %56, label %61, label %57

57:                                               ; preds = %55
  br label %61

58:                                               ; preds = %4
  %59 = fcmp ogt float %52, %54
  br i1 %59, label %61, label %60

60:                                               ; preds = %58
  br label %61

61:                                               ; preds = %55, %57, %58, %60
  %62 = phi float [ %54, %57 ], [ %54, %60 ], [ %45, %55 ], [ %52, %58 ]
  %63 = fadd float %62, 5.000000e-01
  %64 = tail call float @llvm.floor.f32(float %63)
  %65 = fcmp olt float %64, 0x41DFFFFFE0000000
  %66 = select i1 %65, float %64, float 0x41DFFFFFE0000000
  %67 = fcmp ogt float %66, 0xC1DFFFFFE0000000
  %68 = select i1 %67, float %66, float 0xC1DFFFFFE0000000
  %69 = fptosi float %68 to i32
  %70 = icmp slt i32 %69, 255
  %71 = select i1 %70, i32 %69, i32 255
  %72 = icmp sgt i32 %71, 0
  %73 = select i1 %72, i32 %71, i32 0
  %74 = fadd float %45, 5.000000e-01
  %75 = tail call float @llvm.floor.f32(float %74)
  %76 = fcmp olt float %75, 0x41DFFFFFE0000000
  %77 = select i1 %76, float %75, float 0x41DFFFFFE0000000
  %78 = fcmp ogt float %77, 0xC1DFFFFFE0000000
  %79 = select i1 %78, float %77, float 0xC1DFFFFFE0000000
  %80 = fptosi float %79 to i32
  %81 = icmp slt i32 %80, 255
  %82 = select i1 %81, i32 %80, i32 255
  %83 = icmp sgt i32 %82, 0
  %84 = select i1 %83, i32 %82, i32 0
  %85 = fadd float %52, 5.000000e-01
  %86 = tail call float @llvm.floor.f32(float %85)
  %87 = fcmp olt float %86, 0x41DFFFFFE0000000
  %88 = select i1 %87, float %86, float 0x41DFFFFFE0000000
  %89 = fcmp ogt float %88, 0xC1DFFFFFE0000000
  %90 = select i1 %89, float %88, float 0xC1DFFFFFE0000000
  %91 = fptosi float %90 to i32
  %92 = icmp slt i32 %91, 255
  %93 = select i1 %92, i32 %91, i32 255
  %94 = icmp sgt i32 %93, 0
  %95 = select i1 %94, i32 %93, i32 0
  %96 = extractelement <2 x float> %51, i32 1
  %97 = fadd float %96, 5.000000e-01
  %98 = tail call float @llvm.floor.f32(float %97)
  %99 = fcmp olt float %98, 0x41DFFFFFE0000000
  %100 = select i1 %99, float %98, float 0x41DFFFFFE0000000
  %101 = fcmp ogt float %100, 0xC1DFFFFFE0000000
  %102 = select i1 %101, float %100, float 0xC1DFFFFFE0000000
  %103 = fptosi float %102 to i32
  %104 = icmp slt i32 %103, 255
  %105 = select i1 %104, i32 %103, i32 255
  %106 = icmp sgt i32 %105, 0
  %107 = select i1 %106, i32 %105, i32 0
  %108 = shl i32 %73, 24
  %109 = shl nsw i32 %84, 16
  %110 = shl nsw i32 %95, 8
  %111 = or i32 %110, %109
  %112 = or i32 %111, %107
  %113 = or i32 %112, %108
  ret i32 %113
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD2Ev(%class.GrFragmentProcessor*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 8
  %4 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %"class.std::__1::unique_ptr.122"**
  br label %15

11:                                               ; preds = %26, %1
  %12 = phi i64 [ %6, %1 ], [ %28, %26 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %35, label %32

15:                                               ; preds = %26, %9
  %16 = phi i64 [ 0, %9 ], [ %27, %26 ]
  %17 = load %"class.std::__1::unique_ptr.122"*, %"class.std::__1::unique_ptr.122"** %10, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %17, i64 %16, i32 0, i32 0, i32 0
  %19 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %18, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %18, align 8
  %20 = icmp eq %class.GrFragmentProcessor* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %class.GrFragmentProcessor* %19 to void (%class.GrFragmentProcessor*)***
  %23 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %23, i64 1
  %25 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %24, align 8
  tail call void %25(%class.GrFragmentProcessor* nonnull %19) #11
  br label %26

26:                                               ; preds = %21, %15
  %27 = add nuw nsw i64 %16, 1
  %28 = load i64, i64* %5, align 8
  %29 = lshr i64 %28, 1
  %30 = and i64 %29, 2147483647
  %31 = icmp ult i64 %27, %30
  br i1 %31, label %15, label %11

32:                                               ; preds = %11
  %33 = bitcast i8* %3 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_Z7sk_freePv(i8* %34) #11
  br label %35

35:                                               ; preds = %11, %32
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD0Ev(%class.GrFragmentProcessor*) unnamed_addr #5 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #2

declare void @_ZN8SkStringC1EOS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #2

declare void @_ZN8SkString6printfEPKcz(%class.SkString*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #11

declare void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #11

declare void @_ZN8SkString6insertEmPKc(%class.SkString*, i64, i8*) local_unnamed_addr #2

declare void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* sret, %class.GrGLSLFragmentProcessor*, i32, i8*, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56), %"class.SkSL::String"*) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #12

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV23GrGLSLFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2
  %4 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.213, %class.SkTArray.213* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %25, %1
  %11 = phi i64 [ %5, %1 ], [ %27, %25 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %31

14:                                               ; preds = %25, %8
  %15 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %16 = load %"class.std::__1::unique_ptr.210"*, %"class.std::__1::unique_ptr.210"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.210"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %class.GrGLSLFragmentProcessor*, %class.GrGLSLFragmentProcessor** %17, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %17, align 8
  %19 = icmp eq %class.GrGLSLFragmentProcessor* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %class.GrGLSLFragmentProcessor* %18 to void (%class.GrGLSLFragmentProcessor*)***
  %22 = load void (%class.GrGLSLFragmentProcessor*)**, void (%class.GrGLSLFragmentProcessor*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %22, i64 1
  %24 = load void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %23, align 8
  tail call void %24(%class.GrGLSLFragmentProcessor* nonnull %18) #11
  br label %25

25:                                               ; preds = %20, %14
  %26 = add nuw nsw i64 %15, 1
  %27 = load i64, i64* %4, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %14, label %10

31:                                               ; preds = %10
  %32 = bitcast %class.SkTArray.213* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #11
  br label %34

34:                                               ; preds = %10, %31
  %35 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1
  %36 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 4294967294
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %class.SkTArray.19, %class.SkTArray.19* %35, i64 0, i32 0
  br label %46

42:                                               ; preds = %46, %34
  %43 = phi i64 [ %37, %34 ], [ %51, %46 ]
  %44 = and i64 %43, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %58, label %55

46:                                               ; preds = %46, %40
  %47 = phi i64 [ 0, %40 ], [ %50, %46 ]
  %48 = load %class.SkString*, %class.SkString** %41, align 8
  %49 = getelementptr inbounds %class.SkString, %class.SkString* %48, i64 %47
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %49) #11
  %50 = add nuw nsw i64 %47, 1
  %51 = load i64, i64* %36, align 8
  %52 = lshr i64 %51, 1
  %53 = and i64 %52, 2147483647
  %54 = icmp ult i64 %50, %53
  br i1 %54, label %46, label %42

55:                                               ; preds = %42
  %56 = bitcast %class.SkTArray.19* %35 to i8**
  %57 = load i8*, i8** %56, align 8
  tail call void @_Z7sk_freePv(i8* %57) #11
  br label %58

58:                                               ; preds = %42, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD0Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #12

; Function Attrs: nounwind
declare void @_ZN11GrProcessordlEPv(i8*) local_unnamed_addr #4

declare i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!4 = distinct !{!4, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!5 = distinct !{!5, !6, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!6 = distinct !{!6, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK4skif7Context13refColorSpaceEv: argument 0"}
!9 = distinct !{!9, !"_ZNK4skif7Context13refColorSpaceEv"}
!10 = !{!11, !8}
!11 = distinct !{!11, !12, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_: argument 0"}
!12 = distinct !{!12, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_"}
!13 = !{i8 0, i8 2}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN16GrSurfaceContext15readSurfaceViewEv: argument 0"}
!16 = distinct !{!16, !"_ZN16GrSurfaceContext15readSurfaceViewEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK11GrColorInfo13refColorSpaceEv: argument 0"}
!19 = distinct !{!19, !"_ZNK11GrColorInfo13refColorSpaceEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN28SkDiffuseLightingImageFilter4MakeE5sk_spI18SkImageFilterLightEffS0_I13SkImageFilterEPK6SkRect: argument 0"}
!22 = distinct !{!22, !"_ZN28SkDiffuseLightingImageFilter4MakeE5sk_spI18SkImageFilterLightEffS0_I13SkImageFilterEPK6SkRect"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN28SkDiffuseLightingImageFilter4MakeE5sk_spI18SkImageFilterLightEffS0_I13SkImageFilterEPK6SkRect: argument 0"}
!25 = distinct !{!25, !"_ZN28SkDiffuseLightingImageFilter4MakeE5sk_spI18SkImageFilterLightEffS0_I13SkImageFilterEPK6SkRect"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN28SkDiffuseLightingImageFilter4MakeE5sk_spI18SkImageFilterLightEffS0_I13SkImageFilterEPK6SkRect: argument 0"}
!28 = distinct !{!28, !"_ZN28SkDiffuseLightingImageFilter4MakeE5sk_spI18SkImageFilterLightEffS0_I13SkImageFilterEPK6SkRect"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN29SkSpecularLightingImageFilter4MakeE5sk_spI18SkImageFilterLightEfffS0_I13SkImageFilterEPK6SkRect: argument 0"}
!31 = distinct !{!31, !"_ZN29SkSpecularLightingImageFilter4MakeE5sk_spI18SkImageFilterLightEfffS0_I13SkImageFilterEPK6SkRect"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN29SkSpecularLightingImageFilter4MakeE5sk_spI18SkImageFilterLightEfffS0_I13SkImageFilterEPK6SkRect: argument 0"}
!34 = distinct !{!34, !"_ZN29SkSpecularLightingImageFilter4MakeE5sk_spI18SkImageFilterLightEfffS0_I13SkImageFilterEPK6SkRect"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN29SkSpecularLightingImageFilter4MakeE5sk_spI18SkImageFilterLightEfffS0_I13SkImageFilterEPK6SkRect: argument 0"}
!37 = distinct !{!37, !"_ZN29SkSpecularLightingImageFilter4MakeE5sk_spI18SkImageFilterLightEfffS0_I13SkImageFilterEPK6SkRect"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN18SkImageFilter_Base6Common8getInputEi: argument 0"}
!40 = distinct !{!40, !"_ZN18SkImageFilter_Base6Common8getInputEi"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN28SkDiffuseLightingImageFilter4MakeE5sk_spI18SkImageFilterLightEffS0_I13SkImageFilterEPK6SkRect: argument 0"}
!43 = distinct !{!43, !"_ZN28SkDiffuseLightingImageFilter4MakeE5sk_spI18SkImageFilterLightEffS0_I13SkImageFilterEPK6SkRect"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN18SkImageFilter_Base6Common8getInputEi: argument 0"}
!46 = distinct !{!46, !"_ZN18SkImageFilter_Base6Common8getInputEi"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZN29SkSpecularLightingImageFilter4MakeE5sk_spI18SkImageFilterLightEfffS0_I13SkImageFilterEPK6SkRect: argument 0"}
!49 = distinct !{!49, !"_ZN29SkSpecularLightingImageFilter4MakeE5sk_spI18SkImageFilterLightEfffS0_I13SkImageFilterEPK6SkRect"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint: argument 0"}
!52 = distinct !{!52, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint"}
!53 = !{!54, !51}
!54 = distinct !{!54, !55, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint: argument 0"}
!55 = distinct !{!55, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint"}
!56 = !{!57, !59}
!57 = distinct !{!57, !58, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!58 = distinct !{!58, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!59 = distinct !{!59, !60, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE: argument 0"}
!60 = distinct !{!60, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZNK29SkLightingImageFilterInternal8refLightEv: argument 0"}
!63 = distinct !{!63, !"_ZNK29SkLightingImageFilterInternal8refLightEv"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint: argument 0"}
!66 = distinct !{!66, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint"}
!67 = !{!68, !65}
!68 = distinct !{!68, !69, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint: argument 0"}
!69 = distinct !{!69, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint"}
!70 = !{!71, !73}
!71 = distinct !{!71, !72, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!72 = distinct !{!72, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!73 = distinct !{!73, !74, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE: argument 0"}
!74 = distinct !{!74, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE"}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZNK29SkLightingImageFilterInternal8refLightEv: argument 0"}
!77 = distinct !{!77, !"_ZNK29SkLightingImageFilterInternal8refLightEv"}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZL14emitNormalFunc12BoundaryModePKcS1_: argument 0"}
!80 = distinct !{!80, !"_ZL14emitNormalFunc12BoundaryModePKcS1_"}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE: argument 0"}
!83 = distinct !{!83, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE"}
