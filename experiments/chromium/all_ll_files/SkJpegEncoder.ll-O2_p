; ModuleID = '../../third_party/skia/src/images/SkJpegEncoder.cpp'
source_filename = "../../third_party/skia/src/images/SkJpegEncoder.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkJpegEncoder = type { %class.SkEncoder, %"class.std::__1::unique_ptr.11" }
%class.SkEncoder = type { i32 (...)**, %class.SkPixmap*, i32, %class.SkAutoTMalloc }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.6" }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i8* }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %class.SkJpegEncoderMgr* }
%class.SkJpegEncoderMgr = type { %struct.jpeg_compress_struct, %struct.skjpeg_error_mgr, %struct.skjpeg_destination_mgr, void (i8*, i8*, i32, i32)* }
%struct.jpeg_compress_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32, %struct.jpeg_destination_mgr*, i32, i32, i32, i32, double, i32, i32, i32, %struct.jpeg_component_info*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], [16 x i8], [16 x i8], [16 x i8], i32, %struct.jpeg_scan_info*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, %struct.jpeg_comp_master*, %struct.jpeg_c_main_controller*, %struct.jpeg_c_prep_controller*, %struct.jpeg_c_coef_controller*, %struct.jpeg_marker_writer*, %struct.jpeg_color_converter*, %struct.jpeg_downsampler*, %struct.jpeg_forward_dct*, %struct.jpeg_entropy_encoder*, %struct.jpeg_scan_info*, i32 }
%struct.jpeg_error_mgr = type { void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i8*)*, void (%struct.jpeg_common_struct*)*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%struct.jpeg_common_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.jpeg_memory_mgr = type { i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, {}*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, void (%struct.jpeg_common_struct*, i32)*, {}*, i64, i64 }
%struct.jvirt_sarray_control = type opaque
%struct.jvirt_barray_control = type opaque
%struct.jpeg_progress_mgr = type { {}*, i64, i64, i32, i32 }
%struct.jpeg_destination_mgr = type { i8*, i64, void (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)* }
%struct.jpeg_component_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.JQUANT_TBL*, i8* }
%struct.JQUANT_TBL = type { [64 x i16], i32 }
%struct.JHUFF_TBL = type { [17 x i8], [256 x i8], i32 }
%struct.jpeg_comp_master = type opaque
%struct.jpeg_c_main_controller = type opaque
%struct.jpeg_c_prep_controller = type opaque
%struct.jpeg_c_coef_controller = type opaque
%struct.jpeg_marker_writer = type opaque
%struct.jpeg_color_converter = type opaque
%struct.jpeg_downsampler = type opaque
%struct.jpeg_forward_dct = type opaque
%struct.jpeg_entropy_encoder = type opaque
%struct.jpeg_scan_info = type { i32, [4 x i32], i32, i32, i32, i32 }
%struct.skjpeg_error_mgr = type { %struct.jpeg_error_mgr, %class.SkSTArray }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [32 x i8] }
%class.SkTArray = type { [1 x %struct.__jmp_buf_tag]**, i64 }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.skjpeg_destination_mgr = type { %struct.jpeg_destination_mgr, %class.SkWStream*, [1024 x i8] }
%class.SkWStream = type { i32 (...)** }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"struct.SkJpegEncoder::Options" = type { i32, i32, i32 }
%struct.skcms_ICCProfile = type { i8*, i32, i32, i32, i32, i8, [3 x %union.skcms_Curve], i8, %struct.skcms_Matrix3x3, i8, %struct.skcms_A2B, i8, %struct.skcms_B2A }
%union.skcms_Curve = type { %struct.anon.25, [8 x i8] }
%struct.anon.25 = type { i32, i8*, i8* }
%struct.skcms_A2B = type { i32, [4 x %union.skcms_Curve], [4 x i8], i8*, i8*, i32, [3 x %union.skcms_Curve], %struct.skcms_Matrix3x4, i32, [3 x %union.skcms_Curve] }
%struct.skcms_Matrix3x4 = type { [3 x [4 x float]] }
%struct.skcms_B2A = type { i32, [3 x %union.skcms_Curve], i32, %struct.skcms_Matrix3x4, [3 x %union.skcms_Curve], i32, [4 x i8], i8*, i8*, [4 x %union.skcms_Curve] }
%"class.skjpeg_error_mgr::AutoPushJmpBuf" = type { %struct.skjpeg_error_mgr*, [1 x %struct.__jmp_buf_tag] }
%class.sk_sp.17 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.18, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.18 = type { %"struct.std::__1::atomic" }

$_ZN8SkTArrayIPA1_13__jmp_buf_tagLb0EE12checkReallocEiNS3_11ReallocTypeE = comdat any

$_ZN9SkEncoderD2Ev = comdat any

$_ZN9SkEncoderD0Ev = comdat any

$_ZTV9SkEncoder = comdat any

@_ZL7kICCSig = internal unnamed_addr constant [12 x i8] c"ICC_PROFILE\00", align 1
@_ZTV13SkJpegEncoder = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkJpegEncoder*)* @_ZN13SkJpegEncoderD2Ev to i8*), i8* bitcast (void (%class.SkJpegEncoder*)* @_ZN13SkJpegEncoderD0Ev to i8*), i8* bitcast (i1 (%class.SkJpegEncoder*, i32)* @_ZN13SkJpegEncoder12onEncodeRowsEi to i8*)] }, align 8
@_ZTV9SkEncoder = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkEncoder*)* @_ZN9SkEncoderD2Ev to i8*), i8* bitcast (void (%class.SkEncoder*)* @_ZN9SkEncoderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8

@_ZN13SkJpegEncoderC1ENSt3__110unique_ptrI16SkJpegEncoderMgrNS0_14default_deleteIS2_EEEERK8SkPixmap = hidden unnamed_addr alias void (%class.SkJpegEncoder*, %class.SkJpegEncoderMgr*, %class.SkPixmap*), void (%class.SkJpegEncoder*, %class.SkJpegEncoderMgr*, %class.SkPixmap*)* @_ZN13SkJpegEncoderC2ENSt3__110unique_ptrI16SkJpegEncoderMgrNS0_14default_deleteIS2_EEEERK8SkPixmap
@_ZN13SkJpegEncoderD1Ev = hidden unnamed_addr alias void (%class.SkJpegEncoder*), void (%class.SkJpegEncoder*)* @_ZN13SkJpegEncoderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16SkJpegEncoderMgr9setParamsERK11SkImageInfoRKN13SkJpegEncoder7OptionsE(%class.SkJpegEncoderMgr*, %struct.SkImageInfo* dereferenceable(24), %"struct.SkJpegEncoder::Options"* dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %89 [
    i32 4, label %6
    i32 6, label %15
    i32 2, label %37
    i32 3, label %24
    i32 11, label %42
    i32 13, label %28
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 3
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"struct.SkJpegEncoder::Options", %"struct.SkJpegEncoder::Options"* %2, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %37, label %14

14:                                               ; preds = %10, %6
  br label %37

15:                                               ; preds = %3
  %16 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 3
  br i1 %18, label %19, label %23

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"struct.SkJpegEncoder::Options", %"struct.SkJpegEncoder::Options"* %2, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %37, label %23

23:                                               ; preds = %19, %15
  br label %37

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"struct.SkJpegEncoder::Options", %"struct.SkJpegEncoder::Options"* %2, i64 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %89, label %37

28:                                               ; preds = %3
  %29 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 3
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"struct.SkJpegEncoder::Options", %"struct.SkJpegEncoder::Options"* %2, i64 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %37, label %36

36:                                               ; preds = %32, %28
  br label %37

37:                                               ; preds = %32, %24, %3, %23, %19, %14, %10, %36
  %38 = phi void (i8*, i8*, i32, i32)* [ @_ZL30transform_scanline_F16_to_8888PcPKcii, %36 ], [ null, %14 ], [ @_ZL35transform_scanline_to_premul_legacyPcPKcii, %10 ], [ null, %23 ], [ @_ZL35transform_scanline_to_premul_legacyPcPKcii, %19 ], [ @_ZL22transform_scanline_565PcPKcii, %3 ], [ @_ZL22transform_scanline_444PcPKcii, %24 ], [ @_ZL37transform_scanline_F16_to_premul_8888PcPKcii, %32 ]
  %39 = phi i32 [ 12, %36 ], [ 12, %14 ], [ 12, %10 ], [ 13, %23 ], [ 13, %19 ], [ %5, %3 ], [ 2, %24 ], [ 12, %32 ]
  %40 = phi i32 [ 4, %36 ], [ 4, %14 ], [ 4, %10 ], [ 4, %23 ], [ 4, %19 ], [ 3, %3 ], [ 3, %24 ], [ 4, %32 ]
  %41 = getelementptr inbounds %class.SkJpegEncoderMgr, %class.SkJpegEncoderMgr* %0, i64 0, i32 3
  store void (i8*, i8*, i32, i32)* %38, void (i8*, i8*, i32, i32)** %41, align 8
  br label %42

42:                                               ; preds = %37, %3
  %43 = phi i32 [ 1, %3 ], [ %39, %37 ]
  %44 = phi i32 [ 1, %3 ], [ %40, %37 ]
  %45 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %class.SkJpegEncoderMgr, %class.SkJpegEncoderMgr* %0, i64 0, i32 0
  %48 = getelementptr inbounds %class.SkJpegEncoderMgr, %class.SkJpegEncoderMgr* %0, i64 0, i32 0, i32 7
  store i32 %46, i32* %48, align 8
  %49 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %class.SkJpegEncoderMgr, %class.SkJpegEncoderMgr* %0, i64 0, i32 0, i32 8
  store i32 %50, i32* %51, align 4
  %52 = getelementptr inbounds %class.SkJpegEncoderMgr, %class.SkJpegEncoderMgr* %0, i64 0, i32 0, i32 10
  store i32 %43, i32* %52, align 4
  %53 = getelementptr inbounds %class.SkJpegEncoderMgr, %class.SkJpegEncoderMgr* %0, i64 0, i32 0, i32 9
  store i32 %44, i32* %53, align 8
  tail call void @jpeg_set_defaults(%struct.jpeg_compress_struct* %47) #9
  %54 = load i32, i32* %4, align 8
  %55 = icmp eq i32 %54, 11
  br i1 %55, label %87, label %56

56:                                               ; preds = %42
  %57 = getelementptr inbounds %"struct.SkJpegEncoder::Options", %"struct.SkJpegEncoder::Options"* %2, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  switch i32 %58, label %87 [
    i32 2, label %73
    i32 1, label %59
  ]

59:                                               ; preds = %56
  %60 = getelementptr inbounds %class.SkJpegEncoderMgr, %class.SkJpegEncoderMgr* %0, i64 0, i32 0, i32 15
  %61 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %60, align 8
  %62 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %61, i64 0, i32 2
  store i32 2, i32* %62, align 8
  %63 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %60, align 8
  %64 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %63, i64 0, i32 3
  store i32 1, i32* %64, align 4
  %65 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %60, align 8
  %66 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %65, i64 1, i32 2
  store i32 1, i32* %66, align 8
  %67 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %60, align 8
  %68 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %67, i64 1, i32 3
  store i32 1, i32* %68, align 4
  %69 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %60, align 8
  %70 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %69, i64 2, i32 2
  store i32 1, i32* %70, align 8
  %71 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %60, align 8
  %72 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %71, i64 2, i32 3
  store i32 1, i32* %72, align 4
  br label %87

73:                                               ; preds = %56
  %74 = getelementptr inbounds %class.SkJpegEncoderMgr, %class.SkJpegEncoderMgr* %0, i64 0, i32 0, i32 15
  %75 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %74, align 8
  %76 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %75, i64 0, i32 2
  store i32 1, i32* %76, align 8
  %77 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %74, align 8
  %78 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %77, i64 0, i32 3
  store i32 1, i32* %78, align 4
  %79 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %74, align 8
  %80 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %79, i64 1, i32 2
  store i32 1, i32* %80, align 8
  %81 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %74, align 8
  %82 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %81, i64 1, i32 3
  store i32 1, i32* %82, align 4
  %83 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %74, align 8
  %84 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %83, i64 2, i32 2
  store i32 1, i32* %84, align 8
  %85 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %74, align 8
  %86 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %85, i64 2, i32 3
  store i32 1, i32* %86, align 4
  br label %87

87:                                               ; preds = %42, %59, %73, %56
  %88 = getelementptr inbounds %class.SkJpegEncoderMgr, %class.SkJpegEncoderMgr* %0, i64 0, i32 0, i32 26
  store i32 1, i32* %88, align 8
  br label %89

89:                                               ; preds = %3, %24, %87
  %90 = phi i1 [ true, %87 ], [ false, %24 ], [ false, %3 ]
  ret i1 %90
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZL22transform_scanline_565PcPKcii(i8*, i8*, i32, i32) #2 {
  %5 = sext i32 %2 to i64
  %6 = tail call zeroext i1 @skcms_Transform(i8* %1, i32 7, i32 1, %struct.skcms_ICCProfile* null, i8* %0, i32 10, i32 1, %struct.skcms_ICCProfile* null, i64 %5) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZL22transform_scanline_444PcPKcii(i8*, i8*, i32, i32) #2 {
  %5 = sext i32 %2 to i64
  %6 = tail call zeroext i1 @skcms_Transform(i8* %1, i32 8, i32 1, %struct.skcms_ICCProfile* null, i8* %0, i32 10, i32 1, %struct.skcms_ICCProfile* null, i64 %5) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZL37transform_scanline_F16_to_premul_8888PcPKcii(i8*, i8*, i32, i32) #2 {
  %5 = sext i32 %2 to i64
  %6 = tail call zeroext i1 @skcms_Transform(i8* %1, i32 32, i32 1, %struct.skcms_ICCProfile* null, i8* %0, i32 12, i32 2, %struct.skcms_ICCProfile* null, i64 %5) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZL30transform_scanline_F16_to_8888PcPKcii(i8*, i8*, i32, i32) #2 {
  %5 = sext i32 %2 to i64
  %6 = tail call zeroext i1 @skcms_Transform(i8* %1, i32 32, i32 1, %struct.skcms_ICCProfile* null, i8* %0, i32 12, i32 1, %struct.skcms_ICCProfile* null, i64 %5) #9
  ret void
}

declare void @jpeg_set_defaults(%struct.jpeg_compress_struct*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkEncoder* @_ZN13SkJpegEncoder4MakeEP9SkWStreamRK8SkPixmapRKNS_7OptionsE(%class.SkWStream*, %class.SkPixmap* dereferenceable(40), %"struct.SkJpegEncoder::Options"* dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.skcms_TransferFunction, align 4
  %5 = alloca %struct.skcms_Matrix3x3, align 4
  %6 = alloca %"class.skjpeg_error_mgr::AutoPushJmpBuf", align 8
  %7 = alloca %class.sk_sp.17, align 8
  %8 = alloca %class.sk_sp.17, align 8
  %9 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 1, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %204, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 1, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %10, 536870911
  %16 = add i32 %14, -1
  %17 = icmp ugt i32 %16, 536870910
  %18 = or i1 %15, %17
  br i1 %18, label %204, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp ne i32 %21, 0
  %23 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp ne i32 %24, 0
  %26 = and i1 %22, %25
  br i1 %26, label %27, label %204

27:                                               ; preds = %19
  %28 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %204, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = sext i32 %10 to i64
  %35 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 0
  %36 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %35) #9
  %37 = sext i32 %36 to i64
  %38 = mul nsw i64 %37, %34
  %39 = icmp ult i64 %38, 2147483648
  %40 = select i1 %39, i64 %38, i64 0
  %41 = icmp ult i64 %33, %40
  br i1 %41, label %204, label %42

42:                                               ; preds = %31
  %43 = call i8* @_Znwm(i64 1816) #10
  %44 = getelementptr inbounds i8, i8* %43, i64 520
  %45 = getelementptr inbounds i8, i8* %43, i64 720
  %46 = getelementptr inbounds i8, i8* %43, i64 688
  %47 = getelementptr inbounds i8, i8* %43, i64 728
  %48 = bitcast i8* %47 to i64*
  %49 = bitcast i8* %45 to i8**
  store i8* %46, i8** %49, align 8
  store i64 34359738368, i64* %48, align 8
  %50 = getelementptr inbounds i8, i8* %43, i64 736
  %51 = bitcast i8* %50 to %struct.skjpeg_destination_mgr*
  call void @_ZN22skjpeg_destination_mgrC1EP9SkWStream(%struct.skjpeg_destination_mgr* %51, %class.SkWStream* %0) #9
  %52 = getelementptr inbounds i8, i8* %43, i64 1808
  %53 = bitcast i8* %52 to void (i8*, i8*, i32, i32)**
  store void (i8*, i8*, i32, i32)* null, void (i8*, i8*, i32, i32)** %53, align 8
  %54 = bitcast i8* %44 to %struct.jpeg_error_mgr*
  %55 = call %struct.jpeg_error_mgr* @jpeg_std_error(%struct.jpeg_error_mgr* %54) #9
  %56 = bitcast i8* %43 to %struct.jpeg_compress_struct*
  %57 = bitcast i8* %43 to %struct.jpeg_error_mgr**
  store %struct.jpeg_error_mgr* %55, %struct.jpeg_error_mgr** %57, align 8
  %58 = bitcast i8* %44 to void (%struct.jpeg_common_struct*)**
  store void (%struct.jpeg_common_struct*)* @_Z17skjpeg_error_exitP18jpeg_common_struct, void (%struct.jpeg_common_struct*)** %58, align 8
  call void @jpeg_CreateCompress(%struct.jpeg_compress_struct* nonnull %56, i32 62, i64 520) #9
  %59 = getelementptr inbounds i8, i8* %43, i64 40
  %60 = bitcast i8* %59 to i8**
  store i8* %50, i8** %60, align 8
  %61 = ptrtoint i8* %43 to i64
  %62 = bitcast %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %62) #9
  %63 = getelementptr inbounds %"class.skjpeg_error_mgr::AutoPushJmpBuf", %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %6, i64 0, i32 1
  %64 = bitcast [1 x %struct.__jmp_buf_tag]* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 200, i1 false)
  %65 = getelementptr inbounds %"class.skjpeg_error_mgr::AutoPushJmpBuf", %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %6, i64 0, i32 0
  %66 = bitcast %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %6 to i8**
  store i8* %44, i8** %66, align 8
  %67 = bitcast i8* %45 to %class.SkTArray*
  %68 = getelementptr inbounds %"class.skjpeg_error_mgr::AutoPushJmpBuf", %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %6, i64 0, i32 1
  %69 = ptrtoint [1 x %struct.__jmp_buf_tag]* %68 to i64
  call void @_ZN8SkTArrayIPA1_13__jmp_buf_tagLb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray* %67, i32 1, i32 1) #9
  %70 = bitcast i8* %45 to [1 x %struct.__jmp_buf_tag]***
  %71 = load [1 x %struct.__jmp_buf_tag]**, [1 x %struct.__jmp_buf_tag]*** %70, align 8
  %72 = load i64, i64* %48, align 8
  %73 = lshr i64 %72, 1
  %74 = and i64 %73, 2147483647
  %75 = getelementptr inbounds [1 x %struct.__jmp_buf_tag]*, [1 x %struct.__jmp_buf_tag]** %71, i64 %74
  %76 = add i64 %72, 2
  %77 = and i64 %76, 4294967294
  %78 = and i64 %72, -4294967295
  %79 = or i64 %77, %78
  store i64 %79, i64* %48, align 8
  %80 = bitcast [1 x %struct.__jmp_buf_tag]** %75 to i64*
  store i64 %69, i64* %80, align 8
  %81 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %68, i64 0, i64 0
  %82 = call i32 @_setjmp(%struct.__jmp_buf_tag* %81) #11
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %175

84:                                               ; preds = %42
  %85 = bitcast i8* %43 to %class.SkJpegEncoderMgr*
  %86 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2
  %87 = call zeroext i1 @_ZN16SkJpegEncoderMgr9setParamsERK11SkImageInfoRKN13SkJpegEncoder7OptionsE(%class.SkJpegEncoderMgr* nonnull %85, %struct.SkImageInfo* dereferenceable(24) %86, %"struct.SkJpegEncoder::Options"* dereferenceable(12) %2)
  br i1 %87, label %88, label %175

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"struct.SkJpegEncoder::Options", %"struct.SkJpegEncoder::Options"* %2, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  call void @jpeg_set_quality(%struct.jpeg_compress_struct* nonnull %56, i32 %90, i32 1) #9
  call void @jpeg_start_compress(%struct.jpeg_compress_struct* nonnull %56, i32 1) #9
  %91 = bitcast %class.sk_sp.17* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #9
  %92 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %7, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %92, align 8
  %93 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %86, i64 0, i32 0, i32 0, i32 0
  %94 = load %class.SkColorSpace*, %class.SkColorSpace** %93, align 8, !noalias !2
  %95 = icmp eq %class.SkColorSpace* %94, null
  br i1 %95, label %96, label %97

96:                                               ; preds = %88
  store %class.SkData* null, %class.SkData** %92, align 8, !alias.scope !2
  br label %137

97:                                               ; preds = %88
  %98 = bitcast %struct.skcms_TransferFunction* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %98) #9, !noalias !2
  %99 = bitcast %struct.skcms_Matrix3x3* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %98, i8 -1, i64 28, i1 false) #9, !noalias !2
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %99) #9, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %99, i8 -1, i64 36, i1 false) #9, !noalias !2
  %100 = call zeroext i1 @_ZNK12SkColorSpace21isNumericalTransferFnEP22skcms_TransferFunction(%class.SkColorSpace* nonnull %94, %struct.skcms_TransferFunction* nonnull %4) #9, !noalias !2
  br i1 %100, label %101, label %103

101:                                              ; preds = %97
  %102 = call zeroext i1 @_ZNK12SkColorSpace8toXYZD50EP15skcms_Matrix3x3(%class.SkColorSpace* nonnull %94, %struct.skcms_Matrix3x3* nonnull %5) #9, !noalias !2
  br i1 %102, label %104, label %103

103:                                              ; preds = %97, %101
  store %class.SkData* null, %class.SkData** %92, align 8, !alias.scope !2
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %99) #9, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %98) #9, !noalias !2
  br label %137

104:                                              ; preds = %101
  call void @_Z17SkWriteICCProfileRK22skcms_TransferFunctionRK15skcms_Matrix3x3(%class.sk_sp.17* nonnull sret %7, %struct.skcms_TransferFunction* nonnull dereferenceable(28) %4, %struct.skcms_Matrix3x3* nonnull dereferenceable(36) %5) #9
  %105 = load %class.SkData*, %class.SkData** %92, align 8
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %99) #9, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %98) #9, !noalias !2
  %106 = icmp eq %class.SkData* %105, null
  br i1 %106, label %137, label %107

107:                                              ; preds = %104
  %108 = bitcast %class.sk_sp.17* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #9
  %109 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %8, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %109, align 8
  %110 = getelementptr inbounds %class.SkData, %class.SkData* %105, i64 0, i32 4
  %111 = load i64, i64* %110, align 8
  %112 = add i64 %111, 14
  call void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp.17* nonnull sret %8, i64 %112) #9
  %113 = load %class.SkData*, %class.SkData** %109, align 8
  %114 = getelementptr inbounds %class.SkData, %class.SkData* %113, i64 0, i32 3
  %115 = load i8*, i8** %114, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %115, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @_ZL7kICCSig, i64 0, i64 0), i64 12, i1 false)
  %116 = getelementptr inbounds i8, i8* %115, i64 12
  %117 = getelementptr inbounds i8, i8* %115, i64 13
  store i8 1, i8* %116, align 1
  %118 = getelementptr inbounds i8, i8* %115, i64 14
  store i8 1, i8* %117, align 1
  %119 = load %class.SkData*, %class.SkData** %92, align 8
  %120 = getelementptr inbounds %class.SkData, %class.SkData* %119, i64 0, i32 3
  %121 = load i8*, i8** %120, align 8
  %122 = getelementptr inbounds %class.SkData, %class.SkData* %119, i64 0, i32 4
  %123 = load i64, i64* %122, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %118, i8* align 1 %121, i64 %123, i1 false)
  %124 = load i8*, i8** %114, align 8
  %125 = getelementptr inbounds %class.SkData, %class.SkData* %113, i64 0, i32 4
  %126 = load i64, i64* %125, align 8
  %127 = trunc i64 %126 to i32
  call void @jpeg_write_marker(%struct.jpeg_compress_struct* nonnull %56, i32 226, i8* %124, i32 %127) #9
  %128 = load %class.SkData*, %class.SkData** %109, align 8
  %129 = icmp eq %class.SkData* %128, null
  br i1 %129, label %136, label %130

130:                                              ; preds = %107
  %131 = getelementptr inbounds %class.SkData, %class.SkData* %128, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = atomicrmw add i32* %131, i32 -1 acq_rel
  %133 = icmp eq i32 %132, 1
  br i1 %133, label %134, label %136

134:                                              ; preds = %130
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %128) #9
  %135 = bitcast %class.SkData* %128 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %135) #9
  br label %136

136:                                              ; preds = %107, %130, %134
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #9
  br label %137

137:                                              ; preds = %104, %103, %96, %136
  %138 = call i8* @_Znwm(i64 40) #10
  %139 = load void (i8*, i8*, i32, i32)*, void (i8*, i8*, i32, i32)** %53, align 8
  %140 = icmp eq void (i8*, i8*, i32, i32)* %139, null
  br i1 %140, label %148, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds i8, i8* %43, i64 56
  %143 = bitcast i8* %142 to i32*
  %144 = load i32, i32* %143, align 8
  %145 = load i32, i32* %9, align 4
  %146 = mul nsw i32 %145, %144
  %147 = sext i32 %146 to i64
  br label %148

148:                                              ; preds = %141, %137
  %149 = phi i64 [ %147, %141 ], [ 0, %137 ]
  %150 = bitcast i8* %138 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV9SkEncoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %150, align 8
  %151 = getelementptr inbounds i8, i8* %138, i64 8
  %152 = bitcast i8* %151 to %class.SkPixmap**
  store %class.SkPixmap* %1, %class.SkPixmap** %152, align 8
  %153 = getelementptr inbounds i8, i8* %138, i64 16
  %154 = bitcast i8* %153 to i32*
  store i32 0, i32* %154, align 8
  %155 = getelementptr inbounds i8, i8* %138, i64 24
  %156 = icmp eq i64 %149, 0
  br i1 %156, label %160, label %157

157:                                              ; preds = %148
  %158 = call i8* @_Z15sk_malloc_throwmm(i64 %149, i64 1) #9
  %159 = ptrtoint i8* %158 to i64
  br label %160

160:                                              ; preds = %157, %148
  %161 = phi i64 [ %159, %157 ], [ 0, %148 ]
  %162 = bitcast i8* %155 to i64*
  store i64 %161, i64* %162, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV13SkJpegEncoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %150, align 8
  %163 = getelementptr inbounds i8, i8* %138, i64 32
  %164 = bitcast i8* %163 to i64*
  store i64 %61, i64* %164, align 8
  %165 = ptrtoint i8* %138 to i64
  %166 = load %class.SkData*, %class.SkData** %92, align 8
  %167 = icmp eq %class.SkData* %166, null
  br i1 %167, label %174, label %168

168:                                              ; preds = %160
  %169 = getelementptr inbounds %class.SkData, %class.SkData* %166, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = atomicrmw add i32* %169, i32 -1 acq_rel
  %171 = icmp eq i32 %170, 1
  br i1 %171, label %172, label %174

172:                                              ; preds = %168
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %166) #9
  %173 = bitcast %class.SkData* %166 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %173) #9
  br label %174

174:                                              ; preds = %160, %168, %172
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #9
  br label %175

175:                                              ; preds = %84, %42, %174
  %176 = phi i64 [ 0, %174 ], [ %61, %42 ], [ %61, %84 ]
  %177 = phi i64 [ %165, %174 ], [ 0, %42 ], [ 0, %84 ]
  %178 = load %struct.skjpeg_error_mgr*, %struct.skjpeg_error_mgr** %65, align 8
  %179 = getelementptr inbounds %struct.skjpeg_error_mgr, %struct.skjpeg_error_mgr* %178, i64 0, i32 1, i32 0, i32 0, i64 32
  %180 = bitcast i8* %179 to %class.SkTArray*
  %181 = getelementptr inbounds %struct.skjpeg_error_mgr, %struct.skjpeg_error_mgr* %178, i64 0, i32 1, i32 0, i32 0, i64 40
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = and i64 %183, 4294967294
  %185 = add nuw nsw i64 %184, 4294967294
  %186 = and i64 %185, 4294967294
  %187 = and i64 %183, -4294967295
  %188 = or i64 %186, %187
  store i64 %188, i64* %182, align 8
  call void @_ZN8SkTArrayIPA1_13__jmp_buf_tagLb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray* %180, i32 0, i32 2) #9
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %62) #9
  %189 = inttoptr i64 %176 to %class.SkJpegEncoderMgr*
  %190 = icmp eq i64 %176, 0
  br i1 %190, label %204, label %191

191:                                              ; preds = %175
  %192 = getelementptr inbounds %class.SkJpegEncoderMgr, %class.SkJpegEncoderMgr* %189, i64 0, i32 0
  call void @jpeg_destroy_compress(%struct.jpeg_compress_struct* %192) #9
  %193 = getelementptr inbounds %class.SkJpegEncoderMgr, %class.SkJpegEncoderMgr* %189, i64 0, i32 1, i32 1, i32 0, i32 0, i64 40
  %194 = bitcast i8* %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = and i64 %195, 1
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %202, label %198

198:                                              ; preds = %191
  %199 = getelementptr inbounds %class.SkJpegEncoderMgr, %class.SkJpegEncoderMgr* %189, i64 0, i32 1, i32 1, i32 0, i32 0, i64 32
  %200 = bitcast i8* %199 to i8**
  %201 = load i8*, i8** %200, align 8
  call void @_Z7sk_freePv(i8* %201) #9
  br label %202

202:                                              ; preds = %198, %191
  %203 = inttoptr i64 %176 to i8*
  call void @_ZdlPv(i8* %203) #10
  br label %204

204:                                              ; preds = %31, %3, %12, %19, %27, %202, %175
  %205 = phi i64 [ 0, %31 ], [ %177, %175 ], [ %177, %202 ], [ 0, %27 ], [ 0, %19 ], [ 0, %12 ], [ 0, %3 ]
  %206 = inttoptr i64 %205 to %class.SkEncoder*
  ret %class.SkEncoder* %206
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind returns_twice
declare i32 @_setjmp(%struct.__jmp_buf_tag*) local_unnamed_addr #4

declare void @jpeg_set_quality(%struct.jpeg_compress_struct*, i32, i32) local_unnamed_addr #3

declare void @jpeg_start_compress(%struct.jpeg_compress_struct*, i32) local_unnamed_addr #3

declare void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp.17* sret, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @jpeg_write_marker(%struct.jpeg_compress_struct*, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkJpegEncoderC2ENSt3__110unique_ptrI16SkJpegEncoderMgrNS0_14default_deleteIS2_EEEERK8SkPixmap(%class.SkJpegEncoder* nocapture, %class.SkJpegEncoderMgr*, %class.SkPixmap* dereferenceable(40)) unnamed_addr #0 align 2 {
  %4 = ptrtoint %class.SkJpegEncoderMgr* %1 to i64
  %5 = getelementptr inbounds %class.SkJpegEncoderMgr, %class.SkJpegEncoderMgr* %1, i64 0, i32 3
  %6 = load void (i8*, i8*, i32, i32)*, void (i8*, i8*, i32, i32)** %5, align 8
  %7 = icmp eq void (i8*, i8*, i32, i32)* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.SkJpegEncoderMgr, %class.SkJpegEncoderMgr* %1, i64 0, i32 0, i32 9
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 0, i32 2, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = mul nsw i32 %12, %10
  %14 = sext i32 %13 to i64
  br label %15

15:                                               ; preds = %3, %8
  %16 = phi i64 [ %14, %8 ], [ 0, %3 ]
  %17 = getelementptr inbounds %class.SkJpegEncoder, %class.SkJpegEncoder* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV9SkEncoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %class.SkJpegEncoder, %class.SkJpegEncoder* %0, i64 0, i32 0, i32 1
  store %class.SkPixmap* %2, %class.SkPixmap** %18, align 8
  %19 = getelementptr inbounds %class.SkJpegEncoder, %class.SkJpegEncoder* %0, i64 0, i32 0, i32 2
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %class.SkJpegEncoder, %class.SkJpegEncoder* %0, i64 0, i32 0, i32 3
  %21 = icmp eq i64 %16, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %15
  %23 = tail call i8* @_Z15sk_malloc_throwmm(i64 %16, i64 1) #9
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %22, %15
  %26 = phi i64 [ %24, %22 ], [ 0, %15 ]
  %27 = bitcast %class.SkAutoTMalloc* %20 to i64*
  store i64 %26, i64* %27, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV13SkJpegEncoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %28 = getelementptr inbounds %class.SkJpegEncoder, %class.SkJpegEncoder* %0, i64 0, i32 1
  %29 = bitcast %"class.std::__1::unique_ptr.11"* %28 to i64*
  store i64 %4, i64* %29, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkJpegEncoderD2Ev(%class.SkJpegEncoder* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkJpegEncoder, %class.SkJpegEncoder* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV13SkJpegEncoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkJpegEncoder, %class.SkJpegEncoder* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.SkJpegEncoderMgr*, %class.SkJpegEncoderMgr** %3, align 8
  store %class.SkJpegEncoderMgr* null, %class.SkJpegEncoderMgr** %3, align 8
  %5 = icmp eq %class.SkJpegEncoderMgr* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkJpegEncoderMgr, %class.SkJpegEncoderMgr* %4, i64 0, i32 0
  tail call void @jpeg_destroy_compress(%struct.jpeg_compress_struct* %7) #9
  %8 = getelementptr inbounds %class.SkJpegEncoderMgr, %class.SkJpegEncoderMgr* %4, i64 0, i32 1, i32 1, i32 0, i32 0, i64 40
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %class.SkJpegEncoderMgr, %class.SkJpegEncoderMgr* %4, i64 0, i32 1, i32 1, i32 0, i32 0, i64 32
  %15 = bitcast i8* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  tail call void @_Z7sk_freePv(i8* %16) #9
  br label %17

17:                                               ; preds = %13, %6
  %18 = bitcast %class.SkJpegEncoderMgr* %4 to i8*
  tail call void @_ZdlPv(i8* %18) #10
  br label %19

19:                                               ; preds = %1, %17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV9SkEncoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %20 = getelementptr inbounds %class.SkJpegEncoder, %class.SkJpegEncoder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  store i8* null, i8** %20, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %19
  tail call void @_Z7sk_freePv(i8* nonnull %21) #9
  br label %24

24:                                               ; preds = %19, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkJpegEncoderD0Ev(%class.SkJpegEncoder*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkJpegEncoder, %class.SkJpegEncoder* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV13SkJpegEncoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkJpegEncoder, %class.SkJpegEncoder* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.SkJpegEncoderMgr*, %class.SkJpegEncoderMgr** %3, align 8
  store %class.SkJpegEncoderMgr* null, %class.SkJpegEncoderMgr** %3, align 8
  %5 = icmp eq %class.SkJpegEncoderMgr* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkJpegEncoderMgr, %class.SkJpegEncoderMgr* %4, i64 0, i32 0
  tail call void @jpeg_destroy_compress(%struct.jpeg_compress_struct* %7) #9
  %8 = getelementptr inbounds %class.SkJpegEncoderMgr, %class.SkJpegEncoderMgr* %4, i64 0, i32 1, i32 1, i32 0, i32 0, i64 40
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %class.SkJpegEncoderMgr, %class.SkJpegEncoderMgr* %4, i64 0, i32 1, i32 1, i32 0, i32 0, i64 32
  %15 = bitcast i8* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  tail call void @_Z7sk_freePv(i8* %16) #9
  br label %17

17:                                               ; preds = %13, %6
  %18 = bitcast %class.SkJpegEncoderMgr* %4 to i8*
  tail call void @_ZdlPv(i8* %18) #10
  br label %19

19:                                               ; preds = %17, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV9SkEncoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %20 = getelementptr inbounds %class.SkJpegEncoder, %class.SkJpegEncoder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  store i8* null, i8** %20, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %19
  tail call void @_Z7sk_freePv(i8* nonnull %21) #9
  br label %24

24:                                               ; preds = %19, %23
  %25 = bitcast %class.SkJpegEncoder* %0 to i8*
  tail call void @_ZdlPv(i8* %25) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13SkJpegEncoder12onEncodeRowsEi(%class.SkJpegEncoder* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.skjpeg_error_mgr::AutoPushJmpBuf", align 8
  %4 = alloca i8*, align 8
  %5 = bitcast %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.skjpeg_error_mgr::AutoPushJmpBuf", %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %3, i64 0, i32 1
  %7 = bitcast [1 x %struct.__jmp_buf_tag]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 200, i1 false)
  %8 = getelementptr inbounds %class.SkJpegEncoder, %class.SkJpegEncoder* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %class.SkJpegEncoderMgr*, %class.SkJpegEncoderMgr** %8, align 8
  %10 = getelementptr inbounds %class.SkJpegEncoderMgr, %class.SkJpegEncoderMgr* %9, i64 0, i32 1
  %11 = getelementptr inbounds %"class.skjpeg_error_mgr::AutoPushJmpBuf", %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %3, i64 0, i32 0
  store %struct.skjpeg_error_mgr* %10, %struct.skjpeg_error_mgr** %11, align 8
  %12 = getelementptr inbounds %class.SkJpegEncoderMgr, %class.SkJpegEncoderMgr* %9, i64 0, i32 1, i32 1, i32 0, i32 0, i64 32
  %13 = bitcast i8* %12 to %class.SkTArray*
  %14 = getelementptr inbounds %"class.skjpeg_error_mgr::AutoPushJmpBuf", %"class.skjpeg_error_mgr::AutoPushJmpBuf"* %3, i64 0, i32 1
  %15 = ptrtoint [1 x %struct.__jmp_buf_tag]* %14 to i64
  call void @_ZN8SkTArrayIPA1_13__jmp_buf_tagLb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray* %13, i32 1, i32 1) #9
  %16 = bitcast i8* %12 to [1 x %struct.__jmp_buf_tag]***
  %17 = load [1 x %struct.__jmp_buf_tag]**, [1 x %struct.__jmp_buf_tag]*** %16, align 8
  %18 = getelementptr inbounds %class.SkJpegEncoderMgr, %class.SkJpegEncoderMgr* %9, i64 0, i32 1, i32 1, i32 0, i32 0, i64 40
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = lshr i64 %20, 1
  %22 = and i64 %21, 2147483647
  %23 = getelementptr inbounds [1 x %struct.__jmp_buf_tag]*, [1 x %struct.__jmp_buf_tag]** %17, i64 %22
  %24 = add i64 %20, 2
  %25 = and i64 %24, 4294967294
  %26 = and i64 %20, -4294967295
  %27 = or i64 %25, %26
  store i64 %27, i64* %19, align 8
  %28 = bitcast [1 x %struct.__jmp_buf_tag]** %23 to i64*
  store i64 %15, i64* %28, align 8
  %29 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %14, i64 0, i64 0
  %30 = call i32 @_setjmp(%struct.__jmp_buf_tag* %29) #11
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %92

32:                                               ; preds = %2
  %33 = getelementptr inbounds %class.SkJpegEncoder, %class.SkJpegEncoder* %0, i64 0, i32 0, i32 1
  %34 = load %class.SkPixmap*, %class.SkPixmap** %33, align 8
  %35 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %34, i64 0, i32 2, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = call i32 @_Z24SkColorTypeBytesPerPixel11SkColorType(i32 %36) #9
  %38 = load %class.SkPixmap*, %class.SkPixmap** %33, align 8
  %39 = getelementptr inbounds %class.SkJpegEncoder, %class.SkJpegEncoder* %0, i64 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %38, i64 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %38, i64 0, i32 2
  %44 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %38, i64 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = call i64 @_ZNK11SkImageInfo13computeOffsetEiim(%struct.SkImageInfo* %43, i32 0, i32 %40, i64 %45) #9
  %47 = icmp sgt i32 %1, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %32
  %49 = load %class.SkPixmap*, %class.SkPixmap** %33, align 8
  br label %56

50:                                               ; preds = %32
  %51 = getelementptr inbounds i8, i8* %42, i64 %46
  %52 = bitcast i8** %4 to i8*
  %53 = getelementptr inbounds %class.SkJpegEncoder, %class.SkJpegEncoder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %54 = bitcast i8** %53 to i64*
  %55 = bitcast i8** %4 to i64*
  br label %63

56:                                               ; preds = %79, %48
  %57 = phi %class.SkPixmap* [ %49, %48 ], [ %83, %79 ]
  %58 = load i32, i32* %39, align 8
  %59 = add nsw i32 %58, %1
  store i32 %59, i32* %39, align 8
  %60 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %57, i64 0, i32 2, i32 1, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %59, %61
  br i1 %62, label %89, label %92

63:                                               ; preds = %79, %50
  %64 = phi i32 [ 0, %50 ], [ %87, %79 ]
  %65 = phi i8* [ %51, %50 ], [ %86, %79 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #9
  store i8* %65, i8** %4, align 8
  %66 = load %class.SkJpegEncoderMgr*, %class.SkJpegEncoderMgr** %8, align 8
  %67 = getelementptr inbounds %class.SkJpegEncoderMgr, %class.SkJpegEncoderMgr* %66, i64 0, i32 3
  %68 = load void (i8*, i8*, i32, i32)*, void (i8*, i8*, i32, i32)** %67, align 8
  %69 = icmp eq void (i8*, i8*, i32, i32)* %68, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %63
  %71 = load i8*, i8** %53, align 8
  %72 = load %class.SkPixmap*, %class.SkPixmap** %33, align 8
  %73 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %72, i64 0, i32 2, i32 1, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %class.SkJpegEncoderMgr, %class.SkJpegEncoderMgr* %66, i64 0, i32 0, i32 9
  %76 = load i32, i32* %75, align 8
  call void %68(i8* %71, i8* %65, i32 %74, i32 %76) #9
  %77 = load i64, i64* %54, align 8
  store i64 %77, i64* %55, align 8
  %78 = load %class.SkJpegEncoderMgr*, %class.SkJpegEncoderMgr** %8, align 8
  br label %79

79:                                               ; preds = %63, %70
  %80 = phi %class.SkJpegEncoderMgr* [ %66, %63 ], [ %78, %70 ]
  %81 = getelementptr inbounds %class.SkJpegEncoderMgr, %class.SkJpegEncoderMgr* %80, i64 0, i32 0
  %82 = call i32 @jpeg_write_scanlines(%struct.jpeg_compress_struct* %81, i8** nonnull %4, i32 1) #9
  %83 = load %class.SkPixmap*, %class.SkPixmap** %33, align 8
  %84 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %83, i64 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds i8, i8* %65, i64 %85
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #9
  %87 = add nuw nsw i32 %64, 1
  %88 = icmp eq i32 %87, %1
  br i1 %88, label %56, label %63

89:                                               ; preds = %56
  %90 = load %class.SkJpegEncoderMgr*, %class.SkJpegEncoderMgr** %8, align 8
  %91 = getelementptr inbounds %class.SkJpegEncoderMgr, %class.SkJpegEncoderMgr* %90, i64 0, i32 0
  call void @jpeg_finish_compress(%struct.jpeg_compress_struct* %91) #9
  br label %92

92:                                               ; preds = %56, %89, %2
  %93 = phi i1 [ false, %2 ], [ true, %89 ], [ true, %56 ]
  %94 = load %struct.skjpeg_error_mgr*, %struct.skjpeg_error_mgr** %11, align 8
  %95 = getelementptr inbounds %struct.skjpeg_error_mgr, %struct.skjpeg_error_mgr* %94, i64 0, i32 1, i32 0, i32 0, i64 32
  %96 = bitcast i8* %95 to %class.SkTArray*
  %97 = getelementptr inbounds %struct.skjpeg_error_mgr, %struct.skjpeg_error_mgr* %94, i64 0, i32 1, i32 0, i32 0, i64 40
  %98 = bitcast i8* %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = and i64 %99, 4294967294
  %101 = add nuw nsw i64 %100, 4294967294
  %102 = and i64 %101, 4294967294
  %103 = and i64 %99, -4294967295
  %104 = or i64 %102, %103
  store i64 %104, i64* %98, align 8
  call void @_ZN8SkTArrayIPA1_13__jmp_buf_tagLb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray* %96, i32 0, i32 2) #9
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %5) #9
  ret i1 %93
}

declare i32 @_Z24SkColorTypeBytesPerPixel11SkColorType(i32) local_unnamed_addr #3

declare i32 @jpeg_write_scanlines(%struct.jpeg_compress_struct*, i8**, i32) local_unnamed_addr #3

declare void @jpeg_finish_compress(%struct.jpeg_compress_struct*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13SkJpegEncoder6EncodeEP9SkWStreamRK8SkPixmapRKNS_7OptionsE(%class.SkWStream*, %class.SkPixmap* dereferenceable(40), %"struct.SkJpegEncoder::Options"* dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %4 = tail call %class.SkEncoder* @_ZN13SkJpegEncoder4MakeEP9SkWStreamRK8SkPixmapRKNS_7OptionsE(%class.SkWStream* %0, %class.SkPixmap* dereferenceable(40) %1, %"struct.SkJpegEncoder::Options"* dereferenceable(12) %2)
  %5 = icmp eq %class.SkEncoder* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 1, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = tail call zeroext i1 @_ZN9SkEncoder10encodeRowsEi(%class.SkEncoder* nonnull %4, i32 %8) #9
  %10 = bitcast %class.SkEncoder* %4 to void (%class.SkEncoder*)***
  %11 = load void (%class.SkEncoder*)**, void (%class.SkEncoder*)*** %10, align 8
  %12 = getelementptr inbounds void (%class.SkEncoder*)*, void (%class.SkEncoder*)** %11, i64 1
  %13 = load void (%class.SkEncoder*)*, void (%class.SkEncoder*)** %12, align 8
  tail call void %13(%class.SkEncoder* nonnull %4) #9
  br label %14

14:                                               ; preds = %3, %6
  %15 = phi i1 [ %9, %6 ], [ false, %3 ]
  ret i1 %15
}

declare zeroext i1 @_ZN9SkEncoder10encodeRowsEi(%class.SkEncoder*, i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZL35transform_scanline_to_premul_legacyPcPKcii(i8*, i8*, i32, i32) #2 {
  %5 = sext i32 %2 to i64
  %6 = tail call zeroext i1 @skcms_Transform(i8* %1, i32 12, i32 1, %struct.skcms_ICCProfile* null, i8* %0, i32 12, i32 2, %struct.skcms_ICCProfile* null, i64 %5) #9
  ret void
}

declare zeroext i1 @skcms_Transform(i8*, i32, i32, %struct.skcms_ICCProfile*, i8*, i32, i32, %struct.skcms_ICCProfile*, i64) local_unnamed_addr #3

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #3

declare void @_ZN22skjpeg_destination_mgrC1EP9SkWStream(%struct.skjpeg_destination_mgr*, %class.SkWStream*) unnamed_addr #3

declare %struct.jpeg_error_mgr* @jpeg_std_error(%struct.jpeg_error_mgr*) local_unnamed_addr #3

declare void @_Z17skjpeg_error_exitP18jpeg_common_struct(%struct.jpeg_common_struct*) #3

declare void @jpeg_CreateCompress(%struct.jpeg_compress_struct*, i32, i64) local_unnamed_addr #3

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIPA1_13__jmp_buf_tagLb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %76

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %76, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #9
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %59, %50 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load [1 x %struct.__jmp_buf_tag]**, [1 x %struct.__jmp_buf_tag]*** %49, align 8
  %55 = getelementptr inbounds [1 x %struct.__jmp_buf_tag]*, [1 x %struct.__jmp_buf_tag]** %54, i64 %51
  %56 = bitcast [1 x %struct.__jmp_buf_tag]** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast i8* %53 to i64*
  store i64 %57, i64* %58, align 8
  %59 = add nuw nsw i64 %51, 1
  %60 = load i64, i64* %4, align 8
  %61 = lshr i64 %60, 1
  %62 = and i64 %61, 2147483647
  %63 = icmp ult i64 %59, %62
  br i1 %63, label %50, label %64

64:                                               ; preds = %50, %35
  %65 = phi i64 [ %45, %35 ], [ %60, %50 ]
  %66 = and i64 %65, 1
  %67 = icmp eq i64 %66, 0
  %68 = bitcast %class.SkTArray* %0 to i8**
  br i1 %67, label %72, label %69

69:                                               ; preds = %64
  %70 = load i8*, i8** %68, align 8
  tail call void @_Z7sk_freePv(i8* %70) #9
  %71 = load i64, i64* %4, align 8
  br label %72

72:                                               ; preds = %64, %69
  %73 = phi i64 [ %71, %69 ], [ %65, %64 ]
  store i8* %44, i8** %68, align 8
  %74 = and i64 %73, -4294967298
  %75 = or i64 %74, 1
  store i64 %75, i64* %4, align 8
  br label %76

76:                                               ; preds = %72, %32, %21
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

declare zeroext i1 @_ZNK12SkColorSpace21isNumericalTransferFnEP22skcms_TransferFunction(%class.SkColorSpace*, %struct.skcms_TransferFunction*) local_unnamed_addr #3

declare zeroext i1 @_ZNK12SkColorSpace8toXYZD50EP15skcms_Matrix3x3(%class.SkColorSpace*, %struct.skcms_Matrix3x3*) local_unnamed_addr #3

declare void @_Z17SkWriteICCProfileRK22skcms_TransferFunctionRK15skcms_Matrix3x3(%class.sk_sp.17* sret, %struct.skcms_TransferFunction* dereferenceable(28), %struct.skcms_Matrix3x3* dereferenceable(36)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkEncoderD2Ev(%class.SkEncoder*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkEncoder, %class.SkEncoder* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV9SkEncoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkEncoder, %class.SkEncoder* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_Z7sk_freePv(i8* nonnull %4) #9
  br label %7

7:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkEncoderD0Ev(%class.SkEncoder*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare i64 @_ZNK11SkImageInfo13computeOffsetEiim(%struct.SkImageInfo*, i32, i32, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #8

declare void @jpeg_destroy_compress(%struct.jpeg_compress_struct*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind returns_twice "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind returns_twice }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZL20icc_from_color_spaceRK11SkImageInfo: argument 0"}
!4 = distinct !{!4, !"_ZL20icc_from_color_spaceRK11SkImageInfo"}
