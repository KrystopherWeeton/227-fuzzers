; ModuleID = '../../third_party/skia/src/gpu/vk/GrVkSecondaryCBDrawContext.cpp'
source_filename = "../../third_party/skia/src/gpu/vk/GrVkSecondaryCBDrawContext.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.GrFlushInfo = type { i32, %class.GrBackendSemaphore*, void (i8*)*, i8*, void (i8*, i1)*, i8* }
%class.GrBackendSemaphore = type opaque
%class.GrVkSecondaryCBDrawContext = type { %class.SkRefCnt.base, %class.sk_sp.218, %"class.std::__1::unique_ptr.219", %class.SkSurfaceProps }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.218 = type { %class.SkBaseGpuDevice* }
%class.SkBaseGpuDevice = type { %class.SkBaseDevice }
%class.SkBaseDevice = type { %class.SkRefCnt.base, %class.SkMatrixProvider, %class.SkMarkerStack*, %struct.SkImageInfo, %class.SkSurfaceProps, %class.SkM44, %class.SkM44 }
%class.SkMatrixProvider = type { i32 (...)**, %class.SkM44, %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkMarkerStack = type opaque
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.215, i32, i32 }
%class.sk_sp.215 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.216, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.216 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.16" }
%"struct.std::__1::atomic.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl.19" }
%"struct.std::__1::__cxx_atomic_impl.19" = type { %"struct.std::__1::__cxx_atomic_base_impl.20" }
%"struct.std::__1::__cxx_atomic_base_impl.20" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.SkM44 = type { [16 x float] }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %class.SkCanvas* }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.222, [384 x i64], %class.sk_sp.223, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.224", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.230" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.222 = type { %class.SkMarkerStack* }
%class.sk_sp.223 = type { %class.SkBaseDevice* }
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type { i32, %class.SkAutoTMalloc, i32, %class.SkAutoTMalloc, %"class.std::__1::vector", %class.SkGlyphRunList, %"class.std::__1::vector.251" }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.233" }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %struct.SkPoint* }
%struct.SkPoint = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.SkGlyphRun*, %class.SkGlyphRun*, %"class.std::__1::__compressed_pair.241" }
%class.SkGlyphRun = type { %class.SkZip, %class.SkSpan, %class.SkSpan.238, %class.SkSpan.239, %class.SkFont }
%class.SkZip = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.237" }
%"class.std::__1::__tuple_leaf" = type { i16* }
%"class.std::__1::__tuple_leaf.237" = type { %struct.SkPoint* }
%class.SkSpan = type { i8*, i64 }
%class.SkSpan.238 = type { i32*, i64 }
%class.SkSpan.239 = type { %struct.SkPoint*, i64 }
%class.SkFont = type <{ %class.sk_sp.240, float, float, float, i8, i8, i8, i8 }>
%class.sk_sp.240 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %class.SkGlyphRun* }
%class.SkGlyphRunList = type { %class.SkSpan.244, %class.SkTextBlob*, %struct.SkRect, %struct.SkPoint }
%class.SkSpan.244 = type { %class.SkGlyphRun*, i64 }
%class.SkTextBlob = type { %class.SkNVRefCnt.245, %struct.SkRect, i32, %"struct.std::__1::atomic.246" }
%class.SkNVRefCnt.245 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.246" = type { %"struct.std::__1::__atomic_base.247" }
%"struct.std::__1::__atomic_base.247" = type { %"struct.std::__1::__atomic_base.248" }
%"struct.std::__1::__atomic_base.248" = type { %"struct.std::__1::__cxx_atomic_impl.249" }
%"struct.std::__1::__cxx_atomic_impl.249" = type { %"struct.std::__1::__cxx_atomic_base_impl.250" }
%"struct.std::__1::__cxx_atomic_base_impl.250" = type { i32 }
%"class.std::__1::vector.251" = type { %"class.std::__1::__vector_base.252" }
%"class.std::__1::__vector_base.252" = type { i16*, i16*, %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { i16* }
%class.SkSurfaceProps = type { i32, i32 }
%class.sk_sp.217 = type { %class.GrVkSecondaryCBDrawContext* }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.31", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.209" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp }
%class.sk_sp = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type <{ %class.SkNVRefCnt, i32, %struct.GrContextOptions, i32, [4 x i8], %class.sk_sp.1, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.24", %class.sk_sp.30, %"struct.std::__1::atomic.3", [7 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.GrContextOptions = type { i8, i32, i32, i32, %class.SkExecutor*, i8, i8, i8, i8, i8, i64, float, float, i32, i8, i8, i32, i32, i8, i8, i32, %"class.GrContextOptions::PersistentCache"*, i32, %"class.GrContextOptions::ShaderErrorHandler"*, i32, i32, i8, i8, %class.GrDriverBugWorkarounds }
%class.SkExecutor = type opaque
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.1 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.2, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.2 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrTextBlobCache* }
%class.GrTextBlobCache = type { %class.SkSpinlock, %class.SkTInternalLList, %class.SkTHashMap, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrTextBlobCache::PurgeBlobMessage, unsigned int, true>::Inbox" }
%class.SkSpinlock = type { %"struct.std::__1::atomic.3" }
%class.SkTInternalLList = type { %class.GrTextBlob*, %class.GrTextBlob* }
%class.GrTextBlob = type <{ %class.SkGlyphRunPainterInterface, %class.SkNVRefCnt.7, [4 x i8], %class.GrTextBlob*, %class.GrTextBlob*, %class.GrSubRunAllocator, %struct.GrSubRunList, i32, %class.SkMatrix, i32, %"struct.GrTextBlob::Key", float, float, i8, [3 x i8] }>
%class.SkGlyphRunPainterInterface = type { i32 (...)** }
%class.SkNVRefCnt.7 = type { %"struct.std::__1::atomic" }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes }
%class.SkFibBlockSizes = type { i32 }
%struct.GrSubRunList = type { %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8"* }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %class.GrSubRun* }
%class.GrSubRun = type { i32 (...)**, %"class.std::__1::unique_ptr.8" }
%"struct.GrTextBlob::Key" = type { i32, i32, float, float, i32, %"struct.SkMaskFilterBase::BlurRec", i32, %class.SkMatrix, i8, i8, i8, i8 }
%"struct.SkMaskFilterBase::BlurRec" = type { float, i32 }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.12" }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair>::Slot" = type opaque
%"class.SkMessageBus<GrTextBlobCache::PurgeBlobMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray = type { %"struct.GrTextBlobCache::PurgeBlobMessage"*, i64 }
%"struct.GrTextBlobCache::PurgeBlobMessage" = type { i32, i32 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %class.GrThreadSafeCache* }
%class.GrThreadSafeCache = type opaque
%class.sk_sp.30 = type { %class.GrThreadSafePipelineBuilder* }
%class.GrThreadSafePipelineBuilder = type opaque
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.34, %class.SkTHashMap.36, %class.SkTHashMap.45, %class.SkTArray.54, %class.SkTArray.56, i32, i8, [3 x i8] }>
%class.SkTArray.34 = type { %"class.std::__1::unique_ptr.35"*, i64 }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.56, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.57 }
%class.sk_sp.57 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap.36 = type { %class.SkTHashTable.37 }
%class.SkTHashTable.37 = type { i32, i32, %class.SkAutoTArray.38 }
%class.SkAutoTArray.38 = type { %"class.std::__1::unique_ptr.39" }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.45 = type { %class.SkTHashTable.46 }
%class.SkTHashTable.46 = type { i32, i32, %class.SkAutoTArray.47 }
%class.SkAutoTArray.47 = type { %"class.std::__1::unique_ptr.48" }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.385" }
%"struct.std::__1::pair.385" = type { i32, %class.SkTArray.386* }
%class.SkTArray.386 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.54 = type { %"class.std::__1::unique_ptr.55"*, i64 }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.388" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.386, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.56 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.68" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes.64, [4 x i8] }>
%class.SkFibBlockSizes.64 = type { i32 }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %class.GrSubRunAllocator* }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type { %class.GrRecordingContext*, %"struct.GrPathRendererChain::Options", %class.sk_sp.77, %class.SkTArray.86, %class.GrOpsTask*, %class.SkSTArray.174, %class.SkSTArray.177, %"class.std::__1::unique_ptr.179", %class.sk_sp.195, %class.GrTokenTracker, i8, i8, %class.SkTArray.196, %class.GrHashMapWithCache }
%"struct.GrPathRendererChain::Options" = type { i8, i32 }
%class.sk_sp.77 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef, [4 x i8], %"class.std::__1::unique_ptr.78", i32, [4 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.81, i8, [7 x i8] }>
%class.sk_sp.81 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.82, i8*, i64 }
%class.GrBuffer = type { i32 (...)** }
%class.GrNonAtomicRef.82 = type { i32 }
%class.SkTArray.86 = type { %class.sk_sp.87*, i64 }
%class.sk_sp.87 = type { %class.GrRenderTask* }
%class.GrRenderTask = type { %class.SkRefCnt.base, %class.GrRenderTask*, %class.GrRenderTask*, %class.SkSTArray, %class.SkTArray.141, i32, i32, %class.SkSTArray.148, %class.SkSTArray.148, %class.GrTextureResolveRenderTask* }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.88 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.88 = type { %class.sk_sp.89*, i64 }
%class.sk_sp.89 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.90, %class.sk_sp.91, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.136" }
%class.SkNVRefCnt.90 = type { %"struct.std::__1::atomic" }
%class.sk_sp.91 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.94 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.92, i8* }
%class.sk_sp.92 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.93, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.93 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.94 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.95, void (i8*)*, i8* }
%class.SkNVRefCnt.95 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.96, i32, [4 x i8] }
%union.anon.96 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.91, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.1, %class.sk_sp.135, %class.sk_sp.135 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.115, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.126, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type { %class.SkTDynamicHash, %class.GrImageContext* }
%class.SkTDynamicHash = type { %class.SkTHashTable.98 }
%class.SkTHashTable.98 = type { i32, i32, %class.SkAutoTArray.99 }
%class.SkAutoTArray.99 = type { %"class.std::__1::unique_ptr.100" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot" = type opaque
%class.GrImageContext = type <{ %class.GrContext_Base, %class.GrSingleOwner, [7 x i8] }>
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash.106, i32, [4 x i8] }>
%class.SkTDynamicHash.106 = type { %class.SkTHashTable.107 }
%class.SkTHashTable.107 = type { i32, i32, %class.SkAutoTArray.108 }
%class.SkAutoTArray.108 = type { %"class.std::__1::unique_ptr.109" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.115 = type { %class.SkTHashTable.116 }
%class.SkTHashTable.116 = type { i32, i32, %class.SkAutoTArray.117 }
%class.SkAutoTArray.117 = type { %"class.std::__1::unique_ptr.118" }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.124, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.124 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.125, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.125 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.126 = type { %class.SkTHashTable.127 }
%class.SkTHashTable.127 = type { i32, i32, %class.SkAutoTArray.128 }
%class.SkAutoTArray.128 = type { %"class.std::__1::unique_ptr.129" }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.sk_sp.135 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.136" = type { %"struct.std::__1::__atomic_base.137" }
%"struct.std::__1::__atomic_base.137" = type { %"struct.std::__1::__atomic_base.138" }
%"struct.std::__1::__atomic_base.138" = type { %"struct.std::__1::__cxx_atomic_impl.139" }
%"struct.std::__1::__cxx_atomic_impl.139" = type { %"struct.std::__1::__cxx_atomic_base_impl.140" }
%"struct.std::__1::__cxx_atomic_base_impl.140" = type { i64 }
%class.SkTArray.141 = type { %class.GrTextureProxy**, i64 }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.142", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.SkSTArray.148 = type { %class.SkAlignedSTStorage.149, %class.SkTArray.150 }
%class.SkAlignedSTStorage.149 = type { [8 x i8] }
%class.SkTArray.150 = type { %class.GrRenderTask**, i64 }
%class.GrTextureResolveRenderTask = type opaque
%class.GrOpsTask = type { %class.GrRenderTask, %class.GrAuditTrail*, i8, %class.GrSwizzle, i32, i32, %"struct.std::__1::array", i32, i8, i32, %struct.SkIRect, i32, i32, %class.SkSTArray.151, %class.sk_sp.171, %class.SkTArray.173, %struct.SkRect, %struct.SkIRect }
%class.GrSwizzle = type { i16 }
%"struct.std::__1::array" = type { [4 x float] }
%class.SkSTArray.151 = type { %class.SkAlignedSTStorage.152, %class.SkTArray.153 }
%class.SkAlignedSTStorage.152 = type { [2000 x i8] }
%class.SkTArray.153 = type { %"class.GrOpsTask::OpChain"*, i64 }
%"class.GrOpsTask::OpChain" = type { %"class.GrOpsTask::OpChain::List", %"class.GrProcessorSet::Analysis", [4 x i8], %"class.GrXferProcessor::DstProxyView", %class.GrAppliedClip*, %struct.SkRect }
%"class.GrOpsTask::OpChain::List" = type { %"class.std::__1::unique_ptr.154", %class.GrOp* }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %class.GrOp* }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr.154", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.GrProcessorSet::Analysis" = type { i16, [2 x i8] }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.89, i32, %class.GrSwizzle, [2 x i8] }>
%struct.SkIPoint = type { i32, i32 }
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.162" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.160 }
%union.anon.160 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.161, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.161 = type { i32 }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.165, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.165 = type { %class.SkAlignedSTStorage.166, %class.SkTArray.167 }
%class.SkAlignedSTStorage.166 = type { [8 x i8] }
%class.SkTArray.167 = type { %"class.std::__1::unique_ptr.162"*, i64 }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.sk_sp.171 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.172, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.172 = type { %"struct.std::__1::atomic" }
%class.SkTArray.173 = type { %class.GrSurfaceProxy**, i64 }
%class.SkSTArray.174 = type { %class.SkAlignedSTStorage.175, %class.SkTArray.176 }
%class.SkAlignedSTStorage.175 = type { [32 x i8] }
%class.SkTArray.176 = type { i32*, i64 }
%class.SkSTArray.177 = type { %class.SkAlignedSTStorage.178, %class.SkTArray.86 }
%class.SkAlignedSTStorage.178 = type { [32 x i8] }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %class.GrPathRendererChain* }
%class.GrPathRendererChain = type { %class.SkSTArray.182, %"class.std::__1::unique_ptr.186", %class.GrPathRenderer* }
%class.SkSTArray.182 = type { %class.SkAlignedSTStorage.183, %class.SkTArray.184 }
%class.SkAlignedSTStorage.183 = type { [64 x i8] }
%class.SkTArray.184 = type { %class.sk_sp.185*, i64 }
%class.sk_sp.185 = type { %class.GrPathRenderer* }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %class.GrCoverageCountingPathRenderer* }
%class.GrCoverageCountingPathRenderer = type opaque
%class.GrPathRenderer = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.195 = type { %class.GrSoftwarePathRenderer* }
%class.GrSoftwarePathRenderer = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrDeferredUploadToken = type { i64 }
%class.SkTArray.196 = type { %class.GrOnFlushCallbackObject**, i64 }
%class.GrOnFlushCallbackObject = type opaque
%class.GrHashMapWithCache = type { %class.SkTHashMap.197, i32, %class.GrRenderTask** }
%class.SkTHashMap.197 = type { %class.SkTHashTable.198 }
%class.SkTHashTable.198 = type { i32, i32, %class.SkAutoTArray.199 }
%class.SkAutoTArray.199 = type { %"class.std::__1::unique_ptr.200" }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %class.GrProxyProvider* }
%struct.GrVkDrawableInfo = type { %struct.VkCommandBuffer_T*, i32, %struct.VkRenderPass_T*, i32, %struct.VkRect2D*, %struct.VkImage_T* }
%struct.VkCommandBuffer_T = type opaque
%struct.VkRenderPass_T = type opaque
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkImage_T = type opaque
%class.sk_sp.264 = type { %class.GrRenderTargetProxy* }
%class.GrRenderTargetProxy = type <{ i32 (...)**, i8, i8, i8, i8, %struct.SkIRect, [4 x i8], %class.sk_sp.171, [4 x i8], [4 x i8], %class.GrSurfaceProxy }>
%class.sk_sp.265 = type { %class.SkGpuDevice* }
%class.SkGpuDevice = type { %class.SkBaseGpuDevice, %class.sk_sp.266, %"class.std::__1::unique_ptr.267", [8 x i8], %class.GrClipStack }
%class.sk_sp.266 = type { %class.GrRecordingContext* }
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %class.GrSurfaceDrawContext* }
%class.GrSurfaceDrawContext = type { %class.GrSurfaceFillContext.base, %class.SkSurfaceProps, i8, i8, i32, %class.SkGlyphRunListPainter }
%class.GrSurfaceFillContext.base = type <{ %class.GrSurfaceContext, %class.GrSurfaceProxyView, %class.sk_sp.271, i8 }>
%class.GrSurfaceContext = type { i32 (...)**, %class.GrRecordingContext*, %class.GrSurfaceProxyView, %class.GrColorInfo }
%class.GrColorInfo = type { %class.sk_sp.215, %class.sk_sp.270, i32, i32 }
%class.sk_sp.270 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%class.sk_sp.271 = type { %class.GrOpsTask* }
%class.SkGlyphRunListPainter = type { %class.SkSurfaceProps, %class.SkSurfaceProps, i32, i32, %class.SkStrikeForGPUCacheInterface*, %class.SkDrawableGlyphBuffer, %class.SkSourceGlyphBuffer }
%class.SkStrikeForGPUCacheInterface = type { i32 (...)** }
%class.SkDrawableGlyphBuffer = type { i64, i64, i64, %class.SkAutoTArray.272, %class.SkAutoTMalloc }
%class.SkAutoTArray.272 = type { %"class.std::__1::unique_ptr.273" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %class.SkGlyphVariant* }
%class.SkGlyphVariant = type { %union.anon.276 }
%union.anon.276 = type { %class.SkGlyph* }
%class.SkGlyph = type { i16, i16, i16, i16, i8*, %"struct.SkGlyph::PathData"*, float, float, i8, i8, %struct.SkPackedGlyphID }
%"struct.SkGlyph::PathData" = type <{ %"struct.SkGlyph::Intercept"*, %class.SkPath, i8, [7 x i8] }>
%"struct.SkGlyph::Intercept" = type { %"struct.SkGlyph::Intercept"*, [2 x float], [2 x float] }
%class.SkPath = type <{ %class.sk_sp.277, i32, %"struct.std::__1::atomic.16", %"struct.std::__1::atomic.16", i8, i8 }>
%class.sk_sp.277 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.278, %struct.SkRect, [4 x i8], %class.SkTDArray.279, %class.SkTDArray.280, %class.SkTDArray.281, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.278 = type { %"struct.std::__1::atomic" }
%class.SkTDArray.279 = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.280 = type { i8*, i32, i32 }
%class.SkTDArray.281 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.282 }
%class.SkTDArray.282 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.3", [3 x i8] }
%struct.SkPackedGlyphID = type { i32 }
%class.SkSourceGlyphBuffer = type { %class.SkZip, i64, i32, i32, %class.SkZip.286, %class.SkSTArray.291, %class.SkSTArray.294 }
%class.SkZip.286 = type { %"class.std::__1::tuple.287", i64 }
%"class.std::__1::tuple.287" = type { %"struct.std::__1::__tuple_impl.288" }
%"struct.std::__1::__tuple_impl.288" = type { %"class.std::__1::__tuple_leaf.289", %"class.std::__1::__tuple_leaf.290" }
%"class.std::__1::__tuple_leaf.289" = type { i16* }
%"class.std::__1::__tuple_leaf.290" = type { %struct.SkPoint* }
%class.SkSTArray.291 = type { %class.SkAlignedSTStorage.292, %class.SkTArray.293 }
%class.SkAlignedSTStorage.292 = type { [8 x i8] }
%class.SkTArray.293 = type { i16*, i64 }
%class.SkSTArray.294 = type { %class.SkAlignedSTStorage.295, %class.SkTArray.296 }
%class.SkAlignedSTStorage.295 = type { [32 x i8] }
%class.SkTArray.296 = type { %struct.SkPoint*, i64 }
%class.GrClipStack = type <{ %class.GrClip, [8 x i8], %class.GrTBlockList, %class.GrTBlockList.300, %class.GrTBlockList.302, %class.GrProxyProvider*, %struct.SkIRect, %class.SkMatrixProvider*, i8, [15 x i8] }>
%class.GrClip = type { i32 (...)** }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [256 x i8] }
%class.GrTBlockList.300 = type { %class.GrSBlockAllocator.301 }
%class.GrSBlockAllocator.301 = type { [192 x i8] }
%class.GrTBlockList.302 = type { %class.GrSBlockAllocator.303 }
%class.GrSBlockAllocator.303 = type { [128 x i8] }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.GrDirectContextPriv = type { %class.GrDirectContext* }
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.304", %"class.std::__1::unique_ptr.310", %class.sk_sp.316, %"class.std::__1::unique_ptr.317", %"class.std::__1::unique_ptr.323", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.329", %"class.std::__1::unique_ptr.342", %"class.std::__1::unique_ptr.348" }
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.316 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %class.GrResourceCache* }
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %class.GrResourceProvider* }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type <{ %"class.SkMessageBus<GrClientMappedBufferManager::BufferFinishedMessage, GrDirectContext::DirectContextID, false>::Inbox", %"class.std::__1::forward_list", i8, [7 x i8] }>
%"class.SkMessageBus<GrClientMappedBufferManager::BufferFinishedMessage, GrDirectContext::DirectContextID, false>::Inbox" = type <{ %class.SkTArray.332, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.332 = type { %"struct.GrClientMappedBufferManager::BufferFinishedMessage"*, i64 }
%"struct.GrClientMappedBufferManager::BufferFinishedMessage" = type <{ %class.sk_sp.333, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.sk_sp.333 = type { %class.GrGpuBuffer* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type opaque
%"class.std::__1::unique_ptr.342" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.GrBackendSurfaceMutableState = type <{ %union.anon.354, i32, i8, [3 x i8] }>
%union.anon.354 = type { %class.GrVkSharedImageInfo }
%class.GrVkSharedImageInfo = type { %"struct.std::__1::atomic.355", %"struct.std::__1::atomic.246" }
%"struct.std::__1::atomic.355" = type { %"struct.std::__1::__atomic_base.356" }
%"struct.std::__1::__atomic_base.356" = type { %"struct.std::__1::__cxx_atomic_impl.357" }
%"struct.std::__1::__cxx_atomic_impl.357" = type { %"struct.std::__1::__cxx_atomic_base_impl.358" }
%"struct.std::__1::__cxx_atomic_base_impl.358" = type { i32 }
%class.SkSurfaceCharacterization = type { %class.sk_sp, i64, %struct.SkImageInfo, %class.GrBackendFormat, i32, i32, i8, i8, i8, i8, i8, i8, %class.SkSurfaceProps }
%class.sk_sp.359 = type { %class.SkDeferredDisplayList* }
%class.SkDeferredDisplayList = type { %class.SkNVRefCnt.360, %class.SkSurfaceCharacterization, %"class.std::__1::map", %"class.GrRecordingContext::OwnedArenas", %class.SkTArray.86, %class.SkTArray.370, %class.sk_sp.264, %class.sk_sp.379 }
%class.SkNVRefCnt.360 = type { %"struct.std::__1::atomic" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.361", %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.367" = type { i64 }
%class.SkTArray.370 = type { %"struct.GrRecordingContext::ProgramData"*, i64 }
%"struct.GrRecordingContext::ProgramData" = type { %"class.std::__1::unique_ptr.371", %class.GrProgramInfo* }
%"class.std::__1::unique_ptr.371" = type { %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %class.GrProgramDesc* }
%class.GrProgramDesc = type <{ %class.SkSTArray.374, i32, [4 x i8] }>
%class.SkSTArray.374 = type { %class.SkAlignedSTStorage.375, %class.SkTArray.176 }
%class.SkAlignedSTStorage.375 = type { [132 x i8] }
%class.GrProgramInfo = type opaque
%class.sk_sp.379 = type { %"class.SkDeferredDisplayList::LazyProxyData"* }
%"class.SkDeferredDisplayList::LazyProxyData" = type { %class.SkRefCnt.base, %class.GrRenderTargetProxy* }

$_ZN25SkSurfaceCharacterization3setE5sk_spI24GrContextThreadSafeProxyEmRK11SkImageInfoRK15GrBackendFormat15GrSurfaceOriginiNS_11TextureableENS_9MipMappedENS_10UsesGLFBO0ENS_27VkRTSupportsInputAttachmentENS_27VulkanSecondaryCBCompatibleE11GrProtectedRK14SkSurfaceProps = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

@_ZTV26GrVkSecondaryCBDrawContext = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrVkSecondaryCBDrawContext*)* @_ZN26GrVkSecondaryCBDrawContextD2Ev to i8*), i8* bitcast (void (%class.GrVkSecondaryCBDrawContext*)* @_ZN26GrVkSecondaryCBDrawContextD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*)] }, align 8
@.ref.tmp = private constant %struct.GrFlushInfo zeroinitializer, align 8
@switch.table._ZN26GrVkSecondaryCBDrawContext4MakeEP18GrRecordingContextRK11SkImageInfoRK16GrVkDrawableInfoPK14SkSurfaceProps = private unnamed_addr constant [21 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 6, i32 8, i32 9, i32 10, i32 0, i32 0, i32 11, i32 15, i32 14, i32 16, i32 7, i32 13, i32 19, i32 17, i32 18, i32 20], align 4

@_ZN26GrVkSecondaryCBDrawContextC1E5sk_spI15SkBaseGpuDeviceEPK14SkSurfaceProps = hidden unnamed_addr alias void (%class.GrVkSecondaryCBDrawContext*, %class.sk_sp.218*, %class.SkSurfaceProps*), void (%class.GrVkSecondaryCBDrawContext*, %class.sk_sp.218*, %class.SkSurfaceProps*)* @_ZN26GrVkSecondaryCBDrawContextC2E5sk_spI15SkBaseGpuDeviceEPK14SkSurfaceProps
@_ZN26GrVkSecondaryCBDrawContextD1Ev = hidden unnamed_addr alias void (%class.GrVkSecondaryCBDrawContext*), void (%class.GrVkSecondaryCBDrawContext*)* @_ZN26GrVkSecondaryCBDrawContextD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26GrVkSecondaryCBDrawContext4MakeEP18GrRecordingContextRK11SkImageInfoRK16GrVkDrawableInfoPK14SkSurfaceProps(%class.sk_sp.217* noalias nocapture sret, %class.GrRecordingContext*, %struct.SkImageInfo* dereferenceable(24), %struct.GrVkDrawableInfo* dereferenceable(48), %class.SkSurfaceProps*) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.sk_sp.264, align 8
  %7 = alloca %class.sk_sp.265, align 8
  %8 = alloca %class.sk_sp.89, align 8
  %9 = alloca %class.sk_sp.215, align 8
  %10 = alloca %class.SkSurfaceProps, align 4
  %11 = icmp eq %class.GrRecordingContext* %1, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %5
  %13 = getelementptr inbounds %class.sk_sp.217, %class.sk_sp.217* %0, i64 0, i32 0
  store %class.GrVkSecondaryCBDrawContext* null, %class.GrVkSecondaryCBDrawContext** %13, align 8
  br label %135

14:                                               ; preds = %5
  %15 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %1, i64 0, i32 0, i32 0
  %16 = tail call i32 @_ZNK14GrContext_Base7backendEv(%class.GrContext_Base* %15) #7
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %class.sk_sp.217, %class.sk_sp.217* %0, i64 0, i32 0
  store %class.GrVkSecondaryCBDrawContext* null, %class.GrVkSecondaryCBDrawContext** %19, align 8
  br label %135

20:                                               ; preds = %14
  %21 = bitcast %class.sk_sp.264* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #7
  %22 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %23 = load %class.GrProxyProvider*, %class.GrProxyProvider** %22, align 8
  call void @_ZN15GrProxyProvider35wrapVulkanSecondaryCBAsRenderTargetERK11SkImageInfoRK16GrVkDrawableInfo(%class.sk_sp.264* nonnull sret %6, %class.GrProxyProvider* %23, %struct.SkImageInfo* dereferenceable(24) %2, %struct.GrVkDrawableInfo* dereferenceable(48) %3) #7
  %24 = getelementptr inbounds %class.sk_sp.264, %class.sk_sp.264* %6, i64 0, i32 0
  %25 = load %class.GrRenderTargetProxy*, %class.GrRenderTargetProxy** %24, align 8
  store %class.GrRenderTargetProxy* null, %class.GrRenderTargetProxy** %24, align 8
  %26 = icmp eq %class.GrRenderTargetProxy* %25, null
  br i1 %26, label %27, label %29

27:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #7
  %28 = getelementptr inbounds %class.sk_sp.217, %class.sk_sp.217* %0, i64 0, i32 0
  store %class.GrVkSecondaryCBDrawContext* null, %class.GrVkSecondaryCBDrawContext** %28, align 8
  br label %135

29:                                               ; preds = %20
  %30 = bitcast %class.GrRenderTargetProxy* %25 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr i8, i8* %31, i64 -24
  %33 = bitcast i8* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %class.GrRenderTargetProxy* %25 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 %34
  %37 = ptrtoint i8* %36 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #7
  %38 = icmp eq i8* %36, null
  br i1 %38, label %133, label %39

39:                                               ; preds = %29
  %40 = bitcast %class.sk_sp.265* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #7
  %41 = getelementptr inbounds %class.sk_sp.265, %class.sk_sp.265* %7, i64 0, i32 0
  store %class.SkGpuDevice* inttoptr (i64 -6148914691236517206 to %class.SkGpuDevice*), %class.SkGpuDevice** %41, align 8
  %42 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = icmp ult i32 %43, 21
  br i1 %44, label %46, label %45

45:                                               ; preds = %39
  call void @llvm.trap() #7
  unreachable

46:                                               ; preds = %39
  %47 = sext i32 %43 to i64
  %48 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._ZN26GrVkSecondaryCBDrawContext4MakeEP18GrRecordingContextRK11SkImageInfoRK16GrVkDrawableInfoPK14SkSurfaceProps, i64 0, i64 %47
  %49 = load i32, i32* %48, align 4
  %50 = bitcast %class.sk_sp.89* %8 to i64*
  store i64 %37, i64* %50, align 8
  %51 = getelementptr inbounds %class.sk_sp.215, %class.sk_sp.215* %9, i64 0, i32 0
  %52 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 0, i32 0
  %53 = load %class.SkColorSpace*, %class.SkColorSpace** %52, align 8, !noalias !2
  %54 = icmp eq %class.SkColorSpace* %53, null
  br i1 %54, label %58, label %55

55:                                               ; preds = %46
  %56 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 1 monotonic, !noalias !2
  br label %58

58:                                               ; preds = %46, %55
  store %class.SkColorSpace* %53, %class.SkColorSpace** %51, align 8, !alias.scope !2
  %59 = bitcast %class.SkSurfaceProps* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #7
  %60 = icmp eq %class.SkSurfaceProps* %4, null
  br i1 %60, label %62, label %61

61:                                               ; preds = %58
  call void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps* nonnull %10, %class.SkSurfaceProps* nonnull dereferenceable(8) %4) #7
  br label %63

62:                                               ; preds = %58
  call void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps* nonnull %10) #7
  br label %63

63:                                               ; preds = %61, %62
  call void @_ZN11SkGpuDevice4MakeEP18GrRecordingContext11GrColorType5sk_spI14GrSurfaceProxyES3_I12SkColorSpaceE15GrSurfaceOriginRK14SkSurfacePropsN15SkBaseGpuDevice12InitContentsE(%class.sk_sp.265* nonnull sret %7, %class.GrRecordingContext* nonnull %1, i32 %49, %class.sk_sp.89* nonnull %8, %class.sk_sp.215* nonnull %9, i32 0, %class.SkSurfaceProps* nonnull dereferenceable(8) %10, i32 1) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #7
  %64 = load %class.SkColorSpace*, %class.SkColorSpace** %51, align 8
  %65 = icmp eq %class.SkColorSpace* %64, null
  br i1 %65, label %72, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = atomicrmw add i32* %67, i32 -1 acq_rel
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = bitcast %class.SkColorSpace* %64 to i8*
  call void @_ZdlPv(i8* %71) #8
  br label %72

72:                                               ; preds = %63, %66, %70
  %73 = getelementptr inbounds %class.sk_sp.89, %class.sk_sp.89* %8, i64 0, i32 0
  %74 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %73, align 8
  %75 = icmp eq %class.GrSurfaceProxy* %74, null
  br i1 %75, label %88, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %74, i64 0, i32 1
  %78 = getelementptr inbounds %class.SkNVRefCnt.90, %class.SkNVRefCnt.90* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = atomicrmw add i32* %78, i32 -1 acq_rel
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %81, label %88

81:                                               ; preds = %76
  %82 = getelementptr inbounds %class.SkNVRefCnt.90, %class.SkNVRefCnt.90* %77, i64 -2
  %83 = bitcast %class.SkNVRefCnt.90* %82 to %class.GrSurfaceProxy*
  %84 = bitcast %class.SkNVRefCnt.90* %82 to void (%class.GrSurfaceProxy*)***
  %85 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %84, align 8
  %86 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %85, i64 1
  %87 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %86, align 8
  call void %87(%class.GrSurfaceProxy* nonnull %83) #7
  br label %88

88:                                               ; preds = %72, %76, %81
  %89 = load %class.SkGpuDevice*, %class.SkGpuDevice** %41, align 8
  %90 = icmp eq %class.SkGpuDevice* %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %88
  %92 = getelementptr inbounds %class.sk_sp.217, %class.sk_sp.217* %0, i64 0, i32 0
  store %class.GrVkSecondaryCBDrawContext* null, %class.GrVkSecondaryCBDrawContext** %92, align 8
  br label %132

93:                                               ; preds = %88
  %94 = call i8* @_Znwm(i64 40) #8
  store %class.SkGpuDevice* null, %class.SkGpuDevice** %41, align 8
  %95 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %89, i64 0, i32 0
  %96 = getelementptr inbounds i8, i8* %94, i64 8
  %97 = bitcast i8* %96 to i32*
  store i32 1, i32* %97, align 4
  %98 = bitcast i8* %94 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV26GrVkSecondaryCBDrawContext, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %98, align 8
  %99 = getelementptr inbounds i8, i8* %94, i64 16
  %100 = bitcast i8* %99 to %class.SkBaseGpuDevice**
  %101 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = atomicrmw add i32* %101, i32 1 monotonic
  store %class.SkBaseGpuDevice* %95, %class.SkBaseGpuDevice** %100, align 8
  %103 = getelementptr inbounds i8, i8* %94, i64 24
  %104 = bitcast i8* %103 to i64*
  store i64 0, i64* %104, align 8
  %105 = getelementptr inbounds i8, i8* %94, i64 32
  %106 = bitcast i8* %105 to %class.SkSurfaceProps*
  br i1 %60, label %108, label %107

107:                                              ; preds = %93
  call void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps* %106, %class.SkSurfaceProps* nonnull dereferenceable(8) %4) #7
  br label %109

108:                                              ; preds = %93
  call void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps* %106) #7
  br label %109

109:                                              ; preds = %107, %108
  %110 = bitcast %class.sk_sp.217* %0 to i8**
  store i8* %94, i8** %110, align 8
  %111 = atomicrmw add i32* %101, i32 -1 acq_rel
  %112 = icmp eq i32 %111, 1
  br i1 %112, label %113, label %119

113:                                              ; preds = %109
  %114 = bitcast %class.SkGpuDevice* %89 to %class.SkRefCntBase*
  %115 = bitcast %class.SkGpuDevice* %89 to void (%class.SkRefCntBase*)***
  %116 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %115, align 8
  %117 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %116, i64 2
  %118 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %117, align 8
  call void %118(%class.SkRefCntBase* nonnull %114) #7
  br label %119

119:                                              ; preds = %113, %109
  %120 = load %class.SkGpuDevice*, %class.SkGpuDevice** %41, align 8
  %121 = icmp eq %class.SkGpuDevice* %120, null
  br i1 %121, label %132, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = atomicrmw add i32* %123, i32 -1 acq_rel
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %126, label %132

126:                                              ; preds = %122
  %127 = bitcast %class.SkGpuDevice* %120 to %class.SkRefCntBase*
  %128 = bitcast %class.SkGpuDevice* %120 to void (%class.SkRefCntBase*)***
  %129 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %128, align 8
  %130 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %129, i64 2
  %131 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %130, align 8
  call void %131(%class.SkRefCntBase* nonnull %127) #7
  br label %132

132:                                              ; preds = %126, %122, %119, %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #7
  br label %135

133:                                              ; preds = %29
  %134 = getelementptr inbounds %class.sk_sp.217, %class.sk_sp.217* %0, i64 0, i32 0
  store %class.GrVkSecondaryCBDrawContext* null, %class.GrVkSecondaryCBDrawContext** %134, align 8
  br label %135

135:                                              ; preds = %133, %132, %27, %18, %12
  ret void
}

declare i32 @_ZNK14GrContext_Base7backendEv(%class.GrContext_Base*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN15GrProxyProvider35wrapVulkanSecondaryCBAsRenderTargetERK11SkImageInfoRK16GrVkDrawableInfo(%class.sk_sp.264* sret, %class.GrProxyProvider*, %struct.SkImageInfo* dereferenceable(24), %struct.GrVkDrawableInfo* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN11SkGpuDevice4MakeEP18GrRecordingContext11GrColorType5sk_spI14GrSurfaceProxyES3_I12SkColorSpaceE15GrSurfaceOriginRK14SkSurfacePropsN15SkBaseGpuDevice12InitContentsE(%class.sk_sp.265* sret, %class.GrRecordingContext*, i32, %class.sk_sp.89*, %class.sk_sp.215*, i32, %class.SkSurfaceProps* dereferenceable(8), i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26GrVkSecondaryCBDrawContextC2E5sk_spI15SkBaseGpuDeviceEPK14SkSurfaceProps(%class.GrVkSecondaryCBDrawContext*, %class.sk_sp.218* nocapture readonly, %class.SkSurfaceProps*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrVkSecondaryCBDrawContext, %class.GrVkSecondaryCBDrawContext* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %4, align 4
  %5 = getelementptr inbounds %class.GrVkSecondaryCBDrawContext, %class.GrVkSecondaryCBDrawContext* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV26GrVkSecondaryCBDrawContext, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.GrVkSecondaryCBDrawContext, %class.GrVkSecondaryCBDrawContext* %0, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %class.sk_sp.218, %class.sk_sp.218* %1, i64 0, i32 0
  %8 = load %class.SkBaseGpuDevice*, %class.SkBaseGpuDevice** %7, align 8
  %9 = icmp eq %class.SkBaseGpuDevice* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.SkBaseGpuDevice, %class.SkBaseGpuDevice* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  br label %13

13:                                               ; preds = %3, %10
  store %class.SkBaseGpuDevice* %8, %class.SkBaseGpuDevice** %6, align 8
  %14 = getelementptr inbounds %class.GrVkSecondaryCBDrawContext, %class.GrVkSecondaryCBDrawContext* %0, i64 0, i32 2
  %15 = bitcast %"class.std::__1::unique_ptr.219"* %14 to i64*
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %class.GrVkSecondaryCBDrawContext, %class.GrVkSecondaryCBDrawContext* %0, i64 0, i32 3
  %17 = icmp eq %class.SkSurfaceProps* %2, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %13
  tail call void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps* %16, %class.SkSurfaceProps* nonnull dereferenceable(8) %2) #7
  br label %20

19:                                               ; preds = %13
  tail call void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps* %16) #7
  br label %20

20:                                               ; preds = %18, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26GrVkSecondaryCBDrawContextD2Ev(%class.GrVkSecondaryCBDrawContext* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkSecondaryCBDrawContext, %class.GrVkSecondaryCBDrawContext* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV26GrVkSecondaryCBDrawContext, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrVkSecondaryCBDrawContext, %class.GrVkSecondaryCBDrawContext* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.SkCanvas*, %class.SkCanvas** %3, align 8
  store %class.SkCanvas* null, %class.SkCanvas** %3, align 8
  %5 = icmp eq %class.SkCanvas* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.SkCanvas* %4 to void (%class.SkCanvas*)***
  %8 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %8, i64 1
  %10 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %9, align 8
  tail call void %10(%class.SkCanvas* nonnull %4) #7
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %class.GrVkSecondaryCBDrawContext, %class.GrVkSecondaryCBDrawContext* %0, i64 0, i32 1, i32 0
  %13 = load %class.SkBaseGpuDevice*, %class.SkBaseGpuDevice** %12, align 8
  %14 = icmp eq %class.SkBaseGpuDevice* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkBaseGpuDevice, %class.SkBaseGpuDevice* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast %class.SkBaseGpuDevice* %13 to %class.SkRefCntBase*
  %21 = bitcast %class.SkBaseGpuDevice* %13 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  tail call void %24(%class.SkRefCntBase* nonnull %20) #7
  br label %25

25:                                               ; preds = %11, %15, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26GrVkSecondaryCBDrawContextD0Ev(%class.GrVkSecondaryCBDrawContext*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkSecondaryCBDrawContext, %class.GrVkSecondaryCBDrawContext* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV26GrVkSecondaryCBDrawContext, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrVkSecondaryCBDrawContext, %class.GrVkSecondaryCBDrawContext* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.SkCanvas*, %class.SkCanvas** %3, align 8
  store %class.SkCanvas* null, %class.SkCanvas** %3, align 8
  %5 = icmp eq %class.SkCanvas* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.SkCanvas* %4 to void (%class.SkCanvas*)***
  %8 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %8, i64 1
  %10 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %9, align 8
  tail call void %10(%class.SkCanvas* nonnull %4) #7
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %class.GrVkSecondaryCBDrawContext, %class.GrVkSecondaryCBDrawContext* %0, i64 0, i32 1, i32 0
  %13 = load %class.SkBaseGpuDevice*, %class.SkBaseGpuDevice** %12, align 8
  %14 = icmp eq %class.SkBaseGpuDevice* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkBaseGpuDevice, %class.SkBaseGpuDevice* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast %class.SkBaseGpuDevice* %13 to %class.SkRefCntBase*
  %21 = bitcast %class.SkBaseGpuDevice* %13 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  tail call void %24(%class.SkRefCntBase* nonnull %20) #7
  br label %25

25:                                               ; preds = %11, %15, %19
  %26 = bitcast %class.GrVkSecondaryCBDrawContext* %0 to i8*
  tail call void @_ZdlPv(i8* %26) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkCanvas* @_ZN26GrVkSecondaryCBDrawContext9getCanvasEv(%class.GrVkSecondaryCBDrawContext* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp.223, align 8
  %3 = getelementptr inbounds %class.GrVkSecondaryCBDrawContext, %class.GrVkSecondaryCBDrawContext* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.219"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %class.SkCanvas*, %class.SkCanvas** %4, align 8
  %6 = icmp eq %class.SkCanvas* %5, null
  br i1 %6, label %7, label %44

7:                                                ; preds = %1
  %8 = bitcast %class.sk_sp.223* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8)
  %9 = tail call i8* @_Znwm(i64 3232) #8
  %10 = bitcast i8* %9 to %class.SkCanvas*
  %11 = getelementptr inbounds %class.sk_sp.223, %class.sk_sp.223* %2, i64 0, i32 0
  %12 = getelementptr inbounds %class.GrVkSecondaryCBDrawContext, %class.GrVkSecondaryCBDrawContext* %0, i64 0, i32 1, i32 0
  %13 = load %class.SkBaseGpuDevice*, %class.SkBaseGpuDevice** %12, align 8
  %14 = icmp eq %class.SkBaseGpuDevice* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %class.SkBaseGpuDevice, %class.SkBaseGpuDevice* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic
  br label %18

18:                                               ; preds = %15, %7
  %19 = getelementptr inbounds %class.SkBaseGpuDevice, %class.SkBaseGpuDevice* %13, i64 0, i32 0
  store %class.SkBaseDevice* %19, %class.SkBaseDevice** %11, align 8
  call void @_ZN8SkCanvasC1E5sk_spI12SkBaseDeviceE(%class.SkCanvas* nonnull %10, %class.sk_sp.223* nonnull %2) #7
  %20 = load %class.SkBaseDevice*, %class.SkBaseDevice** %11, align 8
  %21 = icmp eq %class.SkBaseDevice* %20, null
  br i1 %21, label %32, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %20, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 -1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %32

26:                                               ; preds = %22
  %27 = bitcast %class.SkBaseDevice* %20 to %class.SkRefCntBase*
  %28 = bitcast %class.SkBaseDevice* %20 to void (%class.SkRefCntBase*)***
  %29 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %28, align 8
  %30 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %29, i64 2
  %31 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %30, align 8
  call void %31(%class.SkRefCntBase* nonnull %27) #7
  br label %32

32:                                               ; preds = %18, %22, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8)
  %33 = ptrtoint i8* %9 to i64
  %34 = load %class.SkCanvas*, %class.SkCanvas** %4, align 8
  %35 = bitcast %"class.std::__1::unique_ptr.219"* %3 to i64*
  store i64 %33, i64* %35, align 8
  %36 = icmp eq %class.SkCanvas* %34, null
  %37 = bitcast i8* %9 to %class.SkCanvas*
  br i1 %36, label %44, label %38

38:                                               ; preds = %32
  %39 = bitcast %class.SkCanvas* %34 to void (%class.SkCanvas*)***
  %40 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %39, align 8
  %41 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %40, i64 1
  %42 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %41, align 8
  call void %42(%class.SkCanvas* nonnull %34) #7
  %43 = load %class.SkCanvas*, %class.SkCanvas** %4, align 8
  br label %44

44:                                               ; preds = %1, %32, %38
  %45 = phi %class.SkCanvas* [ %5, %1 ], [ %37, %32 ], [ %43, %38 ]
  ret %class.SkCanvas* %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26GrVkSecondaryCBDrawContext5flushEv(%class.GrVkSecondaryCBDrawContext* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.GrSurfaceProxyView, align 8
  %3 = alloca %class.GrSurfaceProxy*, align 8
  %4 = alloca %class.GrDirectContextPriv, align 8
  %5 = getelementptr inbounds %class.GrVkSecondaryCBDrawContext, %class.GrVkSecondaryCBDrawContext* %0, i64 0, i32 1, i32 0
  %6 = load %class.SkBaseGpuDevice*, %class.SkBaseGpuDevice** %5, align 8
  %7 = getelementptr inbounds %class.SkBaseGpuDevice, %class.SkBaseGpuDevice* %6, i64 0, i32 0
  %8 = bitcast %class.SkBaseGpuDevice* %6 to %class.GrRecordingContext* (%class.SkBaseDevice*)***
  %9 = load %class.GrRecordingContext* (%class.SkBaseDevice*)**, %class.GrRecordingContext* (%class.SkBaseDevice*)*** %8, align 8
  %10 = getelementptr inbounds %class.GrRecordingContext* (%class.SkBaseDevice*)*, %class.GrRecordingContext* (%class.SkBaseDevice*)** %9, i64 8
  %11 = load %class.GrRecordingContext* (%class.SkBaseDevice*)*, %class.GrRecordingContext* (%class.SkBaseDevice*)** %10, align 8
  %12 = tail call %class.GrRecordingContext* %11(%class.SkBaseDevice* %7) #7
  %13 = icmp eq %class.GrRecordingContext* %12, null
  br i1 %13, label %73, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %12, i64 0, i32 0, i32 0
  %16 = bitcast %class.GrRecordingContext* %12 to %class.GrDirectContext* (%class.GrContext_Base*)***
  %17 = load %class.GrDirectContext* (%class.GrContext_Base*)**, %class.GrDirectContext* (%class.GrContext_Base*)*** %16, align 8
  %18 = getelementptr inbounds %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %17, i64 3
  %19 = load %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %18, align 8
  %20 = tail call %class.GrDirectContext* %19(%class.GrContext_Base* nonnull %15) #7
  %21 = icmp eq %class.GrDirectContext* %20, null
  br i1 %21, label %73, label %22

22:                                               ; preds = %14
  %23 = bitcast %class.GrDirectContextPriv* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #7
  %24 = getelementptr inbounds %class.GrDirectContextPriv, %class.GrDirectContextPriv* %4, i64 0, i32 0
  store %class.GrDirectContext* %20, %class.GrDirectContext** %24, align 8, !alias.scope !7
  %25 = load %class.SkBaseGpuDevice*, %class.SkBaseGpuDevice** %5, align 8
  %26 = bitcast %class.GrSurfaceProxyView* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #7
  %27 = bitcast %class.SkBaseGpuDevice* %25 to void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)***
  %28 = load void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)**, void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)*** %27, align 8
  %29 = getelementptr inbounds void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)*, void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)** %28, i64 61
  %30 = load void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)*, void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)** %29, align 8
  call void %30(%class.GrSurfaceProxyView* nonnull sret %2, %class.SkBaseGpuDevice* %25) #7
  %31 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 0, i32 0
  %32 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %31, align 8
  %33 = icmp eq %class.GrSurfaceProxy* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #7
  br label %66

35:                                               ; preds = %22
  %36 = bitcast %class.GrSurfaceProxy* %32 to %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)***
  %37 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)**, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*** %36, align 8
  %38 = getelementptr inbounds %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %37, i64 5
  %39 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %38, align 8
  %40 = call %class.GrRenderTargetProxy* %39(%class.GrSurfaceProxy* nonnull %32) #7
  %41 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %31, align 8
  %42 = icmp eq %class.GrSurfaceProxy* %41, null
  br i1 %42, label %55, label %43

43:                                               ; preds = %35
  %44 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %41, i64 0, i32 1
  %45 = getelementptr inbounds %class.SkNVRefCnt.90, %class.SkNVRefCnt.90* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 -1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %55

48:                                               ; preds = %43
  %49 = getelementptr inbounds %class.SkNVRefCnt.90, %class.SkNVRefCnt.90* %44, i64 -2
  %50 = bitcast %class.SkNVRefCnt.90* %49 to %class.GrSurfaceProxy*
  %51 = bitcast %class.SkNVRefCnt.90* %49 to void (%class.GrSurfaceProxy*)***
  %52 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %51, align 8
  %53 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %52, i64 1
  %54 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %53, align 8
  call void %54(%class.GrSurfaceProxy* nonnull %50) #7
  br label %55

55:                                               ; preds = %35, %43, %48
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #7
  %56 = icmp eq %class.GrRenderTargetProxy* %40, null
  br i1 %56, label %66, label %57

57:                                               ; preds = %55
  %58 = bitcast %class.GrRenderTargetProxy* %40 to i8**
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr i8, i8* %59, i64 -24
  %61 = bitcast i8* %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %class.GrRenderTargetProxy* %40 to i8*
  %64 = getelementptr inbounds i8, i8* %63, i64 %62
  %65 = bitcast i8* %64 to %class.GrSurfaceProxy*
  br label %66

66:                                               ; preds = %34, %57, %55
  %67 = phi %class.GrSurfaceProxy* [ %65, %57 ], [ null, %55 ], [ null, %34 ]
  %68 = bitcast %class.GrSurfaceProxy** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68)
  store %class.GrSurfaceProxy* %67, %class.GrSurfaceProxy** %3, align 8
  %69 = icmp ne %class.GrSurfaceProxy* %67, null
  %70 = zext i1 %69 to i64
  %71 = call zeroext i1 @_ZN19GrDirectContextPriv13flushSurfacesE6SkSpanIP14GrSurfaceProxyEN9SkSurface20BackendSurfaceAccessERK11GrFlushInfoPK28GrBackendSurfaceMutableState(%class.GrDirectContextPriv* nonnull %4, %class.GrSurfaceProxy** nonnull %3, i64 %70, i32 0, %struct.GrFlushInfo* nonnull dereferenceable(48) @.ref.tmp, %class.GrBackendSurfaceMutableState* null) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #7
  %72 = call zeroext i1 @_ZN15GrDirectContext6submitEb(%class.GrDirectContext* nonnull %20, i1 zeroext false) #7
  br label %73

73:                                               ; preds = %1, %14, %66
  ret void
}

declare zeroext i1 @_ZN15GrDirectContext6submitEb(%class.GrDirectContext*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN26GrVkSecondaryCBDrawContext4waitEiPK18GrBackendSemaphoreb(%class.GrVkSecondaryCBDrawContext* nocapture readonly, i32, %class.GrBackendSemaphore*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.GrVkSecondaryCBDrawContext, %class.GrVkSecondaryCBDrawContext* %0, i64 0, i32 1, i32 0
  %6 = load %class.SkBaseGpuDevice*, %class.SkBaseGpuDevice** %5, align 8
  %7 = bitcast %class.SkBaseGpuDevice* %6 to i1 (%class.SkBaseGpuDevice*, i32, %class.GrBackendSemaphore*, i1)***
  %8 = load i1 (%class.SkBaseGpuDevice*, i32, %class.GrBackendSemaphore*, i1)**, i1 (%class.SkBaseGpuDevice*, i32, %class.GrBackendSemaphore*, i1)*** %7, align 8
  %9 = getelementptr inbounds i1 (%class.SkBaseGpuDevice*, i32, %class.GrBackendSemaphore*, i1)*, i1 (%class.SkBaseGpuDevice*, i32, %class.GrBackendSemaphore*, i1)** %8, i64 62
  %10 = load i1 (%class.SkBaseGpuDevice*, i32, %class.GrBackendSemaphore*, i1)*, i1 (%class.SkBaseGpuDevice*, i32, %class.GrBackendSemaphore*, i1)** %9, align 8
  %11 = tail call zeroext i1 %10(%class.SkBaseGpuDevice* %6, i32 %1, %class.GrBackendSemaphore* %2, i1 zeroext %3) #7
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26GrVkSecondaryCBDrawContext16releaseResourcesEv(%class.GrVkSecondaryCBDrawContext* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkSecondaryCBDrawContext, %class.GrVkSecondaryCBDrawContext* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %class.SkCanvas*, %class.SkCanvas** %2, align 8
  store %class.SkCanvas* null, %class.SkCanvas** %2, align 8
  %4 = icmp eq %class.SkCanvas* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %class.SkCanvas* %3 to void (%class.SkCanvas*)***
  %7 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %6, align 8
  %8 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %7, i64 1
  %9 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %8, align 8
  tail call void %9(%class.SkCanvas* nonnull %3) #7
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %class.GrVkSecondaryCBDrawContext, %class.GrVkSecondaryCBDrawContext* %0, i64 0, i32 1, i32 0
  %12 = load %class.SkBaseGpuDevice*, %class.SkBaseGpuDevice** %11, align 8
  store %class.SkBaseGpuDevice* null, %class.SkBaseGpuDevice** %11, align 8
  %13 = icmp eq %class.SkBaseGpuDevice* %12, null
  br i1 %13, label %24, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %class.SkBaseGpuDevice, %class.SkBaseGpuDevice* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 -1 acq_rel
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %24

18:                                               ; preds = %14
  %19 = bitcast %class.SkBaseGpuDevice* %12 to %class.SkRefCntBase*
  %20 = bitcast %class.SkBaseGpuDevice* %12 to void (%class.SkRefCntBase*)***
  %21 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %20, align 8
  %22 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %21, i64 2
  %23 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, align 8
  tail call void %23(%class.SkRefCntBase* nonnull %19) #7
  br label %24

24:                                               ; preds = %10, %14, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK26GrVkSecondaryCBDrawContext12characterizeEP25SkSurfaceCharacterization(%class.GrVkSecondaryCBDrawContext*, %class.SkSurfaceCharacterization*) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkImageInfo, align 8
  %4 = alloca %class.GrSurfaceProxyView, align 8
  %5 = alloca %class.GrBackendFormat, align 8
  %6 = alloca %class.sk_sp, align 8
  %7 = getelementptr inbounds %class.GrVkSecondaryCBDrawContext, %class.GrVkSecondaryCBDrawContext* %0, i64 0, i32 1, i32 0
  %8 = load %class.SkBaseGpuDevice*, %class.SkBaseGpuDevice** %7, align 8
  %9 = getelementptr inbounds %class.SkBaseGpuDevice, %class.SkBaseGpuDevice* %8, i64 0, i32 0
  %10 = bitcast %class.SkBaseGpuDevice* %8 to %class.GrRecordingContext* (%class.SkBaseDevice*)***
  %11 = load %class.GrRecordingContext* (%class.SkBaseDevice*)**, %class.GrRecordingContext* (%class.SkBaseDevice*)*** %10, align 8
  %12 = getelementptr inbounds %class.GrRecordingContext* (%class.SkBaseDevice*)*, %class.GrRecordingContext* (%class.SkBaseDevice*)** %11, i64 8
  %13 = load %class.GrRecordingContext* (%class.SkBaseDevice*)*, %class.GrRecordingContext* (%class.SkBaseDevice*)** %12, align 8
  %14 = tail call %class.GrRecordingContext* %13(%class.SkBaseDevice* %9) #7
  %15 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %14, i64 0, i32 0, i32 0
  %16 = bitcast %class.GrRecordingContext* %14 to %class.GrDirectContext* (%class.GrContext_Base*)***
  %17 = load %class.GrDirectContext* (%class.GrContext_Base*)**, %class.GrDirectContext* (%class.GrContext_Base*)*** %16, align 8
  %18 = getelementptr inbounds %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %17, i64 3
  %19 = load %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %18, align 8
  %20 = tail call %class.GrDirectContext* %19(%class.GrContext_Base* %15) #7
  %21 = icmp eq %class.GrDirectContext* %20, null
  br i1 %21, label %147, label %22

22:                                               ; preds = %2
  %23 = bitcast %struct.SkImageInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #7
  %24 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 1
  %26 = bitcast %struct.SkImageInfo* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false)
  %27 = load %class.SkBaseGpuDevice*, %class.SkBaseGpuDevice** %7, align 8
  %28 = getelementptr inbounds %class.SkBaseGpuDevice, %class.SkBaseGpuDevice* %27, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %class.SkColorSpace*, %class.SkColorSpace** %28, align 8
  %30 = icmp eq %class.SkColorSpace* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %22
  %32 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 1 monotonic
  br label %34

34:                                               ; preds = %22, %31
  store %class.SkColorSpace* %29, %class.SkColorSpace** %24, align 8
  %35 = getelementptr inbounds %class.SkBaseGpuDevice, %class.SkBaseGpuDevice* %27, i64 0, i32 0, i32 3, i32 0, i32 1
  %36 = bitcast i32* %35 to <2 x i64>*
  %37 = load <2 x i64>, <2 x i64>* %36, align 8
  %38 = bitcast i32* %25 to <2 x i64>*
  store <2 x i64> %37, <2 x i64>* %38, align 8
  %39 = extractelement <2 x i64> %37, i32 0
  %40 = trunc i64 %39 to i32
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %136, label %42

42:                                               ; preds = %34
  %43 = bitcast %class.GrSurfaceProxyView* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #7
  %44 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %4, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %4, i64 0, i32 1
  %46 = bitcast %class.GrSurfaceProxyView* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false)
  %47 = load %class.SkBaseGpuDevice*, %class.SkBaseGpuDevice** %7, align 8
  %48 = bitcast %class.SkBaseGpuDevice* %47 to void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)***
  %49 = load void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)**, void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)*** %48, align 8
  %50 = getelementptr inbounds void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)*, void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)** %49, i64 61
  %51 = load void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)*, void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)** %50, align 8
  call void %51(%class.GrSurfaceProxyView* nonnull sret %4, %class.SkBaseGpuDevice* %47) #7
  %52 = call i64 @_ZNK15GrDirectContext21getResourceCacheLimitEv(%class.GrDirectContext* nonnull %20) #7
  %53 = bitcast %class.GrBackendFormat* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %53) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 72, i1 false)
  %54 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %44, align 8
  %55 = icmp eq %class.GrSurfaceProxy* %54, null
  br i1 %55, label %62, label %56

56:                                               ; preds = %42
  %57 = bitcast %class.GrSurfaceProxy* %54 to %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)***
  %58 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)**, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*** %57, align 8
  %59 = getelementptr inbounds %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %58, i64 5
  %60 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %59, align 8
  %61 = call %class.GrRenderTargetProxy* %60(%class.GrSurfaceProxy* nonnull %54) #7
  br label %62

62:                                               ; preds = %42, %56
  %63 = phi %class.GrRenderTargetProxy* [ %61, %56 ], [ null, %42 ]
  %64 = bitcast %class.GrRenderTargetProxy* %63 to i8**
  %65 = load i8*, i8** %64, align 8
  %66 = getelementptr i8, i8* %65, i64 -24
  %67 = bitcast i8* %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %class.GrRenderTargetProxy* %63 to i8*
  %70 = getelementptr inbounds i8, i8* %69, i64 %68
  %71 = getelementptr inbounds i8, i8* %70, i64 32
  %72 = bitcast i8* %71 to %class.GrBackendFormat*
  call void @_ZN15GrBackendFormatC1ERKS_(%class.GrBackendFormat* nonnull %5, %class.GrBackendFormat* dereferenceable(72) %72) #7
  %73 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %44, align 8
  %74 = icmp eq %class.GrSurfaceProxy* %73, null
  br i1 %74, label %75, label %78

75:                                               ; preds = %62
  %76 = load i8, i8* inttoptr (i64 8 to i8*), align 8
  %77 = sext i8 %76 to i32
  br label %95

78:                                               ; preds = %62
  %79 = bitcast %class.GrSurfaceProxy* %73 to %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)***
  %80 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)**, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*** %79, align 8
  %81 = getelementptr inbounds %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %80, i64 5
  %82 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %81, align 8
  %83 = call %class.GrRenderTargetProxy* %82(%class.GrSurfaceProxy* nonnull %73) #7
  %84 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %44, align 8
  %85 = getelementptr inbounds %class.GrRenderTargetProxy, %class.GrRenderTargetProxy* %83, i64 0, i32 1
  %86 = load i8, i8* %85, align 8
  %87 = sext i8 %86 to i32
  %88 = icmp eq %class.GrSurfaceProxy* %84, null
  br i1 %88, label %95, label %89

89:                                               ; preds = %78
  %90 = bitcast %class.GrSurfaceProxy* %84 to %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)***
  %91 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)**, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*** %90, align 8
  %92 = getelementptr inbounds %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %91, i64 5
  %93 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %92, align 8
  %94 = call %class.GrRenderTargetProxy* %93(%class.GrSurfaceProxy* nonnull %84) #7
  br label %95

95:                                               ; preds = %75, %78, %89
  %96 = phi i32 [ %87, %89 ], [ %87, %78 ], [ %77, %75 ]
  %97 = phi %class.GrRenderTargetProxy* [ %94, %89 ], [ null, %78 ], [ null, %75 ]
  %98 = bitcast %class.GrRenderTargetProxy* %97 to i8**
  %99 = load i8*, i8** %98, align 8
  %100 = getelementptr i8, i8* %99, i64 -24
  %101 = bitcast i8* %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = bitcast %class.GrRenderTargetProxy* %97 to i8*
  %104 = getelementptr inbounds i8, i8* %103, i64 %102
  %105 = getelementptr inbounds i8, i8* %104, i64 163
  %106 = load i8, i8* %105, align 1, !range !10
  %107 = icmp ne i8 %106, 0
  call void @_ZN15GrDirectContext15threadSafeProxyEv(%class.sk_sp* nonnull sret %6, %class.GrDirectContext* nonnull %20) #7
  %108 = load i32, i32* %45, align 8
  %109 = getelementptr inbounds %class.GrVkSecondaryCBDrawContext, %class.GrVkSecondaryCBDrawContext* %0, i64 0, i32 3
  call void @_ZN25SkSurfaceCharacterization3setE5sk_spI24GrContextThreadSafeProxyEmRK11SkImageInfoRK15GrBackendFormat15GrSurfaceOriginiNS_11TextureableENS_9MipMappedENS_10UsesGLFBO0ENS_27VkRTSupportsInputAttachmentENS_27VulkanSecondaryCBCompatibleE11GrProtectedRK14SkSurfaceProps(%class.SkSurfaceCharacterization* %1, %class.sk_sp* nonnull %6, i64 %52, %struct.SkImageInfo* nonnull dereferenceable(24) %3, %class.GrBackendFormat* nonnull dereferenceable(72) %5, i32 %108, i32 %96, i1 zeroext false, i1 zeroext false, i1 zeroext false, i1 zeroext false, i1 zeroext true, i1 zeroext %107, %class.SkSurfaceProps* dereferenceable(8) %109)
  %110 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %111 = load %class.GrContextThreadSafeProxy*, %class.GrContextThreadSafeProxy** %110, align 8
  %112 = icmp eq %class.GrContextThreadSafeProxy* %111, null
  br i1 %112, label %119, label %113

113:                                              ; preds = %95
  %114 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = atomicrmw add i32* %114, i32 -1 acq_rel
  %116 = icmp eq i32 %115, 1
  br i1 %116, label %117, label %119

117:                                              ; preds = %113
  call void @_ZN24GrContextThreadSafeProxyD1Ev(%class.GrContextThreadSafeProxy* nonnull %111) #7
  %118 = bitcast %class.GrContextThreadSafeProxy* %111 to i8*
  call void @_ZdlPv(i8* %118) #8
  br label %119

119:                                              ; preds = %95, %113, %117
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %53) #7
  %120 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %44, align 8
  %121 = icmp eq %class.GrSurfaceProxy* %120, null
  br i1 %121, label %134, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %120, i64 0, i32 1
  %124 = getelementptr inbounds %class.SkNVRefCnt.90, %class.SkNVRefCnt.90* %123, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = atomicrmw add i32* %124, i32 -1 acq_rel
  %126 = icmp eq i32 %125, 1
  br i1 %126, label %127, label %134

127:                                              ; preds = %122
  %128 = getelementptr inbounds %class.SkNVRefCnt.90, %class.SkNVRefCnt.90* %123, i64 -2
  %129 = bitcast %class.SkNVRefCnt.90* %128 to %class.GrSurfaceProxy*
  %130 = bitcast %class.SkNVRefCnt.90* %128 to void (%class.GrSurfaceProxy*)***
  %131 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %130, align 8
  %132 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %131, i64 1
  %133 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %132, align 8
  call void %133(%class.GrSurfaceProxy* nonnull %129) #7
  br label %134

134:                                              ; preds = %119, %122, %127
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #7
  %135 = load %class.SkColorSpace*, %class.SkColorSpace** %24, align 8
  br label %136

136:                                              ; preds = %34, %134
  %137 = phi %class.SkColorSpace* [ %135, %134 ], [ %29, %34 ]
  %138 = phi i1 [ true, %134 ], [ false, %34 ]
  %139 = icmp eq %class.SkColorSpace* %137, null
  br i1 %139, label %146, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %137, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = atomicrmw add i32* %141, i32 -1 acq_rel
  %143 = icmp eq i32 %142, 1
  br i1 %143, label %144, label %146

144:                                              ; preds = %140
  %145 = bitcast %class.SkColorSpace* %137 to i8*
  call void @_ZdlPv(i8* %145) #8
  br label %146

146:                                              ; preds = %136, %140, %144
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #7
  br label %147

147:                                              ; preds = %2, %146
  %148 = phi i1 [ %138, %146 ], [ false, %2 ]
  ret i1 %148
}

declare i64 @_ZNK15GrDirectContext21getResourceCacheLimitEv(%class.GrDirectContext*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN15GrBackendFormatC1ERKS_(%class.GrBackendFormat*, %class.GrBackendFormat* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN25SkSurfaceCharacterization3setE5sk_spI24GrContextThreadSafeProxyEmRK11SkImageInfoRK15GrBackendFormat15GrSurfaceOriginiNS_11TextureableENS_9MipMappedENS_10UsesGLFBO0ENS_27VkRTSupportsInputAttachmentENS_27VulkanSecondaryCBCompatibleE11GrProtectedRK14SkSurfaceProps(%class.SkSurfaceCharacterization*, %class.sk_sp*, i64, %struct.SkImageInfo* dereferenceable(24), %class.GrBackendFormat* dereferenceable(72), i32, i32, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %15 = zext i1 %7 to i8
  %16 = zext i1 %8 to i8
  %17 = zext i1 %9 to i8
  %18 = zext i1 %10 to i8
  %19 = zext i1 %11 to i8
  %20 = zext i1 %12 to i8
  %21 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 0
  %22 = icmp eq %class.sk_sp* %21, %1
  br i1 %22, label %40, label %23

23:                                               ; preds = %14
  %24 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %25 = load %class.GrContextThreadSafeProxy*, %class.GrContextThreadSafeProxy** %24, align 8
  %26 = icmp eq %class.GrContextThreadSafeProxy* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 1 monotonic
  br label %30

30:                                               ; preds = %27, %23
  %31 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 0, i32 0
  %32 = load %class.GrContextThreadSafeProxy*, %class.GrContextThreadSafeProxy** %31, align 8
  store %class.GrContextThreadSafeProxy* %25, %class.GrContextThreadSafeProxy** %31, align 8
  %33 = icmp eq %class.GrContextThreadSafeProxy* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  tail call void @_ZN24GrContextThreadSafeProxyD1Ev(%class.GrContextThreadSafeProxy* nonnull %32) #7
  %39 = bitcast %class.GrContextThreadSafeProxy* %32 to i8*
  tail call void @_ZdlPv(i8* %39) #8
  br label %40

40:                                               ; preds = %14, %30, %34, %38
  %41 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 1
  store i64 %2, i64* %41, align 8
  %42 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 2
  %43 = icmp eq %struct.SkImageInfo* %42, %3
  br i1 %43, label %61, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 0, i32 0
  %46 = load %class.SkColorSpace*, %class.SkColorSpace** %45, align 8
  %47 = icmp eq %class.SkColorSpace* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 1 monotonic
  br label %51

51:                                               ; preds = %48, %44
  %52 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %42, i64 0, i32 0, i32 0, i32 0
  %53 = load %class.SkColorSpace*, %class.SkColorSpace** %52, align 8
  store %class.SkColorSpace* %46, %class.SkColorSpace** %52, align 8
  %54 = icmp eq %class.SkColorSpace* %53, null
  br i1 %54, label %61, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 -1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = bitcast %class.SkColorSpace* %53 to i8*
  tail call void @_ZdlPv(i8* %60) #8
  br label %61

61:                                               ; preds = %40, %51, %55, %59
  %62 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 2, i32 0, i32 1
  %63 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 1
  %64 = bitcast i32* %63 to i64*
  %65 = bitcast i32* %62 to i64*
  %66 = load i64, i64* %64, align 8
  store i64 %66, i64* %65, align 8
  %67 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 2, i32 1
  %68 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 1
  %69 = bitcast %struct.SkISize* %68 to i64*
  %70 = bitcast %struct.SkISize* %67 to i64*
  %71 = load i64, i64* %69, align 8
  store i64 %71, i64* %70, align 8
  %72 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3
  %73 = tail call dereferenceable(72) %class.GrBackendFormat* @_ZN15GrBackendFormataSERKS_(%class.GrBackendFormat* %72, %class.GrBackendFormat* dereferenceable(72) %4) #7
  %74 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 4
  store i32 %5, i32* %74, align 8
  %75 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 5
  store i32 %6, i32* %75, align 4
  %76 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 6
  store i8 %15, i8* %76, align 8
  %77 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 7
  store i8 %16, i8* %77, align 1
  %78 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 8
  store i8 %17, i8* %78, align 2
  %79 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 9
  store i8 %18, i8* %79, align 1
  %80 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 10
  store i8 %19, i8* %80, align 4
  %81 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 11
  store i8 %20, i8* %81, align 1
  %82 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 12
  %83 = tail call dereferenceable(8) %class.SkSurfaceProps* @_ZN14SkSurfacePropsaSERKS_(%class.SkSurfaceProps* %82, %class.SkSurfaceProps* dereferenceable(8) %13) #7
  ret void
}

declare void @_ZN15GrDirectContext15threadSafeProxyEv(%class.sk_sp* sret, %class.GrDirectContext*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK26GrVkSecondaryCBDrawContext12isCompatibleERK25SkSurfaceCharacterization(%class.GrVkSecondaryCBDrawContext* nocapture readonly, %class.SkSurfaceCharacterization* dereferenceable(136)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp, align 8
  %4 = alloca %class.GrSurfaceProxyView, align 8
  %5 = alloca %class.GrBackendFormat, align 8
  %6 = getelementptr inbounds %class.GrVkSecondaryCBDrawContext, %class.GrVkSecondaryCBDrawContext* %0, i64 0, i32 1, i32 0
  %7 = load %class.SkBaseGpuDevice*, %class.SkBaseGpuDevice** %6, align 8
  %8 = getelementptr inbounds %class.SkBaseGpuDevice, %class.SkBaseGpuDevice* %7, i64 0, i32 0
  %9 = bitcast %class.SkBaseGpuDevice* %7 to %class.GrRecordingContext* (%class.SkBaseDevice*)***
  %10 = load %class.GrRecordingContext* (%class.SkBaseDevice*)**, %class.GrRecordingContext* (%class.SkBaseDevice*)*** %9, align 8
  %11 = getelementptr inbounds %class.GrRecordingContext* (%class.SkBaseDevice*)*, %class.GrRecordingContext* (%class.SkBaseDevice*)** %10, i64 8
  %12 = load %class.GrRecordingContext* (%class.SkBaseDevice*)*, %class.GrRecordingContext* (%class.SkBaseDevice*)** %11, align 8
  %13 = tail call %class.GrRecordingContext* %12(%class.SkBaseDevice* %8) #7
  %14 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %13, i64 0, i32 0, i32 0
  %15 = bitcast %class.GrRecordingContext* %13 to %class.GrDirectContext* (%class.GrContext_Base*)***
  %16 = load %class.GrDirectContext* (%class.GrContext_Base*)**, %class.GrDirectContext* (%class.GrContext_Base*)*** %15, align 8
  %17 = getelementptr inbounds %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %16, i64 3
  %18 = load %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %17, align 8
  %19 = tail call %class.GrDirectContext* %18(%class.GrContext_Base* %14) #7
  %20 = icmp eq %class.GrDirectContext* %19, null
  br i1 %20, label %214, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 2, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %214, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 10
  %27 = load i8, i8* %26, align 4, !range !10
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %214, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 6
  %31 = load i8, i8* %30, align 8, !range !10
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %214

33:                                               ; preds = %29
  %34 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 8
  %35 = load i8, i8* %34, align 2, !range !10
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %214

37:                                               ; preds = %33
  %38 = load %class.SkBaseGpuDevice*, %class.SkBaseGpuDevice** %6, align 8
  %39 = getelementptr inbounds %class.SkBaseGpuDevice, %class.SkBaseGpuDevice* %38, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %class.SkColorSpace*, %class.SkColorSpace** %39, align 8
  %41 = icmp eq %class.SkColorSpace* %40, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 1 monotonic
  br label %45

45:                                               ; preds = %37, %42
  %46 = getelementptr inbounds %class.SkBaseGpuDevice, %class.SkBaseGpuDevice* %38, i64 0, i32 0, i32 3, i32 0, i32 1
  %47 = bitcast i32* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = trunc i64 %48 to i32
  %50 = getelementptr inbounds %class.SkBaseGpuDevice, %class.SkBaseGpuDevice* %38, i64 0, i32 0, i32 3, i32 1
  %51 = bitcast %struct.SkISize* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i32 %49, 0
  br i1 %53, label %206, label %54

54:                                               ; preds = %45
  %55 = bitcast %class.GrSurfaceProxyView* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #7
  %56 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %4, i64 0, i32 0, i32 0
  %57 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %4, i64 0, i32 1
  %58 = bitcast %class.GrSurfaceProxyView* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 16, i1 false)
  %59 = load %class.SkBaseGpuDevice*, %class.SkBaseGpuDevice** %6, align 8
  %60 = bitcast %class.SkBaseGpuDevice* %59 to void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)***
  %61 = load void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)**, void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)*** %60, align 8
  %62 = getelementptr inbounds void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)*, void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)** %61, i64 61
  %63 = load void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)*, void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)** %62, align 8
  call void %63(%class.GrSurfaceProxyView* nonnull sret %4, %class.SkBaseGpuDevice* %59) #7
  %64 = call i64 @_ZNK15GrDirectContext21getResourceCacheLimitEv(%class.GrDirectContext* nonnull %19) #7
  %65 = bitcast %class.GrBackendFormat* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %65) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 72, i1 false)
  %66 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %56, align 8
  %67 = icmp eq %class.GrSurfaceProxy* %66, null
  br i1 %67, label %74, label %68

68:                                               ; preds = %54
  %69 = bitcast %class.GrSurfaceProxy* %66 to %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)***
  %70 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)**, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*** %69, align 8
  %71 = getelementptr inbounds %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %70, i64 5
  %72 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %71, align 8
  %73 = call %class.GrRenderTargetProxy* %72(%class.GrSurfaceProxy* nonnull %66) #7
  br label %74

74:                                               ; preds = %54, %68
  %75 = phi %class.GrRenderTargetProxy* [ %73, %68 ], [ null, %54 ]
  %76 = bitcast %class.GrRenderTargetProxy* %75 to i8**
  %77 = load i8*, i8** %76, align 8
  %78 = getelementptr i8, i8* %77, i64 -24
  %79 = bitcast i8* %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %class.GrRenderTargetProxy* %75 to i8*
  %82 = getelementptr inbounds i8, i8* %81, i64 %80
  %83 = getelementptr inbounds i8, i8* %82, i64 32
  %84 = bitcast i8* %83 to %class.GrBackendFormat*
  call void @_ZN15GrBackendFormatC1ERKS_(%class.GrBackendFormat* nonnull %5, %class.GrBackendFormat* dereferenceable(72) %84) #7
  %85 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %56, align 8
  %86 = icmp eq %class.GrSurfaceProxy* %85, null
  br i1 %86, label %87, label %90

87:                                               ; preds = %74
  %88 = load i8, i8* inttoptr (i64 8 to i8*), align 8
  %89 = sext i8 %88 to i32
  br label %107

90:                                               ; preds = %74
  %91 = bitcast %class.GrSurfaceProxy* %85 to %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)***
  %92 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)**, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*** %91, align 8
  %93 = getelementptr inbounds %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %92, i64 5
  %94 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %93, align 8
  %95 = call %class.GrRenderTargetProxy* %94(%class.GrSurfaceProxy* nonnull %85) #7
  %96 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %56, align 8
  %97 = getelementptr inbounds %class.GrRenderTargetProxy, %class.GrRenderTargetProxy* %95, i64 0, i32 1
  %98 = load i8, i8* %97, align 8
  %99 = sext i8 %98 to i32
  %100 = icmp eq %class.GrSurfaceProxy* %96, null
  br i1 %100, label %107, label %101

101:                                              ; preds = %90
  %102 = bitcast %class.GrSurfaceProxy* %96 to %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)***
  %103 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)**, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*** %102, align 8
  %104 = getelementptr inbounds %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %103, i64 5
  %105 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %104, align 8
  %106 = call %class.GrRenderTargetProxy* %105(%class.GrSurfaceProxy* nonnull %96) #7
  br label %107

107:                                              ; preds = %87, %90, %101
  %108 = phi i32 [ %99, %101 ], [ %99, %90 ], [ %89, %87 ]
  %109 = phi %class.GrRenderTargetProxy* [ %106, %101 ], [ null, %90 ], [ null, %87 ]
  %110 = bitcast %class.GrRenderTargetProxy* %109 to i8**
  %111 = load i8*, i8** %110, align 8
  %112 = getelementptr i8, i8* %111, i64 -24
  %113 = bitcast i8* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %class.GrRenderTargetProxy* %109 to i8*
  %116 = getelementptr inbounds i8, i8* %115, i64 %114
  %117 = getelementptr inbounds i8, i8* %116, i64 163
  %118 = load i8, i8* %117, align 1, !range !10
  %119 = icmp ne i8 %118, 0
  %120 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 0, i32 0
  %121 = load %class.GrContextThreadSafeProxy*, %class.GrContextThreadSafeProxy** %120, align 8
  %122 = icmp eq %class.GrContextThreadSafeProxy* %121, null
  br i1 %122, label %189, label %123

123:                                              ; preds = %107
  %124 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %19, i64 0, i32 0, i32 0, i32 0
  %125 = bitcast %class.sk_sp* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #7
  call void @_ZN14GrContext_Base15threadSafeProxyEv(%class.sk_sp* nonnull sret %3, %class.GrContext_Base* %124) #7
  %126 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %127 = load %class.GrContextThreadSafeProxy*, %class.GrContextThreadSafeProxy** %126, align 8
  %128 = icmp eq %class.GrContextThreadSafeProxy* %121, %127
  %129 = icmp eq %class.GrContextThreadSafeProxy* %127, null
  br i1 %129, label %136, label %130

130:                                              ; preds = %123
  %131 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %127, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = atomicrmw add i32* %131, i32 -1 acq_rel
  %133 = icmp eq i32 %132, 1
  br i1 %133, label %134, label %136

134:                                              ; preds = %130
  call void @_ZN24GrContextThreadSafeProxyD1Ev(%class.GrContextThreadSafeProxy* nonnull %127) #7
  %135 = bitcast %class.GrContextThreadSafeProxy* %127 to i8*
  call void @_ZdlPv(i8* %135) #8
  br label %136

136:                                              ; preds = %123, %130, %134
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #7
  br i1 %128, label %137, label %189

137:                                              ; preds = %136
  %138 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 1
  %139 = load i64, i64* %138, align 8
  %140 = icmp ugt i64 %139, %64
  br i1 %140, label %189, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 4
  %143 = load i32, i32* %142, align 8
  %144 = load i32, i32* %57, align 8
  %145 = icmp eq i32 %143, %144
  br i1 %145, label %146, label %189

146:                                              ; preds = %141
  %147 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 3
  %148 = call zeroext i1 @_ZNK15GrBackendFormateqERKS_(%class.GrBackendFormat* %147, %class.GrBackendFormat* nonnull dereferenceable(72) %5) #7
  br i1 %148, label %149, label %189

149:                                              ; preds = %146
  %150 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 2, i32 1, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = trunc i64 %52 to i32
  %153 = icmp eq i32 %151, %152
  br i1 %153, label %154, label %189

154:                                              ; preds = %149
  %155 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 2, i32 1, i32 1
  %156 = load i32, i32* %155, align 4
  %157 = lshr i64 %52, 32
  %158 = trunc i64 %157 to i32
  %159 = icmp eq i32 %156, %158
  %160 = load i32, i32* %22, align 8
  %161 = icmp eq i32 %160, %49
  %162 = and i1 %159, %161
  br i1 %162, label %163, label %189

163:                                              ; preds = %154
  %164 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 5
  %165 = load i32, i32* %164, align 4
  %166 = icmp eq i32 %165, %108
  br i1 %166, label %167, label %189

167:                                              ; preds = %163
  %168 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %169 = load %class.SkColorSpace*, %class.SkColorSpace** %168, align 8
  %170 = call zeroext i1 @_ZN12SkColorSpace6EqualsEPKS_S1_(%class.SkColorSpace* %169, %class.SkColorSpace* %40) #7
  br i1 %170, label %171, label %189

171:                                              ; preds = %167
  %172 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 11
  %173 = load i8, i8* %172, align 1, !range !10
  %174 = icmp ne i8 %173, 0
  %175 = xor i1 %119, %174
  br i1 %175, label %189, label %176

176:                                              ; preds = %171
  %177 = load %class.SkBaseGpuDevice*, %class.SkBaseGpuDevice** %6, align 8
  %178 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 12, i32 0
  %179 = load i32, i32* %178, align 4
  %180 = getelementptr inbounds %class.SkBaseGpuDevice, %class.SkBaseGpuDevice* %177, i64 0, i32 0, i32 4, i32 0
  %181 = load i32, i32* %180, align 4
  %182 = icmp eq i32 %179, %181
  br i1 %182, label %183, label %189

183:                                              ; preds = %176
  %184 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 12, i32 1
  %185 = load i32, i32* %184, align 4
  %186 = getelementptr inbounds %class.SkBaseGpuDevice, %class.SkBaseGpuDevice* %177, i64 0, i32 0, i32 4, i32 1
  %187 = load i32, i32* %186, align 4
  %188 = icmp eq i32 %185, %187
  br label %189

189:                                              ; preds = %183, %176, %171, %137, %107, %167, %163, %154, %149, %146, %141, %136
  %190 = phi i1 [ false, %171 ], [ false, %167 ], [ false, %163 ], [ false, %154 ], [ false, %149 ], [ false, %146 ], [ false, %141 ], [ false, %137 ], [ false, %136 ], [ false, %107 ], [ false, %176 ], [ %188, %183 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %65) #7
  %191 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %56, align 8
  %192 = icmp eq %class.GrSurfaceProxy* %191, null
  br i1 %192, label %205, label %193

193:                                              ; preds = %189
  %194 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %191, i64 0, i32 1
  %195 = getelementptr inbounds %class.SkNVRefCnt.90, %class.SkNVRefCnt.90* %194, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = atomicrmw add i32* %195, i32 -1 acq_rel
  %197 = icmp eq i32 %196, 1
  br i1 %197, label %198, label %205

198:                                              ; preds = %193
  %199 = getelementptr inbounds %class.SkNVRefCnt.90, %class.SkNVRefCnt.90* %194, i64 -2
  %200 = bitcast %class.SkNVRefCnt.90* %199 to %class.GrSurfaceProxy*
  %201 = bitcast %class.SkNVRefCnt.90* %199 to void (%class.GrSurfaceProxy*)***
  %202 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %201, align 8
  %203 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %202, i64 1
  %204 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %203, align 8
  call void %204(%class.GrSurfaceProxy* nonnull %200) #7
  br label %205

205:                                              ; preds = %189, %193, %198
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #7
  br label %206

206:                                              ; preds = %45, %205
  %207 = phi i1 [ %190, %205 ], [ false, %45 ]
  br i1 %41, label %214, label %208

208:                                              ; preds = %206
  %209 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = atomicrmw add i32* %209, i32 -1 acq_rel
  %211 = icmp eq i32 %210, 1
  br i1 %211, label %212, label %214

212:                                              ; preds = %208
  %213 = bitcast %class.SkColorSpace* %40 to i8*
  call void @_ZdlPv(i8* %213) #8
  br label %214

214:                                              ; preds = %33, %29, %25, %21, %212, %208, %206, %2
  %215 = phi i1 [ false, %2 ], [ false, %21 ], [ false, %25 ], [ false, %29 ], [ false, %33 ], [ %207, %206 ], [ %207, %208 ], [ %207, %212 ]
  ret i1 %215
}

declare zeroext i1 @_ZNK15GrBackendFormateqERKS_(%class.GrBackendFormat*, %class.GrBackendFormat* dereferenceable(72)) local_unnamed_addr #1

declare zeroext i1 @_ZN12SkColorSpace6EqualsEPKS_S1_(%class.SkColorSpace*, %class.SkColorSpace*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN26GrVkSecondaryCBDrawContext4drawE5sk_spIK21SkDeferredDisplayListE(%class.GrVkSecondaryCBDrawContext* nocapture readonly, %class.sk_sp.359* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.GrSurfaceProxyView, align 8
  %4 = alloca %class.GrDirectContextPriv, align 8
  %5 = alloca %class.sk_sp.359, align 8
  %6 = alloca %class.sk_sp.264, align 8
  %7 = getelementptr inbounds %class.sk_sp.359, %class.sk_sp.359* %1, i64 0, i32 0
  %8 = load %class.SkDeferredDisplayList*, %class.SkDeferredDisplayList** %7, align 8
  %9 = icmp eq %class.SkDeferredDisplayList* %8, null
  br i1 %9, label %113, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.SkDeferredDisplayList, %class.SkDeferredDisplayList* %8, i64 0, i32 1
  %12 = tail call zeroext i1 @_ZNK26GrVkSecondaryCBDrawContext12isCompatibleERK25SkSurfaceCharacterization(%class.GrVkSecondaryCBDrawContext* %0, %class.SkSurfaceCharacterization* dereferenceable(136) %11)
  br i1 %12, label %13, label %113

13:                                               ; preds = %10
  %14 = getelementptr inbounds %class.GrVkSecondaryCBDrawContext, %class.GrVkSecondaryCBDrawContext* %0, i64 0, i32 1, i32 0
  %15 = load %class.SkBaseGpuDevice*, %class.SkBaseGpuDevice** %14, align 8
  %16 = getelementptr inbounds %class.SkBaseGpuDevice, %class.SkBaseGpuDevice* %15, i64 0, i32 0
  %17 = bitcast %class.SkBaseGpuDevice* %15 to %class.GrRecordingContext* (%class.SkBaseDevice*)***
  %18 = load %class.GrRecordingContext* (%class.SkBaseDevice*)**, %class.GrRecordingContext* (%class.SkBaseDevice*)*** %17, align 8
  %19 = getelementptr inbounds %class.GrRecordingContext* (%class.SkBaseDevice*)*, %class.GrRecordingContext* (%class.SkBaseDevice*)** %18, i64 8
  %20 = load %class.GrRecordingContext* (%class.SkBaseDevice*)*, %class.GrRecordingContext* (%class.SkBaseDevice*)** %19, align 8
  %21 = tail call %class.GrRecordingContext* %20(%class.SkBaseDevice* %16) #7
  %22 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %21, i64 0, i32 0, i32 0
  %23 = bitcast %class.GrRecordingContext* %21 to %class.GrDirectContext* (%class.GrContext_Base*)***
  %24 = load %class.GrDirectContext* (%class.GrContext_Base*)**, %class.GrDirectContext* (%class.GrContext_Base*)*** %23, align 8
  %25 = getelementptr inbounds %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %24, i64 3
  %26 = load %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %25, align 8
  %27 = tail call %class.GrDirectContext* %26(%class.GrContext_Base* %22) #7
  %28 = icmp eq %class.GrDirectContext* %27, null
  br i1 %28, label %113, label %29

29:                                               ; preds = %13
  %30 = bitcast %class.GrSurfaceProxyView* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #7
  %31 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %3, i64 0, i32 0, i32 0
  %32 = bitcast %class.GrSurfaceProxyView* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 16, i1 false)
  %33 = load %class.SkBaseGpuDevice*, %class.SkBaseGpuDevice** %14, align 8
  %34 = bitcast %class.SkBaseGpuDevice* %33 to void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)***
  %35 = load void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)**, void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)*** %34, align 8
  %36 = getelementptr inbounds void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)*, void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)** %35, i64 61
  %37 = load void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)*, void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)** %36, align 8
  call void %37(%class.GrSurfaceProxyView* nonnull sret %3, %class.SkBaseGpuDevice* %33) #7
  %38 = bitcast %class.GrDirectContextPriv* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #7
  %39 = getelementptr inbounds %class.GrDirectContextPriv, %class.GrDirectContextPriv* %4, i64 0, i32 0
  store %class.GrDirectContext* %27, %class.GrDirectContext** %39, align 8, !alias.scope !11
  %40 = bitcast %class.sk_sp.359* %1 to i64*
  %41 = load i64, i64* %40, align 8
  store %class.SkDeferredDisplayList* null, %class.SkDeferredDisplayList** %7, align 8
  %42 = bitcast %class.sk_sp.359* %5 to i64*
  store i64 %41, i64* %42, align 8
  %43 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %31, align 8, !noalias !14
  %44 = icmp eq %class.GrSurfaceProxy* %43, null
  br i1 %44, label %63, label %45

45:                                               ; preds = %29
  %46 = bitcast %class.GrSurfaceProxy* %43 to %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)***
  %47 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)**, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*** %46, align 8, !noalias !14
  %48 = getelementptr inbounds %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %47, i64 5
  %49 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %48, align 8, !noalias !14
  %50 = call %class.GrRenderTargetProxy* %49(%class.GrSurfaceProxy* nonnull %43) #7, !noalias !14
  %51 = icmp eq %class.GrRenderTargetProxy* %50, null
  br i1 %51, label %63, label %52

52:                                               ; preds = %45
  %53 = bitcast %class.GrRenderTargetProxy* %50 to i8**
  %54 = load i8*, i8** %53, align 8, !noalias !17
  %55 = getelementptr i8, i8* %54, i64 -24
  %56 = bitcast i8* %55 to i64*
  %57 = load i64, i64* %56, align 8, !noalias !17
  %58 = add i64 %57, 8
  %59 = bitcast %class.GrRenderTargetProxy* %50 to i8*
  %60 = getelementptr inbounds i8, i8* %59, i64 %58
  %61 = bitcast i8* %60 to i32*
  %62 = atomicrmw add i32* %61, i32 1 monotonic, !noalias !17
  br label %63

63:                                               ; preds = %29, %45, %52
  %64 = phi %class.GrRenderTargetProxy* [ null, %45 ], [ %50, %52 ], [ null, %29 ]
  %65 = getelementptr inbounds %class.sk_sp.264, %class.sk_sp.264* %6, i64 0, i32 0
  store %class.GrRenderTargetProxy* %64, %class.GrRenderTargetProxy** %65, align 8, !alias.scope !17
  call void @_ZN19GrDirectContextPriv13createDDLTaskE5sk_spIK21SkDeferredDisplayListES0_I19GrRenderTargetProxyE8SkIPoint(%class.GrDirectContextPriv* nonnull %4, %class.sk_sp.359* nonnull %5, %class.sk_sp.264* nonnull %6, i64 0) #7
  %66 = load %class.GrRenderTargetProxy*, %class.GrRenderTargetProxy** %65, align 8
  %67 = icmp eq %class.GrRenderTargetProxy* %66, null
  br i1 %67, label %87, label %68

68:                                               ; preds = %63
  %69 = bitcast %class.GrRenderTargetProxy* %66 to i8**
  %70 = load i8*, i8** %69, align 8
  %71 = getelementptr i8, i8* %70, i64 -24
  %72 = bitcast i8* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, 8
  %75 = bitcast %class.GrRenderTargetProxy* %66 to i8*
  %76 = getelementptr inbounds i8, i8* %75, i64 %74
  %77 = bitcast i8* %76 to i32*
  %78 = atomicrmw add i32* %77, i32 -1 acq_rel
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %87

80:                                               ; preds = %68
  %81 = getelementptr inbounds i8, i8* %75, i64 %73
  %82 = bitcast i8* %81 to %class.GrSurfaceProxy*
  %83 = bitcast i8* %81 to void (%class.GrSurfaceProxy*)***
  %84 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %83, align 8
  %85 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %84, i64 1
  %86 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %85, align 8
  call void %86(%class.GrSurfaceProxy* nonnull %82) #7
  br label %87

87:                                               ; preds = %63, %68, %80
  %88 = getelementptr inbounds %class.sk_sp.359, %class.sk_sp.359* %5, i64 0, i32 0
  %89 = load %class.SkDeferredDisplayList*, %class.SkDeferredDisplayList** %88, align 8
  %90 = icmp eq %class.SkDeferredDisplayList* %89, null
  br i1 %90, label %97, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %class.SkDeferredDisplayList, %class.SkDeferredDisplayList* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = atomicrmw add i32* %92, i32 -1 acq_rel
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %95, label %97

95:                                               ; preds = %91
  call void @_ZN21SkDeferredDisplayListD1Ev(%class.SkDeferredDisplayList* nonnull %89) #7
  %96 = bitcast %class.SkDeferredDisplayList* %89 to i8*
  call void @_ZdlPv(i8* %96) #8
  br label %97

97:                                               ; preds = %87, %91, %95
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #7
  %98 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %31, align 8
  %99 = icmp eq %class.GrSurfaceProxy* %98, null
  br i1 %99, label %112, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %98, i64 0, i32 1
  %102 = getelementptr inbounds %class.SkNVRefCnt.90, %class.SkNVRefCnt.90* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = atomicrmw add i32* %102, i32 -1 acq_rel
  %104 = icmp eq i32 %103, 1
  br i1 %104, label %105, label %112

105:                                              ; preds = %100
  %106 = getelementptr inbounds %class.SkNVRefCnt.90, %class.SkNVRefCnt.90* %101, i64 -2
  %107 = bitcast %class.SkNVRefCnt.90* %106 to %class.GrSurfaceProxy*
  %108 = bitcast %class.SkNVRefCnt.90* %106 to void (%class.GrSurfaceProxy*)***
  %109 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %108, align 8
  %110 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %109, i64 1
  %111 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %110, align 8
  call void %111(%class.GrSurfaceProxy* nonnull %107) #7
  br label %112

112:                                              ; preds = %97, %100, %105
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #7
  br label %113

113:                                              ; preds = %2, %112, %13, %10
  %114 = phi i1 [ false, %10 ], [ false, %2 ], [ true, %112 ], [ false, %13 ]
  ret i1 %114
}

declare void @_ZN19GrDirectContextPriv13createDDLTaskE5sk_spIK21SkDeferredDisplayListES0_I19GrRenderTargetProxyE8SkIPoint(%class.GrDirectContextPriv*, %class.sk_sp.359*, %class.sk_sp.264*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #7
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps*, %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #1

declare void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps*) unnamed_addr #1

declare zeroext i1 @_ZN19GrDirectContextPriv13flushSurfacesE6SkSpanIP14GrSurfaceProxyEN9SkSurface20BackendSurfaceAccessERK11GrFlushInfoPK28GrBackendSurfaceMutableState(%class.GrDirectContextPriv*, %class.GrSurfaceProxy**, i64, i32, %struct.GrFlushInfo* dereferenceable(48), %class.GrBackendSurfaceMutableState*) local_unnamed_addr #1

declare dereferenceable(72) %class.GrBackendFormat* @_ZN15GrBackendFormataSERKS_(%class.GrBackendFormat*, %class.GrBackendFormat* dereferenceable(72)) local_unnamed_addr #1

declare dereferenceable(8) %class.SkSurfaceProps* @_ZN14SkSurfacePropsaSERKS_(%class.SkSurfaceProps*, %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN24GrContextThreadSafeProxyD1Ev(%class.GrContextThreadSafeProxy*) unnamed_addr #6

declare void @_ZN14GrContext_Base15threadSafeProxyEv(%class.sk_sp* sret, %class.GrContext_Base*) local_unnamed_addr #1

declare void @_ZN8SkCanvasC1E5sk_spI12SkBaseDeviceE(%class.SkCanvas*, %class.sk_sp.223*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN21SkDeferredDisplayListD1Ev(%class.SkDeferredDisplayList*) unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!4 = distinct !{!4, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!5 = distinct !{!5, !6, !"_ZNK11SkImageInfo13refColorSpaceEv: argument 0"}
!6 = distinct !{!6, !"_ZNK11SkImageInfo13refColorSpaceEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN15GrDirectContext4privEv: argument 0"}
!9 = distinct !{!9, !"_ZN15GrDirectContext4privEv"}
!10 = !{i8 0, i8 2}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN15GrDirectContext4privEv: argument 0"}
!13 = distinct !{!13, !"_ZN15GrDirectContext4privEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK18GrSurfaceProxyView22asRenderTargetProxyRefEv: argument 0"}
!16 = distinct !{!16, !"_ZNK18GrSurfaceProxyView22asRenderTargetProxyRefEv"}
!17 = !{!18, !15}
!18 = distinct !{!18, !19, !"_Z9sk_ref_spI19GrRenderTargetProxyE5sk_spIT_EPS2_: argument 0"}
!19 = distinct !{!19, !"_Z9sk_ref_spI19GrRenderTargetProxyE5sk_spIT_EPS2_"}
