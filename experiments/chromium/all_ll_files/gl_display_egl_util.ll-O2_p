; ModuleID = '../../ui/gl/gl_display_egl_util.cc'
source_filename = "../../ui/gl/gl_display_egl_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gl::GLDisplayEglUtil" = type { i32 (...)** }
%"class.base::NoDestructor" = type { [8 x i8] }
%"class.gl::(anonymous namespace)::GLDisplayEglUtilStub" = type { %"class.gl::GLDisplayEglUtil" }
%"class.std::__1::vector" = type opaque

$_ZN2gl16GLDisplayEglUtilD2Ev = comdat any

@_ZN2gl12_GLOBAL__N_110g_instanceE = internal unnamed_addr global %"class.gl::GLDisplayEglUtil"* null, align 8
@_ZZN2gl12_GLOBAL__N_120GLDisplayEglUtilStub11GetInstanceEvE8instance = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN2gl12_GLOBAL__N_120GLDisplayEglUtilStub11GetInstanceEvE8instance = internal global i64 0, align 8
@_ZTVN2gl12_GLOBAL__N_120GLDisplayEglUtilStubE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::(anonymous namespace)::GLDisplayEglUtilStub"*, i32, %"class.std::__1::vector"*)* @_ZN2gl12_GLOBAL__N_120GLDisplayEglUtilStub30GetPlatformExtraDisplayAttribsEjPNSt3__16vectorIlNS2_9allocatorIlEEEE to i8*), i8* bitcast (void (%"class.gl::(anonymous namespace)::GLDisplayEglUtilStub"*, i32*, i32*)* @_ZN2gl12_GLOBAL__N_120GLDisplayEglUtilStub38ChoosePlatformCustomAlphaAndBufferSizeEPiS2_ to i8*), i8* bitcast (void (%"class.gl::GLDisplayEglUtil"*)* @_ZN2gl16GLDisplayEglUtilD2Ev to i8*), i8* bitcast (void (%"class.gl::(anonymous namespace)::GLDisplayEglUtilStub"*)* @_ZN2gl12_GLOBAL__N_120GLDisplayEglUtilStubD0Ev to i8*)] }, align 8

; Function Attrs: nofree nounwind ssp uwtable
define hidden %"class.gl::GLDisplayEglUtil"* @_ZN2gl16GLDisplayEglUtil11GetInstanceEv() local_unnamed_addr #0 align 2 {
  %1 = load %"class.gl::GLDisplayEglUtil"*, %"class.gl::GLDisplayEglUtil"** @_ZN2gl12_GLOBAL__N_110g_instanceE, align 8
  %2 = icmp eq %"class.gl::GLDisplayEglUtil"* %1, null
  br i1 %2, label %3, label %11

3:                                                ; preds = %0
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN2gl12_GLOBAL__N_120GLDisplayEglUtilStub11GetInstanceEvE8instance to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %10, !prof !2

6:                                                ; preds = %3
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2gl12_GLOBAL__N_120GLDisplayEglUtilStub11GetInstanceEvE8instance) #6
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2gl12_GLOBAL__N_120GLDisplayEglUtilStubE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** bitcast (%"class.base::NoDestructor"* @_ZZN2gl12_GLOBAL__N_120GLDisplayEglUtilStub11GetInstanceEvE8instance to i32 (...)***), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN2gl12_GLOBAL__N_120GLDisplayEglUtilStub11GetInstanceEvE8instance) #6
  br label %10

10:                                               ; preds = %3, %6, %9
  store %"class.gl::GLDisplayEglUtil"* bitcast (%"class.base::NoDestructor"* @_ZZN2gl12_GLOBAL__N_120GLDisplayEglUtilStub11GetInstanceEvE8instance to %"class.gl::GLDisplayEglUtil"*), %"class.gl::GLDisplayEglUtil"** @_ZN2gl12_GLOBAL__N_110g_instanceE, align 8
  br label %11

11:                                               ; preds = %0, %10
  %12 = phi %"class.gl::GLDisplayEglUtil"* [ %1, %0 ], [ bitcast (%"class.base::NoDestructor"* @_ZZN2gl12_GLOBAL__N_120GLDisplayEglUtilStub11GetInstanceEvE8instance to %"class.gl::GLDisplayEglUtil"*), %10 ]
  ret %"class.gl::GLDisplayEglUtil"* %12
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl16GLDisplayEglUtil11SetInstanceEPS0_(%"class.gl::GLDisplayEglUtil"*) local_unnamed_addr #1 align 2 {
  store %"class.gl::GLDisplayEglUtil"* %0, %"class.gl::GLDisplayEglUtil"** @_ZN2gl12_GLOBAL__N_110g_instanceE, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN2gl12_GLOBAL__N_120GLDisplayEglUtilStub30GetPlatformExtraDisplayAttribsEjPNSt3__16vectorIlNS2_9allocatorIlEEEE(%"class.gl::(anonymous namespace)::GLDisplayEglUtilStub"* nocapture, i32, %"class.std::__1::vector"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN2gl12_GLOBAL__N_120GLDisplayEglUtilStub38ChoosePlatformCustomAlphaAndBufferSizeEPiS2_(%"class.gl::(anonymous namespace)::GLDisplayEglUtilStub"* nocapture, i32* nocapture, i32* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl16GLDisplayEglUtilD2Ev(%"class.gl::GLDisplayEglUtil"*) unnamed_addr #4 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2gl12_GLOBAL__N_120GLDisplayEglUtilStubD0Ev(%"class.gl::(anonymous namespace)::GLDisplayEglUtilStub"*) unnamed_addr #4 align 2 {
  %2 = bitcast %"class.gl::(anonymous namespace)::GLDisplayEglUtilStub"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
