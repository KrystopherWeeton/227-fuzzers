; ModuleID = '../../components/viz/service/display/layer_quad.cc'
source_filename = "../../components/viz/service/display/layer_quad.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.viz::LayerQuad::Edge" = type <{ float, float, float, i8, [3 x i8] }>
%"class.gfx::PointF" = type { float, float }
%"class.viz::LayerQuad" = type { %"class.viz::LayerQuad::Edge", %"class.viz::LayerQuad::Edge", %"class.viz::LayerQuad::Edge", %"class.viz::LayerQuad::Edge" }
%"class.gfx::QuadF" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.gfx::Vector2dF" = type { float, float }

@_ZN3viz9LayerQuad4EdgeC1ERKN3gfx6PointFES5_ = hidden unnamed_addr alias void (%"class.viz::LayerQuad::Edge"*, %"class.gfx::PointF"*, %"class.gfx::PointF"*), void (%"class.viz::LayerQuad::Edge"*, %"class.gfx::PointF"*, %"class.gfx::PointF"*)* @_ZN3viz9LayerQuad4EdgeC2ERKN3gfx6PointFES5_
@_ZN3viz9LayerQuadC1ERKN3gfx5QuadFE = hidden unnamed_addr alias void (%"class.viz::LayerQuad"*, %"class.gfx::QuadF"*), void (%"class.viz::LayerQuad"*, %"class.gfx::QuadF"*)* @_ZN3viz9LayerQuadC2ERKN3gfx5QuadFE
@_ZN3viz9LayerQuadC1ERKNS0_4EdgeES3_S3_S3_ = hidden unnamed_addr alias void (%"class.viz::LayerQuad"*, %"class.viz::LayerQuad::Edge"*, %"class.viz::LayerQuad::Edge"*, %"class.viz::LayerQuad::Edge"*, %"class.viz::LayerQuad::Edge"*), void (%"class.viz::LayerQuad"*, %"class.viz::LayerQuad::Edge"*, %"class.viz::LayerQuad::Edge"*, %"class.viz::LayerQuad::Edge"*, %"class.viz::LayerQuad::Edge"*)* @_ZN3viz9LayerQuadC2ERKNS0_4EdgeES3_S3_S3_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz9LayerQuad4EdgeC2ERKN3gfx6PointFES5_(%"class.viz::LayerQuad::Edge"* nocapture, %"class.gfx::PointF"* nocapture readonly dereferenceable(8), %"class.gfx::PointF"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.gfx::Vector2dF", align 4
  %5 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %1, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %2, i64 0, i32 0
  %8 = load float, float* %7, align 4
  %9 = fcmp oeq float %6, %8
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.viz::LayerQuad::Edge", %"class.viz::LayerQuad::Edge"* %0, i64 0, i32 3
  br label %20

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %1, i64 0, i32 1
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %2, i64 0, i32 1
  %16 = load float, float* %15, align 4
  %17 = fcmp oeq float %14, %16
  %18 = getelementptr inbounds %"class.viz::LayerQuad::Edge", %"class.viz::LayerQuad::Edge"* %0, i64 0, i32 3
  br i1 %17, label %19, label %20

19:                                               ; preds = %12
  store i8 1, i8* %18, align 4
  br label %47

20:                                               ; preds = %10, %12
  %21 = phi i8* [ %11, %10 ], [ %18, %12 ]
  store i8 0, i8* %21, align 4
  %22 = bitcast %"class.gfx::Vector2dF"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #6
  %23 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %4, i64 0, i32 0
  %24 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %4, i64 0, i32 1
  %25 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %1, i64 0, i32 1
  %26 = load float, float* %25, align 4
  %27 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %2, i64 0, i32 1
  %28 = load float, float* %27, align 4
  %29 = fsub float %26, %28
  %30 = load float, float* %7, align 4
  %31 = load float, float* %5, align 4
  %32 = fsub float %30, %31
  store float %29, float* %23, align 4
  store float %32, float* %24, align 4
  %33 = fmul float %28, %31
  %34 = fmul float %26, %30
  %35 = fsub float %33, %34
  %36 = getelementptr inbounds %"class.viz::LayerQuad::Edge", %"class.viz::LayerQuad::Edge"* %0, i64 0, i32 0
  store float %29, float* %36, align 4
  %37 = getelementptr inbounds %"class.viz::LayerQuad::Edge", %"class.viz::LayerQuad::Edge"* %0, i64 0, i32 1
  store float %32, float* %37, align 4
  %38 = getelementptr inbounds %"class.viz::LayerQuad::Edge", %"class.viz::LayerQuad::Edge"* %0, i64 0, i32 2
  store float %35, float* %38, align 4
  %39 = call float @_ZNK3gfx9Vector2dF6LengthEv(%"class.gfx::Vector2dF"* nonnull %4) #6
  %40 = fdiv float 1.000000e+00, %39
  %41 = load float, float* %36, align 4
  %42 = fmul float %41, %40
  store float %42, float* %36, align 4
  %43 = load float, float* %37, align 4
  %44 = fmul float %40, %43
  store float %44, float* %37, align 4
  %45 = load float, float* %38, align 4
  %46 = fmul float %40, %45
  store float %46, float* %38, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #6
  br label %47

47:                                               ; preds = %20, %19
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare float @_ZNK3gfx9Vector2dF6LengthEv(%"class.gfx::Vector2dF"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden <2 x float> @_ZNK3viz9LayerQuad4Edge9IntersectERKS1_(%"class.viz::LayerQuad::Edge"* nocapture readonly, %"class.viz::LayerQuad::Edge"* nocapture readonly dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.viz::LayerQuad::Edge", %"class.viz::LayerQuad::Edge"* %1, i64 0, i32 2
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %"class.viz::LayerQuad::Edge", %"class.viz::LayerQuad::Edge"* %1, i64 0, i32 1
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %"class.viz::LayerQuad::Edge", %"class.viz::LayerQuad::Edge"* %0, i64 0, i32 2
  %8 = load float, float* %7, align 4
  %9 = bitcast %"class.viz::LayerQuad::Edge"* %0 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 4
  %11 = getelementptr inbounds %"class.viz::LayerQuad::Edge", %"class.viz::LayerQuad::Edge"* %1, i64 0, i32 0
  %12 = load float, float* %11, align 4
  %13 = insertelement <2 x float> undef, float %6, i32 0
  %14 = insertelement <2 x float> %13, float %12, i32 1
  %15 = extractelement <2 x float> %10, i32 1
  %16 = fmul <2 x float> %14, %10
  %17 = insertelement <2 x float> undef, float %15, i32 0
  %18 = insertelement <2 x float> %17, float %4, i32 1
  %19 = insertelement <2 x float> undef, float %4, i32 0
  %20 = shufflevector <2 x float> %19, <2 x float> %10, <2 x i32> <i32 0, i32 2>
  %21 = fmul <2 x float> %18, %20
  %22 = insertelement <2 x float> %13, float %8, i32 1
  %23 = insertelement <2 x float> undef, float %8, i32 0
  %24 = insertelement <2 x float> %23, float %12, i32 1
  %25 = fmul <2 x float> %22, %24
  %26 = fsub <2 x float> %21, %25
  %27 = shufflevector <2 x float> %16, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %28 = fsub <2 x float> %16, %27
  %29 = fdiv <2 x float> %26, %28
  ret <2 x float> %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz9LayerQuadC2ERKN3gfx5QuadFE(%"class.viz::LayerQuad"* nocapture, %"class.gfx::QuadF"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Vector2dF", align 4
  %4 = alloca %"class.gfx::Vector2dF", align 4
  %5 = alloca %"class.gfx::Vector2dF", align 4
  %6 = alloca %"class.gfx::Vector2dF", align 4
  %7 = bitcast %"class.viz::LayerQuad"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 13, i1 false) #6
  %8 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 1
  %9 = bitcast %"class.viz::LayerQuad::Edge"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 13, i1 false) #6
  %10 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 2
  %11 = bitcast %"class.viz::LayerQuad::Edge"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 13, i1 false) #6
  %12 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 3
  %13 = bitcast %"class.viz::LayerQuad::Edge"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 13, i1 false) #6
  %14 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %1, i64 0, i32 3, i32 0
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %1, i64 0, i32 0, i32 0
  %17 = load float, float* %16, align 4
  %18 = fcmp oeq float %15, %17
  %19 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %1, i64 0, i32 3, i32 1
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %1, i64 0, i32 0, i32 1
  %22 = load float, float* %21, align 4
  %23 = fcmp oeq float %20, %22
  %24 = and i1 %18, %23
  br i1 %24, label %39, label %25

25:                                               ; preds = %2
  %26 = bitcast %"class.gfx::Vector2dF"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #6
  %27 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %3, i64 0, i32 0
  %28 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %3, i64 0, i32 1
  %29 = fsub float %20, %22
  %30 = fsub float %17, %15
  store float %29, float* %27, align 4
  store float %30, float* %28, align 4
  %31 = fmul float %15, %22
  %32 = fmul float %17, %20
  %33 = fsub float %31, %32
  %34 = call float @_ZNK3gfx9Vector2dF6LengthEv(%"class.gfx::Vector2dF"* nonnull %3) #6
  %35 = fdiv float 1.000000e+00, %34
  %36 = fmul float %29, %35
  %37 = fmul float %30, %35
  %38 = fmul float %33, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #6
  br label %39

39:                                               ; preds = %2, %25
  %40 = phi float [ %36, %25 ], [ undef, %2 ]
  %41 = phi float [ %37, %25 ], [ undef, %2 ]
  %42 = phi float [ %38, %25 ], [ undef, %2 ]
  %43 = phi i8 [ 0, %25 ], [ 1, %2 ]
  %44 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 0, i32 0
  store float %40, float* %44, align 4
  %45 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 0, i32 1
  store float %41, float* %45, align 4
  %46 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 0, i32 2
  store float %42, float* %46, align 4
  %47 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 0, i32 3
  store i8 %43, i8* %47, align 4
  %48 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %1, i64 0, i32 1, i32 0
  %49 = load float, float* %48, align 4
  %50 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %1, i64 0, i32 2, i32 0
  %51 = load float, float* %50, align 4
  %52 = fcmp oeq float %49, %51
  %53 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %1, i64 0, i32 1, i32 1
  %54 = load float, float* %53, align 4
  %55 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %1, i64 0, i32 2, i32 1
  %56 = load float, float* %55, align 4
  %57 = fcmp oeq float %54, %56
  %58 = and i1 %52, %57
  br i1 %58, label %73, label %59

59:                                               ; preds = %39
  %60 = bitcast %"class.gfx::Vector2dF"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #6
  %61 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %4, i64 0, i32 0
  %62 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %4, i64 0, i32 1
  %63 = fsub float %54, %56
  %64 = fsub float %51, %49
  store float %63, float* %61, align 4
  store float %64, float* %62, align 4
  %65 = fmul float %49, %56
  %66 = fmul float %51, %54
  %67 = fsub float %65, %66
  %68 = call float @_ZNK3gfx9Vector2dF6LengthEv(%"class.gfx::Vector2dF"* nonnull %4) #6
  %69 = fdiv float 1.000000e+00, %68
  %70 = fmul float %63, %69
  %71 = fmul float %64, %69
  %72 = fmul float %67, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #6
  br label %73

73:                                               ; preds = %39, %59
  %74 = phi i8 [ 0, %59 ], [ 1, %39 ]
  %75 = phi float [ %72, %59 ], [ undef, %39 ]
  %76 = phi float [ %71, %59 ], [ undef, %39 ]
  %77 = phi float [ %70, %59 ], [ undef, %39 ]
  %78 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 2, i32 0
  store float %77, float* %78, align 4
  %79 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 2, i32 1
  store float %76, float* %79, align 4
  %80 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 2, i32 2
  store float %75, float* %80, align 4
  %81 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 2, i32 3
  store i8 %74, i8* %81, align 4
  %82 = load float, float* %16, align 4
  %83 = load float, float* %48, align 4
  %84 = fcmp oeq float %82, %83
  %85 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %1, i64 0, i32 0, i32 1
  %86 = load float, float* %85, align 4
  %87 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %1, i64 0, i32 1, i32 1
  %88 = load float, float* %87, align 4
  %89 = fcmp oeq float %86, %88
  %90 = and i1 %84, %89
  br i1 %90, label %105, label %91

91:                                               ; preds = %73
  %92 = bitcast %"class.gfx::Vector2dF"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #6
  %93 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %5, i64 0, i32 0
  %94 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %5, i64 0, i32 1
  %95 = fsub float %86, %88
  %96 = fsub float %83, %82
  store float %95, float* %93, align 4
  store float %96, float* %94, align 4
  %97 = fmul float %82, %88
  %98 = fmul float %83, %86
  %99 = fsub float %97, %98
  %100 = call float @_ZNK3gfx9Vector2dF6LengthEv(%"class.gfx::Vector2dF"* nonnull %5) #6
  %101 = fdiv float 1.000000e+00, %100
  %102 = fmul float %95, %101
  %103 = fmul float %96, %101
  %104 = fmul float %99, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #6
  br label %105

105:                                              ; preds = %73, %91
  %106 = phi i8 [ 0, %91 ], [ 1, %73 ]
  %107 = phi float [ %104, %91 ], [ undef, %73 ]
  %108 = phi float [ %103, %91 ], [ undef, %73 ]
  %109 = phi float [ %102, %91 ], [ undef, %73 ]
  %110 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 1, i32 0
  store float %109, float* %110, align 4
  %111 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 1, i32 1
  store float %108, float* %111, align 4
  %112 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 1, i32 2
  store float %107, float* %112, align 4
  %113 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 1, i32 3
  store i8 %106, i8* %113, align 4
  %114 = load float, float* %50, align 4
  %115 = load float, float* %14, align 4
  %116 = fcmp oeq float %114, %115
  %117 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %1, i64 0, i32 2, i32 1
  %118 = load float, float* %117, align 4
  %119 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %1, i64 0, i32 3, i32 1
  %120 = load float, float* %119, align 4
  %121 = fcmp oeq float %118, %120
  %122 = and i1 %116, %121
  br i1 %122, label %137, label %123

123:                                              ; preds = %105
  %124 = bitcast %"class.gfx::Vector2dF"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #6
  %125 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %6, i64 0, i32 0
  %126 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %6, i64 0, i32 1
  %127 = fsub float %118, %120
  %128 = fsub float %115, %114
  store float %127, float* %125, align 4
  store float %128, float* %126, align 4
  %129 = fmul float %114, %120
  %130 = fmul float %115, %118
  %131 = fsub float %129, %130
  %132 = call float @_ZNK3gfx9Vector2dF6LengthEv(%"class.gfx::Vector2dF"* nonnull %6) #6
  %133 = fdiv float 1.000000e+00, %132
  %134 = fmul float %127, %133
  %135 = fmul float %128, %133
  %136 = fmul float %131, %133
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #6
  br label %137

137:                                              ; preds = %105, %123
  %138 = phi i8 [ 0, %123 ], [ 1, %105 ]
  %139 = phi float [ %136, %123 ], [ undef, %105 ]
  %140 = phi float [ %135, %123 ], [ undef, %105 ]
  %141 = phi float [ %134, %123 ], [ undef, %105 ]
  %142 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 3, i32 0
  store float %141, float* %142, align 4
  %143 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 3, i32 1
  store float %140, float* %143, align 4
  %144 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 3, i32 2
  store float %139, float* %144, align 4
  %145 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 3, i32 3
  store i8 %138, i8* %145, align 4
  %146 = call zeroext i1 @_ZNK3gfx5QuadF18IsCounterClockwiseEv(%"class.gfx::QuadF"* %1) #6
  %147 = select i1 %146, float -1.000000e+00, float 1.000000e+00
  %148 = load float, float* %44, align 4
  %149 = fmul float %148, %147
  store float %149, float* %44, align 4
  %150 = load float, float* %45, align 4
  %151 = fmul float %147, %150
  store float %151, float* %45, align 4
  %152 = load float, float* %46, align 4
  %153 = fmul float %147, %152
  store float %153, float* %46, align 4
  %154 = getelementptr inbounds %"class.viz::LayerQuad::Edge", %"class.viz::LayerQuad::Edge"* %10, i64 0, i32 0
  %155 = load float, float* %154, align 4
  %156 = fmul float %147, %155
  store float %156, float* %154, align 4
  %157 = load float, float* %79, align 4
  %158 = fmul float %147, %157
  store float %158, float* %79, align 4
  %159 = load float, float* %80, align 4
  %160 = fmul float %147, %159
  store float %160, float* %80, align 4
  %161 = getelementptr inbounds %"class.viz::LayerQuad::Edge", %"class.viz::LayerQuad::Edge"* %8, i64 0, i32 0
  %162 = load float, float* %161, align 4
  %163 = fmul float %147, %162
  store float %163, float* %161, align 4
  %164 = load float, float* %111, align 4
  %165 = fmul float %147, %164
  store float %165, float* %111, align 4
  %166 = load float, float* %112, align 4
  %167 = fmul float %147, %166
  store float %167, float* %112, align 4
  %168 = getelementptr inbounds %"class.viz::LayerQuad::Edge", %"class.viz::LayerQuad::Edge"* %12, i64 0, i32 0
  %169 = load float, float* %168, align 4
  %170 = fmul float %147, %169
  store float %170, float* %168, align 4
  %171 = load float, float* %143, align 4
  %172 = fmul float %147, %171
  store float %172, float* %143, align 4
  %173 = load float, float* %144, align 4
  %174 = fmul float %147, %173
  store float %174, float* %144, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZNK3gfx5QuadF18IsCounterClockwiseEv(%"class.gfx::QuadF"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz9LayerQuadC2ERKNS0_4EdgeES3_S3_S3_(%"class.viz::LayerQuad"* nocapture, %"class.viz::LayerQuad::Edge"* nocapture readonly dereferenceable(16), %"class.viz::LayerQuad::Edge"* nocapture readonly dereferenceable(16), %"class.viz::LayerQuad::Edge"* nocapture readonly dereferenceable(16), %"class.viz::LayerQuad::Edge"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %6 = bitcast %"class.viz::LayerQuad"* %0 to i8*
  %7 = bitcast %"class.viz::LayerQuad::Edge"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 1
  %9 = bitcast %"class.viz::LayerQuad::Edge"* %8 to i8*
  %10 = bitcast %"class.viz::LayerQuad::Edge"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 16, i1 false)
  %11 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 2
  %12 = bitcast %"class.viz::LayerQuad::Edge"* %11 to i8*
  %13 = bitcast %"class.viz::LayerQuad::Edge"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %13, i64 16, i1 false)
  %14 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 3
  %15 = bitcast %"class.viz::LayerQuad::Edge"* %14 to i8*
  %16 = bitcast %"class.viz::LayerQuad::Edge"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %16, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3viz9LayerQuad7ToQuadFEv(%"class.gfx::QuadF"* noalias sret, %"class.viz::LayerQuad"* readonly) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %1, i64 0, i32 0, i32 3
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %1, i64 0, i32 2
  %6 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %1, i64 0, i32 2, i32 3
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  %9 = add nuw nsw i8 %7, %4
  %10 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %1, i64 0, i32 1
  %11 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %1, i64 0, i32 1, i32 3
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = icmp eq i8 %12, 0
  %14 = add nuw nsw i8 %9, %12
  %15 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %1, i64 0, i32 3
  %16 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %1, i64 0, i32 3, i32 3
  %17 = load i8, i8* %16, align 4, !range !2
  %18 = icmp eq i8 %17, 0
  %19 = add nuw nsw i8 %14, %17
  %20 = icmp ugt i8 %19, 1
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = bitcast %"class.gfx::QuadF"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 32, i1 false)
  br label %293

23:                                               ; preds = %2
  %24 = icmp eq i8 %4, 0
  br i1 %24, label %86, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %1, i64 0, i32 3, i32 2
  %27 = load float, float* %26, align 4
  %28 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %1, i64 0, i32 1, i32 2
  %29 = load float, float* %28, align 4
  %30 = bitcast %"class.viz::LayerQuad::Edge"* %10 to <2 x float>*
  %31 = load <2 x float>, <2 x float>* %30, align 4
  %32 = shufflevector <2 x float> %31, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %33 = bitcast %"class.viz::LayerQuad::Edge"* %15 to <2 x float>*
  %34 = load <2 x float>, <2 x float>* %33, align 4
  %35 = shufflevector <2 x float> %34, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %36 = shufflevector <2 x float> %31, <2 x float> undef, <2 x i32> <i32 1, i32 undef>
  %37 = insertelement <2 x float> %36, float %27, i32 1
  %38 = insertelement <2 x float> undef, float %27, i32 0
  %39 = shufflevector <2 x float> %38, <2 x float> %31, <2 x i32> <i32 0, i32 2>
  %40 = fmul <2 x float> %37, %39
  %41 = extractelement <2 x float> %34, i32 1
  %42 = insertelement <2 x float> undef, float %41, i32 0
  %43 = insertelement <2 x float> %42, float %29, i32 1
  %44 = insertelement <2 x float> undef, float %29, i32 0
  %45 = shufflevector <2 x float> %44, <2 x float> %34, <2 x i32> <i32 0, i32 2>
  %46 = fmul <2 x float> %43, %45
  %47 = shufflevector <2 x float> %36, <2 x float> %31, <2 x i32> <i32 0, i32 2>
  %48 = fmul <2 x float> %47, %34
  %49 = shufflevector <2 x float> %48, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %50 = fsub <2 x float> %48, %49
  %51 = fsub <2 x float> %40, %46
  %52 = shufflevector <2 x float> %50, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %53 = fdiv <2 x float> %51, %52
  %54 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %1, i64 0, i32 2, i32 2
  %55 = load float, float* %54, align 4
  %56 = bitcast %"class.viz::LayerQuad::Edge"* %5 to <2 x float>*
  %57 = load <2 x float>, <2 x float>* %56, align 4
  %58 = shufflevector <2 x float> %57, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %59 = fmul <2 x float> %31, %58
  %60 = insertelement <2 x float> undef, float %55, i32 0
  %61 = shufflevector <2 x float> %60, <2 x float> undef, <2 x i32> zeroinitializer
  %62 = fmul <2 x float> %32, %61
  %63 = shufflevector <2 x float> %44, <2 x float> undef, <2 x i32> zeroinitializer
  %64 = fmul <2 x float> %63, %58
  %65 = fsub <2 x float> %62, %64
  %66 = shufflevector <2 x float> %59, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %67 = fsub <2 x float> %59, %66
  %68 = fdiv <2 x float> %65, %67
  %69 = fmul <2 x float> %35, %57
  %70 = shufflevector <2 x float> %38, <2 x float> undef, <2 x i32> zeroinitializer
  %71 = fmul <2 x float> %70, %58
  %72 = fmul <2 x float> %35, %61
  %73 = fsub <2 x float> %71, %72
  %74 = shufflevector <2 x float> %69, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %75 = fsub <2 x float> %69, %74
  %76 = fdiv <2 x float> %73, %75
  %77 = fsub <2 x float> %46, %40
  %78 = fdiv <2 x float> %77, %50
  %79 = bitcast %"class.gfx::QuadF"* %0 to <2 x float>*
  store <2 x float> %53, <2 x float>* %79, align 4
  %80 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 1
  %81 = bitcast %"class.gfx::PointF"* %80 to <2 x float>*
  store <2 x float> %68, <2 x float>* %81, align 4
  %82 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 2
  %83 = bitcast %"class.gfx::PointF"* %82 to <2 x float>*
  store <2 x float> %76, <2 x float>* %83, align 4
  %84 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 3
  %85 = bitcast %"class.gfx::PointF"* %84 to <2 x float>*
  store <2 x float> %78, <2 x float>* %85, align 4
  br label %293

86:                                               ; preds = %23
  %87 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %1, i64 0, i32 0, i32 1
  %88 = load float, float* %87, align 4
  br i1 %8, label %147, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %1, i64 0, i32 1, i32 2
  %91 = load float, float* %90, align 4
  %92 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %1, i64 0, i32 0, i32 2
  %93 = load float, float* %92, align 4
  %94 = bitcast %"class.viz::LayerQuad::Edge"* %10 to <2 x float>*
  %95 = load <2 x float>, <2 x float>* %94, align 4
  %96 = shufflevector <2 x float> %95, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %97 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %1, i64 0, i32 0, i32 0
  %98 = load float, float* %97, align 4
  %99 = insertelement <2 x float> undef, float %98, i32 0
  %100 = insertelement <2 x float> %99, float %88, i32 1
  %101 = fmul <2 x float> %96, %100
  %102 = insertelement <2 x float> undef, float %88, i32 0
  %103 = insertelement <2 x float> %102, float %91, i32 1
  %104 = insertelement <2 x float> undef, float %91, i32 0
  %105 = insertelement <2 x float> %104, float %98, i32 1
  %106 = fmul <2 x float> %103, %105
  %107 = insertelement <2 x float> undef, float %93, i32 0
  %108 = shufflevector <2 x float> %107, <2 x float> undef, <2 x i32> zeroinitializer
  %109 = fmul <2 x float> %96, %108
  %110 = fsub <2 x float> %106, %109
  %111 = shufflevector <2 x float> %101, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %112 = fsub <2 x float> %101, %111
  %113 = fdiv <2 x float> %110, %112
  %114 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %1, i64 0, i32 3, i32 2
  %115 = load float, float* %114, align 4
  %116 = bitcast %"class.viz::LayerQuad::Edge"* %15 to <2 x float>*
  %117 = load <2 x float>, <2 x float>* %116, align 4
  %118 = shufflevector <2 x float> %117, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %119 = insertelement <2 x float> undef, float %115, i32 0
  %120 = shufflevector <2 x float> %119, <2 x float> undef, <2 x i32> zeroinitializer
  %121 = fmul <2 x float> %96, %120
  %122 = shufflevector <2 x float> %104, <2 x float> undef, <2 x i32> zeroinitializer
  %123 = fmul <2 x float> %122, %118
  %124 = fmul <2 x float> %96, %117
  %125 = shufflevector <2 x float> %124, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %126 = fsub <2 x float> %124, %125
  %127 = fsub <2 x float> %121, %123
  %128 = shufflevector <2 x float> %126, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %129 = fdiv <2 x float> %127, %128
  %130 = fsub <2 x float> %123, %121
  %131 = fdiv <2 x float> %130, %126
  %132 = insertelement <2 x float> %102, float %98, i32 1
  %133 = fmul <2 x float> %132, %117
  %134 = fmul <2 x float> %108, %118
  %135 = fmul <2 x float> %132, %120
  %136 = fsub <2 x float> %134, %135
  %137 = shufflevector <2 x float> %133, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %138 = fsub <2 x float> %133, %137
  %139 = fdiv <2 x float> %136, %138
  %140 = bitcast %"class.gfx::QuadF"* %0 to <2 x float>*
  store <2 x float> %113, <2 x float>* %140, align 4
  %141 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 1
  %142 = bitcast %"class.gfx::PointF"* %141 to <2 x float>*
  store <2 x float> %129, <2 x float>* %142, align 4
  %143 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 2
  %144 = bitcast %"class.gfx::PointF"* %143 to <2 x float>*
  store <2 x float> %131, <2 x float>* %144, align 4
  %145 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 3
  %146 = bitcast %"class.gfx::PointF"* %145 to <2 x float>*
  store <2 x float> %139, <2 x float>* %146, align 4
  br label %293

147:                                              ; preds = %86
  br i1 %13, label %204, label %148

148:                                              ; preds = %147
  %149 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %1, i64 0, i32 2, i32 2
  %150 = load float, float* %149, align 4
  %151 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %1, i64 0, i32 0, i32 2
  %152 = load float, float* %151, align 4
  %153 = bitcast %"class.viz::LayerQuad::Edge"* %5 to <2 x float>*
  %154 = load <2 x float>, <2 x float>* %153, align 4
  %155 = shufflevector <2 x float> %154, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %156 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %1, i64 0, i32 0, i32 0
  %157 = load float, float* %156, align 4
  %158 = insertelement <2 x float> undef, float %88, i32 0
  %159 = insertelement <2 x float> %158, float %150, i32 1
  %160 = insertelement <2 x float> undef, float %150, i32 0
  %161 = insertelement <2 x float> %160, float %157, i32 1
  %162 = fmul <2 x float> %159, %161
  %163 = insertelement <2 x float> undef, float %152, i32 0
  %164 = shufflevector <2 x float> %163, <2 x float> undef, <2 x i32> zeroinitializer
  %165 = fmul <2 x float> %155, %164
  %166 = insertelement <2 x float> %158, float %157, i32 1
  %167 = fmul <2 x float> %166, %154
  %168 = shufflevector <2 x float> %167, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %169 = fsub <2 x float> %167, %168
  %170 = fsub <2 x float> %162, %165
  %171 = shufflevector <2 x float> %169, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %172 = fdiv <2 x float> %170, %171
  %173 = fsub <2 x float> %165, %162
  %174 = fdiv <2 x float> %173, %169
  %175 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %1, i64 0, i32 3, i32 2
  %176 = load float, float* %175, align 4
  %177 = bitcast %"class.viz::LayerQuad::Edge"* %15 to <2 x float>*
  %178 = load <2 x float>, <2 x float>* %177, align 4
  %179 = shufflevector <2 x float> %178, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %180 = fmul <2 x float> %154, %179
  %181 = insertelement <2 x float> undef, float %176, i32 0
  %182 = shufflevector <2 x float> %181, <2 x float> undef, <2 x i32> zeroinitializer
  %183 = fmul <2 x float> %155, %182
  %184 = shufflevector <2 x float> %160, <2 x float> undef, <2 x i32> zeroinitializer
  %185 = fmul <2 x float> %184, %179
  %186 = fsub <2 x float> %183, %185
  %187 = shufflevector <2 x float> %180, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %188 = fsub <2 x float> %180, %187
  %189 = fdiv <2 x float> %186, %188
  %190 = fmul <2 x float> %166, %178
  %191 = fmul <2 x float> %164, %179
  %192 = fmul <2 x float> %166, %182
  %193 = fsub <2 x float> %191, %192
  %194 = shufflevector <2 x float> %190, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %195 = fsub <2 x float> %190, %194
  %196 = fdiv <2 x float> %193, %195
  %197 = bitcast %"class.gfx::QuadF"* %0 to <2 x float>*
  store <2 x float> %172, <2 x float>* %197, align 4
  %198 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 1
  %199 = bitcast %"class.gfx::PointF"* %198 to <2 x float>*
  store <2 x float> %174, <2 x float>* %199, align 4
  %200 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 2
  %201 = bitcast %"class.gfx::PointF"* %200 to <2 x float>*
  store <2 x float> %189, <2 x float>* %201, align 4
  %202 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 3
  %203 = bitcast %"class.gfx::PointF"* %202 to <2 x float>*
  store <2 x float> %196, <2 x float>* %203, align 4
  br label %293

204:                                              ; preds = %147
  %205 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %1, i64 0, i32 1, i32 2
  %206 = load float, float* %205, align 4
  %207 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %1, i64 0, i32 0, i32 2
  %208 = load float, float* %207, align 4
  %209 = bitcast %"class.viz::LayerQuad::Edge"* %10 to <2 x float>*
  %210 = load <2 x float>, <2 x float>* %209, align 4
  %211 = shufflevector <2 x float> %210, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %212 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %1, i64 0, i32 0, i32 0
  %213 = load float, float* %212, align 4
  %214 = insertelement <2 x float> undef, float %213, i32 0
  %215 = insertelement <2 x float> %214, float %88, i32 1
  %216 = fmul <2 x float> %211, %215
  %217 = insertelement <2 x float> undef, float %88, i32 0
  %218 = insertelement <2 x float> %217, float %206, i32 1
  %219 = insertelement <2 x float> undef, float %206, i32 0
  %220 = insertelement <2 x float> %219, float %213, i32 1
  %221 = fmul <2 x float> %218, %220
  %222 = insertelement <2 x float> undef, float %208, i32 0
  %223 = shufflevector <2 x float> %222, <2 x float> undef, <2 x i32> zeroinitializer
  %224 = fmul <2 x float> %211, %223
  %225 = fsub <2 x float> %221, %224
  %226 = shufflevector <2 x float> %216, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %227 = fsub <2 x float> %216, %226
  %228 = fdiv <2 x float> %225, %227
  %229 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %1, i64 0, i32 2, i32 2
  %230 = load float, float* %229, align 4
  %231 = bitcast %"class.viz::LayerQuad::Edge"* %5 to <2 x float>*
  %232 = load <2 x float>, <2 x float>* %231, align 4
  %233 = shufflevector <2 x float> %232, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %234 = fmul <2 x float> %210, %233
  %235 = insertelement <2 x float> undef, float %230, i32 0
  %236 = shufflevector <2 x float> %235, <2 x float> undef, <2 x i32> zeroinitializer
  %237 = fmul <2 x float> %211, %236
  %238 = shufflevector <2 x float> %219, <2 x float> undef, <2 x i32> zeroinitializer
  %239 = fmul <2 x float> %238, %233
  %240 = fsub <2 x float> %237, %239
  %241 = shufflevector <2 x float> %234, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %242 = fsub <2 x float> %234, %241
  %243 = fdiv <2 x float> %240, %242
  br i1 %18, label %263, label %244

244:                                              ; preds = %204
  %245 = fmul <2 x float> %223, %233
  %246 = insertelement <2 x float> %217, float %213, i32 1
  %247 = fmul <2 x float> %246, %236
  %248 = fmul <2 x float> %215, %233
  %249 = shufflevector <2 x float> %248, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %250 = fsub <2 x float> %248, %249
  %251 = fsub <2 x float> %245, %247
  %252 = shufflevector <2 x float> %250, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %253 = fdiv <2 x float> %251, %252
  %254 = fsub <2 x float> %247, %245
  %255 = fdiv <2 x float> %254, %250
  %256 = bitcast %"class.gfx::QuadF"* %0 to <2 x float>*
  store <2 x float> %228, <2 x float>* %256, align 4
  %257 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 1
  %258 = bitcast %"class.gfx::PointF"* %257 to <2 x float>*
  store <2 x float> %243, <2 x float>* %258, align 4
  %259 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 2
  %260 = bitcast %"class.gfx::PointF"* %259 to <2 x float>*
  store <2 x float> %253, <2 x float>* %260, align 4
  %261 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 3
  %262 = bitcast %"class.gfx::PointF"* %261 to <2 x float>*
  store <2 x float> %255, <2 x float>* %262, align 4
  br label %293

263:                                              ; preds = %204
  %264 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %1, i64 0, i32 3, i32 2
  %265 = load float, float* %264, align 4
  %266 = bitcast %"class.viz::LayerQuad::Edge"* %15 to <2 x float>*
  %267 = load <2 x float>, <2 x float>* %266, align 4
  %268 = shufflevector <2 x float> %267, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %269 = fmul <2 x float> %232, %268
  %270 = insertelement <2 x float> undef, float %265, i32 0
  %271 = shufflevector <2 x float> %270, <2 x float> undef, <2 x i32> zeroinitializer
  %272 = fmul <2 x float> %233, %271
  %273 = fmul <2 x float> %236, %268
  %274 = fsub <2 x float> %272, %273
  %275 = shufflevector <2 x float> %269, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %276 = fsub <2 x float> %269, %275
  %277 = fdiv <2 x float> %274, %276
  %278 = insertelement <2 x float> %217, float %213, i32 1
  %279 = fmul <2 x float> %278, %267
  %280 = fmul <2 x float> %223, %268
  %281 = fmul <2 x float> %278, %271
  %282 = fsub <2 x float> %280, %281
  %283 = shufflevector <2 x float> %279, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %284 = fsub <2 x float> %279, %283
  %285 = fdiv <2 x float> %282, %284
  %286 = bitcast %"class.gfx::QuadF"* %0 to <2 x float>*
  store <2 x float> %228, <2 x float>* %286, align 4
  %287 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 1
  %288 = bitcast %"class.gfx::PointF"* %287 to <2 x float>*
  store <2 x float> %243, <2 x float>* %288, align 4
  %289 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 2
  %290 = bitcast %"class.gfx::PointF"* %289 to <2 x float>*
  store <2 x float> %277, <2 x float>* %290, align 4
  %291 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 3
  %292 = bitcast %"class.gfx::PointF"* %291 to <2 x float>*
  store <2 x float> %285, <2 x float>* %292, align 4
  br label %293

293:                                              ; preds = %263, %244, %148, %89, %25, %21
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK3viz9LayerQuad12ToFloatArrayEPf(%"class.viz::LayerQuad"* nocapture readonly, float*) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 0, i32 3
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 3
  %8 = bitcast %"class.viz::LayerQuad::Edge"* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = bitcast float* %1 to i32*
  store i32 %9, i32* %10, align 4
  %11 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 3, i32 1
  %12 = bitcast float* %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds float, float* %1, i64 1
  %15 = bitcast float* %14 to i32*
  store i32 %13, i32* %15, align 4
  %16 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 3, i32 2
  br label %27

17:                                               ; preds = %2
  %18 = bitcast %"class.viz::LayerQuad"* %0 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = bitcast float* %1 to i32*
  store i32 %19, i32* %20, align 4
  %21 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 0, i32 1
  %22 = bitcast float* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds float, float* %1, i64 1
  %25 = bitcast float* %24 to i32*
  store i32 %23, i32* %25, align 4
  %26 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 0, i32 2
  br label %27

27:                                               ; preds = %17, %6
  %28 = phi float* [ %26, %17 ], [ %16, %6 ]
  %29 = bitcast float* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds float, float* %1, i64 2
  %32 = bitcast float* %31 to i32*
  store i32 %30, i32* %32, align 4
  %33 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 1
  %34 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 1, i32 3
  %35 = load i8, i8* %34, align 4, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %48, label %37

37:                                               ; preds = %27
  %38 = bitcast %"class.viz::LayerQuad"* %0 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds float, float* %1, i64 3
  %41 = bitcast float* %40 to i32*
  store i32 %39, i32* %41, align 4
  %42 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 0, i32 1
  %43 = bitcast float* %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds float, float* %1, i64 4
  %46 = bitcast float* %45 to i32*
  store i32 %44, i32* %46, align 4
  %47 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 0, i32 2
  br label %59

48:                                               ; preds = %27
  %49 = bitcast %"class.viz::LayerQuad::Edge"* %33 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds float, float* %1, i64 3
  %52 = bitcast float* %51 to i32*
  store i32 %50, i32* %52, align 4
  %53 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 1, i32 1
  %54 = bitcast float* %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds float, float* %1, i64 4
  %57 = bitcast float* %56 to i32*
  store i32 %55, i32* %57, align 4
  %58 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 1, i32 2
  br label %59

59:                                               ; preds = %48, %37
  %60 = phi float* [ %58, %48 ], [ %47, %37 ]
  %61 = bitcast float* %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds float, float* %1, i64 5
  %64 = bitcast float* %63 to i32*
  store i32 %62, i32* %64, align 4
  %65 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 2
  %66 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 2, i32 3
  %67 = load i8, i8* %66, align 4, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %80, label %69

69:                                               ; preds = %59
  %70 = bitcast %"class.viz::LayerQuad::Edge"* %33 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds float, float* %1, i64 6
  %73 = bitcast float* %72 to i32*
  store i32 %71, i32* %73, align 4
  %74 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 1, i32 1
  %75 = bitcast float* %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds float, float* %1, i64 7
  %78 = bitcast float* %77 to i32*
  store i32 %76, i32* %78, align 4
  %79 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 1, i32 2
  br label %91

80:                                               ; preds = %59
  %81 = bitcast %"class.viz::LayerQuad::Edge"* %65 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds float, float* %1, i64 6
  %84 = bitcast float* %83 to i32*
  store i32 %82, i32* %84, align 4
  %85 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 2, i32 1
  %86 = bitcast float* %85 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds float, float* %1, i64 7
  %89 = bitcast float* %88 to i32*
  store i32 %87, i32* %89, align 4
  %90 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 2, i32 2
  br label %91

91:                                               ; preds = %80, %69
  %92 = phi float* [ %90, %80 ], [ %79, %69 ]
  %93 = bitcast float* %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = getelementptr inbounds float, float* %1, i64 8
  %96 = bitcast float* %95 to i32*
  store i32 %94, i32* %96, align 4
  %97 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 3, i32 3
  %98 = load i8, i8* %97, align 4, !range !2
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %111, label %100

100:                                              ; preds = %91
  %101 = bitcast %"class.viz::LayerQuad::Edge"* %65 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds float, float* %1, i64 9
  %104 = bitcast float* %103 to i32*
  store i32 %102, i32* %104, align 4
  %105 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 2, i32 1
  %106 = bitcast float* %105 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds float, float* %1, i64 10
  %109 = bitcast float* %108 to i32*
  store i32 %107, i32* %109, align 4
  %110 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 2, i32 2
  br label %123

111:                                              ; preds = %91
  %112 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 3
  %113 = bitcast %"class.viz::LayerQuad::Edge"* %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds float, float* %1, i64 9
  %116 = bitcast float* %115 to i32*
  store i32 %114, i32* %116, align 4
  %117 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 3, i32 1
  %118 = bitcast float* %117 to i32*
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr inbounds float, float* %1, i64 10
  %121 = bitcast float* %120 to i32*
  store i32 %119, i32* %121, align 4
  %122 = getelementptr inbounds %"class.viz::LayerQuad", %"class.viz::LayerQuad"* %0, i64 0, i32 3, i32 2
  br label %123

123:                                              ; preds = %111, %100
  %124 = phi float* [ %122, %111 ], [ %110, %100 ]
  %125 = bitcast float* %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds float, float* %1, i64 11
  %128 = bitcast float* %127 to i32*
  store i32 %126, i32* %128, align 4
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
