; ModuleID = '../../third_party/libzip/src/lib/zip_mkstempm.c'
source_filename = "../../third_party/libzip/src/lib/zip_mkstempm.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_zip_mkstempm(i8*, i32) local_unnamed_addr #0 {
  %3 = tail call i64 @strlen(i8* %0) #6
  %4 = getelementptr inbounds i8, i8* %0, i64 %3
  %5 = getelementptr inbounds i8, i8* %4, i64 -1
  %6 = icmp ult i8* %5, %0
  br i1 %6, label %24, label %7

7:                                                ; preds = %2, %12
  %8 = phi i8* [ %14, %12 ], [ %5, %2 ]
  %9 = phi i32 [ %13, %12 ], [ 0, %2 ]
  %10 = load i8, i8* %8, align 1
  %11 = icmp eq i8 %10, 88
  br i1 %11, label %12, label %16

12:                                               ; preds = %7
  %13 = add nuw nsw i32 %9, 1
  %14 = getelementptr inbounds i8, i8* %8, i64 -1
  %15 = icmp ult i8* %14, %0
  br i1 %15, label %18, label %7

16:                                               ; preds = %7
  %17 = icmp eq i32 %9, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %12, %16
  %19 = phi i8* [ %8, %16 ], [ %14, %12 ]
  %20 = getelementptr inbounds i8, i8* %19, i64 1
  %21 = icmp ult i8* %20, %4
  %22 = icmp eq i32 %1, -1
  %23 = select i1 %22, i32 438, i32 %1
  br label %26

24:                                               ; preds = %2, %16
  %25 = tail call i32* @__errno_location() #7
  store i32 22, i32* %25, align 4
  br label %49

26:                                               ; preds = %18, %45
  %27 = tail call i32 @zip_random_uint32() #8
  br i1 %21, label %28, label %39

28:                                               ; preds = %26, %28
  %29 = phi i8* [ %37, %28 ], [ %20, %26 ]
  %30 = phi i32 [ %36, %28 ], [ %27, %26 ]
  %31 = urem i32 %30, 36
  %32 = icmp ult i32 %31, 10
  %33 = trunc i32 %31 to i8
  %34 = select i1 %32, i8 48, i8 87
  %35 = add nuw nsw i8 %34, %33
  store i8 %35, i8* %29, align 1
  %36 = udiv i32 %30, 36
  %37 = getelementptr inbounds i8, i8* %29, i64 1
  %38 = icmp eq i8* %37, %4
  br i1 %38, label %39, label %28

39:                                               ; preds = %28, %26
  %40 = tail call i32 (i8*, i32, ...) @open64(i8* %0, i32 524482, i32 %23) #8
  %41 = icmp sgt i32 %40, -1
  br i1 %41, label %42, label %45

42:                                               ; preds = %39
  br i1 %22, label %49, label %43

43:                                               ; preds = %42
  %44 = tail call i32 @chmod(i8* %0, i32 %1) #8
  br label %49

45:                                               ; preds = %39
  %46 = tail call i32* @__errno_location() #7
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 17
  br i1 %48, label %26, label %49

49:                                               ; preds = %45, %43, %42, %24
  %50 = phi i32 [ -1, %24 ], [ %40, %42 ], [ %40, %43 ], [ -1, %45 ]
  ret i32 %50
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #2

declare i32 @zip_random_uint32() local_unnamed_addr #3

; Function Attrs: nofree
declare i32 @open64(i8* nocapture readonly, i32, ...) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare i32 @chmod(i8* nocapture readonly, i32) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind readnone }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
