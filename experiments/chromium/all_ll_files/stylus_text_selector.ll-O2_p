; ModuleID = '../../content/browser/renderer_host/input/stylus_text_selector.cc'
source_filename = "../../content/browser/renderer_host/input/stylus_text_selector.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.ui::GestureDetector::Config" = type <{ %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", float, float, float, float, i8, [3 x i8], float, float, i8, [3 x i8], float, [4 x i8], %"class.base::TimeDelta", i32, i8, i8, [2 x i8], i32, [4 x i8] }>
%"class.base::TimeDelta" = type { i64 }
%"class.content::StylusTextSelector" = type { %"class.ui::SimpleGestureListener", %"class.content::StylusTextSelectorClient"*, i8, i8, i32, float, float, %"class.std::__1::unique_ptr" }
%"class.ui::SimpleGestureListener" = type { %"class.ui::GestureListener", %"class.ui::DoubleTapListener" }
%"class.ui::GestureListener" = type { i32 (...)** }
%"class.ui::DoubleTapListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ui::GestureDetector"* }
%"class.ui::GestureDetector" = type { %"class.std::__1::unique_ptr.0", %"class.ui::GestureListener"*, %"class.ui::DoubleTapListener"*, float, float, float, float, float, float, float, float, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", i8, i8, i32, i32, i32, float, float, float, float, i8, i8, i8, i8, i8, i8, %"class.ui::VelocityTrackerState" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.ui::GestureDetector::TimeoutGestureHandler"* }
%"class.ui::GestureDetector::TimeoutGestureHandler" = type opaque
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.ui::MotionEvent"* }
%"class.ui::MotionEvent" = type { i32 (...)** }
%"class.ui::VelocityTrackerState" = type { %"class.ui::VelocityTracker", i32, %"struct.ui::BitSet32", [16 x %"struct.ui::VelocityTrackerState::Velocity"] }
%"class.ui::VelocityTracker" = type { %"class.base::TimeTicks", %"struct.ui::BitSet32", i32, %"class.std::__1::unique_ptr.10" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.ui::VelocityTrackerStrategy"* }
%"class.ui::VelocityTrackerStrategy" = type opaque
%"struct.ui::BitSet32" = type { i32 }
%"struct.ui::VelocityTrackerState::Velocity" = type { float, float }
%"class.content::StylusTextSelectorClient" = type { i32 (...)** }
%"struct.ui::GestureProvider::Config" = type <{ %"class.display::Display", %"struct.ui::GestureDetector::Config", %"struct.ui::ScaleGestureDetector::Config", i8, i8, [2 x i8], float, float, [4 x i8] }>
%"class.display::Display" = type { i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, %"class.absl::optional", i32, i32, %"class.gfx::Size", %"class.gfx::DisplayColorSpaces", i32, i32, i8, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.19" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.19" = type { %"class.absl::optional_internal::optional_data.20" }
%"class.absl::optional_internal::optional_data.20" = type { %"class.absl::optional_internal::optional_data_base.21" }
%"class.absl::optional_internal::optional_data_base.21" = type { %"class.absl::optional_internal::optional_data_dtor_base.22" }
%"class.absl::optional_internal::optional_data_dtor_base.22" = type { i8, %union.anon.23 }
%union.anon.23 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"struct.ui::ScaleGestureDetector::Config" = type <{ float, float, float, i8, [3 x i8] }>

$_ZN2ui21SimpleGestureListener11OnTapCancelERKNS_11MotionEventE = comdat any

@_ZTVN7content18StylusTextSelectorE = hidden unnamed_addr constant { [16 x i8*], [7 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::StylusTextSelector"*)* @_ZN7content18StylusTextSelectorD2Ev to i8*), i8* bitcast (void (%"class.content::StylusTextSelector"*)* @_ZN7content18StylusTextSelectorD0Ev to i8*), i8* bitcast (i1 (%"class.ui::SimpleGestureListener"*, %"class.ui::MotionEvent"*)* @_ZN2ui21SimpleGestureListener6OnDownERKNS_11MotionEventE to i8*), i8* bitcast (void (%"class.ui::SimpleGestureListener"*, %"class.ui::MotionEvent"*)* @_ZN2ui21SimpleGestureListener11OnShowPressERKNS_11MotionEventE to i8*), i8* bitcast (i1 (%"class.content::StylusTextSelector"*, %"class.ui::MotionEvent"*, i32)* @_ZN7content18StylusTextSelector13OnSingleTapUpERKN2ui11MotionEventEi to i8*), i8* bitcast (void (%"class.ui::SimpleGestureListener"*, %"class.ui::MotionEvent"*)* @_ZN2ui21SimpleGestureListener11OnLongPressERKNS_11MotionEventE to i8*), i8* bitcast (i1 (%"class.content::StylusTextSelector"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)* @_ZN7content18StylusTextSelector8OnScrollERKN2ui11MotionEventES4_S4_ff to i8*), i8* bitcast (i1 (%"class.ui::SimpleGestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)* @_ZN2ui21SimpleGestureListener7OnFlingERKNS_11MotionEventES3_ff to i8*), i8* bitcast (i1 (%"class.ui::SimpleGestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)* @_ZN2ui21SimpleGestureListener7OnSwipeERKNS_11MotionEventES3_ff to i8*), i8* bitcast (i1 (%"class.ui::SimpleGestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*)* @_ZN2ui21SimpleGestureListener14OnTwoFingerTapERKNS_11MotionEventES3_ to i8*), i8* bitcast (void (%"class.ui::SimpleGestureListener"*, %"class.ui::MotionEvent"*)* @_ZN2ui21SimpleGestureListener11OnTapCancelERKNS_11MotionEventE to i8*), i8* bitcast (i1 (%"class.ui::SimpleGestureListener"*, %"class.ui::MotionEvent"*)* @_ZN2ui21SimpleGestureListener20OnSingleTapConfirmedERKNS_11MotionEventE to i8*), i8* bitcast (i1 (%"class.ui::SimpleGestureListener"*, %"class.ui::MotionEvent"*)* @_ZN2ui21SimpleGestureListener11OnDoubleTapERKNS_11MotionEventE to i8*), i8* bitcast (i1 (%"class.ui::SimpleGestureListener"*, %"class.ui::MotionEvent"*)* @_ZN2ui21SimpleGestureListener16OnDoubleTapEventERKNS_11MotionEventE to i8*)], [7 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.content::StylusTextSelector"*)* @_ZThn8_N7content18StylusTextSelectorD1Ev to i8*), i8* bitcast (void (%"class.content::StylusTextSelector"*)* @_ZThn8_N7content18StylusTextSelectorD0Ev to i8*), i8* bitcast (i1 (%"class.ui::SimpleGestureListener"*, %"class.ui::MotionEvent"*)* @_ZThn8_N2ui21SimpleGestureListener20OnSingleTapConfirmedERKNS_11MotionEventE to i8*), i8* bitcast (i1 (%"class.ui::SimpleGestureListener"*, %"class.ui::MotionEvent"*)* @_ZThn8_N2ui21SimpleGestureListener11OnDoubleTapERKNS_11MotionEventE to i8*), i8* bitcast (i1 (%"class.ui::SimpleGestureListener"*, %"class.ui::MotionEvent"*)* @_ZThn8_N2ui21SimpleGestureListener16OnDoubleTapEventERKNS_11MotionEventE to i8*)] }, align 8
@__const._ZN7content12_GLOBAL__N_121CreateGestureDetectorEPN2ui15GestureListenerE.config = private unnamed_addr constant %"struct.ui::GestureDetector::Config" <{ %"class.base::TimeDelta" { i64 -6148914691236517206 }, %"class.base::TimeDelta" { i64 -6148914691236517206 }, %"class.base::TimeDelta" { i64 -6148914691236517206 }, %"class.base::TimeDelta" { i64 -6148914691236517206 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA", float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA", float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", %"class.base::TimeDelta" { i64 -6148914691236517206 }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, align 8

@_ZN7content18StylusTextSelectorC1EPNS_24StylusTextSelectorClientE = hidden unnamed_addr alias void (%"class.content::StylusTextSelector"*, %"class.content::StylusTextSelectorClient"*), void (%"class.content::StylusTextSelector"*, %"class.content::StylusTextSelectorClient"*)* @_ZN7content18StylusTextSelectorC2EPNS_24StylusTextSelectorClientE
@_ZN7content18StylusTextSelectorD1Ev = hidden unnamed_addr alias void (%"class.content::StylusTextSelector"*), void (%"class.content::StylusTextSelector"*)* @_ZN7content18StylusTextSelectorD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7content18StylusTextSelectorC2EPNS_24StylusTextSelectorClientE(%"class.content::StylusTextSelector"* nocapture, %"class.content::StylusTextSelectorClient"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.content::StylusTextSelector"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [7 x i8*] }, { [16 x i8*], [7 x i8*] }* @_ZTVN7content18StylusTextSelectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [7 x i8*] }, { [16 x i8*], [7 x i8*] }* @_ZTVN7content18StylusTextSelectorE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.content::StylusTextSelector", %"class.content::StylusTextSelector"* %0, i64 0, i32 1
  store %"class.content::StylusTextSelectorClient"* %1, %"class.content::StylusTextSelectorClient"** %4, align 8
  %5 = getelementptr inbounds %"class.content::StylusTextSelector", %"class.content::StylusTextSelector"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.content::StylusTextSelector", %"class.content::StylusTextSelector"* %0, i64 0, i32 3
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %"class.content::StylusTextSelector", %"class.content::StylusTextSelector"* %0, i64 0, i32 4
  %8 = bitcast i32* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 20, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content18StylusTextSelectorD2Ev(%"class.content::StylusTextSelector"* nocapture) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.content::StylusTextSelector"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [7 x i8*] }, { [16 x i8*], [7 x i8*] }* @_ZTVN7content18StylusTextSelectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [7 x i8*] }, { [16 x i8*], [7 x i8*] }* @_ZTVN7content18StylusTextSelectorE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.content::StylusTextSelector", %"class.content::StylusTextSelector"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load %"class.ui::GestureDetector"*, %"class.ui::GestureDetector"** %3, align 8
  store %"class.ui::GestureDetector"* null, %"class.ui::GestureDetector"** %3, align 8
  %5 = icmp eq %"class.ui::GestureDetector"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN2ui15GestureDetectorD1Ev(%"class.ui::GestureDetector"* nonnull %4) #7
  %7 = bitcast %"class.ui::GestureDetector"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N7content18StylusTextSelectorD1Ev(%"class.content::StylusTextSelector"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.content::StylusTextSelector", %"class.content::StylusTextSelector"* %0, i64 -1, i32 7
  %3 = bitcast %"class.std::__1::unique_ptr"* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [7 x i8*] }, { [16 x i8*], [7 x i8*] }* @_ZTVN7content18StylusTextSelectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [7 x i8*] }, { [16 x i8*], [7 x i8*] }* @_ZTVN7content18StylusTextSelectorE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 5, i32 0, i32 0, i32 0
  %5 = load %"class.ui::GestureDetector"*, %"class.ui::GestureDetector"** %4, align 8
  store %"class.ui::GestureDetector"* null, %"class.ui::GestureDetector"** %4, align 8
  %6 = icmp eq %"class.ui::GestureDetector"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  tail call void @_ZN2ui15GestureDetectorD1Ev(%"class.ui::GestureDetector"* nonnull %5) #7
  %8 = bitcast %"class.ui::GestureDetector"* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #8
  br label %9

9:                                                ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content18StylusTextSelectorD0Ev(%"class.content::StylusTextSelector"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.content::StylusTextSelector"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [7 x i8*] }, { [16 x i8*], [7 x i8*] }* @_ZTVN7content18StylusTextSelectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [7 x i8*] }, { [16 x i8*], [7 x i8*] }* @_ZTVN7content18StylusTextSelectorE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.content::StylusTextSelector", %"class.content::StylusTextSelector"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load %"class.ui::GestureDetector"*, %"class.ui::GestureDetector"** %3, align 8
  store %"class.ui::GestureDetector"* null, %"class.ui::GestureDetector"** %3, align 8
  %5 = icmp eq %"class.ui::GestureDetector"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN2ui15GestureDetectorD1Ev(%"class.ui::GestureDetector"* nonnull %4) #7
  %7 = bitcast %"class.ui::GestureDetector"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = bitcast %"class.content::StylusTextSelector"* %0 to i8*
  tail call void @_ZdlPv(i8* %9) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N7content18StylusTextSelectorD0Ev(%"class.content::StylusTextSelector"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.content::StylusTextSelector", %"class.content::StylusTextSelector"* %0, i64 -1, i32 7
  %3 = bitcast %"class.std::__1::unique_ptr"* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [7 x i8*] }, { [16 x i8*], [7 x i8*] }* @_ZTVN7content18StylusTextSelectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [7 x i8*] }, { [16 x i8*], [7 x i8*] }* @_ZTVN7content18StylusTextSelectorE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 5, i32 0, i32 0, i32 0
  %5 = load %"class.ui::GestureDetector"*, %"class.ui::GestureDetector"** %4, align 8
  store %"class.ui::GestureDetector"* null, %"class.ui::GestureDetector"** %4, align 8
  %6 = icmp eq %"class.ui::GestureDetector"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  tail call void @_ZN2ui15GestureDetectorD1Ev(%"class.ui::GestureDetector"* nonnull %5) #7
  %8 = bitcast %"class.ui::GestureDetector"* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #8
  br label %9

9:                                                ; preds = %1, %7
  %10 = bitcast %"class.std::__1::unique_ptr"* %2 to i8*
  tail call void @_ZdlPv(i8* %10) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content18StylusTextSelector12OnTouchEventERKN2ui11MotionEventE(%"class.content::StylusTextSelector"*, %"class.ui::MotionEvent"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"struct.ui::GestureDetector::Config", align 8
  %4 = alloca %"struct.ui::GestureProvider::Config", align 8
  %5 = bitcast %"class.ui::MotionEvent"* %1 to i32 (%"class.ui::MotionEvent"*)***
  %6 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %6, i64 3
  %8 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %7, align 8
  %9 = tail call i32 %8(%"class.ui::MotionEvent"* %1) #7
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.content::StylusTextSelector", %"class.content::StylusTextSelector"* %0, i64 0, i32 2
  %13 = load i8, i8* %12, align 8, !range !2
  br label %37

14:                                               ; preds = %2
  %15 = bitcast %"class.ui::MotionEvent"* %1 to i32 (%"class.ui::MotionEvent"*, i64)***
  %16 = load i32 (%"class.ui::MotionEvent"*, i64)**, i32 (%"class.ui::MotionEvent"*, i64)*** %15, align 8
  %17 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %16, i64 19
  %18 = load i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %17, align 8
  %19 = tail call i32 %18(%"class.ui::MotionEvent"* %1, i64 0) #7
  %20 = icmp eq i32 %19, 2
  %21 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %5, align 8
  %22 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %21, i64 20
  %23 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %22, align 8
  %24 = tail call i32 %23(%"class.ui::MotionEvent"* %1) #7
  %25 = icmp eq i32 %24, 2
  br i1 %25, label %32, label %26

26:                                               ; preds = %14
  %27 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %5, align 8
  %28 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %27, i64 20
  %29 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %28, align 8
  %30 = tail call i32 %29(%"class.ui::MotionEvent"* %1) #7
  %31 = icmp eq i32 %30, 32
  br label %32

32:                                               ; preds = %14, %26
  %33 = phi i1 [ true, %14 ], [ %31, %26 ]
  %34 = and i1 %20, %33
  %35 = getelementptr inbounds %"class.content::StylusTextSelector", %"class.content::StylusTextSelector"* %0, i64 0, i32 2
  %36 = zext i1 %34 to i8
  store i8 %36, i8* %35, align 8
  br label %37

37:                                               ; preds = %11, %32
  %38 = phi i8 [ %13, %11 ], [ %36, %32 ]
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %140, label %40

40:                                               ; preds = %37
  %41 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %5, align 8
  %42 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %41, i64 20
  %43 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %42, align 8
  %44 = tail call i32 %43(%"class.ui::MotionEvent"* %1) #7
  %45 = icmp eq i32 %44, 2
  br i1 %45, label %53, label %46

46:                                               ; preds = %40
  %47 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %5, align 8
  %48 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %47, i64 20
  %49 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %48, align 8
  %50 = tail call i32 %49(%"class.ui::MotionEvent"* %1) #7
  %51 = icmp eq i32 %50, 32
  %52 = zext i1 %51 to i8
  br label %53

53:                                               ; preds = %46, %40
  %54 = phi i8 [ 1, %40 ], [ %52, %46 ]
  %55 = getelementptr inbounds %"class.content::StylusTextSelector", %"class.content::StylusTextSelector"* %0, i64 0, i32 3
  store i8 %54, i8* %55, align 1
  %56 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %5, align 8
  %57 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %56, i64 3
  %58 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %57, align 8
  %59 = tail call i32 %58(%"class.ui::MotionEvent"* %1) #7
  switch i32 %59, label %115 [
    i32 1, label %60
    i32 3, label %73
    i32 2, label %93
    i32 4, label %93
  ]

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.content::StylusTextSelector", %"class.content::StylusTextSelector"* %0, i64 0, i32 4
  store i32 0, i32* %61, align 4
  %62 = bitcast %"class.ui::MotionEvent"* %1 to float (%"class.ui::MotionEvent"*, i64)***
  %63 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %62, align 8
  %64 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %63, i64 7
  %65 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %64, align 8
  %66 = tail call float %65(%"class.ui::MotionEvent"* %1, i64 0) #7
  %67 = getelementptr inbounds %"class.content::StylusTextSelector", %"class.content::StylusTextSelector"* %0, i64 0, i32 5
  store float %66, float* %67, align 8
  %68 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %62, align 8
  %69 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %68, i64 8
  %70 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %69, align 8
  %71 = tail call float %70(%"class.ui::MotionEvent"* %1, i64 0) #7
  %72 = getelementptr inbounds %"class.content::StylusTextSelector", %"class.content::StylusTextSelector"* %0, i64 0, i32 6
  store float %71, float* %72, align 4
  br label %115

73:                                               ; preds = %53
  %74 = load i8, i8* %55, align 1, !range !2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %115

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.content::StylusTextSelector", %"class.content::StylusTextSelector"* %0, i64 0, i32 4
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %81

80:                                               ; preds = %76
  store i32 2, i32* %77, align 4
  br label %81

81:                                               ; preds = %80, %76
  %82 = bitcast %"class.ui::MotionEvent"* %1 to float (%"class.ui::MotionEvent"*, i64)***
  %83 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %82, align 8
  %84 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %83, i64 7
  %85 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %84, align 8
  %86 = tail call float %85(%"class.ui::MotionEvent"* %1, i64 0) #7
  %87 = getelementptr inbounds %"class.content::StylusTextSelector", %"class.content::StylusTextSelector"* %0, i64 0, i32 5
  store float %86, float* %87, align 8
  %88 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %82, align 8
  %89 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %88, i64 8
  %90 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %89, align 8
  %91 = tail call float %90(%"class.ui::MotionEvent"* %1, i64 0) #7
  %92 = getelementptr inbounds %"class.content::StylusTextSelector", %"class.content::StylusTextSelector"* %0, i64 0, i32 6
  store float %91, float* %92, align 4
  br label %115

93:                                               ; preds = %53, %53
  %94 = getelementptr inbounds %"class.content::StylusTextSelector", %"class.content::StylusTextSelector"* %0, i64 0, i32 4
  %95 = load i32, i32* %94, align 4
  %96 = add i32 %95, -1
  %97 = icmp ult i32 %96, 2
  br i1 %97, label %98, label %114

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.content::StylusTextSelector", %"class.content::StylusTextSelector"* %0, i64 0, i32 1
  %100 = load %"class.content::StylusTextSelectorClient"*, %"class.content::StylusTextSelectorClient"** %99, align 8
  %101 = bitcast %"class.ui::MotionEvent"* %1 to float (%"class.ui::MotionEvent"*, i64)***
  %102 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %101, align 8
  %103 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %102, i64 7
  %104 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %103, align 8
  %105 = tail call float %104(%"class.ui::MotionEvent"* %1, i64 0) #7
  %106 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %101, align 8
  %107 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %106, i64 8
  %108 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %107, align 8
  %109 = tail call float %108(%"class.ui::MotionEvent"* %1, i64 0) #7
  %110 = bitcast %"class.content::StylusTextSelectorClient"* %100 to void (%"class.content::StylusTextSelectorClient"*, float, float)***
  %111 = load void (%"class.content::StylusTextSelectorClient"*, float, float)**, void (%"class.content::StylusTextSelectorClient"*, float, float)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.content::StylusTextSelectorClient"*, float, float)*, void (%"class.content::StylusTextSelectorClient"*, float, float)** %111, i64 4
  %113 = load void (%"class.content::StylusTextSelectorClient"*, float, float)*, void (%"class.content::StylusTextSelectorClient"*, float, float)** %112, align 8
  tail call void %113(%"class.content::StylusTextSelectorClient"* %100, float %105, float %109) #7
  br label %114

114:                                              ; preds = %93, %98
  store i32 0, i32* %94, align 4
  br label %115

115:                                              ; preds = %73, %81, %53, %114, %60
  %116 = getelementptr inbounds %"class.content::StylusTextSelector", %"class.content::StylusTextSelector"* %0, i64 0, i32 7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = load %"class.ui::GestureDetector"*, %"class.ui::GestureDetector"** %117, align 8
  %119 = icmp eq %"class.ui::GestureDetector"* %118, null
  br i1 %119, label %120, label %137

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.content::StylusTextSelector", %"class.content::StylusTextSelector"* %0, i64 0, i32 0, i32 0
  %122 = bitcast %"struct.ui::GestureDetector::Config"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %122) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %122, i8* align 8 bitcast (%"struct.ui::GestureDetector::Config"* @__const._ZN7content12_GLOBAL__N_121CreateGestureDetectorEPN2ui15GestureListenerE.config to i8*), i64 96, i1 false) #7
  %123 = bitcast %"struct.ui::GestureProvider::Config"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 696, i8* nonnull %123) #7
  call void @_ZN2ui24GetGestureProviderConfigENS_25GestureProviderConfigTypeE(%"struct.ui::GestureProvider::Config"* nonnull sret %4, i32 0) #7
  %124 = getelementptr inbounds %"struct.ui::GestureProvider::Config", %"struct.ui::GestureProvider::Config"* %4, i64 0, i32 1
  call void @_ZN2ui15GestureDetector6ConfigC1ERKS1_(%"struct.ui::GestureDetector::Config"* nonnull %3, %"struct.ui::GestureDetector::Config"* dereferenceable(96) %124) #7
  call void @_ZN2ui15GestureProvider6ConfigD1Ev(%"struct.ui::GestureProvider::Config"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 696, i8* nonnull %123) #7
  %125 = call i8* @_Znwm(i64 312) #8
  %126 = bitcast i8* %125 to %"class.ui::GestureDetector"*
  call void @_ZN2ui15GestureDetectorC1ERKNS0_6ConfigEPNS_15GestureListenerEPNS_17DoubleTapListenerE(%"class.ui::GestureDetector"* nonnull %126, %"struct.ui::GestureDetector::Config"* nonnull dereferenceable(96) %3, %"class.ui::GestureListener"* %121, %"class.ui::DoubleTapListener"* null) #7
  %127 = getelementptr inbounds i8, i8* %125, i64 146
  store i8 0, i8* %127, align 2
  %128 = getelementptr inbounds i8, i8* %125, i64 147
  store i8 0, i8* %128, align 1
  call void @_ZN2ui15GestureDetector6ConfigD1Ev(%"struct.ui::GestureDetector::Config"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %122) #7
  %129 = ptrtoint i8* %125 to i64
  %130 = load %"class.ui::GestureDetector"*, %"class.ui::GestureDetector"** %117, align 8
  %131 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  store i64 %129, i64* %131, align 8
  %132 = icmp eq %"class.ui::GestureDetector"* %130, null
  %133 = bitcast i8* %125 to %"class.ui::GestureDetector"*
  br i1 %132, label %137, label %134

134:                                              ; preds = %120
  call void @_ZN2ui15GestureDetectorD1Ev(%"class.ui::GestureDetector"* nonnull %130) #7
  %135 = bitcast %"class.ui::GestureDetector"* %130 to i8*
  call void @_ZdlPv(i8* %135) #8
  %136 = load %"class.ui::GestureDetector"*, %"class.ui::GestureDetector"** %117, align 8
  br label %137

137:                                              ; preds = %115, %120, %134
  %138 = phi %"class.ui::GestureDetector"* [ %118, %115 ], [ %133, %120 ], [ %136, %134 ]
  %139 = call zeroext i1 @_ZN2ui15GestureDetector12OnTouchEventERKNS_11MotionEventEb(%"class.ui::GestureDetector"* %138, %"class.ui::MotionEvent"* dereferenceable(8) %1, i1 zeroext false) #7
  br label %140

140:                                              ; preds = %37, %137
  %141 = phi i1 [ true, %137 ], [ false, %37 ]
  ret i1 %141
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content18StylusTextSelector24ShouldStartTextSelectionERKN2ui11MotionEventE(%"class.ui::MotionEvent"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %2 = bitcast %"class.ui::MotionEvent"* %0 to i32 (%"class.ui::MotionEvent"*, i64)***
  %3 = load i32 (%"class.ui::MotionEvent"*, i64)**, i32 (%"class.ui::MotionEvent"*, i64)*** %2, align 8
  %4 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %3, i64 19
  %5 = load i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %4, align 8
  %6 = tail call i32 %5(%"class.ui::MotionEvent"* %0, i64 0) #7
  %7 = icmp eq i32 %6, 2
  %8 = bitcast %"class.ui::MotionEvent"* %0 to i32 (%"class.ui::MotionEvent"*)***
  %9 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %8, align 8
  %10 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %9, i64 20
  %11 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %10, align 8
  %12 = tail call i32 %11(%"class.ui::MotionEvent"* %0) #7
  %13 = icmp eq i32 %12, 2
  br i1 %13, label %20, label %14

14:                                               ; preds = %1
  %15 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %8, align 8
  %16 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %15, i64 20
  %17 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %16, align 8
  %18 = tail call i32 %17(%"class.ui::MotionEvent"* %0) #7
  %19 = icmp eq i32 %18, 32
  br label %20

20:                                               ; preds = %14, %1
  %21 = phi i1 [ true, %1 ], [ %19, %14 ]
  %22 = and i1 %7, %21
  ret i1 %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZN2ui15GestureDetector12OnTouchEventERKNS_11MotionEventEb(%"class.ui::GestureDetector"*, %"class.ui::MotionEvent"* dereferenceable(8), i1 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content18StylusTextSelector13OnSingleTapUpERKN2ui11MotionEventEi(%"class.content::StylusTextSelector"* nocapture readonly, %"class.ui::MotionEvent"* dereferenceable(8), i32) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.content::StylusTextSelector", %"class.content::StylusTextSelector"* %0, i64 0, i32 1
  %5 = load %"class.content::StylusTextSelectorClient"*, %"class.content::StylusTextSelectorClient"** %4, align 8
  %6 = bitcast %"class.ui::MotionEvent"* %1 to i64 (%"class.ui::MotionEvent"*)***
  %7 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %6, align 8
  %8 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %7, i64 22
  %9 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %8, align 8
  %10 = tail call i64 %9(%"class.ui::MotionEvent"* %1) #7
  %11 = bitcast %"class.ui::MotionEvent"* %1 to float (%"class.ui::MotionEvent"*, i64)***
  %12 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %11, align 8
  %13 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %12, i64 7
  %14 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %13, align 8
  %15 = tail call float %14(%"class.ui::MotionEvent"* %1, i64 0) #7
  %16 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %11, align 8
  %17 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %16, i64 8
  %18 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %17, align 8
  %19 = tail call float %18(%"class.ui::MotionEvent"* %1, i64 0) #7
  %20 = bitcast %"class.content::StylusTextSelectorClient"* %5 to void (%"class.content::StylusTextSelectorClient"*, i64, float, float)***
  %21 = load void (%"class.content::StylusTextSelectorClient"*, i64, float, float)**, void (%"class.content::StylusTextSelectorClient"*, i64, float, float)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.content::StylusTextSelectorClient"*, i64, float, float)*, void (%"class.content::StylusTextSelectorClient"*, i64, float, float)** %21, i64 5
  %23 = load void (%"class.content::StylusTextSelectorClient"*, i64, float, float)*, void (%"class.content::StylusTextSelectorClient"*, i64, float, float)** %22, align 8
  tail call void %23(%"class.content::StylusTextSelectorClient"* %5, i64 %10, float %15, float %19) #7
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content18StylusTextSelector8OnScrollERKN2ui11MotionEventES4_S4_ff(%"class.content::StylusTextSelector"* nocapture, %"class.ui::MotionEvent"* nocapture readnone dereferenceable(8), %"class.ui::MotionEvent"* dereferenceable(8), %"class.ui::MotionEvent"* nocapture readnone dereferenceable(8), float, float) unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"class.content::StylusTextSelector", %"class.content::StylusTextSelector"* %0, i64 0, i32 3
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %49, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.content::StylusTextSelector", %"class.content::StylusTextSelector"* %0, i64 0, i32 4
  %12 = load i32, i32* %11, align 4
  switch i32 %12, label %33 [
    i32 0, label %13
    i32 2, label %13
  ]

13:                                               ; preds = %10, %10
  store i32 1, i32* %11, align 4
  %14 = getelementptr inbounds %"class.content::StylusTextSelector", %"class.content::StylusTextSelector"* %0, i64 0, i32 1
  %15 = load %"class.content::StylusTextSelectorClient"*, %"class.content::StylusTextSelectorClient"** %14, align 8
  %16 = getelementptr inbounds %"class.content::StylusTextSelector", %"class.content::StylusTextSelector"* %0, i64 0, i32 5
  %17 = load float, float* %16, align 8
  %18 = getelementptr inbounds %"class.content::StylusTextSelector", %"class.content::StylusTextSelector"* %0, i64 0, i32 6
  %19 = load float, float* %18, align 4
  %20 = bitcast %"class.ui::MotionEvent"* %2 to float (%"class.ui::MotionEvent"*, i64)***
  %21 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %20, align 8
  %22 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %21, i64 7
  %23 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %22, align 8
  %24 = tail call float %23(%"class.ui::MotionEvent"* %2, i64 0) #7
  %25 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %20, align 8
  %26 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %25, i64 8
  %27 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %26, align 8
  %28 = tail call float %27(%"class.ui::MotionEvent"* %2, i64 0) #7
  %29 = bitcast %"class.content::StylusTextSelectorClient"* %15 to void (%"class.content::StylusTextSelectorClient"*, float, float, float, float)***
  %30 = load void (%"class.content::StylusTextSelectorClient"*, float, float, float, float)**, void (%"class.content::StylusTextSelectorClient"*, float, float, float, float)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.content::StylusTextSelectorClient"*, float, float, float, float)*, void (%"class.content::StylusTextSelectorClient"*, float, float, float, float)** %30, i64 2
  %32 = load void (%"class.content::StylusTextSelectorClient"*, float, float, float, float)*, void (%"class.content::StylusTextSelectorClient"*, float, float, float, float)** %31, align 8
  tail call void %32(%"class.content::StylusTextSelectorClient"* %15, float %17, float %19, float %24, float %28) #7
  br label %49

33:                                               ; preds = %10
  %34 = getelementptr inbounds %"class.content::StylusTextSelector", %"class.content::StylusTextSelector"* %0, i64 0, i32 1
  %35 = load %"class.content::StylusTextSelectorClient"*, %"class.content::StylusTextSelectorClient"** %34, align 8
  %36 = bitcast %"class.ui::MotionEvent"* %2 to float (%"class.ui::MotionEvent"*, i64)***
  %37 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %36, align 8
  %38 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %37, i64 7
  %39 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %38, align 8
  %40 = tail call float %39(%"class.ui::MotionEvent"* %2, i64 0) #7
  %41 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %36, align 8
  %42 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %41, i64 8
  %43 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %42, align 8
  %44 = tail call float %43(%"class.ui::MotionEvent"* %2, i64 0) #7
  %45 = bitcast %"class.content::StylusTextSelectorClient"* %35 to void (%"class.content::StylusTextSelectorClient"*, float, float)***
  %46 = load void (%"class.content::StylusTextSelectorClient"*, float, float)**, void (%"class.content::StylusTextSelectorClient"*, float, float)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.content::StylusTextSelectorClient"*, float, float)*, void (%"class.content::StylusTextSelectorClient"*, float, float)** %46, i64 3
  %48 = load void (%"class.content::StylusTextSelectorClient"*, float, float)*, void (%"class.content::StylusTextSelectorClient"*, float, float)** %47, align 8
  tail call void %48(%"class.content::StylusTextSelectorClient"* %35, float %40, float %44) #7
  br label %49

49:                                               ; preds = %13, %33, %6
  ret i1 true
}

declare zeroext i1 @_ZN2ui21SimpleGestureListener6OnDownERKNS_11MotionEventE(%"class.ui::SimpleGestureListener"*, %"class.ui::MotionEvent"* dereferenceable(8)) unnamed_addr #4

declare void @_ZN2ui21SimpleGestureListener11OnShowPressERKNS_11MotionEventE(%"class.ui::SimpleGestureListener"*, %"class.ui::MotionEvent"* dereferenceable(8)) unnamed_addr #4

declare void @_ZN2ui21SimpleGestureListener11OnLongPressERKNS_11MotionEventE(%"class.ui::SimpleGestureListener"*, %"class.ui::MotionEvent"* dereferenceable(8)) unnamed_addr #4

declare zeroext i1 @_ZN2ui21SimpleGestureListener7OnFlingERKNS_11MotionEventES3_ff(%"class.ui::SimpleGestureListener"*, %"class.ui::MotionEvent"* dereferenceable(8), %"class.ui::MotionEvent"* dereferenceable(8), float, float) unnamed_addr #4

declare zeroext i1 @_ZN2ui21SimpleGestureListener7OnSwipeERKNS_11MotionEventES3_ff(%"class.ui::SimpleGestureListener"*, %"class.ui::MotionEvent"* dereferenceable(8), %"class.ui::MotionEvent"* dereferenceable(8), float, float) unnamed_addr #4

declare zeroext i1 @_ZN2ui21SimpleGestureListener14OnTwoFingerTapERKNS_11MotionEventES3_(%"class.ui::SimpleGestureListener"*, %"class.ui::MotionEvent"* dereferenceable(8), %"class.ui::MotionEvent"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui21SimpleGestureListener11OnTapCancelERKNS_11MotionEventE(%"class.ui::SimpleGestureListener"*, %"class.ui::MotionEvent"* dereferenceable(8)) unnamed_addr #1 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN2ui21SimpleGestureListener20OnSingleTapConfirmedERKNS_11MotionEventE(%"class.ui::SimpleGestureListener"*, %"class.ui::MotionEvent"* dereferenceable(8)) unnamed_addr #4

declare zeroext i1 @_ZN2ui21SimpleGestureListener11OnDoubleTapERKNS_11MotionEventE(%"class.ui::SimpleGestureListener"*, %"class.ui::MotionEvent"* dereferenceable(8)) unnamed_addr #4

declare zeroext i1 @_ZN2ui21SimpleGestureListener16OnDoubleTapEventERKNS_11MotionEventE(%"class.ui::SimpleGestureListener"*, %"class.ui::MotionEvent"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn8_N2ui21SimpleGestureListener20OnSingleTapConfirmedERKNS_11MotionEventE(%"class.ui::SimpleGestureListener"*, %"class.ui::MotionEvent"* dereferenceable(8)) unnamed_addr #1 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn8_N2ui21SimpleGestureListener11OnDoubleTapERKNS_11MotionEventE(%"class.ui::SimpleGestureListener"*, %"class.ui::MotionEvent"* dereferenceable(8)) unnamed_addr #1 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn8_N2ui21SimpleGestureListener16OnDoubleTapEventERKNS_11MotionEventE(%"class.ui::SimpleGestureListener"*, %"class.ui::MotionEvent"* dereferenceable(8)) unnamed_addr #1 align 2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN2ui24GetGestureProviderConfigENS_25GestureProviderConfigTypeE(%"struct.ui::GestureProvider::Config"* sret, i32) local_unnamed_addr #4

declare void @_ZN2ui15GestureDetector6ConfigC1ERKS1_(%"struct.ui::GestureDetector::Config"*, %"struct.ui::GestureDetector::Config"* dereferenceable(96)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2ui15GestureProvider6ConfigD1Ev(%"struct.ui::GestureProvider::Config"*) unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN2ui15GestureDetectorC1ERKNS0_6ConfigEPNS_15GestureListenerEPNS_17DoubleTapListenerE(%"class.ui::GestureDetector"*, %"struct.ui::GestureDetector::Config"* dereferenceable(96), %"class.ui::GestureListener"*, %"class.ui::DoubleTapListener"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2ui15GestureDetector6ConfigD1Ev(%"struct.ui::GestureDetector::Config"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN2ui15GestureDetectorD1Ev(%"class.ui::GestureDetector"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
