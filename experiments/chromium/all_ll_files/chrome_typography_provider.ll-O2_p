; ModuleID = '../../chrome/browser/ui/views/chrome_typography_provider.cc'
source_filename = "../../chrome/browser/ui/views/chrome_typography_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.ui::ResourceBundle::FontDetails" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.ChromeTypographyProvider = type { %"class.views::TypographyProvider" }
%"class.views::TypographyProvider" = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.views::View" = type <{ %"class.ui::LayerDelegate", %"class.ui::LayerObserver", %"class.ui::LayerOwner", %"class.ui::AcceleratorTarget", %"class.ui::EventTarget", %"class.ui::EventHandler", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", i8, [3 x i8], i32, i32, [4 x i8], %"class.views::View"*, %"class.std::__1::vector.40", i8, [3 x i8], %"class.absl::optional", %"class.gfx::Rect", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.48", %class.SkPath, i8, [7 x i8], %"class.std::__1::unique_ptr.67", %"class.absl::optional.73", i8, [7 x i8], %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.84", %"class.ui::PaintCache", i8, [7 x i8], %"class.ui::NativeTheme"*, i8, %"class.absl::optional.110", i8, i8, [3 x i8], %"class.std::__1::vector.115", %"class.std::__1::unique_ptr.122", %"class.views::FocusManager"*, %"class.std::__1::unique_ptr.128", i64, %"class.views::View"*, %"class.views::View"*, i32, [4 x i8], %"class.views::ContextMenuController"*, %"class.views::DragController"*, %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.141", %"class.base::ObserverList.147", i32, [4 x i8] }>
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerObserver" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.ui::Layer"*, %"class.base::ObserverList" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.4" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::AcceleratorTarget" = type { i32 (...)** }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.9", %"class.std::__1::vector.16", %"class.ui::EventHandler"* }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.11" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type opaque
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.23", %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { i64 }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.31" }
%"class.std::__1::map.31" = type { %"class.std::__1::__tree.32" }
%"class.std::__1::__tree.32" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.33", %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"class.views::View"**, %"class.views::View"**, %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.views::View"** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.47 }
%union.anon.47 = type { %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::vector.40"* }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.57", %"struct.std::__1::atomic.57", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.55, %class.SkTDArray.56, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.55 = type { i8*, i32, i32 }
%class.SkTDArray.56 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.62 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.57" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.62 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.63", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.63" = type { %"struct.std::__1::__atomic_base.64" }
%"struct.std::__1::__atomic_base.64" = type { %"struct.std::__1::__cxx_atomic_impl.65" }
%"struct.std::__1::__cxx_atomic_impl.65" = type { %"struct.std::__1::__cxx_atomic_base_impl.66" }
%"struct.std::__1::__cxx_atomic_base_impl.66" = type { i8 }
%"struct.std::__1::atomic.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__cxx_atomic_impl.60" }
%"struct.std::__1::__cxx_atomic_impl.60" = type { %"struct.std::__1::__cxx_atomic_base_impl.61" }
%"struct.std::__1::__cxx_atomic_base_impl.61" = type { i8 }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.views::LayoutManager"* }
%"class.views::LayoutManager" = type { i32 (...)**, %"class.views::View"* }
%"class.absl::optional.73" = type { %"class.absl::optional_internal::optional_data.74" }
%"class.absl::optional_internal::optional_data.74" = type { %"class.absl::optional_internal::optional_data_base.75" }
%"class.absl::optional_internal::optional_data_base.75" = type { %"class.absl::optional_internal::optional_data_dtor_base.76" }
%"class.absl::optional_internal::optional_data_dtor_base.76" = type { i8, %union.anon.77 }
%union.anon.77 = type { %"class.views::View::DefaultFillLayout" }
%"class.views::View::DefaultFillLayout" = type { %"class.views::LayoutManager" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.views::Background"* }
%"class.views::Background" = type opaque
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.views::Border"* }
%"class.views::Border" = type opaque
%"class.ui::PaintCache" = type <{ %class.sk_sp.90, float, [4 x i8] }>
%class.sk_sp.90 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.91", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i8* }
%"class.ui::NativeTheme" = type <{ i32 (...)**, %"class.std::__1::map.95", %"class.base::ObserverList.106", i8, i8, [2 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::map.95" = type { %"class.std::__1::__tree.96" }
%"class.std::__1::__tree.96" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.97", %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.base::ObserverList.106" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.107", i64, i32, [4 x i8] }>
%"class.base::LinkedList.107" = type { %"class.base::LinkNode.108" }
%"class.base::LinkNode.108" = type { %"class.base::internal::LinkNodeBase" }
%"class.absl::optional.110" = type { %"class.absl::optional_internal::optional_data.111" }
%"class.absl::optional_internal::optional_data.111" = type { %"class.absl::optional_internal::optional_data_base.112" }
%"class.absl::optional_internal::optional_data_base.112" = type { %"class.absl::optional_internal::optional_data_dtor_base.113" }
%"class.absl::optional_internal::optional_data_dtor_base.113" = type { i8, %union.anon.114 }
%union.anon.114 = type { i8 }
%"class.std::__1::vector.115" = type { %"class.std::__1::__vector_base.116" }
%"class.std::__1::__vector_base.116" = type { %"class.ui::Layer"**, %"class.ui::Layer"**, %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.ui::Layer"** }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.views::ViewMaskLayer"* }
%"class.views::ViewMaskLayer" = type opaque
%"class.views::FocusManager" = type opaque
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.std::__1::vector.131"* }
%"class.std::__1::vector.131" = type opaque
%"class.views::ContextMenuController" = type opaque
%"class.views::DragController" = type opaque
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.views::ViewTargeter"* }
%"class.views::ViewTargeter" = type { %"class.ui::EventTargeter", %"class.views::ViewTargeterDelegate"* }
%"class.ui::EventTargeter" = type { i32 (...)** }
%"class.views::ViewTargeterDelegate" = type opaque
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.views::ViewAccessibility"* }
%"class.views::ViewAccessibility" = type opaque
%"class.base::ObserverList.147" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.148", i64, i32, [4 x i8] }>
%"class.base::LinkedList.148" = type { %"class.base::LinkNode.149" }
%"class.base::LinkNode.149" = type { %"class.base::internal::LinkNodeBase" }
%"class.ui::ThemeProvider" = type { i32 (...)** }
%"class.gfx::FontList" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.gfx::FontListImpl"* }
%"class.gfx::FontListImpl" = type opaque

$_ZN5views18TypographyProviderD2Ev = comdat any

$_ZN24ChromeTypographyProviderD0Ev = comdat any

@.str = private unnamed_addr constant [17 x i8] c"DejaVu Sans Mono\00", align 1
@_ZZNK24ChromeTypographyProvider13GetLineHeightEiiE15headline_height = internal global i32 0, align 4
@_ZGVZNK24ChromeTypographyProvider13GetLineHeightEiiE15headline_height = internal global i64 0, align 8
@_ZZNK24ChromeTypographyProvider13GetLineHeightEiiE12title_height = internal global i32 0, align 4
@_ZGVZNK24ChromeTypographyProvider13GetLineHeightEiiE12title_height = internal global i64 0, align 8
@_ZZNK24ChromeTypographyProvider13GetLineHeightEiiE17body_large_height = internal global i32 0, align 4
@_ZGVZNK24ChromeTypographyProvider13GetLineHeightEiiE17body_large_height = internal global i64 0, align 8
@_ZZNK24ChromeTypographyProvider13GetLineHeightEiiE14default_height = internal global i32 0, align 4
@_ZGVZNK24ChromeTypographyProvider13GetLineHeightEiiE14default_height = internal global i64 0, align 8
@_ZTV24ChromeTypographyProvider = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::TypographyProvider"*)* @_ZN5views18TypographyProviderD2Ev to i8*), i8* bitcast (void (%class.ChromeTypographyProvider*)* @_ZN24ChromeTypographyProviderD0Ev to i8*), i8* bitcast (void (%"struct.ui::ResourceBundle::FontDetails"*, %class.ChromeTypographyProvider*, i32, i32)* @_ZNK24ChromeTypographyProvider14GetFontDetailsEii to i8*), i8* bitcast (i32 (%class.ChromeTypographyProvider*, %"class.views::View"*, i32, i32)* @_ZNK24ChromeTypographyProvider8GetColorERKN5views4ViewEii to i8*), i8* bitcast (i32 (%class.ChromeTypographyProvider*, i32, i32)* @_ZNK24ChromeTypographyProvider13GetLineHeightEii to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24ChromeTypographyProvider14GetFontDetailsEii(%"struct.ui::ResourceBundle::FontDetails"* noalias sret, %class.ChromeTypographyProvider* nocapture readnone, i32, i32) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"struct.ui::ResourceBundle::FontDetails", %"struct.ui::ResourceBundle::FontDetails"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.ui::ResourceBundle::FontDetails", %"struct.ui::ResourceBundle::FontDetails"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.ui::ResourceBundle::FontDetails", %"struct.ui::ResourceBundle::FontDetails"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"struct.ui::ResourceBundle::FontDetails", %"struct.ui::ResourceBundle::FontDetails"* %0, i64 0, i32 2
  %10 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %11 = bitcast %"struct.ui::ResourceBundle::FontDetails"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 -86, i64 32, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #6
  call void @_ZN2ui14ResourceBundle11FontDetailsC1ENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEiN3gfx4Font6WeightE(%"struct.ui::ResourceBundle::FontDetails"* %0, %"class.std::__1::basic_string"* nonnull %5, i32 0, i32 400) #6
  %12 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %18) #7
  br label %19

19:                                               ; preds = %4, %16
  store i32 0, i32* %8, align 8
  call void @_Z21ApplyCommonFontStylesiiRN2ui14ResourceBundle11FontDetailsE(i32 %2, i32 %3, %"struct.ui::ResourceBundle::FontDetails"* dereferenceable(32) %0) #6
  switch i32 %2, label %29 [
    i32 1, label %20
    i32 2, label %22
    i32 8, label %23
    i32 4, label %26
    i32 11, label %26
    i32 18, label %26
    i32 9, label %24
    i32 19, label %25
  ]

20:                                               ; preds = %19
  %21 = call i32 @_ZN5views18TypographyProvider17MediumWeightForUIEv() #6
  store i32 %21, i32* %9, align 4
  br label %36

22:                                               ; preds = %19
  store i32 3, i32* %8, align 8
  br label %36

23:                                               ; preds = %19
  store i32 2, i32* %8, align 8
  br label %36

24:                                               ; preds = %19
  store i32 8, i32* %8, align 8
  br label %36

25:                                               ; preds = %19
  store i32 -2, i32* %8, align 8
  br label %36

26:                                               ; preds = %19, %19, %19
  store i32 1, i32* %8, align 8
  %27 = icmp eq i32 %2, 11
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  store i32 600, i32* %9, align 4
  br label %36

29:                                               ; preds = %19, %26
  %30 = icmp eq i32 %2, 12
  %31 = icmp eq i32 %3, 4097
  %32 = and i1 %30, %31
  br i1 %32, label %33, label %36

33:                                               ; preds = %29
  %34 = load i32, i32* %8, align 8
  %35 = add nsw i32 %34, -2
  store i32 %35, i32* %8, align 8
  br label %55

36:                                               ; preds = %25, %24, %23, %22, %20, %28, %29
  %37 = add i32 %3, -4109
  %38 = icmp ult i32 %37, 2
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  store i32 600, i32* %9, align 4
  br label %55

40:                                               ; preds = %36
  %41 = add i32 %3, -4105
  %42 = icmp ult i32 %41, 2
  br i1 %42, label %43, label %55

43:                                               ; preds = %40
  %44 = bitcast %"struct.ui::ResourceBundle::FontDetails"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %43
  store i64 16, i64* %7, align 8
  %49 = load i8*, i8** %6, align 8
  br label %52

50:                                               ; preds = %43
  store i8 16, i8* %45, align 1
  %51 = bitcast %"struct.ui::ResourceBundle::FontDetails"* %0 to i8*
  br label %52

52:                                               ; preds = %48, %50
  %53 = phi i8* [ %49, %48 ], [ %51, %50 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i64 16, i1 false) #6
  %54 = getelementptr inbounds i8, i8* %53, i64 16
  store i8 0, i8* %54, align 1
  br label %55

55:                                               ; preds = %39, %33, %52, %40
  ret void
}

declare void @_ZN2ui14ResourceBundle11FontDetailsC1ENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEiN3gfx4Font6WeightE(%"struct.ui::ResourceBundle::FontDetails"*, %"class.std::__1::basic_string"*, i32, i32) unnamed_addr #1

declare void @_Z21ApplyCommonFontStylesiiRN2ui14ResourceBundle11FontDetailsE(i32, i32, %"struct.ui::ResourceBundle::FontDetails"* dereferenceable(32)) local_unnamed_addr #1

declare i32 @_ZN5views18TypographyProvider17MediumWeightForUIEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK24ChromeTypographyProvider8GetColorERKN5views4ViewEii(%class.ChromeTypographyProvider*, %"class.views::View"* dereferenceable(664), i32, i32) unnamed_addr #0 align 2 {
  switch i32 %2, label %5 [
    i32 10, label %25
    i32 4, label %25
    i32 18, label %9
  ]

5:                                                ; preds = %4
  %6 = icmp eq i32 %2, 19
  %7 = icmp eq i32 %3, 4102
  %8 = and i1 %6, %7
  br i1 %8, label %9, label %25

9:                                                ; preds = %4, %5
  %10 = phi i32 [ 0, %5 ], [ 1, %4 ]
  %11 = phi i32 [ 19, %5 ], [ %2, %4 ]
  %12 = tail call %"class.ui::ThemeProvider"* @_ZNK5views4View16GetThemeProviderEv(%"class.views::View"* %1) #6
  %13 = icmp eq %"class.ui::ThemeProvider"* %12, null
  br i1 %13, label %38, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.ui::ThemeProvider"* %12 to i32 (%"class.ui::ThemeProvider"*, i32)***
  %16 = load i32 (%"class.ui::ThemeProvider"*, i32)**, i32 (%"class.ui::ThemeProvider"*, i32)*** %15, align 8
  %17 = getelementptr inbounds i32 (%"class.ui::ThemeProvider"*, i32)*, i32 (%"class.ui::ThemeProvider"*, i32)** %16, i64 3
  %18 = load i32 (%"class.ui::ThemeProvider"*, i32)*, i32 (%"class.ui::ThemeProvider"*, i32)** %17, align 8
  %19 = tail call i32 %18(%"class.ui::ThemeProvider"* nonnull %12, i32 14) #6
  %20 = and i32 %19, 16777215
  %21 = or i32 %20, -956301312
  %22 = icmp eq i32 %3, 4102
  br i1 %22, label %38, label %23

23:                                               ; preds = %14
  %24 = icmp eq i32 %10, 0
  br i1 %24, label %25, label %38

25:                                               ; preds = %4, %4, %23, %5
  %26 = phi i32 [ %11, %23 ], [ %2, %5 ], [ 3, %4 ], [ 3, %4 ]
  switch i32 %3, label %29 [
    i32 4105, label %30
    i32 4106, label %27
    i32 4107, label %34
    i32 4108, label %28
  ]

27:                                               ; preds = %25
  br label %30

28:                                               ; preds = %25
  br label %34

29:                                               ; preds = %25
  br label %30

30:                                               ; preds = %25, %29, %27
  %31 = phi i32 [ 4096, %25 ], [ 4097, %27 ], [ %3, %29 ]
  %32 = getelementptr inbounds %class.ChromeTypographyProvider, %class.ChromeTypographyProvider* %0, i64 0, i32 0
  %33 = tail call i32 @_ZNK5views18TypographyProvider8GetColorERKNS_4ViewEii(%"class.views::TypographyProvider"* %32, %"class.views::View"* dereferenceable(664) %1, i32 %26, i32 %31) #6
  br label %38

34:                                               ; preds = %25, %28
  %35 = phi i32 [ 128, %28 ], [ 130, %25 ]
  %36 = tail call %"class.ui::NativeTheme"* @_ZNK5views4View14GetNativeThemeEv(%"class.views::View"* %1) #6
  %37 = tail call i32 @_ZNK2ui11NativeTheme14GetSystemColorENS0_7ColorIdENS0_11ColorSchemeE(%"class.ui::NativeTheme"* %36, i32 %35, i32 0) #6
  br label %38

38:                                               ; preds = %14, %9, %30, %34, %23
  %39 = phi i32 [ %19, %23 ], [ %33, %30 ], [ %37, %34 ], [ -65536, %9 ], [ %21, %14 ]
  ret i32 %39
}

declare %"class.ui::ThemeProvider"* @_ZNK5views4View16GetThemeProviderEv(%"class.views::View"*) local_unnamed_addr #1

declare i32 @_ZNK5views18TypographyProvider8GetColorERKNS_4ViewEii(%"class.views::TypographyProvider"*, %"class.views::View"* dereferenceable(664), i32, i32) unnamed_addr #1

declare %"class.ui::NativeTheme"* @_ZNK5views4View14GetNativeThemeEv(%"class.views::View"*) local_unnamed_addr #1

declare i32 @_ZNK2ui11NativeTheme14GetSystemColorENS0_7ColorIdENS0_11ColorSchemeE(%"class.ui::NativeTheme"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK24ChromeTypographyProvider13GetLineHeightEii(%class.ChromeTypographyProvider*, i32, i32) unnamed_addr #0 align 2 {
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZNK24ChromeTypographyProvider13GetLineHeightEiiE15headline_height to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %15, !prof !2

6:                                                ; preds = %3
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK24ChromeTypographyProvider13GetLineHeightEiiE15headline_height) #6
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %class.ChromeTypographyProvider, %class.ChromeTypographyProvider* %0, i64 0, i32 0
  %11 = tail call dereferenceable(8) %"class.gfx::FontList"* @_ZNK5views18TypographyProvider7GetFontEii(%"class.views::TypographyProvider"* %10, i32 9, i32 4096) #6
  %12 = tail call i32 @_ZNK3gfx8FontList9GetHeightEv(%"class.gfx::FontList"* %11) #6
  %13 = add nsw i32 %12, 8
  store i32 %13, i32* @_ZZNK24ChromeTypographyProvider13GetLineHeightEiiE15headline_height, align 4
  %14 = tail call {}* @llvm.invariant.start.p0i8(i64 4, i8* bitcast (i32* @_ZZNK24ChromeTypographyProvider13GetLineHeightEiiE15headline_height to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK24ChromeTypographyProvider13GetLineHeightEiiE15headline_height) #6
  br label %15

15:                                               ; preds = %6, %9, %3
  %16 = load atomic i8, i8* bitcast (i64* @_ZGVZNK24ChromeTypographyProvider13GetLineHeightEiiE12title_height to i8*) acquire, align 8
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %27, !prof !2

18:                                               ; preds = %15
  %19 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK24ChromeTypographyProvider13GetLineHeightEiiE12title_height) #6
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %27, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %class.ChromeTypographyProvider, %class.ChromeTypographyProvider* %0, i64 0, i32 0
  %23 = tail call dereferenceable(8) %"class.gfx::FontList"* @_ZNK5views18TypographyProvider7GetFontEii(%"class.views::TypographyProvider"* %22, i32 2, i32 4096) #6
  %24 = tail call i32 @_ZNK3gfx8FontList9GetHeightEv(%"class.gfx::FontList"* %23) #6
  %25 = add nsw i32 %24, 4
  store i32 %25, i32* @_ZZNK24ChromeTypographyProvider13GetLineHeightEiiE12title_height, align 4
  %26 = tail call {}* @llvm.invariant.start.p0i8(i64 4, i8* bitcast (i32* @_ZZNK24ChromeTypographyProvider13GetLineHeightEiiE12title_height to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK24ChromeTypographyProvider13GetLineHeightEiiE12title_height) #6
  br label %27

27:                                               ; preds = %18, %21, %15
  %28 = load atomic i8, i8* bitcast (i64* @_ZGVZNK24ChromeTypographyProvider13GetLineHeightEiiE17body_large_height to i8*) acquire, align 8
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %39, !prof !2

30:                                               ; preds = %27
  %31 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK24ChromeTypographyProvider13GetLineHeightEiiE17body_large_height) #6
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %class.ChromeTypographyProvider, %class.ChromeTypographyProvider* %0, i64 0, i32 0
  %35 = tail call dereferenceable(8) %"class.gfx::FontList"* @_ZNK5views18TypographyProvider7GetFontEii(%"class.views::TypographyProvider"* %34, i32 4, i32 4096) #6
  %36 = tail call i32 @_ZNK3gfx8FontList9GetHeightEv(%"class.gfx::FontList"* %35) #6
  %37 = add nsw i32 %36, 3
  store i32 %37, i32* @_ZZNK24ChromeTypographyProvider13GetLineHeightEiiE17body_large_height, align 4
  %38 = tail call {}* @llvm.invariant.start.p0i8(i64 4, i8* bitcast (i32* @_ZZNK24ChromeTypographyProvider13GetLineHeightEiiE17body_large_height to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK24ChromeTypographyProvider13GetLineHeightEiiE17body_large_height) #6
  br label %39

39:                                               ; preds = %30, %33, %27
  %40 = load atomic i8, i8* bitcast (i64* @_ZGVZNK24ChromeTypographyProvider13GetLineHeightEiiE14default_height to i8*) acquire, align 8
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %51, !prof !2

42:                                               ; preds = %39
  %43 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK24ChromeTypographyProvider13GetLineHeightEiiE14default_height) #6
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %51, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %class.ChromeTypographyProvider, %class.ChromeTypographyProvider* %0, i64 0, i32 0
  %47 = tail call dereferenceable(8) %"class.gfx::FontList"* @_ZNK5views18TypographyProvider7GetFontEii(%"class.views::TypographyProvider"* %46, i32 10, i32 4096) #6
  %48 = tail call i32 @_ZNK3gfx8FontList9GetHeightEv(%"class.gfx::FontList"* %47) #6
  %49 = add nsw i32 %48, 5
  store i32 %49, i32* @_ZZNK24ChromeTypographyProvider13GetLineHeightEiiE14default_height, align 4
  %50 = tail call {}* @llvm.invariant.start.p0i8(i64 4, i8* bitcast (i32* @_ZZNK24ChromeTypographyProvider13GetLineHeightEiiE14default_height to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK24ChromeTypographyProvider13GetLineHeightEiiE14default_height) #6
  br label %51

51:                                               ; preds = %42, %45, %39
  switch i32 %1, label %58 [
    i32 0, label %60
    i32 1, label %60
    i32 17, label %60
    i32 2, label %52
    i32 4, label %54
    i32 5, label %54
    i32 11, label %54
    i32 18, label %54
    i32 9, label %56
  ]

52:                                               ; preds = %51
  %53 = load i32, i32* @_ZZNK24ChromeTypographyProvider13GetLineHeightEiiE12title_height, align 4
  br label %60

54:                                               ; preds = %51, %51, %51, %51
  %55 = load i32, i32* @_ZZNK24ChromeTypographyProvider13GetLineHeightEiiE17body_large_height, align 4
  br label %60

56:                                               ; preds = %51
  %57 = load i32, i32* @_ZZNK24ChromeTypographyProvider13GetLineHeightEiiE15headline_height, align 4
  br label %60

58:                                               ; preds = %51
  %59 = load i32, i32* @_ZZNK24ChromeTypographyProvider13GetLineHeightEiiE14default_height, align 4
  br label %60

60:                                               ; preds = %51, %51, %51, %58, %56, %54, %52
  %61 = phi i32 [ %59, %58 ], [ %57, %56 ], [ %55, %54 ], [ %53, %52 ], [ 0, %51 ], [ 0, %51 ], [ 0, %51 ]
  ret i32 %61
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #2

declare dereferenceable(8) %"class.gfx::FontList"* @_ZNK5views18TypographyProvider7GetFontEii(%"class.views::TypographyProvider"*, i32, i32) local_unnamed_addr #1

declare i32 @_ZNK3gfx8FontList9GetHeightEv(%"class.gfx::FontList"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views18TypographyProviderD2Ev(%"class.views::TypographyProvider"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN24ChromeTypographyProviderD0Ev(%class.ChromeTypographyProvider*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %class.ChromeTypographyProvider* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
