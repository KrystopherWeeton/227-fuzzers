; ModuleID = '../../third_party/skia/src/gpu/ops/GrStrokeRectOp.cpp'
source_filename = "../../third_party/skia/src/gpu/ops/GrStrokeRectOp.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.DrawQuad = type { %class.GrQuad, %class.GrQuad, i32 }
%class.GrQuad = type { [4 x float], [4 x float], [4 x float], i32 }
%"struct.std::__1::atomic.203" = type { %"struct.std::__1::__atomic_base.204" }
%"struct.std::__1::__atomic_base.204" = type { %"struct.std::__1::__atomic_base.205" }
%"struct.std::__1::__atomic_base.205" = type { %"struct.std::__1::__cxx_atomic_impl.206" }
%"struct.std::__1::__cxx_atomic_impl.206" = type { %"struct.std::__1::__cxx_atomic_base_impl.207" }
%"struct.std::__1::__cxx_atomic_base_impl.207" = type { i32 }
%struct.SkRGBA4f = type { float, float, float, float }
%class.SkAlignedSTStorage.209 = type { [56 x i8] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.58, i8* }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.sk_sp.58 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.59, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.59 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrOp* }
%struct.SkRect = type { float, float, float, float }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.2", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.167" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.12, %class.SkTArray.21, %class.SkTArray.23, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.5"*, i64 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.23, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.24 }
%class.sk_sp.24 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.6" }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.12 = type { %class.SkTHashTable.13 }
%class.SkTHashTable.13 = type { i32, i32, %class.SkAutoTArray.14 }
%class.SkAutoTArray.14 = type { %"class.std::__1::unique_ptr.15" }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.178" }
%"struct.std::__1::pair.178" = type { i32, %class.SkTArray.179* }
%class.SkTArray.179 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.21 = type { %"class.std::__1::unique_ptr.22"*, i64 }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.179, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.23 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.37 }
%class.SkFibBlockSizes.37 = type { i32 }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type { %class.GrRecordingContext*, %"struct.GrPathRendererChain::Options", %class.sk_sp.44, %class.SkTArray.53, %class.GrOpsTask*, %class.SkSTArray.132, %class.SkSTArray.135, %"class.std::__1::unique_ptr.137", %class.sk_sp.153, %class.GrTokenTracker, i8, i8, %class.SkTArray.154, %class.GrHashMapWithCache }
%"struct.GrPathRendererChain::Options" = type { i8, i32 }
%class.sk_sp.44 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef, [4 x i8], %"class.std::__1::unique_ptr.45", i32, [4 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.48, i8, [7 x i8] }>
%class.sk_sp.48 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.49, i8*, i64 }
%class.GrBuffer = type { i32 (...)** }
%class.GrNonAtomicRef.49 = type { i32 }
%class.SkTArray.53 = type { %class.sk_sp.54*, i64 }
%class.sk_sp.54 = type { %class.GrRenderTask* }
%class.GrRenderTask = type { %class.SkRefCnt.base, %class.GrRenderTask*, %class.GrRenderTask*, %class.SkSTArray, %class.SkTArray.105, i32, i32, %class.SkSTArray.112, %class.SkSTArray.112, %class.GrTextureResolveRenderTask* }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.55 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.55 = type { %class.sk_sp.56*, i64 }
%class.sk_sp.56 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt, %class.sk_sp.57, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.100" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.sk_sp.57 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.60 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.60 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.61, void (i8*)*, i8* }
%class.SkNVRefCnt.61 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.62, i32, [4 x i8] }
%union.anon.62 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.SkISize = type { i32, i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.57, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.97, %class.sk_sp.99, %class.sk_sp.99 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.72, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.88, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.64 }
%class.SkTHashTable.64 = type { i32, i32, %class.SkAutoTArray.65 }
%class.SkAutoTArray.65 = type { %"class.std::__1::unique_ptr.66" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.72 = type { %class.SkTHashTable.73 }
%class.SkTHashTable.73 = type { i32, i32, %class.SkAutoTArray.74 }
%class.SkAutoTArray.74 = type { %"class.std::__1::unique_ptr.75" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.81, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.81 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.82" }
%"struct.std::__1::atomic.82" = type { %"struct.std::__1::__atomic_base.83" }
%"struct.std::__1::__atomic_base.83" = type { %"struct.std::__1::__atomic_base.84" }
%"struct.std::__1::__atomic_base.84" = type { %"struct.std::__1::__cxx_atomic_impl.85" }
%"struct.std::__1::__cxx_atomic_impl.85" = type { %"struct.std::__1::__cxx_atomic_base_impl.86" }
%"struct.std::__1::__cxx_atomic_base_impl.86" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.87, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.87 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.88 = type { %class.SkTHashTable.89 }
%class.SkTHashTable.89 = type { i32, i32, %class.SkAutoTArray.90 }
%class.SkAutoTArray.90 = type { %"class.std::__1::unique_ptr.91" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.sk_sp.97 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.98, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.98 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.99 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.100" = type { %"struct.std::__1::__atomic_base.101" }
%"struct.std::__1::__atomic_base.101" = type { %"struct.std::__1::__atomic_base.102" }
%"struct.std::__1::__atomic_base.102" = type { %"struct.std::__1::__cxx_atomic_impl.103" }
%"struct.std::__1::__cxx_atomic_impl.103" = type { %"struct.std::__1::__cxx_atomic_base_impl.104" }
%"struct.std::__1::__cxx_atomic_base_impl.104" = type { i64 }
%class.SkTArray.105 = type { %class.GrTextureProxy**, i64 }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.106", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.SkSTArray.112 = type { %class.SkAlignedSTStorage.113, %class.SkTArray.114 }
%class.SkAlignedSTStorage.113 = type { [8 x i8] }
%class.SkTArray.114 = type { %class.GrRenderTask**, i64 }
%class.GrTextureResolveRenderTask = type opaque
%class.GrOpsTask = type { %class.GrRenderTask, %class.GrAuditTrail*, i8, %class.GrSwizzle, i32, i32, %"struct.std::__1::array", i32, i8, i32, %struct.SkIRect, i32, i32, %class.SkSTArray.115, %class.sk_sp.129, %class.SkTArray.131, %struct.SkRect, %struct.SkIRect }
%class.GrSwizzle = type { i16 }
%"struct.std::__1::array" = type { [4 x float] }
%class.SkSTArray.115 = type { %class.SkAlignedSTStorage.116, %class.SkTArray.117 }
%class.SkAlignedSTStorage.116 = type { [2000 x i8] }
%class.SkTArray.117 = type { %"class.GrOpsTask::OpChain"*, i64 }
%"class.GrOpsTask::OpChain" = type { %"class.GrOpsTask::OpChain::List", %"class.GrProcessorSet::Analysis", [4 x i8], %"class.GrXferProcessor::DstProxyView", %class.GrAppliedClip*, %struct.SkRect }
%"class.GrOpsTask::OpChain::List" = type { %"class.std::__1::unique_ptr", %class.GrOp* }
%"class.GrProcessorSet::Analysis" = type { i16, [2 x i8] }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.56, i32, %class.GrSwizzle, [2 x i8] }>
%struct.SkIPoint = type { i32, i32 }
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.120" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.118 }
%union.anon.118 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.119, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.119 = type { i32 }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.123, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.123 = type { %class.SkAlignedSTStorage.124, %class.SkTArray.125 }
%class.SkAlignedSTStorage.124 = type { [8 x i8] }
%class.SkTArray.125 = type { %"class.std::__1::unique_ptr.120"*, i64 }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.sk_sp.129 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.130, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.130 = type { %"struct.std::__1::atomic" }
%class.SkTArray.131 = type { %class.GrSurfaceProxy**, i64 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkSTArray.132 = type { %class.SkAlignedSTStorage.133, %class.SkTArray.134 }
%class.SkAlignedSTStorage.133 = type { [32 x i8] }
%class.SkTArray.134 = type { i32*, i64 }
%class.SkSTArray.135 = type { %class.SkAlignedSTStorage.136, %class.SkTArray.53 }
%class.SkAlignedSTStorage.136 = type { [32 x i8] }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %class.GrPathRendererChain* }
%class.GrPathRendererChain = type { %class.SkSTArray.140, %"class.std::__1::unique_ptr.144", %class.GrPathRenderer* }
%class.SkSTArray.140 = type { %class.SkAlignedSTStorage.141, %class.SkTArray.142 }
%class.SkAlignedSTStorage.141 = type { [64 x i8] }
%class.SkTArray.142 = type { %class.sk_sp.143*, i64 }
%class.sk_sp.143 = type { %class.GrPathRenderer* }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %class.GrCoverageCountingPathRenderer* }
%class.GrCoverageCountingPathRenderer = type opaque
%class.GrPathRenderer = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.153 = type { %class.GrSoftwarePathRenderer* }
%class.GrSoftwarePathRenderer = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrDeferredUploadToken = type { i64 }
%class.SkTArray.154 = type { %class.GrOnFlushCallbackObject**, i64 }
%class.GrOnFlushCallbackObject = type opaque
%class.GrHashMapWithCache = type { %class.SkTHashMap.155, i32, %class.GrRenderTask** }
%class.SkTHashMap.155 = type { %class.SkTHashTable.156 }
%class.SkTHashTable.156 = type { i32, i32, %class.SkAutoTArray.157 }
%class.SkAutoTArray.157 = type { %"class.std::__1::unique_ptr.158" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %class.GrProxyProvider* }
%class.GrPaint = type <{ %class.GrXPFactory*, %"class.std::__1::unique_ptr.120", %"class.std::__1::unique_ptr.120", i8, [3 x i8], %struct.SkRGBA4f, [4 x i8] }>
%class.GrXPFactory = type { i32 (...)** }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkStrokeRec = type { float, float, float, i32 }
%class.GrProcessorSet = type <{ %"class.std::__1::unique_ptr.120", %"class.std::__1::unique_ptr.120", %"union.GrProcessorSet::XP", i8, [7 x i8] }>
%"union.GrProcessorSet::XP" = type { %class.GrXPFactory* }
%"class.(anonymous namespace)::AAStrokeRectOp" = type <{ %class.GrMeshDrawOp, %class.GrSimpleMeshDrawOpHelper, %class.SkSTArray.186, %class.SkMatrix, %struct.GrSimpleMesh*, %class.GrProgramInfo*, i8, i8, [6 x i8] }>
%class.GrMeshDrawOp = type { %class.GrDrawOp }
%class.GrDrawOp = type { %class.GrOp }
%class.GrSimpleMeshDrawOpHelper = type <{ %class.GrProcessorSet*, i8, i8, [6 x i8] }>
%class.SkSTArray.186 = type { %class.SkAlignedSTStorage.187, %class.SkTArray.188 }
%class.SkAlignedSTStorage.187 = type { [76 x i8] }
%class.SkTArray.188 = type { %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"*, i64 }
%"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo" = type { %struct.SkRGBA4f, %struct.SkRect, %struct.SkRect, %struct.SkRect, %struct.SkPoint, i8 }
%struct.SkPoint = type { float, float }
%struct.GrSimpleMesh = type { %class.sk_sp.189, i32, i32, i32, i32, i16, i16, i8, %class.sk_sp.189, i32, i32 }
%class.sk_sp.189 = type { %class.GrBuffer* }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.190, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.190 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.185, i8, i8, [2 x i8] }>
%class.GrNonAtomicRef.185 = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.191"*, [24 x i8] }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %class.GrFragmentProcessor* }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.197, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.197 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%"class.(anonymous namespace)::NonAAStrokeRectOp" = type { %class.GrMeshDrawOp, %class.GrSimpleMeshDrawOpHelper, %struct.SkRGBA4f, %class.SkMatrix, %struct.SkRect, float, %struct.GrSimpleMesh*, %class.GrProgramInfo* }
%"class.std::__1::function.198" = type opaque
%class.GrOpFlushState = type { %class.GrDeferredUploadTarget, %"class.GrMeshDrawOp::Target", %class.SkArenaAllocWithReset, %class.GrVertexBufferAllocPool, %class.GrIndexBufferAllocPool, %class.GrDrawIndirectBufferAllocPool, %class.SkArenaAllocList, %class.SkArenaAllocList.201, %class.SkArenaAllocList.202, %class.GrDeferredUploadToken, %"struct.GrOpFlushState::OpArgs"*, %class.SkTArray.131*, %class.GrGpu*, %class.GrResourceProvider*, %class.GrTokenTracker*, %class.GrOpsRenderPass*, %"class.SkArenaAllocList<GrOpFlushState::Draw>::Iter", %"class.SkArenaAllocList<GrOpFlushState::InlineUpload>::Iter" }
%class.GrDeferredUploadTarget = type { i32 (...)** }
%"class.GrMeshDrawOp::Target" = type { i32 (...)** }
%class.SkArenaAllocWithReset = type { %class.SkArenaAlloc.base, i8*, i32, i32 }
%class.SkArenaAlloc.base = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes }>
%class.GrVertexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.GrBufferAllocPool = type { i32 (...)**, i64, %class.SkTArray.199, %class.sk_sp.44, %class.sk_sp.48, %class.GrGpu*, i32, i8* }
%class.SkTArray.199 = type { %"struct.GrBufferAllocPool::BufferBlock"*, i64 }
%"struct.GrBufferAllocPool::BufferBlock" = type { i64, %class.sk_sp.200 }
%class.sk_sp.200 = type { %class.GrBuffer* }
%class.GrIndexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.GrDrawIndirectBufferAllocPool = type { %class.GrBufferAllocPool }
%class.SkArenaAllocList = type { %"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node"*, %"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node"* }
%"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node" = type opaque
%class.SkArenaAllocList.201 = type { %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"*, %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"* }
%"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node" = type opaque
%class.SkArenaAllocList.202 = type { %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"*, %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"* }
%"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node" = type opaque
%"struct.GrOpFlushState::OpArgs" = type { %class.GrOp*, %class.GrSurfaceProxyView*, %class.GrRenderTargetProxy*, i8, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView", i32, i32 }
%class.GrRenderTargetProxy = type <{ i32 (...)**, i8, i8, i8, i8, %struct.SkIRect, [4 x i8], %class.sk_sp.129, [4 x i8], [4 x i8], %class.GrSurfaceProxy }>
%class.GrOpsRenderPass = type { i32 (...)**, i32, %class.GrRenderTarget*, %class.sk_sp.189, %class.sk_sp.189, %class.sk_sp.189, i32, i32 }
%class.GrRenderTarget = type opaque
%"class.SkArenaAllocList<GrOpFlushState::Draw>::Iter" = type { %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"* }
%"class.SkArenaAllocList<GrOpFlushState::InlineUpload>::Iter" = type { %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"* }
%"struct.GrDefaultGeoProcFactory::Color" = type { i32, %struct.SkRGBA4f }
%"struct.GrDefaultGeoProcFactory::Coverage" = type <{ i32, i8, [3 x i8] }>
%"struct.GrDefaultGeoProcFactory::LocalCoords" = type { i32, %class.SkMatrix* }
%class.sk_sp.210 = type { %class.GrGpuResource* }
%"class.GrMeshDrawOp::PatternHelper" = type <{ i8*, %struct.GrSimpleMesh*, i8, [7 x i8] }>

$_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp = comdat any

$_ZN4GrOpD2Ev = comdat any

$_ZN4GrOpD0Ev = comdat any

$_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE = comdat any

$_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps = comdat any

$_ZZN12SkArenaAlloc4makeIZNS_4makeI12GrSimpleMeshJEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS3_ENUlPcE_8__invokeESC_ = comdat any

$_ZTV4GrOp = comdat any

@__const._ZN14GrStrokeRectOp10MakeNestedEP18GrRecordingContextO7GrPaintRK8SkMatrixPK6SkRect.quad = private unnamed_addr constant %struct.DrawQuad { %class.GrQuad { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, %class.GrQuad { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, i32 -1431655766 }, align 4
@_ZTVN12_GLOBAL__N_114AAStrokeRectOpE = internal unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::AAStrokeRectOp"*)* @_ZN12_GLOBAL__N_114AAStrokeRectOpD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::AAStrokeRectOp"*)* @_ZN12_GLOBAL__N_114AAStrokeRectOpD0Ev to i8*), i8* bitcast (i8* (%"class.(anonymous namespace)::AAStrokeRectOp"*)* @_ZNK12_GLOBAL__N_114AAStrokeRectOp4nameEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::AAStrokeRectOp"*, %"class.std::__1::function.198"*)* @_ZNK12_GLOBAL__N_114AAStrokeRectOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::AAStrokeRectOp"*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps*)* @_ZN12_GLOBAL__N_114AAStrokeRectOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrOpFlushState*)* @_ZN12GrMeshDrawOp9onPrepareEP14GrOpFlushState to i8*), i8* bitcast (void (%"class.(anonymous namespace)::AAStrokeRectOp"*, %class.GrOpFlushState*, %struct.SkRect*)* @_ZN12_GLOBAL__N_114AAStrokeRectOp9onExecuteEP14GrOpFlushStateRK6SkRect to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::AAStrokeRectOp"*)* @_ZNK12_GLOBAL__N_114AAStrokeRectOp18fixedFunctionFlagsEv to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::AAStrokeRectOp"*, %class.GrCaps*, %class.GrAppliedClip*, i32)* @_ZN12_GLOBAL__N_114AAStrokeRectOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12GrMeshDrawOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (%class.GrProgramInfo* (%"class.(anonymous namespace)::AAStrokeRectOp"*)* @_ZN12_GLOBAL__N_114AAStrokeRectOp11programInfoEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::AAStrokeRectOp"*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12_GLOBAL__N_114AAStrokeRectOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%"class.(anonymous namespace)::AAStrokeRectOp"*, %"class.GrMeshDrawOp::Target"*)* @_ZN12_GLOBAL__N_114AAStrokeRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE to i8*)] }, align 8
@_ZZN12_GLOBAL__N_114AAStrokeRectOp7ClassIDEvE8kClassID = internal unnamed_addr global i32 0, align 4
@_ZGVZN12_GLOBAL__N_114AAStrokeRectOp7ClassIDEvE8kClassID = internal global i64 0, align 8
@_ZN4GrOp14gCurrOpClassIDE = external global %"struct.std::__1::atomic.203", align 4
@.str = private unnamed_addr constant [42 x i8] c"../../third_party/skia/src/gpu/ops/GrOp.h\00", align 1
@.str.1 = private unnamed_addr constant [80 x i8] c"This should never wrap as it should only be called once for each GrOp subclass.\00", align 1
@_ZTV4GrOp = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrOp*)* @_ZN4GrOpD2Ev to i8*), i8* bitcast (void (%class.GrOp*)* @_ZN4GrOpD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrOp*, %"class.std::__1::function.198"*)* @_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE to i8*), i8* bitcast (i32 (%class.GrOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps*)* @_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.2 = private unnamed_addr constant [13 x i8] c"AAStrokeRect\00", align 1
@.str.3 = private unnamed_addr constant [54 x i8] c"../../third_party/skia/src/gpu/ops/GrStrokeRectOp.cpp\00", align 1
@.str.4 = private unnamed_addr constant [37 x i8] c"Couldn't create GrGeometryProcessor\0A\00", align 1
@_ZL19SK_PMColor4fILLEGAL = internal unnamed_addr constant %struct.SkRGBA4f { float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000 }, align 4
@.str.5 = private unnamed_addr constant [28 x i8] c"Could not allocate indices\0A\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"Could not allocate vertices\0A\00", align 1
@_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE13gMiterIndices = internal constant [72 x i16] [i16 0, i16 1, i16 5, i16 5, i16 4, i16 0, i16 1, i16 2, i16 6, i16 6, i16 5, i16 1, i16 2, i16 3, i16 7, i16 7, i16 6, i16 2, i16 3, i16 0, i16 4, i16 4, i16 7, i16 3, i16 4, i16 5, i16 9, i16 9, i16 8, i16 4, i16 5, i16 6, i16 10, i16 10, i16 9, i16 5, i16 6, i16 7, i16 11, i16 11, i16 10, i16 6, i16 7, i16 4, i16 8, i16 8, i16 11, i16 7, i16 8, i16 9, i16 13, i16 13, i16 12, i16 8, i16 9, i16 10, i16 14, i16 14, i16 13, i16 9, i16 10, i16 11, i16 15, i16 15, i16 14, i16 10, i16 11, i16 8, i16 12, i16 12, i16 15, i16 11], align 16
@_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gMiterIndexBufferKey_storage = internal global %class.SkAlignedSTStorage.209 zeroinitializer, align 8
@_ZGVZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gMiterIndexBufferKey_storage = internal global i64 0, align 8
@_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE20gMiterIndexBufferKey = internal unnamed_addr global %class.GrUniqueKey* null, align 8
@_ZGVZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE20gMiterIndexBufferKey = internal global i64 0, align 8
@_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE13gBevelIndices = internal constant [108 x i16] [i16 0, i16 1, i16 9, i16 9, i16 8, i16 0, i16 1, i16 5, i16 13, i16 13, i16 9, i16 1, i16 5, i16 6, i16 14, i16 14, i16 13, i16 5, i16 6, i16 2, i16 10, i16 10, i16 14, i16 6, i16 2, i16 3, i16 11, i16 11, i16 10, i16 2, i16 3, i16 7, i16 15, i16 15, i16 11, i16 3, i16 7, i16 4, i16 12, i16 12, i16 15, i16 7, i16 4, i16 0, i16 8, i16 8, i16 12, i16 4, i16 8, i16 9, i16 17, i16 17, i16 16, i16 8, i16 9, i16 13, i16 17, i16 13, i16 14, i16 18, i16 18, i16 17, i16 13, i16 14, i16 10, i16 18, i16 10, i16 11, i16 19, i16 19, i16 18, i16 10, i16 11, i16 15, i16 19, i16 15, i16 12, i16 16, i16 16, i16 19, i16 15, i16 12, i16 8, i16 16, i16 16, i16 17, i16 21, i16 21, i16 20, i16 16, i16 17, i16 18, i16 22, i16 22, i16 21, i16 17, i16 18, i16 19, i16 23, i16 23, i16 22, i16 18, i16 19, i16 16, i16 20, i16 20, i16 23, i16 19], align 16
@_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gBevelIndexBufferKey_storage = internal global %class.SkAlignedSTStorage.209 zeroinitializer, align 8
@_ZGVZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gBevelIndexBufferKey_storage = internal global i64 0, align 8
@_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE20gBevelIndexBufferKey = internal unnamed_addr global %class.GrUniqueKey* null, align 8
@_ZGVZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE20gBevelIndexBufferKey = internal global i64 0, align 8
@_ZN12_GLOBAL__N_125gMiterIndexBufferKey_onceE = internal global { { { i8 } } } zeroinitializer, align 1
@_ZN12_GLOBAL__N_125gBevelIndexBufferKey_onceE = internal global { { { i8 } } } zeroinitializer, align 1
@_ZL23SK_PMColor4fTRANSPARENT = internal constant %struct.SkRGBA4f zeroinitializer, align 4
@_ZTVN12_GLOBAL__N_117NonAAStrokeRectOpE = internal unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::NonAAStrokeRectOp"*)* @_ZN12_GLOBAL__N_117NonAAStrokeRectOpD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::NonAAStrokeRectOp"*)* @_ZN12_GLOBAL__N_117NonAAStrokeRectOpD0Ev to i8*), i8* bitcast (i8* (%"class.(anonymous namespace)::NonAAStrokeRectOp"*)* @_ZNK12_GLOBAL__N_117NonAAStrokeRectOp4nameEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::NonAAStrokeRectOp"*, %"class.std::__1::function.198"*)* @_ZNK12_GLOBAL__N_117NonAAStrokeRectOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE to i8*), i8* bitcast (i32 (%class.GrOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps*)* @_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrOpFlushState*)* @_ZN12GrMeshDrawOp9onPrepareEP14GrOpFlushState to i8*), i8* bitcast (void (%"class.(anonymous namespace)::NonAAStrokeRectOp"*, %class.GrOpFlushState*, %struct.SkRect*)* @_ZN12_GLOBAL__N_117NonAAStrokeRectOp9onExecuteEP14GrOpFlushStateRK6SkRect to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::NonAAStrokeRectOp"*)* @_ZNK12_GLOBAL__N_117NonAAStrokeRectOp18fixedFunctionFlagsEv to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::NonAAStrokeRectOp"*, %class.GrCaps*, %class.GrAppliedClip*, i32)* @_ZN12_GLOBAL__N_117NonAAStrokeRectOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12GrMeshDrawOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (%class.GrProgramInfo* (%"class.(anonymous namespace)::NonAAStrokeRectOp"*)* @_ZN12_GLOBAL__N_117NonAAStrokeRectOp11programInfoEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::NonAAStrokeRectOp"*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12_GLOBAL__N_117NonAAStrokeRectOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%"class.(anonymous namespace)::NonAAStrokeRectOp"*, %"class.GrMeshDrawOp::Target"*)* @_ZN12_GLOBAL__N_117NonAAStrokeRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE to i8*)] }, align 8
@_ZZN12_GLOBAL__N_117NonAAStrokeRectOp7ClassIDEvE8kClassID = internal unnamed_addr global i32 0, align 4
@_ZGVZN12_GLOBAL__N_117NonAAStrokeRectOp7ClassIDEvE8kClassID = internal global i64 0, align 8
@.str.9 = private unnamed_addr constant [18 x i8] c"NonAAStrokeRectOp\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrOp* @_ZN14GrStrokeRectOp4MakeEP18GrRecordingContextO7GrPaint8GrAATypeRK8SkMatrixRK6SkRectRK11SkStrokeRec(%class.GrRecordingContext* nocapture readnone, %class.GrPaint* dereferenceable(48), i32, %class.SkMatrix* dereferenceable(40), %struct.SkRect* dereferenceable(16), %class.SkStrokeRec* dereferenceable(16)) local_unnamed_addr #0 {
  %7 = alloca %struct.SkRGBA4f, align 4
  %8 = alloca %struct.SkRGBA4f, align 4
  %9 = icmp eq i32 %2, 1
  br i1 %9, label %10, label %56

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = trunc i32 %12 to i8
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %3) #14
  %17 = zext i8 %16 to i32
  store i32 %17, i32* %11, align 4
  br label %18

18:                                               ; preds = %10, %15
  %19 = phi i32 [ %17, %15 ], [ %12, %10 ]
  %20 = and i32 %19, 16
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %93, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %5, i64 0, i32 1
  %24 = load float, float* %23, align 4
  %25 = fcmp une float %24, 0.000000e+00
  br i1 %25, label %26, label %36

26:                                               ; preds = %22
  %27 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %5, i64 0, i32 3
  %28 = load i32, i32* %27, align 4
  %29 = lshr i32 %28, 16
  %30 = trunc i32 %29 to i8
  switch i8 %30, label %93 [
    i8 2, label %36
    i8 0, label %31
  ]

31:                                               ; preds = %26
  %32 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %5, i64 0, i32 2
  %33 = load float, float* %32, align 4
  %34 = fcmp oge float %33, 0x3FF6A09E60000000
  %35 = zext i1 %34 to i8
  br label %36

36:                                               ; preds = %31, %26, %22
  %37 = phi i8 [ 1, %22 ], [ %35, %31 ], [ 0, %26 ]
  %38 = bitcast %struct.SkRGBA4f* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #14
  %39 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %1, i64 0, i32 5
  %40 = bitcast %struct.SkRGBA4f* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %38, i8* align 4 %40, i64 16, i1 false) #14
  %41 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %1, i64 0, i32 3
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %36
  %45 = tail call i8* @_Znwm(i64 224) #15
  br label %50

46:                                               ; preds = %36
  %47 = tail call i8* @_Znwm(i64 256) #14
  %48 = getelementptr inbounds i8, i8* %47, i64 224
  %49 = bitcast i8* %48 to %class.GrProcessorSet*
  tail call void @_ZN14GrProcessorSetC1EO7GrPaint(%class.GrProcessorSet* %49, %class.GrPaint* dereferenceable(48) %1) #14
  br label %50

50:                                               ; preds = %46, %44
  %51 = phi i8* [ %47, %46 ], [ %45, %44 ]
  %52 = phi %class.GrProcessorSet* [ %49, %46 ], [ null, %44 ]
  %53 = bitcast i8* %51 to %"class.(anonymous namespace)::AAStrokeRectOp"*
  %54 = icmp ne i8 %37, 0
  call fastcc void @_ZN12_GLOBAL__N_114AAStrokeRectOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrixRK6SkRectRK11SkStrokeRecb(%"class.(anonymous namespace)::AAStrokeRectOp"* nonnull %53, %class.GrProcessorSet* %52, %struct.SkRGBA4f* nonnull dereferenceable(16) %7, %class.SkMatrix* dereferenceable(40) %3, %struct.SkRect* dereferenceable(16) %4, %class.SkStrokeRec* dereferenceable(16) %5, i1 zeroext %54) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #14
  %55 = ptrtoint i8* %51 to i64
  br label %93

56:                                               ; preds = %6
  %57 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %5, i64 0, i32 1
  %58 = load float, float* %57, align 4
  %59 = fcmp une float %58, 0.000000e+00
  br i1 %59, label %60, label %70

60:                                               ; preds = %56
  %61 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %5, i64 0, i32 3
  %62 = load i32, i32* %61, align 4
  %63 = lshr i32 %62, 16
  %64 = trunc i32 %63 to i8
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %93

66:                                               ; preds = %60
  %67 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %5, i64 0, i32 2
  %68 = load float, float* %67, align 4
  %69 = fcmp ult float %68, 0x3FF6A09E60000000
  br i1 %69, label %93, label %70

70:                                               ; preds = %66, %56
  %71 = tail call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* %5) #14
  %72 = icmp eq i32 %71, 0
  %73 = icmp ne i32 %2, 2
  %74 = and i1 %73, %72
  %75 = select i1 %74, i8 8, i8 0
  %76 = bitcast %struct.SkRGBA4f* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #14
  %77 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %1, i64 0, i32 5
  %78 = bitcast %struct.SkRGBA4f* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %76, i8* align 4 %78, i64 16, i1 false) #14
  %79 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %1, i64 0, i32 3
  %80 = load i8, i8* %79, align 8, !range !2
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %84, label %82

82:                                               ; preds = %70
  %83 = tail call i8* @_Znwm(i64 160) #15
  br label %88

84:                                               ; preds = %70
  %85 = tail call i8* @_Znwm(i64 192) #14
  %86 = getelementptr inbounds i8, i8* %85, i64 160
  %87 = bitcast i8* %86 to %class.GrProcessorSet*
  tail call void @_ZN14GrProcessorSetC1EO7GrPaint(%class.GrProcessorSet* %87, %class.GrPaint* dereferenceable(48) %1) #14
  br label %88

88:                                               ; preds = %84, %82
  %89 = phi i8* [ %85, %84 ], [ %83, %82 ]
  %90 = phi %class.GrProcessorSet* [ %87, %84 ], [ null, %82 ]
  %91 = bitcast i8* %89 to %"class.(anonymous namespace)::NonAAStrokeRectOp"*
  call fastcc void @_ZN12_GLOBAL__N_117NonAAStrokeRectOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EEN24GrSimpleMeshDrawOpHelper10InputFlagsERK8SkMatrixRK6SkRectRK11SkStrokeRec8GrAAType(%"class.(anonymous namespace)::NonAAStrokeRectOp"* nonnull %91, %class.GrProcessorSet* %90, %struct.SkRGBA4f* nonnull dereferenceable(16) %8, i8 zeroext %75, %class.SkMatrix* dereferenceable(40) %3, %struct.SkRect* dereferenceable(16) %4, %class.SkStrokeRec* dereferenceable(16) %5, i32 %2) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #14
  %92 = ptrtoint i8* %89 to i64
  br label %93

93:                                               ; preds = %88, %66, %60, %50, %26, %18
  %94 = phi i64 [ 0, %18 ], [ %55, %50 ], [ 0, %26 ], [ %92, %88 ], [ 0, %66 ], [ 0, %60 ]
  %95 = inttoptr i64 %94 to %class.GrOp*
  ret %class.GrOp* %95
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrOp* @_ZN14GrStrokeRectOp10MakeNestedEP18GrRecordingContextO7GrPaintRK8SkMatrixPK6SkRect(%class.GrRecordingContext*, %class.GrPaint* dereferenceable(48), %class.SkMatrix* dereferenceable(40), %struct.SkRect*) local_unnamed_addr #0 {
  %5 = alloca %struct.SkRGBA4f, align 4
  %6 = alloca %struct.SkRect, align 4
  %7 = alloca %struct.SkRect, align 4
  %8 = alloca %struct.DrawQuad, align 4
  %9 = alloca %struct.SkPoint, align 4
  %10 = bitcast %struct.SkRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #14
  %11 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 0
  %12 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 1
  %13 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 2
  %14 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 3
  %15 = bitcast %struct.SkRect* %7 to i8*
  %16 = bitcast %struct.SkRect* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %16, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #14
  %17 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %7, i64 0, i32 0
  %18 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %7, i64 0, i32 2
  %19 = bitcast %struct.SkRect* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %19, i8 -1, i64 16, i1 false)
  %20 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %2, %struct.SkRect* nonnull %6, %struct.SkRect* dereferenceable(16) %3, i32 1) #14
  %21 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 1
  %22 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %2, %struct.SkRect* nonnull %7, %struct.SkRect* dereferenceable(16) %21, i32 1) #14
  %23 = load float, float* %17, align 4
  %24 = load float, float* %18, align 4
  %25 = fcmp olt float %23, %24
  br i1 %25, label %26, label %32

26:                                               ; preds = %4
  %27 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %7, i64 0, i32 3
  %28 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %7, i64 0, i32 1
  %29 = load float, float* %28, align 4
  %30 = load float, float* %27, align 4
  %31 = fcmp uge float %29, %30
  br i1 %31, label %32, label %76

32:                                               ; preds = %4, %26
  %33 = load float, float* %11, align 4
  %34 = load float, float* %13, align 4
  %35 = fcmp olt float %33, %34
  br i1 %35, label %36, label %103

36:                                               ; preds = %32
  %37 = load float, float* %12, align 4
  %38 = load float, float* %14, align 4
  %39 = fcmp uge float %37, %38
  br i1 %39, label %103, label %40

40:                                               ; preds = %36
  %41 = bitcast %struct.DrawQuad* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 108, i8* nonnull %41) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %41, i8* align 4 bitcast (%struct.DrawQuad* @__const._ZN14GrStrokeRectOp10MakeNestedEP18GrRecordingContextO7GrPaintRK8SkMatrixPK6SkRect.quad to i8*), i64 108, i1 false)
  %42 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %8, i64 0, i32 0
  call void @_ZN6GrQuad12MakeFromRectERK6SkRectRK8SkMatrix(%class.GrQuad* nonnull sret %42, %struct.SkRect* dereferenceable(16) %3, %class.SkMatrix* dereferenceable(40) %2) #14
  %43 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %8, i64 0, i32 1
  %44 = bitcast %struct.SkRect* %3 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = bitcast %class.GrQuad* %43 to i32*
  store i32 %45, i32* %46, align 4
  %47 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %8, i64 0, i32 1, i32 0, i64 1
  %48 = bitcast float* %47 to i32*
  store i32 %45, i32* %48, align 4
  %49 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %8, i64 0, i32 1, i32 0, i64 2
  %50 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 2
  %51 = bitcast float* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = bitcast float* %49 to i32*
  store i32 %52, i32* %53, align 4
  %54 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %8, i64 0, i32 1, i32 0, i64 3
  %55 = bitcast float* %54 to i32*
  store i32 %52, i32* %55, align 4
  %56 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %8, i64 0, i32 1, i32 1, i64 0
  %57 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 1
  %58 = bitcast float* %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = bitcast float* %56 to i32*
  store i32 %59, i32* %60, align 4
  %61 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %8, i64 0, i32 1, i32 1, i64 1
  %62 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 3
  %63 = bitcast float* %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = bitcast float* %61 to i32*
  store i32 %64, i32* %65, align 4
  %66 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %8, i64 0, i32 1, i32 1, i64 2
  %67 = bitcast float* %66 to i32*
  store i32 %59, i32* %67, align 4
  %68 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %8, i64 0, i32 1, i32 1, i64 3
  %69 = bitcast float* %68 to i32*
  store i32 %64, i32* %69, align 4
  %70 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %8, i64 0, i32 1, i32 2, i64 0
  %71 = bitcast float* %70 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %71, align 4
  %72 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %8, i64 0, i32 1, i32 3
  store i32 0, i32* %72, align 4
  %73 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %8, i64 0, i32 2
  store i32 15, i32* %73, align 4
  %74 = call %class.GrOp* @_ZN12GrFillRectOp4MakeEP18GrRecordingContextO7GrPaint8GrAATypeP8DrawQuadPK21GrUserStencilSettingsN24GrSimpleMeshDrawOpHelper10InputFlagsE(%class.GrRecordingContext* %0, %class.GrPaint* dereferenceable(48) %1, i32 1, %struct.DrawQuad* nonnull %8, %struct.GrUserStencilSettings* null, i8 zeroext 0) #14
  %75 = ptrtoint %class.GrOp* %74 to i64
  call void @llvm.lifetime.end.p0i8(i64 108, i8* nonnull %41) #14
  br label %103

76:                                               ; preds = %26
  %77 = bitcast %struct.SkPoint* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #14
  %78 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %9, i64 0, i32 0
  %79 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %9, i64 0, i32 1
  %80 = load float, float* %13, align 4
  %81 = fsub float %80, %24
  %82 = fmul float %81, 5.000000e-01
  store float %82, float* %78, align 4
  %83 = load float, float* %14, align 4
  %84 = fsub float %83, %30
  %85 = fmul float %84, 5.000000e-01
  store float %85, float* %79, align 4
  %86 = bitcast %struct.SkRGBA4f* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86) #14
  %87 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %1, i64 0, i32 5
  %88 = bitcast %struct.SkRGBA4f* %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %86, i8* align 4 %88, i64 16, i1 false) #14
  %89 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %1, i64 0, i32 3
  %90 = load i8, i8* %89, align 8, !range !2
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %94, label %92

92:                                               ; preds = %76
  %93 = call i8* @_Znwm(i64 224) #15
  br label %98

94:                                               ; preds = %76
  %95 = call i8* @_Znwm(i64 256) #14
  %96 = getelementptr inbounds i8, i8* %95, i64 224
  %97 = bitcast i8* %96 to %class.GrProcessorSet*
  call void @_ZN14GrProcessorSetC1EO7GrPaint(%class.GrProcessorSet* %97, %class.GrPaint* dereferenceable(48) %1) #14
  br label %98

98:                                               ; preds = %92, %94
  %99 = phi i8* [ %93, %92 ], [ %95, %94 ]
  %100 = phi %class.GrProcessorSet* [ null, %92 ], [ %97, %94 ]
  %101 = bitcast i8* %99 to %"class.(anonymous namespace)::AAStrokeRectOp"*
  call fastcc void @_ZN12_GLOBAL__N_114AAStrokeRectOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrixRK6SkRectSD_RK7SkPoint(%"class.(anonymous namespace)::AAStrokeRectOp"* nonnull %101, %class.GrProcessorSet* %100, %struct.SkRGBA4f* nonnull dereferenceable(16) %5, %class.SkMatrix* dereferenceable(40) %2, %struct.SkRect* nonnull dereferenceable(16) %6, %struct.SkRect* nonnull dereferenceable(16) %7, %struct.SkPoint* nonnull dereferenceable(8) %9) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #14
  %102 = ptrtoint i8* %99 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #14
  br label %103

103:                                              ; preds = %32, %36, %98, %40
  %104 = phi i64 [ %75, %40 ], [ %102, %98 ], [ 0, %36 ], [ 0, %32 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #14
  %105 = inttoptr i64 %104 to %class.GrOp*
  ret %class.GrOp* %105
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN6GrQuad12MakeFromRectERK6SkRectRK8SkMatrix(%class.GrQuad* sret, %struct.SkRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare %class.GrOp* @_ZN12GrFillRectOp4MakeEP18GrRecordingContextO7GrPaint8GrAATypeP8DrawQuadPK21GrUserStencilSettingsN24GrSimpleMeshDrawOpHelper10InputFlagsE(%class.GrRecordingContext*, %class.GrPaint* dereferenceable(48), i32, %struct.DrawQuad*, %struct.GrUserStencilSettings*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_114AAStrokeRectOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrixRK6SkRectRK11SkStrokeRecb(%"class.(anonymous namespace)::AAStrokeRectOp"*, %class.GrProcessorSet*, %struct.SkRGBA4f* nocapture readonly dereferenceable(16), %class.SkMatrix* dereferenceable(40), %struct.SkRect* dereferenceable(16), %class.SkStrokeRec* nocapture readonly dereferenceable(16), i1 zeroext) unnamed_addr #0 align 2 {
  %8 = alloca %struct.SkRect, align 8
  %9 = alloca <2 x float>, align 8
  %10 = bitcast <2 x float>* %9 to %struct.SkPoint*
  %11 = zext i1 %6 to i8
  %12 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 0
  %13 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_114AAStrokeRectOp7ClassIDEvE8kClassID to i8*) acquire, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %23, !prof !3

15:                                               ; preds = %7
  %16 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_114AAStrokeRectOp7ClassIDEvE8kClassID) #14
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %15
  %19 = atomicrmw add i32* getelementptr inbounds (%"struct.std::__1::atomic.203", %"struct.std::__1::atomic.203"* @_ZN4GrOp14gCurrOpClassIDE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 329, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i64 0, i64 0)) #16
  unreachable

22:                                               ; preds = %18
  store i32 %19, i32* @_ZZN12_GLOBAL__N_114AAStrokeRectOp7ClassIDEvE8kClassID, align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_114AAStrokeRectOp7ClassIDEvE8kClassID) #14
  br label %23

23:                                               ; preds = %7, %15, %22
  %24 = load i32, i32* @_ZZN12_GLOBAL__N_114AAStrokeRectOp7ClassIDEvE8kClassID, align 4
  tail call void @_ZN12GrMeshDrawOpC2Ej(%class.GrMeshDrawOp* %12, i32 %24) #14
  %25 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_114AAStrokeRectOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 1
  tail call void @_ZN24GrSimpleMeshDrawOpHelperC1EP14GrProcessorSet8GrAATypeNS_10InputFlagsE(%class.GrSimpleMeshDrawOpHelper* %26, %class.GrProcessorSet* %1, i32 1, i8 zeroext 0) #14
  %27 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 80
  %28 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 0
  %29 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 88
  %30 = bitcast i8* %29 to i64*
  %31 = bitcast i8* %27 to i8**
  store i8* %28, i8** %31, align 8
  store i64 8589934592, i64* %30, align 8
  %32 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 3
  %33 = bitcast %class.SkMatrix* %32 to i8*
  %34 = bitcast %class.SkMatrix* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 4 %34, i64 40, i1 false)
  %35 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 4
  %36 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 6
  %37 = bitcast %struct.GrSimpleMesh** %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false)
  store i8 %11, i8* %36, align 8
  %38 = bitcast i8* %27 to %class.SkTArray.188*
  tail call fastcc void @_ZN8SkTArrayIN12_GLOBAL__N_114AAStrokeRectOp8RectInfoELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.188* %38, i32 1) #14
  %39 = bitcast i8* %27 to %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"**
  %40 = load %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"*, %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"** %39, align 8
  %41 = load i64, i64* %30, align 8
  %42 = lshr i64 %41, 1
  %43 = and i64 %42, 2147483647
  %44 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %40, i64 %43
  %45 = add i64 %41, 2
  %46 = and i64 %45, 4294967294
  %47 = and i64 %41, -4294967295
  %48 = or i64 %46, %47
  store i64 %48, i64* %30, align 8
  %49 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %40, i64 %43, i32 1
  %50 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %40, i64 %43, i32 2
  %51 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %40, i64 %43, i32 3
  %52 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %40, i64 %43, i32 5
  %53 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %5, i64 0, i32 1
  %54 = load float, float* %53, align 4
  %55 = bitcast %struct.SkRect* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #14
  %56 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %8, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -1, i64 16, i1 false) #14
  %57 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %3, %struct.SkRect* nonnull %8, %struct.SkRect* dereferenceable(16) %4, i32 1) #14
  %58 = bitcast <2 x float>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #14
  %59 = getelementptr inbounds <2 x float>, <2 x float>* %9, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %59, align 8
  %60 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %10, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %60, align 4
  %61 = fcmp ogt float %54, 0.000000e+00
  br i1 %61, label %62, label %66

62:                                               ; preds = %23
  store float %54, float* %59, align 8
  store float %54, float* %60, align 4
  call void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix* %3, %struct.SkPoint* nonnull %10, %struct.SkPoint* nonnull %10, i32 1) #14
  %63 = load <2 x float>, <2 x float>* %9, align 8
  %64 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %63)
  %65 = extractelement <2 x float> %64, i32 0
  br label %66

66:                                               ; preds = %23, %62
  %67 = phi float [ %65, %62 ], [ 1.000000e+00, %23 ]
  %68 = phi <2 x float> [ %64, %62 ], [ <float 1.000000e+00, float 1.000000e+00>, %23 ]
  store float %67, float* %59, align 8
  %69 = extractelement <2 x float> %68, i32 1
  store float %69, float* %60, align 4
  %70 = fmul <2 x float> %68, <float 5.000000e-01, float 5.000000e-01>
  %71 = shufflevector <2 x float> %70, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %72 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %40, i64 %43, i32 4, i32 0
  %73 = extractelement <2 x float> %70, i32 0
  store float %73, float* %72, align 4
  %74 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %40, i64 %43, i32 4, i32 1
  %75 = extractelement <2 x float> %70, i32 1
  store float %75, float* %74, align 4
  %76 = bitcast %struct.SkRect* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* nonnull align 8 %55, i64 16, i1 false) #14
  %77 = bitcast %struct.SkRect* %50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %77, i8* nonnull align 8 %55, i64 16, i1 false) #14
  %78 = bitcast %struct.SkRect* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %78, i8* nonnull align 8 %55, i64 16, i1 false) #14
  %79 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %49, i64 0, i32 0
  %80 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %40, i64 %43, i32 1, i32 1
  %81 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %40, i64 %43, i32 1, i32 2
  %82 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %40, i64 %43, i32 1, i32 3
  %83 = bitcast %struct.SkRect* %49 to <4 x float>*
  %84 = load <4 x float>, <4 x float>* %83, align 4
  %85 = fsub <4 x float> %84, %71
  %86 = fadd <4 x float> %84, %71
  %87 = shufflevector <4 x float> %85, <4 x float> %86, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %88 = bitcast %struct.SkRect* %49 to <4 x float>*
  store <4 x float> %87, <4 x float>* %88, align 4
  %89 = bitcast %struct.SkRect* %51 to <4 x float>*
  %90 = load <4 x float>, <4 x float>* %89, align 4
  %91 = shufflevector <2 x float> %70, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %92 = fadd <4 x float> %90, %91
  %93 = fsub <4 x float> %90, %91
  %94 = shufflevector <4 x float> %92, <4 x float> %93, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %95 = bitcast %struct.SkRect* %51 to <4 x float>*
  store <4 x float> %94, <4 x float>* %95, align 4
  %96 = bitcast float* %56 to <2 x float>*
  %97 = load <2 x float>, <2 x float>* %96, align 8
  %98 = bitcast %struct.SkRect* %8 to <2 x float>*
  %99 = load <2 x float>, <2 x float>* %98, align 8
  %100 = fsub <2 x float> %97, %99
  %101 = fsub <2 x float> %100, %68
  %102 = extractelement <2 x float> %101, i32 0
  %103 = extractelement <2 x float> %101, i32 1
  %104 = fcmp olt float %103, %102
  %105 = select i1 %104, float %103, float %102
  %106 = fcmp ole float %105, 0.000000e+00
  %107 = zext i1 %106 to i8
  store i8 %107, i8* %52, align 1
  br i1 %106, label %108, label %114

108:                                              ; preds = %66
  %109 = fmul <2 x float> %99, <float 5.000000e-01, float 5.000000e-01>
  %110 = fmul <2 x float> %97, <float 5.000000e-01, float 5.000000e-01>
  %111 = fadd <2 x float> %110, %109
  %112 = shufflevector <2 x float> %111, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %113 = bitcast %struct.SkRect* %51 to <4 x float>*
  store <4 x float> %112, <4 x float>* %113, align 4
  br label %114

114:                                              ; preds = %108, %66
  br i1 %6, label %115, label %120

115:                                              ; preds = %114
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #14
  %116 = bitcast %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %44 to i8*
  %117 = bitcast %struct.SkRGBA4f* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %116, i8* align 4 %117, i64 16, i1 false)
  %118 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %119 = bitcast %struct.SkRect* %118 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 4 %76, i64 16, i1 false) #14
  br label %175

120:                                              ; preds = %114
  %121 = extractelement <4 x float> %85, i32 0
  %122 = fadd float %121, 0.000000e+00
  store float %122, float* %79, align 4
  %123 = extractelement <4 x float> %85, i32 1
  %124 = fadd float %75, %123
  store float %124, float* %80, align 4
  %125 = extractelement <4 x float> %86, i32 3
  %126 = fsub float %125, %75
  store float %126, float* %82, align 4
  %127 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %40, i64 %43, i32 2, i32 1
  %128 = load float, float* %127, align 4
  %129 = fsub float %128, %75
  store float %129, float* %127, align 4
  %130 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %40, i64 %43, i32 2, i32 2
  %131 = load float, float* %130, align 4
  %132 = fadd float %131, 0.000000e+00
  store float %132, float* %130, align 4
  %133 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %40, i64 %43, i32 2, i32 3
  %134 = load float, float* %133, align 4
  %135 = fadd float %75, %134
  store float %135, float* %133, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #14
  %136 = bitcast %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %44 to i8*
  %137 = bitcast %struct.SkRGBA4f* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %136, i8* align 4 %137, i64 16, i1 false)
  %138 = bitcast %struct.SkRect* %49 to i32*
  %139 = load i32, i32* %138, align 4
  %140 = bitcast float* %80 to i32*
  %141 = load i32, i32* %140, align 4
  %142 = bitcast float* %81 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = bitcast float* %82 to i32*
  %145 = load i32, i32* %144, align 4
  %146 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %50, i64 0, i32 0
  %147 = load float, float* %146, align 4
  %148 = bitcast i32 %139 to float
  %149 = fcmp olt float %147, %148
  %150 = bitcast float %147 to i32
  %151 = select i1 %149, i32 %150, i32 %139
  %152 = load float, float* %127, align 4
  %153 = bitcast i32 %141 to float
  %154 = fcmp olt float %152, %153
  %155 = bitcast float %152 to i32
  %156 = select i1 %154, i32 %155, i32 %141
  %157 = load float, float* %130, align 4
  %158 = bitcast i32 %143 to float
  %159 = fcmp ogt float %157, %158
  %160 = bitcast float %157 to i32
  %161 = select i1 %159, i32 %160, i32 %143
  %162 = load float, float* %133, align 4
  %163 = bitcast i32 %145 to float
  %164 = fcmp ogt float %162, %163
  %165 = bitcast float %162 to i32
  %166 = select i1 %164, i32 %165, i32 %145
  %167 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %168 = bitcast %struct.SkRect* %167 to i32*
  store i32 %151, i32* %168, align 8
  %169 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 1
  %170 = bitcast float* %169 to i32*
  store i32 %156, i32* %170, align 4
  %171 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 2
  %172 = bitcast float* %171 to i32*
  store i32 %161, i32* %172, align 8
  %173 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 3
  %174 = bitcast float* %173 to i32*
  store i32 %166, i32* %174, align 4
  br label %175

175:                                              ; preds = %120, %115
  %176 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  store i16 1, i16* %176, align 2
  ret void
}

declare void @_ZN12GrMeshDrawOpC2Ej(%class.GrMeshDrawOp*, i32) unnamed_addr #2

declare void @_ZN24GrSimpleMeshDrawOpHelperC1EP14GrProcessorSet8GrAATypeNS_10InputFlagsE(%class.GrSimpleMeshDrawOpHelper*, %class.GrProcessorSet*, i32, i8 zeroext) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114AAStrokeRectOpD2Ev(%"class.(anonymous namespace)::AAStrokeRectOp"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_114AAStrokeRectOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 88
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 80
  %10 = bitcast i8* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #14
  br label %12

12:                                               ; preds = %1, %8
  %13 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 1
  tail call void @_ZN24GrSimpleMeshDrawOpHelperD1Ev(%class.GrSimpleMeshDrawOpHelper* %13) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %14 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %class.GrOp*, %class.GrOp** %14, align 8
  store %class.GrOp* null, %class.GrOp** %14, align 8
  %16 = icmp eq %class.GrOp* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %12
  %18 = bitcast %class.GrOp* %15 to void (%class.GrOp*)***
  %19 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %19, i64 1
  %21 = load void (%class.GrOp*)*, void (%class.GrOp*)** %20, align 8
  tail call void %21(%class.GrOp* nonnull %15) #14
  br label %22

22:                                               ; preds = %12, %17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114AAStrokeRectOpD0Ev(%"class.(anonymous namespace)::AAStrokeRectOp"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_114AAStrokeRectOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 88
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 80
  %10 = bitcast i8* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #14
  br label %12

12:                                               ; preds = %8, %1
  %13 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 1
  tail call void @_ZN24GrSimpleMeshDrawOpHelperD1Ev(%class.GrSimpleMeshDrawOpHelper* %13) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %14 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %class.GrOp*, %class.GrOp** %14, align 8
  store %class.GrOp* null, %class.GrOp** %14, align 8
  %16 = icmp eq %class.GrOp* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %12
  %18 = bitcast %class.GrOp* %15 to void (%class.GrOp*)***
  %19 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %19, i64 1
  %21 = load void (%class.GrOp*)*, void (%class.GrOp*)** %20, align 8
  tail call void %21(%class.GrOp* nonnull %15) #14
  br label %22

22:                                               ; preds = %12, %17
  %23 = bitcast %"class.(anonymous namespace)::AAStrokeRectOp"* %0 to i8*
  tail call void @_ZdlPv(i8* %23) #14
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_114AAStrokeRectOp4nameEv(%"class.(anonymous namespace)::AAStrokeRectOp"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_114AAStrokeRectOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%"class.(anonymous namespace)::AAStrokeRectOp"* nocapture readonly, %"class.std::__1::function.198"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 5
  %4 = load %class.GrProgramInfo*, %class.GrProgramInfo** %3, align 8
  %5 = icmp eq %class.GrProgramInfo* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %4, i64 0, i32 5
  %8 = load %class.GrPipeline*, %class.GrPipeline** %7, align 8
  tail call void @_ZNK10GrPipeline12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrPipeline* %8, %"class.std::__1::function.198"* %1) #14
  br label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 1, i32 0
  %11 = load %class.GrProcessorSet*, %class.GrProcessorSet** %10, align 8
  %12 = icmp eq %class.GrProcessorSet* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @_ZNK14GrProcessorSet12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrProcessorSet* nonnull %11, %"class.std::__1::function.198"* %1) #14
  br label %14

14:                                               ; preds = %13, %9, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_114AAStrokeRectOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps(%"class.(anonymous namespace)::AAStrokeRectOp"*, %class.GrOp*, %class.SkArenaAlloc* nocapture readnone, %class.GrCaps* dereferenceable(232)) unnamed_addr #0 align 2 {
  %5 = bitcast %class.GrOp* %1 to %"class.(anonymous namespace)::AAStrokeRectOp"*
  %6 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 1
  %8 = bitcast %class.GrOp* %7 to %class.GrSimpleMeshDrawOpHelper*
  %9 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %10 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 0, i32 6
  %11 = tail call zeroext i1 @_ZNK24GrSimpleMeshDrawOpHelper12isCompatibleERKS_RK6GrCapsRK6SkRectS7_b(%class.GrSimpleMeshDrawOpHelper* %6, %class.GrSimpleMeshDrawOpHelper* dereferenceable(16) %8, %class.GrCaps* dereferenceable(232) %3, %struct.SkRect* dereferenceable(16) %9, %struct.SkRect* dereferenceable(16) %10, i1 zeroext false) #14
  br i1 %11, label %12, label %110

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 6
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp ne i8 %14, 0
  %16 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 4, i32 3
  %17 = bitcast i16* %16 to i8*
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp ne i8 %18, 0
  %20 = xor i1 %15, %19
  br i1 %20, label %110, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 1, i32 2
  %23 = load i8, i8* %22, align 1
  %24 = and i8 %23, 4
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %36, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 3
  %28 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 3, i32 2
  %29 = bitcast %class.GrOp** %28 to %class.SkMatrix*
  %30 = icmp eq %class.SkMatrix* %27, %29
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = bitcast %class.SkMatrix* %27 to i8*
  %33 = bitcast %class.GrOp** %28 to i8*
  %34 = tail call i32 @bcmp(i8* %32, i8* %33, i64 36) #14
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %110

36:                                               ; preds = %21, %26, %31
  %37 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 80
  %38 = bitcast i8* %37 to %class.SkTArray.188*
  %39 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 3
  %40 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 3, i32 1
  %41 = bitcast %"class.std::__1::unique_ptr"* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = lshr i64 %42, 1
  %44 = trunc i64 %43 to i32
  %45 = and i32 %44, 2147483647
  %46 = bitcast %class.GrOp* %39 to %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"**
  %47 = load %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"*, %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"** %46, align 8
  tail call fastcc void @_ZN8SkTArrayIN12_GLOBAL__N_114AAStrokeRectOp8RectInfoELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.188* %38, i32 %45) #14
  %48 = icmp eq i32 %45, 0
  br i1 %48, label %96, label %49

49:                                               ; preds = %36
  %50 = bitcast i8* %37 to %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"**
  %51 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 88
  %52 = bitcast i8* %51 to i64*
  %53 = zext i32 %45 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i32 %45, 1
  br i1 %55, label %83, label %56

56:                                               ; preds = %49
  %57 = sub nsw i64 %53, %54
  br label %58

58:                                               ; preds = %58, %56
  %59 = phi i64 [ 0, %56 ], [ %80, %58 ]
  %60 = phi i64 [ %57, %56 ], [ %81, %58 ]
  %61 = load %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"*, %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"** %50, align 8
  %62 = load i64, i64* %52, align 8
  %63 = lshr i64 %62, 1
  %64 = and i64 %63, 2147483647
  %65 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %61, i64 %64
  %66 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %65, i64 %59
  %67 = bitcast %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %66 to i8*
  %68 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %47, i64 %59
  %69 = bitcast %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %67, i8* align 4 %69, i64 76, i1 false) #14
  %70 = or i64 %59, 1
  %71 = load %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"*, %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"** %50, align 8
  %72 = load i64, i64* %52, align 8
  %73 = lshr i64 %72, 1
  %74 = and i64 %73, 2147483647
  %75 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %71, i64 %74
  %76 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %75, i64 %70
  %77 = bitcast %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %76 to i8*
  %78 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %47, i64 %70
  %79 = bitcast %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %77, i8* align 4 %79, i64 76, i1 false) #14
  %80 = add nuw nsw i64 %59, 2
  %81 = add i64 %60, -2
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %58

83:                                               ; preds = %58, %49
  %84 = phi i64 [ 0, %49 ], [ %80, %58 ]
  %85 = icmp eq i64 %54, 0
  br i1 %85, label %96, label %86

86:                                               ; preds = %83
  %87 = load %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"*, %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"** %50, align 8
  %88 = load i64, i64* %52, align 8
  %89 = lshr i64 %88, 1
  %90 = and i64 %89, 2147483647
  %91 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %87, i64 %90
  %92 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %91, i64 %84
  %93 = bitcast %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %92 to i8*
  %94 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %47, i64 %84
  %95 = bitcast %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* align 4 %95, i64 76, i1 false) #14
  br label %96

96:                                               ; preds = %86, %83, %36
  %97 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 88
  %98 = bitcast i8* %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = and i64 %42, 4294967294
  %101 = add i64 %99, %100
  %102 = and i64 %101, 4294967294
  %103 = and i64 %99, -4294967295
  %104 = or i64 %102, %103
  store i64 %104, i64* %98, align 8
  %105 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %5, i64 0, i32 7
  %106 = load i8, i8* %105, align 1, !range !2
  %107 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 7
  %108 = load i8, i8* %107, align 1, !range !2
  %109 = or i8 %108, %106
  store i8 %109, i8* %107, align 1
  br label %110

110:                                              ; preds = %31, %12, %4, %96
  %111 = phi i32 [ 0, %96 ], [ 2, %4 ], [ 2, %12 ], [ 2, %31 ]
  ret i32 %111
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #0 comdat align 2 {
  %8 = bitcast %class.GrMeshDrawOp* %0 to void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)***
  %9 = load void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)**, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)** %9, i64 10
  %11 = load void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)** %10, align 8
  tail call void %11(%class.GrMeshDrawOp* %0, %class.GrRecordingContext* %1, %class.GrSurfaceProxyView* dereferenceable(16) %2, %class.GrAppliedClip* %3, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32) %4, i32 %5, i32 %6) #14
  ret void
}

declare void @_ZN12GrMeshDrawOp9onPrepareEP14GrOpFlushState(%class.GrMeshDrawOp*, %class.GrOpFlushState*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114AAStrokeRectOp9onExecuteEP14GrOpFlushStateRK6SkRect(%"class.(anonymous namespace)::AAStrokeRectOp"* nocapture readonly, %class.GrOpFlushState*, %struct.SkRect* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 5
  %5 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  %6 = icmp eq %class.GrProgramInfo* %5, null
  br i1 %6, label %35, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 4
  %9 = load %struct.GrSimpleMesh*, %struct.GrSimpleMesh** %8, align 8
  %10 = icmp eq %struct.GrSimpleMesh* %9, null
  br i1 %10, label %35, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 15
  %13 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %12, align 8
  tail call void @_ZN15GrOpsRenderPass12bindPipelineERK13GrProgramInfoRK6SkRect(%class.GrOpsRenderPass* %13, %class.GrProgramInfo* nonnull dereferenceable(128) %5, %struct.SkRect* dereferenceable(16) %2) #14
  %14 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %5, i64 0, i32 5
  %15 = load %class.GrPipeline*, %class.GrPipeline** %14, align 8
  %16 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %15, i64 0, i32 5
  %17 = load i8, i8* %16, align 8
  %18 = and i8 %17, 32
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 10
  %22 = load %"struct.GrOpFlushState::OpArgs"*, %"struct.GrOpFlushState::OpArgs"** %21, align 8
  %23 = getelementptr inbounds %"struct.GrOpFlushState::OpArgs", %"struct.GrOpFlushState::OpArgs"* %22, i64 0, i32 4
  %24 = load %class.GrAppliedClip*, %class.GrAppliedClip** %23, align 8
  %25 = getelementptr inbounds %class.GrAppliedClip, %class.GrAppliedClip* %24, i64 0, i32 0, i32 0, i32 1
  %26 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %12, align 8
  tail call void @_ZN15GrOpsRenderPass14setScissorRectERK7SkIRect(%class.GrOpsRenderPass* %26, %struct.SkIRect* dereferenceable(16) %25) #14
  br label %27

27:                                               ; preds = %11, %20
  %28 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  %29 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %28, i64 0, i32 7
  %30 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %29, align 8
  %31 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %28, i64 0, i32 5
  %32 = load %class.GrPipeline*, %class.GrPipeline** %31, align 8
  %33 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %12, align 8
  tail call void @_ZN15GrOpsRenderPass12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrOpsRenderPass* %33, %class.GrGeometryProcessor* dereferenceable(80) %30, %class.GrSurfaceProxy** null, %class.GrPipeline* dereferenceable(128) %32) #14
  %34 = load %struct.GrSimpleMesh*, %struct.GrSimpleMesh** %8, align 8
  tail call void @_ZN14GrOpFlushState8drawMeshERK12GrSimpleMesh(%class.GrOpFlushState* %1, %struct.GrSimpleMesh* dereferenceable(48) %34) #14
  br label %35

35:                                               ; preds = %7, %3, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZNK12_GLOBAL__N_114AAStrokeRectOp18fixedFunctionFlagsEv(%"class.(anonymous namespace)::AAStrokeRectOp"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 1
  %3 = tail call i32 @_ZNK24GrSimpleMeshDrawOpHelper18fixedFunctionFlagsEv(%class.GrSimpleMeshDrawOpHelper* %2) #14
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_114AAStrokeRectOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType(%"class.(anonymous namespace)::AAStrokeRectOp"*, %class.GrCaps* dereferenceable(232), %class.GrAppliedClip*, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 80
  %7 = bitcast i8* %6 to %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"**
  %8 = load %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"*, %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"** %7, align 8
  %9 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 88
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = lshr i64 %11, 1
  %13 = and i64 %12, 2147483647
  %14 = add nsw i64 %13, -1
  %15 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %8, i64 %14, i32 0
  %16 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 7
  %17 = tail call i32 @_ZN24GrSimpleMeshDrawOpHelper18finalizeProcessorsERK6GrCapsPK13GrAppliedClip11GrClampType27GrProcessorAnalysisCoverageP8SkRGBA4fIL11SkAlphaType2EEPb(%class.GrSimpleMeshDrawOpHelper* %5, %class.GrCaps* dereferenceable(232) %1, %class.GrAppliedClip* %2, i32 %3, i32 1, %struct.SkRGBA4f* %15, i8* %16) #14
  ret i32 %17
}

declare void @_ZN12GrMeshDrawOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %class.GrProgramInfo* @_ZN12_GLOBAL__N_114AAStrokeRectOp11programInfoEv(%"class.(anonymous namespace)::AAStrokeRectOp"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 5
  %3 = load %class.GrProgramInfo*, %class.GrProgramInfo** %2, align 8
  ret %class.GrProgramInfo* %3
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114AAStrokeRectOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%"class.(anonymous namespace)::AAStrokeRectOp"*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip* dereferenceable(72), %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #0 align 2 {
  %9 = alloca %"struct.GrDefaultGeoProcFactory::Color", align 4
  %10 = alloca %"struct.GrDefaultGeoProcFactory::Coverage", align 4
  %11 = alloca %"struct.GrDefaultGeoProcFactory::LocalCoords", align 8
  %12 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 1, i32 2
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 3
  %15 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 7
  %16 = load i8, i8* %15, align 1, !range !2
  %17 = icmp eq i8 %16, 0
  %18 = lshr i8 %13, 2
  %19 = and i8 %18, 2
  %20 = xor i8 %19, 2
  %21 = zext i8 %20 to i32
  %22 = and i8 %18, 1
  %23 = zext i8 %22 to i32
  %24 = select i1 %17, i32 1, i32 2
  %25 = bitcast %"struct.GrDefaultGeoProcFactory::Color"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %25) #14
  %26 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::Color", %"struct.GrDefaultGeoProcFactory::Color"* %9, i64 0, i32 0
  store i32 %24, i32* %26, align 4
  %27 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::Color", %"struct.GrDefaultGeoProcFactory::Color"* %9, i64 0, i32 1
  %28 = bitcast %struct.SkRGBA4f* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 bitcast (%struct.SkRGBA4f* @_ZL19SK_PMColor4fILLEGAL to i8*), i64 16, i1 false) #14
  %29 = bitcast %"struct.GrDefaultGeoProcFactory::Coverage"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #14
  %30 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::Coverage", %"struct.GrDefaultGeoProcFactory::Coverage"* %10, i64 0, i32 0
  store i32 %21, i32* %30, align 4
  %31 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::Coverage", %"struct.GrDefaultGeoProcFactory::Coverage"* %10, i64 0, i32 1
  store i8 -1, i8* %31, align 4
  %32 = bitcast %"struct.GrDefaultGeoProcFactory::LocalCoords"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #14
  %33 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::LocalCoords", %"struct.GrDefaultGeoProcFactory::LocalCoords"* %11, i64 0, i32 0
  store i32 %23, i32* %33, align 8
  %34 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::LocalCoords", %"struct.GrDefaultGeoProcFactory::LocalCoords"* %11, i64 0, i32 1
  store %class.SkMatrix* null, %class.SkMatrix** %34, align 8
  %35 = call %class.GrGeometryProcessor* @_ZN23GrDefaultGeoProcFactory18MakeForDeviceSpaceEP12SkArenaAllocRKNS_5ColorERKNS_8CoverageERKNS_11LocalCoordsERK8SkMatrix(%class.SkArenaAlloc* %2, %"struct.GrDefaultGeoProcFactory::Color"* nonnull dereferenceable(20) %9, %"struct.GrDefaultGeoProcFactory::Coverage"* nonnull dereferenceable(8) %10, %"struct.GrDefaultGeoProcFactory::LocalCoords"* nonnull dereferenceable(16) %11, %class.SkMatrix* dereferenceable(40) %14) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #14
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %25) #14
  %36 = icmp eq %class.GrGeometryProcessor* %35, null
  br i1 %36, label %37, label %38

37:                                               ; preds = %8
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.3, i64 0, i64 0), i32 531, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0)) #14
  br label %42

38:                                               ; preds = %8
  %39 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 1
  %40 = call %class.GrProgramInfo* @_ZN24GrSimpleMeshDrawOpHelper17createProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewEP19GrGeometryProcessor15GrPrimitiveType18GrXferBarrierFlags8GrLoadOp(%class.GrSimpleMeshDrawOpHelper* %39, %class.GrCaps* %1, %class.SkArenaAlloc* %2, %class.GrSurfaceProxyView* dereferenceable(16) %3, %class.GrAppliedClip* dereferenceable(72) %4, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32) %5, %class.GrGeometryProcessor* nonnull %35, i8 zeroext 0, i32 %6, i32 %7) #14
  %41 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 5
  store %class.GrProgramInfo* %40, %class.GrProgramInfo** %41, align 8
  br label %42

42:                                               ; preds = %38, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114AAStrokeRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE(%"class.(anonymous namespace)::AAStrokeRectOp"*, %"class.GrMeshDrawOp::Target"*) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.210, align 8
  %4 = alloca %class.sk_sp.210, align 8
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = alloca %class.sk_sp.99, align 8
  %7 = alloca %"class.GrMeshDrawOp::PatternHelper", align 8
  %8 = alloca %class.sk_sp.189, align 8
  %9 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 5
  %10 = load %class.GrProgramInfo*, %class.GrProgramInfo** %9, align 8
  %11 = icmp eq %class.GrProgramInfo* %10, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 0
  tail call void @_ZN12GrMeshDrawOp17createProgramInfoEPNS_6TargetE(%class.GrMeshDrawOp* %13, %"class.GrMeshDrawOp::Target"* %1) #14
  %14 = load %class.GrProgramInfo*, %class.GrProgramInfo** %9, align 8
  %15 = icmp eq %class.GrProgramInfo* %14, null
  br i1 %15, label %1088, label %16

16:                                               ; preds = %12, %2
  %17 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 6
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp ne i8 %18, 0
  %20 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 80
  %21 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 88
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = lshr i64 %23, 1
  %25 = trunc i64 %24 to i32
  %26 = and i32 %25, 2147483647
  %27 = bitcast %class.sk_sp.99* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #14
  %28 = getelementptr inbounds %class.sk_sp.99, %class.sk_sp.99* %6, i64 0, i32 0
  store %class.GrGpuBuffer* inttoptr (i64 -6148914691236517206 to %class.GrGpuBuffer*), %class.GrGpuBuffer** %28, align 8
  %29 = bitcast %"class.GrMeshDrawOp::Target"* %1 to %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)***
  %30 = load %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)**, %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)*** %29, align 8
  %31 = getelementptr inbounds %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)*, %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)** %30, i64 22
  %32 = load %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)*, %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)** %31, align 8
  %33 = tail call %class.GrResourceProvider* %32(%"class.GrMeshDrawOp::Target"* %1) #14
  %34 = load i8, i8* %17, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %80, label %36

36:                                               ; preds = %16
  %37 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gMiterIndexBufferKey_storage to i8*) acquire, align 8
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %43, !prof !3

39:                                               ; preds = %36
  %40 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gMiterIndexBufferKey_storage) #14
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %43, label %42

42:                                               ; preds = %39
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gMiterIndexBufferKey_storage) #14
  br label %43

43:                                               ; preds = %42, %39, %36
  %44 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZN12_GLOBAL__N_125gMiterIndexBufferKey_onceE, i64 0, i32 0, i32 0, i32 0) acquire, align 1
  switch i8 %44, label %45 [
    i8 2, label %64
    i8 0, label %46
  ]

45:                                               ; preds = %46, %43
  br label %61

46:                                               ; preds = %43
  %47 = cmpxchg i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZN12_GLOBAL__N_125gMiterIndexBufferKey_onceE, i64 0, i32 0, i32 0, i32 0), i8 0, i8 1 monotonic monotonic
  %48 = extractvalue { i8, i1 } %47, 1
  br i1 %48, label %49, label %45

49:                                               ; preds = %46
  store i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.209, %class.SkAlignedSTStorage.209* @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gMiterIndexBufferKey_storage, i64 0, i32 0, i64 8) to i32*), i32** bitcast (%class.SkAlignedSTStorage.209* @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gMiterIndexBufferKey_storage to i32**), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.209, %class.SkAlignedSTStorage.209* @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gMiterIndexBufferKey_storage, i64 0, i32 0, i64 8) to i32*), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.209, %class.SkAlignedSTStorage.209* @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gMiterIndexBufferKey_storage, i64 0, i32 0, i64 12) to i32*), align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%class.SkAlignedSTStorage.209, %class.SkAlignedSTStorage.209* @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gMiterIndexBufferKey_storage, i64 0, i32 0, i64 40), i8 0, i64 16, i1 false) #14
  %50 = tail call i32 @_ZN11GrUniqueKey14GenerateDomainEv() #14
  %51 = load i32*, i32** bitcast (%class.SkAlignedSTStorage.209* @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gMiterIndexBufferKey_storage to i32**), align 8
  %52 = icmp eq i32* %51, bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.209, %class.SkAlignedSTStorage.209* @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gMiterIndexBufferKey_storage, i64 0, i32 0, i64 8) to i32*)
  br i1 %52, label %55, label %53

53:                                               ; preds = %49
  %54 = bitcast i32* %51 to i8*
  tail call void @_Z7sk_freePv(i8* %54) #14
  br label %55

55:                                               ; preds = %53, %49
  store i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.209, %class.SkAlignedSTStorage.209* @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gMiterIndexBufferKey_storage, i64 0, i32 0, i64 8) to i32*), i32** bitcast (%class.SkAlignedSTStorage.209* @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gMiterIndexBufferKey_storage to i32**), align 8
  %56 = or i32 %50, 524288
  store i32 %56, i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.209, %class.SkAlignedSTStorage.209* @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gMiterIndexBufferKey_storage, i64 0, i32 0, i64 12) to i32*), align 4
  store i8* null, i8** bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.209, %class.SkAlignedSTStorage.209* @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gMiterIndexBufferKey_storage, i64 0, i32 0, i64 48) to i8**), align 8
  %57 = lshr i32 %56, 16
  %58 = zext i32 %57 to i64
  %59 = add nsw i64 %58, -4
  %60 = tail call i32 @_Z17GrResourceKeyHashPKjm(i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.209, %class.SkAlignedSTStorage.209* @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gMiterIndexBufferKey_storage, i64 0, i32 0, i64 12) to i32*), i64 %59) #14
  store i32 %60, i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.209, %class.SkAlignedSTStorage.209* @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gMiterIndexBufferKey_storage, i64 0, i32 0, i64 8) to i32*), align 8
  store atomic i8 2, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZN12_GLOBAL__N_125gMiterIndexBufferKey_onceE, i64 0, i32 0, i32 0, i32 0) release, align 1
  br label %64

61:                                               ; preds = %45, %61
  %62 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZN12_GLOBAL__N_125gMiterIndexBufferKey_onceE, i64 0, i32 0, i32 0, i32 0) acquire, align 1
  %63 = icmp eq i8 %62, 2
  br i1 %63, label %64, label %61

64:                                               ; preds = %61, %55, %43
  %65 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE20gMiterIndexBufferKey to i8*) acquire, align 8
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %71, !prof !3

67:                                               ; preds = %64
  %68 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE20gMiterIndexBufferKey) #14
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %71, label %70

70:                                               ; preds = %67
  store i8* getelementptr inbounds (%class.SkAlignedSTStorage.209, %class.SkAlignedSTStorage.209* @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gMiterIndexBufferKey_storage, i64 0, i32 0, i64 0), i8** bitcast (%class.GrUniqueKey** @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE20gMiterIndexBufferKey to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE20gMiterIndexBufferKey) #14
  br label %71

71:                                               ; preds = %70, %67, %64
  %72 = load %class.GrUniqueKey*, %class.GrUniqueKey** @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE20gMiterIndexBufferKey, align 8
  %73 = bitcast %class.sk_sp.210* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #14, !noalias !4
  call void @_ZN18GrResourceProvider23findResourceByUniqueKeyERK11GrUniqueKey(%class.sk_sp.210* nonnull sret %3, %class.GrResourceProvider* %33, %class.GrUniqueKey* dereferenceable(56) %72) #14, !noalias !11
  %74 = bitcast %class.sk_sp.210* %3 to i64*
  %75 = load i64, i64* %74, align 8, !noalias !4
  %76 = bitcast %class.sk_sp.99* %6 to i64*
  store i64 %75, i64* %76, align 8, !alias.scope !4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #14, !noalias !4
  %77 = icmp eq i64 %75, 0
  %78 = inttoptr i64 %75 to %class.GrGpuBuffer*
  br i1 %77, label %79, label %126

79:                                               ; preds = %71
  call void @_ZN18GrResourceProvider26createPatternedIndexBufferEPKtiiiPK11GrUniqueKey(%class.sk_sp.99* nonnull sret %6, %class.GrResourceProvider* %33, i16* getelementptr inbounds ([72 x i16], [72 x i16]* @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE13gMiterIndices, i64 0, i64 0), i32 72, i32 256, i32 16, %class.GrUniqueKey* %72) #14
  br label %124

80:                                               ; preds = %16
  %81 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gBevelIndexBufferKey_storage to i8*) acquire, align 8
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %87, !prof !3

83:                                               ; preds = %80
  %84 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gBevelIndexBufferKey_storage) #14
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %87, label %86

86:                                               ; preds = %83
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gBevelIndexBufferKey_storage) #14
  br label %87

87:                                               ; preds = %86, %83, %80
  %88 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZN12_GLOBAL__N_125gBevelIndexBufferKey_onceE, i64 0, i32 0, i32 0, i32 0) acquire, align 1
  switch i8 %88, label %89 [
    i8 2, label %108
    i8 0, label %90
  ]

89:                                               ; preds = %90, %87
  br label %105

90:                                               ; preds = %87
  %91 = cmpxchg i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZN12_GLOBAL__N_125gBevelIndexBufferKey_onceE, i64 0, i32 0, i32 0, i32 0), i8 0, i8 1 monotonic monotonic
  %92 = extractvalue { i8, i1 } %91, 1
  br i1 %92, label %93, label %89

93:                                               ; preds = %90
  store i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.209, %class.SkAlignedSTStorage.209* @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gBevelIndexBufferKey_storage, i64 0, i32 0, i64 8) to i32*), i32** bitcast (%class.SkAlignedSTStorage.209* @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gBevelIndexBufferKey_storage to i32**), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.209, %class.SkAlignedSTStorage.209* @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gBevelIndexBufferKey_storage, i64 0, i32 0, i64 8) to i32*), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.209, %class.SkAlignedSTStorage.209* @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gBevelIndexBufferKey_storage, i64 0, i32 0, i64 12) to i32*), align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%class.SkAlignedSTStorage.209, %class.SkAlignedSTStorage.209* @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gBevelIndexBufferKey_storage, i64 0, i32 0, i64 40), i8 0, i64 16, i1 false) #14
  %94 = tail call i32 @_ZN11GrUniqueKey14GenerateDomainEv() #14
  %95 = load i32*, i32** bitcast (%class.SkAlignedSTStorage.209* @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gBevelIndexBufferKey_storage to i32**), align 8
  %96 = icmp eq i32* %95, bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.209, %class.SkAlignedSTStorage.209* @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gBevelIndexBufferKey_storage, i64 0, i32 0, i64 8) to i32*)
  br i1 %96, label %99, label %97

97:                                               ; preds = %93
  %98 = bitcast i32* %95 to i8*
  tail call void @_Z7sk_freePv(i8* %98) #14
  br label %99

99:                                               ; preds = %97, %93
  store i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.209, %class.SkAlignedSTStorage.209* @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gBevelIndexBufferKey_storage, i64 0, i32 0, i64 8) to i32*), i32** bitcast (%class.SkAlignedSTStorage.209* @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gBevelIndexBufferKey_storage to i32**), align 8
  %100 = or i32 %94, 524288
  store i32 %100, i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.209, %class.SkAlignedSTStorage.209* @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gBevelIndexBufferKey_storage, i64 0, i32 0, i64 12) to i32*), align 4
  store i8* null, i8** bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.209, %class.SkAlignedSTStorage.209* @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gBevelIndexBufferKey_storage, i64 0, i32 0, i64 48) to i8**), align 8
  %101 = lshr i32 %100, 16
  %102 = zext i32 %101 to i64
  %103 = add nsw i64 %102, -4
  %104 = tail call i32 @_Z17GrResourceKeyHashPKjm(i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.209, %class.SkAlignedSTStorage.209* @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gBevelIndexBufferKey_storage, i64 0, i32 0, i64 12) to i32*), i64 %103) #14
  store i32 %104, i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.209, %class.SkAlignedSTStorage.209* @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gBevelIndexBufferKey_storage, i64 0, i32 0, i64 8) to i32*), align 8
  store atomic i8 2, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZN12_GLOBAL__N_125gBevelIndexBufferKey_onceE, i64 0, i32 0, i32 0, i32 0) release, align 1
  br label %108

105:                                              ; preds = %89, %105
  %106 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZN12_GLOBAL__N_125gBevelIndexBufferKey_onceE, i64 0, i32 0, i32 0, i32 0) acquire, align 1
  %107 = icmp eq i8 %106, 2
  br i1 %107, label %108, label %105

108:                                              ; preds = %105, %99, %87
  %109 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE20gBevelIndexBufferKey to i8*) acquire, align 8
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %115, !prof !3

111:                                              ; preds = %108
  %112 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE20gBevelIndexBufferKey) #14
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %115, label %114

114:                                              ; preds = %111
  store i8* getelementptr inbounds (%class.SkAlignedSTStorage.209, %class.SkAlignedSTStorage.209* @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE28gBevelIndexBufferKey_storage, i64 0, i32 0, i64 0), i8** bitcast (%class.GrUniqueKey** @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE20gBevelIndexBufferKey to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE20gBevelIndexBufferKey) #14
  br label %115

115:                                              ; preds = %114, %111, %108
  %116 = load %class.GrUniqueKey*, %class.GrUniqueKey** @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE20gBevelIndexBufferKey, align 8
  %117 = bitcast %class.sk_sp.210* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #14, !noalias !12
  call void @_ZN18GrResourceProvider23findResourceByUniqueKeyERK11GrUniqueKey(%class.sk_sp.210* nonnull sret %4, %class.GrResourceProvider* %33, %class.GrUniqueKey* dereferenceable(56) %116) #14, !noalias !17
  %118 = bitcast %class.sk_sp.210* %4 to i64*
  %119 = load i64, i64* %118, align 8, !noalias !12
  %120 = bitcast %class.sk_sp.99* %6 to i64*
  store i64 %119, i64* %120, align 8, !alias.scope !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #14, !noalias !12
  %121 = icmp eq i64 %119, 0
  %122 = inttoptr i64 %119 to %class.GrGpuBuffer*
  br i1 %121, label %123, label %126

123:                                              ; preds = %115
  call void @_ZN18GrResourceProvider26createPatternedIndexBufferEPKtiiiPK11GrUniqueKey(%class.sk_sp.99* nonnull sret %6, %class.GrResourceProvider* %33, i16* getelementptr inbounds ([108 x i16], [108 x i16]* @_ZZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderbE13gBevelIndices, i64 0, i64 0), i32 108, i32 256, i32 24, %class.GrUniqueKey* %116) #14
  br label %124

124:                                              ; preds = %123, %79
  %125 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %28, align 8
  br label %126

126:                                              ; preds = %124, %71, %115
  %127 = phi %class.GrGpuBuffer* [ %125, %124 ], [ %78, %71 ], [ %122, %115 ]
  %128 = icmp eq %class.GrGpuBuffer* %127, null
  br i1 %128, label %129, label %130

129:                                              ; preds = %126
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.3, i64 0, i64 0), i32 565, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0)) #14
  br label %1076

130:                                              ; preds = %126
  %131 = select i1 %19, i32 72, i32 108
  %132 = select i1 %19, i32 16, i32 24
  %133 = bitcast %"class.GrMeshDrawOp::PatternHelper"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %133) #14
  %134 = getelementptr inbounds %"class.GrMeshDrawOp::PatternHelper", %"class.GrMeshDrawOp::PatternHelper"* %7, i64 0, i32 0
  %135 = getelementptr inbounds %"class.GrMeshDrawOp::PatternHelper", %"class.GrMeshDrawOp::PatternHelper"* %7, i64 0, i32 1
  %136 = bitcast %"class.GrMeshDrawOp::PatternHelper"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %136, i8 -86, i64 24, i1 false)
  %137 = load %class.GrProgramInfo*, %class.GrProgramInfo** %9, align 8
  %138 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %137, i64 0, i32 7
  %139 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %138, align 8
  %140 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %139, i64 0, i32 3, i32 3
  %141 = load i64, i64* %140, align 8
  %142 = getelementptr inbounds %class.sk_sp.189, %class.sk_sp.189* %8, i64 0, i32 0
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %28, align 8
  %143 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %127, i64 0, i32 1
  store %class.GrBuffer* %143, %class.GrBuffer** %142, align 8
  call void @_ZN12GrMeshDrawOp13PatternHelperC1EPNS_6TargetE15GrPrimitiveTypem5sk_spIK8GrBufferEiiii(%"class.GrMeshDrawOp::PatternHelper"* nonnull %7, %"class.GrMeshDrawOp::Target"* %1, i8 zeroext 0, i64 %141, %class.sk_sp.189* nonnull %8, i32 %132, i32 %131, i32 %26, i32 256) #14
  %144 = load %class.GrBuffer*, %class.GrBuffer** %142, align 8
  %145 = icmp eq %class.GrBuffer* %144, null
  br i1 %145, label %151, label %146

146:                                              ; preds = %130
  %147 = bitcast %class.GrBuffer* %144 to void (%class.GrBuffer*)***
  %148 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %147, align 8
  %149 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %148, i64 3
  %150 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %149, align 8
  call void %150(%class.GrBuffer* nonnull %144) #14
  br label %151

151:                                              ; preds = %130, %146
  %152 = load i8*, i8** %134, align 8
  %153 = icmp eq i8* %152, null
  br i1 %153, label %165, label %154

154:                                              ; preds = %151
  %155 = icmp eq i32 %26, 0
  br i1 %155, label %166, label %156

156:                                              ; preds = %154
  %157 = bitcast i8* %20 to %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"**
  %158 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 7
  %159 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 1, i32 2
  %160 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRGBA4f*
  %161 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  %162 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %163 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %164 = zext i32 %26 to i64
  br label %171

165:                                              ; preds = %151
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.3, i64 0, i64 0), i32 573, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0)) #14
  br label %1075

166:                                              ; preds = %1071, %154
  %167 = bitcast %struct.GrSimpleMesh** %135 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 4
  %170 = bitcast %struct.GrSimpleMesh** %169 to i64*
  store i64 %168, i64* %170, align 8
  br label %1075

171:                                              ; preds = %1071, %156
  %172 = phi i64 [ 0, %156 ], [ %1073, %1071 ]
  %173 = phi i8* [ %152, %156 ], [ %1072, %1071 ]
  %174 = load %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"*, %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"** %157, align 8
  %175 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %174, i64 %172, i32 0
  %176 = load i8, i8* %158, align 1, !range !2
  %177 = icmp ne i8 %176, 0
  %178 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %174, i64 %172, i32 2
  %179 = load i8, i8* %17, align 8, !range !2
  %180 = icmp ne i8 %179, 0
  %181 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %174, i64 %172, i32 5
  %182 = load i8, i8* %181, align 4, !range !2
  %183 = icmp eq i8 %182, 0
  %184 = load i8, i8* %159, align 1
  %185 = and i8 %184, 8
  %186 = icmp ne i8 %185, 0
  %187 = select i1 %186, %struct.SkRGBA4f* @_ZL23SK_PMColor4fTRANSPARENT, %struct.SkRGBA4f* %175
  br i1 %177, label %188, label %200

188:                                              ; preds = %171
  %189 = bitcast %struct.SkRGBA4f* %187 to i32*
  %190 = load i32, i32* %189, align 4
  %191 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %187, i64 0, i32 1
  %192 = bitcast float* %191 to i32*
  %193 = load i32, i32* %192, align 4
  %194 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %187, i64 0, i32 2
  %195 = bitcast float* %194 to i32*
  %196 = load i32, i32* %195, align 4
  %197 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %187, i64 0, i32 3
  %198 = bitcast float* %197 to i32*
  %199 = load i32, i32* %198, align 4
  br label %202

200:                                              ; preds = %171
  %201 = call i32 @_ZNK8SkRGBA4fIL11SkAlphaType2EE12toBytes_RGBAEv(%struct.SkRGBA4f* %187) #14
  br label %202

202:                                              ; preds = %200, %188
  %203 = phi i32 [ %199, %188 ], [ -1431655766, %200 ]
  %204 = phi i32 [ %196, %188 ], [ -1431655766, %200 ]
  %205 = phi i32 [ %193, %188 ], [ -1431655766, %200 ]
  %206 = phi i32 [ %190, %188 ], [ %201, %200 ]
  %207 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %174, i64 %172, i32 4, i32 0
  %208 = load float, float* %207, align 4
  %209 = fcmp olt float %208, 5.000000e-01
  %210 = select i1 %209, float %208, float 5.000000e-01
  %211 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %174, i64 %172, i32 4, i32 1
  %212 = load float, float* %211, align 4
  %213 = fcmp olt float %212, 5.000000e-01
  %214 = select i1 %213, float %212, float 5.000000e-01
  %215 = fsub float 1.000000e+00, %210
  %216 = fsub float 1.000000e+00, %214
  %217 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %174, i64 %172, i32 1, i32 0
  %218 = load float, float* %217, align 4
  %219 = fsub float %218, %215
  %220 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %174, i64 %172, i32 1, i32 1
  %221 = load float, float* %220, align 4
  %222 = fsub float %221, %216
  %223 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %174, i64 %172, i32 1, i32 2
  %224 = load float, float* %223, align 4
  %225 = fadd float %215, %224
  %226 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %174, i64 %172, i32 1, i32 3
  %227 = load float, float* %226, align 4
  %228 = fadd float %216, %227
  %229 = bitcast i8* %173 to float*
  store float %219, float* %229, align 1
  %230 = getelementptr inbounds i8, i8* %173, i64 4
  %231 = bitcast i8* %230 to float*
  store float %222, float* %231, align 1
  %232 = getelementptr inbounds i8, i8* %173, i64 8
  %233 = bitcast i8* %232 to i32*
  store i32 %206, i32* %233, align 1
  %234 = getelementptr inbounds i8, i8* %173, i64 12
  %235 = icmp eq i8 %176, 0
  %236 = bitcast i8* %234 to i32*
  br i1 %235, label %244, label %237

237:                                              ; preds = %202
  store i32 %205, i32* %236, align 1
  %238 = getelementptr inbounds i8, i8* %173, i64 16
  %239 = bitcast i8* %238 to i32*
  store i32 %204, i32* %239, align 1
  %240 = getelementptr inbounds i8, i8* %173, i64 20
  %241 = bitcast i8* %240 to i32*
  store i32 %203, i32* %241, align 1
  %242 = getelementptr inbounds i8, i8* %173, i64 24
  %243 = bitcast i8* %242 to i32*
  br label %244

244:                                              ; preds = %237, %202
  %245 = phi i8* [ %234, %202 ], [ %242, %237 ]
  %246 = phi i32* [ %236, %202 ], [ %243, %237 ]
  br i1 %186, label %250, label %247

247:                                              ; preds = %244
  store i32 0, i32* %246, align 1
  %248 = getelementptr inbounds i8, i8* %245, i64 4
  %249 = bitcast i8* %248 to i32*
  br label %250

250:                                              ; preds = %247, %244
  %251 = phi i8* [ %245, %244 ], [ %248, %247 ]
  %252 = phi i32* [ %246, %244 ], [ %249, %247 ]
  %253 = bitcast i32* %252 to float*
  store float %219, float* %253, align 1
  %254 = getelementptr inbounds i8, i8* %251, i64 4
  %255 = bitcast i8* %254 to float*
  store float %228, float* %255, align 1
  %256 = getelementptr inbounds i8, i8* %251, i64 8
  %257 = bitcast i8* %256 to i32*
  store i32 %206, i32* %257, align 1
  %258 = getelementptr inbounds i8, i8* %251, i64 12
  %259 = bitcast i8* %258 to i32*
  br i1 %235, label %267, label %260

260:                                              ; preds = %250
  store i32 %205, i32* %259, align 1
  %261 = getelementptr inbounds i8, i8* %251, i64 16
  %262 = bitcast i8* %261 to i32*
  store i32 %204, i32* %262, align 1
  %263 = getelementptr inbounds i8, i8* %251, i64 20
  %264 = bitcast i8* %263 to i32*
  store i32 %203, i32* %264, align 1
  %265 = getelementptr inbounds i8, i8* %251, i64 24
  %266 = bitcast i8* %265 to i32*
  br label %267

267:                                              ; preds = %260, %250
  %268 = phi i8* [ %258, %250 ], [ %265, %260 ]
  %269 = phi i32* [ %259, %250 ], [ %266, %260 ]
  br i1 %186, label %273, label %270

270:                                              ; preds = %267
  store i32 0, i32* %269, align 1
  %271 = getelementptr inbounds i8, i8* %268, i64 4
  %272 = bitcast i8* %271 to i32*
  br label %273

273:                                              ; preds = %270, %267
  %274 = phi i8* [ %268, %267 ], [ %271, %270 ]
  %275 = phi i32* [ %269, %267 ], [ %272, %270 ]
  %276 = bitcast i32* %275 to float*
  store float %225, float* %276, align 1
  %277 = getelementptr inbounds i8, i8* %274, i64 4
  %278 = bitcast i8* %277 to float*
  store float %228, float* %278, align 1
  %279 = getelementptr inbounds i8, i8* %274, i64 8
  %280 = bitcast i8* %279 to i32*
  store i32 %206, i32* %280, align 1
  %281 = getelementptr inbounds i8, i8* %274, i64 12
  %282 = bitcast i8* %281 to i32*
  br i1 %235, label %290, label %283

283:                                              ; preds = %273
  store i32 %205, i32* %282, align 1
  %284 = getelementptr inbounds i8, i8* %274, i64 16
  %285 = bitcast i8* %284 to i32*
  store i32 %204, i32* %285, align 1
  %286 = getelementptr inbounds i8, i8* %274, i64 20
  %287 = bitcast i8* %286 to i32*
  store i32 %203, i32* %287, align 1
  %288 = getelementptr inbounds i8, i8* %274, i64 24
  %289 = bitcast i8* %288 to i32*
  br label %290

290:                                              ; preds = %283, %273
  %291 = phi i8* [ %281, %273 ], [ %288, %283 ]
  %292 = phi i32* [ %282, %273 ], [ %289, %283 ]
  br i1 %186, label %296, label %293

293:                                              ; preds = %290
  store i32 0, i32* %292, align 1
  %294 = getelementptr inbounds i8, i8* %291, i64 4
  %295 = bitcast i8* %294 to i32*
  br label %296

296:                                              ; preds = %293, %290
  %297 = phi i8* [ %291, %290 ], [ %294, %293 ]
  %298 = phi i32* [ %292, %290 ], [ %295, %293 ]
  %299 = bitcast i32* %298 to float*
  store float %225, float* %299, align 1
  %300 = getelementptr inbounds i8, i8* %297, i64 4
  %301 = bitcast i8* %300 to float*
  store float %222, float* %301, align 1
  %302 = getelementptr inbounds i8, i8* %297, i64 8
  %303 = bitcast i8* %302 to i32*
  store i32 %206, i32* %303, align 1
  %304 = getelementptr inbounds i8, i8* %297, i64 12
  %305 = bitcast i8* %304 to i32*
  br i1 %235, label %313, label %306

306:                                              ; preds = %296
  store i32 %205, i32* %305, align 1
  %307 = getelementptr inbounds i8, i8* %297, i64 16
  %308 = bitcast i8* %307 to i32*
  store i32 %204, i32* %308, align 1
  %309 = getelementptr inbounds i8, i8* %297, i64 20
  %310 = bitcast i8* %309 to i32*
  store i32 %203, i32* %310, align 1
  %311 = getelementptr inbounds i8, i8* %297, i64 24
  %312 = bitcast i8* %311 to i32*
  br label %313

313:                                              ; preds = %306, %296
  %314 = phi i8* [ %304, %296 ], [ %311, %306 ]
  %315 = phi i32* [ %305, %296 ], [ %312, %306 ]
  br i1 %186, label %318, label %316

316:                                              ; preds = %313
  store i32 0, i32* %315, align 1
  %317 = getelementptr inbounds i8, i8* %314, i64 4
  br label %318

318:                                              ; preds = %313, %316
  %319 = phi i8* [ %314, %313 ], [ %317, %316 ]
  br i1 %180, label %421, label %320

320:                                              ; preds = %318
  %321 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %178, i64 0, i32 0
  %322 = load float, float* %321, align 4
  %323 = fsub float %322, %215
  %324 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %174, i64 %172, i32 2, i32 1
  %325 = load float, float* %324, align 4
  %326 = fsub float %325, %216
  %327 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %174, i64 %172, i32 2, i32 2
  %328 = load float, float* %327, align 4
  %329 = fadd float %215, %328
  %330 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %174, i64 %172, i32 2, i32 3
  %331 = load float, float* %330, align 4
  %332 = fadd float %216, %331
  %333 = bitcast i8* %319 to float*
  store float %323, float* %333, align 1
  %334 = getelementptr inbounds i8, i8* %319, i64 4
  %335 = bitcast i8* %334 to float*
  store float %326, float* %335, align 1
  %336 = getelementptr inbounds i8, i8* %319, i64 8
  %337 = bitcast i8* %336 to i32*
  store i32 %206, i32* %337, align 1
  %338 = getelementptr inbounds i8, i8* %319, i64 12
  %339 = bitcast i8* %338 to i32*
  br i1 %235, label %347, label %340

340:                                              ; preds = %320
  store i32 %205, i32* %339, align 1
  %341 = getelementptr inbounds i8, i8* %319, i64 16
  %342 = bitcast i8* %341 to i32*
  store i32 %204, i32* %342, align 1
  %343 = getelementptr inbounds i8, i8* %319, i64 20
  %344 = bitcast i8* %343 to i32*
  store i32 %203, i32* %344, align 1
  %345 = getelementptr inbounds i8, i8* %319, i64 24
  %346 = bitcast i8* %345 to i32*
  br label %347

347:                                              ; preds = %340, %320
  %348 = phi i8* [ %338, %320 ], [ %345, %340 ]
  %349 = phi i32* [ %339, %320 ], [ %346, %340 ]
  br i1 %186, label %353, label %350

350:                                              ; preds = %347
  store i32 0, i32* %349, align 1
  %351 = getelementptr inbounds i8, i8* %348, i64 4
  %352 = bitcast i8* %351 to i32*
  br label %353

353:                                              ; preds = %350, %347
  %354 = phi i8* [ %348, %347 ], [ %351, %350 ]
  %355 = phi i32* [ %349, %347 ], [ %352, %350 ]
  %356 = bitcast i32* %355 to float*
  store float %323, float* %356, align 1
  %357 = getelementptr inbounds i8, i8* %354, i64 4
  %358 = bitcast i8* %357 to float*
  store float %332, float* %358, align 1
  %359 = getelementptr inbounds i8, i8* %354, i64 8
  %360 = bitcast i8* %359 to i32*
  store i32 %206, i32* %360, align 1
  %361 = getelementptr inbounds i8, i8* %354, i64 12
  %362 = bitcast i8* %361 to i32*
  br i1 %235, label %370, label %363

363:                                              ; preds = %353
  store i32 %205, i32* %362, align 1
  %364 = getelementptr inbounds i8, i8* %354, i64 16
  %365 = bitcast i8* %364 to i32*
  store i32 %204, i32* %365, align 1
  %366 = getelementptr inbounds i8, i8* %354, i64 20
  %367 = bitcast i8* %366 to i32*
  store i32 %203, i32* %367, align 1
  %368 = getelementptr inbounds i8, i8* %354, i64 24
  %369 = bitcast i8* %368 to i32*
  br label %370

370:                                              ; preds = %363, %353
  %371 = phi i8* [ %361, %353 ], [ %368, %363 ]
  %372 = phi i32* [ %362, %353 ], [ %369, %363 ]
  br i1 %186, label %376, label %373

373:                                              ; preds = %370
  store i32 0, i32* %372, align 1
  %374 = getelementptr inbounds i8, i8* %371, i64 4
  %375 = bitcast i8* %374 to i32*
  br label %376

376:                                              ; preds = %373, %370
  %377 = phi i8* [ %371, %370 ], [ %374, %373 ]
  %378 = phi i32* [ %372, %370 ], [ %375, %373 ]
  %379 = bitcast i32* %378 to float*
  store float %329, float* %379, align 1
  %380 = getelementptr inbounds i8, i8* %377, i64 4
  %381 = bitcast i8* %380 to float*
  store float %332, float* %381, align 1
  %382 = getelementptr inbounds i8, i8* %377, i64 8
  %383 = bitcast i8* %382 to i32*
  store i32 %206, i32* %383, align 1
  %384 = getelementptr inbounds i8, i8* %377, i64 12
  %385 = bitcast i8* %384 to i32*
  br i1 %235, label %393, label %386

386:                                              ; preds = %376
  store i32 %205, i32* %385, align 1
  %387 = getelementptr inbounds i8, i8* %377, i64 16
  %388 = bitcast i8* %387 to i32*
  store i32 %204, i32* %388, align 1
  %389 = getelementptr inbounds i8, i8* %377, i64 20
  %390 = bitcast i8* %389 to i32*
  store i32 %203, i32* %390, align 1
  %391 = getelementptr inbounds i8, i8* %377, i64 24
  %392 = bitcast i8* %391 to i32*
  br label %393

393:                                              ; preds = %386, %376
  %394 = phi i8* [ %384, %376 ], [ %391, %386 ]
  %395 = phi i32* [ %385, %376 ], [ %392, %386 ]
  br i1 %186, label %399, label %396

396:                                              ; preds = %393
  store i32 0, i32* %395, align 1
  %397 = getelementptr inbounds i8, i8* %394, i64 4
  %398 = bitcast i8* %397 to i32*
  br label %399

399:                                              ; preds = %396, %393
  %400 = phi i8* [ %394, %393 ], [ %397, %396 ]
  %401 = phi i32* [ %395, %393 ], [ %398, %396 ]
  %402 = bitcast i32* %401 to float*
  store float %329, float* %402, align 1
  %403 = getelementptr inbounds i8, i8* %400, i64 4
  %404 = bitcast i8* %403 to float*
  store float %326, float* %404, align 1
  %405 = getelementptr inbounds i8, i8* %400, i64 8
  %406 = bitcast i8* %405 to i32*
  store i32 %206, i32* %406, align 1
  %407 = getelementptr inbounds i8, i8* %400, i64 12
  %408 = bitcast i8* %407 to i32*
  br i1 %235, label %416, label %409

409:                                              ; preds = %399
  store i32 %205, i32* %408, align 1
  %410 = getelementptr inbounds i8, i8* %400, i64 16
  %411 = bitcast i8* %410 to i32*
  store i32 %204, i32* %411, align 1
  %412 = getelementptr inbounds i8, i8* %400, i64 20
  %413 = bitcast i8* %412 to i32*
  store i32 %203, i32* %413, align 1
  %414 = getelementptr inbounds i8, i8* %400, i64 24
  %415 = bitcast i8* %414 to i32*
  br label %416

416:                                              ; preds = %409, %399
  %417 = phi i8* [ %407, %399 ], [ %414, %409 ]
  %418 = phi i32* [ %408, %399 ], [ %415, %409 ]
  br i1 %186, label %421, label %419

419:                                              ; preds = %416
  store i32 0, i32* %418, align 1
  %420 = getelementptr inbounds i8, i8* %417, i64 4
  br label %421

421:                                              ; preds = %419, %416, %318
  %422 = phi i8* [ %319, %318 ], [ %417, %416 ], [ %420, %419 ]
  %423 = load float, float* %207, align 4
  %424 = load float, float* %211, align 4
  %425 = fcmp olt float %423, %424
  %426 = select i1 %425, float %424, float %423
  %427 = fcmp olt float %426, 5.000000e-01
  br i1 %427, label %428, label %432

428:                                              ; preds = %421
  %429 = fmul float %426, 2.000000e+00
  %430 = fadd float %426, 5.000000e-01
  %431 = fdiv float %429, %430
  br label %432

432:                                              ; preds = %428, %421
  %433 = phi float [ %431, %428 ], [ 1.000000e+00, %421 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %161) #14
  %434 = bitcast %struct.SkRGBA4f* %175 to <2 x float>*
  %435 = load <2 x float>, <2 x float>* %434, align 4
  %436 = insertelement <2 x float> undef, float %433, i32 0
  %437 = shufflevector <2 x float> %436, <2 x float> undef, <2 x i32> zeroinitializer
  %438 = fmul <2 x float> %437, %435
  %439 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %174, i64 %172, i32 0, i32 2
  %440 = bitcast float* %439 to <2 x float>*
  %441 = load <2 x float>, <2 x float>* %440, align 4
  %442 = fmul <2 x float> %437, %441
  store <2 x float> %438, <2 x float>* %162, align 8
  store <2 x float> %442, <2 x float>* %163, align 8
  %443 = select i1 %186, %struct.SkRGBA4f* %160, %struct.SkRGBA4f* %175
  br i1 %177, label %444, label %456

444:                                              ; preds = %432
  %445 = bitcast %struct.SkRGBA4f* %443 to i32*
  %446 = load i32, i32* %445, align 4
  %447 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %443, i64 0, i32 1
  %448 = bitcast float* %447 to i32*
  %449 = load i32, i32* %448, align 4
  %450 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %443, i64 0, i32 2
  %451 = bitcast float* %450 to i32*
  %452 = load i32, i32* %451, align 4
  %453 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %443, i64 0, i32 3
  %454 = bitcast float* %453 to i32*
  %455 = load i32, i32* %454, align 4
  br label %458

456:                                              ; preds = %432
  %457 = call i32 @_ZNK8SkRGBA4fIL11SkAlphaType2EE12toBytes_RGBAEv(%struct.SkRGBA4f* %443) #14
  br label %458

458:                                              ; preds = %456, %444
  %459 = phi i32 [ %455, %444 ], [ -1431655766, %456 ]
  %460 = phi i32 [ %452, %444 ], [ -1431655766, %456 ]
  %461 = phi i32 [ %449, %444 ], [ -1431655766, %456 ]
  %462 = phi i32 [ %446, %444 ], [ %457, %456 ]
  %463 = load float, float* %217, align 4
  %464 = fadd float %210, %463
  %465 = load float, float* %220, align 4
  %466 = fadd float %214, %465
  %467 = load float, float* %223, align 4
  %468 = fsub float %467, %210
  %469 = load float, float* %226, align 4
  %470 = fsub float %469, %214
  %471 = bitcast i8* %422 to float*
  store float %464, float* %471, align 1
  %472 = getelementptr inbounds i8, i8* %422, i64 4
  %473 = bitcast i8* %472 to float*
  store float %466, float* %473, align 1
  %474 = getelementptr inbounds i8, i8* %422, i64 8
  %475 = bitcast i8* %474 to i32*
  store i32 %462, i32* %475, align 1
  %476 = getelementptr inbounds i8, i8* %422, i64 12
  %477 = bitcast i8* %476 to i32*
  br i1 %235, label %485, label %478

478:                                              ; preds = %458
  store i32 %461, i32* %477, align 1
  %479 = getelementptr inbounds i8, i8* %422, i64 16
  %480 = bitcast i8* %479 to i32*
  store i32 %460, i32* %480, align 1
  %481 = getelementptr inbounds i8, i8* %422, i64 20
  %482 = bitcast i8* %481 to i32*
  store i32 %459, i32* %482, align 1
  %483 = getelementptr inbounds i8, i8* %422, i64 24
  %484 = bitcast i8* %483 to i32*
  br label %485

485:                                              ; preds = %478, %458
  %486 = phi i8* [ %476, %458 ], [ %483, %478 ]
  %487 = phi i32* [ %477, %458 ], [ %484, %478 ]
  br i1 %186, label %492, label %488

488:                                              ; preds = %485
  %489 = bitcast i32* %487 to float*
  store float %433, float* %489, align 1
  %490 = getelementptr inbounds i8, i8* %486, i64 4
  %491 = bitcast i8* %490 to i32*
  br label %492

492:                                              ; preds = %488, %485
  %493 = phi i8* [ %486, %485 ], [ %490, %488 ]
  %494 = phi i32* [ %487, %485 ], [ %491, %488 ]
  %495 = bitcast i32* %494 to float*
  store float %464, float* %495, align 1
  %496 = getelementptr inbounds i8, i8* %493, i64 4
  %497 = bitcast i8* %496 to float*
  store float %470, float* %497, align 1
  %498 = getelementptr inbounds i8, i8* %493, i64 8
  %499 = bitcast i8* %498 to i32*
  store i32 %462, i32* %499, align 1
  %500 = getelementptr inbounds i8, i8* %493, i64 12
  %501 = bitcast i8* %500 to i32*
  br i1 %235, label %509, label %502

502:                                              ; preds = %492
  store i32 %461, i32* %501, align 1
  %503 = getelementptr inbounds i8, i8* %493, i64 16
  %504 = bitcast i8* %503 to i32*
  store i32 %460, i32* %504, align 1
  %505 = getelementptr inbounds i8, i8* %493, i64 20
  %506 = bitcast i8* %505 to i32*
  store i32 %459, i32* %506, align 1
  %507 = getelementptr inbounds i8, i8* %493, i64 24
  %508 = bitcast i8* %507 to i32*
  br label %509

509:                                              ; preds = %502, %492
  %510 = phi i8* [ %500, %492 ], [ %507, %502 ]
  %511 = phi i32* [ %501, %492 ], [ %508, %502 ]
  br i1 %186, label %516, label %512

512:                                              ; preds = %509
  %513 = bitcast i32* %511 to float*
  store float %433, float* %513, align 1
  %514 = getelementptr inbounds i8, i8* %510, i64 4
  %515 = bitcast i8* %514 to i32*
  br label %516

516:                                              ; preds = %512, %509
  %517 = phi i8* [ %510, %509 ], [ %514, %512 ]
  %518 = phi i32* [ %511, %509 ], [ %515, %512 ]
  %519 = bitcast i32* %518 to float*
  store float %468, float* %519, align 1
  %520 = getelementptr inbounds i8, i8* %517, i64 4
  %521 = bitcast i8* %520 to float*
  store float %470, float* %521, align 1
  %522 = getelementptr inbounds i8, i8* %517, i64 8
  %523 = bitcast i8* %522 to i32*
  store i32 %462, i32* %523, align 1
  %524 = getelementptr inbounds i8, i8* %517, i64 12
  %525 = bitcast i8* %524 to i32*
  br i1 %235, label %533, label %526

526:                                              ; preds = %516
  store i32 %461, i32* %525, align 1
  %527 = getelementptr inbounds i8, i8* %517, i64 16
  %528 = bitcast i8* %527 to i32*
  store i32 %460, i32* %528, align 1
  %529 = getelementptr inbounds i8, i8* %517, i64 20
  %530 = bitcast i8* %529 to i32*
  store i32 %459, i32* %530, align 1
  %531 = getelementptr inbounds i8, i8* %517, i64 24
  %532 = bitcast i8* %531 to i32*
  br label %533

533:                                              ; preds = %526, %516
  %534 = phi i8* [ %524, %516 ], [ %531, %526 ]
  %535 = phi i32* [ %525, %516 ], [ %532, %526 ]
  br i1 %186, label %540, label %536

536:                                              ; preds = %533
  %537 = bitcast i32* %535 to float*
  store float %433, float* %537, align 1
  %538 = getelementptr inbounds i8, i8* %534, i64 4
  %539 = bitcast i8* %538 to i32*
  br label %540

540:                                              ; preds = %536, %533
  %541 = phi i8* [ %534, %533 ], [ %538, %536 ]
  %542 = phi i32* [ %535, %533 ], [ %539, %536 ]
  %543 = bitcast i32* %542 to float*
  store float %468, float* %543, align 1
  %544 = getelementptr inbounds i8, i8* %541, i64 4
  %545 = bitcast i8* %544 to float*
  store float %466, float* %545, align 1
  %546 = getelementptr inbounds i8, i8* %541, i64 8
  %547 = bitcast i8* %546 to i32*
  store i32 %462, i32* %547, align 1
  %548 = getelementptr inbounds i8, i8* %541, i64 12
  %549 = bitcast i8* %548 to i32*
  br i1 %235, label %557, label %550

550:                                              ; preds = %540
  store i32 %461, i32* %549, align 1
  %551 = getelementptr inbounds i8, i8* %541, i64 16
  %552 = bitcast i8* %551 to i32*
  store i32 %460, i32* %552, align 1
  %553 = getelementptr inbounds i8, i8* %541, i64 20
  %554 = bitcast i8* %553 to i32*
  store i32 %459, i32* %554, align 1
  %555 = getelementptr inbounds i8, i8* %541, i64 24
  %556 = bitcast i8* %555 to i32*
  br label %557

557:                                              ; preds = %550, %540
  %558 = phi i8* [ %548, %540 ], [ %555, %550 ]
  %559 = phi i32* [ %549, %540 ], [ %556, %550 ]
  br i1 %186, label %563, label %560

560:                                              ; preds = %557
  %561 = bitcast i32* %559 to float*
  store float %433, float* %561, align 1
  %562 = getelementptr inbounds i8, i8* %558, i64 4
  br label %563

563:                                              ; preds = %557, %560
  %564 = phi i8* [ %558, %557 ], [ %562, %560 ]
  br i1 %180, label %670, label %565

565:                                              ; preds = %563
  %566 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %178, i64 0, i32 0
  %567 = load float, float* %566, align 4
  %568 = fadd float %210, %567
  %569 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %174, i64 %172, i32 2, i32 1
  %570 = load float, float* %569, align 4
  %571 = fadd float %214, %570
  %572 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %174, i64 %172, i32 2, i32 2
  %573 = load float, float* %572, align 4
  %574 = fsub float %573, %210
  %575 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %174, i64 %172, i32 2, i32 3
  %576 = load float, float* %575, align 4
  %577 = fsub float %576, %214
  %578 = bitcast i8* %564 to float*
  store float %568, float* %578, align 1
  %579 = getelementptr inbounds i8, i8* %564, i64 4
  %580 = bitcast i8* %579 to float*
  store float %571, float* %580, align 1
  %581 = getelementptr inbounds i8, i8* %564, i64 8
  %582 = bitcast i8* %581 to i32*
  store i32 %462, i32* %582, align 1
  %583 = getelementptr inbounds i8, i8* %564, i64 12
  %584 = bitcast i8* %583 to i32*
  br i1 %235, label %592, label %585

585:                                              ; preds = %565
  store i32 %461, i32* %584, align 1
  %586 = getelementptr inbounds i8, i8* %564, i64 16
  %587 = bitcast i8* %586 to i32*
  store i32 %460, i32* %587, align 1
  %588 = getelementptr inbounds i8, i8* %564, i64 20
  %589 = bitcast i8* %588 to i32*
  store i32 %459, i32* %589, align 1
  %590 = getelementptr inbounds i8, i8* %564, i64 24
  %591 = bitcast i8* %590 to i32*
  br label %592

592:                                              ; preds = %585, %565
  %593 = phi i8* [ %583, %565 ], [ %590, %585 ]
  %594 = phi i32* [ %584, %565 ], [ %591, %585 ]
  br i1 %186, label %599, label %595

595:                                              ; preds = %592
  %596 = bitcast i32* %594 to float*
  store float %433, float* %596, align 1
  %597 = getelementptr inbounds i8, i8* %593, i64 4
  %598 = bitcast i8* %597 to i32*
  br label %599

599:                                              ; preds = %595, %592
  %600 = phi i8* [ %593, %592 ], [ %597, %595 ]
  %601 = phi i32* [ %594, %592 ], [ %598, %595 ]
  %602 = bitcast i32* %601 to float*
  store float %568, float* %602, align 1
  %603 = getelementptr inbounds i8, i8* %600, i64 4
  %604 = bitcast i8* %603 to float*
  store float %577, float* %604, align 1
  %605 = getelementptr inbounds i8, i8* %600, i64 8
  %606 = bitcast i8* %605 to i32*
  store i32 %462, i32* %606, align 1
  %607 = getelementptr inbounds i8, i8* %600, i64 12
  %608 = bitcast i8* %607 to i32*
  br i1 %235, label %616, label %609

609:                                              ; preds = %599
  store i32 %461, i32* %608, align 1
  %610 = getelementptr inbounds i8, i8* %600, i64 16
  %611 = bitcast i8* %610 to i32*
  store i32 %460, i32* %611, align 1
  %612 = getelementptr inbounds i8, i8* %600, i64 20
  %613 = bitcast i8* %612 to i32*
  store i32 %459, i32* %613, align 1
  %614 = getelementptr inbounds i8, i8* %600, i64 24
  %615 = bitcast i8* %614 to i32*
  br label %616

616:                                              ; preds = %609, %599
  %617 = phi i8* [ %607, %599 ], [ %614, %609 ]
  %618 = phi i32* [ %608, %599 ], [ %615, %609 ]
  br i1 %186, label %623, label %619

619:                                              ; preds = %616
  %620 = bitcast i32* %618 to float*
  store float %433, float* %620, align 1
  %621 = getelementptr inbounds i8, i8* %617, i64 4
  %622 = bitcast i8* %621 to i32*
  br label %623

623:                                              ; preds = %619, %616
  %624 = phi i8* [ %617, %616 ], [ %621, %619 ]
  %625 = phi i32* [ %618, %616 ], [ %622, %619 ]
  %626 = bitcast i32* %625 to float*
  store float %574, float* %626, align 1
  %627 = getelementptr inbounds i8, i8* %624, i64 4
  %628 = bitcast i8* %627 to float*
  store float %577, float* %628, align 1
  %629 = getelementptr inbounds i8, i8* %624, i64 8
  %630 = bitcast i8* %629 to i32*
  store i32 %462, i32* %630, align 1
  %631 = getelementptr inbounds i8, i8* %624, i64 12
  %632 = bitcast i8* %631 to i32*
  br i1 %235, label %640, label %633

633:                                              ; preds = %623
  store i32 %461, i32* %632, align 1
  %634 = getelementptr inbounds i8, i8* %624, i64 16
  %635 = bitcast i8* %634 to i32*
  store i32 %460, i32* %635, align 1
  %636 = getelementptr inbounds i8, i8* %624, i64 20
  %637 = bitcast i8* %636 to i32*
  store i32 %459, i32* %637, align 1
  %638 = getelementptr inbounds i8, i8* %624, i64 24
  %639 = bitcast i8* %638 to i32*
  br label %640

640:                                              ; preds = %633, %623
  %641 = phi i8* [ %631, %623 ], [ %638, %633 ]
  %642 = phi i32* [ %632, %623 ], [ %639, %633 ]
  br i1 %186, label %647, label %643

643:                                              ; preds = %640
  %644 = bitcast i32* %642 to float*
  store float %433, float* %644, align 1
  %645 = getelementptr inbounds i8, i8* %641, i64 4
  %646 = bitcast i8* %645 to i32*
  br label %647

647:                                              ; preds = %643, %640
  %648 = phi i8* [ %641, %640 ], [ %645, %643 ]
  %649 = phi i32* [ %642, %640 ], [ %646, %643 ]
  %650 = bitcast i32* %649 to float*
  store float %574, float* %650, align 1
  %651 = getelementptr inbounds i8, i8* %648, i64 4
  %652 = bitcast i8* %651 to float*
  store float %571, float* %652, align 1
  %653 = getelementptr inbounds i8, i8* %648, i64 8
  %654 = bitcast i8* %653 to i32*
  store i32 %462, i32* %654, align 1
  %655 = getelementptr inbounds i8, i8* %648, i64 12
  %656 = bitcast i8* %655 to i32*
  br i1 %235, label %664, label %657

657:                                              ; preds = %647
  store i32 %461, i32* %656, align 1
  %658 = getelementptr inbounds i8, i8* %648, i64 16
  %659 = bitcast i8* %658 to i32*
  store i32 %460, i32* %659, align 1
  %660 = getelementptr inbounds i8, i8* %648, i64 20
  %661 = bitcast i8* %660 to i32*
  store i32 %459, i32* %661, align 1
  %662 = getelementptr inbounds i8, i8* %648, i64 24
  %663 = bitcast i8* %662 to i32*
  br label %664

664:                                              ; preds = %657, %647
  %665 = phi i8* [ %655, %647 ], [ %662, %657 ]
  %666 = phi i32* [ %656, %647 ], [ %663, %657 ]
  br i1 %186, label %670, label %667

667:                                              ; preds = %664
  %668 = bitcast i32* %666 to float*
  store float %433, float* %668, align 1
  %669 = getelementptr inbounds i8, i8* %665, i64 4
  br label %670

670:                                              ; preds = %667, %664, %563
  %671 = phi i8* [ %564, %563 ], [ %665, %664 ], [ %669, %667 ]
  %672 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %174, i64 %172, i32 3, i32 0
  %673 = load float, float* %672, align 4
  br i1 %183, label %674, label %875

674:                                              ; preds = %670
  %675 = fsub float %673, %210
  %676 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %174, i64 %172, i32 3, i32 1
  %677 = load float, float* %676, align 4
  %678 = fsub float %677, %214
  %679 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %174, i64 %172, i32 3, i32 2
  %680 = load float, float* %679, align 4
  %681 = fadd float %210, %680
  %682 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %174, i64 %172, i32 3, i32 3
  %683 = load float, float* %682, align 4
  %684 = fadd float %214, %683
  %685 = bitcast i8* %671 to float*
  store float %675, float* %685, align 1
  %686 = getelementptr inbounds i8, i8* %671, i64 4
  %687 = bitcast i8* %686 to float*
  store float %678, float* %687, align 1
  %688 = getelementptr inbounds i8, i8* %671, i64 8
  %689 = bitcast i8* %688 to i32*
  store i32 %462, i32* %689, align 1
  %690 = getelementptr inbounds i8, i8* %671, i64 12
  %691 = bitcast i8* %690 to i32*
  br i1 %235, label %699, label %692

692:                                              ; preds = %674
  store i32 %461, i32* %691, align 1
  %693 = getelementptr inbounds i8, i8* %671, i64 16
  %694 = bitcast i8* %693 to i32*
  store i32 %460, i32* %694, align 1
  %695 = getelementptr inbounds i8, i8* %671, i64 20
  %696 = bitcast i8* %695 to i32*
  store i32 %459, i32* %696, align 1
  %697 = getelementptr inbounds i8, i8* %671, i64 24
  %698 = bitcast i8* %697 to i32*
  br label %699

699:                                              ; preds = %692, %674
  %700 = phi i8* [ %690, %674 ], [ %697, %692 ]
  %701 = phi i32* [ %691, %674 ], [ %698, %692 ]
  br i1 %186, label %706, label %702

702:                                              ; preds = %699
  %703 = bitcast i32* %701 to float*
  store float %433, float* %703, align 1
  %704 = getelementptr inbounds i8, i8* %700, i64 4
  %705 = bitcast i8* %704 to i32*
  br label %706

706:                                              ; preds = %702, %699
  %707 = phi i8* [ %700, %699 ], [ %704, %702 ]
  %708 = phi i32* [ %701, %699 ], [ %705, %702 ]
  %709 = bitcast i32* %708 to float*
  store float %675, float* %709, align 1
  %710 = getelementptr inbounds i8, i8* %707, i64 4
  %711 = bitcast i8* %710 to float*
  store float %684, float* %711, align 1
  %712 = getelementptr inbounds i8, i8* %707, i64 8
  %713 = bitcast i8* %712 to i32*
  store i32 %462, i32* %713, align 1
  %714 = getelementptr inbounds i8, i8* %707, i64 12
  %715 = bitcast i8* %714 to i32*
  br i1 %235, label %723, label %716

716:                                              ; preds = %706
  store i32 %461, i32* %715, align 1
  %717 = getelementptr inbounds i8, i8* %707, i64 16
  %718 = bitcast i8* %717 to i32*
  store i32 %460, i32* %718, align 1
  %719 = getelementptr inbounds i8, i8* %707, i64 20
  %720 = bitcast i8* %719 to i32*
  store i32 %459, i32* %720, align 1
  %721 = getelementptr inbounds i8, i8* %707, i64 24
  %722 = bitcast i8* %721 to i32*
  br label %723

723:                                              ; preds = %716, %706
  %724 = phi i8* [ %714, %706 ], [ %721, %716 ]
  %725 = phi i32* [ %715, %706 ], [ %722, %716 ]
  br i1 %186, label %730, label %726

726:                                              ; preds = %723
  %727 = bitcast i32* %725 to float*
  store float %433, float* %727, align 1
  %728 = getelementptr inbounds i8, i8* %724, i64 4
  %729 = bitcast i8* %728 to i32*
  br label %730

730:                                              ; preds = %726, %723
  %731 = phi i8* [ %724, %723 ], [ %728, %726 ]
  %732 = phi i32* [ %725, %723 ], [ %729, %726 ]
  %733 = bitcast i32* %732 to float*
  store float %681, float* %733, align 1
  %734 = getelementptr inbounds i8, i8* %731, i64 4
  %735 = bitcast i8* %734 to float*
  store float %684, float* %735, align 1
  %736 = getelementptr inbounds i8, i8* %731, i64 8
  %737 = bitcast i8* %736 to i32*
  store i32 %462, i32* %737, align 1
  %738 = getelementptr inbounds i8, i8* %731, i64 12
  %739 = bitcast i8* %738 to i32*
  br i1 %235, label %747, label %740

740:                                              ; preds = %730
  store i32 %461, i32* %739, align 1
  %741 = getelementptr inbounds i8, i8* %731, i64 16
  %742 = bitcast i8* %741 to i32*
  store i32 %460, i32* %742, align 1
  %743 = getelementptr inbounds i8, i8* %731, i64 20
  %744 = bitcast i8* %743 to i32*
  store i32 %459, i32* %744, align 1
  %745 = getelementptr inbounds i8, i8* %731, i64 24
  %746 = bitcast i8* %745 to i32*
  br label %747

747:                                              ; preds = %740, %730
  %748 = phi i8* [ %738, %730 ], [ %745, %740 ]
  %749 = phi i32* [ %739, %730 ], [ %746, %740 ]
  br i1 %186, label %754, label %750

750:                                              ; preds = %747
  %751 = bitcast i32* %749 to float*
  store float %433, float* %751, align 1
  %752 = getelementptr inbounds i8, i8* %748, i64 4
  %753 = bitcast i8* %752 to i32*
  br label %754

754:                                              ; preds = %750, %747
  %755 = phi i8* [ %748, %747 ], [ %752, %750 ]
  %756 = phi i32* [ %749, %747 ], [ %753, %750 ]
  %757 = bitcast i32* %756 to float*
  store float %681, float* %757, align 1
  %758 = getelementptr inbounds i8, i8* %755, i64 4
  %759 = bitcast i8* %758 to float*
  store float %678, float* %759, align 1
  %760 = getelementptr inbounds i8, i8* %755, i64 8
  %761 = bitcast i8* %760 to i32*
  store i32 %462, i32* %761, align 1
  %762 = getelementptr inbounds i8, i8* %755, i64 12
  %763 = bitcast i8* %762 to i32*
  br i1 %235, label %771, label %764

764:                                              ; preds = %754
  store i32 %461, i32* %763, align 1
  %765 = getelementptr inbounds i8, i8* %755, i64 16
  %766 = bitcast i8* %765 to i32*
  store i32 %460, i32* %766, align 1
  %767 = getelementptr inbounds i8, i8* %755, i64 20
  %768 = bitcast i8* %767 to i32*
  store i32 %459, i32* %768, align 1
  %769 = getelementptr inbounds i8, i8* %755, i64 24
  %770 = bitcast i8* %769 to i32*
  br label %771

771:                                              ; preds = %764, %754
  %772 = phi i8* [ %762, %754 ], [ %769, %764 ]
  %773 = phi i32* [ %763, %754 ], [ %770, %764 ]
  br i1 %186, label %777, label %774

774:                                              ; preds = %771
  %775 = bitcast i32* %773 to float*
  store float %433, float* %775, align 1
  %776 = getelementptr inbounds i8, i8* %772, i64 4
  br label %777

777:                                              ; preds = %771, %774
  %778 = phi i8* [ %772, %771 ], [ %776, %774 ]
  %779 = load float, float* %672, align 4
  %780 = fadd float %215, %779
  %781 = load float, float* %676, align 4
  %782 = fadd float %216, %781
  %783 = load float, float* %679, align 4
  %784 = fsub float %783, %215
  %785 = load float, float* %682, align 4
  %786 = fsub float %785, %216
  %787 = bitcast i8* %778 to float*
  store float %780, float* %787, align 1
  %788 = getelementptr inbounds i8, i8* %778, i64 4
  %789 = bitcast i8* %788 to float*
  store float %782, float* %789, align 1
  %790 = getelementptr inbounds i8, i8* %778, i64 8
  %791 = bitcast i8* %790 to i32*
  store i32 %206, i32* %791, align 1
  %792 = getelementptr inbounds i8, i8* %778, i64 12
  %793 = bitcast i8* %792 to i32*
  br i1 %235, label %801, label %794

794:                                              ; preds = %777
  store i32 %205, i32* %793, align 1
  %795 = getelementptr inbounds i8, i8* %778, i64 16
  %796 = bitcast i8* %795 to i32*
  store i32 %204, i32* %796, align 1
  %797 = getelementptr inbounds i8, i8* %778, i64 20
  %798 = bitcast i8* %797 to i32*
  store i32 %203, i32* %798, align 1
  %799 = getelementptr inbounds i8, i8* %778, i64 24
  %800 = bitcast i8* %799 to i32*
  br label %801

801:                                              ; preds = %794, %777
  %802 = phi i8* [ %792, %777 ], [ %799, %794 ]
  %803 = phi i32* [ %793, %777 ], [ %800, %794 ]
  br i1 %186, label %807, label %804

804:                                              ; preds = %801
  store i32 0, i32* %803, align 1
  %805 = getelementptr inbounds i8, i8* %802, i64 4
  %806 = bitcast i8* %805 to i32*
  br label %807

807:                                              ; preds = %804, %801
  %808 = phi i8* [ %802, %801 ], [ %805, %804 ]
  %809 = phi i32* [ %803, %801 ], [ %806, %804 ]
  %810 = bitcast i32* %809 to float*
  store float %780, float* %810, align 1
  %811 = getelementptr inbounds i8, i8* %808, i64 4
  %812 = bitcast i8* %811 to float*
  store float %786, float* %812, align 1
  %813 = getelementptr inbounds i8, i8* %808, i64 8
  %814 = bitcast i8* %813 to i32*
  store i32 %206, i32* %814, align 1
  %815 = getelementptr inbounds i8, i8* %808, i64 12
  %816 = bitcast i8* %815 to i32*
  br i1 %235, label %824, label %817

817:                                              ; preds = %807
  store i32 %205, i32* %816, align 1
  %818 = getelementptr inbounds i8, i8* %808, i64 16
  %819 = bitcast i8* %818 to i32*
  store i32 %204, i32* %819, align 1
  %820 = getelementptr inbounds i8, i8* %808, i64 20
  %821 = bitcast i8* %820 to i32*
  store i32 %203, i32* %821, align 1
  %822 = getelementptr inbounds i8, i8* %808, i64 24
  %823 = bitcast i8* %822 to i32*
  br label %824

824:                                              ; preds = %817, %807
  %825 = phi i8* [ %815, %807 ], [ %822, %817 ]
  %826 = phi i32* [ %816, %807 ], [ %823, %817 ]
  br i1 %186, label %830, label %827

827:                                              ; preds = %824
  store i32 0, i32* %826, align 1
  %828 = getelementptr inbounds i8, i8* %825, i64 4
  %829 = bitcast i8* %828 to i32*
  br label %830

830:                                              ; preds = %827, %824
  %831 = phi i8* [ %825, %824 ], [ %828, %827 ]
  %832 = phi i32* [ %826, %824 ], [ %829, %827 ]
  %833 = bitcast i32* %832 to float*
  store float %784, float* %833, align 1
  %834 = getelementptr inbounds i8, i8* %831, i64 4
  %835 = bitcast i8* %834 to float*
  store float %786, float* %835, align 1
  %836 = getelementptr inbounds i8, i8* %831, i64 8
  %837 = bitcast i8* %836 to i32*
  store i32 %206, i32* %837, align 1
  %838 = getelementptr inbounds i8, i8* %831, i64 12
  %839 = bitcast i8* %838 to i32*
  br i1 %235, label %847, label %840

840:                                              ; preds = %830
  store i32 %205, i32* %839, align 1
  %841 = getelementptr inbounds i8, i8* %831, i64 16
  %842 = bitcast i8* %841 to i32*
  store i32 %204, i32* %842, align 1
  %843 = getelementptr inbounds i8, i8* %831, i64 20
  %844 = bitcast i8* %843 to i32*
  store i32 %203, i32* %844, align 1
  %845 = getelementptr inbounds i8, i8* %831, i64 24
  %846 = bitcast i8* %845 to i32*
  br label %847

847:                                              ; preds = %840, %830
  %848 = phi i8* [ %838, %830 ], [ %845, %840 ]
  %849 = phi i32* [ %839, %830 ], [ %846, %840 ]
  br i1 %186, label %853, label %850

850:                                              ; preds = %847
  store i32 0, i32* %849, align 1
  %851 = getelementptr inbounds i8, i8* %848, i64 4
  %852 = bitcast i8* %851 to i32*
  br label %853

853:                                              ; preds = %850, %847
  %854 = phi i8* [ %848, %847 ], [ %851, %850 ]
  %855 = phi i32* [ %849, %847 ], [ %852, %850 ]
  %856 = bitcast i32* %855 to float*
  store float %784, float* %856, align 1
  %857 = getelementptr inbounds i8, i8* %854, i64 4
  %858 = bitcast i8* %857 to float*
  store float %782, float* %858, align 1
  %859 = getelementptr inbounds i8, i8* %854, i64 8
  %860 = bitcast i8* %859 to i32*
  store i32 %206, i32* %860, align 1
  %861 = getelementptr inbounds i8, i8* %854, i64 12
  %862 = bitcast i8* %861 to i32*
  br i1 %235, label %870, label %863

863:                                              ; preds = %853
  store i32 %205, i32* %862, align 1
  %864 = getelementptr inbounds i8, i8* %854, i64 16
  %865 = bitcast i8* %864 to i32*
  store i32 %204, i32* %865, align 1
  %866 = getelementptr inbounds i8, i8* %854, i64 20
  %867 = bitcast i8* %866 to i32*
  store i32 %203, i32* %867, align 1
  %868 = getelementptr inbounds i8, i8* %854, i64 24
  %869 = bitcast i8* %868 to i32*
  br label %870

870:                                              ; preds = %863, %853
  %871 = phi i8* [ %861, %853 ], [ %868, %863 ]
  %872 = phi i32* [ %862, %853 ], [ %869, %863 ]
  br i1 %186, label %1071, label %873

873:                                              ; preds = %870
  store i32 0, i32* %872, align 1
  %874 = getelementptr inbounds i8, i8* %871, i64 4
  br label %1071

875:                                              ; preds = %670
  %876 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %174, i64 %172, i32 3, i32 1
  %877 = bitcast float* %876 to i32*
  %878 = load i32, i32* %877, align 4
  %879 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %174, i64 %172, i32 3, i32 2
  %880 = bitcast float* %879 to i32*
  %881 = load i32, i32* %880, align 4
  %882 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %174, i64 %172, i32 3, i32 3
  %883 = bitcast float* %882 to i32*
  %884 = load i32, i32* %883, align 4
  %885 = bitcast i8* %671 to float*
  store float %673, float* %885, align 1
  %886 = getelementptr inbounds i8, i8* %671, i64 4
  %887 = bitcast i8* %886 to i32*
  store i32 %878, i32* %887, align 1
  %888 = getelementptr inbounds i8, i8* %671, i64 8
  %889 = bitcast i8* %888 to i32*
  store i32 %462, i32* %889, align 1
  %890 = getelementptr inbounds i8, i8* %671, i64 12
  %891 = bitcast i8* %890 to i32*
  br i1 %235, label %899, label %892

892:                                              ; preds = %875
  store i32 %461, i32* %891, align 1
  %893 = getelementptr inbounds i8, i8* %671, i64 16
  %894 = bitcast i8* %893 to i32*
  store i32 %460, i32* %894, align 1
  %895 = getelementptr inbounds i8, i8* %671, i64 20
  %896 = bitcast i8* %895 to i32*
  store i32 %459, i32* %896, align 1
  %897 = getelementptr inbounds i8, i8* %671, i64 24
  %898 = bitcast i8* %897 to i32*
  br label %899

899:                                              ; preds = %892, %875
  %900 = phi i8* [ %890, %875 ], [ %897, %892 ]
  %901 = phi i32* [ %891, %875 ], [ %898, %892 ]
  br i1 %186, label %906, label %902

902:                                              ; preds = %899
  %903 = bitcast i32* %901 to float*
  store float %433, float* %903, align 1
  %904 = getelementptr inbounds i8, i8* %900, i64 4
  %905 = bitcast i8* %904 to i32*
  br label %906

906:                                              ; preds = %902, %899
  %907 = phi i8* [ %900, %899 ], [ %904, %902 ]
  %908 = phi i32* [ %901, %899 ], [ %905, %902 ]
  %909 = bitcast i32* %908 to float*
  store float %673, float* %909, align 1
  %910 = getelementptr inbounds i8, i8* %907, i64 4
  %911 = bitcast i8* %910 to i32*
  store i32 %884, i32* %911, align 1
  %912 = getelementptr inbounds i8, i8* %907, i64 8
  %913 = bitcast i8* %912 to i32*
  store i32 %462, i32* %913, align 1
  %914 = getelementptr inbounds i8, i8* %907, i64 12
  %915 = bitcast i8* %914 to i32*
  br i1 %235, label %923, label %916

916:                                              ; preds = %906
  store i32 %461, i32* %915, align 1
  %917 = getelementptr inbounds i8, i8* %907, i64 16
  %918 = bitcast i8* %917 to i32*
  store i32 %460, i32* %918, align 1
  %919 = getelementptr inbounds i8, i8* %907, i64 20
  %920 = bitcast i8* %919 to i32*
  store i32 %459, i32* %920, align 1
  %921 = getelementptr inbounds i8, i8* %907, i64 24
  %922 = bitcast i8* %921 to i32*
  br label %923

923:                                              ; preds = %916, %906
  %924 = phi i8* [ %914, %906 ], [ %921, %916 ]
  %925 = phi i32* [ %915, %906 ], [ %922, %916 ]
  br i1 %186, label %930, label %926

926:                                              ; preds = %923
  %927 = bitcast i32* %925 to float*
  store float %433, float* %927, align 1
  %928 = getelementptr inbounds i8, i8* %924, i64 4
  %929 = bitcast i8* %928 to i32*
  br label %930

930:                                              ; preds = %926, %923
  %931 = phi i8* [ %924, %923 ], [ %928, %926 ]
  %932 = phi i32* [ %925, %923 ], [ %929, %926 ]
  store i32 %881, i32* %932, align 1
  %933 = getelementptr inbounds i8, i8* %931, i64 4
  %934 = bitcast i8* %933 to i32*
  store i32 %884, i32* %934, align 1
  %935 = getelementptr inbounds i8, i8* %931, i64 8
  %936 = bitcast i8* %935 to i32*
  store i32 %462, i32* %936, align 1
  %937 = getelementptr inbounds i8, i8* %931, i64 12
  %938 = bitcast i8* %937 to i32*
  br i1 %235, label %946, label %939

939:                                              ; preds = %930
  store i32 %461, i32* %938, align 1
  %940 = getelementptr inbounds i8, i8* %931, i64 16
  %941 = bitcast i8* %940 to i32*
  store i32 %460, i32* %941, align 1
  %942 = getelementptr inbounds i8, i8* %931, i64 20
  %943 = bitcast i8* %942 to i32*
  store i32 %459, i32* %943, align 1
  %944 = getelementptr inbounds i8, i8* %931, i64 24
  %945 = bitcast i8* %944 to i32*
  br label %946

946:                                              ; preds = %939, %930
  %947 = phi i8* [ %937, %930 ], [ %944, %939 ]
  %948 = phi i32* [ %938, %930 ], [ %945, %939 ]
  br i1 %186, label %953, label %949

949:                                              ; preds = %946
  %950 = bitcast i32* %948 to float*
  store float %433, float* %950, align 1
  %951 = getelementptr inbounds i8, i8* %947, i64 4
  %952 = bitcast i8* %951 to i32*
  br label %953

953:                                              ; preds = %949, %946
  %954 = phi i8* [ %947, %946 ], [ %951, %949 ]
  %955 = phi i32* [ %948, %946 ], [ %952, %949 ]
  store i32 %881, i32* %955, align 1
  %956 = getelementptr inbounds i8, i8* %954, i64 4
  %957 = bitcast i8* %956 to i32*
  store i32 %878, i32* %957, align 1
  %958 = getelementptr inbounds i8, i8* %954, i64 8
  %959 = bitcast i8* %958 to i32*
  store i32 %462, i32* %959, align 1
  %960 = getelementptr inbounds i8, i8* %954, i64 12
  %961 = bitcast i8* %960 to i32*
  br i1 %235, label %969, label %962

962:                                              ; preds = %953
  store i32 %461, i32* %961, align 1
  %963 = getelementptr inbounds i8, i8* %954, i64 16
  %964 = bitcast i8* %963 to i32*
  store i32 %460, i32* %964, align 1
  %965 = getelementptr inbounds i8, i8* %954, i64 20
  %966 = bitcast i8* %965 to i32*
  store i32 %459, i32* %966, align 1
  %967 = getelementptr inbounds i8, i8* %954, i64 24
  %968 = bitcast i8* %967 to i32*
  br label %969

969:                                              ; preds = %962, %953
  %970 = phi i8* [ %960, %953 ], [ %967, %962 ]
  %971 = phi i32* [ %961, %953 ], [ %968, %962 ]
  br i1 %186, label %975, label %972

972:                                              ; preds = %969
  %973 = bitcast i32* %971 to float*
  store float %433, float* %973, align 1
  %974 = getelementptr inbounds i8, i8* %970, i64 4
  br label %975

975:                                              ; preds = %969, %972
  %976 = phi i8* [ %970, %969 ], [ %974, %972 ]
  %977 = bitcast float* %672 to i32*
  %978 = load i32, i32* %977, align 4
  %979 = load i32, i32* %877, align 4
  %980 = load i32, i32* %880, align 4
  %981 = load i32, i32* %883, align 4
  %982 = bitcast i8* %976 to i32*
  store i32 %978, i32* %982, align 1
  %983 = getelementptr inbounds i8, i8* %976, i64 4
  %984 = bitcast i8* %983 to i32*
  store i32 %979, i32* %984, align 1
  %985 = getelementptr inbounds i8, i8* %976, i64 8
  %986 = bitcast i8* %985 to i32*
  store i32 %462, i32* %986, align 1
  %987 = getelementptr inbounds i8, i8* %976, i64 12
  %988 = bitcast i8* %987 to i32*
  br i1 %235, label %996, label %989

989:                                              ; preds = %975
  store i32 %461, i32* %988, align 1
  %990 = getelementptr inbounds i8, i8* %976, i64 16
  %991 = bitcast i8* %990 to i32*
  store i32 %460, i32* %991, align 1
  %992 = getelementptr inbounds i8, i8* %976, i64 20
  %993 = bitcast i8* %992 to i32*
  store i32 %459, i32* %993, align 1
  %994 = getelementptr inbounds i8, i8* %976, i64 24
  %995 = bitcast i8* %994 to i32*
  br label %996

996:                                              ; preds = %989, %975
  %997 = phi i8* [ %987, %975 ], [ %994, %989 ]
  %998 = phi i32* [ %988, %975 ], [ %995, %989 ]
  br i1 %186, label %1003, label %999

999:                                              ; preds = %996
  %1000 = bitcast i32* %998 to float*
  store float %433, float* %1000, align 1
  %1001 = getelementptr inbounds i8, i8* %997, i64 4
  %1002 = bitcast i8* %1001 to i32*
  br label %1003

1003:                                             ; preds = %999, %996
  %1004 = phi i8* [ %997, %996 ], [ %1001, %999 ]
  %1005 = phi i32* [ %998, %996 ], [ %1002, %999 ]
  store i32 %978, i32* %1005, align 1
  %1006 = getelementptr inbounds i8, i8* %1004, i64 4
  %1007 = bitcast i8* %1006 to i32*
  store i32 %981, i32* %1007, align 1
  %1008 = getelementptr inbounds i8, i8* %1004, i64 8
  %1009 = bitcast i8* %1008 to i32*
  store i32 %462, i32* %1009, align 1
  %1010 = getelementptr inbounds i8, i8* %1004, i64 12
  %1011 = bitcast i8* %1010 to i32*
  br i1 %235, label %1019, label %1012

1012:                                             ; preds = %1003
  store i32 %461, i32* %1011, align 1
  %1013 = getelementptr inbounds i8, i8* %1004, i64 16
  %1014 = bitcast i8* %1013 to i32*
  store i32 %460, i32* %1014, align 1
  %1015 = getelementptr inbounds i8, i8* %1004, i64 20
  %1016 = bitcast i8* %1015 to i32*
  store i32 %459, i32* %1016, align 1
  %1017 = getelementptr inbounds i8, i8* %1004, i64 24
  %1018 = bitcast i8* %1017 to i32*
  br label %1019

1019:                                             ; preds = %1012, %1003
  %1020 = phi i8* [ %1010, %1003 ], [ %1017, %1012 ]
  %1021 = phi i32* [ %1011, %1003 ], [ %1018, %1012 ]
  br i1 %186, label %1026, label %1022

1022:                                             ; preds = %1019
  %1023 = bitcast i32* %1021 to float*
  store float %433, float* %1023, align 1
  %1024 = getelementptr inbounds i8, i8* %1020, i64 4
  %1025 = bitcast i8* %1024 to i32*
  br label %1026

1026:                                             ; preds = %1022, %1019
  %1027 = phi i8* [ %1020, %1019 ], [ %1024, %1022 ]
  %1028 = phi i32* [ %1021, %1019 ], [ %1025, %1022 ]
  store i32 %980, i32* %1028, align 1
  %1029 = getelementptr inbounds i8, i8* %1027, i64 4
  %1030 = bitcast i8* %1029 to i32*
  store i32 %981, i32* %1030, align 1
  %1031 = getelementptr inbounds i8, i8* %1027, i64 8
  %1032 = bitcast i8* %1031 to i32*
  store i32 %462, i32* %1032, align 1
  %1033 = getelementptr inbounds i8, i8* %1027, i64 12
  %1034 = bitcast i8* %1033 to i32*
  br i1 %235, label %1042, label %1035

1035:                                             ; preds = %1026
  store i32 %461, i32* %1034, align 1
  %1036 = getelementptr inbounds i8, i8* %1027, i64 16
  %1037 = bitcast i8* %1036 to i32*
  store i32 %460, i32* %1037, align 1
  %1038 = getelementptr inbounds i8, i8* %1027, i64 20
  %1039 = bitcast i8* %1038 to i32*
  store i32 %459, i32* %1039, align 1
  %1040 = getelementptr inbounds i8, i8* %1027, i64 24
  %1041 = bitcast i8* %1040 to i32*
  br label %1042

1042:                                             ; preds = %1035, %1026
  %1043 = phi i8* [ %1033, %1026 ], [ %1040, %1035 ]
  %1044 = phi i32* [ %1034, %1026 ], [ %1041, %1035 ]
  br i1 %186, label %1049, label %1045

1045:                                             ; preds = %1042
  %1046 = bitcast i32* %1044 to float*
  store float %433, float* %1046, align 1
  %1047 = getelementptr inbounds i8, i8* %1043, i64 4
  %1048 = bitcast i8* %1047 to i32*
  br label %1049

1049:                                             ; preds = %1045, %1042
  %1050 = phi i8* [ %1043, %1042 ], [ %1047, %1045 ]
  %1051 = phi i32* [ %1044, %1042 ], [ %1048, %1045 ]
  store i32 %980, i32* %1051, align 1
  %1052 = getelementptr inbounds i8, i8* %1050, i64 4
  %1053 = bitcast i8* %1052 to i32*
  store i32 %979, i32* %1053, align 1
  %1054 = getelementptr inbounds i8, i8* %1050, i64 8
  %1055 = bitcast i8* %1054 to i32*
  store i32 %462, i32* %1055, align 1
  %1056 = getelementptr inbounds i8, i8* %1050, i64 12
  %1057 = bitcast i8* %1056 to i32*
  br i1 %235, label %1065, label %1058

1058:                                             ; preds = %1049
  store i32 %461, i32* %1057, align 1
  %1059 = getelementptr inbounds i8, i8* %1050, i64 16
  %1060 = bitcast i8* %1059 to i32*
  store i32 %460, i32* %1060, align 1
  %1061 = getelementptr inbounds i8, i8* %1050, i64 20
  %1062 = bitcast i8* %1061 to i32*
  store i32 %459, i32* %1062, align 1
  %1063 = getelementptr inbounds i8, i8* %1050, i64 24
  %1064 = bitcast i8* %1063 to i32*
  br label %1065

1065:                                             ; preds = %1058, %1049
  %1066 = phi i8* [ %1056, %1049 ], [ %1063, %1058 ]
  %1067 = phi i32* [ %1057, %1049 ], [ %1064, %1058 ]
  br i1 %186, label %1071, label %1068

1068:                                             ; preds = %1065
  %1069 = bitcast i32* %1067 to float*
  store float %433, float* %1069, align 1
  %1070 = getelementptr inbounds i8, i8* %1066, i64 4
  br label %1071

1071:                                             ; preds = %1068, %1065, %873, %870
  %1072 = phi i8* [ %871, %870 ], [ %874, %873 ], [ %1066, %1065 ], [ %1070, %1068 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %161) #14
  %1073 = add nuw nsw i64 %172, 1
  %1074 = icmp eq i64 %1073, %164
  br i1 %1074, label %166, label %171

1075:                                             ; preds = %166, %165
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133) #14
  br label %1076

1076:                                             ; preds = %1075, %129
  %1077 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %28, align 8
  %1078 = icmp eq %class.GrGpuBuffer* %1077, null
  br i1 %1078, label %1087, label %1079

1079:                                             ; preds = %1076
  %1080 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %1077, i64 0, i32 0, i32 1
  %1081 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %1080, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1082 = atomicrmw add i32* %1081, i32 -1 acq_rel
  %1083 = icmp eq i32 %1082, 1
  br i1 %1083, label %1084, label %1087

1084:                                             ; preds = %1079
  %1085 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %1080, i64 -1
  %1086 = bitcast %class.GrIORef* %1085 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %1086, i32 0) #14
  br label %1087

1087:                                             ; preds = %1076, %1079, %1084
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #14
  br label %1088

1088:                                             ; preds = %12, %1087
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #8

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN8SkTArrayIN12_GLOBAL__N_114AAStrokeRectOp8RectInfoELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.188* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkTArray.188, %class.SkTArray.188* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 1
  %6 = trunc i64 %5 to i32
  %7 = and i32 %6, 2147483647
  %8 = add nsw i32 %7, %1
  %9 = sext i32 %8 to i64
  %10 = lshr i64 %4, 33
  %11 = icmp slt i64 %10, %9
  %12 = mul nsw i64 %9, 3
  %13 = icmp sle i64 %10, %12
  %14 = and i64 %4, 1
  %15 = icmp eq i64 %14, 0
  %16 = or i1 %15, %13
  br i1 %16, label %20, label %17

17:                                               ; preds = %2
  %18 = and i64 %4, 4294967296
  %19 = icmp eq i64 %18, 0
  br label %20

20:                                               ; preds = %2, %17
  %21 = phi i1 [ false, %2 ], [ %19, %17 ]
  %22 = or i1 %11, %21
  br i1 %22, label %23, label %61

23:                                               ; preds = %20
  %24 = add nsw i64 %9, 1
  %25 = ashr i64 %24, 1
  %26 = add nsw i64 %9, 7
  %27 = add nsw i64 %26, %25
  %28 = and i64 %27, -8
  %29 = icmp eq i64 %28, %10
  br i1 %29, label %61, label %30

30:                                               ; preds = %23
  %31 = icmp slt i64 %28, 2147483647
  %32 = select i1 %31, i64 %28, i64 2147483647
  %33 = icmp sgt i64 %32, -2147483647
  %34 = select i1 %33, i64 %32, i64 -2147483647
  %35 = shl i64 %34, 33
  %36 = and i64 %4, 8589934591
  %37 = or i64 %35, %36
  store i64 %37, i64* %3, align 8
  %38 = and i64 %34, 2147483647
  %39 = tail call i8* @_Z15sk_malloc_throwmm(i64 %38, i64 76) #14
  %40 = load i64, i64* %3, align 8
  %41 = lshr i64 %40, 1
  %42 = and i64 %41, 2147483647
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %30
  %45 = mul nuw nsw i64 %42, 76
  %46 = bitcast %class.SkTArray.188* %0 to i8**
  %47 = load i8*, i8** %46, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %39, i8* align 1 %47, i64 %45, i1 false) #14
  %48 = load i64, i64* %3, align 8
  br label %49

49:                                               ; preds = %30, %44
  %50 = phi i64 [ %40, %30 ], [ %48, %44 ]
  %51 = and i64 %50, 1
  %52 = icmp eq i64 %51, 0
  %53 = bitcast %class.SkTArray.188* %0 to i8**
  br i1 %52, label %57, label %54

54:                                               ; preds = %49
  %55 = load i8*, i8** %53, align 8
  tail call void @_Z7sk_freePv(i8* %55) #14
  %56 = load i64, i64* %3, align 8
  br label %57

57:                                               ; preds = %49, %54
  %58 = phi i64 [ %56, %54 ], [ %50, %49 ]
  store i8* %39, i8** %53, align 8
  %59 = and i64 %58, -4294967298
  %60 = or i64 %59, 1
  store i64 %60, i64* %3, align 8
  br label %61

61:                                               ; preds = %57, %23, %20
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

declare void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN24GrSimpleMeshDrawOpHelperD1Ev(%class.GrSimpleMeshDrawOpHelper*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4GrOpD2Ev(%class.GrOp*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrOp, %class.GrOp* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrOp, %class.GrOp* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.GrOp*, %class.GrOp** %3, align 8
  store %class.GrOp* null, %class.GrOp** %3, align 8
  %5 = icmp eq %class.GrOp* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.GrOp* %4 to void (%class.GrOp*)***
  %8 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %8, i64 1
  %10 = load void (%class.GrOp*)*, void (%class.GrOp*)** %9, align 8
  tail call void %10(%class.GrOp* nonnull %4) #14
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4GrOpD0Ev(%class.GrOp*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrOp*, %"class.std::__1::function.198"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps(%class.GrOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps* dereferenceable(232)) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare void @_ZNK10GrPipeline12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrPipeline*, %"class.std::__1::function.198"*) local_unnamed_addr #2

declare void @_ZNK14GrProcessorSet12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrProcessorSet*, %"class.std::__1::function.198"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK24GrSimpleMeshDrawOpHelper12isCompatibleERKS_RK6GrCapsRK6SkRectS7_b(%class.GrSimpleMeshDrawOpHelper*, %class.GrSimpleMeshDrawOpHelper* dereferenceable(16), %class.GrCaps* dereferenceable(232), %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), i1 zeroext) local_unnamed_addr #2

declare void @_ZN14GrOpFlushState8drawMeshERK12GrSimpleMesh(%class.GrOpFlushState*, %struct.GrSimpleMesh* dereferenceable(48)) local_unnamed_addr #2

declare void @_ZN15GrOpsRenderPass12bindPipelineERK13GrProgramInfoRK6SkRect(%class.GrOpsRenderPass*, %class.GrProgramInfo* dereferenceable(128), %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN15GrOpsRenderPass14setScissorRectERK7SkIRect(%class.GrOpsRenderPass*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN15GrOpsRenderPass12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrOpsRenderPass*, %class.GrGeometryProcessor* dereferenceable(80), %class.GrSurfaceProxy**, %class.GrPipeline* dereferenceable(128)) local_unnamed_addr #2

declare i32 @_ZNK24GrSimpleMeshDrawOpHelper18fixedFunctionFlagsEv(%class.GrSimpleMeshDrawOpHelper*) local_unnamed_addr #2

declare i32 @_ZN24GrSimpleMeshDrawOpHelper18finalizeProcessorsERK6GrCapsPK13GrAppliedClip11GrClampType27GrProcessorAnalysisCoverageP8SkRGBA4fIL11SkAlphaType2EEPb(%class.GrSimpleMeshDrawOpHelper*, %class.GrCaps* dereferenceable(232), %class.GrAppliedClip*, i32, i32, %struct.SkRGBA4f*, i8*) local_unnamed_addr #2

declare void @_Z17SkDebugf_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #2

declare %class.GrProgramInfo* @_ZN24GrSimpleMeshDrawOpHelper17createProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewEP19GrGeometryProcessor15GrPrimitiveType18GrXferBarrierFlags8GrLoadOp(%class.GrSimpleMeshDrawOpHelper*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip* dereferenceable(72), %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), %class.GrGeometryProcessor*, i8 zeroext, i32, i32) local_unnamed_addr #2

declare %class.GrGeometryProcessor* @_ZN23GrDefaultGeoProcFactory18MakeForDeviceSpaceEP12SkArenaAllocRKNS_5ColorERKNS_8CoverageERKNS_11LocalCoordsERK8SkMatrix(%class.SkArenaAlloc*, %"struct.GrDefaultGeoProcFactory::Color"* dereferenceable(20), %"struct.GrDefaultGeoProcFactory::Coverage"* dereferenceable(8), %"struct.GrDefaultGeoProcFactory::LocalCoords"* dereferenceable(16), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare void @_ZN12GrMeshDrawOp17createProgramInfoEPNS_6TargetE(%class.GrMeshDrawOp*, %"class.GrMeshDrawOp::Target"*) local_unnamed_addr #2

declare void @_ZN12GrMeshDrawOp13PatternHelperC1EPNS_6TargetE15GrPrimitiveTypem5sk_spIK8GrBufferEiiii(%"class.GrMeshDrawOp::PatternHelper"*, %"class.GrMeshDrawOp::Target"*, i8 zeroext, i64, %class.sk_sp.189*, i32, i32, i32, i32) unnamed_addr #2

declare i32 @_ZN11GrUniqueKey14GenerateDomainEv() local_unnamed_addr #2

declare i32 @_Z17GrResourceKeyHashPKjm(i32*, i64) local_unnamed_addr #2

declare void @_ZN18GrResourceProvider26createPatternedIndexBufferEPKtiiiPK11GrUniqueKey(%class.sk_sp.99* sret, %class.GrResourceProvider*, i16*, i32, i32, i32, %class.GrUniqueKey*) local_unnamed_addr #2

declare void @_ZN18GrResourceProvider23findResourceByUniqueKeyERK11GrUniqueKey(%class.sk_sp.210* sret, %class.GrResourceProvider*, %class.GrUniqueKey* dereferenceable(56)) local_unnamed_addr #2

declare void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource*, i32) local_unnamed_addr #2

declare i32 @_ZNK8SkRGBA4fIL11SkAlphaType2EE12toBytes_RGBAEv(%struct.SkRGBA4f*) local_unnamed_addr #2

declare void @_ZN14GrProcessorSetC1EO7GrPaint(%class.GrProcessorSet*, %class.GrPaint* dereferenceable(48)) unnamed_addr #2

declare i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_117NonAAStrokeRectOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EEN24GrSimpleMeshDrawOpHelper10InputFlagsERK8SkMatrixRK6SkRectRK11SkStrokeRec8GrAAType(%"class.(anonymous namespace)::NonAAStrokeRectOp"*, %class.GrProcessorSet*, %struct.SkRGBA4f* nocapture readonly dereferenceable(16), i8 zeroext, %class.SkMatrix* dereferenceable(40), %struct.SkRect* nocapture readonly dereferenceable(16), %class.SkStrokeRec* nocapture readonly dereferenceable(16), i32) unnamed_addr #0 align 2 {
  %9 = alloca <4 x float>, align 16
  %10 = bitcast <4 x float>* %9 to %struct.SkRect*
  %11 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 0
  %12 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_117NonAAStrokeRectOp7ClassIDEvE8kClassID to i8*) acquire, align 8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %22, !prof !3

14:                                               ; preds = %8
  %15 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_117NonAAStrokeRectOp7ClassIDEvE8kClassID) #14
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %14
  %18 = atomicrmw add i32* getelementptr inbounds (%"struct.std::__1::atomic.203", %"struct.std::__1::atomic.203"* @_ZN4GrOp14gCurrOpClassIDE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 329, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i64 0, i64 0)) #16
  unreachable

21:                                               ; preds = %17
  store i32 %18, i32* @_ZZN12_GLOBAL__N_117NonAAStrokeRectOp7ClassIDEvE8kClassID, align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_117NonAAStrokeRectOp7ClassIDEvE8kClassID) #14
  br label %22

22:                                               ; preds = %8, %14, %21
  %23 = load i32, i32* @_ZZN12_GLOBAL__N_117NonAAStrokeRectOp7ClassIDEvE8kClassID, align 4
  tail call void @_ZN12GrMeshDrawOpC2Ej(%class.GrMeshDrawOp* %11, i32 %23) #14
  %24 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_117NonAAStrokeRectOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %25 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 1
  tail call void @_ZN24GrSimpleMeshDrawOpHelperC1EP14GrProcessorSet8GrAATypeNS_10InputFlagsE(%class.GrSimpleMeshDrawOpHelper* %25, %class.GrProcessorSet* %1, i32 %7, i8 zeroext %3) #14
  %26 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 3
  %27 = bitcast %class.SkMatrix* %26 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %27, align 4
  %28 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 3, i32 0, i64 4
  %29 = bitcast float* %28 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %29, align 4
  %30 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 3, i32 0, i64 8
  store float 1.000000e+00, float* %30, align 4
  %31 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 3, i32 1
  store i32 16, i32* %31, align 4
  %32 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 6
  %33 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 2
  %34 = bitcast %struct.SkRGBA4f* %33 to i8*
  %35 = bitcast %struct.SkRGBA4f* %2 to i8*
  %36 = bitcast %struct.GrSimpleMesh** %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 4 %35, i64 16, i1 false)
  %37 = bitcast %class.SkMatrix* %26 to i8*
  %38 = bitcast %class.SkMatrix* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 4 %38, i64 40, i1 false)
  %39 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 4
  %40 = bitcast %struct.SkRect* %39 to i8*
  %41 = bitcast %struct.SkRect* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 4 %41, i64 16, i1 false)
  %42 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %39, i64 0, i32 0
  %43 = load float, float* %42, align 4
  %44 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 4, i32 2
  %45 = load float, float* %44, align 4
  %46 = fcmp ogt float %43, %45
  br i1 %46, label %47, label %48

47:                                               ; preds = %22
  store float %45, float* %42, align 4
  store float %43, float* %44, align 4
  br label %48

48:                                               ; preds = %47, %22
  %49 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 4, i32 1
  %50 = load float, float* %49, align 4
  %51 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 4, i32 3
  %52 = load float, float* %51, align 4
  %53 = fcmp ogt float %50, %52
  br i1 %53, label %54, label %55

54:                                               ; preds = %48
  store float %52, float* %49, align 4
  store float %50, float* %51, align 4
  br label %55

55:                                               ; preds = %48, %54
  %56 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %6, i64 0, i32 1
  %57 = load float, float* %56, align 4
  %58 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 5
  store float %57, float* %58, align 8
  %59 = fmul float %57, 5.000000e-01
  %60 = bitcast <4 x float>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %60, i8* align 4 %41, i64 16, i1 false)
  %61 = load <4 x float>, <4 x float>* %9, align 16
  %62 = insertelement <4 x float> undef, float %59, i32 0
  %63 = shufflevector <4 x float> %62, <4 x float> undef, <4 x i32> zeroinitializer
  %64 = fsub <4 x float> %61, %63
  %65 = fadd <4 x float> %61, %63
  %66 = shufflevector <4 x float> %64, <4 x float> %65, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  store <4 x float> %66, <4 x float>* %9, align 16
  %67 = and i8 %3, 8
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %76, label %69

69:                                               ; preds = %55
  %70 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %4, %struct.SkRect* nonnull %10, %struct.SkRect* nonnull dereferenceable(16) %10, i32 1) #14
  %71 = load <4 x float>, <4 x float>* %9, align 16
  %72 = call <4 x float> @llvm.floor.v4f32(<4 x float> %71)
  %73 = fadd <4 x float> %72, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  store <4 x float> %73, <4 x float>* %9, align 16
  %74 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %75 = bitcast %struct.SkRect* %74 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* nonnull align 16 %60, i64 16, i1 false) #14
  br label %84

76:                                               ; preds = %55
  %77 = icmp ne i32 %7, 0
  %78 = fcmp oeq float %57, 0.000000e+00
  %79 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %80 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %26, %struct.SkRect* %79, %struct.SkRect* nonnull dereferenceable(16) %10, i32 1) #14
  %81 = select i1 %78, i16 2, i16 0
  %82 = zext i1 %77 to i16
  %83 = or i16 %81, %82
  br label %84

84:                                               ; preds = %76, %69
  %85 = phi i16 [ %83, %76 ], [ 0, %69 ]
  %86 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  store i16 %85, i16* %86, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_117NonAAStrokeRectOpD2Ev(%"class.(anonymous namespace)::NonAAStrokeRectOp"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_117NonAAStrokeRectOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 1
  tail call void @_ZN24GrSimpleMeshDrawOpHelperD1Ev(%class.GrSimpleMeshDrawOpHelper* %3) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %4 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %class.GrOp*, %class.GrOp** %4, align 8
  store %class.GrOp* null, %class.GrOp** %4, align 8
  %6 = icmp eq %class.GrOp* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.GrOp* %5 to void (%class.GrOp*)***
  %9 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %9, i64 1
  %11 = load void (%class.GrOp*)*, void (%class.GrOp*)** %10, align 8
  tail call void %11(%class.GrOp* nonnull %5) #14
  br label %12

12:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_117NonAAStrokeRectOpD0Ev(%"class.(anonymous namespace)::NonAAStrokeRectOp"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_117NonAAStrokeRectOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 1
  tail call void @_ZN24GrSimpleMeshDrawOpHelperD1Ev(%class.GrSimpleMeshDrawOpHelper* %3) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %4 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %class.GrOp*, %class.GrOp** %4, align 8
  store %class.GrOp* null, %class.GrOp** %4, align 8
  %6 = icmp eq %class.GrOp* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.GrOp* %5 to void (%class.GrOp*)***
  %9 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %9, i64 1
  %11 = load void (%class.GrOp*)*, void (%class.GrOp*)** %10, align 8
  tail call void %11(%class.GrOp* nonnull %5) #14
  br label %12

12:                                               ; preds = %1, %7
  %13 = bitcast %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #14
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_117NonAAStrokeRectOp4nameEv(%"class.(anonymous namespace)::NonAAStrokeRectOp"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_117NonAAStrokeRectOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%"class.(anonymous namespace)::NonAAStrokeRectOp"* nocapture readonly, %"class.std::__1::function.198"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 7
  %4 = load %class.GrProgramInfo*, %class.GrProgramInfo** %3, align 8
  %5 = icmp eq %class.GrProgramInfo* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %4, i64 0, i32 5
  %8 = load %class.GrPipeline*, %class.GrPipeline** %7, align 8
  tail call void @_ZNK10GrPipeline12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrPipeline* %8, %"class.std::__1::function.198"* %1) #14
  br label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 1, i32 0
  %11 = load %class.GrProcessorSet*, %class.GrProcessorSet** %10, align 8
  %12 = icmp eq %class.GrProcessorSet* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @_ZNK14GrProcessorSet12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrProcessorSet* nonnull %11, %"class.std::__1::function.198"* %1) #14
  br label %14

14:                                               ; preds = %13, %9, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_117NonAAStrokeRectOp9onExecuteEP14GrOpFlushStateRK6SkRect(%"class.(anonymous namespace)::NonAAStrokeRectOp"* nocapture readonly, %class.GrOpFlushState*, %struct.SkRect* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 6
  %5 = load %struct.GrSimpleMesh*, %struct.GrSimpleMesh** %4, align 8
  %6 = icmp eq %struct.GrSimpleMesh* %5, null
  br i1 %6, label %33, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 7
  %9 = load %class.GrProgramInfo*, %class.GrProgramInfo** %8, align 8
  %10 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 15
  %11 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %10, align 8
  tail call void @_ZN15GrOpsRenderPass12bindPipelineERK13GrProgramInfoRK6SkRect(%class.GrOpsRenderPass* %11, %class.GrProgramInfo* dereferenceable(128) %9, %struct.SkRect* dereferenceable(16) %2) #14
  %12 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %9, i64 0, i32 5
  %13 = load %class.GrPipeline*, %class.GrPipeline** %12, align 8
  %14 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %13, i64 0, i32 5
  %15 = load i8, i8* %14, align 8
  %16 = and i8 %15, 32
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %7
  %19 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 10
  %20 = load %"struct.GrOpFlushState::OpArgs"*, %"struct.GrOpFlushState::OpArgs"** %19, align 8
  %21 = getelementptr inbounds %"struct.GrOpFlushState::OpArgs", %"struct.GrOpFlushState::OpArgs"* %20, i64 0, i32 4
  %22 = load %class.GrAppliedClip*, %class.GrAppliedClip** %21, align 8
  %23 = getelementptr inbounds %class.GrAppliedClip, %class.GrAppliedClip* %22, i64 0, i32 0, i32 0, i32 1
  %24 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %10, align 8
  tail call void @_ZN15GrOpsRenderPass14setScissorRectERK7SkIRect(%class.GrOpsRenderPass* %24, %struct.SkIRect* dereferenceable(16) %23) #14
  br label %25

25:                                               ; preds = %7, %18
  %26 = load %class.GrProgramInfo*, %class.GrProgramInfo** %8, align 8
  %27 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %26, i64 0, i32 7
  %28 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %27, align 8
  %29 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %26, i64 0, i32 5
  %30 = load %class.GrPipeline*, %class.GrPipeline** %29, align 8
  %31 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %10, align 8
  tail call void @_ZN15GrOpsRenderPass12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrOpsRenderPass* %31, %class.GrGeometryProcessor* dereferenceable(80) %28, %class.GrSurfaceProxy** null, %class.GrPipeline* dereferenceable(128) %30) #14
  %32 = load %struct.GrSimpleMesh*, %struct.GrSimpleMesh** %4, align 8
  tail call void @_ZN14GrOpFlushState8drawMeshERK12GrSimpleMesh(%class.GrOpFlushState* %1, %struct.GrSimpleMesh* dereferenceable(48) %32) #14
  br label %33

33:                                               ; preds = %3, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZNK12_GLOBAL__N_117NonAAStrokeRectOp18fixedFunctionFlagsEv(%"class.(anonymous namespace)::NonAAStrokeRectOp"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 1
  %3 = tail call i32 @_ZNK24GrSimpleMeshDrawOpHelper18fixedFunctionFlagsEv(%class.GrSimpleMeshDrawOpHelper* %2) #14
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_117NonAAStrokeRectOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType(%"class.(anonymous namespace)::NonAAStrokeRectOp"*, %class.GrCaps* dereferenceable(232), %class.GrAppliedClip*, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 2
  %7 = tail call i32 @_ZN24GrSimpleMeshDrawOpHelper18finalizeProcessorsERK6GrCapsPK13GrAppliedClip11GrClampType27GrProcessorAnalysisCoverageP8SkRGBA4fIL11SkAlphaType2EEPb(%class.GrSimpleMeshDrawOpHelper* %5, %class.GrCaps* dereferenceable(232) %1, %class.GrAppliedClip* %2, i32 %3, i32 0, %struct.SkRGBA4f* %6, i8* null) #14
  ret i32 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %class.GrProgramInfo* @_ZN12_GLOBAL__N_117NonAAStrokeRectOp11programInfoEv(%"class.(anonymous namespace)::NonAAStrokeRectOp"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 7
  %3 = load %class.GrProgramInfo*, %class.GrProgramInfo** %2, align 8
  ret %class.GrProgramInfo* %3
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_117NonAAStrokeRectOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%"class.(anonymous namespace)::NonAAStrokeRectOp"*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip* dereferenceable(72), %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #0 align 2 {
  %9 = alloca %"struct.GrDefaultGeoProcFactory::Color", align 4
  %10 = alloca %"struct.GrDefaultGeoProcFactory::Coverage", align 4
  %11 = alloca %"struct.GrDefaultGeoProcFactory::LocalCoords", align 8
  %12 = bitcast %"struct.GrDefaultGeoProcFactory::Color"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %12) #14
  %13 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::Color", %"struct.GrDefaultGeoProcFactory::Color"* %9, i64 0, i32 0
  %14 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 2
  store i32 0, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::Color", %"struct.GrDefaultGeoProcFactory::Color"* %9, i64 0, i32 1
  %16 = bitcast %struct.SkRGBA4f* %15 to i8*
  %17 = bitcast %struct.SkRGBA4f* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 16, i1 false) #14
  %18 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 1, i32 2
  %20 = load i8, i8* %19, align 1
  %21 = lshr i8 %20, 2
  %22 = and i8 %21, 1
  %23 = zext i8 %22 to i32
  %24 = bitcast %"struct.GrDefaultGeoProcFactory::Coverage"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #14
  %25 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::Coverage", %"struct.GrDefaultGeoProcFactory::Coverage"* %10, i64 0, i32 0
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::Coverage", %"struct.GrDefaultGeoProcFactory::Coverage"* %10, i64 0, i32 1
  store i8 -1, i8* %26, align 4
  %27 = bitcast %"struct.GrDefaultGeoProcFactory::LocalCoords"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #14
  %28 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::LocalCoords", %"struct.GrDefaultGeoProcFactory::LocalCoords"* %11, i64 0, i32 0
  store i32 %23, i32* %28, align 8
  %29 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::LocalCoords", %"struct.GrDefaultGeoProcFactory::LocalCoords"* %11, i64 0, i32 1
  store %class.SkMatrix* null, %class.SkMatrix** %29, align 8
  %30 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 3
  %31 = call %class.GrGeometryProcessor* @_ZN23GrDefaultGeoProcFactory4MakeEP12SkArenaAllocRKNS_5ColorERKNS_8CoverageERKNS_11LocalCoordsERK8SkMatrix(%class.SkArenaAlloc* %2, %"struct.GrDefaultGeoProcFactory::Color"* nonnull dereferenceable(20) %9, %"struct.GrDefaultGeoProcFactory::Coverage"* nonnull dereferenceable(8) %10, %"struct.GrDefaultGeoProcFactory::LocalCoords"* nonnull dereferenceable(16) %11, %class.SkMatrix* dereferenceable(40) %30) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #14
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %12) #14
  %32 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 5
  %33 = load float, float* %32, align 8
  %34 = fcmp ogt float %33, 0.000000e+00
  %35 = select i1 %34, i8 1, i8 4
  %36 = call %class.GrProgramInfo* @_ZN24GrSimpleMeshDrawOpHelper17createProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewEP19GrGeometryProcessor15GrPrimitiveType18GrXferBarrierFlags8GrLoadOp(%class.GrSimpleMeshDrawOpHelper* %18, %class.GrCaps* %1, %class.SkArenaAlloc* %2, %class.GrSurfaceProxyView* dereferenceable(16) %3, %class.GrAppliedClip* dereferenceable(72) %4, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32) %5, %class.GrGeometryProcessor* %31, i8 zeroext %35, i32 %6, i32 %7) #14
  %37 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 7
  store %class.GrProgramInfo* %36, %class.GrProgramInfo** %37, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_117NonAAStrokeRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE(%"class.(anonymous namespace)::NonAAStrokeRectOp"*, %"class.GrMeshDrawOp::Target"*) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.189, align 8
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 7
  %6 = load %class.GrProgramInfo*, %class.GrProgramInfo** %5, align 8
  %7 = icmp eq %class.GrProgramInfo* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 0
  tail call void @_ZN12GrMeshDrawOp17createProgramInfoEPNS_6TargetE(%class.GrMeshDrawOp* %9, %"class.GrMeshDrawOp::Target"* %1) #14
  %10 = load %class.GrProgramInfo*, %class.GrProgramInfo** %5, align 8
  br label %11

11:                                               ; preds = %2, %8
  %12 = phi %class.GrProgramInfo* [ %6, %2 ], [ %10, %8 ]
  %13 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %12, i64 0, i32 7
  %14 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %13, align 8
  %15 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %14, i64 0, i32 3, i32 3
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 5
  %18 = load float, float* %17, align 8
  %19 = fcmp ogt float %18, 0.000000e+00
  %20 = select i1 %19, i32 10, i32 5
  %21 = bitcast %class.sk_sp.189* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #14
  %22 = getelementptr inbounds %class.sk_sp.189, %class.sk_sp.189* %3, i64 0, i32 0
  store %class.GrBuffer* null, %class.GrBuffer** %22, align 8
  %23 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #14
  store i32 -1431655766, i32* %4, align 4
  %24 = bitcast %"class.GrMeshDrawOp::Target"* %1 to i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.189*, i32*)***
  %25 = load i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.189*, i32*)**, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.189*, i32*)*** %24, align 8
  %26 = getelementptr inbounds i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.189*, i32*)*, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.189*, i32*)** %25, i64 3
  %27 = load i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.189*, i32*)*, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.189*, i32*)** %26, align 8
  %28 = call i8* %27(%"class.GrMeshDrawOp::Target"* %1, i64 %16, i32 %20, %class.sk_sp.189* nonnull %3, i32* nonnull %4) #14
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %11
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.3, i64 0, i64 0), i32 216, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0)) #14
  br label %209

31:                                               ; preds = %11
  %32 = load float, float* %17, align 8
  %33 = fcmp ogt float %32, 0.000000e+00
  br i1 %33, label %34, label %128

34:                                               ; preds = %31
  %35 = fmul float %32, 5.000000e-01
  %36 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 4, i32 0
  %37 = load float, float* %36, align 4
  %38 = fadd float %35, %37
  %39 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 4, i32 1
  %40 = load float, float* %39, align 4
  %41 = fadd float %35, %40
  %42 = bitcast i8* %28 to float*
  store float %38, float* %42, align 4
  %43 = getelementptr inbounds i8, i8* %28, i64 4
  %44 = bitcast i8* %43 to float*
  store float %41, float* %44, align 4
  %45 = getelementptr inbounds i8, i8* %28, i64 8
  %46 = load float, float* %36, align 4
  %47 = fsub float %46, %35
  %48 = load float, float* %39, align 4
  %49 = fsub float %48, %35
  %50 = bitcast i8* %45 to float*
  store float %47, float* %50, align 4
  %51 = getelementptr inbounds i8, i8* %28, i64 12
  %52 = bitcast i8* %51 to float*
  store float %49, float* %52, align 4
  %53 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 4, i32 2
  %54 = load float, float* %53, align 4
  %55 = fsub float %54, %35
  %56 = load float, float* %39, align 4
  %57 = fadd float %35, %56
  %58 = getelementptr inbounds i8, i8* %28, i64 16
  %59 = bitcast i8* %58 to float*
  store float %55, float* %59, align 4
  %60 = getelementptr inbounds i8, i8* %28, i64 20
  %61 = bitcast i8* %60 to float*
  store float %57, float* %61, align 4
  %62 = load float, float* %53, align 4
  %63 = fadd float %35, %62
  %64 = load float, float* %39, align 4
  %65 = fsub float %64, %35
  %66 = getelementptr inbounds i8, i8* %28, i64 24
  %67 = bitcast i8* %66 to float*
  store float %63, float* %67, align 4
  %68 = getelementptr inbounds i8, i8* %28, i64 28
  %69 = bitcast i8* %68 to float*
  store float %65, float* %69, align 4
  %70 = load float, float* %53, align 4
  %71 = fsub float %70, %35
  %72 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 4, i32 3
  %73 = load float, float* %72, align 4
  %74 = fsub float %73, %35
  %75 = getelementptr inbounds i8, i8* %28, i64 32
  %76 = bitcast i8* %75 to float*
  store float %71, float* %76, align 4
  %77 = getelementptr inbounds i8, i8* %28, i64 36
  %78 = bitcast i8* %77 to float*
  store float %74, float* %78, align 4
  %79 = load float, float* %53, align 4
  %80 = fadd float %35, %79
  %81 = load float, float* %72, align 4
  %82 = fadd float %35, %81
  %83 = getelementptr inbounds i8, i8* %28, i64 40
  %84 = bitcast i8* %83 to float*
  store float %80, float* %84, align 4
  %85 = getelementptr inbounds i8, i8* %28, i64 44
  %86 = bitcast i8* %85 to float*
  store float %82, float* %86, align 4
  %87 = load float, float* %36, align 4
  %88 = fadd float %35, %87
  %89 = load float, float* %72, align 4
  %90 = fsub float %89, %35
  %91 = getelementptr inbounds i8, i8* %28, i64 48
  %92 = bitcast i8* %91 to float*
  store float %88, float* %92, align 4
  %93 = getelementptr inbounds i8, i8* %28, i64 52
  %94 = bitcast i8* %93 to float*
  store float %90, float* %94, align 4
  %95 = load float, float* %36, align 4
  %96 = fsub float %95, %35
  %97 = load float, float* %72, align 4
  %98 = fadd float %35, %97
  %99 = getelementptr inbounds i8, i8* %28, i64 56
  %100 = bitcast i8* %99 to float*
  store float %96, float* %100, align 4
  %101 = getelementptr inbounds i8, i8* %28, i64 60
  %102 = bitcast i8* %101 to float*
  store float %98, float* %102, align 4
  %103 = getelementptr inbounds i8, i8* %28, i64 64
  %104 = bitcast i8* %28 to <2 x i64>*
  %105 = load <2 x i64>, <2 x i64>* %104, align 4
  %106 = bitcast i8* %103 to <2 x i64>*
  store <2 x i64> %105, <2 x i64>* %106, align 4
  %107 = fmul float %35, 2.000000e+00
  %108 = load float, float* %53, align 4
  %109 = load float, float* %36, align 4
  %110 = fsub float %108, %109
  %111 = fcmp ult float %107, %110
  br i1 %111, label %117, label %112

112:                                              ; preds = %34
  %113 = fmul float %109, 5.000000e-01
  %114 = fmul float %108, 5.000000e-01
  %115 = fadd float %114, %113
  %116 = bitcast i8* %103 to float*
  store float %115, float* %116, align 4
  store float %115, float* %92, align 4
  store float %115, float* %76, align 4
  store float %115, float* %59, align 4
  store float %115, float* %42, align 4
  br label %117

117:                                              ; preds = %112, %34
  %118 = load float, float* %72, align 4
  %119 = load float, float* %39, align 4
  %120 = fsub float %118, %119
  %121 = fcmp ult float %107, %120
  br i1 %121, label %166, label %122

122:                                              ; preds = %117
  %123 = fmul float %119, 5.000000e-01
  %124 = fmul float %118, 5.000000e-01
  %125 = fadd float %124, %123
  %126 = getelementptr inbounds i8, i8* %28, i64 68
  %127 = bitcast i8* %126 to float*
  store float %125, float* %127, align 4
  store float %125, float* %94, align 4
  store float %125, float* %78, align 4
  store float %125, float* %61, align 4
  store float %125, float* %44, align 4
  br label %166

128:                                              ; preds = %31
  %129 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 4, i32 0
  %130 = bitcast float* %129 to i32*
  %131 = load i32, i32* %130, align 8
  %132 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 4, i32 1
  %133 = bitcast float* %132 to i32*
  %134 = load i32, i32* %133, align 4
  %135 = bitcast i8* %28 to i32*
  store i32 %131, i32* %135, align 4
  %136 = getelementptr inbounds i8, i8* %28, i64 4
  %137 = bitcast i8* %136 to i32*
  store i32 %134, i32* %137, align 4
  %138 = getelementptr inbounds i8, i8* %28, i64 8
  %139 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 4, i32 2
  %140 = bitcast float* %139 to i32*
  %141 = load i32, i32* %140, align 8
  %142 = load i32, i32* %133, align 4
  %143 = bitcast i8* %138 to i32*
  store i32 %141, i32* %143, align 4
  %144 = getelementptr inbounds i8, i8* %28, i64 12
  %145 = bitcast i8* %144 to i32*
  store i32 %142, i32* %145, align 4
  %146 = getelementptr inbounds i8, i8* %28, i64 16
  %147 = load i32, i32* %140, align 8
  %148 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 4, i32 3
  %149 = bitcast float* %148 to i32*
  %150 = load i32, i32* %149, align 4
  %151 = bitcast i8* %146 to i32*
  store i32 %147, i32* %151, align 4
  %152 = getelementptr inbounds i8, i8* %28, i64 20
  %153 = bitcast i8* %152 to i32*
  store i32 %150, i32* %153, align 4
  %154 = getelementptr inbounds i8, i8* %28, i64 24
  %155 = load i32, i32* %130, align 8
  %156 = load i32, i32* %149, align 4
  %157 = bitcast i8* %154 to i32*
  store i32 %155, i32* %157, align 4
  %158 = getelementptr inbounds i8, i8* %28, i64 28
  %159 = bitcast i8* %158 to i32*
  store i32 %156, i32* %159, align 4
  %160 = getelementptr inbounds i8, i8* %28, i64 32
  %161 = load i32, i32* %130, align 8
  %162 = load i32, i32* %133, align 4
  %163 = bitcast i8* %160 to i32*
  store i32 %161, i32* %163, align 4
  %164 = getelementptr inbounds i8, i8* %28, i64 36
  %165 = bitcast i8* %164 to i32*
  store i32 %162, i32* %165, align 4
  br label %166

166:                                              ; preds = %122, %117, %128
  %167 = bitcast %"class.GrMeshDrawOp::Target"* %1 to %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)***
  %168 = load %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)**, %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)*** %167, align 8
  %169 = getelementptr inbounds %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)*, %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)** %168, i64 29
  %170 = load %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)*, %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)** %169, align 8
  %171 = call %class.SkArenaAlloc* %170(%"class.GrMeshDrawOp::Target"* %1) #14
  %172 = call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %171, i32 57, i32 8) #14
  %173 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %171, i64 0, i32 1
  %174 = bitcast i8** %173 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = ptrtoint i8* %172 to i64
  %177 = sub i64 %176, %175
  %178 = trunc i64 %177 to i32
  %179 = getelementptr inbounds i8, i8* %172, i64 48
  store i8* %179, i8** %173, align 8
  call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %171, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeI12GrSimpleMeshJEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS3_ENUlPcE_8__invokeESC_, i32 %178) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %172, i8 0, i64 48, i1 false) #14
  %180 = getelementptr inbounds %"class.(anonymous namespace)::NonAAStrokeRectOp", %"class.(anonymous namespace)::NonAAStrokeRectOp"* %0, i64 0, i32 6
  %181 = bitcast %struct.GrSimpleMesh** %180 to i8**
  store i8* %172, i8** %181, align 8
  %182 = bitcast %class.sk_sp.189* %3 to i64*
  %183 = load i64, i64* %182, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %22, align 8
  %184 = load i32, i32* %4, align 4
  %185 = bitcast i8* %172 to %class.GrBuffer**
  %186 = load %class.GrBuffer*, %class.GrBuffer** %185, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %185, align 8
  %187 = icmp eq %class.GrBuffer* %186, null
  br i1 %187, label %193, label %188

188:                                              ; preds = %166
  %189 = bitcast %class.GrBuffer* %186 to void (%class.GrBuffer*)***
  %190 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %189, align 8
  %191 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %190, i64 3
  %192 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %191, align 8
  call void %192(%class.GrBuffer* nonnull %186) #14
  br label %193

193:                                              ; preds = %188, %166
  %194 = getelementptr inbounds i8, i8* %172, i64 32
  %195 = bitcast i8* %194 to %class.GrBuffer**
  %196 = load %class.GrBuffer*, %class.GrBuffer** %195, align 8
  %197 = bitcast i8* %194 to i64*
  store i64 %183, i64* %197, align 8
  %198 = icmp eq %class.GrBuffer* %196, null
  br i1 %198, label %204, label %199

199:                                              ; preds = %193
  %200 = bitcast %class.GrBuffer* %196 to void (%class.GrBuffer*)***
  %201 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %200, align 8
  %202 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %201, i64 3
  %203 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %202, align 8
  call void %203(%class.GrBuffer* nonnull %196) #14
  br label %204

204:                                              ; preds = %199, %193
  %205 = getelementptr inbounds i8, i8* %172, i64 40
  %206 = bitcast i8* %205 to i32*
  store i32 %20, i32* %206, align 8
  %207 = getelementptr inbounds i8, i8* %172, i64 44
  %208 = bitcast i8* %207 to i32*
  store i32 %184, i32* %208, align 4
  br label %209

209:                                              ; preds = %204, %30
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #14
  %210 = load %class.GrBuffer*, %class.GrBuffer** %22, align 8
  %211 = icmp eq %class.GrBuffer* %210, null
  br i1 %211, label %217, label %212

212:                                              ; preds = %209
  %213 = bitcast %class.GrBuffer* %210 to void (%class.GrBuffer*)***
  %214 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %213, align 8
  %215 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %214, i64 3
  %216 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %215, align 8
  call void %216(%class.GrBuffer* nonnull %210) #14
  br label %217

217:                                              ; preds = %209, %212
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #14
  ret void
}

declare %class.GrGeometryProcessor* @_ZN23GrDefaultGeoProcFactory4MakeEP12SkArenaAllocRKNS_5ColorERKNS_8CoverageERKNS_11LocalCoordsERK8SkMatrix(%class.SkArenaAlloc*, %"struct.GrDefaultGeoProcFactory::Color"* dereferenceable(20), %"struct.GrDefaultGeoProcFactory::Coverage"* dereferenceable(8), %"struct.GrDefaultGeoProcFactory::LocalCoords"* dereferenceable(16), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc*, i32, i32) local_unnamed_addr #2

declare void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc*, i8* (i8*)*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZZN12SkArenaAlloc4makeIZNS_4makeI12GrSimpleMeshJEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS3_ENUlPcE_8__invokeESC_(i8*) #4 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -57
  %3 = getelementptr inbounds i8, i8* %0, i64 -25
  %4 = bitcast i8* %3 to %class.GrBuffer**
  %5 = load %class.GrBuffer*, %class.GrBuffer** %4, align 8
  %6 = icmp eq %class.GrBuffer* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.GrBuffer* %5 to void (%class.GrBuffer*)***
  %9 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %9, i64 3
  %11 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %10, align 8
  tail call void %11(%class.GrBuffer* nonnull %5) #14
  br label %12

12:                                               ; preds = %7, %1
  %13 = bitcast i8* %2 to %class.GrBuffer**
  %14 = load %class.GrBuffer*, %class.GrBuffer** %13, align 8
  %15 = icmp eq %class.GrBuffer* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = bitcast %class.GrBuffer* %14 to void (%class.GrBuffer*)***
  %18 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %18, i64 3
  %20 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %19, align 8
  tail call void %20(%class.GrBuffer* nonnull %14) #14
  br label %21

21:                                               ; preds = %12, %16
  ret i8* %2
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_114AAStrokeRectOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrixRK6SkRectSD_RK7SkPoint(%"class.(anonymous namespace)::AAStrokeRectOp"*, %class.GrProcessorSet*, %struct.SkRGBA4f* nocapture readonly dereferenceable(16), %class.SkMatrix* nocapture readonly dereferenceable(40), %struct.SkRect* nocapture readonly dereferenceable(16), %struct.SkRect* nocapture readonly dereferenceable(16), %struct.SkPoint* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %8 = alloca { %struct.SkRGBA4f, %struct.SkRect, %struct.SkRect, %struct.SkRect }, align 8
  %9 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 0
  %10 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_114AAStrokeRectOp7ClassIDEvE8kClassID to i8*) acquire, align 8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %20, !prof !3

12:                                               ; preds = %7
  %13 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_114AAStrokeRectOp7ClassIDEvE8kClassID) #14
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %12
  %16 = atomicrmw add i32* getelementptr inbounds (%"struct.std::__1::atomic.203", %"struct.std::__1::atomic.203"* @_ZN4GrOp14gCurrOpClassIDE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 329, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i64 0, i64 0)) #16
  unreachable

19:                                               ; preds = %15
  store i32 %16, i32* @_ZZN12_GLOBAL__N_114AAStrokeRectOp7ClassIDEvE8kClassID, align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_114AAStrokeRectOp7ClassIDEvE8kClassID) #14
  br label %20

20:                                               ; preds = %7, %12, %19
  %21 = load i32, i32* @_ZZN12_GLOBAL__N_114AAStrokeRectOp7ClassIDEvE8kClassID, align 4
  tail call void @_ZN12GrMeshDrawOpC2Ej(%class.GrMeshDrawOp* %9, i32 %21) #14
  %22 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_114AAStrokeRectOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 1
  tail call void @_ZN24GrSimpleMeshDrawOpHelperC1EP14GrProcessorSet8GrAATypeNS_10InputFlagsE(%class.GrSimpleMeshDrawOpHelper* %23, %class.GrProcessorSet* %1, i32 1, i8 zeroext 0) #14
  %24 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 80
  %25 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 0
  %26 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 88
  %27 = bitcast i8* %26 to i64*
  %28 = bitcast i8* %24 to i8**
  store i8* %25, i8** %28, align 8
  store i64 8589934592, i64* %27, align 8
  %29 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 3
  %30 = bitcast %class.SkMatrix* %29 to i8*
  %31 = bitcast %class.SkMatrix* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 4 %31, i64 40, i1 false)
  %32 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 4
  %33 = bitcast i8* %24 to %class.SkTArray.188*
  %34 = bitcast { %struct.SkRGBA4f, %struct.SkRect, %struct.SkRect, %struct.SkRect }* %8 to i8*
  %35 = bitcast %struct.GrSimpleMesh** %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %34)
  %36 = bitcast %struct.SkRGBA4f* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* align 4 %36, i64 16, i1 false)
  %37 = bitcast %struct.SkRect* %4 to i8*
  %38 = getelementptr inbounds { %struct.SkRGBA4f, %struct.SkRect, %struct.SkRect, %struct.SkRect }, { %struct.SkRGBA4f, %struct.SkRect, %struct.SkRect, %struct.SkRect }* %8, i64 0, i32 1
  %39 = bitcast %struct.SkRect* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 4 %37, i64 16, i1 false)
  %40 = getelementptr inbounds { %struct.SkRGBA4f, %struct.SkRect, %struct.SkRect, %struct.SkRect }, { %struct.SkRGBA4f, %struct.SkRect, %struct.SkRect, %struct.SkRect }* %8, i64 0, i32 2
  %41 = bitcast %struct.SkRect* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 4 %37, i64 16, i1 false)
  %42 = bitcast %struct.SkRect* %5 to i8*
  %43 = getelementptr inbounds { %struct.SkRGBA4f, %struct.SkRect, %struct.SkRect, %struct.SkRect }, { %struct.SkRGBA4f, %struct.SkRect, %struct.SkRect, %struct.SkRect }* %8, i64 0, i32 3
  %44 = bitcast %struct.SkRect* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 4 %42, i64 16, i1 false)
  %45 = bitcast %struct.SkPoint* %6 to i64*
  %46 = load i64, i64* %45, align 4
  tail call fastcc void @_ZN8SkTArrayIN12_GLOBAL__N_114AAStrokeRectOp8RectInfoELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.188* %33, i32 1) #14
  %47 = bitcast i8* %24 to %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"**
  %48 = load %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"*, %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"** %47, align 8
  %49 = load i64, i64* %27, align 8
  %50 = lshr i64 %49, 1
  %51 = and i64 %50, 2147483647
  %52 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %48, i64 %51
  %53 = add i64 %49, 2
  %54 = and i64 %53, 4294967294
  %55 = and i64 %49, -4294967295
  %56 = or i64 %54, %55
  store i64 %56, i64* %27, align 8
  %57 = bitcast %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %57, i8* nonnull align 8 %34, i64 64, i1 false)
  %58 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %48, i64 %51, i32 4
  %59 = bitcast %struct.SkPoint* %58 to i64*
  store i64 %46, i64* %59, align 4
  %60 = getelementptr inbounds %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo", %"struct.(anonymous namespace)::AAStrokeRectOp::RectInfo"* %48, i64 %51, i32 5
  store i8 0, i8* %60, align 4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %34)
  %61 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %62 = bitcast %struct.SkRect* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 4 %37, i64 16, i1 false) #14
  %63 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  store i16 1, i16* %63, align 2
  %64 = getelementptr inbounds %"class.(anonymous namespace)::AAStrokeRectOp", %"class.(anonymous namespace)::AAStrokeRectOp"* %0, i64 0, i32 6
  store i8 1, i8* %64, align 8
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

; Function Attrs: nounwind readnone speculatable
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #13

; Function Attrs: nounwind readnone speculatable
declare <4 x float> @llvm.floor.v4f32(<4 x float>) #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly }
attributes #13 = { nounwind readnone speculatable }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 1048575}
!4 = !{!5, !7, !9}
!5 = distinct !{!5, !6, !"_ZN18GrResourceProvider15findByUniqueKeyIK11GrGpuBufferEENSt3__19enable_ifIXsr3std10is_base_ofI13GrGpuResourceT_EE5valueE5sk_spIS6_EE4typeERK11GrUniqueKey: argument 0"}
!6 = distinct !{!6, !"_ZN18GrResourceProvider15findByUniqueKeyIK11GrGpuBufferEENSt3__19enable_ifIXsr3std10is_base_ofI13GrGpuResourceT_EE5valueE5sk_spIS6_EE4typeERK11GrUniqueKey"}
!7 = distinct !{!7, !8, !"_ZN18GrResourceProvider32findOrCreatePatternedIndexBufferEPKtiiiRK11GrUniqueKey: argument 0"}
!8 = distinct !{!8, !"_ZN18GrResourceProvider32findOrCreatePatternedIndexBufferEPKtiiiRK11GrUniqueKey"}
!9 = distinct !{!9, !10, !"_ZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderb: argument 0"}
!10 = distinct !{!10, !"_ZN12_GLOBAL__N_114AAStrokeRectOp14GetIndexBufferEP18GrResourceProviderb"}
!11 = !{!5, !7}
!12 = !{!13, !15, !9}
!13 = distinct !{!13, !14, !"_ZN18GrResourceProvider15findByUniqueKeyIK11GrGpuBufferEENSt3__19enable_ifIXsr3std10is_base_ofI13GrGpuResourceT_EE5valueE5sk_spIS6_EE4typeERK11GrUniqueKey: argument 0"}
!14 = distinct !{!14, !"_ZN18GrResourceProvider15findByUniqueKeyIK11GrGpuBufferEENSt3__19enable_ifIXsr3std10is_base_ofI13GrGpuResourceT_EE5valueE5sk_spIS6_EE4typeERK11GrUniqueKey"}
!15 = distinct !{!15, !16, !"_ZN18GrResourceProvider32findOrCreatePatternedIndexBufferEPKtiiiRK11GrUniqueKey: argument 0"}
!16 = distinct !{!16, !"_ZN18GrResourceProvider32findOrCreatePatternedIndexBufferEPKtiiiRK11GrUniqueKey"}
!17 = !{!13, !15}
