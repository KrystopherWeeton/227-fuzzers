; ModuleID = '../../ui/gfx/text_elider.cc'
source_filename = "../../ui/gfx/text_elider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::(anonymous namespace)::RectangleText" = type <{ %"class.gfx::FontList"*, i32, float, i32, i32, float, i32, %"class.std::__1::basic_string", i8, [7 x i8], %"class.std::__1::vector.124"*, i8, i8, i8, [5 x i8] }>
%"class.gfx::FontList" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.gfx::FontListImpl"* }
%"class.gfx::FontListImpl" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::vector.124" = type { %"class.std::__1::__vector_base.125" }
%"class.std::__1::__vector_base.125" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.std::__1::basic_string"* }
%"class.gfx::StringSlicer" = type <{ %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i8, i8, i8, [5 x i8] }>
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::allocator" = type { i8 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string.2" }
%"class.std::__1::basic_string.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.5 }
%union.anon.5 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_string.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__rep" }
%"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__rep" = type { %union.anon.14 }
%union.anon.14 = type { %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__long" }
%"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__long" = type { i32*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.6 }
%struct.anon.6 = type { i8 }
%"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short" = type { [5 x i32], %struct.anon.15 }
%struct.anon.15 = type { %"struct.std::__1::__padding.16", i8 }
%"struct.std::__1::__padding.16" = type { [3 x i8] }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::RenderText" = type <{ i32 (...)**, float, float, %"class.std::__1::basic_string", i32, i32, i32, i32, i32, [4 x i8], %"class.gfx::FontList", %"class.gfx::SelectionModel", %"class.gfx::Rect", i8, i8, [2 x i8], i32, i32, i8, i8, [2 x i8], %"class.gfx::Range", %"class.gfx::BreakList", %"class.gfx::BreakList.35", %"class.gfx::BreakList.45", %"class.gfx::BreakList.55", %"struct.std::__1::array", %"class.gfx::BreakList", %"class.gfx::BreakList.35", %"class.gfx::BreakList.45", %"class.gfx::BreakList.55", %"struct.std::__1::array", %"class.std::__1::vector.75", i8, [3 x i8], i32, i64, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.absl::optional", i8, i8, i32, i8, [3 x i8], i64, i32, i8, [3 x i8], %"class.gfx::Rect", i8, [3 x i8], %"class.gfx::Vector2d", i32, i8, [7 x i8], %"class.std::__1::vector.82", %"class.gfx::BreakList.89", %"class.std::__1::unique_ptr.98", float, i32, %"class.absl::optional.116", i8, [7 x i8] }>
%"class.gfx::SelectionModel" = type <{ %"class.gfx::Range", %"class.std::__1::vector", i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gfx::Range"*, %"class.gfx::Range"*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.gfx::Range"* }
%"class.gfx::Range" = type { i32, i32 }
%"class.gfx::BreakList" = type { %"class.std::__1::vector.28", i64 }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.30" }
%"struct.std::__1::pair" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::pair"* }
%"class.gfx::BreakList.35" = type { %"class.std::__1::vector.36", i64 }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"struct.std::__1::pair.38"*, %"struct.std::__1::pair.38"*, %"class.std::__1::__compressed_pair.40" }
%"struct.std::__1::pair.38" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.std::__1::pair.38"* }
%"class.gfx::BreakList.45" = type { %"class.std::__1::vector.46", i64 }
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"struct.std::__1::pair.48"*, %"struct.std::__1::pair.48"*, %"class.std::__1::__compressed_pair.50" }
%"struct.std::__1::pair.48" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"struct.std::__1::pair.48"* }
%"class.gfx::BreakList.55" = type { %"class.std::__1::vector.56", i64 }
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.57" }
%"class.std::__1::__vector_base.57" = type { %"struct.std::__1::pair.58"*, %"struct.std::__1::pair.58"*, %"class.std::__1::__compressed_pair.60" }
%"struct.std::__1::pair.58" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"struct.std::__1::pair.58"* }
%"struct.std::__1::array" = type { [4 x %"class.gfx::BreakList.65"] }
%"class.gfx::BreakList.65" = type { %"class.std::__1::vector.66", i64 }
%"class.std::__1::vector.66" = type { %"class.std::__1::__vector_base.67" }
%"class.std::__1::__vector_base.67" = type { %"struct.std::__1::pair.68"*, %"struct.std::__1::pair.68"*, %"class.std::__1::__compressed_pair.70" }
%"struct.std::__1::pair.68" = type <{ i64, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.std::__1::pair.68"* }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"*, %"class.std::__1::__compressed_pair.77" }
%"struct.gfx::internal::TextToDisplayIndex" = type { i64, i64 }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.gfx::internal::TextToDisplayIndex"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { i8 }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.std::__1::vector.82" = type { %"class.std::__1::__vector_base.83" }
%"class.std::__1::__vector_base.83" = type { %"class.gfx::ShadowValue"*, %"class.gfx::ShadowValue"*, %"class.std::__1::__compressed_pair.84" }
%"class.gfx::ShadowValue" = type <{ %"class.gfx::Vector2d", double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.gfx::ShadowValue"* }
%"class.gfx::BreakList.89" = type { %"class.std::__1::vector.90", i64 }
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { %"struct.std::__1::pair.92"*, %"struct.std::__1::pair.92"*, %"class.std::__1::__compressed_pair.93" }
%"struct.std::__1::pair.92" = type { i64, i64 }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"struct.std::__1::pair.92"* }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.gfx::internal::ShapedText"* }
%"class.gfx::internal::ShapedText" = type { %"class.std::__1::vector.101" }
%"class.std::__1::vector.101" = type { %"class.std::__1::__vector_base.102" }
%"class.std::__1::__vector_base.102" = type { %"struct.gfx::internal::Line"*, %"struct.gfx::internal::Line"*, %"class.std::__1::__compressed_pair.110" }
%"struct.gfx::internal::Line" = type <{ %"class.std::__1::vector.103", %"class.gfx::SizeF", i32, i32, i32, [4 x i8] }>
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.gfx::internal::LineSegment"*, %"struct.gfx::internal::LineSegment"*, %"class.std::__1::__compressed_pair.105" }
%"struct.gfx::internal::LineSegment" = type { %"class.gfx::RangeF", %"class.gfx::Range", i64 }
%"class.gfx::RangeF" = type { float, float }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"struct.gfx::internal::LineSegment"* }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.gfx::internal::Line"* }
%"class.absl::optional.116" = type { %"class.absl::optional_internal::optional_data.117" }
%"class.absl::optional_internal::optional_data.117" = type { %"class.absl::optional_internal::optional_data_base.118" }
%"class.absl::optional_internal::optional_data_base.118" = type { %"class.absl::optional_internal::optional_data_dtor_base.119" }
%"class.absl::optional_internal::optional_data_dtor_base.119" = type { i8, %union.anon.120 }
%union.anon.120 = type { i32 }
%"class.base::i18n::UTF16CharIterator" = type { %"class.base::BasicStringPiece.139", i64, i64, i32, i32 }
%"class.base::BasicStringPiece.139" = type { i16*, i64 }
%"class.base::i18n::BreakIterator" = type { i8*, %"class.base::BasicStringPiece.139", %"class.std::__1::basic_string", i32, i64, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.icu_69::UnicodeString" = type { %"class.icu_69::Replaceable", %"union.icu_69::UnicodeString::StackBufferOrFields" }
%"class.icu_69::Replaceable" = type { %"class.icu_69::UObject" }
%"class.icu_69::UObject" = type { i32 (...)** }
%"union.icu_69::UnicodeString::StackBufferOrFields" = type { %struct.anon.138, [32 x i8] }
%struct.anon.138 = type { i16, i32, i32, i16* }
%"class.icu_69::StringCharacterIterator" = type { %"class.icu_69::UCharCharacterIterator", %"class.icu_69::UnicodeString" }
%"class.icu_69::UCharCharacterIterator" = type { %"class.icu_69::CharacterIterator", i16* }
%"class.icu_69::CharacterIterator" = type { %"class.icu_69::ForwardCharacterIterator", i32, i32, i32, i32 }
%"class.icu_69::ForwardCharacterIterator" = type { %"class.icu_69::UObject" }
%"class.icu_69::Locale" = type <{ %"class.icu_69::UObject", [12 x i8], [6 x i8], [4 x i8], [2 x i8], i32, [4 x i8], i8*, [157 x i8], [3 x i8], i8*, i8, [7 x i8] }>
%"class.icu_69::BreakIterator" = type <{ %"class.icu_69::UObject", [157 x i8], [157 x i8], [6 x i8] }>

$_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm = comdat any

@_ZN3gfx9kEllipsisE = hidden local_unnamed_addr constant [4 x i8] c"\E2\80\A6\00", align 1
@_ZN3gfx14kEllipsisUTF16E = hidden local_unnamed_addr constant [2 x i16] [i16 8230, i16 0], align 2
@_ZN3gfx13kForwardSlashE = hidden local_unnamed_addr constant i16 47, align 2
@.str = private unnamed_addr constant [2 x i16] [i16 46, i16 0], align 2
@.str.1 = private unnamed_addr constant [3 x i16] [i16 46, i16 46, i16 0], align 2
@.str.2 = private unnamed_addr constant [4 x i16] [i16 46, i16 46, i16 46, i16 0], align 2
@__const._ZN3gfx18ElideRectangleTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListEfiNS_16WordWrapBehaviorEPNS0_6vectorIS6_NS4_IS6_EEEE.rect = private unnamed_addr constant %"class.gfx::(anonymous namespace)::RectangleText" <{ %"class.gfx::FontList"* inttoptr (i64 -6148914691236517206 to %"class.gfx::FontList"*), i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.std::__1::vector.124"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::vector.124"*), i8 -86, i8 -86, i8 -86, [5 x i8] c"\AA\AA\AA\AA\AA" }>, align 8
@_ZZN3gfx14TruncateStringERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmNS_9BreakTypeEE12kElideString = internal constant [2 x i16] [i16 8230, i16 0], align 2
@.str.4 = private unnamed_addr constant [2 x i16] [i16 10, i16 0], align 2
@_ZN4base16kWhitespaceUTF16E = external constant [0 x i16], align 2

@_ZN3gfx12StringSlicerC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEES9_bbN4absl8optionalIbEE = hidden unnamed_addr alias void (%"class.gfx::StringSlicer"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i1, i1, i16), void (%"class.gfx::StringSlicer"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i1, i1, i16)* @_ZN3gfx12StringSlicerC2ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEES9_bbN4absl8optionalIbEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx12StringSlicerC2ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEES9_bbN4absl8optionalIbEE(%"class.gfx::StringSlicer"* nocapture, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, i1 zeroext, i16) unnamed_addr #0 align 2 {
  %7 = trunc i16 %5 to i8
  %8 = zext i1 %3 to i8
  %9 = zext i1 %4 to i8
  %10 = getelementptr inbounds %"class.gfx::StringSlicer", %"class.gfx::StringSlicer"* %0, i64 0, i32 0
  store %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"** %10, align 8
  %11 = getelementptr inbounds %"class.gfx::StringSlicer", %"class.gfx::StringSlicer"* %0, i64 0, i32 1
  store %"class.std::__1::basic_string"* %2, %"class.std::__1::basic_string"** %11, align 8
  %12 = getelementptr inbounds %"class.gfx::StringSlicer", %"class.gfx::StringSlicer"* %0, i64 0, i32 2
  store i8 %8, i8* %12, align 8
  %13 = getelementptr inbounds %"class.gfx::StringSlicer", %"class.gfx::StringSlicer"* %0, i64 0, i32 3
  store i8 %9, i8* %13, align 1
  %14 = getelementptr inbounds %"class.gfx::StringSlicer", %"class.gfx::StringSlicer"* %0, i64 0, i32 4
  %15 = icmp eq i8 %7, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %6
  %17 = icmp ugt i16 %5, 255
  br label %21

18:                                               ; preds = %6
  %19 = xor i1 %3, true
  %20 = or i1 %19, %4
  br label %21

21:                                               ; preds = %18, %16
  %22 = phi i1 [ %17, %16 ], [ %20, %18 ]
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %14, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx12StringSlicer9CutStringEmb(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.gfx::StringSlicer"* nocapture readonly, i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %15 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  br i1 %3, label %16, label %198

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.gfx::StringSlicer", %"class.gfx::StringSlicer"* %1, i64 0, i32 1
  %18 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %17, align 8
  %19 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %24, i64 24, i1 false) #10
  br label %199

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i16*, i16** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = icmp ult i64 %29, 11
  br i1 %30, label %31, label %36

31:                                               ; preds = %25
  %32 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %33 = trunc i64 %29 to i8
  %34 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %34, i64 0, i32 1, i32 1
  store i8 %33, i8* %35, align 1
  br label %51

36:                                               ; preds = %25
  %37 = icmp ugt i64 %29, 9223372036854775791
  br i1 %37, label %38, label %40

38:                                               ; preds = %36
  %39 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %39) #11
  unreachable

40:                                               ; preds = %36
  %41 = add nuw nsw i64 %29, 8
  %42 = and i64 %41, -8
  %43 = icmp slt i64 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %40
  tail call void @abort() #11
  unreachable

45:                                               ; preds = %40
  %46 = shl i64 %42, 1
  %47 = tail call i8* @_Znwm(i64 %46) #12
  %48 = bitcast i8* %47 to i16*
  %49 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  store i8* %47, i8** %49, align 8
  %50 = or i64 %42, -9223372036854775808
  store i64 %50, i64* %14, align 8
  store i64 %29, i64* %13, align 8
  br label %51

51:                                               ; preds = %45, %31
  %52 = phi i16* [ %32, %31 ], [ %48, %45 ]
  %53 = add nuw nsw i64 %29, 1
  %54 = add i64 %29, 1
  %55 = icmp ult i64 %54, 16
  br i1 %55, label %145, label %56

56:                                               ; preds = %51
  %57 = add i64 %29, 1
  %58 = getelementptr i16, i16* %52, i64 %57
  %59 = getelementptr i16, i16* %27, i64 %57
  %60 = icmp ult i16* %52, %59
  %61 = icmp ult i16* %27, %58
  %62 = and i1 %60, %61
  br i1 %62, label %145, label %63

63:                                               ; preds = %56
  %64 = and i64 %54, -16
  %65 = sub i64 %53, %64
  %66 = getelementptr i16, i16* %27, i64 %64
  %67 = getelementptr i16, i16* %52, i64 %64
  %68 = add i64 %64, -16
  %69 = lshr exact i64 %68, 4
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, 3
  %72 = icmp ult i64 %68, 48
  br i1 %72, label %124, label %73

73:                                               ; preds = %63
  %74 = sub nsw i64 %70, %71
  br label %75

75:                                               ; preds = %75, %73
  %76 = phi i64 [ 0, %73 ], [ %121, %75 ]
  %77 = phi i64 [ %74, %73 ], [ %122, %75 ]
  %78 = getelementptr i16, i16* %27, i64 %76
  %79 = getelementptr i16, i16* %52, i64 %76
  %80 = bitcast i16* %78 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !2
  %82 = getelementptr i16, i16* %78, i64 8
  %83 = bitcast i16* %82 to <8 x i16>*
  %84 = load <8 x i16>, <8 x i16>* %83, align 2, !alias.scope !2
  %85 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %85, align 2, !alias.scope !5, !noalias !2
  %86 = getelementptr i16, i16* %79, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %87, align 2, !alias.scope !5, !noalias !2
  %88 = or i64 %76, 16
  %89 = getelementptr i16, i16* %27, i64 %88
  %90 = getelementptr i16, i16* %52, i64 %88
  %91 = bitcast i16* %89 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !2
  %93 = getelementptr i16, i16* %89, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !2
  %96 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %96, align 2, !alias.scope !5, !noalias !2
  %97 = getelementptr i16, i16* %90, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %98, align 2, !alias.scope !5, !noalias !2
  %99 = or i64 %76, 32
  %100 = getelementptr i16, i16* %27, i64 %99
  %101 = getelementptr i16, i16* %52, i64 %99
  %102 = bitcast i16* %100 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !2
  %104 = getelementptr i16, i16* %100, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !2
  %107 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %107, align 2, !alias.scope !5, !noalias !2
  %108 = getelementptr i16, i16* %101, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %109, align 2, !alias.scope !5, !noalias !2
  %110 = or i64 %76, 48
  %111 = getelementptr i16, i16* %27, i64 %110
  %112 = getelementptr i16, i16* %52, i64 %110
  %113 = bitcast i16* %111 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !2
  %115 = getelementptr i16, i16* %111, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  %117 = load <8 x i16>, <8 x i16>* %116, align 2, !alias.scope !2
  %118 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %118, align 2, !alias.scope !5, !noalias !2
  %119 = getelementptr i16, i16* %112, i64 8
  %120 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %117, <8 x i16>* %120, align 2, !alias.scope !5, !noalias !2
  %121 = add i64 %76, 64
  %122 = add i64 %77, -4
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %124, label %75, !llvm.loop !7

124:                                              ; preds = %75, %63
  %125 = phi i64 [ 0, %63 ], [ %121, %75 ]
  %126 = icmp eq i64 %71, 0
  br i1 %126, label %143, label %127

127:                                              ; preds = %124, %127
  %128 = phi i64 [ %140, %127 ], [ %125, %124 ]
  %129 = phi i64 [ %141, %127 ], [ %71, %124 ]
  %130 = getelementptr i16, i16* %27, i64 %128
  %131 = getelementptr i16, i16* %52, i64 %128
  %132 = bitcast i16* %130 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !2
  %134 = getelementptr i16, i16* %130, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2, !alias.scope !2
  %137 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %137, align 2, !alias.scope !5, !noalias !2
  %138 = getelementptr i16, i16* %131, i64 8
  %139 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %136, <8 x i16>* %139, align 2, !alias.scope !5, !noalias !2
  %140 = add i64 %128, 16
  %141 = add i64 %129, -1
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %127, !llvm.loop !9

143:                                              ; preds = %127, %124
  %144 = icmp eq i64 %54, %64
  br i1 %144, label %199, label %145

145:                                              ; preds = %143, %56, %51
  %146 = phi i64 [ %53, %56 ], [ %53, %51 ], [ %65, %143 ]
  %147 = phi i16* [ %27, %56 ], [ %27, %51 ], [ %66, %143 ]
  %148 = phi i16* [ %52, %56 ], [ %52, %51 ], [ %67, %143 ]
  %149 = add i64 %146, -1
  %150 = and i64 %146, 7
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %163, label %152

152:                                              ; preds = %145, %152
  %153 = phi i64 [ %158, %152 ], [ %146, %145 ]
  %154 = phi i16* [ %160, %152 ], [ %147, %145 ]
  %155 = phi i16* [ %159, %152 ], [ %148, %145 ]
  %156 = phi i64 [ %161, %152 ], [ %150, %145 ]
  %157 = load i16, i16* %154, align 2
  store i16 %157, i16* %155, align 2
  %158 = add i64 %153, -1
  %159 = getelementptr inbounds i16, i16* %155, i64 1
  %160 = getelementptr inbounds i16, i16* %154, i64 1
  %161 = add i64 %156, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %152, !llvm.loop !11

163:                                              ; preds = %152, %145
  %164 = phi i64 [ %146, %145 ], [ %158, %152 ]
  %165 = phi i16* [ %147, %145 ], [ %160, %152 ]
  %166 = phi i16* [ %148, %145 ], [ %159, %152 ]
  %167 = icmp ult i64 %149, 7
  br i1 %167, label %199, label %168

168:                                              ; preds = %163, %168
  %169 = phi i64 [ %194, %168 ], [ %164, %163 ]
  %170 = phi i16* [ %196, %168 ], [ %165, %163 ]
  %171 = phi i16* [ %195, %168 ], [ %166, %163 ]
  %172 = load i16, i16* %170, align 2
  store i16 %172, i16* %171, align 2
  %173 = getelementptr inbounds i16, i16* %171, i64 1
  %174 = getelementptr inbounds i16, i16* %170, i64 1
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %171, i64 2
  %177 = getelementptr inbounds i16, i16* %170, i64 2
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %171, i64 3
  %180 = getelementptr inbounds i16, i16* %170, i64 3
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %171, i64 4
  %183 = getelementptr inbounds i16, i16* %170, i64 4
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %171, i64 5
  %186 = getelementptr inbounds i16, i16* %170, i64 5
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %171, i64 6
  %189 = getelementptr inbounds i16, i16* %170, i64 6
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = getelementptr inbounds i16, i16* %171, i64 7
  %192 = getelementptr inbounds i16, i16* %170, i64 7
  %193 = load i16, i16* %192, align 2
  store i16 %193, i16* %191, align 2
  %194 = add i64 %169, -8
  %195 = getelementptr inbounds i16, i16* %171, i64 8
  %196 = getelementptr inbounds i16, i16* %170, i64 8
  %197 = icmp eq i64 %194, 0
  br i1 %197, label %199, label %168, !llvm.loop !12

198:                                              ; preds = %4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #10
  br label %199

199:                                              ; preds = %163, %168, %143, %23, %198
  %200 = getelementptr inbounds %"class.gfx::StringSlicer", %"class.gfx::StringSlicer"* %1, i64 0, i32 3
  %201 = load i8, i8* %200, align 1, !range !13
  %202 = icmp eq i8 %201, 0
  br i1 %202, label %244, label %203

203:                                              ; preds = %199
  %204 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %204) #10
  %205 = getelementptr inbounds %"class.gfx::StringSlicer", %"class.gfx::StringSlicer"* %1, i64 0, i32 0
  %206 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %205, align 8
  %207 = bitcast %"class.std::__1::basic_string"* %206 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %208 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %207, i64 0, i32 1, i32 1
  %209 = load i8, i8* %208, align 1
  %210 = icmp slt i8 %209, 0
  br i1 %210, label %211, label %214

211:                                              ; preds = %203
  %212 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %206, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %213 = load i64, i64* %212, align 8
  br label %216

214:                                              ; preds = %203
  %215 = zext i8 %209 to i64
  br label %216

216:                                              ; preds = %211, %214
  %217 = phi i64 [ %213, %211 ], [ %215, %214 ]
  %218 = sub i64 %217, %2
  %219 = getelementptr inbounds %"class.gfx::StringSlicer", %"class.gfx::StringSlicer"* %1, i64 0, i32 4
  %220 = load i8, i8* %219, align 2, !range !13
  %221 = icmp ne i8 %220, 0
  %222 = tail call i64 @_ZN3gfx22FindValidBoundaryAfterERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmb(%"class.std::__1::basic_string"* dereferenceable(24) %206, i64 %218, i1 zeroext %221) #10
  %223 = bitcast %"class.std::__1::basic_string"* %206 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %6, %"class.std::__1::basic_string"* dereferenceable(24) %206, i64 %222, i64 -1, %"class.std::__1::allocator"* dereferenceable(1) %223) #10
  %224 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %225 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %224, i64 0, i32 1, i32 1
  %226 = load i8, i8* %225, align 1, !noalias !14
  %227 = icmp slt i8 %226, 0
  %228 = load i16*, i16** %12, align 8, !noalias !14
  %229 = load i64, i64* %13, align 8, !noalias !14
  %230 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %231 = zext i8 %226 to i64
  %232 = select i1 %227, i16* %228, i16* %230
  %233 = select i1 %227, i64 %229, i64 %231
  %234 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string"* nonnull %6, i64 0, i16* %232, i64 %233) #10, !noalias !14
  %235 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %236 = bitcast %"class.std::__1::basic_string"* %234 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %235, i8* align 8 %236, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %236, i8 0, i64 24, i1 false) #10, !noalias !14
  %237 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %238 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %237, i64 0, i32 1, i32 1
  %239 = load i8, i8* %238, align 1
  %240 = icmp slt i8 %239, 0
  br i1 %240, label %241, label %890

241:                                              ; preds = %216
  %242 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %243 = load i8*, i8** %242, align 8
  call void @_ZdlPv(i8* %243) #12
  br label %890

244:                                              ; preds = %199
  %245 = getelementptr inbounds %"class.gfx::StringSlicer", %"class.gfx::StringSlicer"* %1, i64 0, i32 2
  %246 = load i8, i8* %245, align 8, !range !13
  %247 = icmp eq i8 %246, 0
  br i1 %247, label %248, label %451

248:                                              ; preds = %244
  %249 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %249) #10
  %250 = getelementptr inbounds %"class.gfx::StringSlicer", %"class.gfx::StringSlicer"* %1, i64 0, i32 0
  %251 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %250, align 8
  %252 = getelementptr inbounds %"class.gfx::StringSlicer", %"class.gfx::StringSlicer"* %1, i64 0, i32 4
  %253 = load i8, i8* %252, align 2, !range !13
  %254 = icmp ne i8 %253, 0
  %255 = tail call i64 @_ZN3gfx23FindValidBoundaryBeforeERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmb(%"class.std::__1::basic_string"* dereferenceable(24) %251, i64 %2, i1 zeroext %254) #10
  %256 = bitcast %"class.std::__1::basic_string"* %251 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %7, %"class.std::__1::basic_string"* dereferenceable(24) %251, i64 0, i64 %255, %"class.std::__1::allocator"* dereferenceable(1) %256) #10
  %257 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %258 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %257, i64 0, i32 1, i32 1
  %259 = load i8, i8* %258, align 1, !noalias !17
  %260 = icmp slt i8 %259, 0
  %261 = load i16*, i16** %12, align 8, !noalias !17
  %262 = load i64, i64* %13, align 8, !noalias !17
  %263 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %264 = zext i8 %259 to i64
  %265 = select i1 %260, i16* %261, i16* %263
  %266 = select i1 %260, i64 %262, i64 %264
  %267 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %268 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %267, i64 0, i32 1, i32 1
  %269 = load i8, i8* %268, align 1, !noalias !17
  %270 = icmp slt i8 %269, 0
  br i1 %270, label %271, label %278

271:                                              ; preds = %248
  %272 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %273 = load i64, i64* %272, align 8, !noalias !17
  %274 = and i64 %273, 9223372036854775807
  %275 = add nsw i64 %274, -1
  %276 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %277 = load i64, i64* %276, align 8, !noalias !17
  br label %280

278:                                              ; preds = %248
  %279 = zext i8 %269 to i64
  br label %280

280:                                              ; preds = %278, %271
  %281 = phi i64 [ %275, %271 ], [ 10, %278 ]
  %282 = phi i64 [ %277, %271 ], [ %279, %278 ]
  %283 = sub i64 %281, %282
  %284 = icmp ult i64 %283, %266
  br i1 %284, label %446, label %285

285:                                              ; preds = %280
  %286 = icmp eq i64 %266, 0
  br i1 %286, label %449, label %287

287:                                              ; preds = %285
  %288 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load i16*, i16** %288, align 8, !noalias !17
  %290 = bitcast %"class.std::__1::basic_string"* %7 to i16*
  %291 = select i1 %270, i16* %289, i16* %290
  %292 = getelementptr inbounds i16, i16* %291, i64 %282
  %293 = icmp ult i64 %266, 16
  br i1 %293, label %383, label %294

294:                                              ; preds = %287
  %295 = add i64 %266, %282
  %296 = getelementptr i16, i16* %291, i64 %295
  %297 = getelementptr i16, i16* %265, i64 %266
  %298 = icmp ult i16* %292, %297
  %299 = icmp ult i16* %265, %296
  %300 = and i1 %298, %299
  br i1 %300, label %383, label %301

301:                                              ; preds = %294
  %302 = and i64 %266, -16
  %303 = sub i64 %266, %302
  %304 = getelementptr i16, i16* %265, i64 %302
  %305 = getelementptr i16, i16* %292, i64 %302
  %306 = add i64 %302, -16
  %307 = lshr exact i64 %306, 4
  %308 = add nuw nsw i64 %307, 1
  %309 = and i64 %308, 3
  %310 = icmp ult i64 %306, 48
  br i1 %310, label %362, label %311

311:                                              ; preds = %301
  %312 = sub nsw i64 %308, %309
  br label %313

313:                                              ; preds = %313, %311
  %314 = phi i64 [ 0, %311 ], [ %359, %313 ]
  %315 = phi i64 [ %312, %311 ], [ %360, %313 ]
  %316 = getelementptr i16, i16* %265, i64 %314
  %317 = getelementptr i16, i16* %292, i64 %314
  %318 = bitcast i16* %316 to <8 x i16>*
  %319 = load <8 x i16>, <8 x i16>* %318, align 2, !alias.scope !20, !noalias !17
  %320 = getelementptr i16, i16* %316, i64 8
  %321 = bitcast i16* %320 to <8 x i16>*
  %322 = load <8 x i16>, <8 x i16>* %321, align 2, !alias.scope !20, !noalias !17
  %323 = bitcast i16* %317 to <8 x i16>*
  store <8 x i16> %319, <8 x i16>* %323, align 2, !alias.scope !23, !noalias !25
  %324 = getelementptr i16, i16* %317, i64 8
  %325 = bitcast i16* %324 to <8 x i16>*
  store <8 x i16> %322, <8 x i16>* %325, align 2, !alias.scope !23, !noalias !25
  %326 = or i64 %314, 16
  %327 = getelementptr i16, i16* %265, i64 %326
  %328 = getelementptr i16, i16* %292, i64 %326
  %329 = bitcast i16* %327 to <8 x i16>*
  %330 = load <8 x i16>, <8 x i16>* %329, align 2, !alias.scope !20, !noalias !17
  %331 = getelementptr i16, i16* %327, i64 8
  %332 = bitcast i16* %331 to <8 x i16>*
  %333 = load <8 x i16>, <8 x i16>* %332, align 2, !alias.scope !20, !noalias !17
  %334 = bitcast i16* %328 to <8 x i16>*
  store <8 x i16> %330, <8 x i16>* %334, align 2, !alias.scope !23, !noalias !25
  %335 = getelementptr i16, i16* %328, i64 8
  %336 = bitcast i16* %335 to <8 x i16>*
  store <8 x i16> %333, <8 x i16>* %336, align 2, !alias.scope !23, !noalias !25
  %337 = or i64 %314, 32
  %338 = getelementptr i16, i16* %265, i64 %337
  %339 = getelementptr i16, i16* %292, i64 %337
  %340 = bitcast i16* %338 to <8 x i16>*
  %341 = load <8 x i16>, <8 x i16>* %340, align 2, !alias.scope !20, !noalias !17
  %342 = getelementptr i16, i16* %338, i64 8
  %343 = bitcast i16* %342 to <8 x i16>*
  %344 = load <8 x i16>, <8 x i16>* %343, align 2, !alias.scope !20, !noalias !17
  %345 = bitcast i16* %339 to <8 x i16>*
  store <8 x i16> %341, <8 x i16>* %345, align 2, !alias.scope !23, !noalias !25
  %346 = getelementptr i16, i16* %339, i64 8
  %347 = bitcast i16* %346 to <8 x i16>*
  store <8 x i16> %344, <8 x i16>* %347, align 2, !alias.scope !23, !noalias !25
  %348 = or i64 %314, 48
  %349 = getelementptr i16, i16* %265, i64 %348
  %350 = getelementptr i16, i16* %292, i64 %348
  %351 = bitcast i16* %349 to <8 x i16>*
  %352 = load <8 x i16>, <8 x i16>* %351, align 2, !alias.scope !20, !noalias !17
  %353 = getelementptr i16, i16* %349, i64 8
  %354 = bitcast i16* %353 to <8 x i16>*
  %355 = load <8 x i16>, <8 x i16>* %354, align 2, !alias.scope !20, !noalias !17
  %356 = bitcast i16* %350 to <8 x i16>*
  store <8 x i16> %352, <8 x i16>* %356, align 2, !alias.scope !23, !noalias !25
  %357 = getelementptr i16, i16* %350, i64 8
  %358 = bitcast i16* %357 to <8 x i16>*
  store <8 x i16> %355, <8 x i16>* %358, align 2, !alias.scope !23, !noalias !25
  %359 = add i64 %314, 64
  %360 = add i64 %315, -4
  %361 = icmp eq i64 %360, 0
  br i1 %361, label %362, label %313, !llvm.loop !26

362:                                              ; preds = %313, %301
  %363 = phi i64 [ 0, %301 ], [ %359, %313 ]
  %364 = icmp eq i64 %309, 0
  br i1 %364, label %381, label %365

365:                                              ; preds = %362, %365
  %366 = phi i64 [ %378, %365 ], [ %363, %362 ]
  %367 = phi i64 [ %379, %365 ], [ %309, %362 ]
  %368 = getelementptr i16, i16* %265, i64 %366
  %369 = getelementptr i16, i16* %292, i64 %366
  %370 = bitcast i16* %368 to <8 x i16>*
  %371 = load <8 x i16>, <8 x i16>* %370, align 2, !alias.scope !20, !noalias !17
  %372 = getelementptr i16, i16* %368, i64 8
  %373 = bitcast i16* %372 to <8 x i16>*
  %374 = load <8 x i16>, <8 x i16>* %373, align 2, !alias.scope !20, !noalias !17
  %375 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %371, <8 x i16>* %375, align 2, !alias.scope !23, !noalias !25
  %376 = getelementptr i16, i16* %369, i64 8
  %377 = bitcast i16* %376 to <8 x i16>*
  store <8 x i16> %374, <8 x i16>* %377, align 2, !alias.scope !23, !noalias !25
  %378 = add i64 %366, 16
  %379 = add i64 %367, -1
  %380 = icmp eq i64 %379, 0
  br i1 %380, label %381, label %365, !llvm.loop !27

381:                                              ; preds = %365, %362
  %382 = icmp eq i64 %266, %302
  br i1 %382, label %436, label %383

383:                                              ; preds = %381, %294, %287
  %384 = phi i64 [ %266, %294 ], [ %266, %287 ], [ %303, %381 ]
  %385 = phi i16* [ %265, %294 ], [ %265, %287 ], [ %304, %381 ]
  %386 = phi i16* [ %292, %294 ], [ %292, %287 ], [ %305, %381 ]
  %387 = add i64 %384, -1
  %388 = and i64 %384, 7
  %389 = icmp eq i64 %388, 0
  br i1 %389, label %401, label %390

390:                                              ; preds = %383, %390
  %391 = phi i64 [ %396, %390 ], [ %384, %383 ]
  %392 = phi i16* [ %398, %390 ], [ %385, %383 ]
  %393 = phi i16* [ %397, %390 ], [ %386, %383 ]
  %394 = phi i64 [ %399, %390 ], [ %388, %383 ]
  %395 = load i16, i16* %392, align 2, !noalias !17
  store i16 %395, i16* %393, align 2, !noalias !17
  %396 = add i64 %391, -1
  %397 = getelementptr inbounds i16, i16* %393, i64 1
  %398 = getelementptr inbounds i16, i16* %392, i64 1
  %399 = add i64 %394, -1
  %400 = icmp eq i64 %399, 0
  br i1 %400, label %401, label %390, !llvm.loop !28

401:                                              ; preds = %390, %383
  %402 = phi i64 [ %384, %383 ], [ %396, %390 ]
  %403 = phi i16* [ %385, %383 ], [ %398, %390 ]
  %404 = phi i16* [ %386, %383 ], [ %397, %390 ]
  %405 = icmp ult i64 %387, 7
  br i1 %405, label %436, label %406

406:                                              ; preds = %401, %406
  %407 = phi i64 [ %432, %406 ], [ %402, %401 ]
  %408 = phi i16* [ %434, %406 ], [ %403, %401 ]
  %409 = phi i16* [ %433, %406 ], [ %404, %401 ]
  %410 = load i16, i16* %408, align 2, !noalias !17
  store i16 %410, i16* %409, align 2, !noalias !17
  %411 = getelementptr inbounds i16, i16* %409, i64 1
  %412 = getelementptr inbounds i16, i16* %408, i64 1
  %413 = load i16, i16* %412, align 2, !noalias !17
  store i16 %413, i16* %411, align 2, !noalias !17
  %414 = getelementptr inbounds i16, i16* %409, i64 2
  %415 = getelementptr inbounds i16, i16* %408, i64 2
  %416 = load i16, i16* %415, align 2, !noalias !17
  store i16 %416, i16* %414, align 2, !noalias !17
  %417 = getelementptr inbounds i16, i16* %409, i64 3
  %418 = getelementptr inbounds i16, i16* %408, i64 3
  %419 = load i16, i16* %418, align 2, !noalias !17
  store i16 %419, i16* %417, align 2, !noalias !17
  %420 = getelementptr inbounds i16, i16* %409, i64 4
  %421 = getelementptr inbounds i16, i16* %408, i64 4
  %422 = load i16, i16* %421, align 2, !noalias !17
  store i16 %422, i16* %420, align 2, !noalias !17
  %423 = getelementptr inbounds i16, i16* %409, i64 5
  %424 = getelementptr inbounds i16, i16* %408, i64 5
  %425 = load i16, i16* %424, align 2, !noalias !17
  store i16 %425, i16* %423, align 2, !noalias !17
  %426 = getelementptr inbounds i16, i16* %409, i64 6
  %427 = getelementptr inbounds i16, i16* %408, i64 6
  %428 = load i16, i16* %427, align 2, !noalias !17
  store i16 %428, i16* %426, align 2, !noalias !17
  %429 = getelementptr inbounds i16, i16* %409, i64 7
  %430 = getelementptr inbounds i16, i16* %408, i64 7
  %431 = load i16, i16* %430, align 2, !noalias !17
  store i16 %431, i16* %429, align 2, !noalias !17
  %432 = add i64 %407, -8
  %433 = getelementptr inbounds i16, i16* %409, i64 8
  %434 = getelementptr inbounds i16, i16* %408, i64 8
  %435 = icmp eq i64 %432, 0
  br i1 %435, label %436, label %406, !llvm.loop !29

436:                                              ; preds = %401, %406, %381
  %437 = add i64 %282, %266
  %438 = load i8, i8* %268, align 1, !noalias !17
  %439 = icmp slt i8 %438, 0
  br i1 %439, label %440, label %442

440:                                              ; preds = %436
  %441 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %437, i64* %441, align 8, !noalias !17
  br label %444

442:                                              ; preds = %436
  %443 = trunc i64 %437 to i8
  store i8 %443, i8* %268, align 1, !noalias !17
  br label %444

444:                                              ; preds = %442, %440
  %445 = getelementptr inbounds i16, i16* %291, i64 %437
  store i16 0, i16* %445, align 2, !noalias !17
  br label %449

446:                                              ; preds = %280
  %447 = add i64 %282, %266
  %448 = sub i64 %447, %281
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* nonnull %7, i64 %281, i64 %448, i64 %282, i64 %282, i64 0, i64 %266, i16* %265) #10, !noalias !17
  br label %449

449:                                              ; preds = %446, %444, %285
  %450 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %450, i8* nonnull align 8 %249, i64 24, i1 false) #10
  br label %890

451:                                              ; preds = %244
  %452 = lshr i64 %2, 1
  %453 = getelementptr inbounds %"class.gfx::StringSlicer", %"class.gfx::StringSlicer"* %1, i64 0, i32 0
  %454 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %453, align 8
  %455 = sub i64 %2, %452
  %456 = getelementptr inbounds %"class.gfx::StringSlicer", %"class.gfx::StringSlicer"* %1, i64 0, i32 4
  %457 = load i8, i8* %456, align 2, !range !13
  %458 = icmp ne i8 %457, 0
  %459 = tail call i64 @_ZN3gfx23FindValidBoundaryBeforeERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmb(%"class.std::__1::basic_string"* dereferenceable(24) %454, i64 %455, i1 zeroext %458) #10
  %460 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %453, align 8
  %461 = bitcast %"class.std::__1::basic_string"* %460 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %462 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %461, i64 0, i32 1, i32 1
  %463 = load i8, i8* %462, align 1
  %464 = icmp slt i8 %463, 0
  br i1 %464, label %465, label %468

465:                                              ; preds = %451
  %466 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %460, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %467 = load i64, i64* %466, align 8
  br label %470

468:                                              ; preds = %451
  %469 = zext i8 %463 to i64
  br label %470

470:                                              ; preds = %465, %468
  %471 = phi i64 [ %467, %465 ], [ %469, %468 ]
  %472 = sub i64 %471, %452
  %473 = load i8, i8* %456, align 2, !range !13
  %474 = icmp ne i8 %473, 0
  %475 = tail call i64 @_ZN3gfx22FindValidBoundaryAfterERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmb(%"class.std::__1::basic_string"* dereferenceable(24) %460, i64 %472, i1 zeroext %474) #10
  %476 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %476) #10
  %477 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %477) #10
  %478 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %453, align 8
  %479 = bitcast %"class.std::__1::basic_string"* %478 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %9, %"class.std::__1::basic_string"* dereferenceable(24) %478, i64 0, i64 %459, %"class.std::__1::allocator"* dereferenceable(1) %479) #10
  %480 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %481 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %480, i64 0, i32 1, i32 1
  %482 = load i8, i8* %481, align 1, !noalias !30
  %483 = icmp slt i8 %482, 0
  %484 = load i16*, i16** %12, align 8, !noalias !30
  %485 = load i64, i64* %13, align 8, !noalias !30
  %486 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %487 = zext i8 %482 to i64
  %488 = select i1 %483, i16* %484, i16* %486
  %489 = select i1 %483, i64 %485, i64 %487
  %490 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %491 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %490, i64 0, i32 1, i32 1
  %492 = load i8, i8* %491, align 1, !noalias !30
  %493 = icmp slt i8 %492, 0
  br i1 %493, label %494, label %501

494:                                              ; preds = %470
  %495 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %496 = load i64, i64* %495, align 8, !noalias !30
  %497 = and i64 %496, 9223372036854775807
  %498 = add nsw i64 %497, -1
  %499 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %500 = load i64, i64* %499, align 8, !noalias !30
  br label %503

501:                                              ; preds = %470
  %502 = zext i8 %492 to i64
  br label %503

503:                                              ; preds = %501, %494
  %504 = phi i64 [ %498, %494 ], [ 10, %501 ]
  %505 = phi i64 [ %500, %494 ], [ %502, %501 ]
  %506 = sub i64 %504, %505
  %507 = icmp ult i64 %506, %489
  br i1 %507, label %669, label %508

508:                                              ; preds = %503
  %509 = icmp eq i64 %489, 0
  br i1 %509, label %672, label %510

510:                                              ; preds = %508
  %511 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %512 = load i16*, i16** %511, align 8, !noalias !30
  %513 = bitcast %"class.std::__1::basic_string"* %9 to i16*
  %514 = select i1 %493, i16* %512, i16* %513
  %515 = getelementptr inbounds i16, i16* %514, i64 %505
  %516 = icmp ult i64 %489, 16
  br i1 %516, label %606, label %517

517:                                              ; preds = %510
  %518 = add i64 %489, %505
  %519 = getelementptr i16, i16* %514, i64 %518
  %520 = getelementptr i16, i16* %488, i64 %489
  %521 = icmp ult i16* %515, %520
  %522 = icmp ult i16* %488, %519
  %523 = and i1 %521, %522
  br i1 %523, label %606, label %524

524:                                              ; preds = %517
  %525 = and i64 %489, -16
  %526 = sub i64 %489, %525
  %527 = getelementptr i16, i16* %488, i64 %525
  %528 = getelementptr i16, i16* %515, i64 %525
  %529 = add i64 %525, -16
  %530 = lshr exact i64 %529, 4
  %531 = add nuw nsw i64 %530, 1
  %532 = and i64 %531, 3
  %533 = icmp ult i64 %529, 48
  br i1 %533, label %585, label %534

534:                                              ; preds = %524
  %535 = sub nsw i64 %531, %532
  br label %536

536:                                              ; preds = %536, %534
  %537 = phi i64 [ 0, %534 ], [ %582, %536 ]
  %538 = phi i64 [ %535, %534 ], [ %583, %536 ]
  %539 = getelementptr i16, i16* %488, i64 %537
  %540 = getelementptr i16, i16* %515, i64 %537
  %541 = bitcast i16* %539 to <8 x i16>*
  %542 = load <8 x i16>, <8 x i16>* %541, align 2, !alias.scope !33, !noalias !30
  %543 = getelementptr i16, i16* %539, i64 8
  %544 = bitcast i16* %543 to <8 x i16>*
  %545 = load <8 x i16>, <8 x i16>* %544, align 2, !alias.scope !33, !noalias !30
  %546 = bitcast i16* %540 to <8 x i16>*
  store <8 x i16> %542, <8 x i16>* %546, align 2, !alias.scope !36, !noalias !38
  %547 = getelementptr i16, i16* %540, i64 8
  %548 = bitcast i16* %547 to <8 x i16>*
  store <8 x i16> %545, <8 x i16>* %548, align 2, !alias.scope !36, !noalias !38
  %549 = or i64 %537, 16
  %550 = getelementptr i16, i16* %488, i64 %549
  %551 = getelementptr i16, i16* %515, i64 %549
  %552 = bitcast i16* %550 to <8 x i16>*
  %553 = load <8 x i16>, <8 x i16>* %552, align 2, !alias.scope !33, !noalias !30
  %554 = getelementptr i16, i16* %550, i64 8
  %555 = bitcast i16* %554 to <8 x i16>*
  %556 = load <8 x i16>, <8 x i16>* %555, align 2, !alias.scope !33, !noalias !30
  %557 = bitcast i16* %551 to <8 x i16>*
  store <8 x i16> %553, <8 x i16>* %557, align 2, !alias.scope !36, !noalias !38
  %558 = getelementptr i16, i16* %551, i64 8
  %559 = bitcast i16* %558 to <8 x i16>*
  store <8 x i16> %556, <8 x i16>* %559, align 2, !alias.scope !36, !noalias !38
  %560 = or i64 %537, 32
  %561 = getelementptr i16, i16* %488, i64 %560
  %562 = getelementptr i16, i16* %515, i64 %560
  %563 = bitcast i16* %561 to <8 x i16>*
  %564 = load <8 x i16>, <8 x i16>* %563, align 2, !alias.scope !33, !noalias !30
  %565 = getelementptr i16, i16* %561, i64 8
  %566 = bitcast i16* %565 to <8 x i16>*
  %567 = load <8 x i16>, <8 x i16>* %566, align 2, !alias.scope !33, !noalias !30
  %568 = bitcast i16* %562 to <8 x i16>*
  store <8 x i16> %564, <8 x i16>* %568, align 2, !alias.scope !36, !noalias !38
  %569 = getelementptr i16, i16* %562, i64 8
  %570 = bitcast i16* %569 to <8 x i16>*
  store <8 x i16> %567, <8 x i16>* %570, align 2, !alias.scope !36, !noalias !38
  %571 = or i64 %537, 48
  %572 = getelementptr i16, i16* %488, i64 %571
  %573 = getelementptr i16, i16* %515, i64 %571
  %574 = bitcast i16* %572 to <8 x i16>*
  %575 = load <8 x i16>, <8 x i16>* %574, align 2, !alias.scope !33, !noalias !30
  %576 = getelementptr i16, i16* %572, i64 8
  %577 = bitcast i16* %576 to <8 x i16>*
  %578 = load <8 x i16>, <8 x i16>* %577, align 2, !alias.scope !33, !noalias !30
  %579 = bitcast i16* %573 to <8 x i16>*
  store <8 x i16> %575, <8 x i16>* %579, align 2, !alias.scope !36, !noalias !38
  %580 = getelementptr i16, i16* %573, i64 8
  %581 = bitcast i16* %580 to <8 x i16>*
  store <8 x i16> %578, <8 x i16>* %581, align 2, !alias.scope !36, !noalias !38
  %582 = add i64 %537, 64
  %583 = add i64 %538, -4
  %584 = icmp eq i64 %583, 0
  br i1 %584, label %585, label %536, !llvm.loop !39

585:                                              ; preds = %536, %524
  %586 = phi i64 [ 0, %524 ], [ %582, %536 ]
  %587 = icmp eq i64 %532, 0
  br i1 %587, label %604, label %588

588:                                              ; preds = %585, %588
  %589 = phi i64 [ %601, %588 ], [ %586, %585 ]
  %590 = phi i64 [ %602, %588 ], [ %532, %585 ]
  %591 = getelementptr i16, i16* %488, i64 %589
  %592 = getelementptr i16, i16* %515, i64 %589
  %593 = bitcast i16* %591 to <8 x i16>*
  %594 = load <8 x i16>, <8 x i16>* %593, align 2, !alias.scope !33, !noalias !30
  %595 = getelementptr i16, i16* %591, i64 8
  %596 = bitcast i16* %595 to <8 x i16>*
  %597 = load <8 x i16>, <8 x i16>* %596, align 2, !alias.scope !33, !noalias !30
  %598 = bitcast i16* %592 to <8 x i16>*
  store <8 x i16> %594, <8 x i16>* %598, align 2, !alias.scope !36, !noalias !38
  %599 = getelementptr i16, i16* %592, i64 8
  %600 = bitcast i16* %599 to <8 x i16>*
  store <8 x i16> %597, <8 x i16>* %600, align 2, !alias.scope !36, !noalias !38
  %601 = add i64 %589, 16
  %602 = add i64 %590, -1
  %603 = icmp eq i64 %602, 0
  br i1 %603, label %604, label %588, !llvm.loop !40

604:                                              ; preds = %588, %585
  %605 = icmp eq i64 %489, %525
  br i1 %605, label %659, label %606

606:                                              ; preds = %604, %517, %510
  %607 = phi i64 [ %489, %517 ], [ %489, %510 ], [ %526, %604 ]
  %608 = phi i16* [ %488, %517 ], [ %488, %510 ], [ %527, %604 ]
  %609 = phi i16* [ %515, %517 ], [ %515, %510 ], [ %528, %604 ]
  %610 = add i64 %607, -1
  %611 = and i64 %607, 7
  %612 = icmp eq i64 %611, 0
  br i1 %612, label %624, label %613

613:                                              ; preds = %606, %613
  %614 = phi i64 [ %619, %613 ], [ %607, %606 ]
  %615 = phi i16* [ %621, %613 ], [ %608, %606 ]
  %616 = phi i16* [ %620, %613 ], [ %609, %606 ]
  %617 = phi i64 [ %622, %613 ], [ %611, %606 ]
  %618 = load i16, i16* %615, align 2, !noalias !30
  store i16 %618, i16* %616, align 2, !noalias !30
  %619 = add i64 %614, -1
  %620 = getelementptr inbounds i16, i16* %616, i64 1
  %621 = getelementptr inbounds i16, i16* %615, i64 1
  %622 = add i64 %617, -1
  %623 = icmp eq i64 %622, 0
  br i1 %623, label %624, label %613, !llvm.loop !41

624:                                              ; preds = %613, %606
  %625 = phi i64 [ %607, %606 ], [ %619, %613 ]
  %626 = phi i16* [ %608, %606 ], [ %621, %613 ]
  %627 = phi i16* [ %609, %606 ], [ %620, %613 ]
  %628 = icmp ult i64 %610, 7
  br i1 %628, label %659, label %629

629:                                              ; preds = %624, %629
  %630 = phi i64 [ %655, %629 ], [ %625, %624 ]
  %631 = phi i16* [ %657, %629 ], [ %626, %624 ]
  %632 = phi i16* [ %656, %629 ], [ %627, %624 ]
  %633 = load i16, i16* %631, align 2, !noalias !30
  store i16 %633, i16* %632, align 2, !noalias !30
  %634 = getelementptr inbounds i16, i16* %632, i64 1
  %635 = getelementptr inbounds i16, i16* %631, i64 1
  %636 = load i16, i16* %635, align 2, !noalias !30
  store i16 %636, i16* %634, align 2, !noalias !30
  %637 = getelementptr inbounds i16, i16* %632, i64 2
  %638 = getelementptr inbounds i16, i16* %631, i64 2
  %639 = load i16, i16* %638, align 2, !noalias !30
  store i16 %639, i16* %637, align 2, !noalias !30
  %640 = getelementptr inbounds i16, i16* %632, i64 3
  %641 = getelementptr inbounds i16, i16* %631, i64 3
  %642 = load i16, i16* %641, align 2, !noalias !30
  store i16 %642, i16* %640, align 2, !noalias !30
  %643 = getelementptr inbounds i16, i16* %632, i64 4
  %644 = getelementptr inbounds i16, i16* %631, i64 4
  %645 = load i16, i16* %644, align 2, !noalias !30
  store i16 %645, i16* %643, align 2, !noalias !30
  %646 = getelementptr inbounds i16, i16* %632, i64 5
  %647 = getelementptr inbounds i16, i16* %631, i64 5
  %648 = load i16, i16* %647, align 2, !noalias !30
  store i16 %648, i16* %646, align 2, !noalias !30
  %649 = getelementptr inbounds i16, i16* %632, i64 6
  %650 = getelementptr inbounds i16, i16* %631, i64 6
  %651 = load i16, i16* %650, align 2, !noalias !30
  store i16 %651, i16* %649, align 2, !noalias !30
  %652 = getelementptr inbounds i16, i16* %632, i64 7
  %653 = getelementptr inbounds i16, i16* %631, i64 7
  %654 = load i16, i16* %653, align 2, !noalias !30
  store i16 %654, i16* %652, align 2, !noalias !30
  %655 = add i64 %630, -8
  %656 = getelementptr inbounds i16, i16* %632, i64 8
  %657 = getelementptr inbounds i16, i16* %631, i64 8
  %658 = icmp eq i64 %655, 0
  br i1 %658, label %659, label %629, !llvm.loop !42

659:                                              ; preds = %624, %629, %604
  %660 = add i64 %505, %489
  %661 = load i8, i8* %491, align 1, !noalias !30
  %662 = icmp slt i8 %661, 0
  br i1 %662, label %663, label %665

663:                                              ; preds = %659
  %664 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %660, i64* %664, align 8, !noalias !30
  br label %667

665:                                              ; preds = %659
  %666 = trunc i64 %660 to i8
  store i8 %666, i8* %491, align 1, !noalias !30
  br label %667

667:                                              ; preds = %665, %663
  %668 = getelementptr inbounds i16, i16* %514, i64 %660
  store i16 0, i16* %668, align 2, !noalias !30
  br label %672

669:                                              ; preds = %503
  %670 = add i64 %505, %489
  %671 = sub i64 %670, %504
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* nonnull %9, i64 %504, i64 %671, i64 %505, i64 %505, i64 0, i64 %489, i16* %488) #10, !noalias !30
  br label %672

672:                                              ; preds = %508, %667, %669
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %476, i8* nonnull align 8 %477, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %477, i8 0, i64 24, i1 false) #10, !noalias !30
  %673 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %673) #10
  %674 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %453, align 8
  %675 = bitcast %"class.std::__1::basic_string"* %674 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %10, %"class.std::__1::basic_string"* dereferenceable(24) %674, i64 %475, i64 -1, %"class.std::__1::allocator"* dereferenceable(1) %675) #10
  %676 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %677 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %676, i64 0, i32 1, i32 1
  %678 = load i8, i8* %677, align 1, !noalias !43
  %679 = icmp slt i8 %678, 0
  %680 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %681 = load i16*, i16** %680, align 8, !noalias !43
  %682 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %683 = load i64, i64* %682, align 8, !noalias !43
  %684 = bitcast %"class.std::__1::basic_string"* %10 to i16*
  %685 = zext i8 %678 to i64
  %686 = select i1 %679, i16* %681, i16* %684
  %687 = select i1 %679, i64 %683, i64 %685
  %688 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %689 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %688, i64 0, i32 1, i32 1
  %690 = load i8, i8* %689, align 1, !noalias !43
  %691 = icmp slt i8 %690, 0
  br i1 %691, label %692, label %699

692:                                              ; preds = %672
  %693 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %694 = load i64, i64* %693, align 8, !noalias !43
  %695 = and i64 %694, 9223372036854775807
  %696 = add nsw i64 %695, -1
  %697 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %698 = load i64, i64* %697, align 8, !noalias !43
  br label %701

699:                                              ; preds = %672
  %700 = zext i8 %690 to i64
  br label %701

701:                                              ; preds = %699, %692
  %702 = phi i64 [ %696, %692 ], [ 10, %699 ]
  %703 = phi i64 [ %698, %692 ], [ %700, %699 ]
  %704 = sub i64 %702, %703
  %705 = icmp ult i64 %704, %687
  br i1 %705, label %867, label %706

706:                                              ; preds = %701
  %707 = icmp eq i64 %687, 0
  br i1 %707, label %870, label %708

708:                                              ; preds = %706
  %709 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %710 = load i16*, i16** %709, align 8, !noalias !43
  %711 = bitcast %"class.std::__1::basic_string"* %8 to i16*
  %712 = select i1 %691, i16* %710, i16* %711
  %713 = getelementptr inbounds i16, i16* %712, i64 %703
  %714 = icmp ult i64 %687, 16
  br i1 %714, label %804, label %715

715:                                              ; preds = %708
  %716 = add i64 %687, %703
  %717 = getelementptr i16, i16* %712, i64 %716
  %718 = getelementptr i16, i16* %686, i64 %687
  %719 = icmp ult i16* %713, %718
  %720 = icmp ult i16* %686, %717
  %721 = and i1 %719, %720
  br i1 %721, label %804, label %722

722:                                              ; preds = %715
  %723 = and i64 %687, -16
  %724 = sub i64 %687, %723
  %725 = getelementptr i16, i16* %686, i64 %723
  %726 = getelementptr i16, i16* %713, i64 %723
  %727 = add i64 %723, -16
  %728 = lshr exact i64 %727, 4
  %729 = add nuw nsw i64 %728, 1
  %730 = and i64 %729, 3
  %731 = icmp ult i64 %727, 48
  br i1 %731, label %783, label %732

732:                                              ; preds = %722
  %733 = sub nsw i64 %729, %730
  br label %734

734:                                              ; preds = %734, %732
  %735 = phi i64 [ 0, %732 ], [ %780, %734 ]
  %736 = phi i64 [ %733, %732 ], [ %781, %734 ]
  %737 = getelementptr i16, i16* %686, i64 %735
  %738 = getelementptr i16, i16* %713, i64 %735
  %739 = bitcast i16* %737 to <8 x i16>*
  %740 = load <8 x i16>, <8 x i16>* %739, align 2, !alias.scope !46, !noalias !43
  %741 = getelementptr i16, i16* %737, i64 8
  %742 = bitcast i16* %741 to <8 x i16>*
  %743 = load <8 x i16>, <8 x i16>* %742, align 2, !alias.scope !46, !noalias !43
  %744 = bitcast i16* %738 to <8 x i16>*
  store <8 x i16> %740, <8 x i16>* %744, align 2, !alias.scope !49, !noalias !51
  %745 = getelementptr i16, i16* %738, i64 8
  %746 = bitcast i16* %745 to <8 x i16>*
  store <8 x i16> %743, <8 x i16>* %746, align 2, !alias.scope !49, !noalias !51
  %747 = or i64 %735, 16
  %748 = getelementptr i16, i16* %686, i64 %747
  %749 = getelementptr i16, i16* %713, i64 %747
  %750 = bitcast i16* %748 to <8 x i16>*
  %751 = load <8 x i16>, <8 x i16>* %750, align 2, !alias.scope !46, !noalias !43
  %752 = getelementptr i16, i16* %748, i64 8
  %753 = bitcast i16* %752 to <8 x i16>*
  %754 = load <8 x i16>, <8 x i16>* %753, align 2, !alias.scope !46, !noalias !43
  %755 = bitcast i16* %749 to <8 x i16>*
  store <8 x i16> %751, <8 x i16>* %755, align 2, !alias.scope !49, !noalias !51
  %756 = getelementptr i16, i16* %749, i64 8
  %757 = bitcast i16* %756 to <8 x i16>*
  store <8 x i16> %754, <8 x i16>* %757, align 2, !alias.scope !49, !noalias !51
  %758 = or i64 %735, 32
  %759 = getelementptr i16, i16* %686, i64 %758
  %760 = getelementptr i16, i16* %713, i64 %758
  %761 = bitcast i16* %759 to <8 x i16>*
  %762 = load <8 x i16>, <8 x i16>* %761, align 2, !alias.scope !46, !noalias !43
  %763 = getelementptr i16, i16* %759, i64 8
  %764 = bitcast i16* %763 to <8 x i16>*
  %765 = load <8 x i16>, <8 x i16>* %764, align 2, !alias.scope !46, !noalias !43
  %766 = bitcast i16* %760 to <8 x i16>*
  store <8 x i16> %762, <8 x i16>* %766, align 2, !alias.scope !49, !noalias !51
  %767 = getelementptr i16, i16* %760, i64 8
  %768 = bitcast i16* %767 to <8 x i16>*
  store <8 x i16> %765, <8 x i16>* %768, align 2, !alias.scope !49, !noalias !51
  %769 = or i64 %735, 48
  %770 = getelementptr i16, i16* %686, i64 %769
  %771 = getelementptr i16, i16* %713, i64 %769
  %772 = bitcast i16* %770 to <8 x i16>*
  %773 = load <8 x i16>, <8 x i16>* %772, align 2, !alias.scope !46, !noalias !43
  %774 = getelementptr i16, i16* %770, i64 8
  %775 = bitcast i16* %774 to <8 x i16>*
  %776 = load <8 x i16>, <8 x i16>* %775, align 2, !alias.scope !46, !noalias !43
  %777 = bitcast i16* %771 to <8 x i16>*
  store <8 x i16> %773, <8 x i16>* %777, align 2, !alias.scope !49, !noalias !51
  %778 = getelementptr i16, i16* %771, i64 8
  %779 = bitcast i16* %778 to <8 x i16>*
  store <8 x i16> %776, <8 x i16>* %779, align 2, !alias.scope !49, !noalias !51
  %780 = add i64 %735, 64
  %781 = add i64 %736, -4
  %782 = icmp eq i64 %781, 0
  br i1 %782, label %783, label %734, !llvm.loop !52

783:                                              ; preds = %734, %722
  %784 = phi i64 [ 0, %722 ], [ %780, %734 ]
  %785 = icmp eq i64 %730, 0
  br i1 %785, label %802, label %786

786:                                              ; preds = %783, %786
  %787 = phi i64 [ %799, %786 ], [ %784, %783 ]
  %788 = phi i64 [ %800, %786 ], [ %730, %783 ]
  %789 = getelementptr i16, i16* %686, i64 %787
  %790 = getelementptr i16, i16* %713, i64 %787
  %791 = bitcast i16* %789 to <8 x i16>*
  %792 = load <8 x i16>, <8 x i16>* %791, align 2, !alias.scope !46, !noalias !43
  %793 = getelementptr i16, i16* %789, i64 8
  %794 = bitcast i16* %793 to <8 x i16>*
  %795 = load <8 x i16>, <8 x i16>* %794, align 2, !alias.scope !46, !noalias !43
  %796 = bitcast i16* %790 to <8 x i16>*
  store <8 x i16> %792, <8 x i16>* %796, align 2, !alias.scope !49, !noalias !51
  %797 = getelementptr i16, i16* %790, i64 8
  %798 = bitcast i16* %797 to <8 x i16>*
  store <8 x i16> %795, <8 x i16>* %798, align 2, !alias.scope !49, !noalias !51
  %799 = add i64 %787, 16
  %800 = add i64 %788, -1
  %801 = icmp eq i64 %800, 0
  br i1 %801, label %802, label %786, !llvm.loop !53

802:                                              ; preds = %786, %783
  %803 = icmp eq i64 %687, %723
  br i1 %803, label %857, label %804

804:                                              ; preds = %802, %715, %708
  %805 = phi i64 [ %687, %715 ], [ %687, %708 ], [ %724, %802 ]
  %806 = phi i16* [ %686, %715 ], [ %686, %708 ], [ %725, %802 ]
  %807 = phi i16* [ %713, %715 ], [ %713, %708 ], [ %726, %802 ]
  %808 = add i64 %805, -1
  %809 = and i64 %805, 7
  %810 = icmp eq i64 %809, 0
  br i1 %810, label %822, label %811

811:                                              ; preds = %804, %811
  %812 = phi i64 [ %817, %811 ], [ %805, %804 ]
  %813 = phi i16* [ %819, %811 ], [ %806, %804 ]
  %814 = phi i16* [ %818, %811 ], [ %807, %804 ]
  %815 = phi i64 [ %820, %811 ], [ %809, %804 ]
  %816 = load i16, i16* %813, align 2, !noalias !43
  store i16 %816, i16* %814, align 2, !noalias !43
  %817 = add i64 %812, -1
  %818 = getelementptr inbounds i16, i16* %814, i64 1
  %819 = getelementptr inbounds i16, i16* %813, i64 1
  %820 = add i64 %815, -1
  %821 = icmp eq i64 %820, 0
  br i1 %821, label %822, label %811, !llvm.loop !54

822:                                              ; preds = %811, %804
  %823 = phi i64 [ %805, %804 ], [ %817, %811 ]
  %824 = phi i16* [ %806, %804 ], [ %819, %811 ]
  %825 = phi i16* [ %807, %804 ], [ %818, %811 ]
  %826 = icmp ult i64 %808, 7
  br i1 %826, label %857, label %827

827:                                              ; preds = %822, %827
  %828 = phi i64 [ %853, %827 ], [ %823, %822 ]
  %829 = phi i16* [ %855, %827 ], [ %824, %822 ]
  %830 = phi i16* [ %854, %827 ], [ %825, %822 ]
  %831 = load i16, i16* %829, align 2, !noalias !43
  store i16 %831, i16* %830, align 2, !noalias !43
  %832 = getelementptr inbounds i16, i16* %830, i64 1
  %833 = getelementptr inbounds i16, i16* %829, i64 1
  %834 = load i16, i16* %833, align 2, !noalias !43
  store i16 %834, i16* %832, align 2, !noalias !43
  %835 = getelementptr inbounds i16, i16* %830, i64 2
  %836 = getelementptr inbounds i16, i16* %829, i64 2
  %837 = load i16, i16* %836, align 2, !noalias !43
  store i16 %837, i16* %835, align 2, !noalias !43
  %838 = getelementptr inbounds i16, i16* %830, i64 3
  %839 = getelementptr inbounds i16, i16* %829, i64 3
  %840 = load i16, i16* %839, align 2, !noalias !43
  store i16 %840, i16* %838, align 2, !noalias !43
  %841 = getelementptr inbounds i16, i16* %830, i64 4
  %842 = getelementptr inbounds i16, i16* %829, i64 4
  %843 = load i16, i16* %842, align 2, !noalias !43
  store i16 %843, i16* %841, align 2, !noalias !43
  %844 = getelementptr inbounds i16, i16* %830, i64 5
  %845 = getelementptr inbounds i16, i16* %829, i64 5
  %846 = load i16, i16* %845, align 2, !noalias !43
  store i16 %846, i16* %844, align 2, !noalias !43
  %847 = getelementptr inbounds i16, i16* %830, i64 6
  %848 = getelementptr inbounds i16, i16* %829, i64 6
  %849 = load i16, i16* %848, align 2, !noalias !43
  store i16 %849, i16* %847, align 2, !noalias !43
  %850 = getelementptr inbounds i16, i16* %830, i64 7
  %851 = getelementptr inbounds i16, i16* %829, i64 7
  %852 = load i16, i16* %851, align 2, !noalias !43
  store i16 %852, i16* %850, align 2, !noalias !43
  %853 = add i64 %828, -8
  %854 = getelementptr inbounds i16, i16* %830, i64 8
  %855 = getelementptr inbounds i16, i16* %829, i64 8
  %856 = icmp eq i64 %853, 0
  br i1 %856, label %857, label %827, !llvm.loop !55

857:                                              ; preds = %822, %827, %802
  %858 = add i64 %703, %687
  %859 = load i8, i8* %689, align 1, !noalias !43
  %860 = icmp slt i8 %859, 0
  br i1 %860, label %861, label %863

861:                                              ; preds = %857
  %862 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %858, i64* %862, align 8, !noalias !43
  br label %865

863:                                              ; preds = %857
  %864 = trunc i64 %858 to i8
  store i8 %864, i8* %689, align 1, !noalias !43
  br label %865

865:                                              ; preds = %863, %861
  %866 = getelementptr inbounds i16, i16* %712, i64 %858
  store i16 0, i16* %866, align 2, !noalias !43
  br label %870

867:                                              ; preds = %701
  %868 = add i64 %703, %687
  %869 = sub i64 %868, %702
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* nonnull %8, i64 %702, i64 %869, i64 %703, i64 %703, i64 0, i64 %687, i16* %686) #10, !noalias !43
  br label %870

870:                                              ; preds = %706, %865, %867
  %871 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %871, i8* nonnull align 8 %476, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %476, i8 0, i64 24, i1 false) #10, !noalias !43
  %872 = load i8, i8* %677, align 1
  %873 = icmp slt i8 %872, 0
  br i1 %873, label %875, label %874

874:                                              ; preds = %870
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %673) #10
  br label %883

875:                                              ; preds = %870
  %876 = bitcast %"class.std::__1::basic_string"* %10 to i8**
  %877 = load i8*, i8** %876, align 8
  call void @_ZdlPv(i8* %877) #12
  %878 = load i8, i8* %689, align 1
  %879 = icmp slt i8 %878, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %673) #10
  br i1 %879, label %880, label %883

880:                                              ; preds = %875
  %881 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  %882 = load i8*, i8** %881, align 8
  call void @_ZdlPv(i8* %882) #12
  br label %883

883:                                              ; preds = %874, %875, %880
  %884 = load i8, i8* %491, align 1
  %885 = icmp slt i8 %884, 0
  br i1 %885, label %886, label %889

886:                                              ; preds = %883
  %887 = bitcast %"class.std::__1::basic_string"* %9 to i8**
  %888 = load i8*, i8** %887, align 8
  call void @_ZdlPv(i8* %888) #12
  br label %889

889:                                              ; preds = %883, %886
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %477) #10
  br label %890

890:                                              ; preds = %241, %216, %889, %449
  %891 = phi i8* [ %476, %889 ], [ %249, %449 ], [ %204, %216 ], [ %204, %241 ]
  %892 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %480, %889 ], [ %257, %449 ], [ %224, %216 ], [ %224, %241 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %891) #10
  %893 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %892, i64 0, i32 1, i32 1
  %894 = load i8, i8* %893, align 1
  %895 = icmp slt i8 %894, 0
  br i1 %895, label %896, label %899

896:                                              ; preds = %890
  %897 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %898 = load i8*, i8** %897, align 8
  call void @_ZdlPv(i8* %898) #12
  br label %899

899:                                              ; preds = %890, %896
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i64 @_ZN3gfx22FindValidBoundaryAfterERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmb(%"class.std::__1::basic_string"* dereferenceable(24), i64, i1 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i64 @_ZN3gfx23FindValidBoundaryBeforeERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmb(%"class.std::__1::basic_string"* dereferenceable(24), i64, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx13ElideFilenameERKN4base8FilePathERKNS_8FontListEf(%"class.std::__1::basic_string"* noalias sret, %"class.base::FilePath"* dereferenceable(24), %"class.gfx::FontList"* dereferenceable(8), float) local_unnamed_addr #0 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string.11", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string.11", align 8
  %9 = alloca %"class.std::__1::basic_string.2", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string.11", align 8
  %12 = alloca %"class.base::FilePath", align 8
  %13 = alloca %"class.base::FilePath", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #10
  %20 = bitcast %"class.std::__1::basic_string.11"* %6 to i8*
  %21 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #10
  %22 = bitcast %"class.base::FilePath"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = bitcast %"class.base::FilePath"* %1 to i8*
  %29 = select i1 %25, i8* %27, i8* %28
  %30 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %24 to i64
  %33 = select i1 %25, i64 %31, i64 %32
  call void @_ZN4base17SysNativeMBToWideENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.11"* nonnull sret %6, i8* %29, i64 %33) #10
  %34 = bitcast %"class.std::__1::basic_string.11"* %6 to %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short", %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short"* %34, i64 0, i32 1, i32 1
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  %38 = getelementptr inbounds %"class.std::__1::basic_string.11", %"class.std::__1::basic_string.11"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i32*, i32** %38, align 8
  %40 = bitcast %"class.std::__1::basic_string.11"* %6 to i32*
  %41 = select i1 %37, i32* %39, i32* %40
  %42 = getelementptr inbounds %"class.std::__1::basic_string.11", %"class.std::__1::basic_string.11"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = zext i8 %36 to i64
  %45 = select i1 %37, i64 %43, i64 %44
  call void @_ZN4base11WideToUTF16ENS_16BasicStringPieceIwNSt3__111char_traitsIwEEEE(%"class.std::__1::basic_string"* nonnull sret %5, i32* %41, i64 %45) #10
  %46 = load i8, i8* %35, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %4
  %49 = bitcast %"class.std::__1::basic_string.11"* %6 to i8**
  %50 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %50) #12
  br label %51

51:                                               ; preds = %4, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #10
  %52 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #10
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = bitcast %"class.std::__1::basic_string.11"* %8 to i8*
  %56 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #10
  %57 = bitcast %"class.std::__1::basic_string.2"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #10
  call void @_ZNK4base8FilePath9ExtensionEv(%"class.std::__1::basic_string.2"* nonnull sret %9, %"class.base::FilePath"* %1) #10
  %58 = bitcast %"class.std::__1::basic_string.2"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  %62 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = select i1 %61, i8* %63, i8* %57
  %65 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = zext i8 %60 to i64
  %68 = select i1 %61, i64 %66, i64 %67
  call void @_ZN4base17SysNativeMBToWideENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.11"* nonnull sret %8, i8* %64, i64 %68) #10
  %69 = bitcast %"class.std::__1::basic_string.11"* %8 to %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short", %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short"* %69, i64 0, i32 1, i32 1
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  %73 = getelementptr inbounds %"class.std::__1::basic_string.11", %"class.std::__1::basic_string.11"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i32*, i32** %73, align 8
  %75 = bitcast %"class.std::__1::basic_string.11"* %8 to i32*
  %76 = select i1 %72, i32* %74, i32* %75
  %77 = getelementptr inbounds %"class.std::__1::basic_string.11", %"class.std::__1::basic_string.11"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = zext i8 %71 to i64
  %80 = select i1 %72, i64 %78, i64 %79
  call void @_ZN4base11WideToUTF16ENS_16BasicStringPieceIwNSt3__111char_traitsIwEEEE(%"class.std::__1::basic_string"* nonnull sret %7, i32* %76, i64 %80) #10
  %81 = load i8, i8* %70, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %51
  %84 = bitcast %"class.std::__1::basic_string.11"* %8 to i8**
  %85 = load i8*, i8** %84, align 8
  call void @_ZdlPv(i8* %85) #12
  br label %86

86:                                               ; preds = %51, %83
  %87 = load i8, i8* %59, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %91

89:                                               ; preds = %86
  %90 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %90) #12
  br label %91

91:                                               ; preds = %86, %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #10
  %92 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #10
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %94 = bitcast %"class.std::__1::basic_string.11"* %11 to i8*
  %95 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #10
  %96 = bitcast %"class.base::FilePath"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96) #10
  %97 = bitcast %"class.base::FilePath"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #10
  call void @_ZNK4base8FilePath8BaseNameEv(%"class.base::FilePath"* nonnull sret %13, %"class.base::FilePath"* %1) #10
  call void @_ZNK4base8FilePath15RemoveExtensionEv(%"class.base::FilePath"* nonnull sret %12, %"class.base::FilePath"* nonnull %13) #10
  %98 = bitcast %"class.base::FilePath"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = load i8, i8* %99, align 1
  %101 = icmp slt i8 %100, 0
  %102 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  %104 = select i1 %101, i8* %103, i8* %96
  %105 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %106 = load i64, i64* %105, align 8
  %107 = zext i8 %100 to i64
  %108 = select i1 %101, i64 %106, i64 %107
  call void @_ZN4base17SysNativeMBToWideENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.11"* nonnull sret %11, i8* %104, i64 %108) #10
  %109 = bitcast %"class.std::__1::basic_string.11"* %11 to %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short", %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short"* %109, i64 0, i32 1, i32 1
  %111 = load i8, i8* %110, align 1
  %112 = icmp slt i8 %111, 0
  %113 = getelementptr inbounds %"class.std::__1::basic_string.11", %"class.std::__1::basic_string.11"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load i32*, i32** %113, align 8
  %115 = bitcast %"class.std::__1::basic_string.11"* %11 to i32*
  %116 = select i1 %112, i32* %114, i32* %115
  %117 = getelementptr inbounds %"class.std::__1::basic_string.11", %"class.std::__1::basic_string.11"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %118 = load i64, i64* %117, align 8
  %119 = zext i8 %111 to i64
  %120 = select i1 %112, i64 %118, i64 %119
  call void @_ZN4base11WideToUTF16ENS_16BasicStringPieceIwNSt3__111char_traitsIwEEEE(%"class.std::__1::basic_string"* nonnull sret %10, i32* %116, i64 %120) #10
  %121 = load i8, i8* %110, align 1
  %122 = icmp slt i8 %121, 0
  br i1 %122, label %123, label %126

123:                                              ; preds = %91
  %124 = bitcast %"class.std::__1::basic_string.11"* %11 to i8**
  %125 = load i8*, i8** %124, align 8
  call void @_ZdlPv(i8* %125) #12
  br label %126

126:                                              ; preds = %91, %123
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %12) #10
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #10
  %127 = call float @_ZN3gfx15GetStringWidthFERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, %"class.gfx::FontList"* dereferenceable(8) %2) #10
  %128 = fcmp ugt float %127, %3
  br i1 %128, label %131, label %129

129:                                              ; preds = %126
  call void @_ZN4base4i18n35GetDisplayStringInLTRDirectionalityERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #10
  %130 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %398

131:                                              ; preds = %126
  %132 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %133 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %132, i64 0, i32 1, i32 1
  %134 = load i8, i8* %133, align 1
  %135 = icmp slt i8 %134, 0
  %136 = load i64, i64* %93, align 8
  %137 = zext i8 %134 to i64
  %138 = select i1 %135, i64 %136, i64 %137
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %149, label %140

140:                                              ; preds = %131
  %141 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %142 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %141, i64 0, i32 1, i32 1
  %143 = load i8, i8* %142, align 1
  %144 = icmp slt i8 %143, 0
  %145 = load i64, i64* %54, align 8
  %146 = zext i8 %143 to i64
  %147 = select i1 %144, i64 %145, i64 %146
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %149, label %160

149:                                              ; preds = %140, %131
  %150 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %150) #10
  %151 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %151, i8 -86, i64 24, i1 false)
  call void @_ZN3gfx9ElideTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListEfNS_13ElideBehaviorE(%"class.std::__1::basic_string"* nonnull sret %14, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, %"class.gfx::FontList"* dereferenceable(8) %2, float %3, i32 4)
  call void @_ZN4base4i18n35GetDisplayStringInLTRDirectionalityERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %14) #10
  %152 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %153 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %152, i64 0, i32 1, i32 1
  %154 = load i8, i8* %153, align 1
  %155 = icmp slt i8 %154, 0
  br i1 %155, label %156, label %159

156:                                              ; preds = %149
  %157 = bitcast %"class.std::__1::basic_string"* %14 to i8**
  %158 = load i8*, i8** %157, align 8
  call void @_ZdlPv(i8* %158) #12
  br label %159

159:                                              ; preds = %149, %156
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %150) #10
  br label %398

160:                                              ; preds = %140
  %161 = call float @_ZN3gfx15GetStringWidthFERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, %"class.gfx::FontList"* dereferenceable(8) %2) #10
  %162 = call float @_ZN3gfx15GetStringWidthFERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, %"class.gfx::FontList"* dereferenceable(8) %2) #10
  %163 = fadd float %161, %162
  %164 = fcmp ugt float %163, %3
  br i1 %164, label %176, label %165

165:                                              ; preds = %160
  %166 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %166) #10
  %167 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %167, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string"* nonnull sret %15, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7)
  call void @_ZN4base4i18n35GetDisplayStringInLTRDirectionalityERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %15) #10
  %168 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %169 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %168, i64 0, i32 1, i32 1
  %170 = load i8, i8* %169, align 1
  %171 = icmp slt i8 %170, 0
  br i1 %171, label %172, label %175

172:                                              ; preds = %165
  %173 = bitcast %"class.std::__1::basic_string"* %15 to i8**
  %174 = load i8*, i8** %173, align 8
  call void @_ZdlPv(i8* %174) #12
  br label %175

175:                                              ; preds = %165, %172
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %166) #10
  br label %398

176:                                              ; preds = %160
  %177 = fcmp ult float %161, %3
  br i1 %177, label %198, label %178

178:                                              ; preds = %176
  %179 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %179) #10
  %180 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %181 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %181, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %180) #10
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string"* nonnull sret %17, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7)
  call void @_ZN3gfx9ElideTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListEfNS_13ElideBehaviorE(%"class.std::__1::basic_string"* nonnull sret %16, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %17, %"class.gfx::FontList"* dereferenceable(8) %2, float %3, i32 3)
  %182 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %183 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %182, i64 0, i32 1, i32 1
  %184 = load i8, i8* %183, align 1
  %185 = icmp slt i8 %184, 0
  br i1 %185, label %186, label %189

186:                                              ; preds = %178
  %187 = bitcast %"class.std::__1::basic_string"* %17 to i8**
  %188 = load i8*, i8** %187, align 8
  call void @_ZdlPv(i8* %188) #12
  br label %189

189:                                              ; preds = %178, %186
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %180) #10
  call void @_ZN4base4i18n35GetDisplayStringInLTRDirectionalityERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %16) #10
  %190 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %191 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %190, i64 0, i32 1, i32 1
  %192 = load i8, i8* %191, align 1
  %193 = icmp slt i8 %192, 0
  br i1 %193, label %194, label %197

194:                                              ; preds = %189
  %195 = bitcast %"class.std::__1::basic_string"* %16 to i8**
  %196 = load i8*, i8** %195, align 8
  call void @_ZdlPv(i8* %196) #12
  br label %197

197:                                              ; preds = %189, %194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %179) #10
  br label %398

198:                                              ; preds = %176
  %199 = fsub float %3, %161
  %200 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %200) #10
  %201 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %203 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %203, i8 -86, i64 24, i1 false)
  call void @_ZN3gfx9ElideTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListEfNS_13ElideBehaviorE(%"class.std::__1::basic_string"* nonnull sret %18, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, %"class.gfx::FontList"* dereferenceable(8) %2, float %199, i32 4)
  %204 = load i8, i8* %142, align 1
  %205 = icmp slt i8 %204, 0
  %206 = load i16*, i16** %53, align 8
  %207 = load i64, i64* %54, align 8
  %208 = bitcast %"class.std::__1::basic_string"* %7 to i16*
  %209 = zext i8 %204 to i64
  %210 = select i1 %205, i16* %206, i16* %208
  %211 = select i1 %205, i64 %207, i64 %209
  %212 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %213 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %212, i64 0, i32 1, i32 1
  %214 = load i8, i8* %213, align 1
  %215 = icmp slt i8 %214, 0
  br i1 %215, label %216, label %222

216:                                              ; preds = %198
  %217 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %218 = load i64, i64* %217, align 8
  %219 = and i64 %218, 9223372036854775807
  %220 = add nsw i64 %219, -1
  %221 = load i64, i64* %202, align 8
  br label %224

222:                                              ; preds = %198
  %223 = zext i8 %214 to i64
  br label %224

224:                                              ; preds = %222, %216
  %225 = phi i64 [ %220, %216 ], [ 10, %222 ]
  %226 = phi i64 [ %221, %216 ], [ %223, %222 ]
  %227 = sub i64 %225, %226
  %228 = icmp ult i64 %227, %211
  br i1 %228, label %388, label %229

229:                                              ; preds = %224
  %230 = icmp eq i64 %211, 0
  br i1 %230, label %391, label %231

231:                                              ; preds = %229
  %232 = load i16*, i16** %201, align 8
  %233 = bitcast %"class.std::__1::basic_string"* %18 to i16*
  %234 = select i1 %215, i16* %232, i16* %233
  %235 = getelementptr inbounds i16, i16* %234, i64 %226
  %236 = icmp ult i64 %211, 16
  br i1 %236, label %326, label %237

237:                                              ; preds = %231
  %238 = add i64 %211, %226
  %239 = getelementptr i16, i16* %234, i64 %238
  %240 = getelementptr i16, i16* %210, i64 %211
  %241 = icmp ult i16* %235, %240
  %242 = icmp ult i16* %210, %239
  %243 = and i1 %241, %242
  br i1 %243, label %326, label %244

244:                                              ; preds = %237
  %245 = and i64 %211, -16
  %246 = sub i64 %211, %245
  %247 = getelementptr i16, i16* %210, i64 %245
  %248 = getelementptr i16, i16* %235, i64 %245
  %249 = add i64 %245, -16
  %250 = lshr exact i64 %249, 4
  %251 = add nuw nsw i64 %250, 1
  %252 = and i64 %251, 3
  %253 = icmp ult i64 %249, 48
  br i1 %253, label %305, label %254

254:                                              ; preds = %244
  %255 = sub nsw i64 %251, %252
  br label %256

256:                                              ; preds = %256, %254
  %257 = phi i64 [ 0, %254 ], [ %302, %256 ]
  %258 = phi i64 [ %255, %254 ], [ %303, %256 ]
  %259 = getelementptr i16, i16* %210, i64 %257
  %260 = getelementptr i16, i16* %235, i64 %257
  %261 = bitcast i16* %259 to <8 x i16>*
  %262 = load <8 x i16>, <8 x i16>* %261, align 2, !alias.scope !56
  %263 = getelementptr i16, i16* %259, i64 8
  %264 = bitcast i16* %263 to <8 x i16>*
  %265 = load <8 x i16>, <8 x i16>* %264, align 2, !alias.scope !56
  %266 = bitcast i16* %260 to <8 x i16>*
  store <8 x i16> %262, <8 x i16>* %266, align 2, !alias.scope !59, !noalias !56
  %267 = getelementptr i16, i16* %260, i64 8
  %268 = bitcast i16* %267 to <8 x i16>*
  store <8 x i16> %265, <8 x i16>* %268, align 2, !alias.scope !59, !noalias !56
  %269 = or i64 %257, 16
  %270 = getelementptr i16, i16* %210, i64 %269
  %271 = getelementptr i16, i16* %235, i64 %269
  %272 = bitcast i16* %270 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !56
  %274 = getelementptr i16, i16* %270, i64 8
  %275 = bitcast i16* %274 to <8 x i16>*
  %276 = load <8 x i16>, <8 x i16>* %275, align 2, !alias.scope !56
  %277 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %277, align 2, !alias.scope !59, !noalias !56
  %278 = getelementptr i16, i16* %271, i64 8
  %279 = bitcast i16* %278 to <8 x i16>*
  store <8 x i16> %276, <8 x i16>* %279, align 2, !alias.scope !59, !noalias !56
  %280 = or i64 %257, 32
  %281 = getelementptr i16, i16* %210, i64 %280
  %282 = getelementptr i16, i16* %235, i64 %280
  %283 = bitcast i16* %281 to <8 x i16>*
  %284 = load <8 x i16>, <8 x i16>* %283, align 2, !alias.scope !56
  %285 = getelementptr i16, i16* %281, i64 8
  %286 = bitcast i16* %285 to <8 x i16>*
  %287 = load <8 x i16>, <8 x i16>* %286, align 2, !alias.scope !56
  %288 = bitcast i16* %282 to <8 x i16>*
  store <8 x i16> %284, <8 x i16>* %288, align 2, !alias.scope !59, !noalias !56
  %289 = getelementptr i16, i16* %282, i64 8
  %290 = bitcast i16* %289 to <8 x i16>*
  store <8 x i16> %287, <8 x i16>* %290, align 2, !alias.scope !59, !noalias !56
  %291 = or i64 %257, 48
  %292 = getelementptr i16, i16* %210, i64 %291
  %293 = getelementptr i16, i16* %235, i64 %291
  %294 = bitcast i16* %292 to <8 x i16>*
  %295 = load <8 x i16>, <8 x i16>* %294, align 2, !alias.scope !56
  %296 = getelementptr i16, i16* %292, i64 8
  %297 = bitcast i16* %296 to <8 x i16>*
  %298 = load <8 x i16>, <8 x i16>* %297, align 2, !alias.scope !56
  %299 = bitcast i16* %293 to <8 x i16>*
  store <8 x i16> %295, <8 x i16>* %299, align 2, !alias.scope !59, !noalias !56
  %300 = getelementptr i16, i16* %293, i64 8
  %301 = bitcast i16* %300 to <8 x i16>*
  store <8 x i16> %298, <8 x i16>* %301, align 2, !alias.scope !59, !noalias !56
  %302 = add i64 %257, 64
  %303 = add i64 %258, -4
  %304 = icmp eq i64 %303, 0
  br i1 %304, label %305, label %256, !llvm.loop !61

305:                                              ; preds = %256, %244
  %306 = phi i64 [ 0, %244 ], [ %302, %256 ]
  %307 = icmp eq i64 %252, 0
  br i1 %307, label %324, label %308

308:                                              ; preds = %305, %308
  %309 = phi i64 [ %321, %308 ], [ %306, %305 ]
  %310 = phi i64 [ %322, %308 ], [ %252, %305 ]
  %311 = getelementptr i16, i16* %210, i64 %309
  %312 = getelementptr i16, i16* %235, i64 %309
  %313 = bitcast i16* %311 to <8 x i16>*
  %314 = load <8 x i16>, <8 x i16>* %313, align 2, !alias.scope !56
  %315 = getelementptr i16, i16* %311, i64 8
  %316 = bitcast i16* %315 to <8 x i16>*
  %317 = load <8 x i16>, <8 x i16>* %316, align 2, !alias.scope !56
  %318 = bitcast i16* %312 to <8 x i16>*
  store <8 x i16> %314, <8 x i16>* %318, align 2, !alias.scope !59, !noalias !56
  %319 = getelementptr i16, i16* %312, i64 8
  %320 = bitcast i16* %319 to <8 x i16>*
  store <8 x i16> %317, <8 x i16>* %320, align 2, !alias.scope !59, !noalias !56
  %321 = add i64 %309, 16
  %322 = add i64 %310, -1
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %324, label %308, !llvm.loop !62

324:                                              ; preds = %308, %305
  %325 = icmp eq i64 %211, %245
  br i1 %325, label %379, label %326

326:                                              ; preds = %324, %237, %231
  %327 = phi i64 [ %211, %237 ], [ %211, %231 ], [ %246, %324 ]
  %328 = phi i16* [ %210, %237 ], [ %210, %231 ], [ %247, %324 ]
  %329 = phi i16* [ %235, %237 ], [ %235, %231 ], [ %248, %324 ]
  %330 = add i64 %327, -1
  %331 = and i64 %327, 7
  %332 = icmp eq i64 %331, 0
  br i1 %332, label %344, label %333

333:                                              ; preds = %326, %333
  %334 = phi i64 [ %339, %333 ], [ %327, %326 ]
  %335 = phi i16* [ %341, %333 ], [ %328, %326 ]
  %336 = phi i16* [ %340, %333 ], [ %329, %326 ]
  %337 = phi i64 [ %342, %333 ], [ %331, %326 ]
  %338 = load i16, i16* %335, align 2
  store i16 %338, i16* %336, align 2
  %339 = add i64 %334, -1
  %340 = getelementptr inbounds i16, i16* %336, i64 1
  %341 = getelementptr inbounds i16, i16* %335, i64 1
  %342 = add i64 %337, -1
  %343 = icmp eq i64 %342, 0
  br i1 %343, label %344, label %333, !llvm.loop !63

344:                                              ; preds = %333, %326
  %345 = phi i64 [ %327, %326 ], [ %339, %333 ]
  %346 = phi i16* [ %328, %326 ], [ %341, %333 ]
  %347 = phi i16* [ %329, %326 ], [ %340, %333 ]
  %348 = icmp ult i64 %330, 7
  br i1 %348, label %379, label %349

349:                                              ; preds = %344, %349
  %350 = phi i64 [ %375, %349 ], [ %345, %344 ]
  %351 = phi i16* [ %377, %349 ], [ %346, %344 ]
  %352 = phi i16* [ %376, %349 ], [ %347, %344 ]
  %353 = load i16, i16* %351, align 2
  store i16 %353, i16* %352, align 2
  %354 = getelementptr inbounds i16, i16* %352, i64 1
  %355 = getelementptr inbounds i16, i16* %351, i64 1
  %356 = load i16, i16* %355, align 2
  store i16 %356, i16* %354, align 2
  %357 = getelementptr inbounds i16, i16* %352, i64 2
  %358 = getelementptr inbounds i16, i16* %351, i64 2
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %352, i64 3
  %361 = getelementptr inbounds i16, i16* %351, i64 3
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = getelementptr inbounds i16, i16* %352, i64 4
  %364 = getelementptr inbounds i16, i16* %351, i64 4
  %365 = load i16, i16* %364, align 2
  store i16 %365, i16* %363, align 2
  %366 = getelementptr inbounds i16, i16* %352, i64 5
  %367 = getelementptr inbounds i16, i16* %351, i64 5
  %368 = load i16, i16* %367, align 2
  store i16 %368, i16* %366, align 2
  %369 = getelementptr inbounds i16, i16* %352, i64 6
  %370 = getelementptr inbounds i16, i16* %351, i64 6
  %371 = load i16, i16* %370, align 2
  store i16 %371, i16* %369, align 2
  %372 = getelementptr inbounds i16, i16* %352, i64 7
  %373 = getelementptr inbounds i16, i16* %351, i64 7
  %374 = load i16, i16* %373, align 2
  store i16 %374, i16* %372, align 2
  %375 = add i64 %350, -8
  %376 = getelementptr inbounds i16, i16* %352, i64 8
  %377 = getelementptr inbounds i16, i16* %351, i64 8
  %378 = icmp eq i64 %375, 0
  br i1 %378, label %379, label %349, !llvm.loop !64

379:                                              ; preds = %344, %349, %324
  %380 = add i64 %226, %211
  %381 = load i8, i8* %213, align 1
  %382 = icmp slt i8 %381, 0
  br i1 %382, label %383, label %384

383:                                              ; preds = %379
  store i64 %380, i64* %202, align 8
  br label %386

384:                                              ; preds = %379
  %385 = trunc i64 %380 to i8
  store i8 %385, i8* %213, align 1
  br label %386

386:                                              ; preds = %384, %383
  %387 = getelementptr inbounds i16, i16* %234, i64 %380
  store i16 0, i16* %387, align 2
  br label %391

388:                                              ; preds = %224
  %389 = add i64 %226, %211
  %390 = sub i64 %389, %225
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* nonnull %18, i64 %225, i64 %390, i64 %226, i64 %226, i64 0, i64 %211, i16* %210) #10
  br label %391

391:                                              ; preds = %229, %386, %388
  call void @_ZN4base4i18n35GetDisplayStringInLTRDirectionalityERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %18) #10
  %392 = load i8, i8* %213, align 1
  %393 = icmp slt i8 %392, 0
  br i1 %393, label %394, label %397

394:                                              ; preds = %391
  %395 = bitcast %"class.std::__1::basic_string"* %18 to i8**
  %396 = load i8*, i8** %395, align 8
  call void @_ZdlPv(i8* %396) #12
  br label %397

397:                                              ; preds = %391, %394
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %200) #10
  br label %398

398:                                              ; preds = %175, %197, %397, %159, %129
  %399 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %132, %175 ], [ %132, %197 ], [ %132, %397 ], [ %132, %159 ], [ %130, %129 ]
  %400 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %399, i64 0, i32 1, i32 1
  %401 = load i8, i8* %400, align 1
  %402 = icmp slt i8 %401, 0
  br i1 %402, label %403, label %406

403:                                              ; preds = %398
  %404 = bitcast %"class.std::__1::basic_string"* %10 to i8**
  %405 = load i8*, i8** %404, align 8
  call void @_ZdlPv(i8* %405) #12
  br label %406

406:                                              ; preds = %398, %403
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #10
  %407 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %408 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %407, i64 0, i32 1, i32 1
  %409 = load i8, i8* %408, align 1
  %410 = icmp slt i8 %409, 0
  br i1 %410, label %411, label %414

411:                                              ; preds = %406
  %412 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  %413 = load i8*, i8** %412, align 8
  call void @_ZdlPv(i8* %413) #12
  br label %414

414:                                              ; preds = %406, %411
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #10
  %415 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %416 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %415, i64 0, i32 1, i32 1
  %417 = load i8, i8* %416, align 1
  %418 = icmp slt i8 %417, 0
  br i1 %418, label %419, label %422

419:                                              ; preds = %414
  %420 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %421 = load i8*, i8** %420, align 8
  call void @_ZdlPv(i8* %421) #12
  br label %422

422:                                              ; preds = %414, %419
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #10
  ret void
}

declare void @_ZN4base11WideToUTF16ENS_16BasicStringPieceIwNSt3__111char_traitsIwEEEE(%"class.std::__1::basic_string"* sret, i32*, i64) local_unnamed_addr #2

declare void @_ZN4base17SysNativeMBToWideENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.11"* sret, i8*, i64) local_unnamed_addr #2

declare void @_ZNK4base8FilePath9ExtensionEv(%"class.std::__1::basic_string.2"* sret, %"class.base::FilePath"*) local_unnamed_addr #2

declare void @_ZNK4base8FilePath8BaseNameEv(%"class.base::FilePath"* sret, %"class.base::FilePath"*) local_unnamed_addr #2

declare void @_ZNK4base8FilePath15RemoveExtensionEv(%"class.base::FilePath"* sret, %"class.base::FilePath"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #3

declare float @_ZN3gfx15GetStringWidthFERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.gfx::FontList"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN4base4i18n35GetDisplayStringInLTRDirectionalityERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx9ElideTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListEfNS_13ElideBehaviorE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), %"class.gfx::FontList"* dereferenceable(8), float, i32) local_unnamed_addr #0 {
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"class.gfx::Rect"*
  %8 = alloca %"class.gfx::RectF", align 4
  %9 = tail call %"class.gfx::RenderText"* @_ZN3gfx10RenderText16CreateRenderTextEv() #10
  tail call void @_ZN3gfx10RenderText16SetCursorEnabledEb(%"class.gfx::RenderText"* %9, i1 zeroext false) #10
  tail call void @_ZN3gfx10RenderText11SetFontListERKNS_8FontListE(%"class.gfx::RenderText"* %9, %"class.gfx::FontList"* dereferenceable(8) %2) #10
  %10 = tail call float @llvm.ceil.f32(float %3) #10
  %11 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #10
  %12 = bitcast %"class.gfx::RectF"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #10
  %13 = fcmp ogt float %10, 0x3EB0000000000000
  %14 = select i1 %13, float %10, float 0.000000e+00
  %15 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %8, i64 0, i32 0, i32 0
  store float 0.000000e+00, float* %15, align 4
  %16 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %8, i64 0, i32 0, i32 1
  store float 0.000000e+00, float* %16, align 4
  %17 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %8, i64 0, i32 1, i32 0
  store float %14, float* %17, align 4
  %18 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %8, i64 0, i32 1, i32 1
  %19 = bitcast float* %18 to i32*
  store i32 1065353216, i32* %19, align 4
  %20 = call { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %8) #10
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %22 = extractvalue { i64, i64 } %20, 0
  store i64 %22, i64* %21, align 8
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %24 = extractvalue { i64, i64 } %20, 1
  store i64 %24, i64* %23, align 8
  call void @_ZN3gfx10RenderText14SetDisplayRectERKNS_4RectE(%"class.gfx::RenderText"* %9, %"class.gfx::Rect"* nonnull dereferenceable(16) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #10
  call void @_ZN3gfx10RenderText16SetElideBehaviorENS_13ElideBehaviorE(%"class.gfx::RenderText"* %9, i32 %4) #10
  call void @_ZN3gfx10RenderText7SetTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.gfx::RenderText"* %9, %"class.std::__1::basic_string"* dereferenceable(24) %1) #10
  %25 = bitcast %"class.gfx::RenderText"* %9 to %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)***
  %26 = load %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)**, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)** %26, i64 2
  %28 = load %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)*, %"class.std::__1::basic_string"* (%"class.gfx::RenderText"*)** %27, align 8
  %29 = call dereferenceable(24) %"class.std::__1::basic_string"* %28(%"class.gfx::RenderText"* %9) #10
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %30, i64 0, i32 1, i32 1
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %5
  %35 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %36 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false) #10
  br label %212

37:                                               ; preds = %5
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i16*, i16** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = icmp ult i64 %41, 11
  br i1 %42, label %43, label %48

43:                                               ; preds = %37
  %44 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %45 = trunc i64 %41 to i8
  %46 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  store i8 %45, i8* %47, align 1
  br label %65

48:                                               ; preds = %37
  %49 = icmp ugt i64 %41, 9223372036854775791
  br i1 %49, label %50, label %52

50:                                               ; preds = %48
  %51 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %51) #11
  unreachable

52:                                               ; preds = %48
  %53 = add nuw nsw i64 %41, 8
  %54 = and i64 %53, -8
  %55 = icmp slt i64 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %52
  call void @abort() #11
  unreachable

57:                                               ; preds = %52
  %58 = shl i64 %54, 1
  %59 = call i8* @_Znwm(i64 %58) #12
  %60 = bitcast i8* %59 to i16*
  %61 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %59, i8** %61, align 8
  %62 = or i64 %54, -9223372036854775808
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %41, i64* %64, align 8
  br label %65

65:                                               ; preds = %57, %43
  %66 = phi i16* [ %44, %43 ], [ %60, %57 ]
  %67 = add nuw nsw i64 %41, 1
  %68 = add i64 %41, 1
  %69 = icmp ult i64 %68, 16
  br i1 %69, label %159, label %70

70:                                               ; preds = %65
  %71 = add i64 %41, 1
  %72 = getelementptr i16, i16* %66, i64 %71
  %73 = getelementptr i16, i16* %39, i64 %71
  %74 = icmp ult i16* %66, %73
  %75 = icmp ult i16* %39, %72
  %76 = and i1 %74, %75
  br i1 %76, label %159, label %77

77:                                               ; preds = %70
  %78 = and i64 %68, -16
  %79 = sub i64 %67, %78
  %80 = getelementptr i16, i16* %39, i64 %78
  %81 = getelementptr i16, i16* %66, i64 %78
  %82 = add i64 %78, -16
  %83 = lshr exact i64 %82, 4
  %84 = add nuw nsw i64 %83, 1
  %85 = and i64 %84, 3
  %86 = icmp ult i64 %82, 48
  br i1 %86, label %138, label %87

87:                                               ; preds = %77
  %88 = sub nsw i64 %84, %85
  br label %89

89:                                               ; preds = %89, %87
  %90 = phi i64 [ 0, %87 ], [ %135, %89 ]
  %91 = phi i64 [ %88, %87 ], [ %136, %89 ]
  %92 = getelementptr i16, i16* %39, i64 %90
  %93 = getelementptr i16, i16* %66, i64 %90
  %94 = bitcast i16* %92 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !65
  %96 = getelementptr i16, i16* %92, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !65
  %99 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %99, align 2, !alias.scope !68, !noalias !65
  %100 = getelementptr i16, i16* %93, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %101, align 2, !alias.scope !68, !noalias !65
  %102 = or i64 %90, 16
  %103 = getelementptr i16, i16* %39, i64 %102
  %104 = getelementptr i16, i16* %66, i64 %102
  %105 = bitcast i16* %103 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !65
  %107 = getelementptr i16, i16* %103, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !65
  %110 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %110, align 2, !alias.scope !68, !noalias !65
  %111 = getelementptr i16, i16* %104, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %112, align 2, !alias.scope !68, !noalias !65
  %113 = or i64 %90, 32
  %114 = getelementptr i16, i16* %39, i64 %113
  %115 = getelementptr i16, i16* %66, i64 %113
  %116 = bitcast i16* %114 to <8 x i16>*
  %117 = load <8 x i16>, <8 x i16>* %116, align 2, !alias.scope !65
  %118 = getelementptr i16, i16* %114, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !65
  %121 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %117, <8 x i16>* %121, align 2, !alias.scope !68, !noalias !65
  %122 = getelementptr i16, i16* %115, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %123, align 2, !alias.scope !68, !noalias !65
  %124 = or i64 %90, 48
  %125 = getelementptr i16, i16* %39, i64 %124
  %126 = getelementptr i16, i16* %66, i64 %124
  %127 = bitcast i16* %125 to <8 x i16>*
  %128 = load <8 x i16>, <8 x i16>* %127, align 2, !alias.scope !65
  %129 = getelementptr i16, i16* %125, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !65
  %132 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %128, <8 x i16>* %132, align 2, !alias.scope !68, !noalias !65
  %133 = getelementptr i16, i16* %126, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %134, align 2, !alias.scope !68, !noalias !65
  %135 = add i64 %90, 64
  %136 = add i64 %91, -4
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %89, !llvm.loop !70

138:                                              ; preds = %89, %77
  %139 = phi i64 [ 0, %77 ], [ %135, %89 ]
  %140 = icmp eq i64 %85, 0
  br i1 %140, label %157, label %141

141:                                              ; preds = %138, %141
  %142 = phi i64 [ %154, %141 ], [ %139, %138 ]
  %143 = phi i64 [ %155, %141 ], [ %85, %138 ]
  %144 = getelementptr i16, i16* %39, i64 %142
  %145 = getelementptr i16, i16* %66, i64 %142
  %146 = bitcast i16* %144 to <8 x i16>*
  %147 = load <8 x i16>, <8 x i16>* %146, align 2, !alias.scope !65
  %148 = getelementptr i16, i16* %144, i64 8
  %149 = bitcast i16* %148 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !65
  %151 = bitcast i16* %145 to <8 x i16>*
  store <8 x i16> %147, <8 x i16>* %151, align 2, !alias.scope !68, !noalias !65
  %152 = getelementptr i16, i16* %145, i64 8
  %153 = bitcast i16* %152 to <8 x i16>*
  store <8 x i16> %150, <8 x i16>* %153, align 2, !alias.scope !68, !noalias !65
  %154 = add i64 %142, 16
  %155 = add i64 %143, -1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %141, !llvm.loop !71

157:                                              ; preds = %141, %138
  %158 = icmp eq i64 %68, %78
  br i1 %158, label %212, label %159

159:                                              ; preds = %157, %70, %65
  %160 = phi i64 [ %67, %70 ], [ %67, %65 ], [ %79, %157 ]
  %161 = phi i16* [ %39, %70 ], [ %39, %65 ], [ %80, %157 ]
  %162 = phi i16* [ %66, %70 ], [ %66, %65 ], [ %81, %157 ]
  %163 = add i64 %160, -1
  %164 = and i64 %160, 7
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %177, label %166

166:                                              ; preds = %159, %166
  %167 = phi i64 [ %172, %166 ], [ %160, %159 ]
  %168 = phi i16* [ %174, %166 ], [ %161, %159 ]
  %169 = phi i16* [ %173, %166 ], [ %162, %159 ]
  %170 = phi i64 [ %175, %166 ], [ %164, %159 ]
  %171 = load i16, i16* %168, align 2
  store i16 %171, i16* %169, align 2
  %172 = add i64 %167, -1
  %173 = getelementptr inbounds i16, i16* %169, i64 1
  %174 = getelementptr inbounds i16, i16* %168, i64 1
  %175 = add i64 %170, -1
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %177, label %166, !llvm.loop !72

177:                                              ; preds = %166, %159
  %178 = phi i64 [ %160, %159 ], [ %172, %166 ]
  %179 = phi i16* [ %161, %159 ], [ %174, %166 ]
  %180 = phi i16* [ %162, %159 ], [ %173, %166 ]
  %181 = icmp ult i64 %163, 7
  br i1 %181, label %212, label %182

182:                                              ; preds = %177, %182
  %183 = phi i64 [ %208, %182 ], [ %178, %177 ]
  %184 = phi i16* [ %210, %182 ], [ %179, %177 ]
  %185 = phi i16* [ %209, %182 ], [ %180, %177 ]
  %186 = load i16, i16* %184, align 2
  store i16 %186, i16* %185, align 2
  %187 = getelementptr inbounds i16, i16* %185, i64 1
  %188 = getelementptr inbounds i16, i16* %184, i64 1
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %185, i64 2
  %191 = getelementptr inbounds i16, i16* %184, i64 2
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %185, i64 3
  %194 = getelementptr inbounds i16, i16* %184, i64 3
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = getelementptr inbounds i16, i16* %185, i64 4
  %197 = getelementptr inbounds i16, i16* %184, i64 4
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = getelementptr inbounds i16, i16* %185, i64 5
  %200 = getelementptr inbounds i16, i16* %184, i64 5
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = getelementptr inbounds i16, i16* %185, i64 6
  %203 = getelementptr inbounds i16, i16* %184, i64 6
  %204 = load i16, i16* %203, align 2
  store i16 %204, i16* %202, align 2
  %205 = getelementptr inbounds i16, i16* %185, i64 7
  %206 = getelementptr inbounds i16, i16* %184, i64 7
  %207 = load i16, i16* %206, align 2
  store i16 %207, i16* %205, align 2
  %208 = add i64 %183, -8
  %209 = getelementptr inbounds i16, i16* %185, i64 8
  %210 = getelementptr inbounds i16, i16* %184, i64 8
  %211 = icmp eq i64 %208, 0
  br i1 %211, label %212, label %182, !llvm.loop !73

212:                                              ; preds = %177, %182, %157, %34
  %213 = icmp eq %"class.gfx::RenderText"* %9, null
  br i1 %213, label %219, label %214

214:                                              ; preds = %212
  %215 = bitcast %"class.gfx::RenderText"* %9 to void (%"class.gfx::RenderText"*)***
  %216 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %215, align 8
  %217 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %216, i64 1
  %218 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %217, align 8
  call void %218(%"class.gfx::RenderText"* nonnull %9) #10
  br label %219

219:                                              ; preds = %212, %214
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #10
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %18 to i64
  %23 = select i1 %19, i64 %21, i64 %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i16*, i16** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %27 = select i1 %11, i16* %25, i16* %26
  %28 = add i64 %23, %15
  %29 = icmp ugt i64 %28, 9223372036854775791
  br i1 %29, label %30, label %32

30:                                               ; preds = %3
  %31 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %31) #11
  unreachable

32:                                               ; preds = %3
  %33 = icmp ult i64 %28, 11
  br i1 %33, label %34, label %39

34:                                               ; preds = %32
  %35 = trunc i64 %15 to i8
  %36 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %36, i64 0, i32 1, i32 1
  store i8 %35, i8* %37, align 1
  %38 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %50

39:                                               ; preds = %32
  %40 = add nuw nsw i64 %28, 8
  %41 = and i64 %40, -8
  %42 = icmp slt i64 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %39
  tail call void @abort() #11
  unreachable

44:                                               ; preds = %39
  %45 = shl i64 %41, 1
  %46 = tail call i8* @_Znwm(i64 %45) #12
  %47 = bitcast i8* %46 to i16*
  %48 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %46, i8** %48, align 8
  %49 = or i64 %41, -9223372036854775808
  store i64 %49, i64* %6, align 8
  store i64 %15, i64* %5, align 8
  br label %50

50:                                               ; preds = %44, %34
  %51 = phi i16* [ %38, %34 ], [ %47, %44 ]
  %52 = icmp eq i64 %15, 0
  br i1 %52, label %198, label %53

53:                                               ; preds = %50
  %54 = icmp ult i64 %15, 16
  br i1 %54, label %143, label %55

55:                                               ; preds = %53
  %56 = getelementptr i16, i16* %51, i64 %15
  %57 = getelementptr i16, i16* %27, i64 %15
  %58 = icmp ult i16* %51, %57
  %59 = icmp ult i16* %27, %56
  %60 = and i1 %58, %59
  br i1 %60, label %143, label %61

61:                                               ; preds = %55
  %62 = and i64 %15, -16
  %63 = sub i64 %15, %62
  %64 = getelementptr i16, i16* %27, i64 %62
  %65 = getelementptr i16, i16* %51, i64 %62
  %66 = add i64 %62, -16
  %67 = lshr exact i64 %66, 4
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp ult i64 %66, 48
  br i1 %70, label %122, label %71

71:                                               ; preds = %61
  %72 = sub nsw i64 %68, %69
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ 0, %71 ], [ %119, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %120, %73 ]
  %76 = getelementptr i16, i16* %27, i64 %74
  %77 = getelementptr i16, i16* %51, i64 %74
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !74
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !74
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !77, !noalias !74
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !77, !noalias !74
  %86 = or i64 %74, 16
  %87 = getelementptr i16, i16* %27, i64 %86
  %88 = getelementptr i16, i16* %51, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !74
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !74
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !77, !noalias !74
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !77, !noalias !74
  %97 = or i64 %74, 32
  %98 = getelementptr i16, i16* %27, i64 %97
  %99 = getelementptr i16, i16* %51, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !74
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !74
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !77, !noalias !74
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !77, !noalias !74
  %108 = or i64 %74, 48
  %109 = getelementptr i16, i16* %27, i64 %108
  %110 = getelementptr i16, i16* %51, i64 %108
  %111 = bitcast i16* %109 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !74
  %113 = getelementptr i16, i16* %109, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !74
  %116 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %116, align 2, !alias.scope !77, !noalias !74
  %117 = getelementptr i16, i16* %110, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %118, align 2, !alias.scope !77, !noalias !74
  %119 = add i64 %74, 64
  %120 = add i64 %75, -4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %73, !llvm.loop !79

122:                                              ; preds = %73, %61
  %123 = phi i64 [ 0, %61 ], [ %119, %73 ]
  %124 = icmp eq i64 %69, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %122, %125
  %126 = phi i64 [ %138, %125 ], [ %123, %122 ]
  %127 = phi i64 [ %139, %125 ], [ %69, %122 ]
  %128 = getelementptr i16, i16* %27, i64 %126
  %129 = getelementptr i16, i16* %51, i64 %126
  %130 = bitcast i16* %128 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !74
  %132 = getelementptr i16, i16* %128, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !74
  %135 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %135, align 2, !alias.scope !77, !noalias !74
  %136 = getelementptr i16, i16* %129, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %137, align 2, !alias.scope !77, !noalias !74
  %138 = add i64 %126, 16
  %139 = add i64 %127, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !80

141:                                              ; preds = %125, %122
  %142 = icmp eq i64 %15, %62
  br i1 %142, label %196, label %143

143:                                              ; preds = %141, %55, %53
  %144 = phi i64 [ %15, %55 ], [ %15, %53 ], [ %63, %141 ]
  %145 = phi i16* [ %27, %55 ], [ %27, %53 ], [ %64, %141 ]
  %146 = phi i16* [ %51, %55 ], [ %51, %53 ], [ %65, %141 ]
  %147 = add i64 %144, -1
  %148 = and i64 %144, 7
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %161, label %150

150:                                              ; preds = %143, %150
  %151 = phi i64 [ %156, %150 ], [ %144, %143 ]
  %152 = phi i16* [ %158, %150 ], [ %145, %143 ]
  %153 = phi i16* [ %157, %150 ], [ %146, %143 ]
  %154 = phi i64 [ %159, %150 ], [ %148, %143 ]
  %155 = load i16, i16* %152, align 2
  store i16 %155, i16* %153, align 2
  %156 = add i64 %151, -1
  %157 = getelementptr inbounds i16, i16* %153, i64 1
  %158 = getelementptr inbounds i16, i16* %152, i64 1
  %159 = add i64 %154, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %150, !llvm.loop !81

161:                                              ; preds = %150, %143
  %162 = phi i64 [ %144, %143 ], [ %156, %150 ]
  %163 = phi i16* [ %145, %143 ], [ %158, %150 ]
  %164 = phi i16* [ %146, %143 ], [ %157, %150 ]
  %165 = icmp ult i64 %147, 7
  br i1 %165, label %196, label %166

166:                                              ; preds = %161, %166
  %167 = phi i64 [ %192, %166 ], [ %162, %161 ]
  %168 = phi i16* [ %194, %166 ], [ %163, %161 ]
  %169 = phi i16* [ %193, %166 ], [ %164, %161 ]
  %170 = load i16, i16* %168, align 2
  store i16 %170, i16* %169, align 2
  %171 = getelementptr inbounds i16, i16* %169, i64 1
  %172 = getelementptr inbounds i16, i16* %168, i64 1
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %169, i64 2
  %175 = getelementptr inbounds i16, i16* %168, i64 2
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %169, i64 3
  %178 = getelementptr inbounds i16, i16* %168, i64 3
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %169, i64 4
  %181 = getelementptr inbounds i16, i16* %168, i64 4
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %169, i64 5
  %184 = getelementptr inbounds i16, i16* %168, i64 5
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %169, i64 6
  %187 = getelementptr inbounds i16, i16* %168, i64 6
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %169, i64 7
  %190 = getelementptr inbounds i16, i16* %168, i64 7
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = add i64 %167, -8
  %193 = getelementptr inbounds i16, i16* %169, i64 8
  %194 = getelementptr inbounds i16, i16* %168, i64 8
  %195 = icmp eq i64 %192, 0
  br i1 %195, label %196, label %166, !llvm.loop !82

196:                                              ; preds = %161, %166, %141
  %197 = load i8, i8* %17, align 1
  br label %198

198:                                              ; preds = %196, %50
  %199 = phi i8 [ %197, %196 ], [ %18, %50 ]
  %200 = getelementptr inbounds i16, i16* %51, i64 %15
  store i16 0, i16* %200, align 2
  %201 = icmp slt i8 %199, 0
  %202 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load i16*, i16** %202, align 8
  %204 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %205 = select i1 %201, i16* %203, i16* %204
  %206 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %207 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %206, i64 0, i32 1, i32 1
  %208 = load i8, i8* %207, align 1
  %209 = icmp slt i8 %208, 0
  br i1 %209, label %210, label %215

210:                                              ; preds = %198
  %211 = load i64, i64* %6, align 8
  %212 = and i64 %211, 9223372036854775807
  %213 = add nsw i64 %212, -1
  %214 = load i64, i64* %5, align 8
  br label %217

215:                                              ; preds = %198
  %216 = zext i8 %208 to i64
  br label %217

217:                                              ; preds = %215, %210
  %218 = phi i64 [ %213, %210 ], [ 10, %215 ]
  %219 = phi i64 [ %214, %210 ], [ %216, %215 ]
  %220 = sub i64 %218, %219
  %221 = icmp ult i64 %220, %23
  br i1 %221, label %381, label %222

222:                                              ; preds = %217
  %223 = icmp eq i64 %23, 0
  br i1 %223, label %384, label %224

224:                                              ; preds = %222
  %225 = load i16*, i16** %4, align 8
  %226 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %227 = select i1 %209, i16* %225, i16* %226
  %228 = getelementptr inbounds i16, i16* %227, i64 %219
  %229 = icmp ult i64 %23, 16
  br i1 %229, label %319, label %230

230:                                              ; preds = %224
  %231 = add i64 %23, %219
  %232 = getelementptr i16, i16* %227, i64 %231
  %233 = getelementptr i16, i16* %205, i64 %23
  %234 = icmp ult i16* %228, %233
  %235 = icmp ult i16* %205, %232
  %236 = and i1 %234, %235
  br i1 %236, label %319, label %237

237:                                              ; preds = %230
  %238 = and i64 %23, -16
  %239 = sub i64 %23, %238
  %240 = getelementptr i16, i16* %205, i64 %238
  %241 = getelementptr i16, i16* %228, i64 %238
  %242 = add i64 %238, -16
  %243 = lshr exact i64 %242, 4
  %244 = add nuw nsw i64 %243, 1
  %245 = and i64 %244, 3
  %246 = icmp ult i64 %242, 48
  br i1 %246, label %298, label %247

247:                                              ; preds = %237
  %248 = sub nsw i64 %244, %245
  br label %249

249:                                              ; preds = %249, %247
  %250 = phi i64 [ 0, %247 ], [ %295, %249 ]
  %251 = phi i64 [ %248, %247 ], [ %296, %249 ]
  %252 = getelementptr i16, i16* %205, i64 %250
  %253 = getelementptr i16, i16* %228, i64 %250
  %254 = bitcast i16* %252 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !83
  %256 = getelementptr i16, i16* %252, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  %258 = load <8 x i16>, <8 x i16>* %257, align 2, !alias.scope !83
  %259 = bitcast i16* %253 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %259, align 2, !alias.scope !86, !noalias !83
  %260 = getelementptr i16, i16* %253, i64 8
  %261 = bitcast i16* %260 to <8 x i16>*
  store <8 x i16> %258, <8 x i16>* %261, align 2, !alias.scope !86, !noalias !83
  %262 = or i64 %250, 16
  %263 = getelementptr i16, i16* %205, i64 %262
  %264 = getelementptr i16, i16* %228, i64 %262
  %265 = bitcast i16* %263 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !83
  %267 = getelementptr i16, i16* %263, i64 8
  %268 = bitcast i16* %267 to <8 x i16>*
  %269 = load <8 x i16>, <8 x i16>* %268, align 2, !alias.scope !83
  %270 = bitcast i16* %264 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %270, align 2, !alias.scope !86, !noalias !83
  %271 = getelementptr i16, i16* %264, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %269, <8 x i16>* %272, align 2, !alias.scope !86, !noalias !83
  %273 = or i64 %250, 32
  %274 = getelementptr i16, i16* %205, i64 %273
  %275 = getelementptr i16, i16* %228, i64 %273
  %276 = bitcast i16* %274 to <8 x i16>*
  %277 = load <8 x i16>, <8 x i16>* %276, align 2, !alias.scope !83
  %278 = getelementptr i16, i16* %274, i64 8
  %279 = bitcast i16* %278 to <8 x i16>*
  %280 = load <8 x i16>, <8 x i16>* %279, align 2, !alias.scope !83
  %281 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %277, <8 x i16>* %281, align 2, !alias.scope !86, !noalias !83
  %282 = getelementptr i16, i16* %275, i64 8
  %283 = bitcast i16* %282 to <8 x i16>*
  store <8 x i16> %280, <8 x i16>* %283, align 2, !alias.scope !86, !noalias !83
  %284 = or i64 %250, 48
  %285 = getelementptr i16, i16* %205, i64 %284
  %286 = getelementptr i16, i16* %228, i64 %284
  %287 = bitcast i16* %285 to <8 x i16>*
  %288 = load <8 x i16>, <8 x i16>* %287, align 2, !alias.scope !83
  %289 = getelementptr i16, i16* %285, i64 8
  %290 = bitcast i16* %289 to <8 x i16>*
  %291 = load <8 x i16>, <8 x i16>* %290, align 2, !alias.scope !83
  %292 = bitcast i16* %286 to <8 x i16>*
  store <8 x i16> %288, <8 x i16>* %292, align 2, !alias.scope !86, !noalias !83
  %293 = getelementptr i16, i16* %286, i64 8
  %294 = bitcast i16* %293 to <8 x i16>*
  store <8 x i16> %291, <8 x i16>* %294, align 2, !alias.scope !86, !noalias !83
  %295 = add i64 %250, 64
  %296 = add i64 %251, -4
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %298, label %249, !llvm.loop !88

298:                                              ; preds = %249, %237
  %299 = phi i64 [ 0, %237 ], [ %295, %249 ]
  %300 = icmp eq i64 %245, 0
  br i1 %300, label %317, label %301

301:                                              ; preds = %298, %301
  %302 = phi i64 [ %314, %301 ], [ %299, %298 ]
  %303 = phi i64 [ %315, %301 ], [ %245, %298 ]
  %304 = getelementptr i16, i16* %205, i64 %302
  %305 = getelementptr i16, i16* %228, i64 %302
  %306 = bitcast i16* %304 to <8 x i16>*
  %307 = load <8 x i16>, <8 x i16>* %306, align 2, !alias.scope !83
  %308 = getelementptr i16, i16* %304, i64 8
  %309 = bitcast i16* %308 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !83
  %311 = bitcast i16* %305 to <8 x i16>*
  store <8 x i16> %307, <8 x i16>* %311, align 2, !alias.scope !86, !noalias !83
  %312 = getelementptr i16, i16* %305, i64 8
  %313 = bitcast i16* %312 to <8 x i16>*
  store <8 x i16> %310, <8 x i16>* %313, align 2, !alias.scope !86, !noalias !83
  %314 = add i64 %302, 16
  %315 = add i64 %303, -1
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %301, !llvm.loop !89

317:                                              ; preds = %301, %298
  %318 = icmp eq i64 %23, %238
  br i1 %318, label %372, label %319

319:                                              ; preds = %317, %230, %224
  %320 = phi i64 [ %23, %230 ], [ %23, %224 ], [ %239, %317 ]
  %321 = phi i16* [ %205, %230 ], [ %205, %224 ], [ %240, %317 ]
  %322 = phi i16* [ %228, %230 ], [ %228, %224 ], [ %241, %317 ]
  %323 = add i64 %320, -1
  %324 = and i64 %320, 7
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %337, label %326

326:                                              ; preds = %319, %326
  %327 = phi i64 [ %332, %326 ], [ %320, %319 ]
  %328 = phi i16* [ %334, %326 ], [ %321, %319 ]
  %329 = phi i16* [ %333, %326 ], [ %322, %319 ]
  %330 = phi i64 [ %335, %326 ], [ %324, %319 ]
  %331 = load i16, i16* %328, align 2
  store i16 %331, i16* %329, align 2
  %332 = add i64 %327, -1
  %333 = getelementptr inbounds i16, i16* %329, i64 1
  %334 = getelementptr inbounds i16, i16* %328, i64 1
  %335 = add i64 %330, -1
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %337, label %326, !llvm.loop !90

337:                                              ; preds = %326, %319
  %338 = phi i64 [ %320, %319 ], [ %332, %326 ]
  %339 = phi i16* [ %321, %319 ], [ %334, %326 ]
  %340 = phi i16* [ %322, %319 ], [ %333, %326 ]
  %341 = icmp ult i64 %323, 7
  br i1 %341, label %372, label %342

342:                                              ; preds = %337, %342
  %343 = phi i64 [ %368, %342 ], [ %338, %337 ]
  %344 = phi i16* [ %370, %342 ], [ %339, %337 ]
  %345 = phi i16* [ %369, %342 ], [ %340, %337 ]
  %346 = load i16, i16* %344, align 2
  store i16 %346, i16* %345, align 2
  %347 = getelementptr inbounds i16, i16* %345, i64 1
  %348 = getelementptr inbounds i16, i16* %344, i64 1
  %349 = load i16, i16* %348, align 2
  store i16 %349, i16* %347, align 2
  %350 = getelementptr inbounds i16, i16* %345, i64 2
  %351 = getelementptr inbounds i16, i16* %344, i64 2
  %352 = load i16, i16* %351, align 2
  store i16 %352, i16* %350, align 2
  %353 = getelementptr inbounds i16, i16* %345, i64 3
  %354 = getelementptr inbounds i16, i16* %344, i64 3
  %355 = load i16, i16* %354, align 2
  store i16 %355, i16* %353, align 2
  %356 = getelementptr inbounds i16, i16* %345, i64 4
  %357 = getelementptr inbounds i16, i16* %344, i64 4
  %358 = load i16, i16* %357, align 2
  store i16 %358, i16* %356, align 2
  %359 = getelementptr inbounds i16, i16* %345, i64 5
  %360 = getelementptr inbounds i16, i16* %344, i64 5
  %361 = load i16, i16* %360, align 2
  store i16 %361, i16* %359, align 2
  %362 = getelementptr inbounds i16, i16* %345, i64 6
  %363 = getelementptr inbounds i16, i16* %344, i64 6
  %364 = load i16, i16* %363, align 2
  store i16 %364, i16* %362, align 2
  %365 = getelementptr inbounds i16, i16* %345, i64 7
  %366 = getelementptr inbounds i16, i16* %344, i64 7
  %367 = load i16, i16* %366, align 2
  store i16 %367, i16* %365, align 2
  %368 = add i64 %343, -8
  %369 = getelementptr inbounds i16, i16* %345, i64 8
  %370 = getelementptr inbounds i16, i16* %344, i64 8
  %371 = icmp eq i64 %368, 0
  br i1 %371, label %372, label %342, !llvm.loop !91

372:                                              ; preds = %337, %342, %317
  %373 = add i64 %219, %23
  %374 = load i8, i8* %207, align 1
  %375 = icmp slt i8 %374, 0
  br i1 %375, label %376, label %377

376:                                              ; preds = %372
  store i64 %373, i64* %5, align 8
  br label %379

377:                                              ; preds = %372
  %378 = trunc i64 %373 to i8
  store i8 %378, i8* %207, align 1
  br label %379

379:                                              ; preds = %377, %376
  %380 = getelementptr inbounds i16, i16* %227, i64 %373
  store i16 0, i16* %380, align 2
  br label %384

381:                                              ; preds = %217
  %382 = add i64 %219, %23
  %383 = sub i64 %382, %218
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %218, i64 %383, i64 %219, i64 %219, i64 0, i64 %23, i16* %205) #10
  br label %384

384:                                              ; preds = %222, %379, %381
  ret void
}

declare %"class.gfx::RenderText"* @_ZN3gfx10RenderText16CreateRenderTextEv() local_unnamed_addr #2

declare void @_ZN3gfx10RenderText16SetCursorEnabledEb(%"class.gfx::RenderText"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN3gfx10RenderText11SetFontListERKNS_8FontListE(%"class.gfx::RenderText"*, %"class.gfx::FontList"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3gfx10RenderText14SetDisplayRectERKNS_4RectE(%"class.gfx::RenderText"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

declare { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN3gfx10RenderText16SetElideBehaviorENS_13ElideBehaviorE(%"class.gfx::RenderText"*, i32) local_unnamed_addr #2

declare void @_ZN3gfx10RenderText7SetTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.gfx::RenderText"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gfx11ElideStringERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmPS6_(%"class.std::__1::basic_string"* dereferenceable(24), i64, %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca [15 x i8], align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca [15 x i8], align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca [15 x i8], align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %18, i64 0, i32 1, i32 1
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %20 to i64
  %25 = select i1 %21, i64 %23, i64 %24
  %26 = icmp ugt i64 %25, %1
  br i1 %26, label %29, label %27

27:                                               ; preds = %3
  %28 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %2, %"class.std::__1::basic_string"* dereferenceable(24) %0) #10
  br label %914

29:                                               ; preds = %3
  switch i64 %1, label %627 [
    i64 0, label %30
    i64 1, label %41
    i64 2, label %53
    i64 3, label %65
    i64 4, label %345
  ]

30:                                               ; preds = %29
  %31 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %31, i64 0, i32 1, i32 1
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %39

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i16*, i16** %36, align 8
  store i16 0, i16* %37, align 2
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %38, align 8
  br label %914

39:                                               ; preds = %30
  %40 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  store i16 0, i16* %40, align 2
  store i8 0, i8* %32, align 1
  br label %914

41:                                               ; preds = %29
  %42 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #10
  %43 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %4, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 0, i64 1, %"class.std::__1::allocator"* dereferenceable(1) %43) #10
  %44 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %44, i64 0, i32 1, i32 1
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %41
  %49 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %50 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %50) #12
  br label %51

51:                                               ; preds = %48, %41
  %52 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* nonnull align 8 %42, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #10
  br label %914

53:                                               ; preds = %29
  %54 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #10
  %55 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 0, i64 2, %"class.std::__1::allocator"* dereferenceable(1) %55) #10
  %56 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %56, i64 0, i32 1, i32 1
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %53
  %61 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %62 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %62) #12
  br label %63

63:                                               ; preds = %60, %53
  %64 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* nonnull align 8 %54, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #10
  br label %914

65:                                               ; preds = %29
  %66 = getelementptr inbounds [15 x i8], [15 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %66)
  %67 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #10
  %68 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #10
  %69 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %8, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 0, i64 1, %"class.std::__1::allocator"* dereferenceable(1) %69) #10
  %70 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %70, i64 0, i32 1, i32 1
  %72 = load i8, i8* %71, align 1, !noalias !92
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %81

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %76 = load i64, i64* %75, align 8, !noalias !92
  %77 = and i64 %76, 9223372036854775807
  %78 = add nsw i64 %77, -1
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = load i64, i64* %79, align 8, !noalias !92
  br label %83

81:                                               ; preds = %65
  %82 = zext i8 %72 to i64
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i64 [ %78, %74 ], [ 10, %81 ]
  %85 = phi i64 [ %80, %74 ], [ %82, %81 ]
  %86 = icmp eq i64 %84, %85
  br i1 %86, label %102, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i16*, i16** %88, align 8, !noalias !92
  %90 = bitcast %"class.std::__1::basic_string"* %8 to i16*
  %91 = select i1 %73, i16* %89, i16* %90
  %92 = getelementptr inbounds i16, i16* %91, i64 %85
  store i16 46, i16* %92, align 2, !noalias !92
  %93 = add i64 %85, 1
  %94 = load i8, i8* %71, align 1, !noalias !92
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %98

96:                                               ; preds = %87
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %93, i64* %97, align 8, !noalias !92
  br label %100

98:                                               ; preds = %87
  %99 = trunc i64 %93 to i8
  store i8 %99, i8* %71, align 1, !noalias !92
  br label %100

100:                                              ; preds = %98, %96
  %101 = getelementptr inbounds i16, i16* %91, i64 %93
  store i16 0, i16* %101, align 2, !noalias !92
  br label %105

102:                                              ; preds = %83
  %103 = add i64 %85, 1
  %104 = sub i64 %103, %84
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* nonnull %8, i64 %84, i64 %104, i64 %85, i64 %85, i64 0, i64 1, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str, i64 0, i64 0)) #10, !noalias !92
  br label %105

105:                                              ; preds = %100, %102
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %67, i8* nonnull align 8 %68, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 0, i64 24, i1 false) #10, !noalias !92
  %106 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #10
  %107 = load i8, i8* %19, align 1
  %108 = icmp slt i8 %107, 0
  %109 = load i64, i64* %22, align 8
  %110 = zext i8 %107 to i64
  %111 = select i1 %108, i64 %109, i64 %110
  %112 = add i64 %111, -1
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %9, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 %112, i64 -1, %"class.std::__1::allocator"* dereferenceable(1) %69) #10
  %113 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %113, i64 0, i32 1, i32 1
  %115 = load i8, i8* %114, align 1, !noalias !95
  %116 = icmp slt i8 %115, 0
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load i16*, i16** %117, align 8, !noalias !95
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %120 = load i64, i64* %119, align 8, !noalias !95
  %121 = bitcast %"class.std::__1::basic_string"* %9 to i16*
  %122 = zext i8 %115 to i64
  %123 = select i1 %116, i16* %118, i16* %121
  %124 = select i1 %116, i64 %120, i64 %122
  %125 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %125, i64 0, i32 1, i32 1
  %127 = load i8, i8* %126, align 1, !noalias !95
  %128 = icmp slt i8 %127, 0
  br i1 %128, label %129, label %136

129:                                              ; preds = %105
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %131 = load i64, i64* %130, align 8, !noalias !95
  %132 = and i64 %131, 9223372036854775807
  %133 = add nsw i64 %132, -1
  %134 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %135 = load i64, i64* %134, align 8, !noalias !95
  br label %138

136:                                              ; preds = %105
  %137 = zext i8 %127 to i64
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i64 [ %133, %129 ], [ 10, %136 ]
  %140 = phi i64 [ %135, %129 ], [ %137, %136 ]
  %141 = sub i64 %139, %140
  %142 = icmp ult i64 %141, %124
  br i1 %142, label %304, label %143

143:                                              ; preds = %138
  %144 = icmp eq i64 %124, 0
  br i1 %144, label %307, label %145

145:                                              ; preds = %143
  %146 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load i16*, i16** %146, align 8, !noalias !95
  %148 = bitcast %"class.std::__1::basic_string"* %7 to i16*
  %149 = select i1 %128, i16* %147, i16* %148
  %150 = getelementptr inbounds i16, i16* %149, i64 %140
  %151 = icmp ult i64 %124, 16
  br i1 %151, label %241, label %152

152:                                              ; preds = %145
  %153 = add i64 %124, %140
  %154 = getelementptr i16, i16* %149, i64 %153
  %155 = getelementptr i16, i16* %123, i64 %124
  %156 = icmp ult i16* %150, %155
  %157 = icmp ult i16* %123, %154
  %158 = and i1 %156, %157
  br i1 %158, label %241, label %159

159:                                              ; preds = %152
  %160 = and i64 %124, -16
  %161 = sub i64 %124, %160
  %162 = getelementptr i16, i16* %123, i64 %160
  %163 = getelementptr i16, i16* %150, i64 %160
  %164 = add i64 %160, -16
  %165 = lshr exact i64 %164, 4
  %166 = add nuw nsw i64 %165, 1
  %167 = and i64 %166, 3
  %168 = icmp ult i64 %164, 48
  br i1 %168, label %220, label %169

169:                                              ; preds = %159
  %170 = sub nsw i64 %166, %167
  br label %171

171:                                              ; preds = %171, %169
  %172 = phi i64 [ 0, %169 ], [ %217, %171 ]
  %173 = phi i64 [ %170, %169 ], [ %218, %171 ]
  %174 = getelementptr i16, i16* %123, i64 %172
  %175 = getelementptr i16, i16* %150, i64 %172
  %176 = bitcast i16* %174 to <8 x i16>*
  %177 = load <8 x i16>, <8 x i16>* %176, align 2, !alias.scope !98, !noalias !95
  %178 = getelementptr i16, i16* %174, i64 8
  %179 = bitcast i16* %178 to <8 x i16>*
  %180 = load <8 x i16>, <8 x i16>* %179, align 2, !alias.scope !98, !noalias !95
  %181 = bitcast i16* %175 to <8 x i16>*
  store <8 x i16> %177, <8 x i16>* %181, align 2, !alias.scope !101, !noalias !103
  %182 = getelementptr i16, i16* %175, i64 8
  %183 = bitcast i16* %182 to <8 x i16>*
  store <8 x i16> %180, <8 x i16>* %183, align 2, !alias.scope !101, !noalias !103
  %184 = or i64 %172, 16
  %185 = getelementptr i16, i16* %123, i64 %184
  %186 = getelementptr i16, i16* %150, i64 %184
  %187 = bitcast i16* %185 to <8 x i16>*
  %188 = load <8 x i16>, <8 x i16>* %187, align 2, !alias.scope !98, !noalias !95
  %189 = getelementptr i16, i16* %185, i64 8
  %190 = bitcast i16* %189 to <8 x i16>*
  %191 = load <8 x i16>, <8 x i16>* %190, align 2, !alias.scope !98, !noalias !95
  %192 = bitcast i16* %186 to <8 x i16>*
  store <8 x i16> %188, <8 x i16>* %192, align 2, !alias.scope !101, !noalias !103
  %193 = getelementptr i16, i16* %186, i64 8
  %194 = bitcast i16* %193 to <8 x i16>*
  store <8 x i16> %191, <8 x i16>* %194, align 2, !alias.scope !101, !noalias !103
  %195 = or i64 %172, 32
  %196 = getelementptr i16, i16* %123, i64 %195
  %197 = getelementptr i16, i16* %150, i64 %195
  %198 = bitcast i16* %196 to <8 x i16>*
  %199 = load <8 x i16>, <8 x i16>* %198, align 2, !alias.scope !98, !noalias !95
  %200 = getelementptr i16, i16* %196, i64 8
  %201 = bitcast i16* %200 to <8 x i16>*
  %202 = load <8 x i16>, <8 x i16>* %201, align 2, !alias.scope !98, !noalias !95
  %203 = bitcast i16* %197 to <8 x i16>*
  store <8 x i16> %199, <8 x i16>* %203, align 2, !alias.scope !101, !noalias !103
  %204 = getelementptr i16, i16* %197, i64 8
  %205 = bitcast i16* %204 to <8 x i16>*
  store <8 x i16> %202, <8 x i16>* %205, align 2, !alias.scope !101, !noalias !103
  %206 = or i64 %172, 48
  %207 = getelementptr i16, i16* %123, i64 %206
  %208 = getelementptr i16, i16* %150, i64 %206
  %209 = bitcast i16* %207 to <8 x i16>*
  %210 = load <8 x i16>, <8 x i16>* %209, align 2, !alias.scope !98, !noalias !95
  %211 = getelementptr i16, i16* %207, i64 8
  %212 = bitcast i16* %211 to <8 x i16>*
  %213 = load <8 x i16>, <8 x i16>* %212, align 2, !alias.scope !98, !noalias !95
  %214 = bitcast i16* %208 to <8 x i16>*
  store <8 x i16> %210, <8 x i16>* %214, align 2, !alias.scope !101, !noalias !103
  %215 = getelementptr i16, i16* %208, i64 8
  %216 = bitcast i16* %215 to <8 x i16>*
  store <8 x i16> %213, <8 x i16>* %216, align 2, !alias.scope !101, !noalias !103
  %217 = add i64 %172, 64
  %218 = add i64 %173, -4
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %220, label %171, !llvm.loop !104

220:                                              ; preds = %171, %159
  %221 = phi i64 [ 0, %159 ], [ %217, %171 ]
  %222 = icmp eq i64 %167, 0
  br i1 %222, label %239, label %223

223:                                              ; preds = %220, %223
  %224 = phi i64 [ %236, %223 ], [ %221, %220 ]
  %225 = phi i64 [ %237, %223 ], [ %167, %220 ]
  %226 = getelementptr i16, i16* %123, i64 %224
  %227 = getelementptr i16, i16* %150, i64 %224
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !98, !noalias !95
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !98, !noalias !95
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !101, !noalias !103
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !101, !noalias !103
  %236 = add i64 %224, 16
  %237 = add i64 %225, -1
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %239, label %223, !llvm.loop !105

239:                                              ; preds = %223, %220
  %240 = icmp eq i64 %124, %160
  br i1 %240, label %294, label %241

241:                                              ; preds = %239, %152, %145
  %242 = phi i64 [ %124, %152 ], [ %124, %145 ], [ %161, %239 ]
  %243 = phi i16* [ %123, %152 ], [ %123, %145 ], [ %162, %239 ]
  %244 = phi i16* [ %150, %152 ], [ %150, %145 ], [ %163, %239 ]
  %245 = add i64 %242, -1
  %246 = and i64 %242, 7
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %259, label %248

248:                                              ; preds = %241, %248
  %249 = phi i64 [ %254, %248 ], [ %242, %241 ]
  %250 = phi i16* [ %256, %248 ], [ %243, %241 ]
  %251 = phi i16* [ %255, %248 ], [ %244, %241 ]
  %252 = phi i64 [ %257, %248 ], [ %246, %241 ]
  %253 = load i16, i16* %250, align 2, !noalias !95
  store i16 %253, i16* %251, align 2, !noalias !95
  %254 = add i64 %249, -1
  %255 = getelementptr inbounds i16, i16* %251, i64 1
  %256 = getelementptr inbounds i16, i16* %250, i64 1
  %257 = add i64 %252, -1
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %248, !llvm.loop !106

259:                                              ; preds = %248, %241
  %260 = phi i64 [ %242, %241 ], [ %254, %248 ]
  %261 = phi i16* [ %243, %241 ], [ %256, %248 ]
  %262 = phi i16* [ %244, %241 ], [ %255, %248 ]
  %263 = icmp ult i64 %245, 7
  br i1 %263, label %294, label %264

264:                                              ; preds = %259, %264
  %265 = phi i64 [ %290, %264 ], [ %260, %259 ]
  %266 = phi i16* [ %292, %264 ], [ %261, %259 ]
  %267 = phi i16* [ %291, %264 ], [ %262, %259 ]
  %268 = load i16, i16* %266, align 2, !noalias !95
  store i16 %268, i16* %267, align 2, !noalias !95
  %269 = getelementptr inbounds i16, i16* %267, i64 1
  %270 = getelementptr inbounds i16, i16* %266, i64 1
  %271 = load i16, i16* %270, align 2, !noalias !95
  store i16 %271, i16* %269, align 2, !noalias !95
  %272 = getelementptr inbounds i16, i16* %267, i64 2
  %273 = getelementptr inbounds i16, i16* %266, i64 2
  %274 = load i16, i16* %273, align 2, !noalias !95
  store i16 %274, i16* %272, align 2, !noalias !95
  %275 = getelementptr inbounds i16, i16* %267, i64 3
  %276 = getelementptr inbounds i16, i16* %266, i64 3
  %277 = load i16, i16* %276, align 2, !noalias !95
  store i16 %277, i16* %275, align 2, !noalias !95
  %278 = getelementptr inbounds i16, i16* %267, i64 4
  %279 = getelementptr inbounds i16, i16* %266, i64 4
  %280 = load i16, i16* %279, align 2, !noalias !95
  store i16 %280, i16* %278, align 2, !noalias !95
  %281 = getelementptr inbounds i16, i16* %267, i64 5
  %282 = getelementptr inbounds i16, i16* %266, i64 5
  %283 = load i16, i16* %282, align 2, !noalias !95
  store i16 %283, i16* %281, align 2, !noalias !95
  %284 = getelementptr inbounds i16, i16* %267, i64 6
  %285 = getelementptr inbounds i16, i16* %266, i64 6
  %286 = load i16, i16* %285, align 2, !noalias !95
  store i16 %286, i16* %284, align 2, !noalias !95
  %287 = getelementptr inbounds i16, i16* %267, i64 7
  %288 = getelementptr inbounds i16, i16* %266, i64 7
  %289 = load i16, i16* %288, align 2, !noalias !95
  store i16 %289, i16* %287, align 2, !noalias !95
  %290 = add i64 %265, -8
  %291 = getelementptr inbounds i16, i16* %267, i64 8
  %292 = getelementptr inbounds i16, i16* %266, i64 8
  %293 = icmp eq i64 %290, 0
  br i1 %293, label %294, label %264, !llvm.loop !107

294:                                              ; preds = %259, %264, %239
  %295 = add i64 %140, %124
  %296 = load i8, i8* %126, align 1, !noalias !95
  %297 = icmp slt i8 %296, 0
  br i1 %297, label %298, label %300

298:                                              ; preds = %294
  %299 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %295, i64* %299, align 8, !noalias !95
  br label %302

300:                                              ; preds = %294
  %301 = trunc i64 %295 to i8
  store i8 %301, i8* %126, align 1, !noalias !95
  br label %302

302:                                              ; preds = %300, %298
  %303 = getelementptr inbounds i16, i16* %149, i64 %295
  store i16 0, i16* %303, align 2, !noalias !95
  br label %307

304:                                              ; preds = %138
  %305 = add i64 %140, %124
  %306 = sub i64 %305, %139
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* nonnull %7, i64 %139, i64 %306, i64 %140, i64 %140, i64 0, i64 %124, i16* %123) #10, !noalias !95
  br label %307

307:                                              ; preds = %143, %302, %304
  %308 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  %309 = bitcast %"class.std::__1::basic_string"* %7 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %312 = bitcast i64* %311 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %66, i8* align 8 %312, i64 15, i1 false)
  %313 = getelementptr inbounds i8, i8* %67, i64 23
  %314 = load i8, i8* %313, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 0, i64 24, i1 false) #10, !noalias !95
  %315 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %316 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %315, i64 0, i32 1, i32 1
  %317 = load i8, i8* %316, align 1
  %318 = icmp slt i8 %317, 0
  br i1 %318, label %319, label %322

319:                                              ; preds = %307
  %320 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %321 = load i8*, i8** %320, align 8
  call void @_ZdlPv(i8* %321) #12
  br label %322

322:                                              ; preds = %319, %307
  %323 = bitcast %"class.std::__1::basic_string"* %2 to i64*
  store i64 %310, i64* %323, align 8
  %324 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %325 = bitcast i64* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %325, i8* nonnull align 8 %66, i64 15, i1 false)
  %326 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %327 = getelementptr inbounds i8, i8* %326, i64 23
  store i8 %314, i8* %327, align 1
  %328 = load i8, i8* %114, align 1
  %329 = icmp slt i8 %328, 0
  br i1 %329, label %330, label %333

330:                                              ; preds = %322
  %331 = bitcast %"class.std::__1::basic_string"* %9 to i8**
  %332 = load i8*, i8** %331, align 8
  call void @_ZdlPv(i8* %332) #12
  br label %333

333:                                              ; preds = %322, %330
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #10
  %334 = load i8, i8* %126, align 1
  %335 = icmp slt i8 %334, 0
  br i1 %335, label %336, label %338

336:                                              ; preds = %333
  %337 = load i8*, i8** %308, align 8
  call void @_ZdlPv(i8* %337) #12
  br label %338

338:                                              ; preds = %333, %336
  %339 = load i8, i8* %71, align 1
  %340 = icmp slt i8 %339, 0
  br i1 %340, label %341, label %344

341:                                              ; preds = %338
  %342 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  %343 = load i8*, i8** %342, align 8
  call void @_ZdlPv(i8* %343) #12
  br label %344

344:                                              ; preds = %338, %341
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #10
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %66)
  br label %914

345:                                              ; preds = %29
  %346 = getelementptr inbounds [15 x i8], [15 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %346)
  %347 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %347) #10
  %348 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %348) #10
  %349 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %12, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 0, i64 1, %"class.std::__1::allocator"* dereferenceable(1) %349) #10
  %350 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %351 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %350, i64 0, i32 1, i32 1
  %352 = load i8, i8* %351, align 1, !noalias !108
  %353 = icmp slt i8 %352, 0
  br i1 %353, label %354, label %361

354:                                              ; preds = %345
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %356 = load i64, i64* %355, align 8, !noalias !108
  %357 = and i64 %356, 9223372036854775807
  %358 = add nsw i64 %357, -1
  %359 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %360 = load i64, i64* %359, align 8, !noalias !108
  br label %363

361:                                              ; preds = %345
  %362 = zext i8 %352 to i64
  br label %363

363:                                              ; preds = %361, %354
  %364 = phi i64 [ %358, %354 ], [ 10, %361 ]
  %365 = phi i64 [ %360, %354 ], [ %362, %361 ]
  %366 = sub i64 %364, %365
  %367 = icmp ult i64 %366, 2
  br i1 %367, label %384, label %368

368:                                              ; preds = %363
  %369 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %370 = load i16*, i16** %369, align 8, !noalias !108
  %371 = bitcast %"class.std::__1::basic_string"* %12 to i16*
  %372 = select i1 %353, i16* %370, i16* %371
  %373 = getelementptr inbounds i16, i16* %372, i64 %365
  store i16 46, i16* %373, align 2, !noalias !108
  %374 = getelementptr inbounds i16, i16* %373, i64 1
  store i16 46, i16* %374, align 2, !noalias !108
  %375 = add i64 %365, 2
  %376 = load i8, i8* %351, align 1, !noalias !108
  %377 = icmp slt i8 %376, 0
  br i1 %377, label %378, label %380

378:                                              ; preds = %368
  %379 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %375, i64* %379, align 8, !noalias !108
  br label %382

380:                                              ; preds = %368
  %381 = trunc i64 %375 to i8
  store i8 %381, i8* %351, align 1, !noalias !108
  br label %382

382:                                              ; preds = %380, %378
  %383 = getelementptr inbounds i16, i16* %372, i64 %375
  store i16 0, i16* %383, align 2, !noalias !108
  br label %387

384:                                              ; preds = %363
  %385 = add i64 %365, 2
  %386 = sub i64 %385, %364
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* nonnull %12, i64 %364, i64 %386, i64 %365, i64 %365, i64 0, i64 2, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @.str.1, i64 0, i64 0)) #10, !noalias !108
  br label %387

387:                                              ; preds = %382, %384
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %347, i8* nonnull align 8 %348, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %348, i8 0, i64 24, i1 false) #10, !noalias !108
  %388 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %388) #10
  %389 = load i8, i8* %19, align 1
  %390 = icmp slt i8 %389, 0
  %391 = load i64, i64* %22, align 8
  %392 = zext i8 %389 to i64
  %393 = select i1 %390, i64 %391, i64 %392
  %394 = add i64 %393, -1
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %13, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 %394, i64 -1, %"class.std::__1::allocator"* dereferenceable(1) %349) #10
  %395 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %396 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %395, i64 0, i32 1, i32 1
  %397 = load i8, i8* %396, align 1, !noalias !111
  %398 = icmp slt i8 %397, 0
  %399 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %400 = load i16*, i16** %399, align 8, !noalias !111
  %401 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %402 = load i64, i64* %401, align 8, !noalias !111
  %403 = bitcast %"class.std::__1::basic_string"* %13 to i16*
  %404 = zext i8 %397 to i64
  %405 = select i1 %398, i16* %400, i16* %403
  %406 = select i1 %398, i64 %402, i64 %404
  %407 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %408 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %407, i64 0, i32 1, i32 1
  %409 = load i8, i8* %408, align 1, !noalias !111
  %410 = icmp slt i8 %409, 0
  br i1 %410, label %411, label %418

411:                                              ; preds = %387
  %412 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %413 = load i64, i64* %412, align 8, !noalias !111
  %414 = and i64 %413, 9223372036854775807
  %415 = add nsw i64 %414, -1
  %416 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %417 = load i64, i64* %416, align 8, !noalias !111
  br label %420

418:                                              ; preds = %387
  %419 = zext i8 %409 to i64
  br label %420

420:                                              ; preds = %418, %411
  %421 = phi i64 [ %415, %411 ], [ 10, %418 ]
  %422 = phi i64 [ %417, %411 ], [ %419, %418 ]
  %423 = sub i64 %421, %422
  %424 = icmp ult i64 %423, %406
  br i1 %424, label %586, label %425

425:                                              ; preds = %420
  %426 = icmp eq i64 %406, 0
  br i1 %426, label %589, label %427

427:                                              ; preds = %425
  %428 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %429 = load i16*, i16** %428, align 8, !noalias !111
  %430 = bitcast %"class.std::__1::basic_string"* %11 to i16*
  %431 = select i1 %410, i16* %429, i16* %430
  %432 = getelementptr inbounds i16, i16* %431, i64 %422
  %433 = icmp ult i64 %406, 16
  br i1 %433, label %523, label %434

434:                                              ; preds = %427
  %435 = add i64 %406, %422
  %436 = getelementptr i16, i16* %431, i64 %435
  %437 = getelementptr i16, i16* %405, i64 %406
  %438 = icmp ult i16* %432, %437
  %439 = icmp ult i16* %405, %436
  %440 = and i1 %438, %439
  br i1 %440, label %523, label %441

441:                                              ; preds = %434
  %442 = and i64 %406, -16
  %443 = sub i64 %406, %442
  %444 = getelementptr i16, i16* %405, i64 %442
  %445 = getelementptr i16, i16* %432, i64 %442
  %446 = add i64 %442, -16
  %447 = lshr exact i64 %446, 4
  %448 = add nuw nsw i64 %447, 1
  %449 = and i64 %448, 3
  %450 = icmp ult i64 %446, 48
  br i1 %450, label %502, label %451

451:                                              ; preds = %441
  %452 = sub nsw i64 %448, %449
  br label %453

453:                                              ; preds = %453, %451
  %454 = phi i64 [ 0, %451 ], [ %499, %453 ]
  %455 = phi i64 [ %452, %451 ], [ %500, %453 ]
  %456 = getelementptr i16, i16* %405, i64 %454
  %457 = getelementptr i16, i16* %432, i64 %454
  %458 = bitcast i16* %456 to <8 x i16>*
  %459 = load <8 x i16>, <8 x i16>* %458, align 2, !alias.scope !114, !noalias !111
  %460 = getelementptr i16, i16* %456, i64 8
  %461 = bitcast i16* %460 to <8 x i16>*
  %462 = load <8 x i16>, <8 x i16>* %461, align 2, !alias.scope !114, !noalias !111
  %463 = bitcast i16* %457 to <8 x i16>*
  store <8 x i16> %459, <8 x i16>* %463, align 2, !alias.scope !117, !noalias !119
  %464 = getelementptr i16, i16* %457, i64 8
  %465 = bitcast i16* %464 to <8 x i16>*
  store <8 x i16> %462, <8 x i16>* %465, align 2, !alias.scope !117, !noalias !119
  %466 = or i64 %454, 16
  %467 = getelementptr i16, i16* %405, i64 %466
  %468 = getelementptr i16, i16* %432, i64 %466
  %469 = bitcast i16* %467 to <8 x i16>*
  %470 = load <8 x i16>, <8 x i16>* %469, align 2, !alias.scope !114, !noalias !111
  %471 = getelementptr i16, i16* %467, i64 8
  %472 = bitcast i16* %471 to <8 x i16>*
  %473 = load <8 x i16>, <8 x i16>* %472, align 2, !alias.scope !114, !noalias !111
  %474 = bitcast i16* %468 to <8 x i16>*
  store <8 x i16> %470, <8 x i16>* %474, align 2, !alias.scope !117, !noalias !119
  %475 = getelementptr i16, i16* %468, i64 8
  %476 = bitcast i16* %475 to <8 x i16>*
  store <8 x i16> %473, <8 x i16>* %476, align 2, !alias.scope !117, !noalias !119
  %477 = or i64 %454, 32
  %478 = getelementptr i16, i16* %405, i64 %477
  %479 = getelementptr i16, i16* %432, i64 %477
  %480 = bitcast i16* %478 to <8 x i16>*
  %481 = load <8 x i16>, <8 x i16>* %480, align 2, !alias.scope !114, !noalias !111
  %482 = getelementptr i16, i16* %478, i64 8
  %483 = bitcast i16* %482 to <8 x i16>*
  %484 = load <8 x i16>, <8 x i16>* %483, align 2, !alias.scope !114, !noalias !111
  %485 = bitcast i16* %479 to <8 x i16>*
  store <8 x i16> %481, <8 x i16>* %485, align 2, !alias.scope !117, !noalias !119
  %486 = getelementptr i16, i16* %479, i64 8
  %487 = bitcast i16* %486 to <8 x i16>*
  store <8 x i16> %484, <8 x i16>* %487, align 2, !alias.scope !117, !noalias !119
  %488 = or i64 %454, 48
  %489 = getelementptr i16, i16* %405, i64 %488
  %490 = getelementptr i16, i16* %432, i64 %488
  %491 = bitcast i16* %489 to <8 x i16>*
  %492 = load <8 x i16>, <8 x i16>* %491, align 2, !alias.scope !114, !noalias !111
  %493 = getelementptr i16, i16* %489, i64 8
  %494 = bitcast i16* %493 to <8 x i16>*
  %495 = load <8 x i16>, <8 x i16>* %494, align 2, !alias.scope !114, !noalias !111
  %496 = bitcast i16* %490 to <8 x i16>*
  store <8 x i16> %492, <8 x i16>* %496, align 2, !alias.scope !117, !noalias !119
  %497 = getelementptr i16, i16* %490, i64 8
  %498 = bitcast i16* %497 to <8 x i16>*
  store <8 x i16> %495, <8 x i16>* %498, align 2, !alias.scope !117, !noalias !119
  %499 = add i64 %454, 64
  %500 = add i64 %455, -4
  %501 = icmp eq i64 %500, 0
  br i1 %501, label %502, label %453, !llvm.loop !120

502:                                              ; preds = %453, %441
  %503 = phi i64 [ 0, %441 ], [ %499, %453 ]
  %504 = icmp eq i64 %449, 0
  br i1 %504, label %521, label %505

505:                                              ; preds = %502, %505
  %506 = phi i64 [ %518, %505 ], [ %503, %502 ]
  %507 = phi i64 [ %519, %505 ], [ %449, %502 ]
  %508 = getelementptr i16, i16* %405, i64 %506
  %509 = getelementptr i16, i16* %432, i64 %506
  %510 = bitcast i16* %508 to <8 x i16>*
  %511 = load <8 x i16>, <8 x i16>* %510, align 2, !alias.scope !114, !noalias !111
  %512 = getelementptr i16, i16* %508, i64 8
  %513 = bitcast i16* %512 to <8 x i16>*
  %514 = load <8 x i16>, <8 x i16>* %513, align 2, !alias.scope !114, !noalias !111
  %515 = bitcast i16* %509 to <8 x i16>*
  store <8 x i16> %511, <8 x i16>* %515, align 2, !alias.scope !117, !noalias !119
  %516 = getelementptr i16, i16* %509, i64 8
  %517 = bitcast i16* %516 to <8 x i16>*
  store <8 x i16> %514, <8 x i16>* %517, align 2, !alias.scope !117, !noalias !119
  %518 = add i64 %506, 16
  %519 = add i64 %507, -1
  %520 = icmp eq i64 %519, 0
  br i1 %520, label %521, label %505, !llvm.loop !121

521:                                              ; preds = %505, %502
  %522 = icmp eq i64 %406, %442
  br i1 %522, label %576, label %523

523:                                              ; preds = %521, %434, %427
  %524 = phi i64 [ %406, %434 ], [ %406, %427 ], [ %443, %521 ]
  %525 = phi i16* [ %405, %434 ], [ %405, %427 ], [ %444, %521 ]
  %526 = phi i16* [ %432, %434 ], [ %432, %427 ], [ %445, %521 ]
  %527 = add i64 %524, -1
  %528 = and i64 %524, 7
  %529 = icmp eq i64 %528, 0
  br i1 %529, label %541, label %530

530:                                              ; preds = %523, %530
  %531 = phi i64 [ %536, %530 ], [ %524, %523 ]
  %532 = phi i16* [ %538, %530 ], [ %525, %523 ]
  %533 = phi i16* [ %537, %530 ], [ %526, %523 ]
  %534 = phi i64 [ %539, %530 ], [ %528, %523 ]
  %535 = load i16, i16* %532, align 2, !noalias !111
  store i16 %535, i16* %533, align 2, !noalias !111
  %536 = add i64 %531, -1
  %537 = getelementptr inbounds i16, i16* %533, i64 1
  %538 = getelementptr inbounds i16, i16* %532, i64 1
  %539 = add i64 %534, -1
  %540 = icmp eq i64 %539, 0
  br i1 %540, label %541, label %530, !llvm.loop !122

541:                                              ; preds = %530, %523
  %542 = phi i64 [ %524, %523 ], [ %536, %530 ]
  %543 = phi i16* [ %525, %523 ], [ %538, %530 ]
  %544 = phi i16* [ %526, %523 ], [ %537, %530 ]
  %545 = icmp ult i64 %527, 7
  br i1 %545, label %576, label %546

546:                                              ; preds = %541, %546
  %547 = phi i64 [ %572, %546 ], [ %542, %541 ]
  %548 = phi i16* [ %574, %546 ], [ %543, %541 ]
  %549 = phi i16* [ %573, %546 ], [ %544, %541 ]
  %550 = load i16, i16* %548, align 2, !noalias !111
  store i16 %550, i16* %549, align 2, !noalias !111
  %551 = getelementptr inbounds i16, i16* %549, i64 1
  %552 = getelementptr inbounds i16, i16* %548, i64 1
  %553 = load i16, i16* %552, align 2, !noalias !111
  store i16 %553, i16* %551, align 2, !noalias !111
  %554 = getelementptr inbounds i16, i16* %549, i64 2
  %555 = getelementptr inbounds i16, i16* %548, i64 2
  %556 = load i16, i16* %555, align 2, !noalias !111
  store i16 %556, i16* %554, align 2, !noalias !111
  %557 = getelementptr inbounds i16, i16* %549, i64 3
  %558 = getelementptr inbounds i16, i16* %548, i64 3
  %559 = load i16, i16* %558, align 2, !noalias !111
  store i16 %559, i16* %557, align 2, !noalias !111
  %560 = getelementptr inbounds i16, i16* %549, i64 4
  %561 = getelementptr inbounds i16, i16* %548, i64 4
  %562 = load i16, i16* %561, align 2, !noalias !111
  store i16 %562, i16* %560, align 2, !noalias !111
  %563 = getelementptr inbounds i16, i16* %549, i64 5
  %564 = getelementptr inbounds i16, i16* %548, i64 5
  %565 = load i16, i16* %564, align 2, !noalias !111
  store i16 %565, i16* %563, align 2, !noalias !111
  %566 = getelementptr inbounds i16, i16* %549, i64 6
  %567 = getelementptr inbounds i16, i16* %548, i64 6
  %568 = load i16, i16* %567, align 2, !noalias !111
  store i16 %568, i16* %566, align 2, !noalias !111
  %569 = getelementptr inbounds i16, i16* %549, i64 7
  %570 = getelementptr inbounds i16, i16* %548, i64 7
  %571 = load i16, i16* %570, align 2, !noalias !111
  store i16 %571, i16* %569, align 2, !noalias !111
  %572 = add i64 %547, -8
  %573 = getelementptr inbounds i16, i16* %549, i64 8
  %574 = getelementptr inbounds i16, i16* %548, i64 8
  %575 = icmp eq i64 %572, 0
  br i1 %575, label %576, label %546, !llvm.loop !123

576:                                              ; preds = %541, %546, %521
  %577 = add i64 %422, %406
  %578 = load i8, i8* %408, align 1, !noalias !111
  %579 = icmp slt i8 %578, 0
  br i1 %579, label %580, label %582

580:                                              ; preds = %576
  %581 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %577, i64* %581, align 8, !noalias !111
  br label %584

582:                                              ; preds = %576
  %583 = trunc i64 %577 to i8
  store i8 %583, i8* %408, align 1, !noalias !111
  br label %584

584:                                              ; preds = %582, %580
  %585 = getelementptr inbounds i16, i16* %431, i64 %577
  store i16 0, i16* %585, align 2, !noalias !111
  br label %589

586:                                              ; preds = %420
  %587 = add i64 %422, %406
  %588 = sub i64 %587, %421
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* nonnull %11, i64 %421, i64 %588, i64 %422, i64 %422, i64 0, i64 %406, i16* %405) #10, !noalias !111
  br label %589

589:                                              ; preds = %425, %584, %586
  %590 = bitcast %"class.std::__1::basic_string"* %11 to i8**
  %591 = bitcast %"class.std::__1::basic_string"* %11 to i64*
  %592 = load i64, i64* %591, align 8
  %593 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %594 = bitcast i64* %593 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %346, i8* align 8 %594, i64 15, i1 false)
  %595 = getelementptr inbounds i8, i8* %347, i64 23
  %596 = load i8, i8* %595, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 0, i64 24, i1 false) #10, !noalias !111
  %597 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %598 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %597, i64 0, i32 1, i32 1
  %599 = load i8, i8* %598, align 1
  %600 = icmp slt i8 %599, 0
  br i1 %600, label %601, label %604

601:                                              ; preds = %589
  %602 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %603 = load i8*, i8** %602, align 8
  call void @_ZdlPv(i8* %603) #12
  br label %604

604:                                              ; preds = %601, %589
  %605 = bitcast %"class.std::__1::basic_string"* %2 to i64*
  store i64 %592, i64* %605, align 8
  %606 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %607 = bitcast i64* %606 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %607, i8* nonnull align 8 %346, i64 15, i1 false)
  %608 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %609 = getelementptr inbounds i8, i8* %608, i64 23
  store i8 %596, i8* %609, align 1
  %610 = load i8, i8* %396, align 1
  %611 = icmp slt i8 %610, 0
  br i1 %611, label %612, label %615

612:                                              ; preds = %604
  %613 = bitcast %"class.std::__1::basic_string"* %13 to i8**
  %614 = load i8*, i8** %613, align 8
  call void @_ZdlPv(i8* %614) #12
  br label %615

615:                                              ; preds = %604, %612
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %388) #10
  %616 = load i8, i8* %408, align 1
  %617 = icmp slt i8 %616, 0
  br i1 %617, label %618, label %620

618:                                              ; preds = %615
  %619 = load i8*, i8** %590, align 8
  call void @_ZdlPv(i8* %619) #12
  br label %620

620:                                              ; preds = %615, %618
  %621 = load i8, i8* %351, align 1
  %622 = icmp slt i8 %621, 0
  br i1 %622, label %623, label %626

623:                                              ; preds = %620
  %624 = bitcast %"class.std::__1::basic_string"* %12 to i8**
  %625 = load i8*, i8** %624, align 8
  call void @_ZdlPv(i8* %625) #12
  br label %626

626:                                              ; preds = %620, %623
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %348) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %347) #10
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %346)
  br label %914

627:                                              ; preds = %29
  %628 = add i64 %1, -3
  %629 = lshr i64 %628, 1
  %630 = and i64 %628, 1
  %631 = add nuw nsw i64 %629, %630
  %632 = getelementptr inbounds [15 x i8], [15 x i8]* %14, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %632)
  %633 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %633) #10
  %634 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %634) #10
  %635 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %16, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 0, i64 %631, %"class.std::__1::allocator"* dereferenceable(1) %635) #10
  %636 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %637 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %636, i64 0, i32 1, i32 1
  %638 = load i8, i8* %637, align 1, !noalias !124
  %639 = icmp slt i8 %638, 0
  br i1 %639, label %640, label %647

640:                                              ; preds = %627
  %641 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %642 = load i64, i64* %641, align 8, !noalias !124
  %643 = and i64 %642, 9223372036854775807
  %644 = add nsw i64 %643, -1
  %645 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %646 = load i64, i64* %645, align 8, !noalias !124
  br label %649

647:                                              ; preds = %627
  %648 = zext i8 %638 to i64
  br label %649

649:                                              ; preds = %647, %640
  %650 = phi i64 [ %644, %640 ], [ 10, %647 ]
  %651 = phi i64 [ %646, %640 ], [ %648, %647 ]
  %652 = sub i64 %650, %651
  %653 = icmp ult i64 %652, 3
  br i1 %653, label %671, label %654

654:                                              ; preds = %649
  %655 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %656 = load i16*, i16** %655, align 8, !noalias !124
  %657 = bitcast %"class.std::__1::basic_string"* %16 to i16*
  %658 = select i1 %639, i16* %656, i16* %657
  %659 = getelementptr inbounds i16, i16* %658, i64 %651
  store i16 46, i16* %659, align 2, !noalias !124
  %660 = getelementptr inbounds i16, i16* %659, i64 1
  store i16 46, i16* %660, align 2, !noalias !124
  %661 = getelementptr inbounds i16, i16* %660, i64 1
  store i16 46, i16* %661, align 2, !noalias !124
  %662 = add i64 %651, 3
  %663 = load i8, i8* %637, align 1, !noalias !124
  %664 = icmp slt i8 %663, 0
  br i1 %664, label %665, label %667

665:                                              ; preds = %654
  %666 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %662, i64* %666, align 8, !noalias !124
  br label %669

667:                                              ; preds = %654
  %668 = trunc i64 %662 to i8
  store i8 %668, i8* %637, align 1, !noalias !124
  br label %669

669:                                              ; preds = %667, %665
  %670 = getelementptr inbounds i16, i16* %658, i64 %662
  store i16 0, i16* %670, align 2, !noalias !124
  br label %674

671:                                              ; preds = %649
  %672 = add i64 %651, 3
  %673 = sub i64 %672, %650
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* nonnull %16, i64 %650, i64 %673, i64 %651, i64 %651, i64 0, i64 3, i16* getelementptr inbounds ([4 x i16], [4 x i16]* @.str.2, i64 0, i64 0)) #10, !noalias !124
  br label %674

674:                                              ; preds = %669, %671
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %633, i8* nonnull align 8 %634, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %634, i8 0, i64 24, i1 false) #10, !noalias !124
  %675 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %675) #10
  %676 = load i8, i8* %19, align 1
  %677 = icmp slt i8 %676, 0
  %678 = load i64, i64* %22, align 8
  %679 = zext i8 %676 to i64
  %680 = select i1 %677, i64 %678, i64 %679
  %681 = sub i64 %680, %629
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %17, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 %681, i64 -1, %"class.std::__1::allocator"* dereferenceable(1) %635) #10
  %682 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %683 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %682, i64 0, i32 1, i32 1
  %684 = load i8, i8* %683, align 1, !noalias !127
  %685 = icmp slt i8 %684, 0
  %686 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %687 = load i16*, i16** %686, align 8, !noalias !127
  %688 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %689 = load i64, i64* %688, align 8, !noalias !127
  %690 = bitcast %"class.std::__1::basic_string"* %17 to i16*
  %691 = zext i8 %684 to i64
  %692 = select i1 %685, i16* %687, i16* %690
  %693 = select i1 %685, i64 %689, i64 %691
  %694 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %695 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %694, i64 0, i32 1, i32 1
  %696 = load i8, i8* %695, align 1, !noalias !127
  %697 = icmp slt i8 %696, 0
  br i1 %697, label %698, label %705

698:                                              ; preds = %674
  %699 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %700 = load i64, i64* %699, align 8, !noalias !127
  %701 = and i64 %700, 9223372036854775807
  %702 = add nsw i64 %701, -1
  %703 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %704 = load i64, i64* %703, align 8, !noalias !127
  br label %707

705:                                              ; preds = %674
  %706 = zext i8 %696 to i64
  br label %707

707:                                              ; preds = %705, %698
  %708 = phi i64 [ %702, %698 ], [ 10, %705 ]
  %709 = phi i64 [ %704, %698 ], [ %706, %705 ]
  %710 = sub i64 %708, %709
  %711 = icmp ult i64 %710, %693
  br i1 %711, label %873, label %712

712:                                              ; preds = %707
  %713 = icmp eq i64 %693, 0
  br i1 %713, label %876, label %714

714:                                              ; preds = %712
  %715 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %716 = load i16*, i16** %715, align 8, !noalias !127
  %717 = bitcast %"class.std::__1::basic_string"* %15 to i16*
  %718 = select i1 %697, i16* %716, i16* %717
  %719 = getelementptr inbounds i16, i16* %718, i64 %709
  %720 = icmp ult i64 %693, 16
  br i1 %720, label %810, label %721

721:                                              ; preds = %714
  %722 = add i64 %693, %709
  %723 = getelementptr i16, i16* %718, i64 %722
  %724 = getelementptr i16, i16* %692, i64 %693
  %725 = icmp ult i16* %719, %724
  %726 = icmp ult i16* %692, %723
  %727 = and i1 %725, %726
  br i1 %727, label %810, label %728

728:                                              ; preds = %721
  %729 = and i64 %693, -16
  %730 = sub i64 %693, %729
  %731 = getelementptr i16, i16* %692, i64 %729
  %732 = getelementptr i16, i16* %719, i64 %729
  %733 = add i64 %729, -16
  %734 = lshr exact i64 %733, 4
  %735 = add nuw nsw i64 %734, 1
  %736 = and i64 %735, 3
  %737 = icmp ult i64 %733, 48
  br i1 %737, label %789, label %738

738:                                              ; preds = %728
  %739 = sub nsw i64 %735, %736
  br label %740

740:                                              ; preds = %740, %738
  %741 = phi i64 [ 0, %738 ], [ %786, %740 ]
  %742 = phi i64 [ %739, %738 ], [ %787, %740 ]
  %743 = getelementptr i16, i16* %692, i64 %741
  %744 = getelementptr i16, i16* %719, i64 %741
  %745 = bitcast i16* %743 to <8 x i16>*
  %746 = load <8 x i16>, <8 x i16>* %745, align 2, !alias.scope !130, !noalias !127
  %747 = getelementptr i16, i16* %743, i64 8
  %748 = bitcast i16* %747 to <8 x i16>*
  %749 = load <8 x i16>, <8 x i16>* %748, align 2, !alias.scope !130, !noalias !127
  %750 = bitcast i16* %744 to <8 x i16>*
  store <8 x i16> %746, <8 x i16>* %750, align 2, !alias.scope !133, !noalias !135
  %751 = getelementptr i16, i16* %744, i64 8
  %752 = bitcast i16* %751 to <8 x i16>*
  store <8 x i16> %749, <8 x i16>* %752, align 2, !alias.scope !133, !noalias !135
  %753 = or i64 %741, 16
  %754 = getelementptr i16, i16* %692, i64 %753
  %755 = getelementptr i16, i16* %719, i64 %753
  %756 = bitcast i16* %754 to <8 x i16>*
  %757 = load <8 x i16>, <8 x i16>* %756, align 2, !alias.scope !130, !noalias !127
  %758 = getelementptr i16, i16* %754, i64 8
  %759 = bitcast i16* %758 to <8 x i16>*
  %760 = load <8 x i16>, <8 x i16>* %759, align 2, !alias.scope !130, !noalias !127
  %761 = bitcast i16* %755 to <8 x i16>*
  store <8 x i16> %757, <8 x i16>* %761, align 2, !alias.scope !133, !noalias !135
  %762 = getelementptr i16, i16* %755, i64 8
  %763 = bitcast i16* %762 to <8 x i16>*
  store <8 x i16> %760, <8 x i16>* %763, align 2, !alias.scope !133, !noalias !135
  %764 = or i64 %741, 32
  %765 = getelementptr i16, i16* %692, i64 %764
  %766 = getelementptr i16, i16* %719, i64 %764
  %767 = bitcast i16* %765 to <8 x i16>*
  %768 = load <8 x i16>, <8 x i16>* %767, align 2, !alias.scope !130, !noalias !127
  %769 = getelementptr i16, i16* %765, i64 8
  %770 = bitcast i16* %769 to <8 x i16>*
  %771 = load <8 x i16>, <8 x i16>* %770, align 2, !alias.scope !130, !noalias !127
  %772 = bitcast i16* %766 to <8 x i16>*
  store <8 x i16> %768, <8 x i16>* %772, align 2, !alias.scope !133, !noalias !135
  %773 = getelementptr i16, i16* %766, i64 8
  %774 = bitcast i16* %773 to <8 x i16>*
  store <8 x i16> %771, <8 x i16>* %774, align 2, !alias.scope !133, !noalias !135
  %775 = or i64 %741, 48
  %776 = getelementptr i16, i16* %692, i64 %775
  %777 = getelementptr i16, i16* %719, i64 %775
  %778 = bitcast i16* %776 to <8 x i16>*
  %779 = load <8 x i16>, <8 x i16>* %778, align 2, !alias.scope !130, !noalias !127
  %780 = getelementptr i16, i16* %776, i64 8
  %781 = bitcast i16* %780 to <8 x i16>*
  %782 = load <8 x i16>, <8 x i16>* %781, align 2, !alias.scope !130, !noalias !127
  %783 = bitcast i16* %777 to <8 x i16>*
  store <8 x i16> %779, <8 x i16>* %783, align 2, !alias.scope !133, !noalias !135
  %784 = getelementptr i16, i16* %777, i64 8
  %785 = bitcast i16* %784 to <8 x i16>*
  store <8 x i16> %782, <8 x i16>* %785, align 2, !alias.scope !133, !noalias !135
  %786 = add i64 %741, 64
  %787 = add i64 %742, -4
  %788 = icmp eq i64 %787, 0
  br i1 %788, label %789, label %740, !llvm.loop !136

789:                                              ; preds = %740, %728
  %790 = phi i64 [ 0, %728 ], [ %786, %740 ]
  %791 = icmp eq i64 %736, 0
  br i1 %791, label %808, label %792

792:                                              ; preds = %789, %792
  %793 = phi i64 [ %805, %792 ], [ %790, %789 ]
  %794 = phi i64 [ %806, %792 ], [ %736, %789 ]
  %795 = getelementptr i16, i16* %692, i64 %793
  %796 = getelementptr i16, i16* %719, i64 %793
  %797 = bitcast i16* %795 to <8 x i16>*
  %798 = load <8 x i16>, <8 x i16>* %797, align 2, !alias.scope !130, !noalias !127
  %799 = getelementptr i16, i16* %795, i64 8
  %800 = bitcast i16* %799 to <8 x i16>*
  %801 = load <8 x i16>, <8 x i16>* %800, align 2, !alias.scope !130, !noalias !127
  %802 = bitcast i16* %796 to <8 x i16>*
  store <8 x i16> %798, <8 x i16>* %802, align 2, !alias.scope !133, !noalias !135
  %803 = getelementptr i16, i16* %796, i64 8
  %804 = bitcast i16* %803 to <8 x i16>*
  store <8 x i16> %801, <8 x i16>* %804, align 2, !alias.scope !133, !noalias !135
  %805 = add i64 %793, 16
  %806 = add i64 %794, -1
  %807 = icmp eq i64 %806, 0
  br i1 %807, label %808, label %792, !llvm.loop !137

808:                                              ; preds = %792, %789
  %809 = icmp eq i64 %693, %729
  br i1 %809, label %863, label %810

810:                                              ; preds = %808, %721, %714
  %811 = phi i64 [ %693, %721 ], [ %693, %714 ], [ %730, %808 ]
  %812 = phi i16* [ %692, %721 ], [ %692, %714 ], [ %731, %808 ]
  %813 = phi i16* [ %719, %721 ], [ %719, %714 ], [ %732, %808 ]
  %814 = add i64 %811, -1
  %815 = and i64 %811, 7
  %816 = icmp eq i64 %815, 0
  br i1 %816, label %828, label %817

817:                                              ; preds = %810, %817
  %818 = phi i64 [ %823, %817 ], [ %811, %810 ]
  %819 = phi i16* [ %825, %817 ], [ %812, %810 ]
  %820 = phi i16* [ %824, %817 ], [ %813, %810 ]
  %821 = phi i64 [ %826, %817 ], [ %815, %810 ]
  %822 = load i16, i16* %819, align 2, !noalias !127
  store i16 %822, i16* %820, align 2, !noalias !127
  %823 = add i64 %818, -1
  %824 = getelementptr inbounds i16, i16* %820, i64 1
  %825 = getelementptr inbounds i16, i16* %819, i64 1
  %826 = add i64 %821, -1
  %827 = icmp eq i64 %826, 0
  br i1 %827, label %828, label %817, !llvm.loop !138

828:                                              ; preds = %817, %810
  %829 = phi i64 [ %811, %810 ], [ %823, %817 ]
  %830 = phi i16* [ %812, %810 ], [ %825, %817 ]
  %831 = phi i16* [ %813, %810 ], [ %824, %817 ]
  %832 = icmp ult i64 %814, 7
  br i1 %832, label %863, label %833

833:                                              ; preds = %828, %833
  %834 = phi i64 [ %859, %833 ], [ %829, %828 ]
  %835 = phi i16* [ %861, %833 ], [ %830, %828 ]
  %836 = phi i16* [ %860, %833 ], [ %831, %828 ]
  %837 = load i16, i16* %835, align 2, !noalias !127
  store i16 %837, i16* %836, align 2, !noalias !127
  %838 = getelementptr inbounds i16, i16* %836, i64 1
  %839 = getelementptr inbounds i16, i16* %835, i64 1
  %840 = load i16, i16* %839, align 2, !noalias !127
  store i16 %840, i16* %838, align 2, !noalias !127
  %841 = getelementptr inbounds i16, i16* %836, i64 2
  %842 = getelementptr inbounds i16, i16* %835, i64 2
  %843 = load i16, i16* %842, align 2, !noalias !127
  store i16 %843, i16* %841, align 2, !noalias !127
  %844 = getelementptr inbounds i16, i16* %836, i64 3
  %845 = getelementptr inbounds i16, i16* %835, i64 3
  %846 = load i16, i16* %845, align 2, !noalias !127
  store i16 %846, i16* %844, align 2, !noalias !127
  %847 = getelementptr inbounds i16, i16* %836, i64 4
  %848 = getelementptr inbounds i16, i16* %835, i64 4
  %849 = load i16, i16* %848, align 2, !noalias !127
  store i16 %849, i16* %847, align 2, !noalias !127
  %850 = getelementptr inbounds i16, i16* %836, i64 5
  %851 = getelementptr inbounds i16, i16* %835, i64 5
  %852 = load i16, i16* %851, align 2, !noalias !127
  store i16 %852, i16* %850, align 2, !noalias !127
  %853 = getelementptr inbounds i16, i16* %836, i64 6
  %854 = getelementptr inbounds i16, i16* %835, i64 6
  %855 = load i16, i16* %854, align 2, !noalias !127
  store i16 %855, i16* %853, align 2, !noalias !127
  %856 = getelementptr inbounds i16, i16* %836, i64 7
  %857 = getelementptr inbounds i16, i16* %835, i64 7
  %858 = load i16, i16* %857, align 2, !noalias !127
  store i16 %858, i16* %856, align 2, !noalias !127
  %859 = add i64 %834, -8
  %860 = getelementptr inbounds i16, i16* %836, i64 8
  %861 = getelementptr inbounds i16, i16* %835, i64 8
  %862 = icmp eq i64 %859, 0
  br i1 %862, label %863, label %833, !llvm.loop !139

863:                                              ; preds = %828, %833, %808
  %864 = add i64 %709, %693
  %865 = load i8, i8* %695, align 1, !noalias !127
  %866 = icmp slt i8 %865, 0
  br i1 %866, label %867, label %869

867:                                              ; preds = %863
  %868 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %864, i64* %868, align 8, !noalias !127
  br label %871

869:                                              ; preds = %863
  %870 = trunc i64 %864 to i8
  store i8 %870, i8* %695, align 1, !noalias !127
  br label %871

871:                                              ; preds = %869, %867
  %872 = getelementptr inbounds i16, i16* %718, i64 %864
  store i16 0, i16* %872, align 2, !noalias !127
  br label %876

873:                                              ; preds = %707
  %874 = add i64 %709, %693
  %875 = sub i64 %874, %708
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* nonnull %15, i64 %708, i64 %875, i64 %709, i64 %709, i64 0, i64 %693, i16* %692) #10, !noalias !127
  br label %876

876:                                              ; preds = %712, %871, %873
  %877 = bitcast %"class.std::__1::basic_string"* %15 to i8**
  %878 = bitcast %"class.std::__1::basic_string"* %15 to i64*
  %879 = load i64, i64* %878, align 8
  %880 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %881 = bitcast i64* %880 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %632, i8* align 8 %881, i64 15, i1 false)
  %882 = getelementptr inbounds i8, i8* %633, i64 23
  %883 = load i8, i8* %882, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %633, i8 0, i64 24, i1 false) #10, !noalias !127
  %884 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %885 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %884, i64 0, i32 1, i32 1
  %886 = load i8, i8* %885, align 1
  %887 = icmp slt i8 %886, 0
  br i1 %887, label %888, label %891

888:                                              ; preds = %876
  %889 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %890 = load i8*, i8** %889, align 8
  call void @_ZdlPv(i8* %890) #12
  br label %891

891:                                              ; preds = %888, %876
  %892 = bitcast %"class.std::__1::basic_string"* %2 to i64*
  store i64 %879, i64* %892, align 8
  %893 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %894 = bitcast i64* %893 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %894, i8* nonnull align 8 %632, i64 15, i1 false)
  %895 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %896 = getelementptr inbounds i8, i8* %895, i64 23
  store i8 %883, i8* %896, align 1
  %897 = load i8, i8* %683, align 1
  %898 = icmp slt i8 %897, 0
  br i1 %898, label %899, label %902

899:                                              ; preds = %891
  %900 = bitcast %"class.std::__1::basic_string"* %17 to i8**
  %901 = load i8*, i8** %900, align 8
  call void @_ZdlPv(i8* %901) #12
  br label %902

902:                                              ; preds = %891, %899
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %675) #10
  %903 = load i8, i8* %695, align 1
  %904 = icmp slt i8 %903, 0
  br i1 %904, label %905, label %907

905:                                              ; preds = %902
  %906 = load i8*, i8** %877, align 8
  call void @_ZdlPv(i8* %906) #12
  br label %907

907:                                              ; preds = %902, %905
  %908 = load i8, i8* %637, align 1
  %909 = icmp slt i8 %908, 0
  br i1 %909, label %910, label %913

910:                                              ; preds = %907
  %911 = bitcast %"class.std::__1::basic_string"* %16 to i8**
  %912 = load i8*, i8** %911, align 8
  call void @_ZdlPv(i8* %912) #12
  br label %913

913:                                              ; preds = %907, %910
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %634) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %633) #10
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %632)
  br label %914

914:                                              ; preds = %39, %35, %51, %63, %344, %626, %913, %27
  %915 = phi i1 [ false, %27 ], [ true, %913 ], [ true, %626 ], [ true, %344 ], [ true, %63 ], [ true, %51 ], [ true, %35 ], [ true, %39 ]
  ret i1 %915
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gfx20ElideRectangleStringERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmmbPS6_(%"class.std::__1::basic_string"* dereferenceable(24), i64, i64, i1 zeroext, %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %6 = alloca %"class.base::i18n::UTF16CharIterator", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.base::i18n::BreakIterator", align 8
  %10 = alloca %"class.base::BasicStringPiece.139", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.base::i18n::BreakIterator", align 8
  %13 = alloca %"class.base::BasicStringPiece.139", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %15, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %5
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i16*, i16** %20, align 8
  store i16 0, i16* %21, align 2
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %22, align 8
  br label %25

23:                                               ; preds = %5
  %24 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  store i16 0, i16* %24, align 2
  store i8 0, i8* %16, align 1
  br label %25

25:                                               ; preds = %19, %23
  %26 = bitcast %"class.base::i18n::BreakIterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %26) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 72, i1 false) #10
  %27 = bitcast %"class.base::BasicStringPiece.139"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #10
  %28 = getelementptr inbounds %"class.base::BasicStringPiece.139", %"class.base::BasicStringPiece.139"* %13, i64 0, i32 0
  %29 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i16*, i16** %33, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %36 = select i1 %32, i16* %34, i16* %35
  store i16* %36, i16** %28, align 8
  %37 = getelementptr inbounds %"class.base::BasicStringPiece.139", %"class.base::BasicStringPiece.139"* %13, i64 0, i32 1
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = zext i8 %31 to i64
  %41 = select i1 %32, i64 %39, i64 %40
  store i64 %41, i64* %37, align 8
  call void @_ZN4base4i18n13BreakIteratorC1ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS1_9BreakTypeE(%"class.base::i18n::BreakIterator"* nonnull %12, %"class.base::BasicStringPiece.139"* nonnull dereferenceable(16) %13, i32 2) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #10
  %42 = call zeroext i1 @_ZN4base4i18n13BreakIterator4InitEv(%"class.base::i18n::BreakIterator"* nonnull %12) #10
  br i1 %42, label %43, label %1022

43:                                               ; preds = %25
  %44 = call zeroext i1 @_ZN4base4i18n13BreakIterator7AdvanceEv(%"class.base::i18n::BreakIterator"* nonnull %12) #10
  br i1 %44, label %45, label %1022

45:                                               ; preds = %43
  %46 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %47 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %47, i64 0, i32 1, i32 1
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = bitcast %"class.base::i18n::BreakIterator"* %9 to i8*
  %51 = bitcast %"class.base::BasicStringPiece.139"* %10 to i8*
  %52 = getelementptr inbounds %"class.base::BasicStringPiece.139", %"class.base::BasicStringPiece.139"* %10, i64 0, i32 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = bitcast %"class.std::__1::basic_string"* %14 to i16*
  %55 = getelementptr inbounds %"class.base::BasicStringPiece.139", %"class.base::BasicStringPiece.139"* %10, i64 0, i32 1
  %56 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %57 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %57, i64 0, i32 1, i32 1
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = bitcast %"class.base::i18n::UTF16CharIterator"* %6 to i8*
  %61 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %6, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %6, i64 0, i32 1
  %63 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %6, i64 0, i32 3
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.std::__1::basic_string"* %11 to i16*
  %66 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %67 = bitcast %"class.std::__1::basic_string"* %11 to %"class.std::__1::allocator"*
  %68 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %68, i64 0, i32 1, i32 1
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = bitcast %"class.std::__1::basic_string"* %7 to i16*
  %73 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  %74 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %75 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %75, i64 0, i32 1, i32 1
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = bitcast %"class.std::__1::basic_string"* %8 to i16*
  %80 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  %81 = bitcast %"class.std::__1::basic_string"* %11 to i8**
  %82 = bitcast %"class.std::__1::basic_string"* %14 to i8**
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = xor i1 %3, true
  br label %88

88:                                               ; preds = %1020, %45
  %89 = phi i64 [ 0, %45 ], [ %1016, %1020 ]
  %90 = phi i8 [ 0, %45 ], [ %1014, %1020 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #10
  call void @_ZNK4base4i18n13BreakIterator9GetStringEv(%"class.std::__1::basic_string"* nonnull sret %14, %"class.base::i18n::BreakIterator"* nonnull %12) #10
  %91 = load i8, i8* %48, align 1
  %92 = icmp slt i8 %91, 0
  %93 = load i64, i64* %49, align 8
  %94 = zext i8 %91 to i64
  %95 = select i1 %92, i64 %93, i64 %94
  %96 = icmp ult i64 %95, %2
  br i1 %96, label %97, label %279

97:                                               ; preds = %88
  %98 = icmp ult i64 %89, %1
  br i1 %98, label %99, label %1012

99:                                               ; preds = %97
  %100 = load i16*, i16** %53, align 8
  %101 = select i1 %92, i16* %100, i16* %54
  %102 = load i8, i8* %16, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %109

104:                                              ; preds = %99
  %105 = load i64, i64* %83, align 8
  %106 = and i64 %105, 9223372036854775807
  %107 = add nsw i64 %106, -1
  %108 = load i64, i64* %84, align 8
  br label %111

109:                                              ; preds = %99
  %110 = zext i8 %102 to i64
  br label %111

111:                                              ; preds = %109, %104
  %112 = phi i64 [ %107, %104 ], [ 10, %109 ]
  %113 = phi i64 [ %108, %104 ], [ %110, %109 ]
  %114 = sub i64 %112, %113
  %115 = icmp ult i64 %114, %95
  br i1 %115, label %276, label %116

116:                                              ; preds = %111
  %117 = icmp eq i64 %95, 0
  br i1 %117, label %1012, label %118

118:                                              ; preds = %116
  br i1 %103, label %119, label %121

119:                                              ; preds = %118
  %120 = load i16*, i16** %86, align 8
  br label %121

121:                                              ; preds = %118, %119
  %122 = phi i16* [ %120, %119 ], [ %85, %118 ]
  %123 = getelementptr inbounds i16, i16* %122, i64 %113
  %124 = icmp ult i64 %95, 16
  br i1 %124, label %214, label %125

125:                                              ; preds = %121
  %126 = add i64 %95, %113
  %127 = getelementptr i16, i16* %122, i64 %126
  %128 = getelementptr i16, i16* %101, i64 %95
  %129 = icmp ult i16* %123, %128
  %130 = icmp ult i16* %101, %127
  %131 = and i1 %129, %130
  br i1 %131, label %214, label %132

132:                                              ; preds = %125
  %133 = and i64 %95, -16
  %134 = sub i64 %95, %133
  %135 = getelementptr i16, i16* %101, i64 %133
  %136 = getelementptr i16, i16* %123, i64 %133
  %137 = add i64 %133, -16
  %138 = lshr exact i64 %137, 4
  %139 = add nuw nsw i64 %138, 1
  %140 = and i64 %139, 3
  %141 = icmp ult i64 %137, 48
  br i1 %141, label %193, label %142

142:                                              ; preds = %132
  %143 = sub nsw i64 %139, %140
  br label %144

144:                                              ; preds = %144, %142
  %145 = phi i64 [ 0, %142 ], [ %190, %144 ]
  %146 = phi i64 [ %143, %142 ], [ %191, %144 ]
  %147 = getelementptr i16, i16* %101, i64 %145
  %148 = getelementptr i16, i16* %123, i64 %145
  %149 = bitcast i16* %147 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !140
  %151 = getelementptr i16, i16* %147, i64 8
  %152 = bitcast i16* %151 to <8 x i16>*
  %153 = load <8 x i16>, <8 x i16>* %152, align 2, !alias.scope !140
  %154 = bitcast i16* %148 to <8 x i16>*
  store <8 x i16> %150, <8 x i16>* %154, align 2, !alias.scope !143, !noalias !140
  %155 = getelementptr i16, i16* %148, i64 8
  %156 = bitcast i16* %155 to <8 x i16>*
  store <8 x i16> %153, <8 x i16>* %156, align 2, !alias.scope !143, !noalias !140
  %157 = or i64 %145, 16
  %158 = getelementptr i16, i16* %101, i64 %157
  %159 = getelementptr i16, i16* %123, i64 %157
  %160 = bitcast i16* %158 to <8 x i16>*
  %161 = load <8 x i16>, <8 x i16>* %160, align 2, !alias.scope !140
  %162 = getelementptr i16, i16* %158, i64 8
  %163 = bitcast i16* %162 to <8 x i16>*
  %164 = load <8 x i16>, <8 x i16>* %163, align 2, !alias.scope !140
  %165 = bitcast i16* %159 to <8 x i16>*
  store <8 x i16> %161, <8 x i16>* %165, align 2, !alias.scope !143, !noalias !140
  %166 = getelementptr i16, i16* %159, i64 8
  %167 = bitcast i16* %166 to <8 x i16>*
  store <8 x i16> %164, <8 x i16>* %167, align 2, !alias.scope !143, !noalias !140
  %168 = or i64 %145, 32
  %169 = getelementptr i16, i16* %101, i64 %168
  %170 = getelementptr i16, i16* %123, i64 %168
  %171 = bitcast i16* %169 to <8 x i16>*
  %172 = load <8 x i16>, <8 x i16>* %171, align 2, !alias.scope !140
  %173 = getelementptr i16, i16* %169, i64 8
  %174 = bitcast i16* %173 to <8 x i16>*
  %175 = load <8 x i16>, <8 x i16>* %174, align 2, !alias.scope !140
  %176 = bitcast i16* %170 to <8 x i16>*
  store <8 x i16> %172, <8 x i16>* %176, align 2, !alias.scope !143, !noalias !140
  %177 = getelementptr i16, i16* %170, i64 8
  %178 = bitcast i16* %177 to <8 x i16>*
  store <8 x i16> %175, <8 x i16>* %178, align 2, !alias.scope !143, !noalias !140
  %179 = or i64 %145, 48
  %180 = getelementptr i16, i16* %101, i64 %179
  %181 = getelementptr i16, i16* %123, i64 %179
  %182 = bitcast i16* %180 to <8 x i16>*
  %183 = load <8 x i16>, <8 x i16>* %182, align 2, !alias.scope !140
  %184 = getelementptr i16, i16* %180, i64 8
  %185 = bitcast i16* %184 to <8 x i16>*
  %186 = load <8 x i16>, <8 x i16>* %185, align 2, !alias.scope !140
  %187 = bitcast i16* %181 to <8 x i16>*
  store <8 x i16> %183, <8 x i16>* %187, align 2, !alias.scope !143, !noalias !140
  %188 = getelementptr i16, i16* %181, i64 8
  %189 = bitcast i16* %188 to <8 x i16>*
  store <8 x i16> %186, <8 x i16>* %189, align 2, !alias.scope !143, !noalias !140
  %190 = add i64 %145, 64
  %191 = add i64 %146, -4
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %144, !llvm.loop !145

193:                                              ; preds = %144, %132
  %194 = phi i64 [ 0, %132 ], [ %190, %144 ]
  %195 = icmp eq i64 %140, 0
  br i1 %195, label %212, label %196

196:                                              ; preds = %193, %196
  %197 = phi i64 [ %209, %196 ], [ %194, %193 ]
  %198 = phi i64 [ %210, %196 ], [ %140, %193 ]
  %199 = getelementptr i16, i16* %101, i64 %197
  %200 = getelementptr i16, i16* %123, i64 %197
  %201 = bitcast i16* %199 to <8 x i16>*
  %202 = load <8 x i16>, <8 x i16>* %201, align 2, !alias.scope !140
  %203 = getelementptr i16, i16* %199, i64 8
  %204 = bitcast i16* %203 to <8 x i16>*
  %205 = load <8 x i16>, <8 x i16>* %204, align 2, !alias.scope !140
  %206 = bitcast i16* %200 to <8 x i16>*
  store <8 x i16> %202, <8 x i16>* %206, align 2, !alias.scope !143, !noalias !140
  %207 = getelementptr i16, i16* %200, i64 8
  %208 = bitcast i16* %207 to <8 x i16>*
  store <8 x i16> %205, <8 x i16>* %208, align 2, !alias.scope !143, !noalias !140
  %209 = add i64 %197, 16
  %210 = add i64 %198, -1
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %212, label %196, !llvm.loop !146

212:                                              ; preds = %196, %193
  %213 = icmp eq i64 %95, %133
  br i1 %213, label %267, label %214

214:                                              ; preds = %212, %125, %121
  %215 = phi i64 [ %95, %125 ], [ %95, %121 ], [ %134, %212 ]
  %216 = phi i16* [ %101, %125 ], [ %101, %121 ], [ %135, %212 ]
  %217 = phi i16* [ %123, %125 ], [ %123, %121 ], [ %136, %212 ]
  %218 = add i64 %215, -1
  %219 = and i64 %215, 7
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %232, label %221

221:                                              ; preds = %214, %221
  %222 = phi i64 [ %227, %221 ], [ %215, %214 ]
  %223 = phi i16* [ %229, %221 ], [ %216, %214 ]
  %224 = phi i16* [ %228, %221 ], [ %217, %214 ]
  %225 = phi i64 [ %230, %221 ], [ %219, %214 ]
  %226 = load i16, i16* %223, align 2
  store i16 %226, i16* %224, align 2
  %227 = add i64 %222, -1
  %228 = getelementptr inbounds i16, i16* %224, i64 1
  %229 = getelementptr inbounds i16, i16* %223, i64 1
  %230 = add i64 %225, -1
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %232, label %221, !llvm.loop !147

232:                                              ; preds = %221, %214
  %233 = phi i64 [ %215, %214 ], [ %227, %221 ]
  %234 = phi i16* [ %216, %214 ], [ %229, %221 ]
  %235 = phi i16* [ %217, %214 ], [ %228, %221 ]
  %236 = icmp ult i64 %218, 7
  br i1 %236, label %267, label %237

237:                                              ; preds = %232, %237
  %238 = phi i64 [ %263, %237 ], [ %233, %232 ]
  %239 = phi i16* [ %265, %237 ], [ %234, %232 ]
  %240 = phi i16* [ %264, %237 ], [ %235, %232 ]
  %241 = load i16, i16* %239, align 2
  store i16 %241, i16* %240, align 2
  %242 = getelementptr inbounds i16, i16* %240, i64 1
  %243 = getelementptr inbounds i16, i16* %239, i64 1
  %244 = load i16, i16* %243, align 2
  store i16 %244, i16* %242, align 2
  %245 = getelementptr inbounds i16, i16* %240, i64 2
  %246 = getelementptr inbounds i16, i16* %239, i64 2
  %247 = load i16, i16* %246, align 2
  store i16 %247, i16* %245, align 2
  %248 = getelementptr inbounds i16, i16* %240, i64 3
  %249 = getelementptr inbounds i16, i16* %239, i64 3
  %250 = load i16, i16* %249, align 2
  store i16 %250, i16* %248, align 2
  %251 = getelementptr inbounds i16, i16* %240, i64 4
  %252 = getelementptr inbounds i16, i16* %239, i64 4
  %253 = load i16, i16* %252, align 2
  store i16 %253, i16* %251, align 2
  %254 = getelementptr inbounds i16, i16* %240, i64 5
  %255 = getelementptr inbounds i16, i16* %239, i64 5
  %256 = load i16, i16* %255, align 2
  store i16 %256, i16* %254, align 2
  %257 = getelementptr inbounds i16, i16* %240, i64 6
  %258 = getelementptr inbounds i16, i16* %239, i64 6
  %259 = load i16, i16* %258, align 2
  store i16 %259, i16* %257, align 2
  %260 = getelementptr inbounds i16, i16* %240, i64 7
  %261 = getelementptr inbounds i16, i16* %239, i64 7
  %262 = load i16, i16* %261, align 2
  store i16 %262, i16* %260, align 2
  %263 = add i64 %238, -8
  %264 = getelementptr inbounds i16, i16* %240, i64 8
  %265 = getelementptr inbounds i16, i16* %239, i64 8
  %266 = icmp eq i64 %263, 0
  br i1 %266, label %267, label %237, !llvm.loop !148

267:                                              ; preds = %232, %237, %212
  %268 = add i64 %113, %95
  %269 = load i8, i8* %16, align 1
  %270 = icmp slt i8 %269, 0
  br i1 %270, label %271, label %272

271:                                              ; preds = %267
  store i64 %268, i64* %84, align 8
  br label %274

272:                                              ; preds = %267
  %273 = trunc i64 %268 to i8
  store i8 %273, i8* %16, align 1
  br label %274

274:                                              ; preds = %272, %271
  %275 = getelementptr inbounds i16, i16* %122, i64 %268
  store i16 0, i16* %275, align 2
  br label %1012

276:                                              ; preds = %111
  %277 = add i64 %113, %95
  %278 = sub i64 %277, %112
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %4, i64 %112, i64 %278, i64 %113, i64 %113, i64 0, i64 %95, i16* %101) #10
  br label %1012

279:                                              ; preds = %88
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %50) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 72, i1 false) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #10
  %280 = load i16*, i16** %53, align 8
  %281 = select i1 %92, i16* %280, i16* %54
  store i16* %281, i16** %52, align 8
  store i64 %95, i64* %55, align 8
  call void @_ZN4base4i18n13BreakIteratorC1ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS1_9BreakTypeE(%"class.base::i18n::BreakIterator"* nonnull %9, %"class.base::BasicStringPiece.139"* nonnull dereferenceable(16) %10, i32 1) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #10
  %282 = call zeroext i1 @_ZN4base4i18n13BreakIterator4InitEv(%"class.base::i18n::BreakIterator"* nonnull %9) #10
  br i1 %282, label %283, label %1009

283:                                              ; preds = %279
  %284 = call zeroext i1 @_ZN4base4i18n13BreakIterator7AdvanceEv(%"class.base::i18n::BreakIterator"* nonnull %9) #10
  br i1 %284, label %285, label %1009

285:                                              ; preds = %283, %1007
  %286 = phi i64 [ %1000, %1007 ], [ %89, %283 ]
  %287 = phi i64 [ %1001, %1007 ], [ 0, %283 ]
  %288 = phi i8 [ %1002, %1007 ], [ %90, %283 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #10
  call void @_ZNK4base4i18n13BreakIterator9GetStringEv(%"class.std::__1::basic_string"* nonnull sret %11, %"class.base::i18n::BreakIterator"* nonnull %9) #10
  %289 = load i8, i8* %58, align 1
  %290 = icmp slt i8 %289, 0
  %291 = load i64, i64* %59, align 8
  %292 = zext i8 %289 to i64
  %293 = select i1 %290, i64 %291, i64 %292
  %294 = icmp ult i64 %293, %2
  br i1 %294, label %295, label %532

295:                                              ; preds = %285
  %296 = add i64 %293, %287
  %297 = icmp ult i64 %296, %2
  br i1 %297, label %334, label %298

298:                                              ; preds = %295
  %299 = icmp uge i64 %286, %1
  %300 = or i1 %299, %87
  %301 = select i1 %299, i8 1, i8 %288
  br i1 %300, label %331, label %302

302:                                              ; preds = %298
  %303 = load i8, i8* %16, align 1
  %304 = icmp slt i8 %303, 0
  br i1 %304, label %305, label %310

305:                                              ; preds = %302
  %306 = load i64, i64* %83, align 8
  %307 = and i64 %306, 9223372036854775807
  %308 = add nsw i64 %307, -1
  %309 = load i64, i64* %84, align 8
  br label %312

310:                                              ; preds = %302
  %311 = zext i8 %303 to i64
  br label %312

312:                                              ; preds = %310, %305
  %313 = phi i64 [ %308, %305 ], [ 10, %310 ]
  %314 = phi i64 [ %309, %305 ], [ %311, %310 ]
  %315 = icmp eq i64 %313, %314
  br i1 %315, label %330, label %316

316:                                              ; preds = %312
  br i1 %304, label %317, label %319

317:                                              ; preds = %316
  %318 = load i16*, i16** %86, align 8
  br label %319

319:                                              ; preds = %316, %317
  %320 = phi i16* [ %318, %317 ], [ %85, %316 ]
  %321 = getelementptr inbounds i16, i16* %320, i64 %314
  store i16 10, i16* %321, align 2
  %322 = add i64 %314, 1
  %323 = load i8, i8* %16, align 1
  %324 = icmp slt i8 %323, 0
  br i1 %324, label %325, label %326

325:                                              ; preds = %319
  store i64 %322, i64* %84, align 8
  br label %328

326:                                              ; preds = %319
  %327 = trunc i64 %322 to i8
  store i8 %327, i8* %16, align 1
  br label %328

328:                                              ; preds = %326, %325
  %329 = getelementptr inbounds i16, i16* %320, i64 %322
  store i16 0, i16* %329, align 2
  br label %331

330:                                              ; preds = %312
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %4, i64 %313, i64 1, i64 %313, i64 %313, i64 0, i64 1, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str.4, i64 0, i64 0)) #10
  br label %331

331:                                              ; preds = %298, %328, %330
  %332 = phi i8 [ %288, %330 ], [ %288, %328 ], [ %301, %298 ]
  %333 = add i64 %286, 1
  br label %334

334:                                              ; preds = %331, %295
  %335 = phi i64 [ %286, %295 ], [ %333, %331 ]
  %336 = phi i64 [ %287, %295 ], [ 0, %331 ]
  %337 = phi i8 [ %288, %295 ], [ %332, %331 ]
  %338 = icmp ult i64 %335, %1
  br i1 %338, label %339, label %524

339:                                              ; preds = %334
  %340 = load i8, i8* %58, align 1
  %341 = icmp slt i8 %340, 0
  %342 = load i16*, i16** %64, align 8
  %343 = load i64, i64* %59, align 8
  %344 = zext i8 %340 to i64
  %345 = select i1 %341, i16* %342, i16* %65
  %346 = select i1 %341, i64 %343, i64 %344
  %347 = load i8, i8* %16, align 1
  %348 = icmp slt i8 %347, 0
  br i1 %348, label %349, label %354

349:                                              ; preds = %339
  %350 = load i64, i64* %83, align 8
  %351 = and i64 %350, 9223372036854775807
  %352 = add nsw i64 %351, -1
  %353 = load i64, i64* %84, align 8
  br label %356

354:                                              ; preds = %339
  %355 = zext i8 %347 to i64
  br label %356

356:                                              ; preds = %354, %349
  %357 = phi i64 [ %352, %349 ], [ 10, %354 ]
  %358 = phi i64 [ %353, %349 ], [ %355, %354 ]
  %359 = sub i64 %357, %358
  %360 = icmp ult i64 %359, %346
  br i1 %360, label %521, label %361

361:                                              ; preds = %356
  %362 = icmp eq i64 %346, 0
  br i1 %362, label %524, label %363

363:                                              ; preds = %361
  br i1 %348, label %364, label %366

364:                                              ; preds = %363
  %365 = load i16*, i16** %86, align 8
  br label %366

366:                                              ; preds = %363, %364
  %367 = phi i16* [ %365, %364 ], [ %85, %363 ]
  %368 = getelementptr inbounds i16, i16* %367, i64 %358
  %369 = icmp ult i64 %346, 16
  br i1 %369, label %459, label %370

370:                                              ; preds = %366
  %371 = add i64 %346, %358
  %372 = getelementptr i16, i16* %367, i64 %371
  %373 = getelementptr i16, i16* %345, i64 %346
  %374 = icmp ult i16* %368, %373
  %375 = icmp ult i16* %345, %372
  %376 = and i1 %374, %375
  br i1 %376, label %459, label %377

377:                                              ; preds = %370
  %378 = and i64 %346, -16
  %379 = sub i64 %346, %378
  %380 = getelementptr i16, i16* %345, i64 %378
  %381 = getelementptr i16, i16* %368, i64 %378
  %382 = add i64 %378, -16
  %383 = lshr exact i64 %382, 4
  %384 = add nuw nsw i64 %383, 1
  %385 = and i64 %384, 3
  %386 = icmp ult i64 %382, 48
  br i1 %386, label %438, label %387

387:                                              ; preds = %377
  %388 = sub nsw i64 %384, %385
  br label %389

389:                                              ; preds = %389, %387
  %390 = phi i64 [ 0, %387 ], [ %435, %389 ]
  %391 = phi i64 [ %388, %387 ], [ %436, %389 ]
  %392 = getelementptr i16, i16* %345, i64 %390
  %393 = getelementptr i16, i16* %368, i64 %390
  %394 = bitcast i16* %392 to <8 x i16>*
  %395 = load <8 x i16>, <8 x i16>* %394, align 2, !alias.scope !149
  %396 = getelementptr i16, i16* %392, i64 8
  %397 = bitcast i16* %396 to <8 x i16>*
  %398 = load <8 x i16>, <8 x i16>* %397, align 2, !alias.scope !149
  %399 = bitcast i16* %393 to <8 x i16>*
  store <8 x i16> %395, <8 x i16>* %399, align 2, !alias.scope !152, !noalias !149
  %400 = getelementptr i16, i16* %393, i64 8
  %401 = bitcast i16* %400 to <8 x i16>*
  store <8 x i16> %398, <8 x i16>* %401, align 2, !alias.scope !152, !noalias !149
  %402 = or i64 %390, 16
  %403 = getelementptr i16, i16* %345, i64 %402
  %404 = getelementptr i16, i16* %368, i64 %402
  %405 = bitcast i16* %403 to <8 x i16>*
  %406 = load <8 x i16>, <8 x i16>* %405, align 2, !alias.scope !149
  %407 = getelementptr i16, i16* %403, i64 8
  %408 = bitcast i16* %407 to <8 x i16>*
  %409 = load <8 x i16>, <8 x i16>* %408, align 2, !alias.scope !149
  %410 = bitcast i16* %404 to <8 x i16>*
  store <8 x i16> %406, <8 x i16>* %410, align 2, !alias.scope !152, !noalias !149
  %411 = getelementptr i16, i16* %404, i64 8
  %412 = bitcast i16* %411 to <8 x i16>*
  store <8 x i16> %409, <8 x i16>* %412, align 2, !alias.scope !152, !noalias !149
  %413 = or i64 %390, 32
  %414 = getelementptr i16, i16* %345, i64 %413
  %415 = getelementptr i16, i16* %368, i64 %413
  %416 = bitcast i16* %414 to <8 x i16>*
  %417 = load <8 x i16>, <8 x i16>* %416, align 2, !alias.scope !149
  %418 = getelementptr i16, i16* %414, i64 8
  %419 = bitcast i16* %418 to <8 x i16>*
  %420 = load <8 x i16>, <8 x i16>* %419, align 2, !alias.scope !149
  %421 = bitcast i16* %415 to <8 x i16>*
  store <8 x i16> %417, <8 x i16>* %421, align 2, !alias.scope !152, !noalias !149
  %422 = getelementptr i16, i16* %415, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  store <8 x i16> %420, <8 x i16>* %423, align 2, !alias.scope !152, !noalias !149
  %424 = or i64 %390, 48
  %425 = getelementptr i16, i16* %345, i64 %424
  %426 = getelementptr i16, i16* %368, i64 %424
  %427 = bitcast i16* %425 to <8 x i16>*
  %428 = load <8 x i16>, <8 x i16>* %427, align 2, !alias.scope !149
  %429 = getelementptr i16, i16* %425, i64 8
  %430 = bitcast i16* %429 to <8 x i16>*
  %431 = load <8 x i16>, <8 x i16>* %430, align 2, !alias.scope !149
  %432 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %428, <8 x i16>* %432, align 2, !alias.scope !152, !noalias !149
  %433 = getelementptr i16, i16* %426, i64 8
  %434 = bitcast i16* %433 to <8 x i16>*
  store <8 x i16> %431, <8 x i16>* %434, align 2, !alias.scope !152, !noalias !149
  %435 = add i64 %390, 64
  %436 = add i64 %391, -4
  %437 = icmp eq i64 %436, 0
  br i1 %437, label %438, label %389, !llvm.loop !154

438:                                              ; preds = %389, %377
  %439 = phi i64 [ 0, %377 ], [ %435, %389 ]
  %440 = icmp eq i64 %385, 0
  br i1 %440, label %457, label %441

441:                                              ; preds = %438, %441
  %442 = phi i64 [ %454, %441 ], [ %439, %438 ]
  %443 = phi i64 [ %455, %441 ], [ %385, %438 ]
  %444 = getelementptr i16, i16* %345, i64 %442
  %445 = getelementptr i16, i16* %368, i64 %442
  %446 = bitcast i16* %444 to <8 x i16>*
  %447 = load <8 x i16>, <8 x i16>* %446, align 2, !alias.scope !149
  %448 = getelementptr i16, i16* %444, i64 8
  %449 = bitcast i16* %448 to <8 x i16>*
  %450 = load <8 x i16>, <8 x i16>* %449, align 2, !alias.scope !149
  %451 = bitcast i16* %445 to <8 x i16>*
  store <8 x i16> %447, <8 x i16>* %451, align 2, !alias.scope !152, !noalias !149
  %452 = getelementptr i16, i16* %445, i64 8
  %453 = bitcast i16* %452 to <8 x i16>*
  store <8 x i16> %450, <8 x i16>* %453, align 2, !alias.scope !152, !noalias !149
  %454 = add i64 %442, 16
  %455 = add i64 %443, -1
  %456 = icmp eq i64 %455, 0
  br i1 %456, label %457, label %441, !llvm.loop !155

457:                                              ; preds = %441, %438
  %458 = icmp eq i64 %346, %378
  br i1 %458, label %512, label %459

459:                                              ; preds = %457, %370, %366
  %460 = phi i64 [ %346, %370 ], [ %346, %366 ], [ %379, %457 ]
  %461 = phi i16* [ %345, %370 ], [ %345, %366 ], [ %380, %457 ]
  %462 = phi i16* [ %368, %370 ], [ %368, %366 ], [ %381, %457 ]
  %463 = add i64 %460, -1
  %464 = and i64 %460, 7
  %465 = icmp eq i64 %464, 0
  br i1 %465, label %477, label %466

466:                                              ; preds = %459, %466
  %467 = phi i64 [ %472, %466 ], [ %460, %459 ]
  %468 = phi i16* [ %474, %466 ], [ %461, %459 ]
  %469 = phi i16* [ %473, %466 ], [ %462, %459 ]
  %470 = phi i64 [ %475, %466 ], [ %464, %459 ]
  %471 = load i16, i16* %468, align 2
  store i16 %471, i16* %469, align 2
  %472 = add i64 %467, -1
  %473 = getelementptr inbounds i16, i16* %469, i64 1
  %474 = getelementptr inbounds i16, i16* %468, i64 1
  %475 = add i64 %470, -1
  %476 = icmp eq i64 %475, 0
  br i1 %476, label %477, label %466, !llvm.loop !156

477:                                              ; preds = %466, %459
  %478 = phi i64 [ %460, %459 ], [ %472, %466 ]
  %479 = phi i16* [ %461, %459 ], [ %474, %466 ]
  %480 = phi i16* [ %462, %459 ], [ %473, %466 ]
  %481 = icmp ult i64 %463, 7
  br i1 %481, label %512, label %482

482:                                              ; preds = %477, %482
  %483 = phi i64 [ %508, %482 ], [ %478, %477 ]
  %484 = phi i16* [ %510, %482 ], [ %479, %477 ]
  %485 = phi i16* [ %509, %482 ], [ %480, %477 ]
  %486 = load i16, i16* %484, align 2
  store i16 %486, i16* %485, align 2
  %487 = getelementptr inbounds i16, i16* %485, i64 1
  %488 = getelementptr inbounds i16, i16* %484, i64 1
  %489 = load i16, i16* %488, align 2
  store i16 %489, i16* %487, align 2
  %490 = getelementptr inbounds i16, i16* %485, i64 2
  %491 = getelementptr inbounds i16, i16* %484, i64 2
  %492 = load i16, i16* %491, align 2
  store i16 %492, i16* %490, align 2
  %493 = getelementptr inbounds i16, i16* %485, i64 3
  %494 = getelementptr inbounds i16, i16* %484, i64 3
  %495 = load i16, i16* %494, align 2
  store i16 %495, i16* %493, align 2
  %496 = getelementptr inbounds i16, i16* %485, i64 4
  %497 = getelementptr inbounds i16, i16* %484, i64 4
  %498 = load i16, i16* %497, align 2
  store i16 %498, i16* %496, align 2
  %499 = getelementptr inbounds i16, i16* %485, i64 5
  %500 = getelementptr inbounds i16, i16* %484, i64 5
  %501 = load i16, i16* %500, align 2
  store i16 %501, i16* %499, align 2
  %502 = getelementptr inbounds i16, i16* %485, i64 6
  %503 = getelementptr inbounds i16, i16* %484, i64 6
  %504 = load i16, i16* %503, align 2
  store i16 %504, i16* %502, align 2
  %505 = getelementptr inbounds i16, i16* %485, i64 7
  %506 = getelementptr inbounds i16, i16* %484, i64 7
  %507 = load i16, i16* %506, align 2
  store i16 %507, i16* %505, align 2
  %508 = add i64 %483, -8
  %509 = getelementptr inbounds i16, i16* %485, i64 8
  %510 = getelementptr inbounds i16, i16* %484, i64 8
  %511 = icmp eq i64 %508, 0
  br i1 %511, label %512, label %482, !llvm.loop !157

512:                                              ; preds = %477, %482, %457
  %513 = add i64 %358, %346
  %514 = load i8, i8* %16, align 1
  %515 = icmp slt i8 %514, 0
  br i1 %515, label %516, label %517

516:                                              ; preds = %512
  store i64 %513, i64* %84, align 8
  br label %519

517:                                              ; preds = %512
  %518 = trunc i64 %513 to i8
  store i8 %518, i8* %16, align 1
  br label %519

519:                                              ; preds = %517, %516
  %520 = getelementptr inbounds i16, i16* %367, i64 %513
  store i16 0, i16* %520, align 2
  br label %524

521:                                              ; preds = %356
  %522 = add i64 %358, %346
  %523 = sub i64 %522, %357
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %4, i64 %357, i64 %523, i64 %358, i64 %358, i64 0, i64 %346, i16* %345) #10
  br label %524

524:                                              ; preds = %334, %521, %519, %361
  %525 = phi i8 [ %337, %521 ], [ %337, %361 ], [ %337, %519 ], [ 1, %334 ]
  %526 = load i8, i8* %58, align 1
  %527 = icmp slt i8 %526, 0
  %528 = load i64, i64* %59, align 8
  %529 = zext i8 %526 to i64
  %530 = select i1 %527, i64 %528, i64 %529
  %531 = add i64 %530, %336
  br label %999

532:                                              ; preds = %285
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 40, i1 false) #10
  %533 = load i16*, i16** %64, align 8
  %534 = select i1 %290, i16* %533, i16* %65
  call void @_ZN4base4i18n17UTF16CharIteratorC1ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.base::i18n::UTF16CharIterator"* nonnull %6, i16* %534, i64 %293) #10
  %535 = load i64, i64* %62, align 8
  %536 = load i64, i64* %61, align 8
  %537 = icmp eq i64 %535, %536
  br i1 %537, label %789, label %538

538:                                              ; preds = %532, %779
  %539 = phi i64 [ %780, %779 ], [ %286, %532 ]
  %540 = phi i64 [ %781, %779 ], [ %287, %532 ]
  %541 = phi i8 [ %782, %779 ], [ %288, %532 ]
  %542 = phi i64 [ %786, %779 ], [ %535, %532 ]
  %543 = phi i32 [ %784, %779 ], [ 0, %532 ]
  %544 = phi i64 [ %783, %779 ], [ 0, %532 ]
  %545 = load i32, i32* %63, align 8
  %546 = sub nsw i32 %545, %543
  %547 = sext i32 %546 to i64
  %548 = add i64 %540, %547
  %549 = icmp ult i64 %548, %2
  br i1 %549, label %779, label %550

550:                                              ; preds = %538
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #10
  %551 = sub i64 %542, %544
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11, i64 %544, i64 %551, %"class.std::__1::allocator"* nonnull dereferenceable(1) %67) #10
  %552 = icmp ult i64 %539, %1
  br i1 %552, label %553, label %738

553:                                              ; preds = %550
  %554 = load i8, i8* %69, align 1
  %555 = icmp slt i8 %554, 0
  %556 = load i16*, i16** %70, align 8
  %557 = load i64, i64* %71, align 8
  %558 = zext i8 %554 to i64
  %559 = select i1 %555, i16* %556, i16* %72
  %560 = select i1 %555, i64 %557, i64 %558
  %561 = load i8, i8* %16, align 1
  %562 = icmp slt i8 %561, 0
  br i1 %562, label %563, label %568

563:                                              ; preds = %553
  %564 = load i64, i64* %83, align 8
  %565 = and i64 %564, 9223372036854775807
  %566 = add nsw i64 %565, -1
  %567 = load i64, i64* %84, align 8
  br label %570

568:                                              ; preds = %553
  %569 = zext i8 %561 to i64
  br label %570

570:                                              ; preds = %568, %563
  %571 = phi i64 [ %566, %563 ], [ 10, %568 ]
  %572 = phi i64 [ %567, %563 ], [ %569, %568 ]
  %573 = sub i64 %571, %572
  %574 = icmp ult i64 %573, %560
  br i1 %574, label %735, label %575

575:                                              ; preds = %570
  %576 = icmp eq i64 %560, 0
  br i1 %576, label %738, label %577

577:                                              ; preds = %575
  br i1 %562, label %578, label %580

578:                                              ; preds = %577
  %579 = load i16*, i16** %86, align 8
  br label %580

580:                                              ; preds = %577, %578
  %581 = phi i16* [ %579, %578 ], [ %85, %577 ]
  %582 = getelementptr inbounds i16, i16* %581, i64 %572
  %583 = icmp ult i64 %560, 16
  br i1 %583, label %673, label %584

584:                                              ; preds = %580
  %585 = add i64 %560, %572
  %586 = getelementptr i16, i16* %581, i64 %585
  %587 = getelementptr i16, i16* %559, i64 %560
  %588 = icmp ult i16* %582, %587
  %589 = icmp ult i16* %559, %586
  %590 = and i1 %588, %589
  br i1 %590, label %673, label %591

591:                                              ; preds = %584
  %592 = and i64 %560, -16
  %593 = sub i64 %560, %592
  %594 = getelementptr i16, i16* %559, i64 %592
  %595 = getelementptr i16, i16* %582, i64 %592
  %596 = add i64 %592, -16
  %597 = lshr exact i64 %596, 4
  %598 = add nuw nsw i64 %597, 1
  %599 = and i64 %598, 3
  %600 = icmp ult i64 %596, 48
  br i1 %600, label %652, label %601

601:                                              ; preds = %591
  %602 = sub nsw i64 %598, %599
  br label %603

603:                                              ; preds = %603, %601
  %604 = phi i64 [ 0, %601 ], [ %649, %603 ]
  %605 = phi i64 [ %602, %601 ], [ %650, %603 ]
  %606 = getelementptr i16, i16* %559, i64 %604
  %607 = getelementptr i16, i16* %582, i64 %604
  %608 = bitcast i16* %606 to <8 x i16>*
  %609 = load <8 x i16>, <8 x i16>* %608, align 2, !alias.scope !158
  %610 = getelementptr i16, i16* %606, i64 8
  %611 = bitcast i16* %610 to <8 x i16>*
  %612 = load <8 x i16>, <8 x i16>* %611, align 2, !alias.scope !158
  %613 = bitcast i16* %607 to <8 x i16>*
  store <8 x i16> %609, <8 x i16>* %613, align 2, !alias.scope !161, !noalias !158
  %614 = getelementptr i16, i16* %607, i64 8
  %615 = bitcast i16* %614 to <8 x i16>*
  store <8 x i16> %612, <8 x i16>* %615, align 2, !alias.scope !161, !noalias !158
  %616 = or i64 %604, 16
  %617 = getelementptr i16, i16* %559, i64 %616
  %618 = getelementptr i16, i16* %582, i64 %616
  %619 = bitcast i16* %617 to <8 x i16>*
  %620 = load <8 x i16>, <8 x i16>* %619, align 2, !alias.scope !158
  %621 = getelementptr i16, i16* %617, i64 8
  %622 = bitcast i16* %621 to <8 x i16>*
  %623 = load <8 x i16>, <8 x i16>* %622, align 2, !alias.scope !158
  %624 = bitcast i16* %618 to <8 x i16>*
  store <8 x i16> %620, <8 x i16>* %624, align 2, !alias.scope !161, !noalias !158
  %625 = getelementptr i16, i16* %618, i64 8
  %626 = bitcast i16* %625 to <8 x i16>*
  store <8 x i16> %623, <8 x i16>* %626, align 2, !alias.scope !161, !noalias !158
  %627 = or i64 %604, 32
  %628 = getelementptr i16, i16* %559, i64 %627
  %629 = getelementptr i16, i16* %582, i64 %627
  %630 = bitcast i16* %628 to <8 x i16>*
  %631 = load <8 x i16>, <8 x i16>* %630, align 2, !alias.scope !158
  %632 = getelementptr i16, i16* %628, i64 8
  %633 = bitcast i16* %632 to <8 x i16>*
  %634 = load <8 x i16>, <8 x i16>* %633, align 2, !alias.scope !158
  %635 = bitcast i16* %629 to <8 x i16>*
  store <8 x i16> %631, <8 x i16>* %635, align 2, !alias.scope !161, !noalias !158
  %636 = getelementptr i16, i16* %629, i64 8
  %637 = bitcast i16* %636 to <8 x i16>*
  store <8 x i16> %634, <8 x i16>* %637, align 2, !alias.scope !161, !noalias !158
  %638 = or i64 %604, 48
  %639 = getelementptr i16, i16* %559, i64 %638
  %640 = getelementptr i16, i16* %582, i64 %638
  %641 = bitcast i16* %639 to <8 x i16>*
  %642 = load <8 x i16>, <8 x i16>* %641, align 2, !alias.scope !158
  %643 = getelementptr i16, i16* %639, i64 8
  %644 = bitcast i16* %643 to <8 x i16>*
  %645 = load <8 x i16>, <8 x i16>* %644, align 2, !alias.scope !158
  %646 = bitcast i16* %640 to <8 x i16>*
  store <8 x i16> %642, <8 x i16>* %646, align 2, !alias.scope !161, !noalias !158
  %647 = getelementptr i16, i16* %640, i64 8
  %648 = bitcast i16* %647 to <8 x i16>*
  store <8 x i16> %645, <8 x i16>* %648, align 2, !alias.scope !161, !noalias !158
  %649 = add i64 %604, 64
  %650 = add i64 %605, -4
  %651 = icmp eq i64 %650, 0
  br i1 %651, label %652, label %603, !llvm.loop !163

652:                                              ; preds = %603, %591
  %653 = phi i64 [ 0, %591 ], [ %649, %603 ]
  %654 = icmp eq i64 %599, 0
  br i1 %654, label %671, label %655

655:                                              ; preds = %652, %655
  %656 = phi i64 [ %668, %655 ], [ %653, %652 ]
  %657 = phi i64 [ %669, %655 ], [ %599, %652 ]
  %658 = getelementptr i16, i16* %559, i64 %656
  %659 = getelementptr i16, i16* %582, i64 %656
  %660 = bitcast i16* %658 to <8 x i16>*
  %661 = load <8 x i16>, <8 x i16>* %660, align 2, !alias.scope !158
  %662 = getelementptr i16, i16* %658, i64 8
  %663 = bitcast i16* %662 to <8 x i16>*
  %664 = load <8 x i16>, <8 x i16>* %663, align 2, !alias.scope !158
  %665 = bitcast i16* %659 to <8 x i16>*
  store <8 x i16> %661, <8 x i16>* %665, align 2, !alias.scope !161, !noalias !158
  %666 = getelementptr i16, i16* %659, i64 8
  %667 = bitcast i16* %666 to <8 x i16>*
  store <8 x i16> %664, <8 x i16>* %667, align 2, !alias.scope !161, !noalias !158
  %668 = add i64 %656, 16
  %669 = add i64 %657, -1
  %670 = icmp eq i64 %669, 0
  br i1 %670, label %671, label %655, !llvm.loop !164

671:                                              ; preds = %655, %652
  %672 = icmp eq i64 %560, %592
  br i1 %672, label %726, label %673

673:                                              ; preds = %671, %584, %580
  %674 = phi i64 [ %560, %584 ], [ %560, %580 ], [ %593, %671 ]
  %675 = phi i16* [ %559, %584 ], [ %559, %580 ], [ %594, %671 ]
  %676 = phi i16* [ %582, %584 ], [ %582, %580 ], [ %595, %671 ]
  %677 = add i64 %674, -1
  %678 = and i64 %674, 7
  %679 = icmp eq i64 %678, 0
  br i1 %679, label %691, label %680

680:                                              ; preds = %673, %680
  %681 = phi i64 [ %686, %680 ], [ %674, %673 ]
  %682 = phi i16* [ %688, %680 ], [ %675, %673 ]
  %683 = phi i16* [ %687, %680 ], [ %676, %673 ]
  %684 = phi i64 [ %689, %680 ], [ %678, %673 ]
  %685 = load i16, i16* %682, align 2
  store i16 %685, i16* %683, align 2
  %686 = add i64 %681, -1
  %687 = getelementptr inbounds i16, i16* %683, i64 1
  %688 = getelementptr inbounds i16, i16* %682, i64 1
  %689 = add i64 %684, -1
  %690 = icmp eq i64 %689, 0
  br i1 %690, label %691, label %680, !llvm.loop !165

691:                                              ; preds = %680, %673
  %692 = phi i64 [ %674, %673 ], [ %686, %680 ]
  %693 = phi i16* [ %675, %673 ], [ %688, %680 ]
  %694 = phi i16* [ %676, %673 ], [ %687, %680 ]
  %695 = icmp ult i64 %677, 7
  br i1 %695, label %726, label %696

696:                                              ; preds = %691, %696
  %697 = phi i64 [ %722, %696 ], [ %692, %691 ]
  %698 = phi i16* [ %724, %696 ], [ %693, %691 ]
  %699 = phi i16* [ %723, %696 ], [ %694, %691 ]
  %700 = load i16, i16* %698, align 2
  store i16 %700, i16* %699, align 2
  %701 = getelementptr inbounds i16, i16* %699, i64 1
  %702 = getelementptr inbounds i16, i16* %698, i64 1
  %703 = load i16, i16* %702, align 2
  store i16 %703, i16* %701, align 2
  %704 = getelementptr inbounds i16, i16* %699, i64 2
  %705 = getelementptr inbounds i16, i16* %698, i64 2
  %706 = load i16, i16* %705, align 2
  store i16 %706, i16* %704, align 2
  %707 = getelementptr inbounds i16, i16* %699, i64 3
  %708 = getelementptr inbounds i16, i16* %698, i64 3
  %709 = load i16, i16* %708, align 2
  store i16 %709, i16* %707, align 2
  %710 = getelementptr inbounds i16, i16* %699, i64 4
  %711 = getelementptr inbounds i16, i16* %698, i64 4
  %712 = load i16, i16* %711, align 2
  store i16 %712, i16* %710, align 2
  %713 = getelementptr inbounds i16, i16* %699, i64 5
  %714 = getelementptr inbounds i16, i16* %698, i64 5
  %715 = load i16, i16* %714, align 2
  store i16 %715, i16* %713, align 2
  %716 = getelementptr inbounds i16, i16* %699, i64 6
  %717 = getelementptr inbounds i16, i16* %698, i64 6
  %718 = load i16, i16* %717, align 2
  store i16 %718, i16* %716, align 2
  %719 = getelementptr inbounds i16, i16* %699, i64 7
  %720 = getelementptr inbounds i16, i16* %698, i64 7
  %721 = load i16, i16* %720, align 2
  store i16 %721, i16* %719, align 2
  %722 = add i64 %697, -8
  %723 = getelementptr inbounds i16, i16* %699, i64 8
  %724 = getelementptr inbounds i16, i16* %698, i64 8
  %725 = icmp eq i64 %722, 0
  br i1 %725, label %726, label %696, !llvm.loop !166

726:                                              ; preds = %691, %696, %671
  %727 = add i64 %572, %560
  %728 = load i8, i8* %16, align 1
  %729 = icmp slt i8 %728, 0
  br i1 %729, label %730, label %731

730:                                              ; preds = %726
  store i64 %727, i64* %84, align 8
  br label %733

731:                                              ; preds = %726
  %732 = trunc i64 %727 to i8
  store i8 %732, i8* %16, align 1
  br label %733

733:                                              ; preds = %731, %730
  %734 = getelementptr inbounds i16, i16* %581, i64 %727
  store i16 0, i16* %734, align 2
  br label %738

735:                                              ; preds = %570
  %736 = add i64 %572, %560
  %737 = sub i64 %736, %571
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %4, i64 %571, i64 %737, i64 %572, i64 %572, i64 0, i64 %560, i16* %559) #10
  br label %738

738:                                              ; preds = %550, %735, %733, %575
  %739 = phi i8 [ %541, %735 ], [ %541, %575 ], [ %541, %733 ], [ 1, %550 ]
  %740 = load i8, i8* %69, align 1
  %741 = icmp slt i8 %740, 0
  br i1 %741, label %742, label %744

742:                                              ; preds = %738
  %743 = load i8*, i8** %73, align 8
  call void @_ZdlPv(i8* %743) #12
  br label %744

744:                                              ; preds = %742, %738
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #10
  br i1 %552, label %745, label %774

745:                                              ; preds = %744
  %746 = load i8, i8* %16, align 1
  %747 = icmp slt i8 %746, 0
  br i1 %747, label %748, label %753

748:                                              ; preds = %745
  %749 = load i64, i64* %83, align 8
  %750 = and i64 %749, 9223372036854775807
  %751 = add nsw i64 %750, -1
  %752 = load i64, i64* %84, align 8
  br label %755

753:                                              ; preds = %745
  %754 = zext i8 %746 to i64
  br label %755

755:                                              ; preds = %753, %748
  %756 = phi i64 [ %751, %748 ], [ 10, %753 ]
  %757 = phi i64 [ %752, %748 ], [ %754, %753 ]
  %758 = icmp eq i64 %756, %757
  br i1 %758, label %773, label %759

759:                                              ; preds = %755
  br i1 %747, label %760, label %762

760:                                              ; preds = %759
  %761 = load i16*, i16** %86, align 8
  br label %762

762:                                              ; preds = %759, %760
  %763 = phi i16* [ %761, %760 ], [ %85, %759 ]
  %764 = getelementptr inbounds i16, i16* %763, i64 %757
  store i16 10, i16* %764, align 2
  %765 = add i64 %757, 1
  %766 = load i8, i8* %16, align 1
  %767 = icmp slt i8 %766, 0
  br i1 %767, label %768, label %769

768:                                              ; preds = %762
  store i64 %765, i64* %84, align 8
  br label %771

769:                                              ; preds = %762
  %770 = trunc i64 %765 to i8
  store i8 %770, i8* %16, align 1
  br label %771

771:                                              ; preds = %769, %768
  %772 = getelementptr inbounds i16, i16* %763, i64 %765
  store i16 0, i16* %772, align 2
  br label %774

773:                                              ; preds = %755
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %4, i64 %756, i64 1, i64 %756, i64 %756, i64 0, i64 1, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str.4, i64 0, i64 0)) #10
  br label %774

774:                                              ; preds = %744, %771, %773
  %775 = phi i8 [ %739, %773 ], [ %739, %771 ], [ 1, %744 ]
  %776 = add i64 %539, 1
  %777 = load i64, i64* %62, align 8
  %778 = load i32, i32* %63, align 8
  br label %779

779:                                              ; preds = %774, %538
  %780 = phi i64 [ %539, %538 ], [ %776, %774 ]
  %781 = phi i64 [ %540, %538 ], [ 0, %774 ]
  %782 = phi i8 [ %541, %538 ], [ %775, %774 ]
  %783 = phi i64 [ %544, %538 ], [ %777, %774 ]
  %784 = phi i32 [ %543, %538 ], [ %778, %774 ]
  %785 = call zeroext i1 @_ZN4base4i18n17UTF16CharIterator7AdvanceEv(%"class.base::i18n::UTF16CharIterator"* nonnull %6) #10
  %786 = load i64, i64* %62, align 8
  %787 = load i64, i64* %61, align 8
  %788 = icmp eq i64 %786, %787
  br i1 %788, label %789, label %538

789:                                              ; preds = %779, %532
  %790 = phi i64 [ %286, %532 ], [ %780, %779 ]
  %791 = phi i64 [ %287, %532 ], [ %781, %779 ]
  %792 = phi i8 [ %288, %532 ], [ %782, %779 ]
  %793 = phi i64 [ 0, %532 ], [ %783, %779 ]
  %794 = phi i64 [ %535, %532 ], [ %786, %779 ]
  %795 = icmp eq i64 %794, %793
  br i1 %795, label %995, label %796

796:                                              ; preds = %789
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #10
  %797 = sub i64 %794, %793
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11, i64 %793, i64 %797, %"class.std::__1::allocator"* nonnull dereferenceable(1) %67) #10
  %798 = icmp ult i64 %790, %1
  br i1 %798, label %799, label %984

799:                                              ; preds = %796
  %800 = load i8, i8* %76, align 1
  %801 = icmp slt i8 %800, 0
  %802 = load i16*, i16** %77, align 8
  %803 = load i64, i64* %78, align 8
  %804 = zext i8 %800 to i64
  %805 = select i1 %801, i16* %802, i16* %79
  %806 = select i1 %801, i64 %803, i64 %804
  %807 = load i8, i8* %16, align 1
  %808 = icmp slt i8 %807, 0
  br i1 %808, label %809, label %814

809:                                              ; preds = %799
  %810 = load i64, i64* %83, align 8
  %811 = and i64 %810, 9223372036854775807
  %812 = add nsw i64 %811, -1
  %813 = load i64, i64* %84, align 8
  br label %816

814:                                              ; preds = %799
  %815 = zext i8 %807 to i64
  br label %816

816:                                              ; preds = %814, %809
  %817 = phi i64 [ %812, %809 ], [ 10, %814 ]
  %818 = phi i64 [ %813, %809 ], [ %815, %814 ]
  %819 = sub i64 %817, %818
  %820 = icmp ult i64 %819, %806
  br i1 %820, label %981, label %821

821:                                              ; preds = %816
  %822 = icmp eq i64 %806, 0
  br i1 %822, label %984, label %823

823:                                              ; preds = %821
  br i1 %808, label %824, label %826

824:                                              ; preds = %823
  %825 = load i16*, i16** %86, align 8
  br label %826

826:                                              ; preds = %823, %824
  %827 = phi i16* [ %825, %824 ], [ %85, %823 ]
  %828 = getelementptr inbounds i16, i16* %827, i64 %818
  %829 = icmp ult i64 %806, 16
  br i1 %829, label %919, label %830

830:                                              ; preds = %826
  %831 = add i64 %806, %818
  %832 = getelementptr i16, i16* %827, i64 %831
  %833 = getelementptr i16, i16* %805, i64 %806
  %834 = icmp ult i16* %828, %833
  %835 = icmp ult i16* %805, %832
  %836 = and i1 %834, %835
  br i1 %836, label %919, label %837

837:                                              ; preds = %830
  %838 = and i64 %806, -16
  %839 = sub i64 %806, %838
  %840 = getelementptr i16, i16* %805, i64 %838
  %841 = getelementptr i16, i16* %828, i64 %838
  %842 = add i64 %838, -16
  %843 = lshr exact i64 %842, 4
  %844 = add nuw nsw i64 %843, 1
  %845 = and i64 %844, 3
  %846 = icmp ult i64 %842, 48
  br i1 %846, label %898, label %847

847:                                              ; preds = %837
  %848 = sub nsw i64 %844, %845
  br label %849

849:                                              ; preds = %849, %847
  %850 = phi i64 [ 0, %847 ], [ %895, %849 ]
  %851 = phi i64 [ %848, %847 ], [ %896, %849 ]
  %852 = getelementptr i16, i16* %805, i64 %850
  %853 = getelementptr i16, i16* %828, i64 %850
  %854 = bitcast i16* %852 to <8 x i16>*
  %855 = load <8 x i16>, <8 x i16>* %854, align 2, !alias.scope !167
  %856 = getelementptr i16, i16* %852, i64 8
  %857 = bitcast i16* %856 to <8 x i16>*
  %858 = load <8 x i16>, <8 x i16>* %857, align 2, !alias.scope !167
  %859 = bitcast i16* %853 to <8 x i16>*
  store <8 x i16> %855, <8 x i16>* %859, align 2, !alias.scope !170, !noalias !167
  %860 = getelementptr i16, i16* %853, i64 8
  %861 = bitcast i16* %860 to <8 x i16>*
  store <8 x i16> %858, <8 x i16>* %861, align 2, !alias.scope !170, !noalias !167
  %862 = or i64 %850, 16
  %863 = getelementptr i16, i16* %805, i64 %862
  %864 = getelementptr i16, i16* %828, i64 %862
  %865 = bitcast i16* %863 to <8 x i16>*
  %866 = load <8 x i16>, <8 x i16>* %865, align 2, !alias.scope !167
  %867 = getelementptr i16, i16* %863, i64 8
  %868 = bitcast i16* %867 to <8 x i16>*
  %869 = load <8 x i16>, <8 x i16>* %868, align 2, !alias.scope !167
  %870 = bitcast i16* %864 to <8 x i16>*
  store <8 x i16> %866, <8 x i16>* %870, align 2, !alias.scope !170, !noalias !167
  %871 = getelementptr i16, i16* %864, i64 8
  %872 = bitcast i16* %871 to <8 x i16>*
  store <8 x i16> %869, <8 x i16>* %872, align 2, !alias.scope !170, !noalias !167
  %873 = or i64 %850, 32
  %874 = getelementptr i16, i16* %805, i64 %873
  %875 = getelementptr i16, i16* %828, i64 %873
  %876 = bitcast i16* %874 to <8 x i16>*
  %877 = load <8 x i16>, <8 x i16>* %876, align 2, !alias.scope !167
  %878 = getelementptr i16, i16* %874, i64 8
  %879 = bitcast i16* %878 to <8 x i16>*
  %880 = load <8 x i16>, <8 x i16>* %879, align 2, !alias.scope !167
  %881 = bitcast i16* %875 to <8 x i16>*
  store <8 x i16> %877, <8 x i16>* %881, align 2, !alias.scope !170, !noalias !167
  %882 = getelementptr i16, i16* %875, i64 8
  %883 = bitcast i16* %882 to <8 x i16>*
  store <8 x i16> %880, <8 x i16>* %883, align 2, !alias.scope !170, !noalias !167
  %884 = or i64 %850, 48
  %885 = getelementptr i16, i16* %805, i64 %884
  %886 = getelementptr i16, i16* %828, i64 %884
  %887 = bitcast i16* %885 to <8 x i16>*
  %888 = load <8 x i16>, <8 x i16>* %887, align 2, !alias.scope !167
  %889 = getelementptr i16, i16* %885, i64 8
  %890 = bitcast i16* %889 to <8 x i16>*
  %891 = load <8 x i16>, <8 x i16>* %890, align 2, !alias.scope !167
  %892 = bitcast i16* %886 to <8 x i16>*
  store <8 x i16> %888, <8 x i16>* %892, align 2, !alias.scope !170, !noalias !167
  %893 = getelementptr i16, i16* %886, i64 8
  %894 = bitcast i16* %893 to <8 x i16>*
  store <8 x i16> %891, <8 x i16>* %894, align 2, !alias.scope !170, !noalias !167
  %895 = add i64 %850, 64
  %896 = add i64 %851, -4
  %897 = icmp eq i64 %896, 0
  br i1 %897, label %898, label %849, !llvm.loop !172

898:                                              ; preds = %849, %837
  %899 = phi i64 [ 0, %837 ], [ %895, %849 ]
  %900 = icmp eq i64 %845, 0
  br i1 %900, label %917, label %901

901:                                              ; preds = %898, %901
  %902 = phi i64 [ %914, %901 ], [ %899, %898 ]
  %903 = phi i64 [ %915, %901 ], [ %845, %898 ]
  %904 = getelementptr i16, i16* %805, i64 %902
  %905 = getelementptr i16, i16* %828, i64 %902
  %906 = bitcast i16* %904 to <8 x i16>*
  %907 = load <8 x i16>, <8 x i16>* %906, align 2, !alias.scope !167
  %908 = getelementptr i16, i16* %904, i64 8
  %909 = bitcast i16* %908 to <8 x i16>*
  %910 = load <8 x i16>, <8 x i16>* %909, align 2, !alias.scope !167
  %911 = bitcast i16* %905 to <8 x i16>*
  store <8 x i16> %907, <8 x i16>* %911, align 2, !alias.scope !170, !noalias !167
  %912 = getelementptr i16, i16* %905, i64 8
  %913 = bitcast i16* %912 to <8 x i16>*
  store <8 x i16> %910, <8 x i16>* %913, align 2, !alias.scope !170, !noalias !167
  %914 = add i64 %902, 16
  %915 = add i64 %903, -1
  %916 = icmp eq i64 %915, 0
  br i1 %916, label %917, label %901, !llvm.loop !173

917:                                              ; preds = %901, %898
  %918 = icmp eq i64 %806, %838
  br i1 %918, label %972, label %919

919:                                              ; preds = %917, %830, %826
  %920 = phi i64 [ %806, %830 ], [ %806, %826 ], [ %839, %917 ]
  %921 = phi i16* [ %805, %830 ], [ %805, %826 ], [ %840, %917 ]
  %922 = phi i16* [ %828, %830 ], [ %828, %826 ], [ %841, %917 ]
  %923 = add i64 %920, -1
  %924 = and i64 %920, 7
  %925 = icmp eq i64 %924, 0
  br i1 %925, label %937, label %926

926:                                              ; preds = %919, %926
  %927 = phi i64 [ %932, %926 ], [ %920, %919 ]
  %928 = phi i16* [ %934, %926 ], [ %921, %919 ]
  %929 = phi i16* [ %933, %926 ], [ %922, %919 ]
  %930 = phi i64 [ %935, %926 ], [ %924, %919 ]
  %931 = load i16, i16* %928, align 2
  store i16 %931, i16* %929, align 2
  %932 = add i64 %927, -1
  %933 = getelementptr inbounds i16, i16* %929, i64 1
  %934 = getelementptr inbounds i16, i16* %928, i64 1
  %935 = add i64 %930, -1
  %936 = icmp eq i64 %935, 0
  br i1 %936, label %937, label %926, !llvm.loop !174

937:                                              ; preds = %926, %919
  %938 = phi i64 [ %920, %919 ], [ %932, %926 ]
  %939 = phi i16* [ %921, %919 ], [ %934, %926 ]
  %940 = phi i16* [ %922, %919 ], [ %933, %926 ]
  %941 = icmp ult i64 %923, 7
  br i1 %941, label %972, label %942

942:                                              ; preds = %937, %942
  %943 = phi i64 [ %968, %942 ], [ %938, %937 ]
  %944 = phi i16* [ %970, %942 ], [ %939, %937 ]
  %945 = phi i16* [ %969, %942 ], [ %940, %937 ]
  %946 = load i16, i16* %944, align 2
  store i16 %946, i16* %945, align 2
  %947 = getelementptr inbounds i16, i16* %945, i64 1
  %948 = getelementptr inbounds i16, i16* %944, i64 1
  %949 = load i16, i16* %948, align 2
  store i16 %949, i16* %947, align 2
  %950 = getelementptr inbounds i16, i16* %945, i64 2
  %951 = getelementptr inbounds i16, i16* %944, i64 2
  %952 = load i16, i16* %951, align 2
  store i16 %952, i16* %950, align 2
  %953 = getelementptr inbounds i16, i16* %945, i64 3
  %954 = getelementptr inbounds i16, i16* %944, i64 3
  %955 = load i16, i16* %954, align 2
  store i16 %955, i16* %953, align 2
  %956 = getelementptr inbounds i16, i16* %945, i64 4
  %957 = getelementptr inbounds i16, i16* %944, i64 4
  %958 = load i16, i16* %957, align 2
  store i16 %958, i16* %956, align 2
  %959 = getelementptr inbounds i16, i16* %945, i64 5
  %960 = getelementptr inbounds i16, i16* %944, i64 5
  %961 = load i16, i16* %960, align 2
  store i16 %961, i16* %959, align 2
  %962 = getelementptr inbounds i16, i16* %945, i64 6
  %963 = getelementptr inbounds i16, i16* %944, i64 6
  %964 = load i16, i16* %963, align 2
  store i16 %964, i16* %962, align 2
  %965 = getelementptr inbounds i16, i16* %945, i64 7
  %966 = getelementptr inbounds i16, i16* %944, i64 7
  %967 = load i16, i16* %966, align 2
  store i16 %967, i16* %965, align 2
  %968 = add i64 %943, -8
  %969 = getelementptr inbounds i16, i16* %945, i64 8
  %970 = getelementptr inbounds i16, i16* %944, i64 8
  %971 = icmp eq i64 %968, 0
  br i1 %971, label %972, label %942, !llvm.loop !175

972:                                              ; preds = %937, %942, %917
  %973 = add i64 %818, %806
  %974 = load i8, i8* %16, align 1
  %975 = icmp slt i8 %974, 0
  br i1 %975, label %976, label %977

976:                                              ; preds = %972
  store i64 %973, i64* %84, align 8
  br label %979

977:                                              ; preds = %972
  %978 = trunc i64 %973 to i8
  store i8 %978, i8* %16, align 1
  br label %979

979:                                              ; preds = %977, %976
  %980 = getelementptr inbounds i16, i16* %827, i64 %973
  store i16 0, i16* %980, align 2
  br label %984

981:                                              ; preds = %816
  %982 = add i64 %818, %806
  %983 = sub i64 %982, %817
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %4, i64 %817, i64 %983, i64 %818, i64 %818, i64 0, i64 %806, i16* %805) #10
  br label %984

984:                                              ; preds = %796, %981, %979, %821
  %985 = phi i8 [ %792, %981 ], [ %792, %821 ], [ %792, %979 ], [ 1, %796 ]
  %986 = load i8, i8* %76, align 1
  %987 = icmp slt i8 %986, 0
  %988 = load i64, i64* %78, align 8
  %989 = zext i8 %986 to i64
  %990 = select i1 %987, i64 %988, i64 %989
  %991 = add i64 %990, %791
  br i1 %987, label %992, label %994

992:                                              ; preds = %984
  %993 = load i8*, i8** %80, align 8
  call void @_ZdlPv(i8* %993) #12
  br label %994

994:                                              ; preds = %992, %984
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #10
  br label %995

995:                                              ; preds = %994, %789
  %996 = phi i64 [ %791, %789 ], [ %991, %994 ]
  %997 = phi i8 [ %792, %789 ], [ %985, %994 ]
  call void @_ZN4base4i18n17UTF16CharIteratorD1Ev(%"class.base::i18n::UTF16CharIterator"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #10
  %998 = load i8, i8* %58, align 1
  br label %999

999:                                              ; preds = %995, %524
  %1000 = phi i64 [ %335, %524 ], [ %790, %995 ]
  %1001 = phi i64 [ %531, %524 ], [ %996, %995 ]
  %1002 = phi i8 [ %525, %524 ], [ %997, %995 ]
  %1003 = phi i8 [ %526, %524 ], [ %998, %995 ]
  %1004 = icmp slt i8 %1003, 0
  br i1 %1004, label %1005, label %1007

1005:                                             ; preds = %999
  %1006 = load i8*, i8** %81, align 8
  call void @_ZdlPv(i8* %1006) #12
  br label %1007

1007:                                             ; preds = %1005, %999
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #10
  %1008 = call zeroext i1 @_ZN4base4i18n13BreakIterator7AdvanceEv(%"class.base::i18n::BreakIterator"* nonnull %9) #10
  br i1 %1008, label %285, label %1009

1009:                                             ; preds = %1007, %283, %279
  %1010 = phi i64 [ %89, %283 ], [ %89, %279 ], [ %1000, %1007 ]
  %1011 = phi i8 [ %90, %283 ], [ %90, %279 ], [ %1002, %1007 ]
  call void @_ZN4base4i18n13BreakIteratorD1Ev(%"class.base::i18n::BreakIterator"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %50) #10
  br label %1012

1012:                                             ; preds = %116, %274, %276, %97, %1009
  %1013 = phi i64 [ %1010, %1009 ], [ %89, %97 ], [ %89, %276 ], [ %89, %274 ], [ %89, %116 ]
  %1014 = phi i8 [ %1011, %1009 ], [ 1, %97 ], [ %90, %276 ], [ %90, %274 ], [ %90, %116 ]
  %1015 = load i8, i8* %48, align 1
  %1016 = add i64 %1013, 1
  %1017 = icmp slt i8 %1015, 0
  br i1 %1017, label %1018, label %1020

1018:                                             ; preds = %1012
  %1019 = load i8*, i8** %82, align 8
  call void @_ZdlPv(i8* %1019) #12
  br label %1020

1020:                                             ; preds = %1018, %1012
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #10
  %1021 = call zeroext i1 @_ZN4base4i18n13BreakIterator7AdvanceEv(%"class.base::i18n::BreakIterator"* nonnull %12) #10
  br i1 %1021, label %88, label %1022

1022:                                             ; preds = %1020, %25, %43
  %1023 = phi i8 [ 0, %43 ], [ 0, %25 ], [ %1014, %1020 ]
  call void @_ZN4base4i18n13BreakIteratorD1Ev(%"class.base::i18n::BreakIterator"* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %26) #10
  %1024 = icmp eq i8 %1023, 0
  br i1 %1024, label %1065, label %1025

1025:                                             ; preds = %1022
  %1026 = load i8, i8* %16, align 1
  %1027 = icmp slt i8 %1026, 0
  br i1 %1027, label %1028, label %1035

1028:                                             ; preds = %1025
  %1029 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %1030 = load i64, i64* %1029, align 8
  %1031 = and i64 %1030, 9223372036854775807
  %1032 = add nsw i64 %1031, -1
  %1033 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1034 = load i64, i64* %1033, align 8
  br label %1037

1035:                                             ; preds = %1025
  %1036 = zext i8 %1026 to i64
  br label %1037

1037:                                             ; preds = %1035, %1028
  %1038 = phi i64 [ %1032, %1028 ], [ 10, %1035 ]
  %1039 = phi i64 [ %1034, %1028 ], [ %1036, %1035 ]
  %1040 = sub i64 %1038, %1039
  %1041 = icmp ult i64 %1040, 3
  br i1 %1041, label %1062, label %1042

1042:                                             ; preds = %1037
  br i1 %1027, label %1043, label %1046

1043:                                             ; preds = %1042
  %1044 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1045 = load i16*, i16** %1044, align 8
  br label %1048

1046:                                             ; preds = %1042
  %1047 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  br label %1048

1048:                                             ; preds = %1046, %1043
  %1049 = phi i16* [ %1045, %1043 ], [ %1047, %1046 ]
  %1050 = getelementptr inbounds i16, i16* %1049, i64 %1039
  store i16 46, i16* %1050, align 2
  %1051 = getelementptr inbounds i16, i16* %1050, i64 1
  store i16 46, i16* %1051, align 2
  %1052 = getelementptr inbounds i16, i16* %1051, i64 1
  store i16 46, i16* %1052, align 2
  %1053 = add i64 %1039, 3
  %1054 = load i8, i8* %16, align 1
  %1055 = icmp slt i8 %1054, 0
  br i1 %1055, label %1056, label %1058

1056:                                             ; preds = %1048
  %1057 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1053, i64* %1057, align 8
  br label %1060

1058:                                             ; preds = %1048
  %1059 = trunc i64 %1053 to i8
  store i8 %1059, i8* %16, align 1
  br label %1060

1060:                                             ; preds = %1058, %1056
  %1061 = getelementptr inbounds i16, i16* %1049, i64 %1053
  store i16 0, i16* %1061, align 2
  br label %1065

1062:                                             ; preds = %1037
  %1063 = add i64 %1039, 3
  %1064 = sub i64 %1063, %1038
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %4, i64 %1038, i64 %1064, i64 %1039, i64 %1039, i64 0, i64 3, i16* getelementptr inbounds ([4 x i16], [4 x i16]* @.str.2, i64 0, i64 0)) #10
  br label %1065

1065:                                             ; preds = %1022, %1060, %1062
  %1066 = phi i1 [ false, %1022 ], [ true, %1060 ], [ true, %1062 ]
  ret i1 %1066
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gfx18ElideRectangleTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListEfiNS_16WordWrapBehaviorEPNS0_6vectorIS6_NS4_IS6_EEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.gfx::FontList"* dereferenceable(8), float, i32, i32, %"class.std::__1::vector.124"*) local_unnamed_addr #0 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.base::i18n::BreakIterator", align 8
  %15 = alloca %"class.base::BasicStringPiece.139", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.base::i18n::BreakIterator", align 8
  %18 = alloca %"class.base::BasicStringPiece.139", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.gfx::(anonymous namespace)::RectangleText", align 8
  %21 = bitcast %"class.gfx::(anonymous namespace)::RectangleText"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %21) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 bitcast (%"class.gfx::(anonymous namespace)::RectangleText"* @__const._ZN3gfx18ElideRectangleTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListEfiNS_16WordWrapBehaviorEPNS0_6vectorIS6_NS4_IS6_EEEE.rect to i8*), i64 80, i1 false)
  %22 = getelementptr inbounds %"class.gfx::(anonymous namespace)::RectangleText", %"class.gfx::(anonymous namespace)::RectangleText"* %20, i64 0, i32 0
  store %"class.gfx::FontList"* %1, %"class.gfx::FontList"** %22, align 8
  %23 = getelementptr inbounds %"class.gfx::(anonymous namespace)::RectangleText", %"class.gfx::(anonymous namespace)::RectangleText"* %20, i64 0, i32 1
  %24 = tail call i32 @_ZNK3gfx8FontList9GetHeightEv(%"class.gfx::FontList"* %1) #10
  store i32 %24, i32* %23, align 8
  %25 = getelementptr inbounds %"class.gfx::(anonymous namespace)::RectangleText", %"class.gfx::(anonymous namespace)::RectangleText"* %20, i64 0, i32 2
  store float %2, float* %25, align 4
  %26 = getelementptr inbounds %"class.gfx::(anonymous namespace)::RectangleText", %"class.gfx::(anonymous namespace)::RectangleText"* %20, i64 0, i32 3
  store i32 %3, i32* %26, align 8
  %27 = getelementptr inbounds %"class.gfx::(anonymous namespace)::RectangleText", %"class.gfx::(anonymous namespace)::RectangleText"* %20, i64 0, i32 4
  store i32 %4, i32* %27, align 4
  %28 = getelementptr inbounds %"class.gfx::(anonymous namespace)::RectangleText", %"class.gfx::(anonymous namespace)::RectangleText"* %20, i64 0, i32 5
  %29 = getelementptr inbounds %"class.gfx::(anonymous namespace)::RectangleText", %"class.gfx::(anonymous namespace)::RectangleText"* %20, i64 0, i32 10
  %30 = bitcast float* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 33, i1 false) #10
  store %"class.std::__1::vector.124"* %5, %"class.std::__1::vector.124"** %29, align 8
  %31 = getelementptr inbounds %"class.gfx::(anonymous namespace)::RectangleText", %"class.gfx::(anonymous namespace)::RectangleText"* %20, i64 0, i32 11
  store i8 0, i8* %31, align 8
  %32 = getelementptr inbounds %"class.gfx::(anonymous namespace)::RectangleText", %"class.gfx::(anonymous namespace)::RectangleText"* %20, i64 0, i32 12
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %"class.gfx::(anonymous namespace)::RectangleText", %"class.gfx::(anonymous namespace)::RectangleText"* %20, i64 0, i32 13
  store i8 0, i8* %33, align 2
  %34 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %5, i64 0, i32 0, i32 0
  %35 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %5, i64 0, i32 0, i32 1
  %37 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %36, align 8
  %38 = icmp eq %"class.std::__1::basic_string"* %37, %35
  br i1 %38, label %51, label %39

39:                                               ; preds = %6, %49
  %40 = phi %"class.std::__1::basic_string"* [ %41, %49 ], [ %37, %6 ]
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 -1
  %42 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %42, i64 0, i32 1, i32 1
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %39
  %47 = bitcast %"class.std::__1::basic_string"* %41 to i8**
  %48 = load i8*, i8** %47, align 8
  tail call void @_ZdlPv(i8* %48) #12
  br label %49

49:                                               ; preds = %46, %39
  %50 = icmp eq %"class.std::__1::basic_string"* %41, %35
  br i1 %50, label %51, label %39

51:                                               ; preds = %49, %6
  store %"class.std::__1::basic_string"* %35, %"class.std::__1::basic_string"** %36, align 8
  %52 = bitcast %"class.base::i18n::BreakIterator"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %52) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 72, i1 false) #10
  %53 = bitcast %"class.base::BasicStringPiece.139"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #10
  %54 = getelementptr inbounds %"class.base::BasicStringPiece.139", %"class.base::BasicStringPiece.139"* %18, i64 0, i32 0
  %55 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %55, i64 0, i32 1, i32 1
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i16*, i16** %59, align 8
  %61 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %62 = select i1 %58, i16* %60, i16* %61
  store i16* %62, i16** %54, align 8
  %63 = getelementptr inbounds %"class.base::BasicStringPiece.139", %"class.base::BasicStringPiece.139"* %18, i64 0, i32 1
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = zext i8 %57 to i64
  %67 = select i1 %58, i64 %65, i64 %66
  store i64 %67, i64* %63, align 8
  call void @_ZN4base4i18n13BreakIteratorC1ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS1_9BreakTypeE(%"class.base::i18n::BreakIterator"* nonnull %17, %"class.base::BasicStringPiece.139"* nonnull dereferenceable(16) %18, i32 2) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #10
  %68 = call zeroext i1 @_ZN4base4i18n13BreakIterator4InitEv(%"class.base::i18n::BreakIterator"* nonnull %17) #10
  %69 = load i8, i8* %32, align 1
  %70 = icmp eq i8 %69, 0
  %71 = and i1 %68, %70
  br i1 %71, label %72, label %2143

72:                                               ; preds = %51
  %73 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %76 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %76, i64 0, i32 1, i32 1
  %78 = bitcast %"class.std::__1::basic_string"* %19 to i16*
  %79 = getelementptr inbounds %"class.gfx::(anonymous namespace)::RectangleText", %"class.gfx::(anonymous namespace)::RectangleText"* %20, i64 0, i32 8
  %80 = getelementptr inbounds %"class.gfx::(anonymous namespace)::RectangleText", %"class.gfx::(anonymous namespace)::RectangleText"* %20, i64 0, i32 6
  %81 = getelementptr inbounds %"class.gfx::(anonymous namespace)::RectangleText", %"class.gfx::(anonymous namespace)::RectangleText"* %20, i64 0, i32 7
  %82 = bitcast %"class.std::__1::basic_string"* %81 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %82, i64 0, i32 1, i32 1
  %84 = getelementptr inbounds %"class.gfx::(anonymous namespace)::RectangleText", %"class.gfx::(anonymous namespace)::RectangleText"* %20, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %85 = getelementptr inbounds %"class.gfx::(anonymous namespace)::RectangleText", %"class.gfx::(anonymous namespace)::RectangleText"* %20, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = bitcast %"class.std::__1::basic_string"* %81 to i16*
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.base::i18n::BreakIterator"* %14 to i8*
  %89 = bitcast %"class.base::BasicStringPiece.139"* %15 to i8*
  %90 = getelementptr inbounds %"class.base::BasicStringPiece.139", %"class.base::BasicStringPiece.139"* %15, i64 0, i32 0
  %91 = getelementptr inbounds %"class.base::BasicStringPiece.139", %"class.base::BasicStringPiece.139"* %15, i64 0, i32 1
  %92 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %93 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %94 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %94, i64 0, i32 1, i32 1
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = bitcast %"class.std::__1::basic_string"* %16 to i16*
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %99 = bitcast %"class.std::__1::basic_string"* %81 to i8*
  %100 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %103 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  %104 = bitcast %"class.std::__1::basic_string"* %8 to i16*
  %105 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %105, i64 0, i32 1, i32 1
  %107 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %110 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %110, i64 0, i32 1, i32 1
  %112 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %113 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::allocator"*
  %114 = bitcast %"class.std::__1::basic_string"* %9 to i8**
  %115 = bitcast %"class.std::__1::basic_string"* %9 to i16*
  %116 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %117 = bitcast float* %25 to i32*
  %118 = bitcast float* %28 to i32*
  %119 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %120 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %120, i64 0, i32 1, i32 1
  %124 = bitcast %"class.std::__1::basic_string"* %12 to i16*
  %125 = bitcast %"class.std::__1::basic_string"* %12 to i8**
  %126 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %127 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %126, i64 0, i32 1, i32 1
  %128 = bitcast %"class.std::__1::basic_string"* %13 to i8**
  %129 = bitcast %"class.std::__1::basic_string"* %16 to i8**
  %130 = bitcast %"class.std::__1::basic_string"* %19 to i8**
  br label %131

131:                                              ; preds = %2140, %72
  %132 = call zeroext i1 @_ZN4base4i18n13BreakIterator7AdvanceEv(%"class.base::i18n::BreakIterator"* nonnull %17) #10
  br i1 %132, label %133, label %2143

133:                                              ; preds = %131
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 24, i1 false) #10
  call void @_ZNK4base4i18n13BreakIterator9GetStringEv(%"class.std::__1::basic_string"* nonnull sret %19, %"class.base::i18n::BreakIterator"* nonnull %17) #10
  %134 = load i8, i8* %77, align 1
  %135 = icmp slt i8 %134, 0
  %136 = load i64, i64* %75, align 8
  %137 = zext i8 %134 to i64
  %138 = select i1 %135, i64 %136, i64 %137
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %133
  store i8 0, i8* %79, align 8
  br label %156

141:                                              ; preds = %133
  %142 = load i16*, i16** %74, align 8
  %143 = select i1 %135, i16* %142, i16* %78
  %144 = getelementptr inbounds i16, i16* %143, i64 -1
  %145 = getelementptr inbounds i16, i16* %144, i64 %138
  %146 = load i16, i16* %145, align 2
  %147 = icmp eq i16 %146, 10
  %148 = zext i1 %147 to i8
  store i8 %148, i8* %79, align 8
  br i1 %147, label %149, label %156

149:                                              ; preds = %141
  %150 = add i64 %138, -1
  br i1 %135, label %151, label %153

151:                                              ; preds = %149
  %152 = getelementptr inbounds i16, i16* %142, i64 %150
  store i16 0, i16* %152, align 2
  store i64 %150, i64* %75, align 8
  br label %156

153:                                              ; preds = %149
  %154 = getelementptr inbounds i16, i16* %78, i64 %150
  store i16 0, i16* %154, align 2
  %155 = trunc i64 %150 to i8
  store i8 %155, i8* %77, align 1
  br label %156

156:                                              ; preds = %153, %151, %141, %140
  %157 = load %"class.gfx::FontList"*, %"class.gfx::FontList"** %22, align 8
  %158 = call float @_ZN3gfx15GetStringWidthFERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %19, %"class.gfx::FontList"* dereferenceable(8) %157) #10
  %159 = load float, float* %25, align 4
  %160 = fcmp ugt float %158, %159
  br i1 %160, label %352, label %161

161:                                              ; preds = %156
  %162 = load i32, i32* %80, align 4
  %163 = load i32, i32* %26, align 8
  %164 = icmp slt i32 %162, %163
  br i1 %164, label %166, label %165

165:                                              ; preds = %161
  store i8 1, i8* %32, align 1
  br label %1930

166:                                              ; preds = %161
  %167 = load i8, i8* %77, align 1
  %168 = icmp slt i8 %167, 0
  %169 = load i16*, i16** %74, align 8
  %170 = load i64, i64* %75, align 8
  %171 = zext i8 %167 to i64
  %172 = select i1 %168, i16* %169, i16* %78
  %173 = select i1 %168, i64 %170, i64 %171
  %174 = load i8, i8* %83, align 1
  %175 = icmp slt i8 %174, 0
  br i1 %175, label %176, label %181

176:                                              ; preds = %166
  %177 = load i64, i64* %84, align 8
  %178 = and i64 %177, 9223372036854775807
  %179 = add nsw i64 %178, -1
  %180 = load i64, i64* %85, align 8
  br label %183

181:                                              ; preds = %166
  %182 = zext i8 %174 to i64
  br label %183

183:                                              ; preds = %181, %176
  %184 = phi i64 [ %179, %176 ], [ 10, %181 ]
  %185 = phi i64 [ %180, %176 ], [ %182, %181 ]
  %186 = sub i64 %184, %185
  %187 = icmp ult i64 %186, %173
  br i1 %187, label %346, label %188

188:                                              ; preds = %183
  %189 = icmp eq i64 %173, 0
  br i1 %189, label %349, label %190

190:                                              ; preds = %188
  %191 = load i16*, i16** %87, align 8
  %192 = select i1 %175, i16* %191, i16* %86
  %193 = getelementptr inbounds i16, i16* %192, i64 %185
  %194 = icmp ult i64 %173, 16
  br i1 %194, label %284, label %195

195:                                              ; preds = %190
  %196 = add i64 %173, %185
  %197 = getelementptr i16, i16* %192, i64 %196
  %198 = getelementptr i16, i16* %172, i64 %173
  %199 = icmp ult i16* %193, %198
  %200 = icmp ult i16* %172, %197
  %201 = and i1 %199, %200
  br i1 %201, label %284, label %202

202:                                              ; preds = %195
  %203 = and i64 %173, -16
  %204 = sub i64 %173, %203
  %205 = getelementptr i16, i16* %172, i64 %203
  %206 = getelementptr i16, i16* %193, i64 %203
  %207 = add i64 %203, -16
  %208 = lshr exact i64 %207, 4
  %209 = add nuw nsw i64 %208, 1
  %210 = and i64 %209, 3
  %211 = icmp ult i64 %207, 48
  br i1 %211, label %263, label %212

212:                                              ; preds = %202
  %213 = sub nsw i64 %209, %210
  br label %214

214:                                              ; preds = %214, %212
  %215 = phi i64 [ 0, %212 ], [ %260, %214 ]
  %216 = phi i64 [ %213, %212 ], [ %261, %214 ]
  %217 = getelementptr i16, i16* %172, i64 %215
  %218 = getelementptr i16, i16* %193, i64 %215
  %219 = bitcast i16* %217 to <8 x i16>*
  %220 = load <8 x i16>, <8 x i16>* %219, align 2, !alias.scope !176
  %221 = getelementptr i16, i16* %217, i64 8
  %222 = bitcast i16* %221 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2, !alias.scope !176
  %224 = bitcast i16* %218 to <8 x i16>*
  store <8 x i16> %220, <8 x i16>* %224, align 2, !alias.scope !179, !noalias !176
  %225 = getelementptr i16, i16* %218, i64 8
  %226 = bitcast i16* %225 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %226, align 2, !alias.scope !179, !noalias !176
  %227 = or i64 %215, 16
  %228 = getelementptr i16, i16* %172, i64 %227
  %229 = getelementptr i16, i16* %193, i64 %227
  %230 = bitcast i16* %228 to <8 x i16>*
  %231 = load <8 x i16>, <8 x i16>* %230, align 2, !alias.scope !176
  %232 = getelementptr i16, i16* %228, i64 8
  %233 = bitcast i16* %232 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2, !alias.scope !176
  %235 = bitcast i16* %229 to <8 x i16>*
  store <8 x i16> %231, <8 x i16>* %235, align 2, !alias.scope !179, !noalias !176
  %236 = getelementptr i16, i16* %229, i64 8
  %237 = bitcast i16* %236 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %237, align 2, !alias.scope !179, !noalias !176
  %238 = or i64 %215, 32
  %239 = getelementptr i16, i16* %172, i64 %238
  %240 = getelementptr i16, i16* %193, i64 %238
  %241 = bitcast i16* %239 to <8 x i16>*
  %242 = load <8 x i16>, <8 x i16>* %241, align 2, !alias.scope !176
  %243 = getelementptr i16, i16* %239, i64 8
  %244 = bitcast i16* %243 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2, !alias.scope !176
  %246 = bitcast i16* %240 to <8 x i16>*
  store <8 x i16> %242, <8 x i16>* %246, align 2, !alias.scope !179, !noalias !176
  %247 = getelementptr i16, i16* %240, i64 8
  %248 = bitcast i16* %247 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %248, align 2, !alias.scope !179, !noalias !176
  %249 = or i64 %215, 48
  %250 = getelementptr i16, i16* %172, i64 %249
  %251 = getelementptr i16, i16* %193, i64 %249
  %252 = bitcast i16* %250 to <8 x i16>*
  %253 = load <8 x i16>, <8 x i16>* %252, align 2, !alias.scope !176
  %254 = getelementptr i16, i16* %250, i64 8
  %255 = bitcast i16* %254 to <8 x i16>*
  %256 = load <8 x i16>, <8 x i16>* %255, align 2, !alias.scope !176
  %257 = bitcast i16* %251 to <8 x i16>*
  store <8 x i16> %253, <8 x i16>* %257, align 2, !alias.scope !179, !noalias !176
  %258 = getelementptr i16, i16* %251, i64 8
  %259 = bitcast i16* %258 to <8 x i16>*
  store <8 x i16> %256, <8 x i16>* %259, align 2, !alias.scope !179, !noalias !176
  %260 = add i64 %215, 64
  %261 = add i64 %216, -4
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %263, label %214, !llvm.loop !181

263:                                              ; preds = %214, %202
  %264 = phi i64 [ 0, %202 ], [ %260, %214 ]
  %265 = icmp eq i64 %210, 0
  br i1 %265, label %282, label %266

266:                                              ; preds = %263, %266
  %267 = phi i64 [ %279, %266 ], [ %264, %263 ]
  %268 = phi i64 [ %280, %266 ], [ %210, %263 ]
  %269 = getelementptr i16, i16* %172, i64 %267
  %270 = getelementptr i16, i16* %193, i64 %267
  %271 = bitcast i16* %269 to <8 x i16>*
  %272 = load <8 x i16>, <8 x i16>* %271, align 2, !alias.scope !176
  %273 = getelementptr i16, i16* %269, i64 8
  %274 = bitcast i16* %273 to <8 x i16>*
  %275 = load <8 x i16>, <8 x i16>* %274, align 2, !alias.scope !176
  %276 = bitcast i16* %270 to <8 x i16>*
  store <8 x i16> %272, <8 x i16>* %276, align 2, !alias.scope !179, !noalias !176
  %277 = getelementptr i16, i16* %270, i64 8
  %278 = bitcast i16* %277 to <8 x i16>*
  store <8 x i16> %275, <8 x i16>* %278, align 2, !alias.scope !179, !noalias !176
  %279 = add i64 %267, 16
  %280 = add i64 %268, -1
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %282, label %266, !llvm.loop !182

282:                                              ; preds = %266, %263
  %283 = icmp eq i64 %173, %203
  br i1 %283, label %337, label %284

284:                                              ; preds = %282, %195, %190
  %285 = phi i64 [ %173, %195 ], [ %173, %190 ], [ %204, %282 ]
  %286 = phi i16* [ %172, %195 ], [ %172, %190 ], [ %205, %282 ]
  %287 = phi i16* [ %193, %195 ], [ %193, %190 ], [ %206, %282 ]
  %288 = add i64 %285, -1
  %289 = and i64 %285, 7
  %290 = icmp eq i64 %289, 0
  br i1 %290, label %302, label %291

291:                                              ; preds = %284, %291
  %292 = phi i64 [ %297, %291 ], [ %285, %284 ]
  %293 = phi i16* [ %299, %291 ], [ %286, %284 ]
  %294 = phi i16* [ %298, %291 ], [ %287, %284 ]
  %295 = phi i64 [ %300, %291 ], [ %289, %284 ]
  %296 = load i16, i16* %293, align 2
  store i16 %296, i16* %294, align 2
  %297 = add i64 %292, -1
  %298 = getelementptr inbounds i16, i16* %294, i64 1
  %299 = getelementptr inbounds i16, i16* %293, i64 1
  %300 = add i64 %295, -1
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %291, !llvm.loop !183

302:                                              ; preds = %291, %284
  %303 = phi i64 [ %285, %284 ], [ %297, %291 ]
  %304 = phi i16* [ %286, %284 ], [ %299, %291 ]
  %305 = phi i16* [ %287, %284 ], [ %298, %291 ]
  %306 = icmp ult i64 %288, 7
  br i1 %306, label %337, label %307

307:                                              ; preds = %302, %307
  %308 = phi i64 [ %333, %307 ], [ %303, %302 ]
  %309 = phi i16* [ %335, %307 ], [ %304, %302 ]
  %310 = phi i16* [ %334, %307 ], [ %305, %302 ]
  %311 = load i16, i16* %309, align 2
  store i16 %311, i16* %310, align 2
  %312 = getelementptr inbounds i16, i16* %310, i64 1
  %313 = getelementptr inbounds i16, i16* %309, i64 1
  %314 = load i16, i16* %313, align 2
  store i16 %314, i16* %312, align 2
  %315 = getelementptr inbounds i16, i16* %310, i64 2
  %316 = getelementptr inbounds i16, i16* %309, i64 2
  %317 = load i16, i16* %316, align 2
  store i16 %317, i16* %315, align 2
  %318 = getelementptr inbounds i16, i16* %310, i64 3
  %319 = getelementptr inbounds i16, i16* %309, i64 3
  %320 = load i16, i16* %319, align 2
  store i16 %320, i16* %318, align 2
  %321 = getelementptr inbounds i16, i16* %310, i64 4
  %322 = getelementptr inbounds i16, i16* %309, i64 4
  %323 = load i16, i16* %322, align 2
  store i16 %323, i16* %321, align 2
  %324 = getelementptr inbounds i16, i16* %310, i64 5
  %325 = getelementptr inbounds i16, i16* %309, i64 5
  %326 = load i16, i16* %325, align 2
  store i16 %326, i16* %324, align 2
  %327 = getelementptr inbounds i16, i16* %310, i64 6
  %328 = getelementptr inbounds i16, i16* %309, i64 6
  %329 = load i16, i16* %328, align 2
  store i16 %329, i16* %327, align 2
  %330 = getelementptr inbounds i16, i16* %310, i64 7
  %331 = getelementptr inbounds i16, i16* %309, i64 7
  %332 = load i16, i16* %331, align 2
  store i16 %332, i16* %330, align 2
  %333 = add i64 %308, -8
  %334 = getelementptr inbounds i16, i16* %310, i64 8
  %335 = getelementptr inbounds i16, i16* %309, i64 8
  %336 = icmp eq i64 %333, 0
  br i1 %336, label %337, label %307, !llvm.loop !184

337:                                              ; preds = %302, %307, %282
  %338 = add i64 %185, %173
  %339 = load i8, i8* %83, align 1
  %340 = icmp slt i8 %339, 0
  br i1 %340, label %341, label %342

341:                                              ; preds = %337
  store i64 %338, i64* %85, align 8
  br label %344

342:                                              ; preds = %337
  %343 = trunc i64 %338 to i8
  store i8 %343, i8* %83, align 1
  br label %344

344:                                              ; preds = %342, %341
  %345 = getelementptr inbounds i16, i16* %192, i64 %338
  store i16 0, i16* %345, align 2
  br label %349

346:                                              ; preds = %183
  %347 = add i64 %185, %173
  %348 = sub i64 %347, %184
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %81, i64 %184, i64 %348, i64 %185, i64 %185, i64 0, i64 %173, i16* %172) #10
  br label %349

349:                                              ; preds = %346, %344, %188
  %350 = load float, float* %28, align 8
  %351 = fadd float %158, %350
  store float %351, float* %28, align 8
  br label %1930

352:                                              ; preds = %156
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %88) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 -86, i64 72, i1 false) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %89) #10
  %353 = load i8, i8* %77, align 1
  %354 = icmp slt i8 %353, 0
  %355 = load i16*, i16** %74, align 8
  %356 = select i1 %354, i16* %355, i16* %78
  store i16* %356, i16** %90, align 8
  %357 = load i64, i64* %75, align 8
  %358 = zext i8 %353 to i64
  %359 = select i1 %354, i64 %357, i64 %358
  store i64 %359, i64* %91, align 8
  call void @_ZN4base4i18n13BreakIteratorC1ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS1_9BreakTypeE(%"class.base::i18n::BreakIterator"* nonnull %14, %"class.base::BasicStringPiece.139"* nonnull dereferenceable(16) %15, i32 1) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %89) #10
  %360 = call zeroext i1 @_ZN4base4i18n13BreakIterator4InitEv(%"class.base::i18n::BreakIterator"* nonnull %14) #10
  br i1 %360, label %361, label %1929

361:                                              ; preds = %352
  %362 = call zeroext i1 @_ZN4base4i18n13BreakIterator7AdvanceEv(%"class.base::i18n::BreakIterator"* nonnull %14) #10
  br i1 %362, label %363, label %1929

363:                                              ; preds = %361, %1927
  %364 = load i8, i8* %83, align 1
  %365 = icmp slt i8 %364, 0
  %366 = load i64, i64* %85, align 8
  %367 = zext i8 %364 to i64
  %368 = select i1 %365, i64 %366, i64 %367
  %369 = icmp eq i64 %368, 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #10
  call void @_ZNK4base4i18n13BreakIterator9GetStringEv(%"class.std::__1::basic_string"* nonnull sret %16, %"class.base::i18n::BreakIterator"* nonnull %14) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 0, i64 24, i1 false) #10
  %370 = load i8, i8* %95, align 1
  %371 = icmp slt i8 %370, 0
  %372 = load i16*, i16** %96, align 8
  %373 = select i1 %371, i16* %372, i16* %97
  %374 = load i64, i64* %98, align 8
  %375 = zext i8 %370 to i64
  %376 = select i1 %371, i64 %374, i64 %375
  %377 = call i32 @_ZN4base14TrimWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS_13TrimPositionsEPNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16* %373, i64 %376, i32 2, %"class.std::__1::basic_string"* nonnull %13) #10
  %378 = load %"class.gfx::FontList"*, %"class.gfx::FontList"** %22, align 8
  %379 = call float @_ZN3gfx15GetStringWidthFERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %13, %"class.gfx::FontList"* dereferenceable(8) %378) #10
  %380 = load float, float* %25, align 4
  %381 = fcmp ugt float %379, %380
  br i1 %381, label %791, label %382

382:                                              ; preds = %363
  %383 = load float, float* %28, align 8
  %384 = fadd float %379, %383
  %385 = fcmp ogt float %384, %380
  br i1 %385, label %386, label %597

386:                                              ; preds = %382
  %387 = load i32, i32* %80, align 4
  %388 = load i32, i32* %26, align 8
  %389 = icmp slt i32 %387, %388
  br i1 %389, label %390, label %587

390:                                              ; preds = %386
  %391 = load %"class.std::__1::vector.124"*, %"class.std::__1::vector.124"** %29, align 8
  %392 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %391, i64 0, i32 0, i32 1
  %393 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %392, align 8
  %394 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %391, i64 0, i32 0, i32 2, i32 0, i32 0
  %395 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %394, align 8
  %396 = icmp eq %"class.std::__1::basic_string"* %393, %395
  br i1 %396, label %580, label %397

397:                                              ; preds = %390
  %398 = load i8, i8* %83, align 1
  %399 = icmp slt i8 %398, 0
  br i1 %399, label %402, label %400

400:                                              ; preds = %397
  %401 = bitcast %"class.std::__1::basic_string"* %393 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %401, i8* align 8 %99, i64 24, i1 false) #10
  br label %576

402:                                              ; preds = %397
  %403 = load i16*, i16** %87, align 8
  %404 = load i64, i64* %85, align 8
  %405 = icmp ult i64 %404, 11
  br i1 %405, label %406, label %411

406:                                              ; preds = %402
  %407 = bitcast %"class.std::__1::basic_string"* %393 to i16*
  %408 = trunc i64 %404 to i8
  %409 = bitcast %"class.std::__1::basic_string"* %393 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %410 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %409, i64 0, i32 1, i32 1
  store i8 %408, i8* %410, align 1
  br label %428

411:                                              ; preds = %402
  %412 = icmp ugt i64 %404, 9223372036854775791
  br i1 %412, label %413, label %415

413:                                              ; preds = %411
  %414 = bitcast %"class.std::__1::basic_string"* %393 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %414) #11
  unreachable

415:                                              ; preds = %411
  %416 = add nuw nsw i64 %404, 8
  %417 = and i64 %416, -8
  %418 = icmp slt i64 %417, 0
  br i1 %418, label %419, label %420

419:                                              ; preds = %415
  call void @abort() #11
  unreachable

420:                                              ; preds = %415
  %421 = shl i64 %417, 1
  %422 = call i8* @_Znwm(i64 %421) #12
  %423 = bitcast i8* %422 to i16*
  %424 = bitcast %"class.std::__1::basic_string"* %393 to i8**
  store i8* %422, i8** %424, align 8
  %425 = or i64 %417, -9223372036854775808
  %426 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %393, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %425, i64* %426, align 8
  %427 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %393, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %404, i64* %427, align 8
  br label %428

428:                                              ; preds = %420, %406
  %429 = phi i16* [ %407, %406 ], [ %423, %420 ]
  %430 = add nuw nsw i64 %404, 1
  %431 = add i64 %404, 1
  %432 = icmp ult i64 %431, 16
  br i1 %432, label %523, label %433

433:                                              ; preds = %428
  %434 = getelementptr i16, i16* %429, i64 1
  %435 = getelementptr i16, i16* %434, i64 %404
  %436 = getelementptr i16, i16* %403, i64 1
  %437 = getelementptr i16, i16* %436, i64 %404
  %438 = icmp ult i16* %429, %437
  %439 = icmp ult i16* %403, %435
  %440 = and i1 %438, %439
  br i1 %440, label %523, label %441

441:                                              ; preds = %433
  %442 = and i64 %431, -16
  %443 = sub i64 %430, %442
  %444 = getelementptr i16, i16* %403, i64 %442
  %445 = getelementptr i16, i16* %429, i64 %442
  %446 = add i64 %442, -16
  %447 = lshr exact i64 %446, 4
  %448 = add nuw nsw i64 %447, 1
  %449 = and i64 %448, 3
  %450 = icmp ult i64 %446, 48
  br i1 %450, label %502, label %451

451:                                              ; preds = %441
  %452 = sub nsw i64 %448, %449
  br label %453

453:                                              ; preds = %453, %451
  %454 = phi i64 [ 0, %451 ], [ %499, %453 ]
  %455 = phi i64 [ %452, %451 ], [ %500, %453 ]
  %456 = getelementptr i16, i16* %403, i64 %454
  %457 = getelementptr i16, i16* %429, i64 %454
  %458 = bitcast i16* %456 to <8 x i16>*
  %459 = load <8 x i16>, <8 x i16>* %458, align 2, !alias.scope !185
  %460 = getelementptr i16, i16* %456, i64 8
  %461 = bitcast i16* %460 to <8 x i16>*
  %462 = load <8 x i16>, <8 x i16>* %461, align 2, !alias.scope !185
  %463 = bitcast i16* %457 to <8 x i16>*
  store <8 x i16> %459, <8 x i16>* %463, align 2, !alias.scope !188, !noalias !185
  %464 = getelementptr i16, i16* %457, i64 8
  %465 = bitcast i16* %464 to <8 x i16>*
  store <8 x i16> %462, <8 x i16>* %465, align 2, !alias.scope !188, !noalias !185
  %466 = or i64 %454, 16
  %467 = getelementptr i16, i16* %403, i64 %466
  %468 = getelementptr i16, i16* %429, i64 %466
  %469 = bitcast i16* %467 to <8 x i16>*
  %470 = load <8 x i16>, <8 x i16>* %469, align 2, !alias.scope !185
  %471 = getelementptr i16, i16* %467, i64 8
  %472 = bitcast i16* %471 to <8 x i16>*
  %473 = load <8 x i16>, <8 x i16>* %472, align 2, !alias.scope !185
  %474 = bitcast i16* %468 to <8 x i16>*
  store <8 x i16> %470, <8 x i16>* %474, align 2, !alias.scope !188, !noalias !185
  %475 = getelementptr i16, i16* %468, i64 8
  %476 = bitcast i16* %475 to <8 x i16>*
  store <8 x i16> %473, <8 x i16>* %476, align 2, !alias.scope !188, !noalias !185
  %477 = or i64 %454, 32
  %478 = getelementptr i16, i16* %403, i64 %477
  %479 = getelementptr i16, i16* %429, i64 %477
  %480 = bitcast i16* %478 to <8 x i16>*
  %481 = load <8 x i16>, <8 x i16>* %480, align 2, !alias.scope !185
  %482 = getelementptr i16, i16* %478, i64 8
  %483 = bitcast i16* %482 to <8 x i16>*
  %484 = load <8 x i16>, <8 x i16>* %483, align 2, !alias.scope !185
  %485 = bitcast i16* %479 to <8 x i16>*
  store <8 x i16> %481, <8 x i16>* %485, align 2, !alias.scope !188, !noalias !185
  %486 = getelementptr i16, i16* %479, i64 8
  %487 = bitcast i16* %486 to <8 x i16>*
  store <8 x i16> %484, <8 x i16>* %487, align 2, !alias.scope !188, !noalias !185
  %488 = or i64 %454, 48
  %489 = getelementptr i16, i16* %403, i64 %488
  %490 = getelementptr i16, i16* %429, i64 %488
  %491 = bitcast i16* %489 to <8 x i16>*
  %492 = load <8 x i16>, <8 x i16>* %491, align 2, !alias.scope !185
  %493 = getelementptr i16, i16* %489, i64 8
  %494 = bitcast i16* %493 to <8 x i16>*
  %495 = load <8 x i16>, <8 x i16>* %494, align 2, !alias.scope !185
  %496 = bitcast i16* %490 to <8 x i16>*
  store <8 x i16> %492, <8 x i16>* %496, align 2, !alias.scope !188, !noalias !185
  %497 = getelementptr i16, i16* %490, i64 8
  %498 = bitcast i16* %497 to <8 x i16>*
  store <8 x i16> %495, <8 x i16>* %498, align 2, !alias.scope !188, !noalias !185
  %499 = add i64 %454, 64
  %500 = add i64 %455, -4
  %501 = icmp eq i64 %500, 0
  br i1 %501, label %502, label %453, !llvm.loop !190

502:                                              ; preds = %453, %441
  %503 = phi i64 [ 0, %441 ], [ %499, %453 ]
  %504 = icmp eq i64 %449, 0
  br i1 %504, label %521, label %505

505:                                              ; preds = %502, %505
  %506 = phi i64 [ %518, %505 ], [ %503, %502 ]
  %507 = phi i64 [ %519, %505 ], [ %449, %502 ]
  %508 = getelementptr i16, i16* %403, i64 %506
  %509 = getelementptr i16, i16* %429, i64 %506
  %510 = bitcast i16* %508 to <8 x i16>*
  %511 = load <8 x i16>, <8 x i16>* %510, align 2, !alias.scope !185
  %512 = getelementptr i16, i16* %508, i64 8
  %513 = bitcast i16* %512 to <8 x i16>*
  %514 = load <8 x i16>, <8 x i16>* %513, align 2, !alias.scope !185
  %515 = bitcast i16* %509 to <8 x i16>*
  store <8 x i16> %511, <8 x i16>* %515, align 2, !alias.scope !188, !noalias !185
  %516 = getelementptr i16, i16* %509, i64 8
  %517 = bitcast i16* %516 to <8 x i16>*
  store <8 x i16> %514, <8 x i16>* %517, align 2, !alias.scope !188, !noalias !185
  %518 = add i64 %506, 16
  %519 = add i64 %507, -1
  %520 = icmp eq i64 %519, 0
  br i1 %520, label %521, label %505, !llvm.loop !191

521:                                              ; preds = %505, %502
  %522 = icmp eq i64 %431, %442
  br i1 %522, label %576, label %523

523:                                              ; preds = %521, %433, %428
  %524 = phi i64 [ %430, %433 ], [ %430, %428 ], [ %443, %521 ]
  %525 = phi i16* [ %403, %433 ], [ %403, %428 ], [ %444, %521 ]
  %526 = phi i16* [ %429, %433 ], [ %429, %428 ], [ %445, %521 ]
  %527 = add i64 %524, -1
  %528 = and i64 %524, 7
  %529 = icmp eq i64 %528, 0
  br i1 %529, label %541, label %530

530:                                              ; preds = %523, %530
  %531 = phi i64 [ %536, %530 ], [ %524, %523 ]
  %532 = phi i16* [ %538, %530 ], [ %525, %523 ]
  %533 = phi i16* [ %537, %530 ], [ %526, %523 ]
  %534 = phi i64 [ %539, %530 ], [ %528, %523 ]
  %535 = load i16, i16* %532, align 2
  store i16 %535, i16* %533, align 2
  %536 = add i64 %531, -1
  %537 = getelementptr inbounds i16, i16* %533, i64 1
  %538 = getelementptr inbounds i16, i16* %532, i64 1
  %539 = add i64 %534, -1
  %540 = icmp eq i64 %539, 0
  br i1 %540, label %541, label %530, !llvm.loop !192

541:                                              ; preds = %530, %523
  %542 = phi i64 [ %524, %523 ], [ %536, %530 ]
  %543 = phi i16* [ %525, %523 ], [ %538, %530 ]
  %544 = phi i16* [ %526, %523 ], [ %537, %530 ]
  %545 = icmp ult i64 %527, 7
  br i1 %545, label %576, label %546

546:                                              ; preds = %541, %546
  %547 = phi i64 [ %572, %546 ], [ %542, %541 ]
  %548 = phi i16* [ %574, %546 ], [ %543, %541 ]
  %549 = phi i16* [ %573, %546 ], [ %544, %541 ]
  %550 = load i16, i16* %548, align 2
  store i16 %550, i16* %549, align 2
  %551 = getelementptr inbounds i16, i16* %549, i64 1
  %552 = getelementptr inbounds i16, i16* %548, i64 1
  %553 = load i16, i16* %552, align 2
  store i16 %553, i16* %551, align 2
  %554 = getelementptr inbounds i16, i16* %549, i64 2
  %555 = getelementptr inbounds i16, i16* %548, i64 2
  %556 = load i16, i16* %555, align 2
  store i16 %556, i16* %554, align 2
  %557 = getelementptr inbounds i16, i16* %549, i64 3
  %558 = getelementptr inbounds i16, i16* %548, i64 3
  %559 = load i16, i16* %558, align 2
  store i16 %559, i16* %557, align 2
  %560 = getelementptr inbounds i16, i16* %549, i64 4
  %561 = getelementptr inbounds i16, i16* %548, i64 4
  %562 = load i16, i16* %561, align 2
  store i16 %562, i16* %560, align 2
  %563 = getelementptr inbounds i16, i16* %549, i64 5
  %564 = getelementptr inbounds i16, i16* %548, i64 5
  %565 = load i16, i16* %564, align 2
  store i16 %565, i16* %563, align 2
  %566 = getelementptr inbounds i16, i16* %549, i64 6
  %567 = getelementptr inbounds i16, i16* %548, i64 6
  %568 = load i16, i16* %567, align 2
  store i16 %568, i16* %566, align 2
  %569 = getelementptr inbounds i16, i16* %549, i64 7
  %570 = getelementptr inbounds i16, i16* %548, i64 7
  %571 = load i16, i16* %570, align 2
  store i16 %571, i16* %569, align 2
  %572 = add i64 %547, -8
  %573 = getelementptr inbounds i16, i16* %549, i64 8
  %574 = getelementptr inbounds i16, i16* %548, i64 8
  %575 = icmp eq i64 %572, 0
  br i1 %575, label %576, label %546, !llvm.loop !193

576:                                              ; preds = %541, %546, %521, %400
  %577 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %393, i64 1
  %578 = ptrtoint %"class.std::__1::basic_string"* %577 to i64
  %579 = bitcast %"class.std::__1::basic_string"** %392 to i64*
  store i64 %578, i64* %579, align 8
  br label %581

580:                                              ; preds = %390
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.124"* %391, %"class.std::__1::basic_string"* dereferenceable(24) %81) #10
  br label %581

581:                                              ; preds = %580, %576
  %582 = load i8, i8* %83, align 1
  %583 = icmp slt i8 %582, 0
  br i1 %583, label %584, label %586

584:                                              ; preds = %581
  %585 = load i16*, i16** %87, align 8
  store i16 0, i16* %585, align 2
  store i64 0, i64* %85, align 8
  br label %590

586:                                              ; preds = %581
  store i16 0, i16* %86, align 8
  store i8 0, i8* %83, align 1
  br label %590

587:                                              ; preds = %386
  store i8 1, i8* %32, align 1
  %588 = load i32, i32* %23, align 8
  %589 = add nsw i32 %588, %387
  br label %594

590:                                              ; preds = %586, %584
  %591 = load i32, i32* %23, align 8
  %592 = load i32, i32* %80, align 4
  %593 = add nsw i32 %592, %591
  br label %594

594:                                              ; preds = %587, %590
  %595 = phi i32 [ %593, %590 ], [ %589, %587 ]
  %596 = phi i32 [ 1, %590 ], [ 0, %587 ]
  store i32 %595, i32* %80, align 4
  store float 0.000000e+00, float* %28, align 8
  br label %597

597:                                              ; preds = %594, %382
  %598 = phi i32 [ 0, %382 ], [ %596, %594 ]
  %599 = load %"class.gfx::FontList"*, %"class.gfx::FontList"** %22, align 8
  %600 = call float @_ZN3gfx15GetStringWidthFERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %16, %"class.gfx::FontList"* dereferenceable(8) %599) #10
  %601 = load i32, i32* %80, align 4
  %602 = load i32, i32* %26, align 8
  %603 = icmp slt i32 %601, %602
  br i1 %603, label %605, label %604

604:                                              ; preds = %597
  store i8 1, i8* %32, align 1
  br label %1857

605:                                              ; preds = %597
  %606 = load i8, i8* %95, align 1
  %607 = icmp slt i8 %606, 0
  %608 = load i16*, i16** %96, align 8
  %609 = load i64, i64* %98, align 8
  %610 = zext i8 %606 to i64
  %611 = select i1 %607, i16* %608, i16* %97
  %612 = select i1 %607, i64 %609, i64 %610
  %613 = load i8, i8* %83, align 1
  %614 = icmp slt i8 %613, 0
  br i1 %614, label %615, label %620

615:                                              ; preds = %605
  %616 = load i64, i64* %84, align 8
  %617 = and i64 %616, 9223372036854775807
  %618 = add nsw i64 %617, -1
  %619 = load i64, i64* %85, align 8
  br label %622

620:                                              ; preds = %605
  %621 = zext i8 %613 to i64
  br label %622

622:                                              ; preds = %620, %615
  %623 = phi i64 [ %618, %615 ], [ 10, %620 ]
  %624 = phi i64 [ %619, %615 ], [ %621, %620 ]
  %625 = sub i64 %623, %624
  %626 = icmp ult i64 %625, %612
  br i1 %626, label %785, label %627

627:                                              ; preds = %622
  %628 = icmp eq i64 %612, 0
  br i1 %628, label %788, label %629

629:                                              ; preds = %627
  %630 = load i16*, i16** %87, align 8
  %631 = select i1 %614, i16* %630, i16* %86
  %632 = getelementptr inbounds i16, i16* %631, i64 %624
  %633 = icmp ult i64 %612, 16
  br i1 %633, label %723, label %634

634:                                              ; preds = %629
  %635 = add i64 %612, %624
  %636 = getelementptr i16, i16* %631, i64 %635
  %637 = getelementptr i16, i16* %611, i64 %612
  %638 = icmp ult i16* %632, %637
  %639 = icmp ult i16* %611, %636
  %640 = and i1 %638, %639
  br i1 %640, label %723, label %641

641:                                              ; preds = %634
  %642 = and i64 %612, -16
  %643 = sub i64 %612, %642
  %644 = getelementptr i16, i16* %611, i64 %642
  %645 = getelementptr i16, i16* %632, i64 %642
  %646 = add i64 %642, -16
  %647 = lshr exact i64 %646, 4
  %648 = add nuw nsw i64 %647, 1
  %649 = and i64 %648, 3
  %650 = icmp ult i64 %646, 48
  br i1 %650, label %702, label %651

651:                                              ; preds = %641
  %652 = sub nsw i64 %648, %649
  br label %653

653:                                              ; preds = %653, %651
  %654 = phi i64 [ 0, %651 ], [ %699, %653 ]
  %655 = phi i64 [ %652, %651 ], [ %700, %653 ]
  %656 = getelementptr i16, i16* %611, i64 %654
  %657 = getelementptr i16, i16* %632, i64 %654
  %658 = bitcast i16* %656 to <8 x i16>*
  %659 = load <8 x i16>, <8 x i16>* %658, align 2, !alias.scope !194
  %660 = getelementptr i16, i16* %656, i64 8
  %661 = bitcast i16* %660 to <8 x i16>*
  %662 = load <8 x i16>, <8 x i16>* %661, align 2, !alias.scope !194
  %663 = bitcast i16* %657 to <8 x i16>*
  store <8 x i16> %659, <8 x i16>* %663, align 2, !alias.scope !197, !noalias !194
  %664 = getelementptr i16, i16* %657, i64 8
  %665 = bitcast i16* %664 to <8 x i16>*
  store <8 x i16> %662, <8 x i16>* %665, align 2, !alias.scope !197, !noalias !194
  %666 = or i64 %654, 16
  %667 = getelementptr i16, i16* %611, i64 %666
  %668 = getelementptr i16, i16* %632, i64 %666
  %669 = bitcast i16* %667 to <8 x i16>*
  %670 = load <8 x i16>, <8 x i16>* %669, align 2, !alias.scope !194
  %671 = getelementptr i16, i16* %667, i64 8
  %672 = bitcast i16* %671 to <8 x i16>*
  %673 = load <8 x i16>, <8 x i16>* %672, align 2, !alias.scope !194
  %674 = bitcast i16* %668 to <8 x i16>*
  store <8 x i16> %670, <8 x i16>* %674, align 2, !alias.scope !197, !noalias !194
  %675 = getelementptr i16, i16* %668, i64 8
  %676 = bitcast i16* %675 to <8 x i16>*
  store <8 x i16> %673, <8 x i16>* %676, align 2, !alias.scope !197, !noalias !194
  %677 = or i64 %654, 32
  %678 = getelementptr i16, i16* %611, i64 %677
  %679 = getelementptr i16, i16* %632, i64 %677
  %680 = bitcast i16* %678 to <8 x i16>*
  %681 = load <8 x i16>, <8 x i16>* %680, align 2, !alias.scope !194
  %682 = getelementptr i16, i16* %678, i64 8
  %683 = bitcast i16* %682 to <8 x i16>*
  %684 = load <8 x i16>, <8 x i16>* %683, align 2, !alias.scope !194
  %685 = bitcast i16* %679 to <8 x i16>*
  store <8 x i16> %681, <8 x i16>* %685, align 2, !alias.scope !197, !noalias !194
  %686 = getelementptr i16, i16* %679, i64 8
  %687 = bitcast i16* %686 to <8 x i16>*
  store <8 x i16> %684, <8 x i16>* %687, align 2, !alias.scope !197, !noalias !194
  %688 = or i64 %654, 48
  %689 = getelementptr i16, i16* %611, i64 %688
  %690 = getelementptr i16, i16* %632, i64 %688
  %691 = bitcast i16* %689 to <8 x i16>*
  %692 = load <8 x i16>, <8 x i16>* %691, align 2, !alias.scope !194
  %693 = getelementptr i16, i16* %689, i64 8
  %694 = bitcast i16* %693 to <8 x i16>*
  %695 = load <8 x i16>, <8 x i16>* %694, align 2, !alias.scope !194
  %696 = bitcast i16* %690 to <8 x i16>*
  store <8 x i16> %692, <8 x i16>* %696, align 2, !alias.scope !197, !noalias !194
  %697 = getelementptr i16, i16* %690, i64 8
  %698 = bitcast i16* %697 to <8 x i16>*
  store <8 x i16> %695, <8 x i16>* %698, align 2, !alias.scope !197, !noalias !194
  %699 = add i64 %654, 64
  %700 = add i64 %655, -4
  %701 = icmp eq i64 %700, 0
  br i1 %701, label %702, label %653, !llvm.loop !199

702:                                              ; preds = %653, %641
  %703 = phi i64 [ 0, %641 ], [ %699, %653 ]
  %704 = icmp eq i64 %649, 0
  br i1 %704, label %721, label %705

705:                                              ; preds = %702, %705
  %706 = phi i64 [ %718, %705 ], [ %703, %702 ]
  %707 = phi i64 [ %719, %705 ], [ %649, %702 ]
  %708 = getelementptr i16, i16* %611, i64 %706
  %709 = getelementptr i16, i16* %632, i64 %706
  %710 = bitcast i16* %708 to <8 x i16>*
  %711 = load <8 x i16>, <8 x i16>* %710, align 2, !alias.scope !194
  %712 = getelementptr i16, i16* %708, i64 8
  %713 = bitcast i16* %712 to <8 x i16>*
  %714 = load <8 x i16>, <8 x i16>* %713, align 2, !alias.scope !194
  %715 = bitcast i16* %709 to <8 x i16>*
  store <8 x i16> %711, <8 x i16>* %715, align 2, !alias.scope !197, !noalias !194
  %716 = getelementptr i16, i16* %709, i64 8
  %717 = bitcast i16* %716 to <8 x i16>*
  store <8 x i16> %714, <8 x i16>* %717, align 2, !alias.scope !197, !noalias !194
  %718 = add i64 %706, 16
  %719 = add i64 %707, -1
  %720 = icmp eq i64 %719, 0
  br i1 %720, label %721, label %705, !llvm.loop !200

721:                                              ; preds = %705, %702
  %722 = icmp eq i64 %612, %642
  br i1 %722, label %776, label %723

723:                                              ; preds = %721, %634, %629
  %724 = phi i64 [ %612, %634 ], [ %612, %629 ], [ %643, %721 ]
  %725 = phi i16* [ %611, %634 ], [ %611, %629 ], [ %644, %721 ]
  %726 = phi i16* [ %632, %634 ], [ %632, %629 ], [ %645, %721 ]
  %727 = add i64 %724, -1
  %728 = and i64 %724, 7
  %729 = icmp eq i64 %728, 0
  br i1 %729, label %741, label %730

730:                                              ; preds = %723, %730
  %731 = phi i64 [ %736, %730 ], [ %724, %723 ]
  %732 = phi i16* [ %738, %730 ], [ %725, %723 ]
  %733 = phi i16* [ %737, %730 ], [ %726, %723 ]
  %734 = phi i64 [ %739, %730 ], [ %728, %723 ]
  %735 = load i16, i16* %732, align 2
  store i16 %735, i16* %733, align 2
  %736 = add i64 %731, -1
  %737 = getelementptr inbounds i16, i16* %733, i64 1
  %738 = getelementptr inbounds i16, i16* %732, i64 1
  %739 = add i64 %734, -1
  %740 = icmp eq i64 %739, 0
  br i1 %740, label %741, label %730, !llvm.loop !201

741:                                              ; preds = %730, %723
  %742 = phi i64 [ %724, %723 ], [ %736, %730 ]
  %743 = phi i16* [ %725, %723 ], [ %738, %730 ]
  %744 = phi i16* [ %726, %723 ], [ %737, %730 ]
  %745 = icmp ult i64 %727, 7
  br i1 %745, label %776, label %746

746:                                              ; preds = %741, %746
  %747 = phi i64 [ %772, %746 ], [ %742, %741 ]
  %748 = phi i16* [ %774, %746 ], [ %743, %741 ]
  %749 = phi i16* [ %773, %746 ], [ %744, %741 ]
  %750 = load i16, i16* %748, align 2
  store i16 %750, i16* %749, align 2
  %751 = getelementptr inbounds i16, i16* %749, i64 1
  %752 = getelementptr inbounds i16, i16* %748, i64 1
  %753 = load i16, i16* %752, align 2
  store i16 %753, i16* %751, align 2
  %754 = getelementptr inbounds i16, i16* %749, i64 2
  %755 = getelementptr inbounds i16, i16* %748, i64 2
  %756 = load i16, i16* %755, align 2
  store i16 %756, i16* %754, align 2
  %757 = getelementptr inbounds i16, i16* %749, i64 3
  %758 = getelementptr inbounds i16, i16* %748, i64 3
  %759 = load i16, i16* %758, align 2
  store i16 %759, i16* %757, align 2
  %760 = getelementptr inbounds i16, i16* %749, i64 4
  %761 = getelementptr inbounds i16, i16* %748, i64 4
  %762 = load i16, i16* %761, align 2
  store i16 %762, i16* %760, align 2
  %763 = getelementptr inbounds i16, i16* %749, i64 5
  %764 = getelementptr inbounds i16, i16* %748, i64 5
  %765 = load i16, i16* %764, align 2
  store i16 %765, i16* %763, align 2
  %766 = getelementptr inbounds i16, i16* %749, i64 6
  %767 = getelementptr inbounds i16, i16* %748, i64 6
  %768 = load i16, i16* %767, align 2
  store i16 %768, i16* %766, align 2
  %769 = getelementptr inbounds i16, i16* %749, i64 7
  %770 = getelementptr inbounds i16, i16* %748, i64 7
  %771 = load i16, i16* %770, align 2
  store i16 %771, i16* %769, align 2
  %772 = add i64 %747, -8
  %773 = getelementptr inbounds i16, i16* %749, i64 8
  %774 = getelementptr inbounds i16, i16* %748, i64 8
  %775 = icmp eq i64 %772, 0
  br i1 %775, label %776, label %746, !llvm.loop !202

776:                                              ; preds = %741, %746, %721
  %777 = add i64 %624, %612
  %778 = load i8, i8* %83, align 1
  %779 = icmp slt i8 %778, 0
  br i1 %779, label %780, label %781

780:                                              ; preds = %776
  store i64 %777, i64* %85, align 8
  br label %783

781:                                              ; preds = %776
  %782 = trunc i64 %777 to i8
  store i8 %782, i8* %83, align 1
  br label %783

783:                                              ; preds = %781, %780
  %784 = getelementptr inbounds i16, i16* %631, i64 %777
  store i16 0, i16* %784, align 2
  br label %788

785:                                              ; preds = %622
  %786 = add i64 %624, %612
  %787 = sub i64 %786, %623
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %81, i64 %623, i64 %787, i64 %624, i64 %624, i64 0, i64 %612, i16* %611) #10
  br label %788

788:                                              ; preds = %785, %783, %627
  %789 = load float, float* %28, align 8
  %790 = fadd float %600, %789
  store float %790, float* %28, align 8
  br label %1857

791:                                              ; preds = %363
  %792 = load i32, i32* %27, align 4
  %793 = icmp eq i32 %792, 0
  %794 = select i1 %793, %"class.std::__1::basic_string"* %13, %"class.std::__1::basic_string"* %16
  %795 = load i8, i8* %83, align 1
  %796 = icmp slt i8 %795, 0
  %797 = load i64, i64* %85, align 8
  %798 = zext i8 %795 to i64
  %799 = select i1 %796, i64 %797, i64 %798
  %800 = icmp eq i64 %799, 0
  br i1 %800, label %1007, label %801

801:                                              ; preds = %791
  %802 = load i32, i32* %80, align 4
  %803 = load i32, i32* %26, align 8
  %804 = icmp slt i32 %802, %803
  br i1 %804, label %805, label %999

805:                                              ; preds = %801
  %806 = load %"class.std::__1::vector.124"*, %"class.std::__1::vector.124"** %29, align 8
  %807 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %806, i64 0, i32 0, i32 1
  %808 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %807, align 8
  %809 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %806, i64 0, i32 0, i32 2, i32 0, i32 0
  %810 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %809, align 8
  %811 = icmp eq %"class.std::__1::basic_string"* %808, %810
  br i1 %811, label %992, label %812

812:                                              ; preds = %805
  br i1 %796, label %815, label %813

813:                                              ; preds = %812
  %814 = bitcast %"class.std::__1::basic_string"* %808 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %814, i8* align 8 %99, i64 24, i1 false) #10
  br label %988

815:                                              ; preds = %812
  %816 = load i16*, i16** %87, align 8
  %817 = icmp ult i64 %797, 11
  br i1 %817, label %818, label %823

818:                                              ; preds = %815
  %819 = bitcast %"class.std::__1::basic_string"* %808 to i16*
  %820 = trunc i64 %797 to i8
  %821 = bitcast %"class.std::__1::basic_string"* %808 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %822 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %821, i64 0, i32 1, i32 1
  store i8 %820, i8* %822, align 1
  br label %840

823:                                              ; preds = %815
  %824 = icmp ugt i64 %797, 9223372036854775791
  br i1 %824, label %825, label %827

825:                                              ; preds = %823
  %826 = bitcast %"class.std::__1::basic_string"* %808 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %826) #11
  unreachable

827:                                              ; preds = %823
  %828 = add nuw nsw i64 %797, 8
  %829 = and i64 %828, -8
  %830 = icmp slt i64 %829, 0
  br i1 %830, label %831, label %832

831:                                              ; preds = %827
  call void @abort() #11
  unreachable

832:                                              ; preds = %827
  %833 = shl i64 %829, 1
  %834 = call i8* @_Znwm(i64 %833) #12
  %835 = bitcast i8* %834 to i16*
  %836 = bitcast %"class.std::__1::basic_string"* %808 to i8**
  store i8* %834, i8** %836, align 8
  %837 = or i64 %829, -9223372036854775808
  %838 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %808, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %837, i64* %838, align 8
  %839 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %808, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %797, i64* %839, align 8
  br label %840

840:                                              ; preds = %832, %818
  %841 = phi i16* [ %819, %818 ], [ %835, %832 ]
  %842 = add nuw nsw i64 %797, 1
  %843 = add i64 %797, 1
  %844 = icmp ult i64 %843, 16
  br i1 %844, label %935, label %845

845:                                              ; preds = %840
  %846 = getelementptr i16, i16* %841, i64 1
  %847 = getelementptr i16, i16* %846, i64 %797
  %848 = getelementptr i16, i16* %816, i64 1
  %849 = getelementptr i16, i16* %848, i64 %797
  %850 = icmp ult i16* %841, %849
  %851 = icmp ult i16* %816, %847
  %852 = and i1 %850, %851
  br i1 %852, label %935, label %853

853:                                              ; preds = %845
  %854 = and i64 %843, -16
  %855 = sub i64 %842, %854
  %856 = getelementptr i16, i16* %816, i64 %854
  %857 = getelementptr i16, i16* %841, i64 %854
  %858 = add i64 %854, -16
  %859 = lshr exact i64 %858, 4
  %860 = add nuw nsw i64 %859, 1
  %861 = and i64 %860, 3
  %862 = icmp ult i64 %858, 48
  br i1 %862, label %914, label %863

863:                                              ; preds = %853
  %864 = sub nsw i64 %860, %861
  br label %865

865:                                              ; preds = %865, %863
  %866 = phi i64 [ 0, %863 ], [ %911, %865 ]
  %867 = phi i64 [ %864, %863 ], [ %912, %865 ]
  %868 = getelementptr i16, i16* %816, i64 %866
  %869 = getelementptr i16, i16* %841, i64 %866
  %870 = bitcast i16* %868 to <8 x i16>*
  %871 = load <8 x i16>, <8 x i16>* %870, align 2, !alias.scope !203
  %872 = getelementptr i16, i16* %868, i64 8
  %873 = bitcast i16* %872 to <8 x i16>*
  %874 = load <8 x i16>, <8 x i16>* %873, align 2, !alias.scope !203
  %875 = bitcast i16* %869 to <8 x i16>*
  store <8 x i16> %871, <8 x i16>* %875, align 2, !alias.scope !206, !noalias !203
  %876 = getelementptr i16, i16* %869, i64 8
  %877 = bitcast i16* %876 to <8 x i16>*
  store <8 x i16> %874, <8 x i16>* %877, align 2, !alias.scope !206, !noalias !203
  %878 = or i64 %866, 16
  %879 = getelementptr i16, i16* %816, i64 %878
  %880 = getelementptr i16, i16* %841, i64 %878
  %881 = bitcast i16* %879 to <8 x i16>*
  %882 = load <8 x i16>, <8 x i16>* %881, align 2, !alias.scope !203
  %883 = getelementptr i16, i16* %879, i64 8
  %884 = bitcast i16* %883 to <8 x i16>*
  %885 = load <8 x i16>, <8 x i16>* %884, align 2, !alias.scope !203
  %886 = bitcast i16* %880 to <8 x i16>*
  store <8 x i16> %882, <8 x i16>* %886, align 2, !alias.scope !206, !noalias !203
  %887 = getelementptr i16, i16* %880, i64 8
  %888 = bitcast i16* %887 to <8 x i16>*
  store <8 x i16> %885, <8 x i16>* %888, align 2, !alias.scope !206, !noalias !203
  %889 = or i64 %866, 32
  %890 = getelementptr i16, i16* %816, i64 %889
  %891 = getelementptr i16, i16* %841, i64 %889
  %892 = bitcast i16* %890 to <8 x i16>*
  %893 = load <8 x i16>, <8 x i16>* %892, align 2, !alias.scope !203
  %894 = getelementptr i16, i16* %890, i64 8
  %895 = bitcast i16* %894 to <8 x i16>*
  %896 = load <8 x i16>, <8 x i16>* %895, align 2, !alias.scope !203
  %897 = bitcast i16* %891 to <8 x i16>*
  store <8 x i16> %893, <8 x i16>* %897, align 2, !alias.scope !206, !noalias !203
  %898 = getelementptr i16, i16* %891, i64 8
  %899 = bitcast i16* %898 to <8 x i16>*
  store <8 x i16> %896, <8 x i16>* %899, align 2, !alias.scope !206, !noalias !203
  %900 = or i64 %866, 48
  %901 = getelementptr i16, i16* %816, i64 %900
  %902 = getelementptr i16, i16* %841, i64 %900
  %903 = bitcast i16* %901 to <8 x i16>*
  %904 = load <8 x i16>, <8 x i16>* %903, align 2, !alias.scope !203
  %905 = getelementptr i16, i16* %901, i64 8
  %906 = bitcast i16* %905 to <8 x i16>*
  %907 = load <8 x i16>, <8 x i16>* %906, align 2, !alias.scope !203
  %908 = bitcast i16* %902 to <8 x i16>*
  store <8 x i16> %904, <8 x i16>* %908, align 2, !alias.scope !206, !noalias !203
  %909 = getelementptr i16, i16* %902, i64 8
  %910 = bitcast i16* %909 to <8 x i16>*
  store <8 x i16> %907, <8 x i16>* %910, align 2, !alias.scope !206, !noalias !203
  %911 = add i64 %866, 64
  %912 = add i64 %867, -4
  %913 = icmp eq i64 %912, 0
  br i1 %913, label %914, label %865, !llvm.loop !208

914:                                              ; preds = %865, %853
  %915 = phi i64 [ 0, %853 ], [ %911, %865 ]
  %916 = icmp eq i64 %861, 0
  br i1 %916, label %933, label %917

917:                                              ; preds = %914, %917
  %918 = phi i64 [ %930, %917 ], [ %915, %914 ]
  %919 = phi i64 [ %931, %917 ], [ %861, %914 ]
  %920 = getelementptr i16, i16* %816, i64 %918
  %921 = getelementptr i16, i16* %841, i64 %918
  %922 = bitcast i16* %920 to <8 x i16>*
  %923 = load <8 x i16>, <8 x i16>* %922, align 2, !alias.scope !203
  %924 = getelementptr i16, i16* %920, i64 8
  %925 = bitcast i16* %924 to <8 x i16>*
  %926 = load <8 x i16>, <8 x i16>* %925, align 2, !alias.scope !203
  %927 = bitcast i16* %921 to <8 x i16>*
  store <8 x i16> %923, <8 x i16>* %927, align 2, !alias.scope !206, !noalias !203
  %928 = getelementptr i16, i16* %921, i64 8
  %929 = bitcast i16* %928 to <8 x i16>*
  store <8 x i16> %926, <8 x i16>* %929, align 2, !alias.scope !206, !noalias !203
  %930 = add i64 %918, 16
  %931 = add i64 %919, -1
  %932 = icmp eq i64 %931, 0
  br i1 %932, label %933, label %917, !llvm.loop !209

933:                                              ; preds = %917, %914
  %934 = icmp eq i64 %843, %854
  br i1 %934, label %988, label %935

935:                                              ; preds = %933, %845, %840
  %936 = phi i64 [ %842, %845 ], [ %842, %840 ], [ %855, %933 ]
  %937 = phi i16* [ %816, %845 ], [ %816, %840 ], [ %856, %933 ]
  %938 = phi i16* [ %841, %845 ], [ %841, %840 ], [ %857, %933 ]
  %939 = add i64 %936, -1
  %940 = and i64 %936, 7
  %941 = icmp eq i64 %940, 0
  br i1 %941, label %953, label %942

942:                                              ; preds = %935, %942
  %943 = phi i64 [ %948, %942 ], [ %936, %935 ]
  %944 = phi i16* [ %950, %942 ], [ %937, %935 ]
  %945 = phi i16* [ %949, %942 ], [ %938, %935 ]
  %946 = phi i64 [ %951, %942 ], [ %940, %935 ]
  %947 = load i16, i16* %944, align 2
  store i16 %947, i16* %945, align 2
  %948 = add i64 %943, -1
  %949 = getelementptr inbounds i16, i16* %945, i64 1
  %950 = getelementptr inbounds i16, i16* %944, i64 1
  %951 = add i64 %946, -1
  %952 = icmp eq i64 %951, 0
  br i1 %952, label %953, label %942, !llvm.loop !210

953:                                              ; preds = %942, %935
  %954 = phi i64 [ %936, %935 ], [ %948, %942 ]
  %955 = phi i16* [ %937, %935 ], [ %950, %942 ]
  %956 = phi i16* [ %938, %935 ], [ %949, %942 ]
  %957 = icmp ult i64 %939, 7
  br i1 %957, label %988, label %958

958:                                              ; preds = %953, %958
  %959 = phi i64 [ %984, %958 ], [ %954, %953 ]
  %960 = phi i16* [ %986, %958 ], [ %955, %953 ]
  %961 = phi i16* [ %985, %958 ], [ %956, %953 ]
  %962 = load i16, i16* %960, align 2
  store i16 %962, i16* %961, align 2
  %963 = getelementptr inbounds i16, i16* %961, i64 1
  %964 = getelementptr inbounds i16, i16* %960, i64 1
  %965 = load i16, i16* %964, align 2
  store i16 %965, i16* %963, align 2
  %966 = getelementptr inbounds i16, i16* %961, i64 2
  %967 = getelementptr inbounds i16, i16* %960, i64 2
  %968 = load i16, i16* %967, align 2
  store i16 %968, i16* %966, align 2
  %969 = getelementptr inbounds i16, i16* %961, i64 3
  %970 = getelementptr inbounds i16, i16* %960, i64 3
  %971 = load i16, i16* %970, align 2
  store i16 %971, i16* %969, align 2
  %972 = getelementptr inbounds i16, i16* %961, i64 4
  %973 = getelementptr inbounds i16, i16* %960, i64 4
  %974 = load i16, i16* %973, align 2
  store i16 %974, i16* %972, align 2
  %975 = getelementptr inbounds i16, i16* %961, i64 5
  %976 = getelementptr inbounds i16, i16* %960, i64 5
  %977 = load i16, i16* %976, align 2
  store i16 %977, i16* %975, align 2
  %978 = getelementptr inbounds i16, i16* %961, i64 6
  %979 = getelementptr inbounds i16, i16* %960, i64 6
  %980 = load i16, i16* %979, align 2
  store i16 %980, i16* %978, align 2
  %981 = getelementptr inbounds i16, i16* %961, i64 7
  %982 = getelementptr inbounds i16, i16* %960, i64 7
  %983 = load i16, i16* %982, align 2
  store i16 %983, i16* %981, align 2
  %984 = add i64 %959, -8
  %985 = getelementptr inbounds i16, i16* %961, i64 8
  %986 = getelementptr inbounds i16, i16* %960, i64 8
  %987 = icmp eq i64 %984, 0
  br i1 %987, label %988, label %958, !llvm.loop !211

988:                                              ; preds = %953, %958, %933, %813
  %989 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %808, i64 1
  %990 = ptrtoint %"class.std::__1::basic_string"* %989 to i64
  %991 = bitcast %"class.std::__1::basic_string"** %807 to i64*
  store i64 %990, i64* %991, align 8
  br label %993

992:                                              ; preds = %805
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.124"* %806, %"class.std::__1::basic_string"* dereferenceable(24) %81) #10
  br label %993

993:                                              ; preds = %992, %988
  %994 = load i8, i8* %83, align 1
  %995 = icmp slt i8 %994, 0
  br i1 %995, label %996, label %998

996:                                              ; preds = %993
  %997 = load i16*, i16** %87, align 8
  store i16 0, i16* %997, align 2
  store i64 0, i64* %85, align 8
  br label %1002

998:                                              ; preds = %993
  store i16 0, i16* %86, align 8
  store i8 0, i8* %83, align 1
  br label %1002

999:                                              ; preds = %801
  store i8 1, i8* %32, align 1
  %1000 = load i32, i32* %23, align 8
  %1001 = add nsw i32 %1000, %802
  store i32 %1001, i32* %80, align 4
  store float 0.000000e+00, float* %28, align 8
  br label %1857

1002:                                             ; preds = %998, %996
  %1003 = load i32, i32* %23, align 8
  %1004 = load i32, i32* %80, align 4
  %1005 = add nsw i32 %1004, %1003
  store i32 %1005, i32* %80, align 4
  store float 0.000000e+00, float* %28, align 8
  %1006 = load i32, i32* %27, align 4
  br label %1015

1007:                                             ; preds = %791
  %1008 = load %"class.std::__1::vector.124"*, %"class.std::__1::vector.124"** %29, align 8
  %1009 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %1008, i64 0, i32 0, i32 0
  %1010 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %1009, align 8
  %1011 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %1008, i64 0, i32 0, i32 1
  %1012 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %1011, align 8
  %1013 = icmp eq %"class.std::__1::basic_string"* %1010, %1012
  br i1 %1013, label %1014, label %1015

1014:                                             ; preds = %1007
  store i8 1, i8* %33, align 2
  br label %1015

1015:                                             ; preds = %1014, %1007, %1002
  %1016 = phi i32 [ %792, %1014 ], [ %792, %1007 ], [ %1006, %1002 ]
  %1017 = phi i32 [ 0, %1014 ], [ 0, %1007 ], [ 1, %1002 ]
  switch i32 %1016, label %1654 [
    i32 0, label %1018
    i32 3, label %1021
  ]

1018:                                             ; preds = %1015
  %1019 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %81, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %794) #10
  %1020 = load i32, i32* %117, align 4
  store i32 %1020, i32* %118, align 8
  br label %1857

1021:                                             ; preds = %1015
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #10
  %1022 = bitcast %"class.std::__1::basic_string"* %794 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1023 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1022, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %100, i8 -86, i64 24, i1 false) #10
  %1024 = load i8, i8* %1023, align 1
  %1025 = icmp slt i8 %1024, 0
  br i1 %1025, label %1028, label %1026

1026:                                             ; preds = %1021
  %1027 = bitcast %"class.std::__1::basic_string"* %794 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %100, i8* nonnull align 8 %1027, i64 24, i1 false) #10
  br label %1198

1028:                                             ; preds = %1021
  %1029 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %794, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1030 = load i16*, i16** %1029, align 8
  %1031 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %794, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1032 = load i64, i64* %1031, align 8
  %1033 = icmp ult i64 %1032, 11
  br i1 %1033, label %1034, label %1036

1034:                                             ; preds = %1028
  %1035 = trunc i64 %1032 to i8
  store i8 %1035, i8* %106, align 1
  br label %1050

1036:                                             ; preds = %1028
  %1037 = icmp ugt i64 %1032, 9223372036854775791
  br i1 %1037, label %1038, label %1040

1038:                                             ; preds = %1036
  %1039 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %1039) #11
  unreachable

1040:                                             ; preds = %1036
  %1041 = add nuw nsw i64 %1032, 8
  %1042 = and i64 %1041, -8
  %1043 = icmp slt i64 %1042, 0
  br i1 %1043, label %1044, label %1045

1044:                                             ; preds = %1040
  call void @abort() #11
  unreachable

1045:                                             ; preds = %1040
  %1046 = shl i64 %1042, 1
  %1047 = call i8* @_Znwm(i64 %1046) #12
  %1048 = bitcast i8* %1047 to i16*
  store i8* %1047, i8** %103, align 8
  %1049 = or i64 %1042, -9223372036854775808
  store i64 %1049, i64* %102, align 8
  store i64 %1032, i64* %101, align 8
  br label %1050

1050:                                             ; preds = %1045, %1034
  %1051 = phi i16* [ %104, %1034 ], [ %1048, %1045 ]
  %1052 = add nuw nsw i64 %1032, 1
  %1053 = add i64 %1032, 1
  %1054 = icmp ult i64 %1053, 16
  br i1 %1054, label %1145, label %1055

1055:                                             ; preds = %1050
  %1056 = getelementptr i16, i16* %1051, i64 1
  %1057 = getelementptr i16, i16* %1056, i64 %1032
  %1058 = getelementptr i16, i16* %1030, i64 1
  %1059 = getelementptr i16, i16* %1058, i64 %1032
  %1060 = icmp ult i16* %1051, %1059
  %1061 = icmp ult i16* %1030, %1057
  %1062 = and i1 %1060, %1061
  br i1 %1062, label %1145, label %1063

1063:                                             ; preds = %1055
  %1064 = and i64 %1053, -16
  %1065 = sub i64 %1052, %1064
  %1066 = getelementptr i16, i16* %1030, i64 %1064
  %1067 = getelementptr i16, i16* %1051, i64 %1064
  %1068 = add i64 %1064, -16
  %1069 = lshr exact i64 %1068, 4
  %1070 = add nuw nsw i64 %1069, 1
  %1071 = and i64 %1070, 3
  %1072 = icmp ult i64 %1068, 48
  br i1 %1072, label %1124, label %1073

1073:                                             ; preds = %1063
  %1074 = sub nsw i64 %1070, %1071
  br label %1075

1075:                                             ; preds = %1075, %1073
  %1076 = phi i64 [ 0, %1073 ], [ %1121, %1075 ]
  %1077 = phi i64 [ %1074, %1073 ], [ %1122, %1075 ]
  %1078 = getelementptr i16, i16* %1030, i64 %1076
  %1079 = getelementptr i16, i16* %1051, i64 %1076
  %1080 = bitcast i16* %1078 to <8 x i16>*
  %1081 = load <8 x i16>, <8 x i16>* %1080, align 2, !alias.scope !212
  %1082 = getelementptr i16, i16* %1078, i64 8
  %1083 = bitcast i16* %1082 to <8 x i16>*
  %1084 = load <8 x i16>, <8 x i16>* %1083, align 2, !alias.scope !212
  %1085 = bitcast i16* %1079 to <8 x i16>*
  store <8 x i16> %1081, <8 x i16>* %1085, align 2, !alias.scope !215, !noalias !212
  %1086 = getelementptr i16, i16* %1079, i64 8
  %1087 = bitcast i16* %1086 to <8 x i16>*
  store <8 x i16> %1084, <8 x i16>* %1087, align 2, !alias.scope !215, !noalias !212
  %1088 = or i64 %1076, 16
  %1089 = getelementptr i16, i16* %1030, i64 %1088
  %1090 = getelementptr i16, i16* %1051, i64 %1088
  %1091 = bitcast i16* %1089 to <8 x i16>*
  %1092 = load <8 x i16>, <8 x i16>* %1091, align 2, !alias.scope !212
  %1093 = getelementptr i16, i16* %1089, i64 8
  %1094 = bitcast i16* %1093 to <8 x i16>*
  %1095 = load <8 x i16>, <8 x i16>* %1094, align 2, !alias.scope !212
  %1096 = bitcast i16* %1090 to <8 x i16>*
  store <8 x i16> %1092, <8 x i16>* %1096, align 2, !alias.scope !215, !noalias !212
  %1097 = getelementptr i16, i16* %1090, i64 8
  %1098 = bitcast i16* %1097 to <8 x i16>*
  store <8 x i16> %1095, <8 x i16>* %1098, align 2, !alias.scope !215, !noalias !212
  %1099 = or i64 %1076, 32
  %1100 = getelementptr i16, i16* %1030, i64 %1099
  %1101 = getelementptr i16, i16* %1051, i64 %1099
  %1102 = bitcast i16* %1100 to <8 x i16>*
  %1103 = load <8 x i16>, <8 x i16>* %1102, align 2, !alias.scope !212
  %1104 = getelementptr i16, i16* %1100, i64 8
  %1105 = bitcast i16* %1104 to <8 x i16>*
  %1106 = load <8 x i16>, <8 x i16>* %1105, align 2, !alias.scope !212
  %1107 = bitcast i16* %1101 to <8 x i16>*
  store <8 x i16> %1103, <8 x i16>* %1107, align 2, !alias.scope !215, !noalias !212
  %1108 = getelementptr i16, i16* %1101, i64 8
  %1109 = bitcast i16* %1108 to <8 x i16>*
  store <8 x i16> %1106, <8 x i16>* %1109, align 2, !alias.scope !215, !noalias !212
  %1110 = or i64 %1076, 48
  %1111 = getelementptr i16, i16* %1030, i64 %1110
  %1112 = getelementptr i16, i16* %1051, i64 %1110
  %1113 = bitcast i16* %1111 to <8 x i16>*
  %1114 = load <8 x i16>, <8 x i16>* %1113, align 2, !alias.scope !212
  %1115 = getelementptr i16, i16* %1111, i64 8
  %1116 = bitcast i16* %1115 to <8 x i16>*
  %1117 = load <8 x i16>, <8 x i16>* %1116, align 2, !alias.scope !212
  %1118 = bitcast i16* %1112 to <8 x i16>*
  store <8 x i16> %1114, <8 x i16>* %1118, align 2, !alias.scope !215, !noalias !212
  %1119 = getelementptr i16, i16* %1112, i64 8
  %1120 = bitcast i16* %1119 to <8 x i16>*
  store <8 x i16> %1117, <8 x i16>* %1120, align 2, !alias.scope !215, !noalias !212
  %1121 = add i64 %1076, 64
  %1122 = add i64 %1077, -4
  %1123 = icmp eq i64 %1122, 0
  br i1 %1123, label %1124, label %1075, !llvm.loop !217

1124:                                             ; preds = %1075, %1063
  %1125 = phi i64 [ 0, %1063 ], [ %1121, %1075 ]
  %1126 = icmp eq i64 %1071, 0
  br i1 %1126, label %1143, label %1127

1127:                                             ; preds = %1124, %1127
  %1128 = phi i64 [ %1140, %1127 ], [ %1125, %1124 ]
  %1129 = phi i64 [ %1141, %1127 ], [ %1071, %1124 ]
  %1130 = getelementptr i16, i16* %1030, i64 %1128
  %1131 = getelementptr i16, i16* %1051, i64 %1128
  %1132 = bitcast i16* %1130 to <8 x i16>*
  %1133 = load <8 x i16>, <8 x i16>* %1132, align 2, !alias.scope !212
  %1134 = getelementptr i16, i16* %1130, i64 8
  %1135 = bitcast i16* %1134 to <8 x i16>*
  %1136 = load <8 x i16>, <8 x i16>* %1135, align 2, !alias.scope !212
  %1137 = bitcast i16* %1131 to <8 x i16>*
  store <8 x i16> %1133, <8 x i16>* %1137, align 2, !alias.scope !215, !noalias !212
  %1138 = getelementptr i16, i16* %1131, i64 8
  %1139 = bitcast i16* %1138 to <8 x i16>*
  store <8 x i16> %1136, <8 x i16>* %1139, align 2, !alias.scope !215, !noalias !212
  %1140 = add i64 %1128, 16
  %1141 = add i64 %1129, -1
  %1142 = icmp eq i64 %1141, 0
  br i1 %1142, label %1143, label %1127, !llvm.loop !218

1143:                                             ; preds = %1127, %1124
  %1144 = icmp eq i64 %1053, %1064
  br i1 %1144, label %1198, label %1145

1145:                                             ; preds = %1143, %1055, %1050
  %1146 = phi i64 [ %1052, %1055 ], [ %1052, %1050 ], [ %1065, %1143 ]
  %1147 = phi i16* [ %1030, %1055 ], [ %1030, %1050 ], [ %1066, %1143 ]
  %1148 = phi i16* [ %1051, %1055 ], [ %1051, %1050 ], [ %1067, %1143 ]
  %1149 = add i64 %1146, -1
  %1150 = and i64 %1146, 7
  %1151 = icmp eq i64 %1150, 0
  br i1 %1151, label %1163, label %1152

1152:                                             ; preds = %1145, %1152
  %1153 = phi i64 [ %1158, %1152 ], [ %1146, %1145 ]
  %1154 = phi i16* [ %1160, %1152 ], [ %1147, %1145 ]
  %1155 = phi i16* [ %1159, %1152 ], [ %1148, %1145 ]
  %1156 = phi i64 [ %1161, %1152 ], [ %1150, %1145 ]
  %1157 = load i16, i16* %1154, align 2
  store i16 %1157, i16* %1155, align 2
  %1158 = add i64 %1153, -1
  %1159 = getelementptr inbounds i16, i16* %1155, i64 1
  %1160 = getelementptr inbounds i16, i16* %1154, i64 1
  %1161 = add i64 %1156, -1
  %1162 = icmp eq i64 %1161, 0
  br i1 %1162, label %1163, label %1152, !llvm.loop !219

1163:                                             ; preds = %1152, %1145
  %1164 = phi i64 [ %1146, %1145 ], [ %1158, %1152 ]
  %1165 = phi i16* [ %1147, %1145 ], [ %1160, %1152 ]
  %1166 = phi i16* [ %1148, %1145 ], [ %1159, %1152 ]
  %1167 = icmp ult i64 %1149, 7
  br i1 %1167, label %1198, label %1168

1168:                                             ; preds = %1163, %1168
  %1169 = phi i64 [ %1194, %1168 ], [ %1164, %1163 ]
  %1170 = phi i16* [ %1196, %1168 ], [ %1165, %1163 ]
  %1171 = phi i16* [ %1195, %1168 ], [ %1166, %1163 ]
  %1172 = load i16, i16* %1170, align 2
  store i16 %1172, i16* %1171, align 2
  %1173 = getelementptr inbounds i16, i16* %1171, i64 1
  %1174 = getelementptr inbounds i16, i16* %1170, i64 1
  %1175 = load i16, i16* %1174, align 2
  store i16 %1175, i16* %1173, align 2
  %1176 = getelementptr inbounds i16, i16* %1171, i64 2
  %1177 = getelementptr inbounds i16, i16* %1170, i64 2
  %1178 = load i16, i16* %1177, align 2
  store i16 %1178, i16* %1176, align 2
  %1179 = getelementptr inbounds i16, i16* %1171, i64 3
  %1180 = getelementptr inbounds i16, i16* %1170, i64 3
  %1181 = load i16, i16* %1180, align 2
  store i16 %1181, i16* %1179, align 2
  %1182 = getelementptr inbounds i16, i16* %1171, i64 4
  %1183 = getelementptr inbounds i16, i16* %1170, i64 4
  %1184 = load i16, i16* %1183, align 2
  store i16 %1184, i16* %1182, align 2
  %1185 = getelementptr inbounds i16, i16* %1171, i64 5
  %1186 = getelementptr inbounds i16, i16* %1170, i64 5
  %1187 = load i16, i16* %1186, align 2
  store i16 %1187, i16* %1185, align 2
  %1188 = getelementptr inbounds i16, i16* %1171, i64 6
  %1189 = getelementptr inbounds i16, i16* %1170, i64 6
  %1190 = load i16, i16* %1189, align 2
  store i16 %1190, i16* %1188, align 2
  %1191 = getelementptr inbounds i16, i16* %1171, i64 7
  %1192 = getelementptr inbounds i16, i16* %1170, i64 7
  %1193 = load i16, i16* %1192, align 2
  store i16 %1193, i16* %1191, align 2
  %1194 = add i64 %1169, -8
  %1195 = getelementptr inbounds i16, i16* %1171, i64 8
  %1196 = getelementptr inbounds i16, i16* %1170, i64 8
  %1197 = icmp eq i64 %1194, 0
  br i1 %1197, label %1198, label %1168, !llvm.loop !220

1198:                                             ; preds = %1163, %1168, %1143, %1026
  %1199 = load i8, i8* %32, align 1, !range !13
  %1200 = icmp eq i8 %1199, 0
  br i1 %1200, label %1201, label %1646

1201:                                             ; preds = %1198, %1643
  %1202 = phi i1 [ false, %1643 ], [ true, %1198 ]
  %1203 = phi i32 [ %1435, %1643 ], [ 0, %1198 ]
  %1204 = load i8, i8* %106, align 1
  %1205 = icmp slt i8 %1204, 0
  %1206 = load i64, i64* %101, align 8
  %1207 = zext i8 %1204 to i64
  %1208 = select i1 %1205, i64 %1206, i64 %1207
  %1209 = icmp eq i64 %1208, 0
  br i1 %1209, label %1646, label %1210

1210:                                             ; preds = %1201
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %107, i8 -86, i64 24, i1 false) #10
  %1211 = load %"class.gfx::FontList"*, %"class.gfx::FontList"** %22, align 8
  %1212 = load float, float* %25, align 4
  call void @_ZN3gfx9ElideTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListEfNS_13ElideBehaviorE(%"class.std::__1::basic_string"* nonnull sret %9, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, %"class.gfx::FontList"* dereferenceable(8) %1211, float %1212, i32 1) #10
  %1213 = load i8, i8* %111, align 1
  %1214 = icmp slt i8 %1213, 0
  %1215 = load i64, i64* %109, align 8
  %1216 = zext i8 %1213 to i64
  %1217 = select i1 %1214, i64 %1215, i64 %1216
  %1218 = icmp eq i64 %1217, 0
  br i1 %1218, label %1219, label %1225

1219:                                             ; preds = %1210
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %112) #10
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, i64 0, i64 1, %"class.std::__1::allocator"* nonnull dereferenceable(1) %113) #10
  %1220 = load i8, i8* %111, align 1
  %1221 = icmp slt i8 %1220, 0
  br i1 %1221, label %1222, label %1224

1222:                                             ; preds = %1219
  %1223 = load i8*, i8** %114, align 8
  call void @_ZdlPv(i8* %1223) #12
  br label %1224

1224:                                             ; preds = %1222, %1219
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %107, i8* nonnull align 8 %112, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112) #10
  br label %1225

1225:                                             ; preds = %1224, %1210
  br i1 %1202, label %1434, label %1226

1226:                                             ; preds = %1225
  %1227 = load i32, i32* %80, align 4
  %1228 = load i32, i32* %26, align 8
  %1229 = icmp slt i32 %1227, %1228
  br i1 %1229, label %1230, label %1427

1230:                                             ; preds = %1226
  %1231 = load %"class.std::__1::vector.124"*, %"class.std::__1::vector.124"** %29, align 8
  %1232 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %1231, i64 0, i32 0, i32 1
  %1233 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %1232, align 8
  %1234 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %1231, i64 0, i32 0, i32 2, i32 0, i32 0
  %1235 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %1234, align 8
  %1236 = icmp eq %"class.std::__1::basic_string"* %1233, %1235
  br i1 %1236, label %1420, label %1237

1237:                                             ; preds = %1230
  %1238 = load i8, i8* %83, align 1
  %1239 = icmp slt i8 %1238, 0
  br i1 %1239, label %1242, label %1240

1240:                                             ; preds = %1237
  %1241 = bitcast %"class.std::__1::basic_string"* %1233 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1241, i8* align 8 %99, i64 24, i1 false) #10
  br label %1416

1242:                                             ; preds = %1237
  %1243 = load i16*, i16** %87, align 8
  %1244 = load i64, i64* %85, align 8
  %1245 = icmp ult i64 %1244, 11
  br i1 %1245, label %1246, label %1251

1246:                                             ; preds = %1242
  %1247 = bitcast %"class.std::__1::basic_string"* %1233 to i16*
  %1248 = trunc i64 %1244 to i8
  %1249 = bitcast %"class.std::__1::basic_string"* %1233 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1250 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1249, i64 0, i32 1, i32 1
  store i8 %1248, i8* %1250, align 1
  br label %1268

1251:                                             ; preds = %1242
  %1252 = icmp ugt i64 %1244, 9223372036854775791
  br i1 %1252, label %1253, label %1255

1253:                                             ; preds = %1251
  %1254 = bitcast %"class.std::__1::basic_string"* %1233 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %1254) #11
  unreachable

1255:                                             ; preds = %1251
  %1256 = add nuw nsw i64 %1244, 8
  %1257 = and i64 %1256, -8
  %1258 = icmp slt i64 %1257, 0
  br i1 %1258, label %1259, label %1260

1259:                                             ; preds = %1255
  call void @abort() #11
  unreachable

1260:                                             ; preds = %1255
  %1261 = shl i64 %1257, 1
  %1262 = call i8* @_Znwm(i64 %1261) #12
  %1263 = bitcast i8* %1262 to i16*
  %1264 = bitcast %"class.std::__1::basic_string"* %1233 to i8**
  store i8* %1262, i8** %1264, align 8
  %1265 = or i64 %1257, -9223372036854775808
  %1266 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1233, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1265, i64* %1266, align 8
  %1267 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1233, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1244, i64* %1267, align 8
  br label %1268

1268:                                             ; preds = %1260, %1246
  %1269 = phi i16* [ %1247, %1246 ], [ %1263, %1260 ]
  %1270 = add nuw nsw i64 %1244, 1
  %1271 = add i64 %1244, 1
  %1272 = icmp ult i64 %1271, 16
  br i1 %1272, label %1363, label %1273

1273:                                             ; preds = %1268
  %1274 = getelementptr i16, i16* %1269, i64 1
  %1275 = getelementptr i16, i16* %1274, i64 %1244
  %1276 = getelementptr i16, i16* %1243, i64 1
  %1277 = getelementptr i16, i16* %1276, i64 %1244
  %1278 = icmp ult i16* %1269, %1277
  %1279 = icmp ult i16* %1243, %1275
  %1280 = and i1 %1278, %1279
  br i1 %1280, label %1363, label %1281

1281:                                             ; preds = %1273
  %1282 = and i64 %1271, -16
  %1283 = sub i64 %1270, %1282
  %1284 = getelementptr i16, i16* %1243, i64 %1282
  %1285 = getelementptr i16, i16* %1269, i64 %1282
  %1286 = add i64 %1282, -16
  %1287 = lshr exact i64 %1286, 4
  %1288 = add nuw nsw i64 %1287, 1
  %1289 = and i64 %1288, 3
  %1290 = icmp ult i64 %1286, 48
  br i1 %1290, label %1342, label %1291

1291:                                             ; preds = %1281
  %1292 = sub nsw i64 %1288, %1289
  br label %1293

1293:                                             ; preds = %1293, %1291
  %1294 = phi i64 [ 0, %1291 ], [ %1339, %1293 ]
  %1295 = phi i64 [ %1292, %1291 ], [ %1340, %1293 ]
  %1296 = getelementptr i16, i16* %1243, i64 %1294
  %1297 = getelementptr i16, i16* %1269, i64 %1294
  %1298 = bitcast i16* %1296 to <8 x i16>*
  %1299 = load <8 x i16>, <8 x i16>* %1298, align 2, !alias.scope !221
  %1300 = getelementptr i16, i16* %1296, i64 8
  %1301 = bitcast i16* %1300 to <8 x i16>*
  %1302 = load <8 x i16>, <8 x i16>* %1301, align 2, !alias.scope !221
  %1303 = bitcast i16* %1297 to <8 x i16>*
  store <8 x i16> %1299, <8 x i16>* %1303, align 2, !alias.scope !224, !noalias !221
  %1304 = getelementptr i16, i16* %1297, i64 8
  %1305 = bitcast i16* %1304 to <8 x i16>*
  store <8 x i16> %1302, <8 x i16>* %1305, align 2, !alias.scope !224, !noalias !221
  %1306 = or i64 %1294, 16
  %1307 = getelementptr i16, i16* %1243, i64 %1306
  %1308 = getelementptr i16, i16* %1269, i64 %1306
  %1309 = bitcast i16* %1307 to <8 x i16>*
  %1310 = load <8 x i16>, <8 x i16>* %1309, align 2, !alias.scope !221
  %1311 = getelementptr i16, i16* %1307, i64 8
  %1312 = bitcast i16* %1311 to <8 x i16>*
  %1313 = load <8 x i16>, <8 x i16>* %1312, align 2, !alias.scope !221
  %1314 = bitcast i16* %1308 to <8 x i16>*
  store <8 x i16> %1310, <8 x i16>* %1314, align 2, !alias.scope !224, !noalias !221
  %1315 = getelementptr i16, i16* %1308, i64 8
  %1316 = bitcast i16* %1315 to <8 x i16>*
  store <8 x i16> %1313, <8 x i16>* %1316, align 2, !alias.scope !224, !noalias !221
  %1317 = or i64 %1294, 32
  %1318 = getelementptr i16, i16* %1243, i64 %1317
  %1319 = getelementptr i16, i16* %1269, i64 %1317
  %1320 = bitcast i16* %1318 to <8 x i16>*
  %1321 = load <8 x i16>, <8 x i16>* %1320, align 2, !alias.scope !221
  %1322 = getelementptr i16, i16* %1318, i64 8
  %1323 = bitcast i16* %1322 to <8 x i16>*
  %1324 = load <8 x i16>, <8 x i16>* %1323, align 2, !alias.scope !221
  %1325 = bitcast i16* %1319 to <8 x i16>*
  store <8 x i16> %1321, <8 x i16>* %1325, align 2, !alias.scope !224, !noalias !221
  %1326 = getelementptr i16, i16* %1319, i64 8
  %1327 = bitcast i16* %1326 to <8 x i16>*
  store <8 x i16> %1324, <8 x i16>* %1327, align 2, !alias.scope !224, !noalias !221
  %1328 = or i64 %1294, 48
  %1329 = getelementptr i16, i16* %1243, i64 %1328
  %1330 = getelementptr i16, i16* %1269, i64 %1328
  %1331 = bitcast i16* %1329 to <8 x i16>*
  %1332 = load <8 x i16>, <8 x i16>* %1331, align 2, !alias.scope !221
  %1333 = getelementptr i16, i16* %1329, i64 8
  %1334 = bitcast i16* %1333 to <8 x i16>*
  %1335 = load <8 x i16>, <8 x i16>* %1334, align 2, !alias.scope !221
  %1336 = bitcast i16* %1330 to <8 x i16>*
  store <8 x i16> %1332, <8 x i16>* %1336, align 2, !alias.scope !224, !noalias !221
  %1337 = getelementptr i16, i16* %1330, i64 8
  %1338 = bitcast i16* %1337 to <8 x i16>*
  store <8 x i16> %1335, <8 x i16>* %1338, align 2, !alias.scope !224, !noalias !221
  %1339 = add i64 %1294, 64
  %1340 = add i64 %1295, -4
  %1341 = icmp eq i64 %1340, 0
  br i1 %1341, label %1342, label %1293, !llvm.loop !226

1342:                                             ; preds = %1293, %1281
  %1343 = phi i64 [ 0, %1281 ], [ %1339, %1293 ]
  %1344 = icmp eq i64 %1289, 0
  br i1 %1344, label %1361, label %1345

1345:                                             ; preds = %1342, %1345
  %1346 = phi i64 [ %1358, %1345 ], [ %1343, %1342 ]
  %1347 = phi i64 [ %1359, %1345 ], [ %1289, %1342 ]
  %1348 = getelementptr i16, i16* %1243, i64 %1346
  %1349 = getelementptr i16, i16* %1269, i64 %1346
  %1350 = bitcast i16* %1348 to <8 x i16>*
  %1351 = load <8 x i16>, <8 x i16>* %1350, align 2, !alias.scope !221
  %1352 = getelementptr i16, i16* %1348, i64 8
  %1353 = bitcast i16* %1352 to <8 x i16>*
  %1354 = load <8 x i16>, <8 x i16>* %1353, align 2, !alias.scope !221
  %1355 = bitcast i16* %1349 to <8 x i16>*
  store <8 x i16> %1351, <8 x i16>* %1355, align 2, !alias.scope !224, !noalias !221
  %1356 = getelementptr i16, i16* %1349, i64 8
  %1357 = bitcast i16* %1356 to <8 x i16>*
  store <8 x i16> %1354, <8 x i16>* %1357, align 2, !alias.scope !224, !noalias !221
  %1358 = add i64 %1346, 16
  %1359 = add i64 %1347, -1
  %1360 = icmp eq i64 %1359, 0
  br i1 %1360, label %1361, label %1345, !llvm.loop !227

1361:                                             ; preds = %1345, %1342
  %1362 = icmp eq i64 %1271, %1282
  br i1 %1362, label %1416, label %1363

1363:                                             ; preds = %1361, %1273, %1268
  %1364 = phi i64 [ %1270, %1273 ], [ %1270, %1268 ], [ %1283, %1361 ]
  %1365 = phi i16* [ %1243, %1273 ], [ %1243, %1268 ], [ %1284, %1361 ]
  %1366 = phi i16* [ %1269, %1273 ], [ %1269, %1268 ], [ %1285, %1361 ]
  %1367 = add i64 %1364, -1
  %1368 = and i64 %1364, 7
  %1369 = icmp eq i64 %1368, 0
  br i1 %1369, label %1381, label %1370

1370:                                             ; preds = %1363, %1370
  %1371 = phi i64 [ %1376, %1370 ], [ %1364, %1363 ]
  %1372 = phi i16* [ %1378, %1370 ], [ %1365, %1363 ]
  %1373 = phi i16* [ %1377, %1370 ], [ %1366, %1363 ]
  %1374 = phi i64 [ %1379, %1370 ], [ %1368, %1363 ]
  %1375 = load i16, i16* %1372, align 2
  store i16 %1375, i16* %1373, align 2
  %1376 = add i64 %1371, -1
  %1377 = getelementptr inbounds i16, i16* %1373, i64 1
  %1378 = getelementptr inbounds i16, i16* %1372, i64 1
  %1379 = add i64 %1374, -1
  %1380 = icmp eq i64 %1379, 0
  br i1 %1380, label %1381, label %1370, !llvm.loop !228

1381:                                             ; preds = %1370, %1363
  %1382 = phi i64 [ %1364, %1363 ], [ %1376, %1370 ]
  %1383 = phi i16* [ %1365, %1363 ], [ %1378, %1370 ]
  %1384 = phi i16* [ %1366, %1363 ], [ %1377, %1370 ]
  %1385 = icmp ult i64 %1367, 7
  br i1 %1385, label %1416, label %1386

1386:                                             ; preds = %1381, %1386
  %1387 = phi i64 [ %1412, %1386 ], [ %1382, %1381 ]
  %1388 = phi i16* [ %1414, %1386 ], [ %1383, %1381 ]
  %1389 = phi i16* [ %1413, %1386 ], [ %1384, %1381 ]
  %1390 = load i16, i16* %1388, align 2
  store i16 %1390, i16* %1389, align 2
  %1391 = getelementptr inbounds i16, i16* %1389, i64 1
  %1392 = getelementptr inbounds i16, i16* %1388, i64 1
  %1393 = load i16, i16* %1392, align 2
  store i16 %1393, i16* %1391, align 2
  %1394 = getelementptr inbounds i16, i16* %1389, i64 2
  %1395 = getelementptr inbounds i16, i16* %1388, i64 2
  %1396 = load i16, i16* %1395, align 2
  store i16 %1396, i16* %1394, align 2
  %1397 = getelementptr inbounds i16, i16* %1389, i64 3
  %1398 = getelementptr inbounds i16, i16* %1388, i64 3
  %1399 = load i16, i16* %1398, align 2
  store i16 %1399, i16* %1397, align 2
  %1400 = getelementptr inbounds i16, i16* %1389, i64 4
  %1401 = getelementptr inbounds i16, i16* %1388, i64 4
  %1402 = load i16, i16* %1401, align 2
  store i16 %1402, i16* %1400, align 2
  %1403 = getelementptr inbounds i16, i16* %1389, i64 5
  %1404 = getelementptr inbounds i16, i16* %1388, i64 5
  %1405 = load i16, i16* %1404, align 2
  store i16 %1405, i16* %1403, align 2
  %1406 = getelementptr inbounds i16, i16* %1389, i64 6
  %1407 = getelementptr inbounds i16, i16* %1388, i64 6
  %1408 = load i16, i16* %1407, align 2
  store i16 %1408, i16* %1406, align 2
  %1409 = getelementptr inbounds i16, i16* %1389, i64 7
  %1410 = getelementptr inbounds i16, i16* %1388, i64 7
  %1411 = load i16, i16* %1410, align 2
  store i16 %1411, i16* %1409, align 2
  %1412 = add i64 %1387, -8
  %1413 = getelementptr inbounds i16, i16* %1389, i64 8
  %1414 = getelementptr inbounds i16, i16* %1388, i64 8
  %1415 = icmp eq i64 %1412, 0
  br i1 %1415, label %1416, label %1386, !llvm.loop !229

1416:                                             ; preds = %1381, %1386, %1361, %1240
  %1417 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1233, i64 1
  %1418 = ptrtoint %"class.std::__1::basic_string"* %1417 to i64
  %1419 = bitcast %"class.std::__1::basic_string"** %1232 to i64*
  store i64 %1418, i64* %1419, align 8
  br label %1421

1420:                                             ; preds = %1230
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.124"* %1231, %"class.std::__1::basic_string"* dereferenceable(24) %81) #10
  br label %1421

1421:                                             ; preds = %1420, %1416
  %1422 = load i8, i8* %83, align 1
  %1423 = icmp slt i8 %1422, 0
  br i1 %1423, label %1424, label %1426

1424:                                             ; preds = %1421
  %1425 = load i16*, i16** %87, align 8
  store i16 0, i16* %1425, align 2
  store i64 0, i64* %85, align 8
  br label %1428

1426:                                             ; preds = %1421
  store i16 0, i16* %86, align 8
  store i8 0, i8* %83, align 1
  br label %1428

1427:                                             ; preds = %1226
  store i8 1, i8* %32, align 1
  br label %1428

1428:                                             ; preds = %1427, %1426, %1424
  %1429 = phi i32 [ 0, %1427 ], [ 1, %1424 ], [ 1, %1426 ]
  %1430 = load i32, i32* %23, align 8
  %1431 = load i32, i32* %80, align 4
  %1432 = add nsw i32 %1431, %1430
  store i32 %1432, i32* %80, align 4
  store float 0.000000e+00, float* %28, align 8
  %1433 = add nsw i32 %1429, %1203
  br label %1434

1434:                                             ; preds = %1428, %1225
  %1435 = phi i32 [ %1203, %1225 ], [ %1433, %1428 ]
  %1436 = load %"class.gfx::FontList"*, %"class.gfx::FontList"** %22, align 8
  %1437 = call float @_ZN3gfx15GetStringWidthFERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, %"class.gfx::FontList"* dereferenceable(8) %1436) #10
  %1438 = load i32, i32* %80, align 4
  %1439 = load i32, i32* %26, align 8
  %1440 = icmp slt i32 %1438, %1439
  br i1 %1440, label %1442, label %1441

1441:                                             ; preds = %1434
  store i8 1, i8* %32, align 1
  br label %1628

1442:                                             ; preds = %1434
  %1443 = load i8, i8* %111, align 1
  %1444 = icmp slt i8 %1443, 0
  %1445 = load i16*, i16** %108, align 8
  %1446 = load i64, i64* %109, align 8
  %1447 = zext i8 %1443 to i64
  %1448 = select i1 %1444, i16* %1445, i16* %115
  %1449 = select i1 %1444, i64 %1446, i64 %1447
  %1450 = load i8, i8* %83, align 1
  %1451 = icmp slt i8 %1450, 0
  br i1 %1451, label %1452, label %1457

1452:                                             ; preds = %1442
  %1453 = load i64, i64* %84, align 8
  %1454 = and i64 %1453, 9223372036854775807
  %1455 = add nsw i64 %1454, -1
  %1456 = load i64, i64* %85, align 8
  br label %1459

1457:                                             ; preds = %1442
  %1458 = zext i8 %1450 to i64
  br label %1459

1459:                                             ; preds = %1457, %1452
  %1460 = phi i64 [ %1455, %1452 ], [ 10, %1457 ]
  %1461 = phi i64 [ %1456, %1452 ], [ %1458, %1457 ]
  %1462 = sub i64 %1460, %1461
  %1463 = icmp ult i64 %1462, %1449
  br i1 %1463, label %1622, label %1464

1464:                                             ; preds = %1459
  %1465 = icmp eq i64 %1449, 0
  br i1 %1465, label %1625, label %1466

1466:                                             ; preds = %1464
  %1467 = load i16*, i16** %87, align 8
  %1468 = select i1 %1451, i16* %1467, i16* %86
  %1469 = getelementptr inbounds i16, i16* %1468, i64 %1461
  %1470 = icmp ult i64 %1449, 16
  br i1 %1470, label %1560, label %1471

1471:                                             ; preds = %1466
  %1472 = add i64 %1449, %1461
  %1473 = getelementptr i16, i16* %1468, i64 %1472
  %1474 = getelementptr i16, i16* %1448, i64 %1449
  %1475 = icmp ult i16* %1469, %1474
  %1476 = icmp ult i16* %1448, %1473
  %1477 = and i1 %1475, %1476
  br i1 %1477, label %1560, label %1478

1478:                                             ; preds = %1471
  %1479 = and i64 %1449, -16
  %1480 = sub i64 %1449, %1479
  %1481 = getelementptr i16, i16* %1448, i64 %1479
  %1482 = getelementptr i16, i16* %1469, i64 %1479
  %1483 = add i64 %1479, -16
  %1484 = lshr exact i64 %1483, 4
  %1485 = add nuw nsw i64 %1484, 1
  %1486 = and i64 %1485, 3
  %1487 = icmp ult i64 %1483, 48
  br i1 %1487, label %1539, label %1488

1488:                                             ; preds = %1478
  %1489 = sub nsw i64 %1485, %1486
  br label %1490

1490:                                             ; preds = %1490, %1488
  %1491 = phi i64 [ 0, %1488 ], [ %1536, %1490 ]
  %1492 = phi i64 [ %1489, %1488 ], [ %1537, %1490 ]
  %1493 = getelementptr i16, i16* %1448, i64 %1491
  %1494 = getelementptr i16, i16* %1469, i64 %1491
  %1495 = bitcast i16* %1493 to <8 x i16>*
  %1496 = load <8 x i16>, <8 x i16>* %1495, align 2, !alias.scope !230
  %1497 = getelementptr i16, i16* %1493, i64 8
  %1498 = bitcast i16* %1497 to <8 x i16>*
  %1499 = load <8 x i16>, <8 x i16>* %1498, align 2, !alias.scope !230
  %1500 = bitcast i16* %1494 to <8 x i16>*
  store <8 x i16> %1496, <8 x i16>* %1500, align 2, !alias.scope !233, !noalias !230
  %1501 = getelementptr i16, i16* %1494, i64 8
  %1502 = bitcast i16* %1501 to <8 x i16>*
  store <8 x i16> %1499, <8 x i16>* %1502, align 2, !alias.scope !233, !noalias !230
  %1503 = or i64 %1491, 16
  %1504 = getelementptr i16, i16* %1448, i64 %1503
  %1505 = getelementptr i16, i16* %1469, i64 %1503
  %1506 = bitcast i16* %1504 to <8 x i16>*
  %1507 = load <8 x i16>, <8 x i16>* %1506, align 2, !alias.scope !230
  %1508 = getelementptr i16, i16* %1504, i64 8
  %1509 = bitcast i16* %1508 to <8 x i16>*
  %1510 = load <8 x i16>, <8 x i16>* %1509, align 2, !alias.scope !230
  %1511 = bitcast i16* %1505 to <8 x i16>*
  store <8 x i16> %1507, <8 x i16>* %1511, align 2, !alias.scope !233, !noalias !230
  %1512 = getelementptr i16, i16* %1505, i64 8
  %1513 = bitcast i16* %1512 to <8 x i16>*
  store <8 x i16> %1510, <8 x i16>* %1513, align 2, !alias.scope !233, !noalias !230
  %1514 = or i64 %1491, 32
  %1515 = getelementptr i16, i16* %1448, i64 %1514
  %1516 = getelementptr i16, i16* %1469, i64 %1514
  %1517 = bitcast i16* %1515 to <8 x i16>*
  %1518 = load <8 x i16>, <8 x i16>* %1517, align 2, !alias.scope !230
  %1519 = getelementptr i16, i16* %1515, i64 8
  %1520 = bitcast i16* %1519 to <8 x i16>*
  %1521 = load <8 x i16>, <8 x i16>* %1520, align 2, !alias.scope !230
  %1522 = bitcast i16* %1516 to <8 x i16>*
  store <8 x i16> %1518, <8 x i16>* %1522, align 2, !alias.scope !233, !noalias !230
  %1523 = getelementptr i16, i16* %1516, i64 8
  %1524 = bitcast i16* %1523 to <8 x i16>*
  store <8 x i16> %1521, <8 x i16>* %1524, align 2, !alias.scope !233, !noalias !230
  %1525 = or i64 %1491, 48
  %1526 = getelementptr i16, i16* %1448, i64 %1525
  %1527 = getelementptr i16, i16* %1469, i64 %1525
  %1528 = bitcast i16* %1526 to <8 x i16>*
  %1529 = load <8 x i16>, <8 x i16>* %1528, align 2, !alias.scope !230
  %1530 = getelementptr i16, i16* %1526, i64 8
  %1531 = bitcast i16* %1530 to <8 x i16>*
  %1532 = load <8 x i16>, <8 x i16>* %1531, align 2, !alias.scope !230
  %1533 = bitcast i16* %1527 to <8 x i16>*
  store <8 x i16> %1529, <8 x i16>* %1533, align 2, !alias.scope !233, !noalias !230
  %1534 = getelementptr i16, i16* %1527, i64 8
  %1535 = bitcast i16* %1534 to <8 x i16>*
  store <8 x i16> %1532, <8 x i16>* %1535, align 2, !alias.scope !233, !noalias !230
  %1536 = add i64 %1491, 64
  %1537 = add i64 %1492, -4
  %1538 = icmp eq i64 %1537, 0
  br i1 %1538, label %1539, label %1490, !llvm.loop !235

1539:                                             ; preds = %1490, %1478
  %1540 = phi i64 [ 0, %1478 ], [ %1536, %1490 ]
  %1541 = icmp eq i64 %1486, 0
  br i1 %1541, label %1558, label %1542

1542:                                             ; preds = %1539, %1542
  %1543 = phi i64 [ %1555, %1542 ], [ %1540, %1539 ]
  %1544 = phi i64 [ %1556, %1542 ], [ %1486, %1539 ]
  %1545 = getelementptr i16, i16* %1448, i64 %1543
  %1546 = getelementptr i16, i16* %1469, i64 %1543
  %1547 = bitcast i16* %1545 to <8 x i16>*
  %1548 = load <8 x i16>, <8 x i16>* %1547, align 2, !alias.scope !230
  %1549 = getelementptr i16, i16* %1545, i64 8
  %1550 = bitcast i16* %1549 to <8 x i16>*
  %1551 = load <8 x i16>, <8 x i16>* %1550, align 2, !alias.scope !230
  %1552 = bitcast i16* %1546 to <8 x i16>*
  store <8 x i16> %1548, <8 x i16>* %1552, align 2, !alias.scope !233, !noalias !230
  %1553 = getelementptr i16, i16* %1546, i64 8
  %1554 = bitcast i16* %1553 to <8 x i16>*
  store <8 x i16> %1551, <8 x i16>* %1554, align 2, !alias.scope !233, !noalias !230
  %1555 = add i64 %1543, 16
  %1556 = add i64 %1544, -1
  %1557 = icmp eq i64 %1556, 0
  br i1 %1557, label %1558, label %1542, !llvm.loop !236

1558:                                             ; preds = %1542, %1539
  %1559 = icmp eq i64 %1449, %1479
  br i1 %1559, label %1613, label %1560

1560:                                             ; preds = %1558, %1471, %1466
  %1561 = phi i64 [ %1449, %1471 ], [ %1449, %1466 ], [ %1480, %1558 ]
  %1562 = phi i16* [ %1448, %1471 ], [ %1448, %1466 ], [ %1481, %1558 ]
  %1563 = phi i16* [ %1469, %1471 ], [ %1469, %1466 ], [ %1482, %1558 ]
  %1564 = add i64 %1561, -1
  %1565 = and i64 %1561, 7
  %1566 = icmp eq i64 %1565, 0
  br i1 %1566, label %1578, label %1567

1567:                                             ; preds = %1560, %1567
  %1568 = phi i64 [ %1573, %1567 ], [ %1561, %1560 ]
  %1569 = phi i16* [ %1575, %1567 ], [ %1562, %1560 ]
  %1570 = phi i16* [ %1574, %1567 ], [ %1563, %1560 ]
  %1571 = phi i64 [ %1576, %1567 ], [ %1565, %1560 ]
  %1572 = load i16, i16* %1569, align 2
  store i16 %1572, i16* %1570, align 2
  %1573 = add i64 %1568, -1
  %1574 = getelementptr inbounds i16, i16* %1570, i64 1
  %1575 = getelementptr inbounds i16, i16* %1569, i64 1
  %1576 = add i64 %1571, -1
  %1577 = icmp eq i64 %1576, 0
  br i1 %1577, label %1578, label %1567, !llvm.loop !237

1578:                                             ; preds = %1567, %1560
  %1579 = phi i64 [ %1561, %1560 ], [ %1573, %1567 ]
  %1580 = phi i16* [ %1562, %1560 ], [ %1575, %1567 ]
  %1581 = phi i16* [ %1563, %1560 ], [ %1574, %1567 ]
  %1582 = icmp ult i64 %1564, 7
  br i1 %1582, label %1613, label %1583

1583:                                             ; preds = %1578, %1583
  %1584 = phi i64 [ %1609, %1583 ], [ %1579, %1578 ]
  %1585 = phi i16* [ %1611, %1583 ], [ %1580, %1578 ]
  %1586 = phi i16* [ %1610, %1583 ], [ %1581, %1578 ]
  %1587 = load i16, i16* %1585, align 2
  store i16 %1587, i16* %1586, align 2
  %1588 = getelementptr inbounds i16, i16* %1586, i64 1
  %1589 = getelementptr inbounds i16, i16* %1585, i64 1
  %1590 = load i16, i16* %1589, align 2
  store i16 %1590, i16* %1588, align 2
  %1591 = getelementptr inbounds i16, i16* %1586, i64 2
  %1592 = getelementptr inbounds i16, i16* %1585, i64 2
  %1593 = load i16, i16* %1592, align 2
  store i16 %1593, i16* %1591, align 2
  %1594 = getelementptr inbounds i16, i16* %1586, i64 3
  %1595 = getelementptr inbounds i16, i16* %1585, i64 3
  %1596 = load i16, i16* %1595, align 2
  store i16 %1596, i16* %1594, align 2
  %1597 = getelementptr inbounds i16, i16* %1586, i64 4
  %1598 = getelementptr inbounds i16, i16* %1585, i64 4
  %1599 = load i16, i16* %1598, align 2
  store i16 %1599, i16* %1597, align 2
  %1600 = getelementptr inbounds i16, i16* %1586, i64 5
  %1601 = getelementptr inbounds i16, i16* %1585, i64 5
  %1602 = load i16, i16* %1601, align 2
  store i16 %1602, i16* %1600, align 2
  %1603 = getelementptr inbounds i16, i16* %1586, i64 6
  %1604 = getelementptr inbounds i16, i16* %1585, i64 6
  %1605 = load i16, i16* %1604, align 2
  store i16 %1605, i16* %1603, align 2
  %1606 = getelementptr inbounds i16, i16* %1586, i64 7
  %1607 = getelementptr inbounds i16, i16* %1585, i64 7
  %1608 = load i16, i16* %1607, align 2
  store i16 %1608, i16* %1606, align 2
  %1609 = add i64 %1584, -8
  %1610 = getelementptr inbounds i16, i16* %1586, i64 8
  %1611 = getelementptr inbounds i16, i16* %1585, i64 8
  %1612 = icmp eq i64 %1609, 0
  br i1 %1612, label %1613, label %1583, !llvm.loop !238

1613:                                             ; preds = %1578, %1583, %1558
  %1614 = add i64 %1461, %1449
  %1615 = load i8, i8* %83, align 1
  %1616 = icmp slt i8 %1615, 0
  br i1 %1616, label %1617, label %1618

1617:                                             ; preds = %1613
  store i64 %1614, i64* %85, align 8
  br label %1620

1618:                                             ; preds = %1613
  %1619 = trunc i64 %1614 to i8
  store i8 %1619, i8* %83, align 1
  br label %1620

1620:                                             ; preds = %1618, %1617
  %1621 = getelementptr inbounds i16, i16* %1468, i64 %1614
  store i16 0, i16* %1621, align 2
  br label %1625

1622:                                             ; preds = %1459
  %1623 = add i64 %1461, %1449
  %1624 = sub i64 %1623, %1460
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %81, i64 %1460, i64 %1624, i64 %1461, i64 %1461, i64 0, i64 %1449, i16* %1448) #10
  br label %1625

1625:                                             ; preds = %1622, %1620, %1464
  %1626 = load float, float* %28, align 8
  %1627 = fadd float %1437, %1626
  store float %1627, float* %28, align 8
  br label %1628

1628:                                             ; preds = %1625, %1441
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %116) #10
  %1629 = load i8, i8* %111, align 1
  %1630 = icmp slt i8 %1629, 0
  %1631 = load i64, i64* %109, align 8
  %1632 = zext i8 %1629 to i64
  %1633 = select i1 %1630, i64 %1631, i64 %1632
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %11, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, i64 %1633, i64 -1, %"class.std::__1::allocator"* nonnull dereferenceable(1) %113) #10
  %1634 = load i8, i8* %106, align 1
  %1635 = icmp slt i8 %1634, 0
  br i1 %1635, label %1636, label %1638

1636:                                             ; preds = %1628
  %1637 = load i8*, i8** %103, align 8
  call void @_ZdlPv(i8* %1637) #12
  br label %1638

1638:                                             ; preds = %1636, %1628
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %100, i8* nonnull align 8 %116, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %116) #10
  %1639 = load i8, i8* %111, align 1
  %1640 = icmp slt i8 %1639, 0
  br i1 %1640, label %1641, label %1643

1641:                                             ; preds = %1638
  %1642 = load i8*, i8** %114, align 8
  call void @_ZdlPv(i8* %1642) #12
  br label %1643

1643:                                             ; preds = %1641, %1638
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #10
  %1644 = load i8, i8* %32, align 1, !range !13
  %1645 = icmp eq i8 %1644, 0
  br i1 %1645, label %1201, label %1646

1646:                                             ; preds = %1643, %1201, %1198
  %1647 = phi i32 [ 0, %1198 ], [ %1435, %1643 ], [ %1203, %1201 ]
  %1648 = load i8, i8* %106, align 1
  %1649 = icmp slt i8 %1648, 0
  br i1 %1649, label %1650, label %1652

1650:                                             ; preds = %1646
  %1651 = load i8*, i8** %103, align 8
  call void @_ZdlPv(i8* %1651) #12
  br label %1652

1652:                                             ; preds = %1650, %1646
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #10
  %1653 = add nsw i32 %1647, %1017
  br label %1857

1654:                                             ; preds = %1015
  %1655 = icmp eq i32 %1016, 2
  %1656 = select i1 %1655, i32 4, i32 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %119, i8 -86, i64 24, i1 false) #10
  %1657 = load %"class.gfx::FontList"*, %"class.gfx::FontList"** %22, align 8
  %1658 = load float, float* %25, align 4
  call void @_ZN3gfx9ElideTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListEfNS_13ElideBehaviorE(%"class.std::__1::basic_string"* nonnull sret %12, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %794, %"class.gfx::FontList"* dereferenceable(8) %1657, float %1658, i32 %1656) #10
  %1659 = load %"class.gfx::FontList"*, %"class.gfx::FontList"** %22, align 8
  %1660 = call float @_ZN3gfx15GetStringWidthFERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %12, %"class.gfx::FontList"* dereferenceable(8) %1659) #10
  %1661 = load i32, i32* %80, align 4
  %1662 = load i32, i32* %26, align 8
  %1663 = icmp slt i32 %1661, %1662
  br i1 %1663, label %1665, label %1664

1664:                                             ; preds = %1654
  store i8 1, i8* %32, align 1
  br label %1851

1665:                                             ; preds = %1654
  %1666 = load i8, i8* %123, align 1
  %1667 = icmp slt i8 %1666, 0
  %1668 = load i16*, i16** %121, align 8
  %1669 = load i64, i64* %122, align 8
  %1670 = zext i8 %1666 to i64
  %1671 = select i1 %1667, i16* %1668, i16* %124
  %1672 = select i1 %1667, i64 %1669, i64 %1670
  %1673 = load i8, i8* %83, align 1
  %1674 = icmp slt i8 %1673, 0
  br i1 %1674, label %1675, label %1680

1675:                                             ; preds = %1665
  %1676 = load i64, i64* %84, align 8
  %1677 = and i64 %1676, 9223372036854775807
  %1678 = add nsw i64 %1677, -1
  %1679 = load i64, i64* %85, align 8
  br label %1682

1680:                                             ; preds = %1665
  %1681 = zext i8 %1673 to i64
  br label %1682

1682:                                             ; preds = %1680, %1675
  %1683 = phi i64 [ %1678, %1675 ], [ 10, %1680 ]
  %1684 = phi i64 [ %1679, %1675 ], [ %1681, %1680 ]
  %1685 = sub i64 %1683, %1684
  %1686 = icmp ult i64 %1685, %1672
  br i1 %1686, label %1845, label %1687

1687:                                             ; preds = %1682
  %1688 = icmp eq i64 %1672, 0
  br i1 %1688, label %1848, label %1689

1689:                                             ; preds = %1687
  %1690 = load i16*, i16** %87, align 8
  %1691 = select i1 %1674, i16* %1690, i16* %86
  %1692 = getelementptr inbounds i16, i16* %1691, i64 %1684
  %1693 = icmp ult i64 %1672, 16
  br i1 %1693, label %1783, label %1694

1694:                                             ; preds = %1689
  %1695 = add i64 %1672, %1684
  %1696 = getelementptr i16, i16* %1691, i64 %1695
  %1697 = getelementptr i16, i16* %1671, i64 %1672
  %1698 = icmp ult i16* %1692, %1697
  %1699 = icmp ult i16* %1671, %1696
  %1700 = and i1 %1698, %1699
  br i1 %1700, label %1783, label %1701

1701:                                             ; preds = %1694
  %1702 = and i64 %1672, -16
  %1703 = sub i64 %1672, %1702
  %1704 = getelementptr i16, i16* %1671, i64 %1702
  %1705 = getelementptr i16, i16* %1692, i64 %1702
  %1706 = add i64 %1702, -16
  %1707 = lshr exact i64 %1706, 4
  %1708 = add nuw nsw i64 %1707, 1
  %1709 = and i64 %1708, 3
  %1710 = icmp ult i64 %1706, 48
  br i1 %1710, label %1762, label %1711

1711:                                             ; preds = %1701
  %1712 = sub nsw i64 %1708, %1709
  br label %1713

1713:                                             ; preds = %1713, %1711
  %1714 = phi i64 [ 0, %1711 ], [ %1759, %1713 ]
  %1715 = phi i64 [ %1712, %1711 ], [ %1760, %1713 ]
  %1716 = getelementptr i16, i16* %1671, i64 %1714
  %1717 = getelementptr i16, i16* %1692, i64 %1714
  %1718 = bitcast i16* %1716 to <8 x i16>*
  %1719 = load <8 x i16>, <8 x i16>* %1718, align 2, !alias.scope !239
  %1720 = getelementptr i16, i16* %1716, i64 8
  %1721 = bitcast i16* %1720 to <8 x i16>*
  %1722 = load <8 x i16>, <8 x i16>* %1721, align 2, !alias.scope !239
  %1723 = bitcast i16* %1717 to <8 x i16>*
  store <8 x i16> %1719, <8 x i16>* %1723, align 2, !alias.scope !242, !noalias !239
  %1724 = getelementptr i16, i16* %1717, i64 8
  %1725 = bitcast i16* %1724 to <8 x i16>*
  store <8 x i16> %1722, <8 x i16>* %1725, align 2, !alias.scope !242, !noalias !239
  %1726 = or i64 %1714, 16
  %1727 = getelementptr i16, i16* %1671, i64 %1726
  %1728 = getelementptr i16, i16* %1692, i64 %1726
  %1729 = bitcast i16* %1727 to <8 x i16>*
  %1730 = load <8 x i16>, <8 x i16>* %1729, align 2, !alias.scope !239
  %1731 = getelementptr i16, i16* %1727, i64 8
  %1732 = bitcast i16* %1731 to <8 x i16>*
  %1733 = load <8 x i16>, <8 x i16>* %1732, align 2, !alias.scope !239
  %1734 = bitcast i16* %1728 to <8 x i16>*
  store <8 x i16> %1730, <8 x i16>* %1734, align 2, !alias.scope !242, !noalias !239
  %1735 = getelementptr i16, i16* %1728, i64 8
  %1736 = bitcast i16* %1735 to <8 x i16>*
  store <8 x i16> %1733, <8 x i16>* %1736, align 2, !alias.scope !242, !noalias !239
  %1737 = or i64 %1714, 32
  %1738 = getelementptr i16, i16* %1671, i64 %1737
  %1739 = getelementptr i16, i16* %1692, i64 %1737
  %1740 = bitcast i16* %1738 to <8 x i16>*
  %1741 = load <8 x i16>, <8 x i16>* %1740, align 2, !alias.scope !239
  %1742 = getelementptr i16, i16* %1738, i64 8
  %1743 = bitcast i16* %1742 to <8 x i16>*
  %1744 = load <8 x i16>, <8 x i16>* %1743, align 2, !alias.scope !239
  %1745 = bitcast i16* %1739 to <8 x i16>*
  store <8 x i16> %1741, <8 x i16>* %1745, align 2, !alias.scope !242, !noalias !239
  %1746 = getelementptr i16, i16* %1739, i64 8
  %1747 = bitcast i16* %1746 to <8 x i16>*
  store <8 x i16> %1744, <8 x i16>* %1747, align 2, !alias.scope !242, !noalias !239
  %1748 = or i64 %1714, 48
  %1749 = getelementptr i16, i16* %1671, i64 %1748
  %1750 = getelementptr i16, i16* %1692, i64 %1748
  %1751 = bitcast i16* %1749 to <8 x i16>*
  %1752 = load <8 x i16>, <8 x i16>* %1751, align 2, !alias.scope !239
  %1753 = getelementptr i16, i16* %1749, i64 8
  %1754 = bitcast i16* %1753 to <8 x i16>*
  %1755 = load <8 x i16>, <8 x i16>* %1754, align 2, !alias.scope !239
  %1756 = bitcast i16* %1750 to <8 x i16>*
  store <8 x i16> %1752, <8 x i16>* %1756, align 2, !alias.scope !242, !noalias !239
  %1757 = getelementptr i16, i16* %1750, i64 8
  %1758 = bitcast i16* %1757 to <8 x i16>*
  store <8 x i16> %1755, <8 x i16>* %1758, align 2, !alias.scope !242, !noalias !239
  %1759 = add i64 %1714, 64
  %1760 = add i64 %1715, -4
  %1761 = icmp eq i64 %1760, 0
  br i1 %1761, label %1762, label %1713, !llvm.loop !244

1762:                                             ; preds = %1713, %1701
  %1763 = phi i64 [ 0, %1701 ], [ %1759, %1713 ]
  %1764 = icmp eq i64 %1709, 0
  br i1 %1764, label %1781, label %1765

1765:                                             ; preds = %1762, %1765
  %1766 = phi i64 [ %1778, %1765 ], [ %1763, %1762 ]
  %1767 = phi i64 [ %1779, %1765 ], [ %1709, %1762 ]
  %1768 = getelementptr i16, i16* %1671, i64 %1766
  %1769 = getelementptr i16, i16* %1692, i64 %1766
  %1770 = bitcast i16* %1768 to <8 x i16>*
  %1771 = load <8 x i16>, <8 x i16>* %1770, align 2, !alias.scope !239
  %1772 = getelementptr i16, i16* %1768, i64 8
  %1773 = bitcast i16* %1772 to <8 x i16>*
  %1774 = load <8 x i16>, <8 x i16>* %1773, align 2, !alias.scope !239
  %1775 = bitcast i16* %1769 to <8 x i16>*
  store <8 x i16> %1771, <8 x i16>* %1775, align 2, !alias.scope !242, !noalias !239
  %1776 = getelementptr i16, i16* %1769, i64 8
  %1777 = bitcast i16* %1776 to <8 x i16>*
  store <8 x i16> %1774, <8 x i16>* %1777, align 2, !alias.scope !242, !noalias !239
  %1778 = add i64 %1766, 16
  %1779 = add i64 %1767, -1
  %1780 = icmp eq i64 %1779, 0
  br i1 %1780, label %1781, label %1765, !llvm.loop !245

1781:                                             ; preds = %1765, %1762
  %1782 = icmp eq i64 %1672, %1702
  br i1 %1782, label %1836, label %1783

1783:                                             ; preds = %1781, %1694, %1689
  %1784 = phi i64 [ %1672, %1694 ], [ %1672, %1689 ], [ %1703, %1781 ]
  %1785 = phi i16* [ %1671, %1694 ], [ %1671, %1689 ], [ %1704, %1781 ]
  %1786 = phi i16* [ %1692, %1694 ], [ %1692, %1689 ], [ %1705, %1781 ]
  %1787 = add i64 %1784, -1
  %1788 = and i64 %1784, 7
  %1789 = icmp eq i64 %1788, 0
  br i1 %1789, label %1801, label %1790

1790:                                             ; preds = %1783, %1790
  %1791 = phi i64 [ %1796, %1790 ], [ %1784, %1783 ]
  %1792 = phi i16* [ %1798, %1790 ], [ %1785, %1783 ]
  %1793 = phi i16* [ %1797, %1790 ], [ %1786, %1783 ]
  %1794 = phi i64 [ %1799, %1790 ], [ %1788, %1783 ]
  %1795 = load i16, i16* %1792, align 2
  store i16 %1795, i16* %1793, align 2
  %1796 = add i64 %1791, -1
  %1797 = getelementptr inbounds i16, i16* %1793, i64 1
  %1798 = getelementptr inbounds i16, i16* %1792, i64 1
  %1799 = add i64 %1794, -1
  %1800 = icmp eq i64 %1799, 0
  br i1 %1800, label %1801, label %1790, !llvm.loop !246

1801:                                             ; preds = %1790, %1783
  %1802 = phi i64 [ %1784, %1783 ], [ %1796, %1790 ]
  %1803 = phi i16* [ %1785, %1783 ], [ %1798, %1790 ]
  %1804 = phi i16* [ %1786, %1783 ], [ %1797, %1790 ]
  %1805 = icmp ult i64 %1787, 7
  br i1 %1805, label %1836, label %1806

1806:                                             ; preds = %1801, %1806
  %1807 = phi i64 [ %1832, %1806 ], [ %1802, %1801 ]
  %1808 = phi i16* [ %1834, %1806 ], [ %1803, %1801 ]
  %1809 = phi i16* [ %1833, %1806 ], [ %1804, %1801 ]
  %1810 = load i16, i16* %1808, align 2
  store i16 %1810, i16* %1809, align 2
  %1811 = getelementptr inbounds i16, i16* %1809, i64 1
  %1812 = getelementptr inbounds i16, i16* %1808, i64 1
  %1813 = load i16, i16* %1812, align 2
  store i16 %1813, i16* %1811, align 2
  %1814 = getelementptr inbounds i16, i16* %1809, i64 2
  %1815 = getelementptr inbounds i16, i16* %1808, i64 2
  %1816 = load i16, i16* %1815, align 2
  store i16 %1816, i16* %1814, align 2
  %1817 = getelementptr inbounds i16, i16* %1809, i64 3
  %1818 = getelementptr inbounds i16, i16* %1808, i64 3
  %1819 = load i16, i16* %1818, align 2
  store i16 %1819, i16* %1817, align 2
  %1820 = getelementptr inbounds i16, i16* %1809, i64 4
  %1821 = getelementptr inbounds i16, i16* %1808, i64 4
  %1822 = load i16, i16* %1821, align 2
  store i16 %1822, i16* %1820, align 2
  %1823 = getelementptr inbounds i16, i16* %1809, i64 5
  %1824 = getelementptr inbounds i16, i16* %1808, i64 5
  %1825 = load i16, i16* %1824, align 2
  store i16 %1825, i16* %1823, align 2
  %1826 = getelementptr inbounds i16, i16* %1809, i64 6
  %1827 = getelementptr inbounds i16, i16* %1808, i64 6
  %1828 = load i16, i16* %1827, align 2
  store i16 %1828, i16* %1826, align 2
  %1829 = getelementptr inbounds i16, i16* %1809, i64 7
  %1830 = getelementptr inbounds i16, i16* %1808, i64 7
  %1831 = load i16, i16* %1830, align 2
  store i16 %1831, i16* %1829, align 2
  %1832 = add i64 %1807, -8
  %1833 = getelementptr inbounds i16, i16* %1809, i64 8
  %1834 = getelementptr inbounds i16, i16* %1808, i64 8
  %1835 = icmp eq i64 %1832, 0
  br i1 %1835, label %1836, label %1806, !llvm.loop !247

1836:                                             ; preds = %1801, %1806, %1781
  %1837 = add i64 %1684, %1672
  %1838 = load i8, i8* %83, align 1
  %1839 = icmp slt i8 %1838, 0
  br i1 %1839, label %1840, label %1841

1840:                                             ; preds = %1836
  store i64 %1837, i64* %85, align 8
  br label %1843

1841:                                             ; preds = %1836
  %1842 = trunc i64 %1837 to i8
  store i8 %1842, i8* %83, align 1
  br label %1843

1843:                                             ; preds = %1841, %1840
  %1844 = getelementptr inbounds i16, i16* %1691, i64 %1837
  store i16 0, i16* %1844, align 2
  br label %1848

1845:                                             ; preds = %1682
  %1846 = add i64 %1684, %1672
  %1847 = sub i64 %1846, %1683
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %81, i64 %1683, i64 %1847, i64 %1684, i64 %1684, i64 0, i64 %1672, i16* %1671) #10
  br label %1848

1848:                                             ; preds = %1845, %1843, %1687
  %1849 = load float, float* %28, align 8
  %1850 = fadd float %1660, %1849
  store float %1850, float* %28, align 8
  br label %1851

1851:                                             ; preds = %1848, %1664
  store i8 1, i8* %31, align 8
  %1852 = load i8, i8* %123, align 1
  %1853 = icmp slt i8 %1852, 0
  br i1 %1853, label %1854, label %1856

1854:                                             ; preds = %1851
  %1855 = load i8*, i8** %125, align 8
  call void @_ZdlPv(i8* %1855) #12
  br label %1856

1856:                                             ; preds = %1854, %1851
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #10
  br label %1857

1857:                                             ; preds = %1856, %1652, %1018, %999, %788, %604
  %1858 = phi i32 [ %598, %604 ], [ %598, %788 ], [ %1017, %1018 ], [ %1653, %1652 ], [ %1017, %1856 ], [ 0, %999 ]
  %1859 = load i8, i8* %127, align 1
  %1860 = icmp slt i8 %1859, 0
  br i1 %1860, label %1861, label %1863

1861:                                             ; preds = %1857
  %1862 = load i8*, i8** %128, align 8
  call void @_ZdlPv(i8* %1862) #12
  br label %1863

1863:                                             ; preds = %1861, %1857
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #10
  %1864 = icmp eq i32 %1858, 0
  br i1 %1864, label %1922, label %1865

1865:                                             ; preds = %1863
  br i1 %369, label %1896, label %1866

1866:                                             ; preds = %1865
  %1867 = load %"class.std::__1::vector.124"*, %"class.std::__1::vector.124"** %29, align 8
  %1868 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %1867, i64 0, i32 0, i32 1
  %1869 = bitcast %"class.std::__1::basic_string"** %1868 to i64*
  %1870 = load i64, i64* %1869, align 8
  %1871 = bitcast %"class.std::__1::vector.124"* %1867 to i64*
  %1872 = load i64, i64* %1871, align 8
  %1873 = sub i64 %1870, %1872
  %1874 = sdiv exact i64 %1873, 24
  %1875 = sext i32 %1858 to i64
  %1876 = sub nsw i64 %1874, %1875
  %1877 = icmp ugt i64 %1874, %1876
  br i1 %1877, label %1880, label %1878

1878:                                             ; preds = %1866
  %1879 = bitcast %"class.std::__1::vector.124"* %1867 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %1879) #11
  unreachable

1880:                                             ; preds = %1866
  %1881 = inttoptr i64 %1872 to %"class.std::__1::basic_string"*
  %1882 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1881, i64 %1876
  %1883 = bitcast %"class.std::__1::basic_string"* %1882 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1884 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1883, i64 0, i32 1, i32 1
  %1885 = load i8, i8* %1884, align 1
  %1886 = icmp slt i8 %1885, 0
  %1887 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1882, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1888 = load i16*, i16** %1887, align 8
  %1889 = bitcast %"class.std::__1::basic_string"* %1882 to i16*
  %1890 = select i1 %1886, i16* %1888, i16* %1889
  %1891 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1881, i64 %1876, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1892 = load i64, i64* %1891, align 8
  %1893 = zext i8 %1885 to i64
  %1894 = select i1 %1886, i64 %1892, i64 %1893
  %1895 = call i32 @_ZN4base14TrimWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS_13TrimPositionsEPNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16* %1890, i64 %1894, i32 2, %"class.std::__1::basic_string"* %1882) #10
  br label %1896

1896:                                             ; preds = %1880, %1865
  %1897 = load i8, i8* %95, align 1
  %1898 = icmp slt i8 %1897, 0
  %1899 = load i16*, i16** %96, align 8
  %1900 = select i1 %1898, i16* %1899, i16* %97
  %1901 = load i64, i64* %98, align 8
  %1902 = zext i8 %1897 to i64
  %1903 = select i1 %1898, i64 %1901, i64 %1902
  %1904 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), align 2
  %1905 = icmp eq i16 %1904, 0
  br i1 %1905, label %1913, label %1906

1906:                                             ; preds = %1896, %1906
  %1907 = phi i64 [ %1909, %1906 ], [ 0, %1896 ]
  %1908 = phi i16* [ %1910, %1906 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), %1896 ]
  %1909 = add i64 %1907, 1
  %1910 = getelementptr inbounds i16, i16* %1908, i64 1
  %1911 = load i16, i16* %1910, align 2
  %1912 = icmp eq i16 %1911, 0
  br i1 %1912, label %1913, label %1906

1913:                                             ; preds = %1906, %1896
  %1914 = phi i64 [ 0, %1896 ], [ %1909, %1906 ]
  %1915 = call zeroext i1 @_ZN4base17ContainsOnlyCharsENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_(i16* %1900, i64 %1903, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), i64 %1914) #10
  br i1 %1915, label %1916, label %1922

1916:                                             ; preds = %1913
  store float 0.000000e+00, float* %28, align 8
  %1917 = load i8, i8* %83, align 1
  %1918 = icmp slt i8 %1917, 0
  br i1 %1918, label %1919, label %1921

1919:                                             ; preds = %1916
  %1920 = load i16*, i16** %87, align 8
  store i16 0, i16* %1920, align 2
  store i64 0, i64* %85, align 8
  br label %1922

1921:                                             ; preds = %1916
  store i16 0, i16* %86, align 8
  store i8 0, i8* %83, align 1
  br label %1922

1922:                                             ; preds = %1921, %1919, %1913, %1863
  %1923 = load i8, i8* %95, align 1
  %1924 = icmp slt i8 %1923, 0
  br i1 %1924, label %1925, label %1927

1925:                                             ; preds = %1922
  %1926 = load i8*, i8** %129, align 8
  call void @_ZdlPv(i8* %1926) #12
  br label %1927

1927:                                             ; preds = %1925, %1922
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #10
  %1928 = call zeroext i1 @_ZN4base4i18n13BreakIterator7AdvanceEv(%"class.base::i18n::BreakIterator"* nonnull %14) #10
  br i1 %1928, label %363, label %1929

1929:                                             ; preds = %1927, %361, %352
  call void @_ZN4base4i18n13BreakIteratorD1Ev(%"class.base::i18n::BreakIterator"* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %88) #10
  br label %1930

1930:                                             ; preds = %1929, %349, %165
  %1931 = load i32, i32* %80, align 4
  %1932 = load i32, i32* %26, align 8
  %1933 = icmp slt i32 %1931, %1932
  br i1 %1933, label %1934, label %2131

1934:                                             ; preds = %1930
  %1935 = load %"class.std::__1::vector.124"*, %"class.std::__1::vector.124"** %29, align 8
  %1936 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %1935, i64 0, i32 0, i32 1
  %1937 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %1936, align 8
  %1938 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %1935, i64 0, i32 0, i32 2, i32 0, i32 0
  %1939 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %1938, align 8
  %1940 = icmp eq %"class.std::__1::basic_string"* %1937, %1939
  br i1 %1940, label %2124, label %1941

1941:                                             ; preds = %1934
  %1942 = load i8, i8* %83, align 1
  %1943 = icmp slt i8 %1942, 0
  br i1 %1943, label %1946, label %1944

1944:                                             ; preds = %1941
  %1945 = bitcast %"class.std::__1::basic_string"* %1937 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1945, i8* align 8 %99, i64 24, i1 false) #10
  br label %2120

1946:                                             ; preds = %1941
  %1947 = load i16*, i16** %87, align 8
  %1948 = load i64, i64* %85, align 8
  %1949 = icmp ult i64 %1948, 11
  br i1 %1949, label %1950, label %1955

1950:                                             ; preds = %1946
  %1951 = bitcast %"class.std::__1::basic_string"* %1937 to i16*
  %1952 = trunc i64 %1948 to i8
  %1953 = bitcast %"class.std::__1::basic_string"* %1937 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1954 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1953, i64 0, i32 1, i32 1
  store i8 %1952, i8* %1954, align 1
  br label %1972

1955:                                             ; preds = %1946
  %1956 = icmp ugt i64 %1948, 9223372036854775791
  br i1 %1956, label %1957, label %1959

1957:                                             ; preds = %1955
  %1958 = bitcast %"class.std::__1::basic_string"* %1937 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %1958) #11
  unreachable

1959:                                             ; preds = %1955
  %1960 = add nuw nsw i64 %1948, 8
  %1961 = and i64 %1960, -8
  %1962 = icmp slt i64 %1961, 0
  br i1 %1962, label %1963, label %1964

1963:                                             ; preds = %1959
  call void @abort() #11
  unreachable

1964:                                             ; preds = %1959
  %1965 = shl i64 %1961, 1
  %1966 = call i8* @_Znwm(i64 %1965) #12
  %1967 = bitcast i8* %1966 to i16*
  %1968 = bitcast %"class.std::__1::basic_string"* %1937 to i8**
  store i8* %1966, i8** %1968, align 8
  %1969 = or i64 %1961, -9223372036854775808
  %1970 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1937, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1969, i64* %1970, align 8
  %1971 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1937, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1948, i64* %1971, align 8
  br label %1972

1972:                                             ; preds = %1964, %1950
  %1973 = phi i16* [ %1951, %1950 ], [ %1967, %1964 ]
  %1974 = add nuw nsw i64 %1948, 1
  %1975 = add i64 %1948, 1
  %1976 = icmp ult i64 %1975, 16
  br i1 %1976, label %2067, label %1977

1977:                                             ; preds = %1972
  %1978 = getelementptr i16, i16* %1973, i64 1
  %1979 = getelementptr i16, i16* %1978, i64 %1948
  %1980 = getelementptr i16, i16* %1947, i64 1
  %1981 = getelementptr i16, i16* %1980, i64 %1948
  %1982 = icmp ult i16* %1973, %1981
  %1983 = icmp ult i16* %1947, %1979
  %1984 = and i1 %1982, %1983
  br i1 %1984, label %2067, label %1985

1985:                                             ; preds = %1977
  %1986 = and i64 %1975, -16
  %1987 = sub i64 %1974, %1986
  %1988 = getelementptr i16, i16* %1947, i64 %1986
  %1989 = getelementptr i16, i16* %1973, i64 %1986
  %1990 = add i64 %1986, -16
  %1991 = lshr exact i64 %1990, 4
  %1992 = add nuw nsw i64 %1991, 1
  %1993 = and i64 %1992, 3
  %1994 = icmp ult i64 %1990, 48
  br i1 %1994, label %2046, label %1995

1995:                                             ; preds = %1985
  %1996 = sub nsw i64 %1992, %1993
  br label %1997

1997:                                             ; preds = %1997, %1995
  %1998 = phi i64 [ 0, %1995 ], [ %2043, %1997 ]
  %1999 = phi i64 [ %1996, %1995 ], [ %2044, %1997 ]
  %2000 = getelementptr i16, i16* %1947, i64 %1998
  %2001 = getelementptr i16, i16* %1973, i64 %1998
  %2002 = bitcast i16* %2000 to <8 x i16>*
  %2003 = load <8 x i16>, <8 x i16>* %2002, align 2, !alias.scope !248
  %2004 = getelementptr i16, i16* %2000, i64 8
  %2005 = bitcast i16* %2004 to <8 x i16>*
  %2006 = load <8 x i16>, <8 x i16>* %2005, align 2, !alias.scope !248
  %2007 = bitcast i16* %2001 to <8 x i16>*
  store <8 x i16> %2003, <8 x i16>* %2007, align 2, !alias.scope !251, !noalias !248
  %2008 = getelementptr i16, i16* %2001, i64 8
  %2009 = bitcast i16* %2008 to <8 x i16>*
  store <8 x i16> %2006, <8 x i16>* %2009, align 2, !alias.scope !251, !noalias !248
  %2010 = or i64 %1998, 16
  %2011 = getelementptr i16, i16* %1947, i64 %2010
  %2012 = getelementptr i16, i16* %1973, i64 %2010
  %2013 = bitcast i16* %2011 to <8 x i16>*
  %2014 = load <8 x i16>, <8 x i16>* %2013, align 2, !alias.scope !248
  %2015 = getelementptr i16, i16* %2011, i64 8
  %2016 = bitcast i16* %2015 to <8 x i16>*
  %2017 = load <8 x i16>, <8 x i16>* %2016, align 2, !alias.scope !248
  %2018 = bitcast i16* %2012 to <8 x i16>*
  store <8 x i16> %2014, <8 x i16>* %2018, align 2, !alias.scope !251, !noalias !248
  %2019 = getelementptr i16, i16* %2012, i64 8
  %2020 = bitcast i16* %2019 to <8 x i16>*
  store <8 x i16> %2017, <8 x i16>* %2020, align 2, !alias.scope !251, !noalias !248
  %2021 = or i64 %1998, 32
  %2022 = getelementptr i16, i16* %1947, i64 %2021
  %2023 = getelementptr i16, i16* %1973, i64 %2021
  %2024 = bitcast i16* %2022 to <8 x i16>*
  %2025 = load <8 x i16>, <8 x i16>* %2024, align 2, !alias.scope !248
  %2026 = getelementptr i16, i16* %2022, i64 8
  %2027 = bitcast i16* %2026 to <8 x i16>*
  %2028 = load <8 x i16>, <8 x i16>* %2027, align 2, !alias.scope !248
  %2029 = bitcast i16* %2023 to <8 x i16>*
  store <8 x i16> %2025, <8 x i16>* %2029, align 2, !alias.scope !251, !noalias !248
  %2030 = getelementptr i16, i16* %2023, i64 8
  %2031 = bitcast i16* %2030 to <8 x i16>*
  store <8 x i16> %2028, <8 x i16>* %2031, align 2, !alias.scope !251, !noalias !248
  %2032 = or i64 %1998, 48
  %2033 = getelementptr i16, i16* %1947, i64 %2032
  %2034 = getelementptr i16, i16* %1973, i64 %2032
  %2035 = bitcast i16* %2033 to <8 x i16>*
  %2036 = load <8 x i16>, <8 x i16>* %2035, align 2, !alias.scope !248
  %2037 = getelementptr i16, i16* %2033, i64 8
  %2038 = bitcast i16* %2037 to <8 x i16>*
  %2039 = load <8 x i16>, <8 x i16>* %2038, align 2, !alias.scope !248
  %2040 = bitcast i16* %2034 to <8 x i16>*
  store <8 x i16> %2036, <8 x i16>* %2040, align 2, !alias.scope !251, !noalias !248
  %2041 = getelementptr i16, i16* %2034, i64 8
  %2042 = bitcast i16* %2041 to <8 x i16>*
  store <8 x i16> %2039, <8 x i16>* %2042, align 2, !alias.scope !251, !noalias !248
  %2043 = add i64 %1998, 64
  %2044 = add i64 %1999, -4
  %2045 = icmp eq i64 %2044, 0
  br i1 %2045, label %2046, label %1997, !llvm.loop !253

2046:                                             ; preds = %1997, %1985
  %2047 = phi i64 [ 0, %1985 ], [ %2043, %1997 ]
  %2048 = icmp eq i64 %1993, 0
  br i1 %2048, label %2065, label %2049

2049:                                             ; preds = %2046, %2049
  %2050 = phi i64 [ %2062, %2049 ], [ %2047, %2046 ]
  %2051 = phi i64 [ %2063, %2049 ], [ %1993, %2046 ]
  %2052 = getelementptr i16, i16* %1947, i64 %2050
  %2053 = getelementptr i16, i16* %1973, i64 %2050
  %2054 = bitcast i16* %2052 to <8 x i16>*
  %2055 = load <8 x i16>, <8 x i16>* %2054, align 2, !alias.scope !248
  %2056 = getelementptr i16, i16* %2052, i64 8
  %2057 = bitcast i16* %2056 to <8 x i16>*
  %2058 = load <8 x i16>, <8 x i16>* %2057, align 2, !alias.scope !248
  %2059 = bitcast i16* %2053 to <8 x i16>*
  store <8 x i16> %2055, <8 x i16>* %2059, align 2, !alias.scope !251, !noalias !248
  %2060 = getelementptr i16, i16* %2053, i64 8
  %2061 = bitcast i16* %2060 to <8 x i16>*
  store <8 x i16> %2058, <8 x i16>* %2061, align 2, !alias.scope !251, !noalias !248
  %2062 = add i64 %2050, 16
  %2063 = add i64 %2051, -1
  %2064 = icmp eq i64 %2063, 0
  br i1 %2064, label %2065, label %2049, !llvm.loop !254

2065:                                             ; preds = %2049, %2046
  %2066 = icmp eq i64 %1975, %1986
  br i1 %2066, label %2120, label %2067

2067:                                             ; preds = %2065, %1977, %1972
  %2068 = phi i64 [ %1974, %1977 ], [ %1974, %1972 ], [ %1987, %2065 ]
  %2069 = phi i16* [ %1947, %1977 ], [ %1947, %1972 ], [ %1988, %2065 ]
  %2070 = phi i16* [ %1973, %1977 ], [ %1973, %1972 ], [ %1989, %2065 ]
  %2071 = add i64 %2068, -1
  %2072 = and i64 %2068, 7
  %2073 = icmp eq i64 %2072, 0
  br i1 %2073, label %2085, label %2074

2074:                                             ; preds = %2067, %2074
  %2075 = phi i64 [ %2080, %2074 ], [ %2068, %2067 ]
  %2076 = phi i16* [ %2082, %2074 ], [ %2069, %2067 ]
  %2077 = phi i16* [ %2081, %2074 ], [ %2070, %2067 ]
  %2078 = phi i64 [ %2083, %2074 ], [ %2072, %2067 ]
  %2079 = load i16, i16* %2076, align 2
  store i16 %2079, i16* %2077, align 2
  %2080 = add i64 %2075, -1
  %2081 = getelementptr inbounds i16, i16* %2077, i64 1
  %2082 = getelementptr inbounds i16, i16* %2076, i64 1
  %2083 = add i64 %2078, -1
  %2084 = icmp eq i64 %2083, 0
  br i1 %2084, label %2085, label %2074, !llvm.loop !255

2085:                                             ; preds = %2074, %2067
  %2086 = phi i64 [ %2068, %2067 ], [ %2080, %2074 ]
  %2087 = phi i16* [ %2069, %2067 ], [ %2082, %2074 ]
  %2088 = phi i16* [ %2070, %2067 ], [ %2081, %2074 ]
  %2089 = icmp ult i64 %2071, 7
  br i1 %2089, label %2120, label %2090

2090:                                             ; preds = %2085, %2090
  %2091 = phi i64 [ %2116, %2090 ], [ %2086, %2085 ]
  %2092 = phi i16* [ %2118, %2090 ], [ %2087, %2085 ]
  %2093 = phi i16* [ %2117, %2090 ], [ %2088, %2085 ]
  %2094 = load i16, i16* %2092, align 2
  store i16 %2094, i16* %2093, align 2
  %2095 = getelementptr inbounds i16, i16* %2093, i64 1
  %2096 = getelementptr inbounds i16, i16* %2092, i64 1
  %2097 = load i16, i16* %2096, align 2
  store i16 %2097, i16* %2095, align 2
  %2098 = getelementptr inbounds i16, i16* %2093, i64 2
  %2099 = getelementptr inbounds i16, i16* %2092, i64 2
  %2100 = load i16, i16* %2099, align 2
  store i16 %2100, i16* %2098, align 2
  %2101 = getelementptr inbounds i16, i16* %2093, i64 3
  %2102 = getelementptr inbounds i16, i16* %2092, i64 3
  %2103 = load i16, i16* %2102, align 2
  store i16 %2103, i16* %2101, align 2
  %2104 = getelementptr inbounds i16, i16* %2093, i64 4
  %2105 = getelementptr inbounds i16, i16* %2092, i64 4
  %2106 = load i16, i16* %2105, align 2
  store i16 %2106, i16* %2104, align 2
  %2107 = getelementptr inbounds i16, i16* %2093, i64 5
  %2108 = getelementptr inbounds i16, i16* %2092, i64 5
  %2109 = load i16, i16* %2108, align 2
  store i16 %2109, i16* %2107, align 2
  %2110 = getelementptr inbounds i16, i16* %2093, i64 6
  %2111 = getelementptr inbounds i16, i16* %2092, i64 6
  %2112 = load i16, i16* %2111, align 2
  store i16 %2112, i16* %2110, align 2
  %2113 = getelementptr inbounds i16, i16* %2093, i64 7
  %2114 = getelementptr inbounds i16, i16* %2092, i64 7
  %2115 = load i16, i16* %2114, align 2
  store i16 %2115, i16* %2113, align 2
  %2116 = add i64 %2091, -8
  %2117 = getelementptr inbounds i16, i16* %2093, i64 8
  %2118 = getelementptr inbounds i16, i16* %2092, i64 8
  %2119 = icmp eq i64 %2116, 0
  br i1 %2119, label %2120, label %2090, !llvm.loop !256

2120:                                             ; preds = %2085, %2090, %2065, %1944
  %2121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1937, i64 1
  %2122 = ptrtoint %"class.std::__1::basic_string"* %2121 to i64
  %2123 = bitcast %"class.std::__1::basic_string"** %1936 to i64*
  store i64 %2122, i64* %2123, align 8
  br label %2125

2124:                                             ; preds = %1934
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.124"* %1935, %"class.std::__1::basic_string"* dereferenceable(24) %81) #10
  br label %2125

2125:                                             ; preds = %2124, %2120
  %2126 = load i8, i8* %83, align 1
  %2127 = icmp slt i8 %2126, 0
  br i1 %2127, label %2128, label %2130

2128:                                             ; preds = %2125
  %2129 = load i16*, i16** %87, align 8
  store i16 0, i16* %2129, align 2
  store i64 0, i64* %85, align 8
  br label %2132

2130:                                             ; preds = %2125
  store i16 0, i16* %86, align 8
  store i8 0, i8* %83, align 1
  br label %2132

2131:                                             ; preds = %1930
  store i8 1, i8* %32, align 1
  br label %2132

2132:                                             ; preds = %2131, %2130, %2128
  %2133 = load i32, i32* %23, align 8
  %2134 = load i32, i32* %80, align 4
  %2135 = add nsw i32 %2134, %2133
  store i32 %2135, i32* %80, align 4
  store float 0.000000e+00, float* %28, align 8
  %2136 = load i8, i8* %77, align 1
  %2137 = icmp slt i8 %2136, 0
  br i1 %2137, label %2138, label %2140

2138:                                             ; preds = %2132
  %2139 = load i8*, i8** %130, align 8
  call void @_ZdlPv(i8* %2139) #12
  br label %2140

2140:                                             ; preds = %2138, %2132
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #10
  %2141 = load i8, i8* %32, align 1, !range !13
  %2142 = icmp eq i8 %2141, 0
  br i1 %2142, label %131, label %2143

2143:                                             ; preds = %131, %2140, %51
  call void @_ZN4base4i18n13BreakIteratorD1Ev(%"class.base::i18n::BreakIterator"* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %52) #10
  %2144 = load i8, i8* %32, align 1, !range !13
  %2145 = icmp eq i8 %2144, 0
  br i1 %2145, label %2146, label %2193

2146:                                             ; preds = %2143
  %2147 = load %"class.std::__1::vector.124"*, %"class.std::__1::vector.124"** %29, align 8
  %2148 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %2147, i64 0, i32 0, i32 0
  %2149 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %2148, align 8
  %2150 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %2147, i64 0, i32 0, i32 1
  %2151 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %2150, align 8
  %2152 = icmp eq %"class.std::__1::basic_string"* %2149, %2151
  br i1 %2152, label %2193, label %2153

2153:                                             ; preds = %2146
  %2154 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2151, i64 -1
  %2155 = bitcast %"class.std::__1::basic_string"* %2154 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2156 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2155, i64 0, i32 1, i32 1
  %2157 = load i8, i8* %2156, align 1
  %2158 = icmp slt i8 %2157, 0
  %2159 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2154, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2160 = load i16*, i16** %2159, align 8
  %2161 = bitcast %"class.std::__1::basic_string"* %2154 to i16*
  %2162 = select i1 %2158, i16* %2160, i16* %2161
  %2163 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2151, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %2164 = load i64, i64* %2163, align 8
  %2165 = zext i8 %2157 to i64
  %2166 = select i1 %2158, i64 %2164, i64 %2165
  %2167 = call i32 @_ZN4base14TrimWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS_13TrimPositionsEPNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16* %2162, i64 %2166, i32 2, %"class.std::__1::basic_string"* %2154) #10
  %2168 = load %"class.std::__1::vector.124"*, %"class.std::__1::vector.124"** %29, align 8
  %2169 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %2168, i64 0, i32 0, i32 1
  %2170 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %2169, align 8
  %2171 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2170, i64 -1
  %2172 = bitcast %"class.std::__1::basic_string"* %2171 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2173 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2172, i64 0, i32 1, i32 1
  %2174 = load i8, i8* %2173, align 1
  %2175 = icmp slt i8 %2174, 0
  br i1 %2175, label %2176, label %2179

2176:                                             ; preds = %2153
  %2177 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2170, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %2178 = load i64, i64* %2177, align 8
  br label %2181

2179:                                             ; preds = %2153
  %2180 = zext i8 %2174 to i64
  br label %2181

2181:                                             ; preds = %2179, %2176
  %2182 = phi i64 [ %2178, %2176 ], [ %2180, %2179 ]
  %2183 = icmp eq i64 %2182, 0
  br i1 %2183, label %2184, label %2193

2184:                                             ; preds = %2181
  %2185 = getelementptr inbounds %"class.gfx::(anonymous namespace)::RectangleText", %"class.gfx::(anonymous namespace)::RectangleText"* %20, i64 0, i32 8
  %2186 = load i8, i8* %2185, align 8, !range !13
  %2187 = icmp eq i8 %2186, 0
  br i1 %2187, label %2188, label %2193

2188:                                             ; preds = %2184
  br i1 %2175, label %2189, label %2192

2189:                                             ; preds = %2188
  %2190 = bitcast %"class.std::__1::basic_string"* %2171 to i8**
  %2191 = load i8*, i8** %2190, align 8
  call void @_ZdlPv(i8* %2191) #12
  br label %2192

2192:                                             ; preds = %2189, %2188
  store %"class.std::__1::basic_string"* %2171, %"class.std::__1::basic_string"** %2169, align 8
  br label %2193

2193:                                             ; preds = %2192, %2184, %2181, %2146, %2143
  %2194 = getelementptr inbounds %"class.gfx::(anonymous namespace)::RectangleText", %"class.gfx::(anonymous namespace)::RectangleText"* %20, i64 0, i32 8
  %2195 = load i8, i8* %2194, align 8, !range !13
  %2196 = icmp eq i8 %2195, 0
  br i1 %2196, label %2220, label %2197

2197:                                             ; preds = %2193
  %2198 = load %"class.std::__1::vector.124"*, %"class.std::__1::vector.124"** %29, align 8
  %2199 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2199) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2199, i8 0, i64 24, i1 false) #10
  %2200 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %2198, i64 0, i32 0, i32 1
  %2201 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %2200, align 8
  %2202 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %2198, i64 0, i32 0, i32 2, i32 0, i32 0
  %2203 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %2202, align 8
  %2204 = icmp ult %"class.std::__1::basic_string"* %2201, %2203
  br i1 %2204, label %2205, label %2210

2205:                                             ; preds = %2197
  %2206 = bitcast %"class.std::__1::basic_string"* %2201 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2206, i8* nonnull align 8 %2199, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2199, i8 0, i64 24, i1 false) #10
  %2207 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2201, i64 1
  %2208 = ptrtoint %"class.std::__1::basic_string"* %2207 to i64
  %2209 = bitcast %"class.std::__1::basic_string"** %2200 to i64*
  store i64 %2208, i64* %2209, align 8
  br label %2211

2210:                                             ; preds = %2197
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.124"* %2198, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #10
  br label %2211

2211:                                             ; preds = %2210, %2205
  %2212 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2213 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2212, i64 0, i32 1, i32 1
  %2214 = load i8, i8* %2213, align 1
  %2215 = icmp slt i8 %2214, 0
  br i1 %2215, label %2216, label %2219

2216:                                             ; preds = %2211
  %2217 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  %2218 = load i8*, i8** %2217, align 8
  call void @_ZdlPv(i8* %2218) #12
  br label %2219

2219:                                             ; preds = %2216, %2211
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2199) #10
  br label %2220

2220:                                             ; preds = %2193, %2219
  %2221 = load i8, i8* %31, align 8, !range !13
  %2222 = zext i8 %2221 to i32
  %2223 = load i8, i8* %32, align 1, !range !13
  %2224 = icmp eq i8 %2223, 0
  %2225 = select i1 %2224, i32 0, i32 2
  %2226 = or i32 %2225, %2222
  %2227 = load i8, i8* %33, align 2, !range !13
  %2228 = icmp eq i8 %2227, 0
  %2229 = select i1 %2228, i32 0, i32 4
  %2230 = or i32 %2226, %2229
  %2231 = getelementptr inbounds %"class.gfx::(anonymous namespace)::RectangleText", %"class.gfx::(anonymous namespace)::RectangleText"* %20, i64 0, i32 7
  %2232 = bitcast %"class.std::__1::basic_string"* %2231 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2233 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2232, i64 0, i32 1, i32 1
  %2234 = load i8, i8* %2233, align 1
  %2235 = icmp slt i8 %2234, 0
  br i1 %2235, label %2236, label %2239

2236:                                             ; preds = %2220
  %2237 = bitcast %"class.std::__1::basic_string"* %2231 to i8**
  %2238 = load i8*, i8** %2237, align 8
  call void @_ZdlPv(i8* %2238) #12
  br label %2239

2239:                                             ; preds = %2220, %2236
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %21) #10
  ret i32 %2230
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx14TruncateStringERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmNS_9BreakTypeE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), i64, i32) local_unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.icu_69::UnicodeString", align 8
  %8 = alloca %"class.icu_69::StringCharacterIterator", align 8
  %9 = alloca %"class.icu_69::UnicodeString", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = icmp eq i32 %3, 1
  %13 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %15 to i64
  %20 = select i1 %16, i64 %18, i64 %19
  %21 = icmp ugt i64 %20, %2
  br i1 %21, label %199, label %22

22:                                               ; preds = %4
  br i1 %16, label %26, label %23

23:                                               ; preds = %22
  %24 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %25 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false) #10
  br label %416

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i16*, i16** %27, align 8
  %29 = icmp ult i64 %18, 11
  br i1 %29, label %30, label %35

30:                                               ; preds = %26
  %31 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %32 = trunc i64 %18 to i8
  %33 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %33, i64 0, i32 1, i32 1
  store i8 %32, i8* %34, align 1
  br label %52

35:                                               ; preds = %26
  %36 = icmp ugt i64 %18, 9223372036854775791
  br i1 %36, label %37, label %39

37:                                               ; preds = %35
  %38 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %38) #11
  unreachable

39:                                               ; preds = %35
  %40 = add nuw nsw i64 %18, 8
  %41 = and i64 %40, -8
  %42 = icmp slt i64 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %39
  tail call void @abort() #11
  unreachable

44:                                               ; preds = %39
  %45 = shl i64 %41, 1
  %46 = tail call i8* @_Znwm(i64 %45) #12
  %47 = bitcast i8* %46 to i16*
  %48 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %46, i8** %48, align 8
  %49 = or i64 %41, -9223372036854775808
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %51, align 8
  br label %52

52:                                               ; preds = %44, %30
  %53 = phi i16* [ %31, %30 ], [ %47, %44 ]
  %54 = add nuw nsw i64 %18, 1
  %55 = add i64 %18, 1
  %56 = icmp ult i64 %55, 16
  br i1 %56, label %146, label %57

57:                                               ; preds = %52
  %58 = add i64 %18, 1
  %59 = getelementptr i16, i16* %53, i64 %58
  %60 = getelementptr i16, i16* %28, i64 %58
  %61 = icmp ult i16* %53, %60
  %62 = icmp ult i16* %28, %59
  %63 = and i1 %61, %62
  br i1 %63, label %146, label %64

64:                                               ; preds = %57
  %65 = and i64 %55, -16
  %66 = sub i64 %54, %65
  %67 = getelementptr i16, i16* %28, i64 %65
  %68 = getelementptr i16, i16* %53, i64 %65
  %69 = add i64 %65, -16
  %70 = lshr exact i64 %69, 4
  %71 = add nuw nsw i64 %70, 1
  %72 = and i64 %71, 3
  %73 = icmp ult i64 %69, 48
  br i1 %73, label %125, label %74

74:                                               ; preds = %64
  %75 = sub nsw i64 %71, %72
  br label %76

76:                                               ; preds = %76, %74
  %77 = phi i64 [ 0, %74 ], [ %122, %76 ]
  %78 = phi i64 [ %75, %74 ], [ %123, %76 ]
  %79 = getelementptr i16, i16* %28, i64 %77
  %80 = getelementptr i16, i16* %53, i64 %77
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !257
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !257
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !260, !noalias !257
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !260, !noalias !257
  %89 = or i64 %77, 16
  %90 = getelementptr i16, i16* %28, i64 %89
  %91 = getelementptr i16, i16* %53, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !257
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !257
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !260, !noalias !257
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !260, !noalias !257
  %100 = or i64 %77, 32
  %101 = getelementptr i16, i16* %28, i64 %100
  %102 = getelementptr i16, i16* %53, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !257
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !257
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !260, !noalias !257
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !260, !noalias !257
  %111 = or i64 %77, 48
  %112 = getelementptr i16, i16* %28, i64 %111
  %113 = getelementptr i16, i16* %53, i64 %111
  %114 = bitcast i16* %112 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !257
  %116 = getelementptr i16, i16* %112, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  %118 = load <8 x i16>, <8 x i16>* %117, align 2, !alias.scope !257
  %119 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %119, align 2, !alias.scope !260, !noalias !257
  %120 = getelementptr i16, i16* %113, i64 8
  %121 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %118, <8 x i16>* %121, align 2, !alias.scope !260, !noalias !257
  %122 = add i64 %77, 64
  %123 = add i64 %78, -4
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %125, label %76, !llvm.loop !262

125:                                              ; preds = %76, %64
  %126 = phi i64 [ 0, %64 ], [ %122, %76 ]
  %127 = icmp eq i64 %72, 0
  br i1 %127, label %144, label %128

128:                                              ; preds = %125, %128
  %129 = phi i64 [ %141, %128 ], [ %126, %125 ]
  %130 = phi i64 [ %142, %128 ], [ %72, %125 ]
  %131 = getelementptr i16, i16* %28, i64 %129
  %132 = getelementptr i16, i16* %53, i64 %129
  %133 = bitcast i16* %131 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !257
  %135 = getelementptr i16, i16* %131, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  %137 = load <8 x i16>, <8 x i16>* %136, align 2, !alias.scope !257
  %138 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %138, align 2, !alias.scope !260, !noalias !257
  %139 = getelementptr i16, i16* %132, i64 8
  %140 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %137, <8 x i16>* %140, align 2, !alias.scope !260, !noalias !257
  %141 = add i64 %129, 16
  %142 = add i64 %130, -1
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %128, !llvm.loop !263

144:                                              ; preds = %128, %125
  %145 = icmp eq i64 %55, %65
  br i1 %145, label %416, label %146

146:                                              ; preds = %144, %57, %52
  %147 = phi i64 [ %54, %57 ], [ %54, %52 ], [ %66, %144 ]
  %148 = phi i16* [ %28, %57 ], [ %28, %52 ], [ %67, %144 ]
  %149 = phi i16* [ %53, %57 ], [ %53, %52 ], [ %68, %144 ]
  %150 = add i64 %147, -1
  %151 = and i64 %147, 7
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %164, label %153

153:                                              ; preds = %146, %153
  %154 = phi i64 [ %159, %153 ], [ %147, %146 ]
  %155 = phi i16* [ %161, %153 ], [ %148, %146 ]
  %156 = phi i16* [ %160, %153 ], [ %149, %146 ]
  %157 = phi i64 [ %162, %153 ], [ %151, %146 ]
  %158 = load i16, i16* %155, align 2
  store i16 %158, i16* %156, align 2
  %159 = add i64 %154, -1
  %160 = getelementptr inbounds i16, i16* %156, i64 1
  %161 = getelementptr inbounds i16, i16* %155, i64 1
  %162 = add i64 %157, -1
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %153, !llvm.loop !264

164:                                              ; preds = %153, %146
  %165 = phi i64 [ %147, %146 ], [ %159, %153 ]
  %166 = phi i16* [ %148, %146 ], [ %161, %153 ]
  %167 = phi i16* [ %149, %146 ], [ %160, %153 ]
  %168 = icmp ult i64 %150, 7
  br i1 %168, label %416, label %169

169:                                              ; preds = %164, %169
  %170 = phi i64 [ %195, %169 ], [ %165, %164 ]
  %171 = phi i16* [ %197, %169 ], [ %166, %164 ]
  %172 = phi i16* [ %196, %169 ], [ %167, %164 ]
  %173 = load i16, i16* %171, align 2
  store i16 %173, i16* %172, align 2
  %174 = getelementptr inbounds i16, i16* %172, i64 1
  %175 = getelementptr inbounds i16, i16* %171, i64 1
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %172, i64 2
  %178 = getelementptr inbounds i16, i16* %171, i64 2
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %172, i64 3
  %181 = getelementptr inbounds i16, i16* %171, i64 3
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %172, i64 4
  %184 = getelementptr inbounds i16, i16* %171, i64 4
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %172, i64 5
  %187 = getelementptr inbounds i16, i16* %171, i64 5
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %172, i64 6
  %190 = getelementptr inbounds i16, i16* %171, i64 6
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = getelementptr inbounds i16, i16* %172, i64 7
  %193 = getelementptr inbounds i16, i16* %171, i64 7
  %194 = load i16, i16* %193, align 2
  store i16 %194, i16* %192, align 2
  %195 = add i64 %170, -8
  %196 = getelementptr inbounds i16, i16* %172, i64 8
  %197 = getelementptr inbounds i16, i16* %171, i64 8
  %198 = icmp eq i64 %195, 0
  br i1 %198, label %416, label %169, !llvm.loop !265

199:                                              ; preds = %4
  switch i64 %2, label %207 [
    i64 0, label %200
    i64 1, label %202
  ]

200:                                              ; preds = %199
  %201 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %201, i8 0, i64 24, i1 false) #10
  br label %416

202:                                              ; preds = %199
  %203 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %204 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %203, i64 0, i32 1, i32 1
  store i8 1, i8* %204, align 1
  %205 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  store i16 8230, i16* %205, align 8
  %206 = getelementptr inbounds i16, i16* %205, i64 1
  store i16 0, i16* %206, align 2
  br label %416

207:                                              ; preds = %199
  %208 = add i64 %2, -1
  %209 = trunc i64 %208 to i32
  br i1 %12, label %210, label %289

210:                                              ; preds = %207
  %211 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %211) #10
  store i32 0, i32* %5, align 4
  %212 = tail call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() #10
  %213 = call %"class.icu_69::BreakIterator"* @_ZN6icu_6913BreakIterator18createWordInstanceERKNS_6LocaleER10UErrorCode(%"class.icu_69::Locale"* dereferenceable(224) %212, i32* nonnull dereferenceable(4) %5) #10
  %214 = load i32, i32* %5, align 4
  %215 = icmp slt i32 %214, 1
  br i1 %215, label %256, label %216

216:                                              ; preds = %210
  %217 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %217) #10
  %218 = bitcast %"class.std::__1::basic_string"* %1 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %6, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 0, i64 %208, %"class.std::__1::allocator"* dereferenceable(1) %218) #10
  %219 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %220 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %219, i64 0, i32 1, i32 1
  %221 = load i8, i8* %220, align 1, !noalias !266
  %222 = icmp slt i8 %221, 0
  br i1 %222, label %223, label %230

223:                                              ; preds = %216
  %224 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %225 = load i64, i64* %224, align 8, !noalias !266
  %226 = and i64 %225, 9223372036854775807
  %227 = add nsw i64 %226, -1
  %228 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %229 = load i64, i64* %228, align 8, !noalias !266
  br label %232

230:                                              ; preds = %216
  %231 = zext i8 %221 to i64
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i64 [ %227, %223 ], [ 10, %230 ]
  %234 = phi i64 [ %229, %223 ], [ %231, %230 ]
  %235 = icmp eq i64 %233, %234
  br i1 %235, label %251, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = load i16*, i16** %237, align 8, !noalias !266
  %239 = bitcast %"class.std::__1::basic_string"* %6 to i16*
  %240 = select i1 %222, i16* %238, i16* %239
  %241 = getelementptr inbounds i16, i16* %240, i64 %234
  store i16 8230, i16* %241, align 2, !noalias !266
  %242 = add i64 %234, 1
  %243 = load i8, i8* %220, align 1, !noalias !266
  %244 = icmp slt i8 %243, 0
  br i1 %244, label %245, label %247

245:                                              ; preds = %236
  %246 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %242, i64* %246, align 8, !noalias !266
  br label %249

247:                                              ; preds = %236
  %248 = trunc i64 %242 to i8
  store i8 %248, i8* %220, align 1, !noalias !266
  br label %249

249:                                              ; preds = %247, %245
  %250 = getelementptr inbounds i16, i16* %240, i64 %242
  store i16 0, i16* %250, align 2, !noalias !266
  br label %254

251:                                              ; preds = %232
  %252 = add i64 %234, 1
  %253 = sub i64 %252, %233
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* nonnull %6, i64 %233, i64 %253, i64 %234, i64 %234, i64 0, i64 1, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @_ZZN3gfx14TruncateStringERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmNS_9BreakTypeEE12kElideString, i64 0, i64 0)) #10, !noalias !266
  br label %254

254:                                              ; preds = %251, %249
  %255 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %255, i8* nonnull align 8 %217, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %217) #10
  br label %277

256:                                              ; preds = %210
  %257 = bitcast %"class.icu_69::UnicodeString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %257) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %257, i8 -86, i64 64, i1 false)
  %258 = load i8, i8* %14, align 1
  %259 = icmp slt i8 %258, 0
  %260 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %261 = load i16*, i16** %260, align 8
  %262 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %263 = select i1 %259, i16* %261, i16* %262
  call void @_ZN6icu_6913UnicodeStringC1EPKDs(%"class.icu_69::UnicodeString"* nonnull %7, i16* %263) #10
  %264 = bitcast %"class.icu_69::BreakIterator"* %213 to void (%"class.icu_69::BreakIterator"*, %"class.icu_69::UnicodeString"*)***
  %265 = load void (%"class.icu_69::BreakIterator"*, %"class.icu_69::UnicodeString"*)**, void (%"class.icu_69::BreakIterator"*, %"class.icu_69::UnicodeString"*)*** %264, align 8
  %266 = getelementptr inbounds void (%"class.icu_69::BreakIterator"*, %"class.icu_69::UnicodeString"*)*, void (%"class.icu_69::BreakIterator"*, %"class.icu_69::UnicodeString"*)** %265, i64 7
  %267 = load void (%"class.icu_69::BreakIterator"*, %"class.icu_69::UnicodeString"*)*, void (%"class.icu_69::BreakIterator"*, %"class.icu_69::UnicodeString"*)** %266, align 8
  call void %267(%"class.icu_69::BreakIterator"* %213, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %7) #10
  %268 = trunc i64 %2 to i32
  %269 = bitcast %"class.icu_69::BreakIterator"* %213 to i32 (%"class.icu_69::BreakIterator"*, i32)***
  %270 = load i32 (%"class.icu_69::BreakIterator"*, i32)**, i32 (%"class.icu_69::BreakIterator"*, i32)*** %269, align 8
  %271 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %270, i64 16
  %272 = load i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %271, align 8
  %273 = call i32 %272(%"class.icu_69::BreakIterator"* %213, i32 %268) #10
  %274 = add i32 %273, 1
  %275 = icmp ult i32 %274, 2
  %276 = select i1 %275, i32 %209, i32 %273
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %257) #10
  br label %277

277:                                              ; preds = %256, %254
  %278 = phi i1 [ false, %254 ], [ true, %256 ]
  %279 = phi i32 [ %209, %254 ], [ %276, %256 ]
  %280 = icmp eq %"class.icu_69::BreakIterator"* %213, null
  br i1 %280, label %286, label %281

281:                                              ; preds = %277
  %282 = bitcast %"class.icu_69::BreakIterator"* %213 to void (%"class.icu_69::BreakIterator"*)***
  %283 = load void (%"class.icu_69::BreakIterator"*)**, void (%"class.icu_69::BreakIterator"*)*** %282, align 8
  %284 = getelementptr inbounds void (%"class.icu_69::BreakIterator"*)*, void (%"class.icu_69::BreakIterator"*)** %283, i64 1
  %285 = load void (%"class.icu_69::BreakIterator"*)*, void (%"class.icu_69::BreakIterator"*)** %284, align 8
  call void %285(%"class.icu_69::BreakIterator"* nonnull %213) #10
  br label %286

286:                                              ; preds = %277, %281
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %211) #10
  br i1 %278, label %287, label %416

287:                                              ; preds = %286
  %288 = load i8, i8* %14, align 1
  br label %289

289:                                              ; preds = %287, %207
  %290 = phi i8 [ %288, %287 ], [ %15, %207 ]
  %291 = phi i32 [ %279, %287 ], [ %209, %207 ]
  %292 = bitcast %"class.icu_69::StringCharacterIterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %292) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %292, i8 -86, i64 96, i1 false)
  %293 = bitcast %"class.icu_69::UnicodeString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %293) #10
  %294 = icmp slt i8 %290, 0
  %295 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %296 = load i16*, i16** %295, align 8
  %297 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %298 = select i1 %294, i16* %296, i16* %297
  call void @_ZN6icu_6913UnicodeStringC1EPKDs(%"class.icu_69::UnicodeString"* nonnull %9, i16* %298) #10
  call void @_ZN6icu_6923StringCharacterIteratorC1ERKNS_13UnicodeStringE(%"class.icu_69::StringCharacterIterator"* nonnull %8, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %9) #10
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %293) #10
  %299 = getelementptr inbounds %"class.icu_69::StringCharacterIterator", %"class.icu_69::StringCharacterIterator"* %8, i64 0, i32 0
  %300 = call zeroext i16 @_ZN6icu_6922UCharCharacterIterator8setIndexEi(%"class.icu_69::UCharCharacterIterator"* nonnull %299, i32 %291) #10
  %301 = call signext i8 @_ZN6icu_6922UCharCharacterIterator11hasPreviousEv(%"class.icu_69::UCharCharacterIterator"* nonnull %299) #10
  %302 = icmp eq i8 %301, 0
  br i1 %302, label %366, label %303

303:                                              ; preds = %289, %363
  %304 = call zeroext i16 @_ZN6icu_6922UCharCharacterIterator8previousEv(%"class.icu_69::UCharCharacterIterator"* nonnull %299) #10
  %305 = call zeroext i16 @_ZNK6icu_6922UCharCharacterIterator7currentEv(%"class.icu_69::UCharCharacterIterator"* nonnull %299) #10
  %306 = zext i16 %305 to i32
  %307 = call signext i8 @u_isspace_69(i32 %306) #10
  %308 = icmp eq i8 %307, 0
  br i1 %308, label %309, label %363

309:                                              ; preds = %303
  %310 = call zeroext i16 @_ZNK6icu_6922UCharCharacterIterator7currentEv(%"class.icu_69::UCharCharacterIterator"* nonnull %299) #10
  %311 = zext i16 %310 to i32
  %312 = call signext i8 @u_charType_69(i32 %311) #10
  %313 = icmp eq i8 %312, 15
  br i1 %313, label %363, label %314

314:                                              ; preds = %309
  %315 = call zeroext i16 @_ZNK6icu_6922UCharCharacterIterator7currentEv(%"class.icu_69::UCharCharacterIterator"* nonnull %299) #10
  %316 = zext i16 %315 to i32
  %317 = call signext i8 @u_charType_69(i32 %316) #10
  %318 = icmp eq i8 %317, 6
  br i1 %318, label %363, label %319

319:                                              ; preds = %314
  %320 = call zeroext i16 @_ZN6icu_6922UCharCharacterIterator4nextEv(%"class.icu_69::UCharCharacterIterator"* nonnull %299) #10
  %321 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %321) #10
  %322 = getelementptr inbounds %"class.icu_69::StringCharacterIterator", %"class.icu_69::StringCharacterIterator"* %8, i64 0, i32 0, i32 0, i32 2
  %323 = load i32, i32* %322, align 4
  %324 = sext i32 %323 to i64
  %325 = bitcast %"class.std::__1::basic_string"* %1 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %10, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 0, i64 %324, %"class.std::__1::allocator"* dereferenceable(1) %325) #10
  %326 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %327 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %326, i64 0, i32 1, i32 1
  %328 = load i8, i8* %327, align 1, !noalias !269
  %329 = icmp slt i8 %328, 0
  br i1 %329, label %330, label %337

330:                                              ; preds = %319
  %331 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %332 = load i64, i64* %331, align 8, !noalias !269
  %333 = and i64 %332, 9223372036854775807
  %334 = add nsw i64 %333, -1
  %335 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %336 = load i64, i64* %335, align 8, !noalias !269
  br label %339

337:                                              ; preds = %319
  %338 = zext i8 %328 to i64
  br label %339

339:                                              ; preds = %337, %330
  %340 = phi i64 [ %334, %330 ], [ 10, %337 ]
  %341 = phi i64 [ %336, %330 ], [ %338, %337 ]
  %342 = icmp eq i64 %340, %341
  br i1 %342, label %358, label %343

343:                                              ; preds = %339
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %345 = load i16*, i16** %344, align 8, !noalias !269
  %346 = bitcast %"class.std::__1::basic_string"* %10 to i16*
  %347 = select i1 %329, i16* %345, i16* %346
  %348 = getelementptr inbounds i16, i16* %347, i64 %341
  store i16 8230, i16* %348, align 2, !noalias !269
  %349 = add i64 %341, 1
  %350 = load i8, i8* %327, align 1, !noalias !269
  %351 = icmp slt i8 %350, 0
  br i1 %351, label %352, label %354

352:                                              ; preds = %343
  %353 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %353, align 8, !noalias !269
  br label %356

354:                                              ; preds = %343
  %355 = trunc i64 %349 to i8
  store i8 %355, i8* %327, align 1, !noalias !269
  br label %356

356:                                              ; preds = %354, %352
  %357 = getelementptr inbounds i16, i16* %347, i64 %349
  store i16 0, i16* %357, align 2, !noalias !269
  br label %361

358:                                              ; preds = %339
  %359 = add i64 %341, 1
  %360 = sub i64 %359, %340
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* nonnull %10, i64 %340, i64 %360, i64 %341, i64 %341, i64 0, i64 1, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @_ZZN3gfx14TruncateStringERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmNS_9BreakTypeEE12kElideString, i64 0, i64 0)) #10, !noalias !269
  br label %361

361:                                              ; preds = %358, %356
  %362 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %362, i8* nonnull align 8 %321, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %321) #10
  br label %415

363:                                              ; preds = %303, %314, %309
  %364 = call signext i8 @_ZN6icu_6922UCharCharacterIterator11hasPreviousEv(%"class.icu_69::UCharCharacterIterator"* nonnull %299) #10
  %365 = icmp eq i8 %364, 0
  br i1 %365, label %366, label %303

366:                                              ; preds = %363, %289
  %367 = xor i1 %12, true
  %368 = icmp eq i32 %291, %209
  %369 = or i1 %368, %367
  br i1 %369, label %410, label %370

370:                                              ; preds = %366
  %371 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %371) #10
  %372 = bitcast %"class.std::__1::basic_string"* %1 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %11, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 0, i64 %208, %"class.std::__1::allocator"* dereferenceable(1) %372) #10
  %373 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %374 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %373, i64 0, i32 1, i32 1
  %375 = load i8, i8* %374, align 1, !noalias !272
  %376 = icmp slt i8 %375, 0
  br i1 %376, label %377, label %384

377:                                              ; preds = %370
  %378 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %379 = load i64, i64* %378, align 8, !noalias !272
  %380 = and i64 %379, 9223372036854775807
  %381 = add nsw i64 %380, -1
  %382 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %383 = load i64, i64* %382, align 8, !noalias !272
  br label %386

384:                                              ; preds = %370
  %385 = zext i8 %375 to i64
  br label %386

386:                                              ; preds = %384, %377
  %387 = phi i64 [ %381, %377 ], [ 10, %384 ]
  %388 = phi i64 [ %383, %377 ], [ %385, %384 ]
  %389 = icmp eq i64 %387, %388
  br i1 %389, label %405, label %390

390:                                              ; preds = %386
  %391 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %392 = load i16*, i16** %391, align 8, !noalias !272
  %393 = bitcast %"class.std::__1::basic_string"* %11 to i16*
  %394 = select i1 %376, i16* %392, i16* %393
  %395 = getelementptr inbounds i16, i16* %394, i64 %388
  store i16 8230, i16* %395, align 2, !noalias !272
  %396 = add i64 %388, 1
  %397 = load i8, i8* %374, align 1, !noalias !272
  %398 = icmp slt i8 %397, 0
  br i1 %398, label %399, label %401

399:                                              ; preds = %390
  %400 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %396, i64* %400, align 8, !noalias !272
  br label %403

401:                                              ; preds = %390
  %402 = trunc i64 %396 to i8
  store i8 %402, i8* %374, align 1, !noalias !272
  br label %403

403:                                              ; preds = %401, %399
  %404 = getelementptr inbounds i16, i16* %394, i64 %396
  store i16 0, i16* %404, align 2, !noalias !272
  br label %408

405:                                              ; preds = %386
  %406 = add i64 %388, 1
  %407 = sub i64 %406, %387
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* nonnull %11, i64 %387, i64 %407, i64 %388, i64 %388, i64 0, i64 1, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @_ZZN3gfx14TruncateStringERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmNS_9BreakTypeEE12kElideString, i64 0, i64 0)) #10, !noalias !272
  br label %408

408:                                              ; preds = %405, %403
  %409 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %409, i8* nonnull align 8 %371, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %371) #10
  br label %415

410:                                              ; preds = %366
  %411 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %412 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %411, i64 0, i32 1, i32 1
  store i8 1, i8* %412, align 1
  %413 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  store i16 8230, i16* %413, align 8
  %414 = getelementptr inbounds i16, i16* %413, i64 1
  store i16 0, i16* %414, align 2
  br label %415

415:                                              ; preds = %410, %408, %361
  call void @_ZN6icu_6923StringCharacterIteratorD1Ev(%"class.icu_69::StringCharacterIterator"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %292) #10
  br label %416

416:                                              ; preds = %164, %169, %144, %23, %415, %286, %202, %200
  ret void
}

declare %"class.icu_69::BreakIterator"* @_ZN6icu_6913BreakIterator18createWordInstanceERKNS_6LocaleER10UErrorCode(%"class.icu_69::Locale"* dereferenceable(224), i32* dereferenceable(4)) local_unnamed_addr #2

declare dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() local_unnamed_addr #2

declare void @_ZN6icu_6913UnicodeStringC1EPKDs(%"class.icu_69::UnicodeString"*, i16*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"*) unnamed_addr #3

declare void @_ZN6icu_6923StringCharacterIteratorC1ERKNS_13UnicodeStringE(%"class.icu_69::StringCharacterIterator"*, %"class.icu_69::UnicodeString"* dereferenceable(64)) unnamed_addr #2

declare zeroext i16 @_ZN6icu_6922UCharCharacterIterator8setIndexEi(%"class.icu_69::UCharCharacterIterator"*, i32) unnamed_addr #2

declare signext i8 @_ZN6icu_6922UCharCharacterIterator11hasPreviousEv(%"class.icu_69::UCharCharacterIterator"*) unnamed_addr #2

declare zeroext i16 @_ZN6icu_6922UCharCharacterIterator8previousEv(%"class.icu_69::UCharCharacterIterator"*) unnamed_addr #2

declare signext i8 @u_isspace_69(i32) local_unnamed_addr #2

declare zeroext i16 @_ZNK6icu_6922UCharCharacterIterator7currentEv(%"class.icu_69::UCharCharacterIterator"*) unnamed_addr #2

declare signext i8 @u_charType_69(i32) local_unnamed_addr #2

declare zeroext i16 @_ZN6icu_6922UCharCharacterIterator4nextEv(%"class.icu_69::UCharCharacterIterator"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6icu_6923StringCharacterIteratorD1Ev(%"class.icu_69::StringCharacterIterator"*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #4

declare void @_ZN4base4i18n13BreakIteratorC1ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS1_9BreakTypeE(%"class.base::i18n::BreakIterator"*, %"class.base::BasicStringPiece.139"* dereferenceable(16), i32) unnamed_addr #2

declare zeroext i1 @_ZN4base4i18n13BreakIterator4InitEv(%"class.base::i18n::BreakIterator"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base4i18n13BreakIterator7AdvanceEv(%"class.base::i18n::BreakIterator"*) local_unnamed_addr #2

declare void @_ZNK4base4i18n13BreakIterator9GetStringEv(%"class.std::__1::basic_string"* sret, %"class.base::i18n::BreakIterator"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base4i18n13BreakIteratorD1Ev(%"class.base::i18n::BreakIterator"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #11
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #11
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #12
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !275
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !275
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !278, !noalias !275
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !278, !noalias !275
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !275
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !275
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !278, !noalias !275
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !278, !noalias !275
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !275
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !275
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !278, !noalias !275
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !278, !noalias !275
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !275
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !275
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !278, !noalias !275
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !278, !noalias !275
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !280

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !275
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !275
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !278, !noalias !275
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !278, !noalias !275
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !281

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !282

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !283

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !284

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !285

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !286

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !288
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !288
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !291, !noalias !288
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !291, !noalias !288
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !288
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !288
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !291, !noalias !288
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !291, !noalias !288
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !288
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !288
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !291, !noalias !288
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !291, !noalias !288
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !288
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !288
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !291, !noalias !288
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !291, !noalias !288
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !293

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !288
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !288
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !291, !noalias !288
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !291, !noalias !288
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !294

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !295

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !296

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #12
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN4base4i18n17UTF16CharIteratorC1ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.base::i18n::UTF16CharIterator"*, i16*, i64) unnamed_addr #2

declare zeroext i1 @_ZN4base4i18n17UTF16CharIterator7AdvanceEv(%"class.base::i18n::UTF16CharIterator"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base4i18n17UTF16CharIteratorD1Ev(%"class.base::i18n::UTF16CharIterator"*) unnamed_addr #3

declare i32 @_ZNK3gfx8FontList9GetHeightEv(%"class.gfx::FontList"*) local_unnamed_addr #2

declare i32 @_ZN4base14TrimWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS_13TrimPositionsEPNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16*, i64, i32, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base17ContainsOnlyCharsENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_(i16*, i64, i16*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !297
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !297
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !300, !noalias !297
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !300, !noalias !297
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !297
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !297
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !300, !noalias !297
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !300, !noalias !297
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !297
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !297
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !300, !noalias !297
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !300, !noalias !297
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !297
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !297
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !300, !noalias !297
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !300, !noalias !297
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !302

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !297
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !297
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !300, !noalias !297
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !300, !noalias !297
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !303

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !304

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !305

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #11
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #11
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #12
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !306
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !306
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !309, !noalias !306
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !309, !noalias !306
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !306
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !306
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !309, !noalias !306
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !309, !noalias !306
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !306
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !306
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !309, !noalias !306
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !309, !noalias !306
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !306
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !306
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !309, !noalias !306
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !309, !noalias !306
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !311

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !306
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !306
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !309, !noalias !306
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !309, !noalias !306
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !312

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !313

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !314

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !315
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !315
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !318, !noalias !315
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !318, !noalias !315
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !315
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !315
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !318, !noalias !315
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !318, !noalias !315
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !315
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !315
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !318, !noalias !315
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !318, !noalias !315
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !315
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !315
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !318, !noalias !315
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !318, !noalias !315
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !320

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !315
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !315
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !318, !noalias !315
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !318, !noalias !315
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !321

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !322

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !323

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #10
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.124"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.124"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.124"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #10
  br label %219

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i16*, i16** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = icmp ult i64 %48, 11
  br i1 %49, label %50, label %55

50:                                               ; preds = %44
  %51 = bitcast %"class.std::__1::basic_string"* %34 to i16*
  %52 = trunc i64 %48 to i8
  %53 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %53, i64 0, i32 1, i32 1
  store i8 %52, i8* %54, align 1
  br label %72

55:                                               ; preds = %44
  %56 = icmp ugt i64 %48, 9223372036854775791
  br i1 %56, label %57, label %59

57:                                               ; preds = %55
  %58 = bitcast %"class.std::__1::basic_string"* %34 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %58) #11
  unreachable

59:                                               ; preds = %55
  %60 = add nuw nsw i64 %48, 8
  %61 = and i64 %60, -8
  %62 = icmp slt i64 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %59
  tail call void @abort() #11
  unreachable

64:                                               ; preds = %59
  %65 = shl i64 %61, 1
  %66 = tail call i8* @_Znwm(i64 %65) #12
  %67 = bitcast i8* %66 to i16*
  %68 = bitcast %"class.std::__1::basic_string"* %34 to i8**
  store i8* %66, i8** %68, align 8
  %69 = or i64 %61, -9223372036854775808
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %48, i64* %71, align 8
  br label %72

72:                                               ; preds = %64, %50
  %73 = phi i16* [ %51, %50 ], [ %67, %64 ]
  %74 = add nuw nsw i64 %48, 1
  %75 = add i64 %48, 1
  %76 = icmp ult i64 %75, 16
  br i1 %76, label %166, label %77

77:                                               ; preds = %72
  %78 = add i64 %48, 1
  %79 = getelementptr i16, i16* %73, i64 %78
  %80 = getelementptr i16, i16* %46, i64 %78
  %81 = icmp ult i16* %73, %80
  %82 = icmp ult i16* %46, %79
  %83 = and i1 %81, %82
  br i1 %83, label %166, label %84

84:                                               ; preds = %77
  %85 = and i64 %75, -16
  %86 = sub i64 %74, %85
  %87 = getelementptr i16, i16* %46, i64 %85
  %88 = getelementptr i16, i16* %73, i64 %85
  %89 = add i64 %85, -16
  %90 = lshr exact i64 %89, 4
  %91 = add nuw nsw i64 %90, 1
  %92 = and i64 %91, 3
  %93 = icmp ult i64 %89, 48
  br i1 %93, label %145, label %94

94:                                               ; preds = %84
  %95 = sub nsw i64 %91, %92
  br label %96

96:                                               ; preds = %96, %94
  %97 = phi i64 [ 0, %94 ], [ %142, %96 ]
  %98 = phi i64 [ %95, %94 ], [ %143, %96 ]
  %99 = getelementptr i16, i16* %46, i64 %97
  %100 = getelementptr i16, i16* %73, i64 %97
  %101 = bitcast i16* %99 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !324
  %103 = getelementptr i16, i16* %99, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !324
  %106 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !327, !noalias !324
  %107 = getelementptr i16, i16* %100, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !327, !noalias !324
  %109 = or i64 %97, 16
  %110 = getelementptr i16, i16* %46, i64 %109
  %111 = getelementptr i16, i16* %73, i64 %109
  %112 = bitcast i16* %110 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !324
  %114 = getelementptr i16, i16* %110, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !324
  %117 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %117, align 2, !alias.scope !327, !noalias !324
  %118 = getelementptr i16, i16* %111, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %119, align 2, !alias.scope !327, !noalias !324
  %120 = or i64 %97, 32
  %121 = getelementptr i16, i16* %46, i64 %120
  %122 = getelementptr i16, i16* %73, i64 %120
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !324
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !324
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !327, !noalias !324
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !327, !noalias !324
  %131 = or i64 %97, 48
  %132 = getelementptr i16, i16* %46, i64 %131
  %133 = getelementptr i16, i16* %73, i64 %131
  %134 = bitcast i16* %132 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !324
  %136 = getelementptr i16, i16* %132, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  %138 = load <8 x i16>, <8 x i16>* %137, align 2, !alias.scope !324
  %139 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %139, align 2, !alias.scope !327, !noalias !324
  %140 = getelementptr i16, i16* %133, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %141, align 2, !alias.scope !327, !noalias !324
  %142 = add i64 %97, 64
  %143 = add i64 %98, -4
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %96, !llvm.loop !329

145:                                              ; preds = %96, %84
  %146 = phi i64 [ 0, %84 ], [ %142, %96 ]
  %147 = icmp eq i64 %92, 0
  br i1 %147, label %164, label %148

148:                                              ; preds = %145, %148
  %149 = phi i64 [ %161, %148 ], [ %146, %145 ]
  %150 = phi i64 [ %162, %148 ], [ %92, %145 ]
  %151 = getelementptr i16, i16* %46, i64 %149
  %152 = getelementptr i16, i16* %73, i64 %149
  %153 = bitcast i16* %151 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !324
  %155 = getelementptr i16, i16* %151, i64 8
  %156 = bitcast i16* %155 to <8 x i16>*
  %157 = load <8 x i16>, <8 x i16>* %156, align 2, !alias.scope !324
  %158 = bitcast i16* %152 to <8 x i16>*
  store <8 x i16> %154, <8 x i16>* %158, align 2, !alias.scope !327, !noalias !324
  %159 = getelementptr i16, i16* %152, i64 8
  %160 = bitcast i16* %159 to <8 x i16>*
  store <8 x i16> %157, <8 x i16>* %160, align 2, !alias.scope !327, !noalias !324
  %161 = add i64 %149, 16
  %162 = add i64 %150, -1
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %148, !llvm.loop !330

164:                                              ; preds = %148, %145
  %165 = icmp eq i64 %75, %85
  br i1 %165, label %219, label %166

166:                                              ; preds = %164, %77, %72
  %167 = phi i64 [ %74, %77 ], [ %74, %72 ], [ %86, %164 ]
  %168 = phi i16* [ %46, %77 ], [ %46, %72 ], [ %87, %164 ]
  %169 = phi i16* [ %73, %77 ], [ %73, %72 ], [ %88, %164 ]
  %170 = add i64 %167, -1
  %171 = and i64 %167, 7
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %184, label %173

173:                                              ; preds = %166, %173
  %174 = phi i64 [ %179, %173 ], [ %167, %166 ]
  %175 = phi i16* [ %181, %173 ], [ %168, %166 ]
  %176 = phi i16* [ %180, %173 ], [ %169, %166 ]
  %177 = phi i64 [ %182, %173 ], [ %171, %166 ]
  %178 = load i16, i16* %175, align 2
  store i16 %178, i16* %176, align 2
  %179 = add i64 %174, -1
  %180 = getelementptr inbounds i16, i16* %176, i64 1
  %181 = getelementptr inbounds i16, i16* %175, i64 1
  %182 = add i64 %177, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %173, !llvm.loop !331

184:                                              ; preds = %173, %166
  %185 = phi i64 [ %167, %166 ], [ %179, %173 ]
  %186 = phi i16* [ %168, %166 ], [ %181, %173 ]
  %187 = phi i16* [ %169, %166 ], [ %180, %173 ]
  %188 = icmp ult i64 %170, 7
  br i1 %188, label %219, label %189

189:                                              ; preds = %184, %189
  %190 = phi i64 [ %215, %189 ], [ %185, %184 ]
  %191 = phi i16* [ %217, %189 ], [ %186, %184 ]
  %192 = phi i16* [ %216, %189 ], [ %187, %184 ]
  %193 = load i16, i16* %191, align 2
  store i16 %193, i16* %192, align 2
  %194 = getelementptr inbounds i16, i16* %192, i64 1
  %195 = getelementptr inbounds i16, i16* %191, i64 1
  %196 = load i16, i16* %195, align 2
  store i16 %196, i16* %194, align 2
  %197 = getelementptr inbounds i16, i16* %192, i64 2
  %198 = getelementptr inbounds i16, i16* %191, i64 2
  %199 = load i16, i16* %198, align 2
  store i16 %199, i16* %197, align 2
  %200 = getelementptr inbounds i16, i16* %192, i64 3
  %201 = getelementptr inbounds i16, i16* %191, i64 3
  %202 = load i16, i16* %201, align 2
  store i16 %202, i16* %200, align 2
  %203 = getelementptr inbounds i16, i16* %192, i64 4
  %204 = getelementptr inbounds i16, i16* %191, i64 4
  %205 = load i16, i16* %204, align 2
  store i16 %205, i16* %203, align 2
  %206 = getelementptr inbounds i16, i16* %192, i64 5
  %207 = getelementptr inbounds i16, i16* %191, i64 5
  %208 = load i16, i16* %207, align 2
  store i16 %208, i16* %206, align 2
  %209 = getelementptr inbounds i16, i16* %192, i64 6
  %210 = getelementptr inbounds i16, i16* %191, i64 6
  %211 = load i16, i16* %210, align 2
  store i16 %211, i16* %209, align 2
  %212 = getelementptr inbounds i16, i16* %192, i64 7
  %213 = getelementptr inbounds i16, i16* %191, i64 7
  %214 = load i16, i16* %213, align 2
  store i16 %214, i16* %212, align 2
  %215 = add i64 %190, -8
  %216 = getelementptr inbounds i16, i16* %192, i64 8
  %217 = getelementptr inbounds i16, i16* %191, i64 8
  %218 = icmp eq i64 %215, 0
  br i1 %218, label %219, label %189, !llvm.loop !332

219:                                              ; preds = %184, %189, %164, %41
  %220 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %221 = ptrtoint %"class.std::__1::basic_string"* %220 to i64
  %222 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %0, i64 0, i32 0, i32 0
  %223 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %222, align 8
  %224 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %225 = icmp eq %"class.std::__1::basic_string"* %224, %223
  br i1 %225, label %226, label %228

226:                                              ; preds = %219
  %227 = ptrtoint %"class.std::__1::basic_string"* %223 to i64
  br label %239

228:                                              ; preds = %219, %228
  %229 = phi %"class.std::__1::basic_string"* [ %231, %228 ], [ %34, %219 ]
  %230 = phi %"class.std::__1::basic_string"* [ %232, %228 ], [ %224, %219 ]
  %231 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %229, i64 -1
  %232 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %230, i64 -1
  %233 = bitcast %"class.std::__1::basic_string"* %231 to i8*
  %234 = bitcast %"class.std::__1::basic_string"* %232 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %233, i8* align 8 %234, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %234, i8 0, i64 24, i1 false) #10
  %235 = icmp eq %"class.std::__1::basic_string"* %232, %223
  br i1 %235, label %236, label %228

236:                                              ; preds = %228
  %237 = load i64, i64* %6, align 8
  %238 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %239

239:                                              ; preds = %226, %236
  %240 = phi %"class.std::__1::basic_string"* [ %223, %226 ], [ %238, %236 ]
  %241 = phi %"class.std::__1::basic_string"* [ %34, %226 ], [ %231, %236 ]
  %242 = phi i64 [ %227, %226 ], [ %237, %236 ]
  %243 = ptrtoint %"class.std::__1::basic_string"* %241 to i64
  store i64 %243, i64* %6, align 8
  store i64 %221, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %244 = inttoptr i64 %242 to %"class.std::__1::basic_string"*
  %245 = icmp eq %"class.std::__1::basic_string"* %240, %244
  br i1 %245, label %258, label %246

246:                                              ; preds = %239, %256
  %247 = phi %"class.std::__1::basic_string"* [ %248, %256 ], [ %240, %239 ]
  %248 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %247, i64 -1
  %249 = bitcast %"class.std::__1::basic_string"* %248 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %250 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %249, i64 0, i32 1, i32 1
  %251 = load i8, i8* %250, align 1
  %252 = icmp slt i8 %251, 0
  br i1 %252, label %253, label %256

253:                                              ; preds = %246
  %254 = bitcast %"class.std::__1::basic_string"* %248 to i8**
  %255 = load i8*, i8** %254, align 8
  tail call void @_ZdlPv(i8* %255) #12
  br label %256

256:                                              ; preds = %253, %246
  %257 = icmp eq %"class.std::__1::basic_string"* %248, %244
  br i1 %257, label %258, label %246

258:                                              ; preds = %256, %239
  %259 = icmp eq i64 %242, 0
  br i1 %259, label %262, label %260

260:                                              ; preds = %258
  %261 = inttoptr i64 %242 to i8*
  tail call void @_ZdlPv(i8* %261) #12
  br label %262

262:                                              ; preds = %258, %260
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.124"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.124"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.124"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #10
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #10
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %68, i64 0, i32 1, i32 1
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = bitcast %"class.std::__1::basic_string"* %67 to i8**
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #12
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #12
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = icmp ult i64 %13, %2
  br i1 %14, label %15, label %17

15:                                               ; preds = %5
  %16 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %16) #11
  unreachable

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %21 = select i1 %9, i16* %19, i16* %20
  %22 = getelementptr inbounds i16, i16* %21, i64 %2
  %23 = sub i64 %13, %2
  %24 = icmp ult i64 %23, %3
  %25 = select i1 %24, i64 %23, i64 %3
  %26 = icmp ugt i64 %25, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %17
  %28 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #11
  unreachable

29:                                               ; preds = %17
  %30 = icmp ult i64 %25, 11
  br i1 %30, label %44, label %31

31:                                               ; preds = %29
  %32 = add nuw nsw i64 %25, 8
  %33 = and i64 %32, -8
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @abort() #11
  unreachable

36:                                               ; preds = %31
  %37 = shl i64 %33, 1
  %38 = tail call i8* @_Znwm(i64 %37) #12
  %39 = bitcast i8* %38 to i16*
  %40 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %38, i8** %40, align 8
  %41 = or i64 %33, -9223372036854775808
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %43, align 8
  br label %50

44:                                               ; preds = %29
  %45 = trunc i64 %25 to i8
  %46 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  store i8 %45, i8* %47, align 1
  %48 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %49 = icmp eq i64 %25, 0
  br i1 %49, label %195, label %50

50:                                               ; preds = %44, %36
  %51 = phi i16* [ %39, %36 ], [ %48, %44 ]
  %52 = icmp ult i64 %25, 16
  br i1 %52, label %142, label %53

53:                                               ; preds = %50
  %54 = getelementptr i16, i16* %51, i64 %25
  %55 = add i64 %25, %2
  %56 = getelementptr i16, i16* %21, i64 %55
  %57 = icmp ult i16* %51, %56
  %58 = icmp ult i16* %22, %54
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %53
  %61 = and i64 %25, -16
  %62 = sub i64 %25, %61
  %63 = getelementptr i16, i16* %22, i64 %61
  %64 = getelementptr i16, i16* %51, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %22, i64 %73
  %76 = getelementptr i16, i16* %51, i64 %73
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !333
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !333
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !336, !noalias !333
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !336, !noalias !333
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %22, i64 %85
  %87 = getelementptr i16, i16* %51, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !333
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !333
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !336, !noalias !333
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !336, !noalias !333
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %22, i64 %96
  %98 = getelementptr i16, i16* %51, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !333
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !333
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !336, !noalias !333
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !336, !noalias !333
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %22, i64 %107
  %109 = getelementptr i16, i16* %51, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !333
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !333
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !336, !noalias !333
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !336, !noalias !333
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !338

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %22, i64 %125
  %128 = getelementptr i16, i16* %51, i64 %125
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !333
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !333
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !336, !noalias !333
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !336, !noalias !333
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !339

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %25, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %53, %50
  %143 = phi i64 [ %25, %53 ], [ %25, %50 ], [ %62, %140 ]
  %144 = phi i16* [ %22, %53 ], [ %22, %50 ], [ %63, %140 ]
  %145 = phi i16* [ %51, %53 ], [ %51, %50 ], [ %64, %140 ]
  %146 = add i64 %143, -1
  %147 = and i64 %143, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i64 [ %155, %149 ], [ %143, %142 ]
  %151 = phi i16* [ %157, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %156, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %151, align 2
  store i16 %154, i16* %152, align 2
  %155 = add i64 %150, -1
  %156 = getelementptr inbounds i16, i16* %152, i64 1
  %157 = getelementptr inbounds i16, i16* %151, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !340

160:                                              ; preds = %149, %142
  %161 = phi i64 [ %143, %142 ], [ %155, %149 ]
  %162 = phi i16* [ %144, %142 ], [ %157, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %156, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i64 [ %191, %165 ], [ %161, %160 ]
  %167 = phi i16* [ %193, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %192, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %167, align 2
  store i16 %169, i16* %168, align 2
  %170 = getelementptr inbounds i16, i16* %168, i64 1
  %171 = getelementptr inbounds i16, i16* %167, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %168, i64 2
  %174 = getelementptr inbounds i16, i16* %167, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %168, i64 3
  %177 = getelementptr inbounds i16, i16* %167, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %168, i64 4
  %180 = getelementptr inbounds i16, i16* %167, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %168, i64 5
  %183 = getelementptr inbounds i16, i16* %167, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %168, i64 6
  %186 = getelementptr inbounds i16, i16* %167, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %168, i64 7
  %189 = getelementptr inbounds i16, i16* %167, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %166, -8
  %192 = getelementptr inbounds i16, i16* %168, i64 8
  %193 = getelementptr inbounds i16, i16* %167, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !341

195:                                              ; preds = %160, %165, %140, %44
  %196 = phi i16* [ %48, %44 ], [ %51, %140 ], [ %51, %165 ], [ %51, %160 ]
  %197 = getelementptr inbounds i16, i16* %196, i64 %25
  store i16 0, i16* %197, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string"*, i64, i16*, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %4
  %13 = zext i8 %7 to i64
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %11, %9 ], [ %13, %12 ]
  %16 = icmp ult i64 %15, %1
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %18) #11
  unreachable

19:                                               ; preds = %14
  br i1 %8, label %20, label %25

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 9223372036854775807
  %24 = add nsw i64 %23, -1
  br label %25

25:                                               ; preds = %19, %20
  %26 = phi i64 [ %24, %20 ], [ 10, %19 ]
  %27 = sub i64 %26, %15
  %28 = icmp ult i64 %27, %3
  br i1 %28, label %658, label %29

29:                                               ; preds = %25
  %30 = icmp eq i64 %3, 0
  br i1 %30, label %661, label %31

31:                                               ; preds = %29
  br i1 %8, label %32, label %35

32:                                               ; preds = %31
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i16*, i16** %33, align 8
  br label %37

35:                                               ; preds = %31
  %36 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %37

37:                                               ; preds = %32, %35
  %38 = phi i16* [ %34, %32 ], [ %36, %35 ]
  %39 = sub i64 %15, %1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %357, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds i16, i16* %38, i64 %1
  %43 = icmp ule i16* %42, %2
  %44 = getelementptr inbounds i16, i16* %38, i64 %15
  %45 = icmp ugt i16* %44, %2
  %46 = and i1 %43, %45
  %47 = getelementptr inbounds i16, i16* %2, i64 %3
  %48 = select i1 %46, i16* %47, i16* %2
  %49 = getelementptr inbounds i16, i16* %42, i64 %3
  %50 = icmp slt i64 %3, 0
  br i1 %50, label %51, label %194

51:                                               ; preds = %41
  %52 = icmp ult i64 %39, 16
  br i1 %52, label %141, label %53

53:                                               ; preds = %51
  %54 = add i64 %15, %3
  %55 = getelementptr i16, i16* %38, i64 %54
  %56 = icmp ult i16* %49, %44
  %57 = icmp ult i16* %42, %55
  %58 = and i1 %56, %57
  br i1 %58, label %141, label %59

59:                                               ; preds = %53
  %60 = and i64 %39, -16
  %61 = sub i64 %39, %60
  %62 = getelementptr i16, i16* %42, i64 %60
  %63 = getelementptr i16, i16* %49, i64 %60
  %64 = add i64 %60, -16
  %65 = lshr exact i64 %64, 4
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 3
  %68 = icmp ult i64 %64, 48
  br i1 %68, label %120, label %69

69:                                               ; preds = %59
  %70 = sub nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %117, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %118, %71 ]
  %74 = getelementptr i16, i16* %42, i64 %72
  %75 = getelementptr i16, i16* %49, i64 %72
  %76 = bitcast i16* %74 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !342
  %78 = getelementptr i16, i16* %74, i64 8
  %79 = bitcast i16* %78 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !342
  %81 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %77, <8 x i16>* %81, align 2, !alias.scope !345, !noalias !342
  %82 = getelementptr i16, i16* %75, i64 8
  %83 = bitcast i16* %82 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %83, align 2, !alias.scope !345, !noalias !342
  %84 = or i64 %72, 16
  %85 = getelementptr i16, i16* %42, i64 %84
  %86 = getelementptr i16, i16* %49, i64 %84
  %87 = bitcast i16* %85 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !342
  %89 = getelementptr i16, i16* %85, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !342
  %92 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %92, align 2, !alias.scope !345, !noalias !342
  %93 = getelementptr i16, i16* %86, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %94, align 2, !alias.scope !345, !noalias !342
  %95 = or i64 %72, 32
  %96 = getelementptr i16, i16* %42, i64 %95
  %97 = getelementptr i16, i16* %49, i64 %95
  %98 = bitcast i16* %96 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !342
  %100 = getelementptr i16, i16* %96, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !342
  %103 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %103, align 2, !alias.scope !345, !noalias !342
  %104 = getelementptr i16, i16* %97, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 2, !alias.scope !345, !noalias !342
  %106 = or i64 %72, 48
  %107 = getelementptr i16, i16* %42, i64 %106
  %108 = getelementptr i16, i16* %49, i64 %106
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !342
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !342
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !345, !noalias !342
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !345, !noalias !342
  %117 = add i64 %72, 64
  %118 = add i64 %73, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %71, !llvm.loop !347

120:                                              ; preds = %71, %59
  %121 = phi i64 [ 0, %59 ], [ %117, %71 ]
  %122 = icmp eq i64 %67, 0
  br i1 %122, label %139, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %136, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %137, %123 ], [ %67, %120 ]
  %126 = getelementptr i16, i16* %42, i64 %124
  %127 = getelementptr i16, i16* %49, i64 %124
  %128 = bitcast i16* %126 to <8 x i16>*
  %129 = load <8 x i16>, <8 x i16>* %128, align 2, !alias.scope !342
  %130 = getelementptr i16, i16* %126, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !342
  %133 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %133, align 2, !alias.scope !345, !noalias !342
  %134 = getelementptr i16, i16* %127, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %135, align 2, !alias.scope !345, !noalias !342
  %136 = add i64 %124, 16
  %137 = add i64 %125, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %123, !llvm.loop !348

139:                                              ; preds = %123, %120
  %140 = icmp eq i64 %39, %60
  br i1 %140, label %357, label %141

141:                                              ; preds = %139, %53, %51
  %142 = phi i64 [ %39, %53 ], [ %39, %51 ], [ %61, %139 ]
  %143 = phi i16* [ %42, %53 ], [ %42, %51 ], [ %62, %139 ]
  %144 = phi i16* [ %49, %53 ], [ %49, %51 ], [ %63, %139 ]
  %145 = add i64 %142, -1
  %146 = and i64 %142, 7
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %159, label %148

148:                                              ; preds = %141, %148
  %149 = phi i64 [ %154, %148 ], [ %142, %141 ]
  %150 = phi i16* [ %156, %148 ], [ %143, %141 ]
  %151 = phi i16* [ %155, %148 ], [ %144, %141 ]
  %152 = phi i64 [ %157, %148 ], [ %146, %141 ]
  %153 = load i16, i16* %150, align 2
  store i16 %153, i16* %151, align 2
  %154 = add i64 %149, -1
  %155 = getelementptr inbounds i16, i16* %151, i64 1
  %156 = getelementptr inbounds i16, i16* %150, i64 1
  %157 = add i64 %152, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %148, !llvm.loop !349

159:                                              ; preds = %148, %141
  %160 = phi i64 [ %142, %141 ], [ %154, %148 ]
  %161 = phi i16* [ %143, %141 ], [ %156, %148 ]
  %162 = phi i16* [ %144, %141 ], [ %155, %148 ]
  %163 = icmp ult i64 %145, 7
  br i1 %163, label %357, label %164

164:                                              ; preds = %159, %164
  %165 = phi i64 [ %190, %164 ], [ %160, %159 ]
  %166 = phi i16* [ %192, %164 ], [ %161, %159 ]
  %167 = phi i16* [ %191, %164 ], [ %162, %159 ]
  %168 = load i16, i16* %166, align 2
  store i16 %168, i16* %167, align 2
  %169 = getelementptr inbounds i16, i16* %167, i64 1
  %170 = getelementptr inbounds i16, i16* %166, i64 1
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %167, i64 2
  %173 = getelementptr inbounds i16, i16* %166, i64 2
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %167, i64 3
  %176 = getelementptr inbounds i16, i16* %166, i64 3
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %167, i64 4
  %179 = getelementptr inbounds i16, i16* %166, i64 4
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %167, i64 5
  %182 = getelementptr inbounds i16, i16* %166, i64 5
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %167, i64 6
  %185 = getelementptr inbounds i16, i16* %166, i64 6
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %167, i64 7
  %188 = getelementptr inbounds i16, i16* %166, i64 7
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = add i64 %165, -8
  %191 = getelementptr inbounds i16, i16* %167, i64 8
  %192 = getelementptr inbounds i16, i16* %166, i64 8
  %193 = icmp eq i64 %190, 0
  br i1 %193, label %357, label %164, !llvm.loop !350

194:                                              ; preds = %41
  %195 = getelementptr inbounds i16, i16* %49, i64 %39
  %196 = icmp ult i64 %39, 16
  br i1 %196, label %304, label %197

197:                                              ; preds = %194
  %198 = xor i64 %1, -1
  %199 = add i64 %15, %198
  %200 = add i64 %15, %3
  %201 = add i64 %200, -1
  %202 = getelementptr i16, i16* %38, i64 %201
  %203 = ptrtoint i16* %202 to i64
  %204 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %199, i64 2)
  %205 = extractvalue { i64, i1 } %204, 0
  %206 = extractvalue { i64, i1 } %204, 1
  %207 = icmp ugt i64 %205, %203
  %208 = or i1 %207, %206
  %209 = add i64 %15, -1
  %210 = getelementptr i16, i16* %38, i64 %209
  %211 = ptrtoint i16* %210 to i64
  %212 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %199, i64 2)
  %213 = extractvalue { i64, i1 } %212, 0
  %214 = extractvalue { i64, i1 } %212, 1
  %215 = icmp ugt i64 %213, %211
  %216 = or i1 %215, %214
  %217 = or i1 %208, %216
  br i1 %217, label %304, label %218

218:                                              ; preds = %197
  %219 = add i64 %3, %1
  %220 = getelementptr i16, i16* %38, i64 %219
  %221 = icmp ult i16* %220, %44
  %222 = icmp ult i16* %42, %195
  %223 = and i1 %221, %222
  br i1 %223, label %304, label %224

224:                                              ; preds = %218
  %225 = and i64 %39, -16
  %226 = sub i64 %39, %225
  %227 = sub i64 0, %225
  %228 = getelementptr i16, i16* %44, i64 %227
  %229 = sub i64 0, %225
  %230 = getelementptr i16, i16* %195, i64 %229
  %231 = add i64 %225, -16
  %232 = lshr exact i64 %231, 4
  %233 = add nuw nsw i64 %232, 1
  %234 = and i64 %233, 1
  %235 = icmp eq i64 %231, 0
  br i1 %235, label %280, label %236

236:                                              ; preds = %224
  %237 = sub nuw nsw i64 %233, %234
  %238 = getelementptr i16, i16* %44, i64 -1
  %239 = getelementptr i16, i16* %195, i64 -1
  %240 = getelementptr i16, i16* %44, i64 -1
  %241 = getelementptr i16, i16* %195, i64 -1
  br label %242

242:                                              ; preds = %242, %236
  %243 = phi i64 [ 0, %236 ], [ %277, %242 ]
  %244 = phi i64 [ %237, %236 ], [ %278, %242 ]
  %245 = sub i64 0, %243
  %246 = sub i64 0, %243
  %247 = getelementptr inbounds i16, i16* %239, i64 %246
  %248 = getelementptr inbounds i16, i16* %238, i64 %245
  %249 = getelementptr inbounds i16, i16* %248, i64 -7
  %250 = bitcast i16* %249 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !351
  %252 = getelementptr inbounds i16, i16* %248, i64 -8
  %253 = getelementptr inbounds i16, i16* %252, i64 -7
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !351
  %256 = getelementptr inbounds i16, i16* %247, i64 -7
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %257, align 2, !alias.scope !354, !noalias !351
  %258 = getelementptr inbounds i16, i16* %247, i64 -8
  %259 = getelementptr inbounds i16, i16* %258, i64 -7
  %260 = bitcast i16* %259 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %260, align 2, !alias.scope !354, !noalias !351
  %261 = sub nuw nsw i64 -16, %243
  %262 = sub nuw nsw i64 -16, %243
  %263 = getelementptr inbounds i16, i16* %241, i64 %262
  %264 = getelementptr inbounds i16, i16* %240, i64 %261
  %265 = getelementptr inbounds i16, i16* %264, i64 -7
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !351
  %268 = getelementptr inbounds i16, i16* %264, i64 -8
  %269 = getelementptr inbounds i16, i16* %268, i64 -7
  %270 = bitcast i16* %269 to <8 x i16>*
  %271 = load <8 x i16>, <8 x i16>* %270, align 2, !alias.scope !351
  %272 = getelementptr inbounds i16, i16* %263, i64 -7
  %273 = bitcast i16* %272 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %273, align 2, !alias.scope !354, !noalias !351
  %274 = getelementptr inbounds i16, i16* %263, i64 -8
  %275 = getelementptr inbounds i16, i16* %274, i64 -7
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %271, <8 x i16>* %276, align 2, !alias.scope !354, !noalias !351
  %277 = add i64 %243, 32
  %278 = add i64 %244, -2
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %242, !llvm.loop !356

280:                                              ; preds = %242, %224
  %281 = phi i64 [ 0, %224 ], [ %277, %242 ]
  %282 = icmp eq i64 %234, 0
  br i1 %282, label %302, label %283

283:                                              ; preds = %280
  %284 = sub i64 0, %281
  %285 = getelementptr i16, i16* %44, i64 -1
  %286 = sub i64 0, %281
  %287 = getelementptr i16, i16* %195, i64 -1
  %288 = getelementptr inbounds i16, i16* %287, i64 %286
  %289 = getelementptr inbounds i16, i16* %285, i64 %284
  %290 = getelementptr inbounds i16, i16* %289, i64 -7
  %291 = bitcast i16* %290 to <8 x i16>*
  %292 = load <8 x i16>, <8 x i16>* %291, align 2, !alias.scope !351
  %293 = getelementptr inbounds i16, i16* %289, i64 -8
  %294 = getelementptr inbounds i16, i16* %293, i64 -7
  %295 = bitcast i16* %294 to <8 x i16>*
  %296 = load <8 x i16>, <8 x i16>* %295, align 2, !alias.scope !351
  %297 = getelementptr inbounds i16, i16* %288, i64 -7
  %298 = bitcast i16* %297 to <8 x i16>*
  store <8 x i16> %292, <8 x i16>* %298, align 2, !alias.scope !354, !noalias !351
  %299 = getelementptr inbounds i16, i16* %288, i64 -8
  %300 = getelementptr inbounds i16, i16* %299, i64 -7
  %301 = bitcast i16* %300 to <8 x i16>*
  store <8 x i16> %296, <8 x i16>* %301, align 2, !alias.scope !354, !noalias !351
  br label %302

302:                                              ; preds = %280, %283
  %303 = icmp eq i64 %39, %225
  br i1 %303, label %357, label %304

304:                                              ; preds = %302, %218, %197, %194
  %305 = phi i64 [ %39, %218 ], [ %39, %197 ], [ %39, %194 ], [ %226, %302 ]
  %306 = phi i16* [ %44, %218 ], [ %44, %197 ], [ %44, %194 ], [ %228, %302 ]
  %307 = phi i16* [ %195, %218 ], [ %195, %197 ], [ %195, %194 ], [ %230, %302 ]
  %308 = add i64 %305, -1
  %309 = and i64 %305, 7
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %322, label %311

311:                                              ; preds = %304, %311
  %312 = phi i64 [ %319, %311 ], [ %305, %304 ]
  %313 = phi i16* [ %317, %311 ], [ %306, %304 ]
  %314 = phi i16* [ %316, %311 ], [ %307, %304 ]
  %315 = phi i64 [ %320, %311 ], [ %309, %304 ]
  %316 = getelementptr inbounds i16, i16* %314, i64 -1
  %317 = getelementptr inbounds i16, i16* %313, i64 -1
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = add i64 %312, -1
  %320 = add i64 %315, -1
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %311, !llvm.loop !357

322:                                              ; preds = %311, %304
  %323 = phi i64 [ %305, %304 ], [ %319, %311 ]
  %324 = phi i16* [ %306, %304 ], [ %317, %311 ]
  %325 = phi i16* [ %307, %304 ], [ %316, %311 ]
  %326 = icmp ult i64 %308, 7
  br i1 %326, label %357, label %327

327:                                              ; preds = %322, %327
  %328 = phi i64 [ %355, %327 ], [ %323, %322 ]
  %329 = phi i16* [ %353, %327 ], [ %324, %322 ]
  %330 = phi i16* [ %352, %327 ], [ %325, %322 ]
  %331 = getelementptr inbounds i16, i16* %330, i64 -1
  %332 = getelementptr inbounds i16, i16* %329, i64 -1
  %333 = load i16, i16* %332, align 2
  store i16 %333, i16* %331, align 2
  %334 = getelementptr inbounds i16, i16* %330, i64 -2
  %335 = getelementptr inbounds i16, i16* %329, i64 -2
  %336 = load i16, i16* %335, align 2
  store i16 %336, i16* %334, align 2
  %337 = getelementptr inbounds i16, i16* %330, i64 -3
  %338 = getelementptr inbounds i16, i16* %329, i64 -3
  %339 = load i16, i16* %338, align 2
  store i16 %339, i16* %337, align 2
  %340 = getelementptr inbounds i16, i16* %330, i64 -4
  %341 = getelementptr inbounds i16, i16* %329, i64 -4
  %342 = load i16, i16* %341, align 2
  store i16 %342, i16* %340, align 2
  %343 = getelementptr inbounds i16, i16* %330, i64 -5
  %344 = getelementptr inbounds i16, i16* %329, i64 -5
  %345 = load i16, i16* %344, align 2
  store i16 %345, i16* %343, align 2
  %346 = getelementptr inbounds i16, i16* %330, i64 -6
  %347 = getelementptr inbounds i16, i16* %329, i64 -6
  %348 = load i16, i16* %347, align 2
  store i16 %348, i16* %346, align 2
  %349 = getelementptr inbounds i16, i16* %330, i64 -7
  %350 = getelementptr inbounds i16, i16* %329, i64 -7
  %351 = load i16, i16* %350, align 2
  store i16 %351, i16* %349, align 2
  %352 = getelementptr inbounds i16, i16* %330, i64 -8
  %353 = getelementptr inbounds i16, i16* %329, i64 -8
  %354 = load i16, i16* %353, align 2
  store i16 %354, i16* %352, align 2
  %355 = add i64 %328, -8
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %357, label %327, !llvm.loop !358

357:                                              ; preds = %322, %327, %159, %164, %302, %139, %37
  %358 = phi i16* [ %2, %37 ], [ %48, %139 ], [ %48, %302 ], [ %48, %164 ], [ %48, %159 ], [ %48, %327 ], [ %48, %322 ]
  %359 = getelementptr inbounds i16, i16* %38, i64 %1
  %360 = icmp ult i16* %359, %358
  br i1 %360, label %361, label %505

361:                                              ; preds = %357
  %362 = icmp ult i64 %3, 16
  br i1 %362, label %452, label %363

363:                                              ; preds = %361
  %364 = add i64 %3, %1
  %365 = getelementptr i16, i16* %38, i64 %364
  %366 = getelementptr i16, i16* %358, i64 %3
  %367 = icmp ult i16* %359, %366
  %368 = icmp ult i16* %358, %365
  %369 = and i1 %367, %368
  br i1 %369, label %452, label %370

370:                                              ; preds = %363
  %371 = and i64 %3, -16
  %372 = sub i64 %3, %371
  %373 = getelementptr i16, i16* %358, i64 %371
  %374 = getelementptr i16, i16* %359, i64 %371
  %375 = add i64 %371, -16
  %376 = lshr exact i64 %375, 4
  %377 = add nuw nsw i64 %376, 1
  %378 = and i64 %377, 3
  %379 = icmp ult i64 %375, 48
  br i1 %379, label %431, label %380

380:                                              ; preds = %370
  %381 = sub nsw i64 %377, %378
  br label %382

382:                                              ; preds = %382, %380
  %383 = phi i64 [ 0, %380 ], [ %428, %382 ]
  %384 = phi i64 [ %381, %380 ], [ %429, %382 ]
  %385 = getelementptr i16, i16* %358, i64 %383
  %386 = getelementptr i16, i16* %359, i64 %383
  %387 = bitcast i16* %385 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !359
  %389 = getelementptr i16, i16* %385, i64 8
  %390 = bitcast i16* %389 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !359
  %392 = bitcast i16* %386 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %392, align 2, !alias.scope !362, !noalias !359
  %393 = getelementptr i16, i16* %386, i64 8
  %394 = bitcast i16* %393 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %394, align 2, !alias.scope !362, !noalias !359
  %395 = or i64 %383, 16
  %396 = getelementptr i16, i16* %358, i64 %395
  %397 = getelementptr i16, i16* %359, i64 %395
  %398 = bitcast i16* %396 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !359
  %400 = getelementptr i16, i16* %396, i64 8
  %401 = bitcast i16* %400 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !359
  %403 = bitcast i16* %397 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %403, align 2, !alias.scope !362, !noalias !359
  %404 = getelementptr i16, i16* %397, i64 8
  %405 = bitcast i16* %404 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %405, align 2, !alias.scope !362, !noalias !359
  %406 = or i64 %383, 32
  %407 = getelementptr i16, i16* %358, i64 %406
  %408 = getelementptr i16, i16* %359, i64 %406
  %409 = bitcast i16* %407 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !359
  %411 = getelementptr i16, i16* %407, i64 8
  %412 = bitcast i16* %411 to <8 x i16>*
  %413 = load <8 x i16>, <8 x i16>* %412, align 2, !alias.scope !359
  %414 = bitcast i16* %408 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %414, align 2, !alias.scope !362, !noalias !359
  %415 = getelementptr i16, i16* %408, i64 8
  %416 = bitcast i16* %415 to <8 x i16>*
  store <8 x i16> %413, <8 x i16>* %416, align 2, !alias.scope !362, !noalias !359
  %417 = or i64 %383, 48
  %418 = getelementptr i16, i16* %358, i64 %417
  %419 = getelementptr i16, i16* %359, i64 %417
  %420 = bitcast i16* %418 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !359
  %422 = getelementptr i16, i16* %418, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !359
  %425 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %425, align 2, !alias.scope !362, !noalias !359
  %426 = getelementptr i16, i16* %419, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %427, align 2, !alias.scope !362, !noalias !359
  %428 = add i64 %383, 64
  %429 = add i64 %384, -4
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %431, label %382, !llvm.loop !364

431:                                              ; preds = %382, %370
  %432 = phi i64 [ 0, %370 ], [ %428, %382 ]
  %433 = icmp eq i64 %378, 0
  br i1 %433, label %450, label %434

434:                                              ; preds = %431, %434
  %435 = phi i64 [ %447, %434 ], [ %432, %431 ]
  %436 = phi i64 [ %448, %434 ], [ %378, %431 ]
  %437 = getelementptr i16, i16* %358, i64 %435
  %438 = getelementptr i16, i16* %359, i64 %435
  %439 = bitcast i16* %437 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !359
  %441 = getelementptr i16, i16* %437, i64 8
  %442 = bitcast i16* %441 to <8 x i16>*
  %443 = load <8 x i16>, <8 x i16>* %442, align 2, !alias.scope !359
  %444 = bitcast i16* %438 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %444, align 2, !alias.scope !362, !noalias !359
  %445 = getelementptr i16, i16* %438, i64 8
  %446 = bitcast i16* %445 to <8 x i16>*
  store <8 x i16> %443, <8 x i16>* %446, align 2, !alias.scope !362, !noalias !359
  %447 = add i64 %435, 16
  %448 = add i64 %436, -1
  %449 = icmp eq i64 %448, 0
  br i1 %449, label %450, label %434, !llvm.loop !365

450:                                              ; preds = %434, %431
  %451 = icmp eq i64 %371, %3
  br i1 %451, label %648, label %452

452:                                              ; preds = %450, %363, %361
  %453 = phi i64 [ %3, %363 ], [ %3, %361 ], [ %372, %450 ]
  %454 = phi i16* [ %358, %363 ], [ %358, %361 ], [ %373, %450 ]
  %455 = phi i16* [ %359, %363 ], [ %359, %361 ], [ %374, %450 ]
  %456 = add i64 %453, -1
  %457 = and i64 %453, 7
  %458 = icmp eq i64 %457, 0
  br i1 %458, label %470, label %459

459:                                              ; preds = %452, %459
  %460 = phi i64 [ %465, %459 ], [ %453, %452 ]
  %461 = phi i16* [ %467, %459 ], [ %454, %452 ]
  %462 = phi i16* [ %466, %459 ], [ %455, %452 ]
  %463 = phi i64 [ %468, %459 ], [ %457, %452 ]
  %464 = load i16, i16* %461, align 2
  store i16 %464, i16* %462, align 2
  %465 = add i64 %460, -1
  %466 = getelementptr inbounds i16, i16* %462, i64 1
  %467 = getelementptr inbounds i16, i16* %461, i64 1
  %468 = add i64 %463, -1
  %469 = icmp eq i64 %468, 0
  br i1 %469, label %470, label %459, !llvm.loop !366

470:                                              ; preds = %459, %452
  %471 = phi i64 [ %453, %452 ], [ %465, %459 ]
  %472 = phi i16* [ %454, %452 ], [ %467, %459 ]
  %473 = phi i16* [ %455, %452 ], [ %466, %459 ]
  %474 = icmp ult i64 %456, 7
  br i1 %474, label %648, label %475

475:                                              ; preds = %470, %475
  %476 = phi i64 [ %501, %475 ], [ %471, %470 ]
  %477 = phi i16* [ %503, %475 ], [ %472, %470 ]
  %478 = phi i16* [ %502, %475 ], [ %473, %470 ]
  %479 = load i16, i16* %477, align 2
  store i16 %479, i16* %478, align 2
  %480 = getelementptr inbounds i16, i16* %478, i64 1
  %481 = getelementptr inbounds i16, i16* %477, i64 1
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %478, i64 2
  %484 = getelementptr inbounds i16, i16* %477, i64 2
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %478, i64 3
  %487 = getelementptr inbounds i16, i16* %477, i64 3
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %478, i64 4
  %490 = getelementptr inbounds i16, i16* %477, i64 4
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %478, i64 5
  %493 = getelementptr inbounds i16, i16* %477, i64 5
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %478, i64 6
  %496 = getelementptr inbounds i16, i16* %477, i64 6
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = getelementptr inbounds i16, i16* %478, i64 7
  %499 = getelementptr inbounds i16, i16* %477, i64 7
  %500 = load i16, i16* %499, align 2
  store i16 %500, i16* %498, align 2
  %501 = add i64 %476, -8
  %502 = getelementptr inbounds i16, i16* %478, i64 8
  %503 = getelementptr inbounds i16, i16* %477, i64 8
  %504 = icmp eq i64 %501, 0
  br i1 %504, label %648, label %475, !llvm.loop !367

505:                                              ; preds = %357
  %506 = icmp ult i16* %358, %359
  br i1 %506, label %507, label %648

507:                                              ; preds = %505
  %508 = getelementptr inbounds i16, i16* %358, i64 %3
  %509 = getelementptr inbounds i16, i16* %359, i64 %3
  %510 = icmp ult i64 %3, 16
  br i1 %510, label %595, label %511

511:                                              ; preds = %507
  %512 = icmp ult i16* %359, %508
  %513 = icmp ult i16* %358, %509
  %514 = and i1 %512, %513
  br i1 %514, label %595, label %515

515:                                              ; preds = %511
  %516 = and i64 %3, -16
  %517 = sub i64 %3, %516
  %518 = sub i64 0, %516
  %519 = getelementptr i16, i16* %508, i64 %518
  %520 = sub i64 0, %516
  %521 = getelementptr i16, i16* %509, i64 %520
  %522 = add i64 %516, -16
  %523 = lshr exact i64 %522, 4
  %524 = add nuw nsw i64 %523, 1
  %525 = and i64 %524, 1
  %526 = icmp eq i64 %522, 0
  br i1 %526, label %573, label %527

527:                                              ; preds = %515
  %528 = sub nuw nsw i64 %524, %525
  %529 = getelementptr i16, i16* %508, i64 -1
  %530 = getelementptr i16, i16* %509, i64 -1
  %531 = getelementptr i16, i16* %508, i64 -1
  %532 = getelementptr i16, i16* %509, i64 -1
  br label %533

533:                                              ; preds = %533, %527
  %534 = phi i64 [ 0, %527 ], [ %568, %533 ]
  %535 = phi i64 [ %528, %527 ], [ %569, %533 ]
  %536 = sub i64 0, %534
  %537 = sub i64 0, %534
  %538 = getelementptr inbounds i16, i16* %530, i64 %537
  %539 = getelementptr inbounds i16, i16* %529, i64 %536
  %540 = getelementptr inbounds i16, i16* %539, i64 -7
  %541 = bitcast i16* %540 to <8 x i16>*
  %542 = load <8 x i16>, <8 x i16>* %541, align 2, !alias.scope !368
  %543 = getelementptr inbounds i16, i16* %539, i64 -8
  %544 = getelementptr inbounds i16, i16* %543, i64 -7
  %545 = bitcast i16* %544 to <8 x i16>*
  %546 = load <8 x i16>, <8 x i16>* %545, align 2, !alias.scope !368
  %547 = getelementptr inbounds i16, i16* %538, i64 -7
  %548 = bitcast i16* %547 to <8 x i16>*
  store <8 x i16> %542, <8 x i16>* %548, align 2, !alias.scope !371, !noalias !368
  %549 = getelementptr inbounds i16, i16* %538, i64 -8
  %550 = getelementptr inbounds i16, i16* %549, i64 -7
  %551 = bitcast i16* %550 to <8 x i16>*
  store <8 x i16> %546, <8 x i16>* %551, align 2, !alias.scope !371, !noalias !368
  %552 = sub nuw nsw i64 -16, %534
  %553 = sub nuw nsw i64 -16, %534
  %554 = getelementptr inbounds i16, i16* %532, i64 %553
  %555 = getelementptr inbounds i16, i16* %531, i64 %552
  %556 = getelementptr inbounds i16, i16* %555, i64 -7
  %557 = bitcast i16* %556 to <8 x i16>*
  %558 = load <8 x i16>, <8 x i16>* %557, align 2, !alias.scope !368
  %559 = getelementptr inbounds i16, i16* %555, i64 -8
  %560 = getelementptr inbounds i16, i16* %559, i64 -7
  %561 = bitcast i16* %560 to <8 x i16>*
  %562 = load <8 x i16>, <8 x i16>* %561, align 2, !alias.scope !368
  %563 = getelementptr inbounds i16, i16* %554, i64 -7
  %564 = bitcast i16* %563 to <8 x i16>*
  store <8 x i16> %558, <8 x i16>* %564, align 2, !alias.scope !371, !noalias !368
  %565 = getelementptr inbounds i16, i16* %554, i64 -8
  %566 = getelementptr inbounds i16, i16* %565, i64 -7
  %567 = bitcast i16* %566 to <8 x i16>*
  store <8 x i16> %562, <8 x i16>* %567, align 2, !alias.scope !371, !noalias !368
  %568 = add i64 %534, 32
  %569 = add i64 %535, -2
  %570 = icmp eq i64 %569, 0
  br i1 %570, label %571, label %533, !llvm.loop !373

571:                                              ; preds = %533
  %572 = sub nuw nsw i64 -32, %534
  br label %573

573:                                              ; preds = %571, %515
  %574 = phi i64 [ 0, %515 ], [ %572, %571 ]
  %575 = icmp eq i64 %525, 0
  br i1 %575, label %593, label %576

576:                                              ; preds = %573
  %577 = getelementptr i16, i16* %508, i64 -1
  %578 = getelementptr i16, i16* %509, i64 -1
  %579 = getelementptr inbounds i16, i16* %578, i64 %574
  %580 = getelementptr inbounds i16, i16* %577, i64 %574
  %581 = getelementptr inbounds i16, i16* %580, i64 -7
  %582 = bitcast i16* %581 to <8 x i16>*
  %583 = load <8 x i16>, <8 x i16>* %582, align 2, !alias.scope !368
  %584 = getelementptr inbounds i16, i16* %580, i64 -8
  %585 = getelementptr inbounds i16, i16* %584, i64 -7
  %586 = bitcast i16* %585 to <8 x i16>*
  %587 = load <8 x i16>, <8 x i16>* %586, align 2, !alias.scope !368
  %588 = getelementptr inbounds i16, i16* %579, i64 -7
  %589 = bitcast i16* %588 to <8 x i16>*
  store <8 x i16> %583, <8 x i16>* %589, align 2, !alias.scope !371, !noalias !368
  %590 = getelementptr inbounds i16, i16* %579, i64 -8
  %591 = getelementptr inbounds i16, i16* %590, i64 -7
  %592 = bitcast i16* %591 to <8 x i16>*
  store <8 x i16> %587, <8 x i16>* %592, align 2, !alias.scope !371, !noalias !368
  br label %593

593:                                              ; preds = %573, %576
  %594 = icmp eq i64 %516, %3
  br i1 %594, label %648, label %595

595:                                              ; preds = %593, %511, %507
  %596 = phi i64 [ %3, %511 ], [ %3, %507 ], [ %517, %593 ]
  %597 = phi i16* [ %508, %511 ], [ %508, %507 ], [ %519, %593 ]
  %598 = phi i16* [ %509, %511 ], [ %509, %507 ], [ %521, %593 ]
  %599 = add i64 %596, -1
  %600 = and i64 %596, 7
  %601 = icmp eq i64 %600, 0
  br i1 %601, label %613, label %602

602:                                              ; preds = %595, %602
  %603 = phi i64 [ %610, %602 ], [ %596, %595 ]
  %604 = phi i16* [ %608, %602 ], [ %597, %595 ]
  %605 = phi i16* [ %607, %602 ], [ %598, %595 ]
  %606 = phi i64 [ %611, %602 ], [ %600, %595 ]
  %607 = getelementptr inbounds i16, i16* %605, i64 -1
  %608 = getelementptr inbounds i16, i16* %604, i64 -1
  %609 = load i16, i16* %608, align 2
  store i16 %609, i16* %607, align 2
  %610 = add i64 %603, -1
  %611 = add i64 %606, -1
  %612 = icmp eq i64 %611, 0
  br i1 %612, label %613, label %602, !llvm.loop !374

613:                                              ; preds = %602, %595
  %614 = phi i64 [ %596, %595 ], [ %610, %602 ]
  %615 = phi i16* [ %597, %595 ], [ %608, %602 ]
  %616 = phi i16* [ %598, %595 ], [ %607, %602 ]
  %617 = icmp ult i64 %599, 7
  br i1 %617, label %648, label %618

618:                                              ; preds = %613, %618
  %619 = phi i64 [ %646, %618 ], [ %614, %613 ]
  %620 = phi i16* [ %644, %618 ], [ %615, %613 ]
  %621 = phi i16* [ %643, %618 ], [ %616, %613 ]
  %622 = getelementptr inbounds i16, i16* %621, i64 -1
  %623 = getelementptr inbounds i16, i16* %620, i64 -1
  %624 = load i16, i16* %623, align 2
  store i16 %624, i16* %622, align 2
  %625 = getelementptr inbounds i16, i16* %621, i64 -2
  %626 = getelementptr inbounds i16, i16* %620, i64 -2
  %627 = load i16, i16* %626, align 2
  store i16 %627, i16* %625, align 2
  %628 = getelementptr inbounds i16, i16* %621, i64 -3
  %629 = getelementptr inbounds i16, i16* %620, i64 -3
  %630 = load i16, i16* %629, align 2
  store i16 %630, i16* %628, align 2
  %631 = getelementptr inbounds i16, i16* %621, i64 -4
  %632 = getelementptr inbounds i16, i16* %620, i64 -4
  %633 = load i16, i16* %632, align 2
  store i16 %633, i16* %631, align 2
  %634 = getelementptr inbounds i16, i16* %621, i64 -5
  %635 = getelementptr inbounds i16, i16* %620, i64 -5
  %636 = load i16, i16* %635, align 2
  store i16 %636, i16* %634, align 2
  %637 = getelementptr inbounds i16, i16* %621, i64 -6
  %638 = getelementptr inbounds i16, i16* %620, i64 -6
  %639 = load i16, i16* %638, align 2
  store i16 %639, i16* %637, align 2
  %640 = getelementptr inbounds i16, i16* %621, i64 -7
  %641 = getelementptr inbounds i16, i16* %620, i64 -7
  %642 = load i16, i16* %641, align 2
  store i16 %642, i16* %640, align 2
  %643 = getelementptr inbounds i16, i16* %621, i64 -8
  %644 = getelementptr inbounds i16, i16* %620, i64 -8
  %645 = load i16, i16* %644, align 2
  store i16 %645, i16* %643, align 2
  %646 = add i64 %619, -8
  %647 = icmp eq i64 %646, 0
  br i1 %647, label %648, label %618, !llvm.loop !375

648:                                              ; preds = %613, %618, %470, %475, %593, %450, %505
  %649 = add i64 %15, %3
  %650 = load i8, i8* %6, align 1
  %651 = icmp slt i8 %650, 0
  br i1 %651, label %652, label %654

652:                                              ; preds = %648
  %653 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %649, i64* %653, align 8
  br label %656

654:                                              ; preds = %648
  %655 = trunc i64 %649 to i8
  store i8 %655, i8* %6, align 1
  br label %656

656:                                              ; preds = %652, %654
  %657 = getelementptr inbounds i16, i16* %38, i64 %649
  store i16 0, i16* %657, align 2
  br label %661

658:                                              ; preds = %25
  %659 = add i64 %15, %3
  %660 = sub i64 %659, %26
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %26, i64 %660, i64 %15, i64 %1, i64 0, i64 %3, i16* %2)
  br label %661

661:                                              ; preds = %29, %656, %658
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{i8 0, i8 2}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_OS9_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_OS9_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!20 = !{!21}
!21 = distinct !{!21, !22}
!22 = distinct !{!22, !"LVerDomain"}
!23 = !{!24}
!24 = distinct !{!24, !22}
!25 = !{!18, !21}
!26 = distinct !{!26, !8}
!27 = distinct !{!27, !10}
!28 = distinct !{!28, !10}
!29 = distinct !{!29, !8}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!32 = distinct !{!32, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!33 = !{!34}
!34 = distinct !{!34, !35}
!35 = distinct !{!35, !"LVerDomain"}
!36 = !{!37}
!37 = distinct !{!37, !35}
!38 = !{!31, !34}
!39 = distinct !{!39, !8}
!40 = distinct !{!40, !10}
!41 = distinct !{!41, !10}
!42 = distinct !{!42, !8}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!45 = distinct !{!45, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!46 = !{!47}
!47 = distinct !{!47, !48}
!48 = distinct !{!48, !"LVerDomain"}
!49 = !{!50}
!50 = distinct !{!50, !48}
!51 = !{!44, !47}
!52 = distinct !{!52, !8}
!53 = distinct !{!53, !10}
!54 = distinct !{!54, !10}
!55 = distinct !{!55, !8}
!56 = !{!57}
!57 = distinct !{!57, !58}
!58 = distinct !{!58, !"LVerDomain"}
!59 = !{!60}
!60 = distinct !{!60, !58}
!61 = distinct !{!61, !8}
!62 = distinct !{!62, !10}
!63 = distinct !{!63, !10}
!64 = distinct !{!64, !8}
!65 = !{!66}
!66 = distinct !{!66, !67}
!67 = distinct !{!67, !"LVerDomain"}
!68 = !{!69}
!69 = distinct !{!69, !67}
!70 = distinct !{!70, !8}
!71 = distinct !{!71, !10}
!72 = distinct !{!72, !10}
!73 = distinct !{!73, !8}
!74 = !{!75}
!75 = distinct !{!75, !76}
!76 = distinct !{!76, !"LVerDomain"}
!77 = !{!78}
!78 = distinct !{!78, !76}
!79 = distinct !{!79, !8}
!80 = distinct !{!80, !10}
!81 = distinct !{!81, !10}
!82 = distinct !{!82, !8}
!83 = !{!84}
!84 = distinct !{!84, !85}
!85 = distinct !{!85, !"LVerDomain"}
!86 = !{!87}
!87 = distinct !{!87, !85}
!88 = distinct !{!88, !8}
!89 = distinct !{!89, !10}
!90 = distinct !{!90, !10}
!91 = distinct !{!91, !8}
!92 = !{!93}
!93 = distinct !{!93, !94, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!94 = distinct !{!94, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!95 = !{!96}
!96 = distinct !{!96, !97, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!97 = distinct !{!97, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!98 = !{!99}
!99 = distinct !{!99, !100}
!100 = distinct !{!100, !"LVerDomain"}
!101 = !{!102}
!102 = distinct !{!102, !100}
!103 = !{!96, !99}
!104 = distinct !{!104, !8}
!105 = distinct !{!105, !10}
!106 = distinct !{!106, !10}
!107 = distinct !{!107, !8}
!108 = !{!109}
!109 = distinct !{!109, !110, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!110 = distinct !{!110, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!111 = !{!112}
!112 = distinct !{!112, !113, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!113 = distinct !{!113, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!114 = !{!115}
!115 = distinct !{!115, !116}
!116 = distinct !{!116, !"LVerDomain"}
!117 = !{!118}
!118 = distinct !{!118, !116}
!119 = !{!112, !115}
!120 = distinct !{!120, !8}
!121 = distinct !{!121, !10}
!122 = distinct !{!122, !10}
!123 = distinct !{!123, !8}
!124 = !{!125}
!125 = distinct !{!125, !126, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!126 = distinct !{!126, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!127 = !{!128}
!128 = distinct !{!128, !129, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!129 = distinct !{!129, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!130 = !{!131}
!131 = distinct !{!131, !132}
!132 = distinct !{!132, !"LVerDomain"}
!133 = !{!134}
!134 = distinct !{!134, !132}
!135 = !{!128, !131}
!136 = distinct !{!136, !8}
!137 = distinct !{!137, !10}
!138 = distinct !{!138, !10}
!139 = distinct !{!139, !8}
!140 = !{!141}
!141 = distinct !{!141, !142}
!142 = distinct !{!142, !"LVerDomain"}
!143 = !{!144}
!144 = distinct !{!144, !142}
!145 = distinct !{!145, !8}
!146 = distinct !{!146, !10}
!147 = distinct !{!147, !10}
!148 = distinct !{!148, !8}
!149 = !{!150}
!150 = distinct !{!150, !151}
!151 = distinct !{!151, !"LVerDomain"}
!152 = !{!153}
!153 = distinct !{!153, !151}
!154 = distinct !{!154, !8}
!155 = distinct !{!155, !10}
!156 = distinct !{!156, !10}
!157 = distinct !{!157, !8}
!158 = !{!159}
!159 = distinct !{!159, !160}
!160 = distinct !{!160, !"LVerDomain"}
!161 = !{!162}
!162 = distinct !{!162, !160}
!163 = distinct !{!163, !8}
!164 = distinct !{!164, !10}
!165 = distinct !{!165, !10}
!166 = distinct !{!166, !8}
!167 = !{!168}
!168 = distinct !{!168, !169}
!169 = distinct !{!169, !"LVerDomain"}
!170 = !{!171}
!171 = distinct !{!171, !169}
!172 = distinct !{!172, !8}
!173 = distinct !{!173, !10}
!174 = distinct !{!174, !10}
!175 = distinct !{!175, !8}
!176 = !{!177}
!177 = distinct !{!177, !178}
!178 = distinct !{!178, !"LVerDomain"}
!179 = !{!180}
!180 = distinct !{!180, !178}
!181 = distinct !{!181, !8}
!182 = distinct !{!182, !10}
!183 = distinct !{!183, !10}
!184 = distinct !{!184, !8}
!185 = !{!186}
!186 = distinct !{!186, !187}
!187 = distinct !{!187, !"LVerDomain"}
!188 = !{!189}
!189 = distinct !{!189, !187}
!190 = distinct !{!190, !8}
!191 = distinct !{!191, !10}
!192 = distinct !{!192, !10}
!193 = distinct !{!193, !8}
!194 = !{!195}
!195 = distinct !{!195, !196}
!196 = distinct !{!196, !"LVerDomain"}
!197 = !{!198}
!198 = distinct !{!198, !196}
!199 = distinct !{!199, !8}
!200 = distinct !{!200, !10}
!201 = distinct !{!201, !10}
!202 = distinct !{!202, !8}
!203 = !{!204}
!204 = distinct !{!204, !205}
!205 = distinct !{!205, !"LVerDomain"}
!206 = !{!207}
!207 = distinct !{!207, !205}
!208 = distinct !{!208, !8}
!209 = distinct !{!209, !10}
!210 = distinct !{!210, !10}
!211 = distinct !{!211, !8}
!212 = !{!213}
!213 = distinct !{!213, !214}
!214 = distinct !{!214, !"LVerDomain"}
!215 = !{!216}
!216 = distinct !{!216, !214}
!217 = distinct !{!217, !8}
!218 = distinct !{!218, !10}
!219 = distinct !{!219, !10}
!220 = distinct !{!220, !8}
!221 = !{!222}
!222 = distinct !{!222, !223}
!223 = distinct !{!223, !"LVerDomain"}
!224 = !{!225}
!225 = distinct !{!225, !223}
!226 = distinct !{!226, !8}
!227 = distinct !{!227, !10}
!228 = distinct !{!228, !10}
!229 = distinct !{!229, !8}
!230 = !{!231}
!231 = distinct !{!231, !232}
!232 = distinct !{!232, !"LVerDomain"}
!233 = !{!234}
!234 = distinct !{!234, !232}
!235 = distinct !{!235, !8}
!236 = distinct !{!236, !10}
!237 = distinct !{!237, !10}
!238 = distinct !{!238, !8}
!239 = !{!240}
!240 = distinct !{!240, !241}
!241 = distinct !{!241, !"LVerDomain"}
!242 = !{!243}
!243 = distinct !{!243, !241}
!244 = distinct !{!244, !8}
!245 = distinct !{!245, !10}
!246 = distinct !{!246, !10}
!247 = distinct !{!247, !8}
!248 = !{!249}
!249 = distinct !{!249, !250}
!250 = distinct !{!250, !"LVerDomain"}
!251 = !{!252}
!252 = distinct !{!252, !250}
!253 = distinct !{!253, !8}
!254 = distinct !{!254, !10}
!255 = distinct !{!255, !10}
!256 = distinct !{!256, !8}
!257 = !{!258}
!258 = distinct !{!258, !259}
!259 = distinct !{!259, !"LVerDomain"}
!260 = !{!261}
!261 = distinct !{!261, !259}
!262 = distinct !{!262, !8}
!263 = distinct !{!263, !10}
!264 = distinct !{!264, !10}
!265 = distinct !{!265, !8}
!266 = !{!267}
!267 = distinct !{!267, !268, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!268 = distinct !{!268, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!269 = !{!270}
!270 = distinct !{!270, !271, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!271 = distinct !{!271, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!272 = !{!273}
!273 = distinct !{!273, !274, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!274 = distinct !{!274, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!275 = !{!276}
!276 = distinct !{!276, !277}
!277 = distinct !{!277, !"LVerDomain"}
!278 = !{!279}
!279 = distinct !{!279, !277}
!280 = distinct !{!280, !8}
!281 = distinct !{!281, !10}
!282 = distinct !{!282, !10}
!283 = distinct !{!283, !8}
!284 = distinct !{!284, !8}
!285 = distinct !{!285, !10}
!286 = distinct !{!286, !287, !8}
!287 = !{!"llvm.loop.unroll.runtime.disable"}
!288 = !{!289}
!289 = distinct !{!289, !290}
!290 = distinct !{!290, !"LVerDomain"}
!291 = !{!292}
!292 = distinct !{!292, !290}
!293 = distinct !{!293, !8}
!294 = distinct !{!294, !10}
!295 = distinct !{!295, !10}
!296 = distinct !{!296, !8}
!297 = !{!298}
!298 = distinct !{!298, !299}
!299 = distinct !{!299, !"LVerDomain"}
!300 = !{!301}
!301 = distinct !{!301, !299}
!302 = distinct !{!302, !8}
!303 = distinct !{!303, !10}
!304 = distinct !{!304, !10}
!305 = distinct !{!305, !8}
!306 = !{!307}
!307 = distinct !{!307, !308}
!308 = distinct !{!308, !"LVerDomain"}
!309 = !{!310}
!310 = distinct !{!310, !308}
!311 = distinct !{!311, !8}
!312 = distinct !{!312, !10}
!313 = distinct !{!313, !10}
!314 = distinct !{!314, !8}
!315 = !{!316}
!316 = distinct !{!316, !317}
!317 = distinct !{!317, !"LVerDomain"}
!318 = !{!319}
!319 = distinct !{!319, !317}
!320 = distinct !{!320, !8}
!321 = distinct !{!321, !10}
!322 = distinct !{!322, !10}
!323 = distinct !{!323, !8}
!324 = !{!325}
!325 = distinct !{!325, !326}
!326 = distinct !{!326, !"LVerDomain"}
!327 = !{!328}
!328 = distinct !{!328, !326}
!329 = distinct !{!329, !8}
!330 = distinct !{!330, !10}
!331 = distinct !{!331, !10}
!332 = distinct !{!332, !8}
!333 = !{!334}
!334 = distinct !{!334, !335}
!335 = distinct !{!335, !"LVerDomain"}
!336 = !{!337}
!337 = distinct !{!337, !335}
!338 = distinct !{!338, !8}
!339 = distinct !{!339, !10}
!340 = distinct !{!340, !10}
!341 = distinct !{!341, !8}
!342 = !{!343}
!343 = distinct !{!343, !344}
!344 = distinct !{!344, !"LVerDomain"}
!345 = !{!346}
!346 = distinct !{!346, !344}
!347 = distinct !{!347, !8}
!348 = distinct !{!348, !10}
!349 = distinct !{!349, !10}
!350 = distinct !{!350, !8}
!351 = !{!352}
!352 = distinct !{!352, !353}
!353 = distinct !{!353, !"LVerDomain"}
!354 = !{!355}
!355 = distinct !{!355, !353}
!356 = distinct !{!356, !8}
!357 = distinct !{!357, !10}
!358 = distinct !{!358, !8}
!359 = !{!360}
!360 = distinct !{!360, !361}
!361 = distinct !{!361, !"LVerDomain"}
!362 = !{!363}
!363 = distinct !{!363, !361}
!364 = distinct !{!364, !8}
!365 = distinct !{!365, !10}
!366 = distinct !{!366, !10}
!367 = distinct !{!367, !8}
!368 = !{!369}
!369 = distinct !{!369, !370}
!370 = distinct !{!370, !"LVerDomain"}
!371 = !{!372}
!372 = distinct !{!372, !370}
!373 = distinct !{!373, !8}
!374 = distinct !{!374, !10}
!375 = distinct !{!375, !8}
