; ModuleID = '../../base/allocator/partition_allocator/partition_bucket.cc'
source_filename = "../../base/allocator/partition_allocator/partition_bucket.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::internal::PartitionBucket" = type { %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"*, i32, i32, i64 }
%"struct.base::internal::SlotSpanMetadata" = type <{ %"class.base::internal::PartitionFreelistEntry"*, %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::PartitionBucket"*, i16, i16, i8, i8 }>
%"class.base::internal::PartitionFreelistEntry" = type { %"struct.base::internal::EncodedPartitionFreelistEntry"*, i64 }
%"struct.base::internal::EncodedPartitionFreelistEntry" = type { [8 x i8], [8 x i8] }
%"struct.base::PartitionRoot" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, %"class.base::internal::MaybeSpinLock", [4 x i8], [128 x %"struct.base::internal::PartitionBucket"], %"struct.base::internal::PartitionBucket", i8, [7 x i8], %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.1", i8*, i8*, i8*, %"struct.base::internal::PartitionSuperPageExtentEntry"*, %"struct.base::internal::PartitionSuperPageExtentEntry"*, %"struct.base::internal::PartitionDirectMapExtent"*, [16 x %"struct.base::internal::SlotSpanMetadata"*], i16, [6 x i8], i64, %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::internal::MaybeSpinLock" = type { %"class.base::internal::SpinningMutex" }
%"class.base::internal::SpinningMutex" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i64 }
%"struct.base::internal::PartitionSuperPageExtentEntry" = type { %"struct.base::PartitionRoot"*, i8*, i8*, %"struct.base::internal::PartitionSuperPageExtentEntry"* }
%"struct.base::internal::PartitionDirectMapExtent" = type { %"struct.base::internal::PartitionDirectMapExtent"*, %"struct.base::internal::PartitionDirectMapExtent"*, %"struct.base::internal::PartitionBucket"*, i64 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::internal::AddressPoolManager" = type { [2 x %"class.base::internal::AddressPoolManager::Pool"] }
%"class.base::internal::AddressPoolManager::Pool" = type { %"class.base::Lock", %"class.std::__1::bitset", i64, i64, i64 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [64 x i64] }
%"struct.base::internal::PartitionPage" = type { %union.anon, i8, i8 }
%union.anon = type <{ %"struct.base::internal::SubsequentPageMetadata", [22 x i8] }>
%"struct.base::internal::SubsequentPageMetadata" = type { i64 }
%"struct.base::internal::PartitionBucket.6" = type { %"struct.base::internal::SlotSpanMetadata.7"*, %"struct.base::internal::SlotSpanMetadata.7"*, %"struct.base::internal::SlotSpanMetadata.7"*, i32, i32, i64 }
%"struct.base::internal::SlotSpanMetadata.7" = type <{ %"class.base::internal::PartitionFreelistEntry"*, %"struct.base::internal::SlotSpanMetadata.7"*, %"struct.base::internal::PartitionBucket.6"*, i16, i16, i8, i8 }>
%"struct.base::PartitionRoot.8" = type <{ i8, i8, i8, i8, i8, i8, i8, %"class.base::internal::MaybeSpinLock.9", [5 x i8], [128 x %"struct.base::internal::PartitionBucket.6"], %"struct.base::internal::PartitionBucket.6", i8, [7 x i8], %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.1", i8*, i8*, i8*, %"struct.base::internal::PartitionSuperPageExtentEntry.10"*, %"struct.base::internal::PartitionSuperPageExtentEntry.10"*, %"struct.base::internal::PartitionDirectMapExtent.11"*, [16 x %"struct.base::internal::SlotSpanMetadata.7"*], i16, [6 x i8], i64, %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::internal::MaybeSpinLock.9" = type { [4 x i8] }
%"struct.base::internal::PartitionSuperPageExtentEntry.10" = type { %"struct.base::PartitionRoot.8"*, i8*, i8*, %"struct.base::internal::PartitionSuperPageExtentEntry.10"* }
%"struct.base::internal::PartitionDirectMapExtent.11" = type { %"struct.base::internal::PartitionDirectMapExtent.11"*, %"struct.base::internal::PartitionDirectMapExtent.11"*, %"struct.base::internal::PartitionBucket.6"*, i64 }
%"struct.base::internal::PartitionPage.14" = type { %union.anon.15, i8, i8 }
%union.anon.15 = type <{ %"struct.base::internal::SubsequentPageMetadata", [22 x i8] }>

$_ZN4base8internal15PartitionBucketILb1EE4InitEj = comdat any

$_ZN4base8internal15PartitionBucketILb1EE30get_system_pages_per_slot_spanEv = comdat any

$_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb = comdat any

$_ZNK4base8internal15PartitionBucketILb1EE16is_direct_mappedEv = comdat any

$_ZN4base8internal15PartitionBucketILb1EE20SetNewActiveSlotSpanEv = comdat any

$_ZNK4base8internal15PartitionBucketILb1EE18get_bytes_per_spanEv = comdat any

$_ZN4base8internal15PartitionBucketILb1EE16AllocNewSlotSpanEPNS_13PartitionRootILb1EEEim = comdat any

$_ZN4base8internal15PartitionBucketILb1EE29ProvisionMoreSlotsAndAllocOneEPNS_13PartitionRootILb1EEEPNS0_16SlotSpanMetadataILb1EEE = comdat any

$_ZNK4base8internal15PartitionBucketILb1EE15CanStoreRawSizeEv = comdat any

$_ZNK4base8internal15PartitionBucketILb1EE8is_validEv = comdat any

$_ZNK4base8internal15PartitionBucketILb1EE18get_slots_per_spanEv = comdat any

$_ZNK4base8internal15PartitionBucketILb1EE23get_pages_per_slot_spanEv = comdat any

$_ZN4base8internal15PartitionBucketILb1EE6OnFullEv = comdat any

$_ZN4base8internal15PartitionBucketILb1EE13GetSlotNumberEm = comdat any

$_ZN4base8internal15PartitionBucketILb1EE17AllocNewSuperPageEPNS_13PartitionRootILb1EEE = comdat any

$_ZN4base8internal15PartitionBucketILb1EE18InitializeSlotSpanEPNS0_16SlotSpanMetadataILb1EEE = comdat any

$_ZN4base8internal15PartitionBucketILb0EE4InitEj = comdat any

$_ZN4base8internal15PartitionBucketILb0EE30get_system_pages_per_slot_spanEv = comdat any

$_ZN4base8internal15PartitionBucketILb0EE13SlowPathAllocEPNS_13PartitionRootILb0EEEimmPb = comdat any

$_ZNK4base8internal15PartitionBucketILb0EE16is_direct_mappedEv = comdat any

$_ZN4base8internal15PartitionBucketILb0EE20SetNewActiveSlotSpanEv = comdat any

$_ZNK4base8internal15PartitionBucketILb0EE18get_bytes_per_spanEv = comdat any

$_ZN4base8internal15PartitionBucketILb0EE16AllocNewSlotSpanEPNS_13PartitionRootILb0EEEim = comdat any

$_ZN4base8internal15PartitionBucketILb0EE29ProvisionMoreSlotsAndAllocOneEPNS_13PartitionRootILb0EEEPNS0_16SlotSpanMetadataILb0EEE = comdat any

$_ZNK4base8internal15PartitionBucketILb0EE15CanStoreRawSizeEv = comdat any

$_ZNK4base8internal15PartitionBucketILb0EE8is_validEv = comdat any

$_ZNK4base8internal15PartitionBucketILb0EE18get_slots_per_spanEv = comdat any

$_ZNK4base8internal15PartitionBucketILb0EE23get_pages_per_slot_spanEv = comdat any

$_ZN4base8internal15PartitionBucketILb0EE6OnFullEv = comdat any

$_ZN4base8internal15PartitionBucketILb0EE13GetSlotNumberEm = comdat any

$_ZN4base8internal15PartitionBucketILb0EE17AllocNewSuperPageEPNS_13PartitionRootILb0EEE = comdat any

$_ZN4base8internal15PartitionBucketILb0EE18InitializeSlotSpanEPNS0_16SlotSpanMetadataILb0EEE = comdat any

$_ZN4base8internal13MaybeSpinLockILb1EE6UnlockEv = comdat any

@.str = private unnamed_addr constant [102 x i8] c"../../base/allocator/partition_allocator/partition_bucket.cc(347) Check failed: best_pages < (1 << 8)\00", align 1
@.str.1 = private unnamed_addr constant [122 x i8] c"../../base/allocator/partition_allocator/partition_bucket.cc(377) Check failed: best_pages <= MaxSystemPagesPerSlotSpan()\00", align 1
@.str.2 = private unnamed_addr constant [168 x i8] c"../../base/allocator/partition_allocator/partition_bucket.cc(428) Check failed: adjusted_next_partition_page + slot_span_reserved_size <= root->next_partition_page_end\00", align 1
@_ZN4base8internal21PartitionAddressSpace9brp_pool_E = external local_unnamed_addr global i32, align 4
@_ZN4base8internal21PartitionAddressSpace13non_brp_pool_E = external local_unnamed_addr global i32, align 4

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN4base8internal15PartitionBucketILb1EE4InitEj(%"struct.base::internal::PartitionBucket"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %0, i64 0, i32 3
  store i32 %1, i32* %3, align 8
  %4 = zext i32 %1 to i64
  %5 = udiv i64 4398046511103, %4
  %6 = add nuw nsw i64 %5, 1
  %7 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %0, i64 0, i32 5
  store i64 %6, i64* %7, align 8
  %8 = tail call %"struct.base::internal::SlotSpanMetadata"* @_ZN4base8internal16SlotSpanMetadataILb1EE22get_sentinel_slot_spanEv() #9
  %9 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %0, i64 0, i32 0
  store %"struct.base::internal::SlotSpanMetadata"* %8, %"struct.base::internal::SlotSpanMetadata"** %9, align 8
  %10 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %0, i64 0, i32 4
  %12 = bitcast %"struct.base::internal::SlotSpanMetadata"** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  %13 = load i32, i32* %11, align 4
  %14 = and i32 %13, 255
  store i32 %14, i32* %11, align 4
  %15 = load i32, i32* %3, align 8
  %16 = zext i32 %15 to i64
  %17 = icmp ugt i32 %15, 65536
  br i1 %17, label %18, label %26

18:                                               ; preds = %2
  %19 = lshr i32 %15, 12
  %20 = trunc i32 %19 to i16
  %21 = and i32 %15, 267386880
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %48, label %23, !prof !2

23:                                               ; preds = %18
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str, i64 0, i64 0)) #9
  br label %48

24:                                               ; preds = %26
  %25 = icmp ugt i16 %44, 16
  br i1 %25, label %47, label %48, !prof !3

26:                                               ; preds = %2, %26
  %27 = phi i64 [ %45, %26 ], [ 3, %2 ]
  %28 = phi i16 [ %44, %26 ], [ 0, %2 ]
  %29 = phi double [ %42, %26 ], [ 1.000000e+00, %2 ]
  %30 = shl nuw nsw i64 %27, 12
  %31 = urem i64 %30, %16
  %32 = and i64 %27, 3
  %33 = icmp eq i64 %32, 0
  %34 = shl nuw nsw i64 %32, 3
  %35 = sub nuw nsw i64 32, %34
  %36 = select i1 %33, i64 0, i64 %35
  %37 = add nuw nsw i64 %36, %31
  %38 = uitofp i64 %37 to double
  %39 = uitofp i64 %30 to double
  %40 = fdiv double %38, %39
  %41 = fcmp olt double %40, %29
  %42 = select i1 %41, double %40, double %29
  %43 = trunc i64 %27 to i16
  %44 = select i1 %41, i16 %43, i16 %28
  %45 = add nuw nsw i64 %27, 1
  %46 = icmp eq i64 %45, 17
  br i1 %46, label %24, label %26

47:                                               ; preds = %24
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([122 x i8], [122 x i8]* @.str.1, i64 0, i64 0)) #9
  br label %48

48:                                               ; preds = %18, %23, %24, %47
  %49 = phi i16 [ %20, %18 ], [ %20, %23 ], [ %44, %24 ], [ %44, %47 ]
  %50 = and i16 %49, 255
  %51 = zext i16 %50 to i32
  %52 = load i32, i32* %11, align 4
  %53 = and i32 %52, -256
  %54 = or i32 %53, %51
  store i32 %54, i32* %11, align 4
  ret void
}

declare %"struct.base::internal::SlotSpanMetadata"* @_ZN4base8internal16SlotSpanMetadataILb1EE22get_sentinel_slot_spanEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i8 @_ZN4base8internal15PartitionBucketILb1EE30get_system_pages_per_slot_spanEv(%"struct.base::internal::PartitionBucket"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = zext i32 %3 to i64
  %5 = icmp ugt i32 %3, 65536
  br i1 %5, label %6, label %14

6:                                                ; preds = %1
  %7 = lshr i32 %3, 12
  %8 = trunc i32 %7 to i16
  %9 = and i32 %3, 267386880
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %36, label %11, !prof !2

11:                                               ; preds = %6
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str, i64 0, i64 0)) #9
  br label %36

12:                                               ; preds = %14
  %13 = icmp ugt i16 %32, 16
  br i1 %13, label %35, label %36, !prof !3

14:                                               ; preds = %1, %14
  %15 = phi i64 [ %33, %14 ], [ 3, %1 ]
  %16 = phi i16 [ %32, %14 ], [ 0, %1 ]
  %17 = phi double [ %30, %14 ], [ 1.000000e+00, %1 ]
  %18 = shl nuw nsw i64 %15, 12
  %19 = urem i64 %18, %4
  %20 = and i64 %15, 3
  %21 = icmp eq i64 %20, 0
  %22 = shl nuw nsw i64 %20, 3
  %23 = sub nuw nsw i64 32, %22
  %24 = select i1 %21, i64 0, i64 %23
  %25 = add nuw nsw i64 %19, %24
  %26 = uitofp i64 %25 to double
  %27 = uitofp i64 %18 to double
  %28 = fdiv double %26, %27
  %29 = fcmp olt double %28, %17
  %30 = select i1 %29, double %28, double %17
  %31 = trunc i64 %15 to i16
  %32 = select i1 %29, i16 %31, i16 %16
  %33 = add nuw nsw i64 %15, 1
  %34 = icmp eq i64 %33, 17
  br i1 %34, label %12, label %14

35:                                               ; preds = %12
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([122 x i8], [122 x i8]* @.str.1, i64 0, i64 0)) #9
  br label %36

36:                                               ; preds = %35, %12, %11, %6
  %37 = phi i16 [ %8, %6 ], [ %8, %11 ], [ %32, %12 ], [ %32, %35 ]
  %38 = trunc i16 %37 to i8
  ret i8 %38
}

; Function Attrs: noinline nounwind ssp uwtable
define weak_odr hidden i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"*, %"struct.base::PartitionRoot"*, i32, i64, i64, i8*) local_unnamed_addr #2 comdat align 2 {
  store i8 0, i8* %5, align 1
  %7 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 255
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %123, !prof !3

11:                                               ; preds = %6
  %12 = and i32 %2, 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %533

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 8
  %16 = and i32 %2, 1
  %17 = icmp ne i32 %16, 0
  %18 = icmp ugt i64 %3, 2145386496
  br i1 %18, label %19, label %21, !prof !3

19:                                               ; preds = %14
  br i1 %17, label %120, label %20

20:                                               ; preds = %19
  tail call void @_ZN4base8internal13MaybeSpinLockILb1EE6UnlockEv(%"class.base::internal::MaybeSpinLock"* %15) #9
  tail call void @_ZN4base8internal32PartitionExcessiveAllocationSizeEm(i64 %3) #10
  unreachable

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw xchg i32* %22, i32 0 release
  %24 = icmp eq i32 %23, 2
  br i1 %24, label %25, label %27, !prof !3

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %15, i64 0, i32 0
  tail call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %26) #9
  br label %27

27:                                               ; preds = %25, %21
  %28 = add nuw nsw i64 %3, 4095
  %29 = and i64 %28, -4096
  %30 = add nuw nsw i64 %3, 2117631
  %31 = and i64 %30, -2097152
  %32 = add nsw i64 %31, -20480
  %33 = load i32, i32* @_ZN4base8internal21PartitionAddressSpace13non_brp_pool_E, align 4
  %34 = tail call %"class.base::internal::AddressPoolManager"* @_ZN4base8internal18AddressPoolManager11GetInstanceEv() #9
  %35 = tail call i8* @_ZN4base8internal18AddressPoolManager7ReserveEjPvm(%"class.base::internal::AddressPoolManager"* %34, i32 %33, i8* null, i64 %31) #9
  %36 = icmp eq i8* %35, null
  br i1 %36, label %37, label %39, !prof !3

37:                                               ; preds = %27
  br i1 %17, label %77, label %38

38:                                               ; preds = %37
  tail call void @_ZN4base13PartitionRootILb1EE11OutOfMemoryEm(%"struct.base::PartitionRoot"* %1, i64 %3) #10
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i64* %40, i64 %31 monotonic
  %42 = getelementptr inbounds i8, i8* %35, i64 16384
  %43 = getelementptr inbounds i8, i8* %35, i64 4096
  tail call void @_ZN4base19RecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8* %43, i64 4096, i32 2, i32 0) #9
  %44 = tail call zeroext i1 @_ZN4base22TryRecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8* %42, i64 %29, i32 2, i32 0) #9
  br i1 %44, label %49, label %45

45:                                               ; preds = %39
  br i1 %17, label %47, label %46

46:                                               ; preds = %45
  tail call void @_ZN4base13PartitionRootILb1EE11OutOfMemoryEm(%"struct.base::PartitionRoot"* %1, i64 %3) #10
  unreachable

47:                                               ; preds = %45
  %48 = tail call %"class.base::internal::AddressPoolManager"* @_ZN4base8internal18AddressPoolManager11GetInstanceEv() #9
  tail call void @_ZN4base8internal18AddressPoolManager20UnreserveAndDecommitEjPvm(%"class.base::internal::AddressPoolManager"* %48, i32 %33, i8* nonnull %35, i64 %31) #9
  br label %77

49:                                               ; preds = %39
  %50 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i64* %50, i64 %29 monotonic
  %52 = ptrtoint i8* %35 to i64
  %53 = add i64 %52, 4096
  %54 = inttoptr i64 %53 to i8*
  %55 = inttoptr i64 %53 to %"struct.base::PartitionRoot"**
  store %"struct.base::PartitionRoot"* %1, %"struct.base::PartitionRoot"** %55, align 8
  %56 = getelementptr inbounds i8, i8* %54, i64 32
  %57 = getelementptr inbounds i8, i8* %54, i64 63
  %58 = load i8, i8* %57, align 1
  %59 = or i8 %58, 1
  store i8 %59, i8* %57, align 1
  %60 = getelementptr inbounds i8, i8* %54, i64 94
  store i8 1, i8* %60, align 2
  %61 = trunc i64 %29 to i32
  %62 = getelementptr inbounds i8, i8* %54, i64 96
  %63 = bitcast i8* %62 to %"struct.base::internal::PartitionBucket"*
  %64 = getelementptr inbounds i8, i8* %54, i64 120
  %65 = bitcast i8* %64 to i32*
  store i32 %61, i32* %65, align 8
  %66 = bitcast i8* %56 to %"struct.base::internal::SlotSpanMetadata"*
  tail call void @_ZN4base8internal16SlotSpanMetadataILb1EEC1EPNS0_15PartitionBucketILb1EEE(%"struct.base::internal::SlotSpanMetadata"* %66, %"struct.base::internal::PartitionBucket"* %63) #9
  %67 = bitcast i8* %42 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* null, %"struct.base::internal::EncodedPartitionFreelistEntry"** %67, align 8
  %68 = getelementptr inbounds i8, i8* %35, i64 16392
  %69 = bitcast i8* %68 to i64*
  store i64 -1, i64* %69, align 8
  %70 = bitcast i8* %56 to i8**
  store i8* %42, i8** %70, align 1
  %71 = getelementptr inbounds i8, i8* %54, i64 136
  %72 = bitcast i8* %71 to %"struct.base::internal::PartitionDirectMapExtent"*
  %73 = getelementptr inbounds i8, i8* %54, i64 160
  %74 = bitcast i8* %73 to i64*
  store i64 %32, i64* %74, align 8
  %75 = getelementptr inbounds i8, i8* %54, i64 152
  %76 = bitcast i8* %75 to i8**
  store i8* %62, i8** %76, align 8
  br label %77

77:                                               ; preds = %49, %47, %37
  %78 = phi %"struct.base::internal::PartitionDirectMapExtent"* [ null, %37 ], [ %72, %49 ], [ null, %47 ]
  %79 = phi %"struct.base::internal::SlotSpanMetadata"* [ null, %37 ], [ %66, %49 ], [ null, %47 ]
  %80 = phi i32 [ 1, %37 ], [ 0, %49 ], [ 1, %47 ]
  %81 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %15, i64 0, i32 0
  br label %82

82:                                               ; preds = %94, %77
  %83 = phi i32 [ 0, %77 ], [ %95, %94 ]
  %84 = phi i32 [ 1, %77 ], [ %98, %94 ]
  %85 = load atomic i32, i32* %22 monotonic, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %90, !prof !4

87:                                               ; preds = %82
  %88 = cmpxchg weak i32* %22, i32 0, i32 1 acquire monotonic
  %89 = extractvalue { i32, i1 } %88, 1
  br i1 %89, label %105, label %90, !prof !2

90:                                               ; preds = %87, %82
  %91 = icmp sgt i32 %84, 0
  br i1 %91, label %100, label %94

92:                                               ; preds = %100
  %93 = add i32 %84, %83
  br label %94

94:                                               ; preds = %92, %90
  %95 = phi i32 [ %83, %90 ], [ %93, %92 ]
  %96 = shl i32 %84, 1
  %97 = icmp slt i32 %96, 64
  %98 = select i1 %97, i32 %96, i32 64
  %99 = icmp slt i32 %95, 1000
  br i1 %99, label %82, label %104

100:                                              ; preds = %90, %100
  %101 = phi i32 [ %102, %100 ], [ 0, %90 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !5
  %102 = add nuw nsw i32 %101, 1
  %103 = icmp eq i32 %102, %84
  br i1 %103, label %92, label %100

104:                                              ; preds = %94
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %81) #9
  br label %105

105:                                              ; preds = %87, %104
  %106 = icmp eq i32 %80, 0
  br i1 %106, label %107, label %120

107:                                              ; preds = %105
  %108 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 22
  %109 = load %"struct.base::internal::PartitionDirectMapExtent"*, %"struct.base::internal::PartitionDirectMapExtent"** %108, align 8
  %110 = getelementptr inbounds %"struct.base::internal::PartitionDirectMapExtent", %"struct.base::internal::PartitionDirectMapExtent"* %78, i64 0, i32 0
  store %"struct.base::internal::PartitionDirectMapExtent"* %109, %"struct.base::internal::PartitionDirectMapExtent"** %110, align 8
  %111 = icmp eq %"struct.base::internal::PartitionDirectMapExtent"* %109, null
  br i1 %111, label %114, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"struct.base::internal::PartitionDirectMapExtent", %"struct.base::internal::PartitionDirectMapExtent"* %109, i64 0, i32 1
  store %"struct.base::internal::PartitionDirectMapExtent"* %78, %"struct.base::internal::PartitionDirectMapExtent"** %113, align 8
  br label %114

114:                                              ; preds = %107, %112
  %115 = getelementptr inbounds %"struct.base::internal::PartitionDirectMapExtent", %"struct.base::internal::PartitionDirectMapExtent"* %78, i64 0, i32 1
  store %"struct.base::internal::PartitionDirectMapExtent"* null, %"struct.base::internal::PartitionDirectMapExtent"** %115, align 8
  store %"struct.base::internal::PartitionDirectMapExtent"* %78, %"struct.base::internal::PartitionDirectMapExtent"** %108, align 8
  %116 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %79, null
  br i1 %116, label %120, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %79, i64 0, i32 2
  %119 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %118, align 1
  br label %120

120:                                              ; preds = %105, %19, %114, %117
  %121 = phi %"struct.base::internal::SlotSpanMetadata"* [ %79, %117 ], [ null, %114 ], [ null, %19 ], [ null, %105 ]
  %122 = phi %"struct.base::internal::PartitionBucket"* [ %119, %117 ], [ %0, %114 ], [ %0, %19 ], [ %0, %105 ]
  store i8 1, i8* %5, align 1
  br label %432

123:                                              ; preds = %6
  %124 = icmp ugt i64 %4, 16384
  br i1 %124, label %195, label %125, !prof !3

125:                                              ; preds = %123
  %126 = tail call zeroext i1 @_ZN4base8internal15PartitionBucketILb1EE20SetNewActiveSlotSpanEv(%"struct.base::internal::PartitionBucket"* %0)
  br i1 %126, label %127, label %130, !prof !2

127:                                              ; preds = %125
  %128 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %0, i64 0, i32 0
  %129 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %128, align 8
  br label %432

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %0, i64 0, i32 1
  %132 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %131, align 8
  %133 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %132, null
  br i1 %133, label %134, label %141

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %0, i64 0, i32 2
  %136 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %135, align 8
  %137 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %136, null
  br i1 %137, label %195, label %138, !prof !3

138:                                              ; preds = %151, %134
  %139 = phi %"struct.base::internal::SlotSpanMetadata"* [ null, %134 ], [ %155, %151 ]
  %140 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %139, null
  br i1 %140, label %156, label %141, !prof !3

141:                                              ; preds = %130, %138
  %142 = phi %"struct.base::internal::SlotSpanMetadata"* [ %139, %138 ], [ %132, %130 ]
  %143 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %142, i64 0, i32 1
  %144 = bitcast %"struct.base::internal::SlotSpanMetadata"** %143 to i64*
  %145 = load i64, i64* %144, align 1
  %146 = bitcast %"struct.base::internal::SlotSpanMetadata"** %131 to i64*
  store i64 %145, i64* %146, align 8
  %147 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %142, i64 0, i32 0
  %148 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %147, align 1
  %149 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %148, null
  br i1 %149, label %151, label %150

150:                                              ; preds = %141
  store %"struct.base::internal::SlotSpanMetadata"* null, %"struct.base::internal::SlotSpanMetadata"** %143, align 1
  br label %441

151:                                              ; preds = %141
  %152 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %0, i64 0, i32 2
  %153 = bitcast %"struct.base::internal::SlotSpanMetadata"** %152 to i64*
  %154 = load i64, i64* %153, align 8
  store i64 %154, i64* %144, align 1
  store %"struct.base::internal::SlotSpanMetadata"* %142, %"struct.base::internal::SlotSpanMetadata"** %152, align 8
  %155 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %131, align 8
  br label %138

156:                                              ; preds = %138
  %157 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %0, i64 0, i32 2
  %158 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %157, align 8
  %159 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %158, null
  br i1 %159, label %436, label %160, !prof !3

160:                                              ; preds = %156
  %161 = and i32 %2, 8
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %533

163:                                              ; preds = %160
  %164 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %158, i64 0, i32 1
  %165 = bitcast %"struct.base::internal::SlotSpanMetadata"** %164 to i64*
  %166 = load i64, i64* %165, align 1
  %167 = bitcast %"struct.base::internal::SlotSpanMetadata"** %157 to i64*
  store i64 %166, i64* %167, align 8
  %168 = ptrtoint %"struct.base::internal::SlotSpanMetadata"* %158 to i64
  %169 = and i64 %168, 2097151
  %170 = add nuw nsw i64 %169, 36028797018959872
  %171 = lshr i64 %170, 5
  %172 = and i64 %168, -2097152
  %173 = shl i64 %171, 14
  %174 = add i64 %173, %172
  %175 = inttoptr i64 %174 to i8*
  %176 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %158, i64 0, i32 2
  %177 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %176, align 1
  %178 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %177, i64 0, i32 4
  %179 = load i32, i32* %178, align 4
  %180 = shl i32 %179, 12
  %181 = and i32 %180, 1044480
  %182 = zext i32 %181 to i64
  tail call void @_ZN4base19RecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8* %175, i64 %182, i32 2, i32 1) #9
  %183 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = atomicrmw add i64* %183, i64 %182 monotonic
  %185 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %176, align 1
  %186 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %185, i64 0, i32 4
  %187 = load i32, i32* %186, align 4
  %188 = shl i32 %187, 12
  %189 = and i32 %188, 1044480
  %190 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %185, i64 0, i32 3
  %191 = load i32, i32* %190, align 8
  %192 = udiv i32 %189, %191
  %193 = trunc i32 %192 to i16
  %194 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %158, i64 0, i32 4
  store i16 %193, i16* %194, align 1
  store %"struct.base::internal::SlotSpanMetadata"* null, %"struct.base::internal::SlotSpanMetadata"** %164, align 1
  store i8 1, i8* %5, align 1
  br label %441

195:                                              ; preds = %134, %123
  %196 = and i32 %2, 8
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %533

198:                                              ; preds = %195
  %199 = load i32, i32* %7, align 4
  %200 = and i32 %199, 255
  %201 = add nuw nsw i32 %200, 3
  %202 = lshr i32 %201, 2
  %203 = shl nuw nsw i32 %202, 14
  %204 = zext i32 %203 to i64
  %205 = shl i32 %199, 12
  %206 = and i32 %205, 1044480
  %207 = zext i32 %206 to i64
  %208 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 18
  %209 = bitcast i8** %208 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = add i64 %4, -1
  %212 = add i64 %210, %211
  %213 = sub i64 0, %4
  %214 = and i64 %212, %213
  %215 = inttoptr i64 %214 to i8*
  %216 = getelementptr inbounds i8, i8* %215, i64 %204
  %217 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 19
  %218 = load i8*, i8** %217, align 8
  %219 = icmp ugt i8* %216, %218
  br i1 %219, label %220, label %279, !prof !3

220:                                              ; preds = %198
  %221 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 17
  %222 = load i8*, i8** %221, align 8
  %223 = tail call %"class.base::internal::AddressPoolManager"* @_ZN4base8internal18AddressPoolManager11GetInstanceEv() #9
  %224 = load i32, i32* @_ZN4base8internal21PartitionAddressSpace9brp_pool_E, align 4
  %225 = tail call i8* @_ZN4base8internal18AddressPoolManager7ReserveEjPvm(%"class.base::internal::AddressPoolManager"* %223, i32 %224, i8* %222, i64 2097152) #9
  %226 = icmp eq i8* %225, null
  br i1 %226, label %430, label %227, !prof !3

227:                                              ; preds = %220
  %228 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = atomicrmw add i64* %228, i64 2097152 monotonic
  %230 = getelementptr inbounds i8, i8* %225, i64 2097152
  store i8* %230, i8** %221, align 8
  %231 = getelementptr inbounds i8, i8* %225, i64 16384
  %232 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 0
  %233 = load i8, i8* %232, align 8
  %234 = icmp eq i8 %233, 0
  %235 = select i1 %234, i64 0, i64 32768
  %236 = getelementptr inbounds i8, i8* %231, i64 %235
  store i8* %236, i8** %208, align 8
  %237 = getelementptr inbounds i8, i8* %225, i64 2080768
  store i8* %237, i8** %217, align 8
  %238 = getelementptr inbounds i8, i8* %225, i64 4096
  tail call void @_ZN4base19RecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8* %238, i64 4096, i32 2, i32 0) #9
  %239 = load i8, i8* %232, align 8
  %240 = icmp eq i8 %239, 2
  br i1 %240, label %241, label %242

241:                                              ; preds = %227
  tail call void @_ZN4base19RecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8* %231, i64 %235, i32 2, i32 0) #9
  br label %242

242:                                              ; preds = %241, %227
  %243 = icmp eq i8* %222, null
  %244 = icmp eq i8* %222, %225
  %245 = or i1 %243, %244
  br i1 %245, label %247, label %246

246:                                              ; preds = %242
  store i8* null, i8** %221, align 8
  br label %247

247:                                              ; preds = %246, %242
  %248 = ptrtoint i8* %225 to i64
  %249 = add i64 %248, 4096
  %250 = inttoptr i64 %249 to i8*
  %251 = inttoptr i64 %249 to %"struct.base::PartitionRoot"**
  store %"struct.base::PartitionRoot"* %1, %"struct.base::PartitionRoot"** %251, align 8
  %252 = getelementptr inbounds i8, i8* %250, i64 8
  %253 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 20
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %252, i8 0, i64 24, i1 false) #9
  %254 = load %"struct.base::internal::PartitionSuperPageExtentEntry"*, %"struct.base::internal::PartitionSuperPageExtentEntry"** %253, align 8
  br i1 %244, label %265, label %255, !prof !2

255:                                              ; preds = %247
  %256 = getelementptr inbounds i8, i8* %250, i64 16
  %257 = bitcast i8* %256 to i8**
  %258 = bitcast i8* %252 to i8**
  %259 = icmp eq %"struct.base::internal::PartitionSuperPageExtentEntry"* %254, null
  %260 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %254, i64 0, i32 3
  %261 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 21
  %262 = select i1 %259, %"struct.base::internal::PartitionSuperPageExtentEntry"** %261, %"struct.base::internal::PartitionSuperPageExtentEntry"** %260, !prof !3
  %263 = bitcast %"struct.base::internal::PartitionSuperPageExtentEntry"** %262 to i8**
  store i8* %250, i8** %263, align 8
  %264 = bitcast %"struct.base::internal::PartitionSuperPageExtentEntry"** %253 to i8**
  store i8* %250, i8** %264, align 8
  store i8* %225, i8** %258, align 8
  store i8* %230, i8** %257, align 8
  br label %269

265:                                              ; preds = %247
  %266 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %254, i64 0, i32 2
  %267 = load i8*, i8** %266, align 8
  %268 = getelementptr inbounds i8, i8* %267, i64 2097152
  store i8* %268, i8** %266, align 8
  br label %269

269:                                              ; preds = %265, %255
  %270 = load i64, i64* %209, align 8
  %271 = add i64 %270, %211
  %272 = and i64 %271, %213
  %273 = inttoptr i64 %272 to i8*
  %274 = getelementptr inbounds i8, i8* %273, i64 %204
  %275 = load i8*, i8** %217, align 8
  %276 = icmp ugt i8* %274, %275
  br i1 %276, label %277, label %279, !prof !3

277:                                              ; preds = %269
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([168 x i8], [168 x i8]* @.str.2, i64 0, i64 0)) #9
  %278 = load i64, i64* %209, align 8
  br label %279

279:                                              ; preds = %277, %269, %198
  %280 = phi i64 [ %278, %277 ], [ %270, %269 ], [ %210, %198 ]
  %281 = phi i8* [ %273, %277 ], [ %273, %269 ], [ %215, %198 ]
  %282 = and i64 %280, -2097152
  %283 = or i64 %282, 4096
  %284 = inttoptr i64 %283 to i8*
  %285 = lshr i64 %280, 9
  %286 = and i64 %285, 4064
  %287 = getelementptr inbounds i8, i8* %284, i64 %286
  %288 = ptrtoint i8* %281 to i64
  %289 = and i64 %288, -2097152
  %290 = or i64 %289, 4096
  %291 = inttoptr i64 %290 to i8*
  %292 = lshr i64 %288, 9
  %293 = and i64 %292, 4064
  %294 = getelementptr inbounds i8, i8* %291, i64 %293
  %295 = bitcast i8* %294 to %"struct.base::internal::PartitionPage"*
  %296 = icmp ult i8* %287, %294
  br i1 %296, label %297, label %320

297:                                              ; preds = %279
  %298 = bitcast i8* %287 to %"struct.base::internal::PartitionPage"*
  %299 = xor i64 %282, -4097
  %300 = add nuw nsw i64 %293, %299
  %301 = sub nuw nsw i64 %300, %286
  %302 = getelementptr i8, i8* %291, i64 %301
  %303 = ptrtoint i8* %302 to i64
  %304 = lshr i64 %303, 5
  %305 = add nuw nsw i64 %304, 1
  %306 = and i64 %305, 7
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %317, label %308

308:                                              ; preds = %297, %308
  %309 = phi %"struct.base::internal::PartitionPage"* [ %314, %308 ], [ %298, %297 ]
  %310 = phi i64 [ %315, %308 ], [ %306, %297 ]
  %311 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %309, i64 0, i32 2
  %312 = load i8, i8* %311, align 1
  %313 = or i8 %312, 2
  store i8 %313, i8* %311, align 1
  %314 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %309, i64 1
  %315 = add i64 %310, -1
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %308, !llvm.loop !6

317:                                              ; preds = %308, %297
  %318 = phi %"struct.base::internal::PartitionPage"* [ %298, %297 ], [ %314, %308 ]
  %319 = icmp ult i8* %302, inttoptr (i64 224 to i8*)
  br i1 %319, label %320, label %402

320:                                              ; preds = %317, %402, %279
  %321 = getelementptr inbounds i8, i8* %281, i64 %204
  store i8* %321, i8** %208, align 8
  %322 = bitcast i8* %294 to %"struct.base::internal::SlotSpanMetadata"*
  tail call void @_ZN4base8internal16SlotSpanMetadataILb1EEC1EPNS0_15PartitionBucketILb1EEE(%"struct.base::internal::SlotSpanMetadata"* %322, %"struct.base::internal::PartitionBucket"* %0) #9
  %323 = getelementptr inbounds i8, i8* %294, i64 28
  store i8 -1, i8* %323, align 4
  %324 = getelementptr inbounds i8, i8* %294, i64 16
  %325 = bitcast i8* %324 to %"struct.base::internal::PartitionBucket"**
  %326 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %325, align 16
  %327 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %326, i64 0, i32 4
  %328 = load i32, i32* %327, align 4
  %329 = shl i32 %328, 12
  %330 = and i32 %329, 1044480
  %331 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %326, i64 0, i32 3
  %332 = load i32, i32* %331, align 8
  %333 = udiv i32 %330, %332
  %334 = trunc i32 %333 to i16
  %335 = getelementptr inbounds i8, i8* %294, i64 26
  %336 = bitcast i8* %335 to i16*
  store i16 %334, i16* %336, align 2
  %337 = getelementptr inbounds i8, i8* %294, i64 8
  %338 = bitcast i8* %337 to %"struct.base::internal::SlotSpanMetadata"**
  store %"struct.base::internal::SlotSpanMetadata"* null, %"struct.base::internal::SlotSpanMetadata"** %338, align 8
  %339 = load i32, i32* %7, align 4
  %340 = trunc i32 %339 to i16
  %341 = and i16 %340, 255
  %342 = add nuw nsw i16 %341, 3
  %343 = lshr i16 %342, 2
  %344 = icmp eq i16 %343, 0
  br i1 %344, label %399, label %345

345:                                              ; preds = %320
  %346 = add nsw i16 %343, -1
  %347 = and i16 %343, 3
  %348 = icmp ult i16 %346, 3
  br i1 %348, label %382, label %349

349:                                              ; preds = %345
  %350 = sub nsw i16 %343, %347
  br label %351

351:                                              ; preds = %351, %349
  %352 = phi i16 [ 0, %349 ], [ %378, %351 ]
  %353 = phi %"struct.base::internal::PartitionPage"* [ %295, %349 ], [ %379, %351 ]
  %354 = phi i16 [ %350, %349 ], [ %380, %351 ]
  %355 = trunc i16 %352 to i8
  %356 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %353, i64 0, i32 1
  store i8 %355, i8* %356, align 1
  %357 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %353, i64 0, i32 2
  %358 = load i8, i8* %357, align 1
  %359 = or i8 %358, 1
  store i8 %359, i8* %357, align 1
  %360 = trunc i16 %352 to i8
  %361 = or i8 %360, 1
  %362 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %353, i64 1, i32 1
  store i8 %361, i8* %362, align 1
  %363 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %353, i64 1, i32 2
  %364 = load i8, i8* %363, align 1
  %365 = or i8 %364, 1
  store i8 %365, i8* %363, align 1
  %366 = trunc i16 %352 to i8
  %367 = or i8 %366, 2
  %368 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %353, i64 2, i32 1
  store i8 %367, i8* %368, align 1
  %369 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %353, i64 2, i32 2
  %370 = load i8, i8* %369, align 1
  %371 = or i8 %370, 1
  store i8 %371, i8* %369, align 1
  %372 = trunc i16 %352 to i8
  %373 = or i8 %372, 3
  %374 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %353, i64 3, i32 1
  store i8 %373, i8* %374, align 1
  %375 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %353, i64 3, i32 2
  %376 = load i8, i8* %375, align 1
  %377 = or i8 %376, 1
  store i8 %377, i8* %375, align 1
  %378 = add nuw nsw i16 %352, 4
  %379 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %353, i64 4
  %380 = add i16 %354, -4
  %381 = icmp eq i16 %380, 0
  br i1 %381, label %382, label %351

382:                                              ; preds = %351, %345
  %383 = phi i16 [ 0, %345 ], [ %378, %351 ]
  %384 = phi %"struct.base::internal::PartitionPage"* [ %295, %345 ], [ %379, %351 ]
  %385 = icmp eq i16 %347, 0
  br i1 %385, label %399, label %386

386:                                              ; preds = %382, %386
  %387 = phi i16 [ %395, %386 ], [ %383, %382 ]
  %388 = phi %"struct.base::internal::PartitionPage"* [ %396, %386 ], [ %384, %382 ]
  %389 = phi i16 [ %397, %386 ], [ %347, %382 ]
  %390 = trunc i16 %387 to i8
  %391 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %388, i64 0, i32 1
  store i8 %390, i8* %391, align 1
  %392 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %388, i64 0, i32 2
  %393 = load i8, i8* %392, align 1
  %394 = or i8 %393, 1
  store i8 %394, i8* %392, align 1
  %395 = add nuw nsw i16 %387, 1
  %396 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %388, i64 1
  %397 = add i16 %389, -1
  %398 = icmp eq i16 %397, 0
  br i1 %398, label %399, label %386, !llvm.loop !8

399:                                              ; preds = %382, %386, %320
  tail call void @_ZN4base19RecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8* %281, i64 %207, i32 2, i32 0) #9
  %400 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %401 = atomicrmw add i64* %400, i64 %207 monotonic
  br label %430

402:                                              ; preds = %317, %402
  %403 = phi %"struct.base::internal::PartitionPage"* [ %428, %402 ], [ %318, %317 ]
  %404 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %403, i64 0, i32 2
  %405 = load i8, i8* %404, align 1
  %406 = or i8 %405, 2
  store i8 %406, i8* %404, align 1
  %407 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %403, i64 1, i32 2
  %408 = load i8, i8* %407, align 1
  %409 = or i8 %408, 2
  store i8 %409, i8* %407, align 1
  %410 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %403, i64 2, i32 2
  %411 = load i8, i8* %410, align 1
  %412 = or i8 %411, 2
  store i8 %412, i8* %410, align 1
  %413 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %403, i64 3, i32 2
  %414 = load i8, i8* %413, align 1
  %415 = or i8 %414, 2
  store i8 %415, i8* %413, align 1
  %416 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %403, i64 4, i32 2
  %417 = load i8, i8* %416, align 1
  %418 = or i8 %417, 2
  store i8 %418, i8* %416, align 1
  %419 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %403, i64 5, i32 2
  %420 = load i8, i8* %419, align 1
  %421 = or i8 %420, 2
  store i8 %421, i8* %419, align 1
  %422 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %403, i64 6, i32 2
  %423 = load i8, i8* %422, align 1
  %424 = or i8 %423, 2
  store i8 %424, i8* %422, align 1
  %425 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %403, i64 7, i32 2
  %426 = load i8, i8* %425, align 1
  %427 = or i8 %426, 2
  store i8 %427, i8* %425, align 1
  %428 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %403, i64 8
  %429 = icmp ult %"struct.base::internal::PartitionPage"* %428, %295
  br i1 %429, label %402, label %320

430:                                              ; preds = %220, %399
  %431 = phi %"struct.base::internal::SlotSpanMetadata"* [ %322, %399 ], [ null, %220 ]
  store i8 1, i8* %5, align 1
  br label %432

432:                                              ; preds = %127, %430, %120
  %433 = phi %"struct.base::internal::PartitionBucket"* [ %122, %120 ], [ %0, %127 ], [ %0, %430 ]
  %434 = phi %"struct.base::internal::SlotSpanMetadata"* [ %121, %120 ], [ %129, %127 ], [ %431, %430 ]
  %435 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %434, null
  br i1 %435, label %436, label %441, !prof !3

436:                                              ; preds = %156, %432
  %437 = and i32 %2, 1
  %438 = icmp eq i32 %437, 0
  br i1 %438, label %439, label %533

439:                                              ; preds = %436
  %440 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 8
  tail call void @_ZN4base8internal13MaybeSpinLockILb1EE6UnlockEv(%"class.base::internal::MaybeSpinLock"* %440) #9
  tail call void @_ZN4base13PartitionRootILb1EE11OutOfMemoryEm(%"struct.base::PartitionRoot"* %1, i64 %3) #10
  unreachable

441:                                              ; preds = %150, %163, %432
  %442 = phi %"struct.base::internal::SlotSpanMetadata"* [ %434, %432 ], [ %142, %150 ], [ %158, %163 ]
  %443 = phi %"struct.base::internal::PartitionBucket"* [ %433, %432 ], [ %0, %150 ], [ %0, %163 ]
  %444 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %443, i64 0, i32 0
  store %"struct.base::internal::SlotSpanMetadata"* %442, %"struct.base::internal::SlotSpanMetadata"** %444, align 8
  %445 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %442, i64 0, i32 6
  %446 = load i8, i8* %445, align 1, !range !9
  %447 = icmp eq i8 %446, 0
  br i1 %447, label %451, label %448

448:                                              ; preds = %441
  %449 = bitcast %"struct.base::internal::SlotSpanMetadata"* %442 to %"struct.base::internal::PartitionPage"*
  %450 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %449, i64 1, i32 0, i32 0, i32 0
  store i64 %3, i64* %450, align 1
  br label %451

451:                                              ; preds = %441, %448
  %452 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %442, i64 0, i32 0
  %453 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %452, align 1
  %454 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %453, null
  br i1 %454, label %478, label %455, !prof !3

455:                                              ; preds = %451
  %456 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %453, i64 0, i32 0
  %457 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %456, align 8
  %458 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %457, null
  %459 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %457 to i64
  br i1 %458, label %460, label %462

460:                                              ; preds = %455
  %461 = tail call i64 @llvm.bswap.i64(i64 %459) #9
  br label %471

462:                                              ; preds = %455
  %463 = xor i64 %459, -1
  %464 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %453, i64 0, i32 1
  %465 = load i64, i64* %464, align 8
  %466 = icmp eq i64 %465, %463
  br i1 %466, label %468, label %467, !prof !2

467:                                              ; preds = %462
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #10
  unreachable

468:                                              ; preds = %462
  %469 = tail call i64 @llvm.bswap.i64(i64 %459) #9
  %470 = inttoptr i64 %469 to i8*
  tail call void @llvm.prefetch(i8* nonnull %470, i32 0, i32 3, i32 1) #9
  br label %471

471:                                              ; preds = %460, %468
  %472 = phi i64 [ %461, %460 ], [ %469, %468 ]
  %473 = inttoptr i64 %472 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %473, %"class.base::internal::PartitionFreelistEntry"** %452, align 1
  %474 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %442, i64 0, i32 3
  %475 = load i16, i16* %474, align 1
  %476 = add i16 %475, 1
  store i16 %476, i16* %474, align 1
  %477 = bitcast %"class.base::internal::PartitionFreelistEntry"* %453 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %477, i8 0, i64 16, i1 false) #9
  br label %533

478:                                              ; preds = %451
  %479 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %442, i64 0, i32 4
  %480 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %0, i64 0, i32 3
  %481 = load i32, i32* %480, align 8
  %482 = zext i32 %481 to i64
  %483 = ptrtoint %"struct.base::internal::SlotSpanMetadata"* %442 to i64
  %484 = and i64 %483, 2097151
  %485 = add nuw nsw i64 %484, 36028797018959872
  %486 = lshr i64 %485, 5
  %487 = and i64 %483, -2097152
  %488 = shl i64 %486, 14
  %489 = add i64 %488, %487
  %490 = inttoptr i64 %489 to i8*
  %491 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %442, i64 0, i32 3
  %492 = load i16, i16* %491, align 1
  %493 = sext i16 %492 to i64
  %494 = mul nsw i64 %493, %482
  %495 = getelementptr inbounds i8, i8* %490, i64 %494
  %496 = getelementptr inbounds i8, i8* %495, i64 %482
  %497 = ptrtoint i8* %495 to i64
  %498 = ptrtoint i8* %496 to i64
  %499 = add i64 %498, 4095
  %500 = and i64 %499, -4096
  %501 = inttoptr i64 %500 to i8*
  %502 = add i16 %492, 1
  store i16 %502, i16* %491, align 1
  %503 = sub i64 %500, %497
  %504 = udiv i64 %503, %482
  %505 = trunc i64 %504 to i16
  %506 = load i16, i16* %479, align 1
  %507 = sub i16 %506, %505
  store i16 %507, i16* %479, align 1
  %508 = getelementptr inbounds i8, i8* %496, i64 %482
  %509 = icmp ugt i8* %508, %501
  br i1 %509, label %533, label %510

510:                                              ; preds = %478
  %511 = bitcast %"struct.base::internal::SlotSpanMetadata"* %442 to i8**
  br label %512

512:                                              ; preds = %530, %510
  %513 = phi i8* [ %508, %510 ], [ %531, %530 ]
  %514 = phi %"class.base::internal::PartitionFreelistEntry"* [ null, %510 ], [ %516, %530 ]
  %515 = phi i8* [ %496, %510 ], [ %513, %530 ]
  %516 = bitcast i8* %515 to %"class.base::internal::PartitionFreelistEntry"*
  %517 = bitcast i8* %515 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* null, %"struct.base::internal::EncodedPartitionFreelistEntry"** %517, align 8
  %518 = getelementptr inbounds i8, i8* %515, i64 8
  %519 = bitcast i8* %518 to i64*
  store i64 -1, i64* %519, align 8
  %520 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %452, align 1
  %521 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %520, null
  br i1 %521, label %522, label %523

522:                                              ; preds = %512
  store i8* %515, i8** %511, align 1
  br label %530

523:                                              ; preds = %512
  %524 = ptrtoint i8* %515 to i64
  %525 = tail call i64 @llvm.bswap.i64(i64 %524) #9
  %526 = inttoptr i64 %525 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %527 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %514, i64 0, i32 0
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %526, %"struct.base::internal::EncodedPartitionFreelistEntry"** %527, align 8
  %528 = xor i64 %525, -1
  %529 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %514, i64 0, i32 1
  store i64 %528, i64* %529, align 8
  br label %530

530:                                              ; preds = %523, %522
  %531 = getelementptr inbounds i8, i8* %513, i64 %482
  %532 = icmp ugt i8* %531, %501
  br i1 %532, label %533, label %512

533:                                              ; preds = %530, %478, %436, %195, %160, %11, %471
  %534 = phi i8* [ %477, %471 ], [ null, %11 ], [ null, %160 ], [ null, %195 ], [ null, %436 ], [ %495, %478 ], [ %495, %530 ]
  ret i8* %534
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK4base8internal15PartitionBucketILb1EE16is_direct_mappedEv(%"struct.base::internal::PartitionBucket"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = and i32 %3, 255
  %5 = icmp eq i32 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN4base8internal15PartitionBucketILb1EE20SetNewActiveSlotSpanEv(%"struct.base::internal::PartitionBucket"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %0, i64 0, i32 0
  %3 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %2, align 8
  %4 = tail call %"struct.base::internal::SlotSpanMetadata"* @_ZN4base8internal16SlotSpanMetadataILb1EE22get_sentinel_slot_spanEv() #9
  %5 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %3, %4
  br i1 %5, label %60, label %6

6:                                                ; preds = %1
  %7 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %3, null
  br i1 %7, label %55, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %0, i64 0, i32 1
  %10 = bitcast %"struct.base::internal::SlotSpanMetadata"** %9 to i64*
  %11 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %0, i64 0, i32 2
  %12 = bitcast %"struct.base::internal::SlotSpanMetadata"** %11 to i64*
  %13 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %0, i64 0, i32 4
  br label %14

14:                                               ; preds = %8, %53
  %15 = phi %"struct.base::internal::SlotSpanMetadata"* [ %3, %8 ], [ %17, %53 ]
  %16 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %15, i64 0, i32 1
  %17 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %16, align 1
  %18 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %15, i64 0, i32 3
  %19 = load i16, i16* %18, align 1
  %20 = icmp sgt i16 %19, 0
  br i1 %20, label %21, label %29, !prof !4

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %15, i64 0, i32 0
  %23 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %22, align 1
  %24 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %23, null
  br i1 %24, label %25, label %57

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %15, i64 0, i32 4
  %27 = load i16, i16* %26, align 1
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %41, label %57, !prof !3

29:                                               ; preds = %14
  %30 = icmp eq i16 %19, 0
  br i1 %30, label %31, label %41, !prof !4

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %15, i64 0, i32 0
  %33 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %32, align 1
  %34 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %33, null
  br i1 %34, label %38, label %35, !prof !3

35:                                               ; preds = %31
  %36 = load i64, i64* %10, align 8
  %37 = bitcast %"struct.base::internal::SlotSpanMetadata"** %16 to i64*
  store i64 %36, i64* %37, align 1
  store %"struct.base::internal::SlotSpanMetadata"* %15, %"struct.base::internal::SlotSpanMetadata"** %9, align 8
  br label %53

38:                                               ; preds = %31
  %39 = load i64, i64* %12, align 8
  %40 = bitcast %"struct.base::internal::SlotSpanMetadata"** %16 to i64*
  store i64 %39, i64* %40, align 1
  store %"struct.base::internal::SlotSpanMetadata"* %15, %"struct.base::internal::SlotSpanMetadata"** %11, align 8
  br label %53

41:                                               ; preds = %25, %29
  %42 = sub i16 0, %19
  store i16 %42, i16* %18, align 1
  %43 = load i32, i32* %13, align 4
  %44 = lshr i32 %43, 8
  %45 = add nuw nsw i32 %44, 1
  %46 = shl i32 %45, 8
  %47 = and i32 %43, 255
  %48 = or i32 %46, %47
  store i32 %48, i32* %13, align 4
  %49 = and i32 %45, 16777215
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52, !prof !3

51:                                               ; preds = %41
  tail call void @_ZN4base8internal15PartitionBucketILb1EE6OnFullEv()
  br label %52

52:                                               ; preds = %51, %41
  store %"struct.base::internal::SlotSpanMetadata"* null, %"struct.base::internal::SlotSpanMetadata"** %16, align 1
  br label %53

53:                                               ; preds = %35, %52, %38
  %54 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %17, null
  br i1 %54, label %55, label %14

55:                                               ; preds = %53, %6
  %56 = tail call %"struct.base::internal::SlotSpanMetadata"* @_ZN4base8internal16SlotSpanMetadataILb1EE22get_sentinel_slot_spanEv() #9
  br label %57

57:                                               ; preds = %25, %21, %55
  %58 = phi %"struct.base::internal::SlotSpanMetadata"* [ %56, %55 ], [ %15, %21 ], [ %15, %25 ]
  %59 = phi i1 [ false, %55 ], [ true, %21 ], [ true, %25 ]
  store %"struct.base::internal::SlotSpanMetadata"* %58, %"struct.base::internal::SlotSpanMetadata"** %2, align 8
  br label %60

60:                                               ; preds = %1, %57
  %61 = phi i1 [ %59, %57 ], [ false, %1 ]
  ret i1 %61
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i64 @_ZNK4base8internal15PartitionBucketILb1EE18get_bytes_per_spanEv(%"struct.base::internal::PartitionBucket"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = shl i32 %3, 12
  %5 = and i32 %4, 1044480
  %6 = zext i32 %5 to i64
  ret i64 %6
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden %"struct.base::internal::SlotSpanMetadata"* @_ZN4base8internal15PartitionBucketILb1EE16AllocNewSlotSpanEPNS_13PartitionRootILb1EEEim(%"struct.base::internal::PartitionBucket"*, %"struct.base::PartitionRoot"*, i32, i64) local_unnamed_addr #3 comdat align 2 {
  %5 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 255
  %8 = add nuw nsw i32 %7, 3
  %9 = lshr i32 %8, 2
  %10 = shl nuw nsw i32 %9, 14
  %11 = zext i32 %10 to i64
  %12 = shl i32 %6, 12
  %13 = and i32 %12, 1044480
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 18
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %3, -1
  %19 = add i64 %18, %17
  %20 = sub i64 0, %3
  %21 = and i64 %19, %20
  %22 = inttoptr i64 %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 %11
  %24 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 19
  %25 = load i8*, i8** %24, align 8
  %26 = icmp ugt i8* %23, %25
  br i1 %26, label %27, label %88, !prof !3

27:                                               ; preds = %4
  %28 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 17
  %29 = load i8*, i8** %28, align 8
  %30 = tail call %"class.base::internal::AddressPoolManager"* @_ZN4base8internal18AddressPoolManager11GetInstanceEv() #9
  %31 = load i32, i32* @_ZN4base8internal21PartitionAddressSpace9brp_pool_E, align 4
  %32 = tail call i8* @_ZN4base8internal18AddressPoolManager7ReserveEjPvm(%"class.base::internal::AddressPoolManager"* %30, i32 %31, i8* %29, i64 2097152) #9
  %33 = icmp eq i8* %32, null
  br i1 %33, label %239, label %34, !prof !3

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i64* %35, i64 2097152 monotonic
  %37 = getelementptr inbounds i8, i8* %32, i64 2097152
  store i8* %37, i8** %28, align 8
  %38 = getelementptr inbounds i8, i8* %32, i64 16384
  %39 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 0
  %40 = load i8, i8* %39, align 8
  %41 = icmp eq i8 %40, 0
  %42 = select i1 %41, i64 0, i64 32768
  %43 = getelementptr inbounds i8, i8* %38, i64 %42
  store i8* %43, i8** %15, align 8
  %44 = getelementptr inbounds i8, i8* %32, i64 2080768
  store i8* %44, i8** %24, align 8
  %45 = getelementptr inbounds i8, i8* %32, i64 4096
  tail call void @_ZN4base19RecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8* %45, i64 4096, i32 2, i32 0) #9
  %46 = load i8, i8* %39, align 8
  %47 = icmp eq i8 %46, 2
  br i1 %47, label %48, label %49

48:                                               ; preds = %34
  tail call void @_ZN4base19RecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8* %38, i64 %42, i32 2, i32 0) #9
  br label %49

49:                                               ; preds = %48, %34
  %50 = icmp eq i8* %29, null
  %51 = icmp eq i8* %29, %32
  %52 = or i1 %50, %51
  br i1 %52, label %54, label %53

53:                                               ; preds = %49
  store i8* null, i8** %28, align 8
  br label %54

54:                                               ; preds = %53, %49
  %55 = ptrtoint i8* %32 to i64
  %56 = add i64 %55, 4096
  %57 = inttoptr i64 %56 to i8*
  %58 = inttoptr i64 %56 to %"struct.base::PartitionRoot"**
  store %"struct.base::PartitionRoot"* %1, %"struct.base::PartitionRoot"** %58, align 8
  %59 = getelementptr inbounds i8, i8* %57, i64 8
  %60 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 20
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 24, i1 false) #9
  %61 = load %"struct.base::internal::PartitionSuperPageExtentEntry"*, %"struct.base::internal::PartitionSuperPageExtentEntry"** %60, align 8
  br i1 %51, label %72, label %62, !prof !2

62:                                               ; preds = %54
  %63 = getelementptr inbounds i8, i8* %57, i64 16
  %64 = bitcast i8* %63 to i8**
  %65 = bitcast i8* %59 to i8**
  %66 = icmp eq %"struct.base::internal::PartitionSuperPageExtentEntry"* %61, null
  %67 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %61, i64 0, i32 3
  %68 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 21
  %69 = select i1 %66, %"struct.base::internal::PartitionSuperPageExtentEntry"** %68, %"struct.base::internal::PartitionSuperPageExtentEntry"** %67, !prof !3
  %70 = bitcast %"struct.base::internal::PartitionSuperPageExtentEntry"** %69 to i8**
  store i8* %57, i8** %70, align 8
  %71 = bitcast %"struct.base::internal::PartitionSuperPageExtentEntry"** %60 to i8**
  store i8* %57, i8** %71, align 8
  store i8* %32, i8** %65, align 8
  store i8* %37, i8** %64, align 8
  br label %76

72:                                               ; preds = %54
  %73 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %61, i64 0, i32 2
  %74 = load i8*, i8** %73, align 8
  %75 = getelementptr inbounds i8, i8* %74, i64 2097152
  store i8* %75, i8** %73, align 8
  br label %76

76:                                               ; preds = %62, %72
  %77 = icmp eq i8* %43, null
  br i1 %77, label %239, label %78

78:                                               ; preds = %76
  %79 = load i64, i64* %16, align 8
  %80 = add i64 %18, %79
  %81 = and i64 %80, %20
  %82 = inttoptr i64 %81 to i8*
  %83 = getelementptr inbounds i8, i8* %82, i64 %11
  %84 = load i8*, i8** %24, align 8
  %85 = icmp ugt i8* %83, %84
  br i1 %85, label %86, label %88, !prof !3

86:                                               ; preds = %78
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([168 x i8], [168 x i8]* @.str.2, i64 0, i64 0)) #9
  %87 = load i64, i64* %16, align 8
  br label %88

88:                                               ; preds = %86, %78, %4
  %89 = phi i64 [ %87, %86 ], [ %79, %78 ], [ %17, %4 ]
  %90 = phi i8* [ %82, %86 ], [ %82, %78 ], [ %22, %4 ]
  %91 = and i64 %89, -2097152
  %92 = or i64 %91, 4096
  %93 = inttoptr i64 %92 to i8*
  %94 = lshr i64 %89, 9
  %95 = and i64 %94, 4064
  %96 = getelementptr inbounds i8, i8* %93, i64 %95
  %97 = ptrtoint i8* %90 to i64
  %98 = and i64 %97, -2097152
  %99 = or i64 %98, 4096
  %100 = inttoptr i64 %99 to i8*
  %101 = lshr i64 %97, 9
  %102 = and i64 %101, 4064
  %103 = getelementptr inbounds i8, i8* %100, i64 %102
  %104 = bitcast i8* %103 to %"struct.base::internal::PartitionPage"*
  %105 = icmp ult i8* %96, %103
  br i1 %105, label %106, label %129

106:                                              ; preds = %88
  %107 = bitcast i8* %96 to %"struct.base::internal::PartitionPage"*
  %108 = xor i64 %91, -4097
  %109 = add nuw nsw i64 %102, %108
  %110 = sub nuw nsw i64 %109, %95
  %111 = getelementptr i8, i8* %100, i64 %110
  %112 = ptrtoint i8* %111 to i64
  %113 = lshr i64 %112, 5
  %114 = add nuw nsw i64 %113, 1
  %115 = and i64 %114, 7
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %126, label %117

117:                                              ; preds = %106, %117
  %118 = phi %"struct.base::internal::PartitionPage"* [ %123, %117 ], [ %107, %106 ]
  %119 = phi i64 [ %124, %117 ], [ %115, %106 ]
  %120 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %118, i64 0, i32 2
  %121 = load i8, i8* %120, align 1
  %122 = or i8 %121, 2
  store i8 %122, i8* %120, align 1
  %123 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %118, i64 1
  %124 = add i64 %119, -1
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %117, !llvm.loop !10

126:                                              ; preds = %117, %106
  %127 = phi %"struct.base::internal::PartitionPage"* [ %107, %106 ], [ %123, %117 ]
  %128 = icmp ult i8* %111, inttoptr (i64 224 to i8*)
  br i1 %128, label %129, label %211

129:                                              ; preds = %126, %211, %88
  %130 = getelementptr inbounds i8, i8* %90, i64 %11
  store i8* %130, i8** %15, align 8
  %131 = bitcast i8* %103 to %"struct.base::internal::SlotSpanMetadata"*
  tail call void @_ZN4base8internal16SlotSpanMetadataILb1EEC1EPNS0_15PartitionBucketILb1EEE(%"struct.base::internal::SlotSpanMetadata"* %131, %"struct.base::internal::PartitionBucket"* %0) #9
  %132 = getelementptr inbounds i8, i8* %103, i64 28
  store i8 -1, i8* %132, align 4
  %133 = getelementptr inbounds i8, i8* %103, i64 16
  %134 = bitcast i8* %133 to %"struct.base::internal::PartitionBucket"**
  %135 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %134, align 16
  %136 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %135, i64 0, i32 4
  %137 = load i32, i32* %136, align 4
  %138 = shl i32 %137, 12
  %139 = and i32 %138, 1044480
  %140 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %135, i64 0, i32 3
  %141 = load i32, i32* %140, align 8
  %142 = udiv i32 %139, %141
  %143 = trunc i32 %142 to i16
  %144 = getelementptr inbounds i8, i8* %103, i64 26
  %145 = bitcast i8* %144 to i16*
  store i16 %143, i16* %145, align 2
  %146 = getelementptr inbounds i8, i8* %103, i64 8
  %147 = bitcast i8* %146 to %"struct.base::internal::SlotSpanMetadata"**
  store %"struct.base::internal::SlotSpanMetadata"* null, %"struct.base::internal::SlotSpanMetadata"** %147, align 8
  %148 = load i32, i32* %5, align 4
  %149 = trunc i32 %148 to i16
  %150 = and i16 %149, 255
  %151 = add nuw nsw i16 %150, 3
  %152 = lshr i16 %151, 2
  %153 = icmp eq i16 %152, 0
  br i1 %153, label %208, label %154

154:                                              ; preds = %129
  %155 = add nsw i16 %152, -1
  %156 = and i16 %152, 3
  %157 = icmp ult i16 %155, 3
  br i1 %157, label %191, label %158

158:                                              ; preds = %154
  %159 = sub nsw i16 %152, %156
  br label %160

160:                                              ; preds = %160, %158
  %161 = phi i16 [ 0, %158 ], [ %187, %160 ]
  %162 = phi %"struct.base::internal::PartitionPage"* [ %104, %158 ], [ %188, %160 ]
  %163 = phi i16 [ %159, %158 ], [ %189, %160 ]
  %164 = trunc i16 %161 to i8
  %165 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %162, i64 0, i32 1
  store i8 %164, i8* %165, align 1
  %166 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %162, i64 0, i32 2
  %167 = load i8, i8* %166, align 1
  %168 = or i8 %167, 1
  store i8 %168, i8* %166, align 1
  %169 = trunc i16 %161 to i8
  %170 = or i8 %169, 1
  %171 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %162, i64 1, i32 1
  store i8 %170, i8* %171, align 1
  %172 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %162, i64 1, i32 2
  %173 = load i8, i8* %172, align 1
  %174 = or i8 %173, 1
  store i8 %174, i8* %172, align 1
  %175 = trunc i16 %161 to i8
  %176 = or i8 %175, 2
  %177 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %162, i64 2, i32 1
  store i8 %176, i8* %177, align 1
  %178 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %162, i64 2, i32 2
  %179 = load i8, i8* %178, align 1
  %180 = or i8 %179, 1
  store i8 %180, i8* %178, align 1
  %181 = trunc i16 %161 to i8
  %182 = or i8 %181, 3
  %183 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %162, i64 3, i32 1
  store i8 %182, i8* %183, align 1
  %184 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %162, i64 3, i32 2
  %185 = load i8, i8* %184, align 1
  %186 = or i8 %185, 1
  store i8 %186, i8* %184, align 1
  %187 = add nuw nsw i16 %161, 4
  %188 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %162, i64 4
  %189 = add i16 %163, -4
  %190 = icmp eq i16 %189, 0
  br i1 %190, label %191, label %160

191:                                              ; preds = %160, %154
  %192 = phi i16 [ 0, %154 ], [ %187, %160 ]
  %193 = phi %"struct.base::internal::PartitionPage"* [ %104, %154 ], [ %188, %160 ]
  %194 = icmp eq i16 %156, 0
  br i1 %194, label %208, label %195

195:                                              ; preds = %191, %195
  %196 = phi i16 [ %204, %195 ], [ %192, %191 ]
  %197 = phi %"struct.base::internal::PartitionPage"* [ %205, %195 ], [ %193, %191 ]
  %198 = phi i16 [ %206, %195 ], [ %156, %191 ]
  %199 = trunc i16 %196 to i8
  %200 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %197, i64 0, i32 1
  store i8 %199, i8* %200, align 1
  %201 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %197, i64 0, i32 2
  %202 = load i8, i8* %201, align 1
  %203 = or i8 %202, 1
  store i8 %203, i8* %201, align 1
  %204 = add nuw nsw i16 %196, 1
  %205 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %197, i64 1
  %206 = add i16 %198, -1
  %207 = icmp eq i16 %206, 0
  br i1 %207, label %208, label %195, !llvm.loop !11

208:                                              ; preds = %191, %195, %129
  tail call void @_ZN4base19RecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8* %90, i64 %14, i32 2, i32 0) #9
  %209 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = atomicrmw add i64* %209, i64 %14 monotonic
  br label %239

211:                                              ; preds = %126, %211
  %212 = phi %"struct.base::internal::PartitionPage"* [ %237, %211 ], [ %127, %126 ]
  %213 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %212, i64 0, i32 2
  %214 = load i8, i8* %213, align 1
  %215 = or i8 %214, 2
  store i8 %215, i8* %213, align 1
  %216 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %212, i64 1, i32 2
  %217 = load i8, i8* %216, align 1
  %218 = or i8 %217, 2
  store i8 %218, i8* %216, align 1
  %219 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %212, i64 2, i32 2
  %220 = load i8, i8* %219, align 1
  %221 = or i8 %220, 2
  store i8 %221, i8* %219, align 1
  %222 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %212, i64 3, i32 2
  %223 = load i8, i8* %222, align 1
  %224 = or i8 %223, 2
  store i8 %224, i8* %222, align 1
  %225 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %212, i64 4, i32 2
  %226 = load i8, i8* %225, align 1
  %227 = or i8 %226, 2
  store i8 %227, i8* %225, align 1
  %228 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %212, i64 5, i32 2
  %229 = load i8, i8* %228, align 1
  %230 = or i8 %229, 2
  store i8 %230, i8* %228, align 1
  %231 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %212, i64 6, i32 2
  %232 = load i8, i8* %231, align 1
  %233 = or i8 %232, 2
  store i8 %233, i8* %231, align 1
  %234 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %212, i64 7, i32 2
  %235 = load i8, i8* %234, align 1
  %236 = or i8 %235, 2
  store i8 %236, i8* %234, align 1
  %237 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %212, i64 8
  %238 = icmp ult %"struct.base::internal::PartitionPage"* %237, %104
  br i1 %238, label %211, label %129

239:                                              ; preds = %27, %76, %208
  %240 = phi %"struct.base::internal::SlotSpanMetadata"* [ %131, %208 ], [ null, %76 ], [ null, %27 ]
  ret %"struct.base::internal::SlotSpanMetadata"* %240
}

; Function Attrs: noreturn
declare void @_ZN4base13PartitionRootILb1EE11OutOfMemoryEm(%"struct.base::PartitionRoot"*, i64) local_unnamed_addr #4

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i8* @_ZN4base8internal15PartitionBucketILb1EE29ProvisionMoreSlotsAndAllocOneEPNS_13PartitionRootILb1EEEPNS0_16SlotSpanMetadataILb1EEE(%"struct.base::internal::PartitionBucket"*, %"struct.base::PartitionRoot"*, %"struct.base::internal::SlotSpanMetadata"*) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %2, i64 0, i32 4
  %5 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = ptrtoint %"struct.base::internal::SlotSpanMetadata"* %2 to i64
  %9 = and i64 %8, 2097151
  %10 = add nuw nsw i64 %9, 36028797018959872
  %11 = lshr i64 %10, 5
  %12 = and i64 %8, -2097152
  %13 = shl i64 %11, 14
  %14 = add i64 %13, %12
  %15 = inttoptr i64 %14 to i8*
  %16 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %2, i64 0, i32 3
  %17 = load i16, i16* %16, align 1
  %18 = sext i16 %17 to i64
  %19 = mul nsw i64 %18, %7
  %20 = getelementptr inbounds i8, i8* %15, i64 %19
  %21 = getelementptr inbounds i8, i8* %20, i64 %7
  %22 = ptrtoint i8* %20 to i64
  %23 = ptrtoint i8* %21 to i64
  %24 = add i64 %23, 4095
  %25 = and i64 %24, -4096
  %26 = inttoptr i64 %25 to i8*
  %27 = add i16 %17, 1
  store i16 %27, i16* %16, align 1
  %28 = sub i64 %25, %22
  %29 = udiv i64 %28, %7
  %30 = trunc i64 %29 to i16
  %31 = load i16, i16* %4, align 1
  %32 = sub i16 %31, %30
  store i16 %32, i16* %4, align 1
  %33 = getelementptr inbounds i8, i8* %21, i64 %7
  %34 = icmp ugt i8* %33, %26
  br i1 %34, label %59, label %35

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %2, i64 0, i32 0
  %37 = bitcast %"struct.base::internal::SlotSpanMetadata"* %2 to i8**
  br label %38

38:                                               ; preds = %35, %56
  %39 = phi i8* [ %33, %35 ], [ %57, %56 ]
  %40 = phi %"class.base::internal::PartitionFreelistEntry"* [ null, %35 ], [ %42, %56 ]
  %41 = phi i8* [ %21, %35 ], [ %39, %56 ]
  %42 = bitcast i8* %41 to %"class.base::internal::PartitionFreelistEntry"*
  %43 = bitcast i8* %41 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* null, %"struct.base::internal::EncodedPartitionFreelistEntry"** %43, align 8
  %44 = getelementptr inbounds i8, i8* %41, i64 8
  %45 = bitcast i8* %44 to i64*
  store i64 -1, i64* %45, align 8
  %46 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %36, align 1
  %47 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %46, null
  br i1 %47, label %48, label %49

48:                                               ; preds = %38
  store i8* %41, i8** %37, align 1
  br label %56

49:                                               ; preds = %38
  %50 = ptrtoint i8* %41 to i64
  %51 = tail call i64 @llvm.bswap.i64(i64 %50) #9
  %52 = inttoptr i64 %51 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %53 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %40, i64 0, i32 0
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %52, %"struct.base::internal::EncodedPartitionFreelistEntry"** %53, align 8
  %54 = xor i64 %51, -1
  %55 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %40, i64 0, i32 1
  store i64 %54, i64* %55, align 8
  br label %56

56:                                               ; preds = %49, %48
  %57 = getelementptr inbounds i8, i8* %39, i64 %7
  %58 = icmp ugt i8* %57, %26
  br i1 %58, label %59, label %38

59:                                               ; preds = %56, %3
  ret i8* %20
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK4base8internal15PartitionBucketILb1EE15CanStoreRawSizeEv(%"struct.base::internal::PartitionBucket"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = icmp ugt i32 %3, 65536
  ret i1 %4
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK4base8internal15PartitionBucketILb1EE8is_validEv(%"struct.base::internal::PartitionBucket"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %0, i64 0, i32 0
  %3 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %2, align 8
  %4 = icmp ne %"struct.base::internal::SlotSpanMetadata"* %3, null
  ret i1 %4
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i16 @_ZNK4base8internal15PartitionBucketILb1EE18get_slots_per_spanEv(%"struct.base::internal::PartitionBucket"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = shl i32 %3, 12
  %5 = and i32 %4, 1044480
  %6 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = udiv i32 %5, %7
  %9 = trunc i32 %8 to i16
  ret i16 %9
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i16 @_ZNK4base8internal15PartitionBucketILb1EE23get_pages_per_slot_spanEv(%"struct.base::internal::PartitionBucket"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = trunc i32 %3 to i16
  %5 = and i16 %4, 255
  %6 = add nuw nsw i16 %5, 3
  %7 = lshr i16 %6, 2
  ret i16 %7
}

; Function Attrs: noinline nounwind ssp uwtable
define weak_odr hidden void @_ZN4base8internal15PartitionBucketILb1EE6OnFullEv() local_unnamed_addr #2 comdat align 2 {
  notail call fastcc void @_ZN12_GLOBAL__N_110OnNoMemoryEm() #11
  unreachable
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i64 @_ZN4base8internal15PartitionBucketILb1EE13GetSlotNumberEm(%"struct.base::internal::PartitionBucket"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = mul i64 %4, %1
  %6 = lshr i64 %5, 42
  ret i64 %6
}

; Function Attrs: noinline noreturn nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_110OnNoMemoryEm() unnamed_addr #5 {
  tail call void @_ZN4base8internal28RunPartitionAllocOomCallbackEv() #9
  tail call void @_ZN4base27TerminateBecauseOutOfMemoryEm(i64 0) #9
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !12
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !13
  unreachable
}

declare void @_ZN7logging8RawCheckEPKc(i8*) local_unnamed_addr #1

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i8* @_ZN4base8internal15PartitionBucketILb1EE17AllocNewSuperPageEPNS_13PartitionRootILb1EEE(%"struct.base::internal::PartitionBucket"*, %"struct.base::PartitionRoot"*) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 17
  %4 = load i8*, i8** %3, align 8
  %5 = tail call %"class.base::internal::AddressPoolManager"* @_ZN4base8internal18AddressPoolManager11GetInstanceEv() #9
  %6 = load i32, i32* @_ZN4base8internal21PartitionAddressSpace9brp_pool_E, align 4
  %7 = tail call i8* @_ZN4base8internal18AddressPoolManager7ReserveEjPvm(%"class.base::internal::AddressPoolManager"* %5, i32 %6, i8* %4, i64 2097152) #9
  %8 = icmp eq i8* %7, null
  br i1 %8, label %53, label %9, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i64* %10, i64 2097152 monotonic
  %12 = getelementptr inbounds i8, i8* %7, i64 2097152
  store i8* %12, i8** %3, align 8
  %13 = getelementptr inbounds i8, i8* %7, i64 16384
  %14 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 0
  %15 = load i8, i8* %14, align 8
  %16 = icmp eq i8 %15, 0
  %17 = select i1 %16, i64 0, i64 32768
  %18 = getelementptr inbounds i8, i8* %13, i64 %17
  %19 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 18
  store i8* %18, i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %7, i64 2080768
  %21 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 19
  store i8* %20, i8** %21, align 8
  %22 = getelementptr inbounds i8, i8* %7, i64 4096
  tail call void @_ZN4base19RecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8* %22, i64 4096, i32 2, i32 0) #9
  %23 = load i8, i8* %14, align 8
  %24 = icmp eq i8 %23, 2
  br i1 %24, label %25, label %26

25:                                               ; preds = %9
  tail call void @_ZN4base19RecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8* %13, i64 %17, i32 2, i32 0) #9
  br label %26

26:                                               ; preds = %25, %9
  %27 = icmp eq i8* %4, null
  %28 = icmp eq i8* %4, %7
  %29 = or i1 %27, %28
  br i1 %29, label %31, label %30

30:                                               ; preds = %26
  store i8* null, i8** %3, align 8
  br label %31

31:                                               ; preds = %26, %30
  %32 = ptrtoint i8* %7 to i64
  %33 = add i64 %32, 4096
  %34 = inttoptr i64 %33 to i8*
  %35 = inttoptr i64 %33 to %"struct.base::PartitionRoot"**
  store %"struct.base::PartitionRoot"* %1, %"struct.base::PartitionRoot"** %35, align 8
  %36 = getelementptr inbounds i8, i8* %34, i64 8
  %37 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 20
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false)
  %38 = load %"struct.base::internal::PartitionSuperPageExtentEntry"*, %"struct.base::internal::PartitionSuperPageExtentEntry"** %37, align 8
  br i1 %28, label %49, label %39, !prof !2

39:                                               ; preds = %31
  %40 = getelementptr inbounds i8, i8* %34, i64 16
  %41 = bitcast i8* %40 to i8**
  %42 = bitcast i8* %36 to i8**
  %43 = icmp eq %"struct.base::internal::PartitionSuperPageExtentEntry"* %38, null
  %44 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %38, i64 0, i32 3
  %45 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 21
  %46 = select i1 %43, %"struct.base::internal::PartitionSuperPageExtentEntry"** %45, %"struct.base::internal::PartitionSuperPageExtentEntry"** %44, !prof !3
  %47 = bitcast %"struct.base::internal::PartitionSuperPageExtentEntry"** %46 to i8**
  store i8* %34, i8** %47, align 8
  %48 = bitcast %"struct.base::internal::PartitionSuperPageExtentEntry"** %37 to i8**
  store i8* %34, i8** %48, align 8
  store i8* %7, i8** %42, align 8
  store i8* %12, i8** %41, align 8
  br label %53

49:                                               ; preds = %31
  %50 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %38, i64 0, i32 2
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 2097152
  store i8* %52, i8** %50, align 8
  br label %53

53:                                               ; preds = %39, %49, %2
  %54 = phi i8* [ null, %2 ], [ %18, %49 ], [ %18, %39 ]
  ret i8* %54
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden void @_ZN4base8internal15PartitionBucketILb1EE18InitializeSlotSpanEPNS0_16SlotSpanMetadataILb1EEE(%"struct.base::internal::PartitionBucket"*, %"struct.base::internal::SlotSpanMetadata"*) local_unnamed_addr #3 comdat align 2 {
  tail call void @_ZN4base8internal16SlotSpanMetadataILb1EEC1EPNS0_15PartitionBucketILb1EEE(%"struct.base::internal::SlotSpanMetadata"* %1, %"struct.base::internal::PartitionBucket"* %0) #9
  %3 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %1, i64 0, i32 5
  store i8 -1, i8* %3, align 1
  %4 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %1, i64 0, i32 2
  %5 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %4, align 1
  %6 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %5, i64 0, i32 4
  %7 = load i32, i32* %6, align 4
  %8 = shl i32 %7, 12
  %9 = and i32 %8, 1044480
  %10 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %5, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = udiv i32 %9, %11
  %13 = trunc i32 %12 to i16
  %14 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %1, i64 0, i32 4
  store i16 %13, i16* %14, align 1
  %15 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %1, i64 0, i32 1
  store %"struct.base::internal::SlotSpanMetadata"* null, %"struct.base::internal::SlotSpanMetadata"** %15, align 1
  %16 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %0, i64 0, i32 4
  %17 = load i32, i32* %16, align 4
  %18 = trunc i32 %17 to i16
  %19 = and i16 %18, 255
  %20 = add nuw nsw i16 %19, 3
  %21 = lshr i16 %20, 2
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %47, label %23

23:                                               ; preds = %2
  %24 = bitcast %"struct.base::internal::SlotSpanMetadata"* %1 to %"struct.base::internal::PartitionPage"*
  %25 = add nsw i16 %21, -1
  %26 = and i16 %21, 3
  %27 = icmp ult i16 %25, 3
  br i1 %27, label %30, label %28

28:                                               ; preds = %23
  %29 = sub nsw i16 %21, %26
  br label %48

30:                                               ; preds = %48, %23
  %31 = phi i16 [ 0, %23 ], [ %75, %48 ]
  %32 = phi %"struct.base::internal::PartitionPage"* [ %24, %23 ], [ %76, %48 ]
  %33 = icmp eq i16 %26, 0
  br i1 %33, label %47, label %34

34:                                               ; preds = %30, %34
  %35 = phi i16 [ %43, %34 ], [ %31, %30 ]
  %36 = phi %"struct.base::internal::PartitionPage"* [ %44, %34 ], [ %32, %30 ]
  %37 = phi i16 [ %45, %34 ], [ %26, %30 ]
  %38 = trunc i16 %35 to i8
  %39 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %36, i64 0, i32 1
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %36, i64 0, i32 2
  %41 = load i8, i8* %40, align 1
  %42 = or i8 %41, 1
  store i8 %42, i8* %40, align 1
  %43 = add nuw nsw i16 %35, 1
  %44 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %36, i64 1
  %45 = add i16 %37, -1
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %47, label %34, !llvm.loop !14

47:                                               ; preds = %30, %34, %2
  ret void

48:                                               ; preds = %48, %28
  %49 = phi i16 [ 0, %28 ], [ %75, %48 ]
  %50 = phi %"struct.base::internal::PartitionPage"* [ %24, %28 ], [ %76, %48 ]
  %51 = phi i16 [ %29, %28 ], [ %77, %48 ]
  %52 = trunc i16 %49 to i8
  %53 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %50, i64 0, i32 1
  store i8 %52, i8* %53, align 1
  %54 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %50, i64 0, i32 2
  %55 = load i8, i8* %54, align 1
  %56 = or i8 %55, 1
  store i8 %56, i8* %54, align 1
  %57 = trunc i16 %49 to i8
  %58 = or i8 %57, 1
  %59 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %50, i64 1, i32 1
  store i8 %58, i8* %59, align 1
  %60 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %50, i64 1, i32 2
  %61 = load i8, i8* %60, align 1
  %62 = or i8 %61, 1
  store i8 %62, i8* %60, align 1
  %63 = trunc i16 %49 to i8
  %64 = or i8 %63, 2
  %65 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %50, i64 2, i32 1
  store i8 %64, i8* %65, align 1
  %66 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %50, i64 2, i32 2
  %67 = load i8, i8* %66, align 1
  %68 = or i8 %67, 1
  store i8 %68, i8* %66, align 1
  %69 = trunc i16 %49 to i8
  %70 = or i8 %69, 3
  %71 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %50, i64 3, i32 1
  store i8 %70, i8* %71, align 1
  %72 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %50, i64 3, i32 2
  %73 = load i8, i8* %72, align 1
  %74 = or i8 %73, 1
  store i8 %74, i8* %72, align 1
  %75 = add nuw nsw i16 %49, 4
  %76 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %50, i64 4
  %77 = add i16 %51, -4
  %78 = icmp eq i16 %77, 0
  br i1 %78, label %30, label %48
}

declare %"class.base::internal::AddressPoolManager"* @_ZN4base8internal18AddressPoolManager11GetInstanceEv() local_unnamed_addr #1

declare i8* @_ZN4base8internal18AddressPoolManager7ReserveEjPvm(%"class.base::internal::AddressPoolManager"*, i32, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base19RecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8*, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN4base8internal16SlotSpanMetadataILb1EEC1EPNS0_15PartitionBucketILb1EEE(%"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::PartitionBucket"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN4base8internal15PartitionBucketILb0EE4InitEj(%"struct.base::internal::PartitionBucket.6"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %0, i64 0, i32 3
  store i32 %1, i32* %3, align 8
  %4 = zext i32 %1 to i64
  %5 = udiv i64 4398046511103, %4
  %6 = add nuw nsw i64 %5, 1
  %7 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %0, i64 0, i32 5
  store i64 %6, i64* %7, align 8
  %8 = tail call %"struct.base::internal::SlotSpanMetadata.7"* @_ZN4base8internal16SlotSpanMetadataILb0EE22get_sentinel_slot_spanEv() #9
  %9 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %0, i64 0, i32 0
  store %"struct.base::internal::SlotSpanMetadata.7"* %8, %"struct.base::internal::SlotSpanMetadata.7"** %9, align 8
  %10 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %0, i64 0, i32 4
  %12 = bitcast %"struct.base::internal::SlotSpanMetadata.7"** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  %13 = load i32, i32* %11, align 4
  %14 = and i32 %13, 255
  store i32 %14, i32* %11, align 4
  %15 = load i32, i32* %3, align 8
  %16 = zext i32 %15 to i64
  %17 = icmp ugt i32 %15, 65536
  br i1 %17, label %18, label %26

18:                                               ; preds = %2
  %19 = lshr i32 %15, 12
  %20 = trunc i32 %19 to i16
  %21 = and i32 %15, 267386880
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %48, label %23, !prof !2

23:                                               ; preds = %18
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str, i64 0, i64 0)) #9
  br label %48

24:                                               ; preds = %26
  %25 = icmp ugt i16 %44, 16
  br i1 %25, label %47, label %48, !prof !3

26:                                               ; preds = %2, %26
  %27 = phi i64 [ %45, %26 ], [ 3, %2 ]
  %28 = phi i16 [ %44, %26 ], [ 0, %2 ]
  %29 = phi double [ %42, %26 ], [ 1.000000e+00, %2 ]
  %30 = shl nuw nsw i64 %27, 12
  %31 = urem i64 %30, %16
  %32 = and i64 %27, 3
  %33 = icmp eq i64 %32, 0
  %34 = shl nuw nsw i64 %32, 3
  %35 = sub nuw nsw i64 32, %34
  %36 = select i1 %33, i64 0, i64 %35
  %37 = add nuw nsw i64 %36, %31
  %38 = uitofp i64 %37 to double
  %39 = uitofp i64 %30 to double
  %40 = fdiv double %38, %39
  %41 = fcmp olt double %40, %29
  %42 = select i1 %41, double %40, double %29
  %43 = trunc i64 %27 to i16
  %44 = select i1 %41, i16 %43, i16 %28
  %45 = add nuw nsw i64 %27, 1
  %46 = icmp eq i64 %45, 17
  br i1 %46, label %24, label %26

47:                                               ; preds = %24
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([122 x i8], [122 x i8]* @.str.1, i64 0, i64 0)) #9
  br label %48

48:                                               ; preds = %18, %23, %24, %47
  %49 = phi i16 [ %20, %18 ], [ %20, %23 ], [ %44, %24 ], [ %44, %47 ]
  %50 = and i16 %49, 255
  %51 = zext i16 %50 to i32
  %52 = load i32, i32* %11, align 4
  %53 = and i32 %52, -256
  %54 = or i32 %53, %51
  store i32 %54, i32* %11, align 4
  ret void
}

declare %"struct.base::internal::SlotSpanMetadata.7"* @_ZN4base8internal16SlotSpanMetadataILb0EE22get_sentinel_slot_spanEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i8 @_ZN4base8internal15PartitionBucketILb0EE30get_system_pages_per_slot_spanEv(%"struct.base::internal::PartitionBucket.6"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = zext i32 %3 to i64
  %5 = icmp ugt i32 %3, 65536
  br i1 %5, label %6, label %14

6:                                                ; preds = %1
  %7 = lshr i32 %3, 12
  %8 = trunc i32 %7 to i16
  %9 = and i32 %3, 267386880
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %36, label %11, !prof !2

11:                                               ; preds = %6
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str, i64 0, i64 0)) #9
  br label %36

12:                                               ; preds = %14
  %13 = icmp ugt i16 %32, 16
  br i1 %13, label %35, label %36, !prof !3

14:                                               ; preds = %1, %14
  %15 = phi i64 [ %33, %14 ], [ 3, %1 ]
  %16 = phi i16 [ %32, %14 ], [ 0, %1 ]
  %17 = phi double [ %30, %14 ], [ 1.000000e+00, %1 ]
  %18 = shl nuw nsw i64 %15, 12
  %19 = urem i64 %18, %4
  %20 = and i64 %15, 3
  %21 = icmp eq i64 %20, 0
  %22 = shl nuw nsw i64 %20, 3
  %23 = sub nuw nsw i64 32, %22
  %24 = select i1 %21, i64 0, i64 %23
  %25 = add nuw nsw i64 %19, %24
  %26 = uitofp i64 %25 to double
  %27 = uitofp i64 %18 to double
  %28 = fdiv double %26, %27
  %29 = fcmp olt double %28, %17
  %30 = select i1 %29, double %28, double %17
  %31 = trunc i64 %15 to i16
  %32 = select i1 %29, i16 %31, i16 %16
  %33 = add nuw nsw i64 %15, 1
  %34 = icmp eq i64 %33, 17
  br i1 %34, label %12, label %14

35:                                               ; preds = %12
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([122 x i8], [122 x i8]* @.str.1, i64 0, i64 0)) #9
  br label %36

36:                                               ; preds = %35, %12, %11, %6
  %37 = phi i16 [ %8, %6 ], [ %8, %11 ], [ %32, %12 ], [ %32, %35 ]
  %38 = trunc i16 %37 to i8
  ret i8 %38
}

; Function Attrs: noinline nounwind ssp uwtable
define weak_odr hidden i8* @_ZN4base8internal15PartitionBucketILb0EE13SlowPathAllocEPNS_13PartitionRootILb0EEEimmPb(%"struct.base::internal::PartitionBucket.6"*, %"struct.base::PartitionRoot.8"*, i32, i64, i64, i8*) local_unnamed_addr #2 comdat align 2 {
  store i8 0, i8* %5, align 1
  %7 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 255
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %88, !prof !3

11:                                               ; preds = %6
  %12 = and i32 %2, 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %497

14:                                               ; preds = %11
  %15 = and i32 %2, 1
  %16 = icmp ne i32 %15, 0
  %17 = icmp ugt i64 %3, 2145386496
  br i1 %17, label %18, label %20, !prof !3

18:                                               ; preds = %14
  br i1 %16, label %85, label %19

19:                                               ; preds = %18
  tail call void @_ZN4base8internal32PartitionExcessiveAllocationSizeEm(i64 %3) #10
  unreachable

20:                                               ; preds = %14
  %21 = add nuw nsw i64 %3, 4095
  %22 = and i64 %21, -4096
  %23 = add nuw nsw i64 %3, 2117631
  %24 = and i64 %23, -2097152
  %25 = add nsw i64 %24, -20480
  %26 = load i32, i32* @_ZN4base8internal21PartitionAddressSpace13non_brp_pool_E, align 4
  %27 = tail call %"class.base::internal::AddressPoolManager"* @_ZN4base8internal18AddressPoolManager11GetInstanceEv() #9
  %28 = tail call i8* @_ZN4base8internal18AddressPoolManager7ReserveEjPvm(%"class.base::internal::AddressPoolManager"* %27, i32 %26, i8* null, i64 %24) #9
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %32, !prof !3

30:                                               ; preds = %20
  br i1 %16, label %85, label %31

31:                                               ; preds = %30
  tail call void @_ZN4base13PartitionRootILb0EE11OutOfMemoryEm(%"struct.base::PartitionRoot.8"* %1, i64 %3) #10
  unreachable

32:                                               ; preds = %20
  %33 = getelementptr inbounds %"struct.base::PartitionRoot.8", %"struct.base::PartitionRoot.8"* %1, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i64* %33, i64 %24 monotonic
  %35 = getelementptr inbounds i8, i8* %28, i64 16384
  %36 = getelementptr inbounds i8, i8* %28, i64 4096
  tail call void @_ZN4base19RecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8* %36, i64 4096, i32 2, i32 0) #9
  %37 = tail call zeroext i1 @_ZN4base22TryRecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8* %35, i64 %22, i32 2, i32 0) #9
  br i1 %37, label %42, label %38

38:                                               ; preds = %32
  br i1 %16, label %40, label %39

39:                                               ; preds = %38
  tail call void @_ZN4base13PartitionRootILb0EE11OutOfMemoryEm(%"struct.base::PartitionRoot.8"* %1, i64 %3) #10
  unreachable

40:                                               ; preds = %38
  %41 = tail call %"class.base::internal::AddressPoolManager"* @_ZN4base8internal18AddressPoolManager11GetInstanceEv() #9
  tail call void @_ZN4base8internal18AddressPoolManager20UnreserveAndDecommitEjPvm(%"class.base::internal::AddressPoolManager"* %41, i32 %26, i8* nonnull %28, i64 %24) #9
  br label %85

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"struct.base::PartitionRoot.8", %"struct.base::PartitionRoot.8"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i64* %43, i64 %22 monotonic
  %45 = ptrtoint i8* %28 to i64
  %46 = add i64 %45, 4096
  %47 = inttoptr i64 %46 to i8*
  %48 = inttoptr i64 %46 to %"struct.base::PartitionRoot.8"**
  store %"struct.base::PartitionRoot.8"* %1, %"struct.base::PartitionRoot.8"** %48, align 8
  %49 = getelementptr inbounds i8, i8* %47, i64 32
  %50 = getelementptr inbounds i8, i8* %47, i64 63
  %51 = load i8, i8* %50, align 1
  %52 = or i8 %51, 1
  store i8 %52, i8* %50, align 1
  %53 = getelementptr inbounds i8, i8* %47, i64 94
  store i8 1, i8* %53, align 2
  %54 = trunc i64 %22 to i32
  %55 = getelementptr inbounds i8, i8* %47, i64 96
  %56 = bitcast i8* %55 to %"struct.base::internal::PartitionBucket.6"*
  %57 = getelementptr inbounds i8, i8* %47, i64 120
  %58 = bitcast i8* %57 to i32*
  store i32 %54, i32* %58, align 8
  %59 = bitcast i8* %49 to %"struct.base::internal::SlotSpanMetadata.7"*
  tail call void @_ZN4base8internal16SlotSpanMetadataILb0EEC1EPNS0_15PartitionBucketILb0EEE(%"struct.base::internal::SlotSpanMetadata.7"* %59, %"struct.base::internal::PartitionBucket.6"* %56) #9
  %60 = bitcast i8* %35 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* null, %"struct.base::internal::EncodedPartitionFreelistEntry"** %60, align 8
  %61 = getelementptr inbounds i8, i8* %28, i64 16392
  %62 = bitcast i8* %61 to i64*
  store i64 -1, i64* %62, align 8
  %63 = bitcast i8* %49 to i8**
  store i8* %35, i8** %63, align 1
  %64 = getelementptr inbounds i8, i8* %47, i64 136
  %65 = getelementptr inbounds i8, i8* %47, i64 160
  %66 = bitcast i8* %65 to i64*
  store i64 %25, i64* %66, align 8
  %67 = getelementptr inbounds i8, i8* %47, i64 152
  %68 = bitcast i8* %67 to i8**
  store i8* %55, i8** %68, align 8
  %69 = getelementptr inbounds %"struct.base::PartitionRoot.8", %"struct.base::PartitionRoot.8"* %1, i64 0, i32 21
  %70 = load %"struct.base::internal::PartitionDirectMapExtent.11"*, %"struct.base::internal::PartitionDirectMapExtent.11"** %69, align 8
  %71 = bitcast i8* %64 to %"struct.base::internal::PartitionDirectMapExtent.11"**
  store %"struct.base::internal::PartitionDirectMapExtent.11"* %70, %"struct.base::internal::PartitionDirectMapExtent.11"** %71, align 8
  %72 = icmp eq %"struct.base::internal::PartitionDirectMapExtent.11"* %70, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %42
  %74 = getelementptr inbounds %"struct.base::internal::PartitionDirectMapExtent.11", %"struct.base::internal::PartitionDirectMapExtent.11"* %70, i64 0, i32 1
  %75 = bitcast %"struct.base::internal::PartitionDirectMapExtent.11"** %74 to i8**
  store i8* %64, i8** %75, align 8
  br label %76

76:                                               ; preds = %42, %73
  %77 = getelementptr inbounds i8, i8* %47, i64 144
  %78 = bitcast i8* %77 to %"struct.base::internal::PartitionDirectMapExtent.11"**
  store %"struct.base::internal::PartitionDirectMapExtent.11"* null, %"struct.base::internal::PartitionDirectMapExtent.11"** %78, align 8
  %79 = bitcast %"struct.base::internal::PartitionDirectMapExtent.11"** %69 to i8**
  store i8* %64, i8** %79, align 8
  %80 = icmp eq i8* %49, null
  br i1 %80, label %85, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds i8, i8* %47, i64 48
  %83 = bitcast i8* %82 to %"struct.base::internal::PartitionBucket.6"**
  %84 = load %"struct.base::internal::PartitionBucket.6"*, %"struct.base::internal::PartitionBucket.6"** %83, align 1
  br label %85

85:                                               ; preds = %40, %30, %18, %76, %81
  %86 = phi %"struct.base::internal::SlotSpanMetadata.7"* [ %59, %81 ], [ null, %76 ], [ null, %18 ], [ null, %30 ], [ null, %40 ]
  %87 = phi %"struct.base::internal::PartitionBucket.6"* [ %84, %81 ], [ %0, %76 ], [ %0, %18 ], [ %0, %30 ], [ %0, %40 ]
  store i8 1, i8* %5, align 1
  br label %397

88:                                               ; preds = %6
  %89 = icmp ugt i64 %4, 16384
  br i1 %89, label %160, label %90, !prof !3

90:                                               ; preds = %88
  %91 = tail call zeroext i1 @_ZN4base8internal15PartitionBucketILb0EE20SetNewActiveSlotSpanEv(%"struct.base::internal::PartitionBucket.6"* %0)
  br i1 %91, label %92, label %95, !prof !2

92:                                               ; preds = %90
  %93 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %0, i64 0, i32 0
  %94 = load %"struct.base::internal::SlotSpanMetadata.7"*, %"struct.base::internal::SlotSpanMetadata.7"** %93, align 8
  br label %397

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %0, i64 0, i32 1
  %97 = load %"struct.base::internal::SlotSpanMetadata.7"*, %"struct.base::internal::SlotSpanMetadata.7"** %96, align 8
  %98 = icmp eq %"struct.base::internal::SlotSpanMetadata.7"* %97, null
  br i1 %98, label %99, label %106

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %0, i64 0, i32 2
  %101 = load %"struct.base::internal::SlotSpanMetadata.7"*, %"struct.base::internal::SlotSpanMetadata.7"** %100, align 8
  %102 = icmp eq %"struct.base::internal::SlotSpanMetadata.7"* %101, null
  br i1 %102, label %160, label %103, !prof !3

103:                                              ; preds = %116, %99
  %104 = phi %"struct.base::internal::SlotSpanMetadata.7"* [ null, %99 ], [ %120, %116 ]
  %105 = icmp eq %"struct.base::internal::SlotSpanMetadata.7"* %104, null
  br i1 %105, label %121, label %106, !prof !3

106:                                              ; preds = %95, %103
  %107 = phi %"struct.base::internal::SlotSpanMetadata.7"* [ %104, %103 ], [ %97, %95 ]
  %108 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.7", %"struct.base::internal::SlotSpanMetadata.7"* %107, i64 0, i32 1
  %109 = bitcast %"struct.base::internal::SlotSpanMetadata.7"** %108 to i64*
  %110 = load i64, i64* %109, align 1
  %111 = bitcast %"struct.base::internal::SlotSpanMetadata.7"** %96 to i64*
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.7", %"struct.base::internal::SlotSpanMetadata.7"* %107, i64 0, i32 0
  %113 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %112, align 1
  %114 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %113, null
  br i1 %114, label %116, label %115

115:                                              ; preds = %106
  store %"struct.base::internal::SlotSpanMetadata.7"* null, %"struct.base::internal::SlotSpanMetadata.7"** %108, align 1
  br label %405

116:                                              ; preds = %106
  %117 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %0, i64 0, i32 2
  %118 = bitcast %"struct.base::internal::SlotSpanMetadata.7"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  store i64 %119, i64* %109, align 1
  store %"struct.base::internal::SlotSpanMetadata.7"* %107, %"struct.base::internal::SlotSpanMetadata.7"** %117, align 8
  %120 = load %"struct.base::internal::SlotSpanMetadata.7"*, %"struct.base::internal::SlotSpanMetadata.7"** %96, align 8
  br label %103

121:                                              ; preds = %103
  %122 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %0, i64 0, i32 2
  %123 = load %"struct.base::internal::SlotSpanMetadata.7"*, %"struct.base::internal::SlotSpanMetadata.7"** %122, align 8
  %124 = icmp eq %"struct.base::internal::SlotSpanMetadata.7"* %123, null
  br i1 %124, label %401, label %125, !prof !3

125:                                              ; preds = %121
  %126 = and i32 %2, 8
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %497

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.7", %"struct.base::internal::SlotSpanMetadata.7"* %123, i64 0, i32 1
  %130 = bitcast %"struct.base::internal::SlotSpanMetadata.7"** %129 to i64*
  %131 = load i64, i64* %130, align 1
  %132 = bitcast %"struct.base::internal::SlotSpanMetadata.7"** %122 to i64*
  store i64 %131, i64* %132, align 8
  %133 = ptrtoint %"struct.base::internal::SlotSpanMetadata.7"* %123 to i64
  %134 = and i64 %133, 2097151
  %135 = add nuw nsw i64 %134, 36028797018959872
  %136 = lshr i64 %135, 5
  %137 = and i64 %133, -2097152
  %138 = shl i64 %136, 14
  %139 = add i64 %138, %137
  %140 = inttoptr i64 %139 to i8*
  %141 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.7", %"struct.base::internal::SlotSpanMetadata.7"* %123, i64 0, i32 2
  %142 = load %"struct.base::internal::PartitionBucket.6"*, %"struct.base::internal::PartitionBucket.6"** %141, align 1
  %143 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %142, i64 0, i32 4
  %144 = load i32, i32* %143, align 4
  %145 = shl i32 %144, 12
  %146 = and i32 %145, 1044480
  %147 = zext i32 %146 to i64
  tail call void @_ZN4base19RecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8* %140, i64 %147, i32 2, i32 1) #9
  %148 = getelementptr inbounds %"struct.base::PartitionRoot.8", %"struct.base::PartitionRoot.8"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = atomicrmw add i64* %148, i64 %147 monotonic
  %150 = load %"struct.base::internal::PartitionBucket.6"*, %"struct.base::internal::PartitionBucket.6"** %141, align 1
  %151 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %150, i64 0, i32 4
  %152 = load i32, i32* %151, align 4
  %153 = shl i32 %152, 12
  %154 = and i32 %153, 1044480
  %155 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %150, i64 0, i32 3
  %156 = load i32, i32* %155, align 8
  %157 = udiv i32 %154, %156
  %158 = trunc i32 %157 to i16
  %159 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.7", %"struct.base::internal::SlotSpanMetadata.7"* %123, i64 0, i32 4
  store i16 %158, i16* %159, align 1
  store %"struct.base::internal::SlotSpanMetadata.7"* null, %"struct.base::internal::SlotSpanMetadata.7"** %129, align 1
  store i8 1, i8* %5, align 1
  br label %405

160:                                              ; preds = %99, %88
  %161 = and i32 %2, 8
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %497

163:                                              ; preds = %160
  %164 = load i32, i32* %7, align 4
  %165 = and i32 %164, 255
  %166 = add nuw nsw i32 %165, 3
  %167 = lshr i32 %166, 2
  %168 = shl nuw nsw i32 %167, 14
  %169 = zext i32 %168 to i64
  %170 = shl i32 %164, 12
  %171 = and i32 %170, 1044480
  %172 = zext i32 %171 to i64
  %173 = getelementptr inbounds %"struct.base::PartitionRoot.8", %"struct.base::PartitionRoot.8"* %1, i64 0, i32 17
  %174 = bitcast i8** %173 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = add i64 %4, -1
  %177 = add i64 %175, %176
  %178 = sub i64 0, %4
  %179 = and i64 %177, %178
  %180 = inttoptr i64 %179 to i8*
  %181 = getelementptr inbounds i8, i8* %180, i64 %169
  %182 = getelementptr inbounds %"struct.base::PartitionRoot.8", %"struct.base::PartitionRoot.8"* %1, i64 0, i32 18
  %183 = load i8*, i8** %182, align 8
  %184 = icmp ugt i8* %181, %183
  br i1 %184, label %185, label %244, !prof !3

185:                                              ; preds = %163
  %186 = getelementptr inbounds %"struct.base::PartitionRoot.8", %"struct.base::PartitionRoot.8"* %1, i64 0, i32 16
  %187 = load i8*, i8** %186, align 8
  %188 = tail call %"class.base::internal::AddressPoolManager"* @_ZN4base8internal18AddressPoolManager11GetInstanceEv() #9
  %189 = load i32, i32* @_ZN4base8internal21PartitionAddressSpace9brp_pool_E, align 4
  %190 = tail call i8* @_ZN4base8internal18AddressPoolManager7ReserveEjPvm(%"class.base::internal::AddressPoolManager"* %188, i32 %189, i8* %187, i64 2097152) #9
  %191 = icmp eq i8* %190, null
  br i1 %191, label %395, label %192, !prof !3

192:                                              ; preds = %185
  %193 = getelementptr inbounds %"struct.base::PartitionRoot.8", %"struct.base::PartitionRoot.8"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = atomicrmw add i64* %193, i64 2097152 monotonic
  %195 = getelementptr inbounds i8, i8* %190, i64 2097152
  store i8* %195, i8** %186, align 8
  %196 = getelementptr inbounds i8, i8* %190, i64 16384
  %197 = getelementptr inbounds %"struct.base::PartitionRoot.8", %"struct.base::PartitionRoot.8"* %1, i64 0, i32 0
  %198 = load i8, i8* %197, align 8
  %199 = icmp eq i8 %198, 0
  %200 = select i1 %199, i64 0, i64 32768
  %201 = getelementptr inbounds i8, i8* %196, i64 %200
  store i8* %201, i8** %173, align 8
  %202 = getelementptr inbounds i8, i8* %190, i64 2080768
  store i8* %202, i8** %182, align 8
  %203 = getelementptr inbounds i8, i8* %190, i64 4096
  tail call void @_ZN4base19RecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8* %203, i64 4096, i32 2, i32 0) #9
  %204 = load i8, i8* %197, align 8
  %205 = icmp eq i8 %204, 2
  br i1 %205, label %206, label %207

206:                                              ; preds = %192
  tail call void @_ZN4base19RecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8* %196, i64 %200, i32 2, i32 0) #9
  br label %207

207:                                              ; preds = %206, %192
  %208 = icmp eq i8* %187, null
  %209 = icmp eq i8* %187, %190
  %210 = or i1 %208, %209
  br i1 %210, label %212, label %211

211:                                              ; preds = %207
  store i8* null, i8** %186, align 8
  br label %212

212:                                              ; preds = %211, %207
  %213 = ptrtoint i8* %190 to i64
  %214 = add i64 %213, 4096
  %215 = inttoptr i64 %214 to i8*
  %216 = inttoptr i64 %214 to %"struct.base::PartitionRoot.8"**
  store %"struct.base::PartitionRoot.8"* %1, %"struct.base::PartitionRoot.8"** %216, align 8
  %217 = getelementptr inbounds i8, i8* %215, i64 8
  %218 = getelementptr inbounds %"struct.base::PartitionRoot.8", %"struct.base::PartitionRoot.8"* %1, i64 0, i32 19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %217, i8 0, i64 24, i1 false) #9
  %219 = load %"struct.base::internal::PartitionSuperPageExtentEntry.10"*, %"struct.base::internal::PartitionSuperPageExtentEntry.10"** %218, align 8
  br i1 %209, label %230, label %220, !prof !2

220:                                              ; preds = %212
  %221 = getelementptr inbounds i8, i8* %215, i64 16
  %222 = bitcast i8* %221 to i8**
  %223 = bitcast i8* %217 to i8**
  %224 = icmp eq %"struct.base::internal::PartitionSuperPageExtentEntry.10"* %219, null
  %225 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry.10", %"struct.base::internal::PartitionSuperPageExtentEntry.10"* %219, i64 0, i32 3
  %226 = getelementptr inbounds %"struct.base::PartitionRoot.8", %"struct.base::PartitionRoot.8"* %1, i64 0, i32 20
  %227 = select i1 %224, %"struct.base::internal::PartitionSuperPageExtentEntry.10"** %226, %"struct.base::internal::PartitionSuperPageExtentEntry.10"** %225, !prof !3
  %228 = bitcast %"struct.base::internal::PartitionSuperPageExtentEntry.10"** %227 to i8**
  store i8* %215, i8** %228, align 8
  %229 = bitcast %"struct.base::internal::PartitionSuperPageExtentEntry.10"** %218 to i8**
  store i8* %215, i8** %229, align 8
  store i8* %190, i8** %223, align 8
  store i8* %195, i8** %222, align 8
  br label %234

230:                                              ; preds = %212
  %231 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry.10", %"struct.base::internal::PartitionSuperPageExtentEntry.10"* %219, i64 0, i32 2
  %232 = load i8*, i8** %231, align 8
  %233 = getelementptr inbounds i8, i8* %232, i64 2097152
  store i8* %233, i8** %231, align 8
  br label %234

234:                                              ; preds = %230, %220
  %235 = load i64, i64* %174, align 8
  %236 = add i64 %235, %176
  %237 = and i64 %236, %178
  %238 = inttoptr i64 %237 to i8*
  %239 = getelementptr inbounds i8, i8* %238, i64 %169
  %240 = load i8*, i8** %182, align 8
  %241 = icmp ugt i8* %239, %240
  br i1 %241, label %242, label %244, !prof !3

242:                                              ; preds = %234
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([168 x i8], [168 x i8]* @.str.2, i64 0, i64 0)) #9
  %243 = load i64, i64* %174, align 8
  br label %244

244:                                              ; preds = %242, %234, %163
  %245 = phi i64 [ %243, %242 ], [ %235, %234 ], [ %175, %163 ]
  %246 = phi i8* [ %238, %242 ], [ %238, %234 ], [ %180, %163 ]
  %247 = and i64 %245, -2097152
  %248 = or i64 %247, 4096
  %249 = inttoptr i64 %248 to i8*
  %250 = lshr i64 %245, 9
  %251 = and i64 %250, 4064
  %252 = getelementptr inbounds i8, i8* %249, i64 %251
  %253 = ptrtoint i8* %246 to i64
  %254 = and i64 %253, -2097152
  %255 = or i64 %254, 4096
  %256 = inttoptr i64 %255 to i8*
  %257 = lshr i64 %253, 9
  %258 = and i64 %257, 4064
  %259 = getelementptr inbounds i8, i8* %256, i64 %258
  %260 = bitcast i8* %259 to %"struct.base::internal::PartitionPage.14"*
  %261 = icmp ult i8* %252, %259
  br i1 %261, label %262, label %285

262:                                              ; preds = %244
  %263 = bitcast i8* %252 to %"struct.base::internal::PartitionPage.14"*
  %264 = xor i64 %247, -4097
  %265 = add nuw nsw i64 %258, %264
  %266 = sub nuw nsw i64 %265, %251
  %267 = getelementptr i8, i8* %256, i64 %266
  %268 = ptrtoint i8* %267 to i64
  %269 = lshr i64 %268, 5
  %270 = add nuw nsw i64 %269, 1
  %271 = and i64 %270, 7
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %282, label %273

273:                                              ; preds = %262, %273
  %274 = phi %"struct.base::internal::PartitionPage.14"* [ %279, %273 ], [ %263, %262 ]
  %275 = phi i64 [ %280, %273 ], [ %271, %262 ]
  %276 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %274, i64 0, i32 2
  %277 = load i8, i8* %276, align 1
  %278 = or i8 %277, 2
  store i8 %278, i8* %276, align 1
  %279 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %274, i64 1
  %280 = add i64 %275, -1
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %282, label %273, !llvm.loop !15

282:                                              ; preds = %273, %262
  %283 = phi %"struct.base::internal::PartitionPage.14"* [ %263, %262 ], [ %279, %273 ]
  %284 = icmp ult i8* %267, inttoptr (i64 224 to i8*)
  br i1 %284, label %285, label %367

285:                                              ; preds = %282, %367, %244
  %286 = getelementptr inbounds i8, i8* %246, i64 %169
  store i8* %286, i8** %173, align 8
  %287 = bitcast i8* %259 to %"struct.base::internal::SlotSpanMetadata.7"*
  tail call void @_ZN4base8internal16SlotSpanMetadataILb0EEC1EPNS0_15PartitionBucketILb0EEE(%"struct.base::internal::SlotSpanMetadata.7"* %287, %"struct.base::internal::PartitionBucket.6"* %0) #9
  %288 = getelementptr inbounds i8, i8* %259, i64 28
  store i8 -1, i8* %288, align 4
  %289 = getelementptr inbounds i8, i8* %259, i64 16
  %290 = bitcast i8* %289 to %"struct.base::internal::PartitionBucket.6"**
  %291 = load %"struct.base::internal::PartitionBucket.6"*, %"struct.base::internal::PartitionBucket.6"** %290, align 16
  %292 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %291, i64 0, i32 4
  %293 = load i32, i32* %292, align 4
  %294 = shl i32 %293, 12
  %295 = and i32 %294, 1044480
  %296 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %291, i64 0, i32 3
  %297 = load i32, i32* %296, align 8
  %298 = udiv i32 %295, %297
  %299 = trunc i32 %298 to i16
  %300 = getelementptr inbounds i8, i8* %259, i64 26
  %301 = bitcast i8* %300 to i16*
  store i16 %299, i16* %301, align 2
  %302 = getelementptr inbounds i8, i8* %259, i64 8
  %303 = bitcast i8* %302 to %"struct.base::internal::SlotSpanMetadata.7"**
  store %"struct.base::internal::SlotSpanMetadata.7"* null, %"struct.base::internal::SlotSpanMetadata.7"** %303, align 8
  %304 = load i32, i32* %7, align 4
  %305 = trunc i32 %304 to i16
  %306 = and i16 %305, 255
  %307 = add nuw nsw i16 %306, 3
  %308 = lshr i16 %307, 2
  %309 = icmp eq i16 %308, 0
  br i1 %309, label %364, label %310

310:                                              ; preds = %285
  %311 = add nsw i16 %308, -1
  %312 = and i16 %308, 3
  %313 = icmp ult i16 %311, 3
  br i1 %313, label %347, label %314

314:                                              ; preds = %310
  %315 = sub nsw i16 %308, %312
  br label %316

316:                                              ; preds = %316, %314
  %317 = phi i16 [ 0, %314 ], [ %343, %316 ]
  %318 = phi %"struct.base::internal::PartitionPage.14"* [ %260, %314 ], [ %344, %316 ]
  %319 = phi i16 [ %315, %314 ], [ %345, %316 ]
  %320 = trunc i16 %317 to i8
  %321 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %318, i64 0, i32 1
  store i8 %320, i8* %321, align 1
  %322 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %318, i64 0, i32 2
  %323 = load i8, i8* %322, align 1
  %324 = or i8 %323, 1
  store i8 %324, i8* %322, align 1
  %325 = trunc i16 %317 to i8
  %326 = or i8 %325, 1
  %327 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %318, i64 1, i32 1
  store i8 %326, i8* %327, align 1
  %328 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %318, i64 1, i32 2
  %329 = load i8, i8* %328, align 1
  %330 = or i8 %329, 1
  store i8 %330, i8* %328, align 1
  %331 = trunc i16 %317 to i8
  %332 = or i8 %331, 2
  %333 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %318, i64 2, i32 1
  store i8 %332, i8* %333, align 1
  %334 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %318, i64 2, i32 2
  %335 = load i8, i8* %334, align 1
  %336 = or i8 %335, 1
  store i8 %336, i8* %334, align 1
  %337 = trunc i16 %317 to i8
  %338 = or i8 %337, 3
  %339 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %318, i64 3, i32 1
  store i8 %338, i8* %339, align 1
  %340 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %318, i64 3, i32 2
  %341 = load i8, i8* %340, align 1
  %342 = or i8 %341, 1
  store i8 %342, i8* %340, align 1
  %343 = add nuw nsw i16 %317, 4
  %344 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %318, i64 4
  %345 = add i16 %319, -4
  %346 = icmp eq i16 %345, 0
  br i1 %346, label %347, label %316

347:                                              ; preds = %316, %310
  %348 = phi i16 [ 0, %310 ], [ %343, %316 ]
  %349 = phi %"struct.base::internal::PartitionPage.14"* [ %260, %310 ], [ %344, %316 ]
  %350 = icmp eq i16 %312, 0
  br i1 %350, label %364, label %351

351:                                              ; preds = %347, %351
  %352 = phi i16 [ %360, %351 ], [ %348, %347 ]
  %353 = phi %"struct.base::internal::PartitionPage.14"* [ %361, %351 ], [ %349, %347 ]
  %354 = phi i16 [ %362, %351 ], [ %312, %347 ]
  %355 = trunc i16 %352 to i8
  %356 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %353, i64 0, i32 1
  store i8 %355, i8* %356, align 1
  %357 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %353, i64 0, i32 2
  %358 = load i8, i8* %357, align 1
  %359 = or i8 %358, 1
  store i8 %359, i8* %357, align 1
  %360 = add nuw nsw i16 %352, 1
  %361 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %353, i64 1
  %362 = add i16 %354, -1
  %363 = icmp eq i16 %362, 0
  br i1 %363, label %364, label %351, !llvm.loop !16

364:                                              ; preds = %347, %351, %285
  tail call void @_ZN4base19RecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8* %246, i64 %172, i32 2, i32 0) #9
  %365 = getelementptr inbounds %"struct.base::PartitionRoot.8", %"struct.base::PartitionRoot.8"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  %366 = atomicrmw add i64* %365, i64 %172 monotonic
  br label %395

367:                                              ; preds = %282, %367
  %368 = phi %"struct.base::internal::PartitionPage.14"* [ %393, %367 ], [ %283, %282 ]
  %369 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %368, i64 0, i32 2
  %370 = load i8, i8* %369, align 1
  %371 = or i8 %370, 2
  store i8 %371, i8* %369, align 1
  %372 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %368, i64 1, i32 2
  %373 = load i8, i8* %372, align 1
  %374 = or i8 %373, 2
  store i8 %374, i8* %372, align 1
  %375 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %368, i64 2, i32 2
  %376 = load i8, i8* %375, align 1
  %377 = or i8 %376, 2
  store i8 %377, i8* %375, align 1
  %378 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %368, i64 3, i32 2
  %379 = load i8, i8* %378, align 1
  %380 = or i8 %379, 2
  store i8 %380, i8* %378, align 1
  %381 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %368, i64 4, i32 2
  %382 = load i8, i8* %381, align 1
  %383 = or i8 %382, 2
  store i8 %383, i8* %381, align 1
  %384 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %368, i64 5, i32 2
  %385 = load i8, i8* %384, align 1
  %386 = or i8 %385, 2
  store i8 %386, i8* %384, align 1
  %387 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %368, i64 6, i32 2
  %388 = load i8, i8* %387, align 1
  %389 = or i8 %388, 2
  store i8 %389, i8* %387, align 1
  %390 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %368, i64 7, i32 2
  %391 = load i8, i8* %390, align 1
  %392 = or i8 %391, 2
  store i8 %392, i8* %390, align 1
  %393 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %368, i64 8
  %394 = icmp ult %"struct.base::internal::PartitionPage.14"* %393, %260
  br i1 %394, label %367, label %285

395:                                              ; preds = %185, %364
  %396 = phi %"struct.base::internal::SlotSpanMetadata.7"* [ %287, %364 ], [ null, %185 ]
  store i8 1, i8* %5, align 1
  br label %397

397:                                              ; preds = %92, %395, %85
  %398 = phi %"struct.base::internal::PartitionBucket.6"* [ %87, %85 ], [ %0, %92 ], [ %0, %395 ]
  %399 = phi %"struct.base::internal::SlotSpanMetadata.7"* [ %86, %85 ], [ %94, %92 ], [ %396, %395 ]
  %400 = icmp eq %"struct.base::internal::SlotSpanMetadata.7"* %399, null
  br i1 %400, label %401, label %405, !prof !3

401:                                              ; preds = %121, %397
  %402 = and i32 %2, 1
  %403 = icmp eq i32 %402, 0
  br i1 %403, label %404, label %497

404:                                              ; preds = %401
  tail call void @_ZN4base13PartitionRootILb0EE11OutOfMemoryEm(%"struct.base::PartitionRoot.8"* %1, i64 %3) #10
  unreachable

405:                                              ; preds = %115, %128, %397
  %406 = phi %"struct.base::internal::SlotSpanMetadata.7"* [ %399, %397 ], [ %107, %115 ], [ %123, %128 ]
  %407 = phi %"struct.base::internal::PartitionBucket.6"* [ %398, %397 ], [ %0, %115 ], [ %0, %128 ]
  %408 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %407, i64 0, i32 0
  store %"struct.base::internal::SlotSpanMetadata.7"* %406, %"struct.base::internal::SlotSpanMetadata.7"** %408, align 8
  %409 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.7", %"struct.base::internal::SlotSpanMetadata.7"* %406, i64 0, i32 6
  %410 = load i8, i8* %409, align 1, !range !9
  %411 = icmp eq i8 %410, 0
  br i1 %411, label %415, label %412

412:                                              ; preds = %405
  %413 = bitcast %"struct.base::internal::SlotSpanMetadata.7"* %406 to %"struct.base::internal::PartitionPage.14"*
  %414 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %413, i64 1, i32 0, i32 0, i32 0
  store i64 %3, i64* %414, align 1
  br label %415

415:                                              ; preds = %405, %412
  %416 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.7", %"struct.base::internal::SlotSpanMetadata.7"* %406, i64 0, i32 0
  %417 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %416, align 1
  %418 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %417, null
  br i1 %418, label %442, label %419, !prof !3

419:                                              ; preds = %415
  %420 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %417, i64 0, i32 0
  %421 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %420, align 8
  %422 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %421, null
  %423 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %421 to i64
  br i1 %422, label %424, label %426

424:                                              ; preds = %419
  %425 = tail call i64 @llvm.bswap.i64(i64 %423) #9
  br label %435

426:                                              ; preds = %419
  %427 = xor i64 %423, -1
  %428 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %417, i64 0, i32 1
  %429 = load i64, i64* %428, align 8
  %430 = icmp eq i64 %429, %427
  br i1 %430, label %432, label %431, !prof !2

431:                                              ; preds = %426
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #10
  unreachable

432:                                              ; preds = %426
  %433 = tail call i64 @llvm.bswap.i64(i64 %423) #9
  %434 = inttoptr i64 %433 to i8*
  tail call void @llvm.prefetch(i8* nonnull %434, i32 0, i32 3, i32 1) #9
  br label %435

435:                                              ; preds = %424, %432
  %436 = phi i64 [ %425, %424 ], [ %433, %432 ]
  %437 = inttoptr i64 %436 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %437, %"class.base::internal::PartitionFreelistEntry"** %416, align 1
  %438 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.7", %"struct.base::internal::SlotSpanMetadata.7"* %406, i64 0, i32 3
  %439 = load i16, i16* %438, align 1
  %440 = add i16 %439, 1
  store i16 %440, i16* %438, align 1
  %441 = bitcast %"class.base::internal::PartitionFreelistEntry"* %417 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %441, i8 0, i64 16, i1 false) #9
  br label %497

442:                                              ; preds = %415
  %443 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.7", %"struct.base::internal::SlotSpanMetadata.7"* %406, i64 0, i32 4
  %444 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %0, i64 0, i32 3
  %445 = load i32, i32* %444, align 8
  %446 = zext i32 %445 to i64
  %447 = ptrtoint %"struct.base::internal::SlotSpanMetadata.7"* %406 to i64
  %448 = and i64 %447, 2097151
  %449 = add nuw nsw i64 %448, 36028797018959872
  %450 = lshr i64 %449, 5
  %451 = and i64 %447, -2097152
  %452 = shl i64 %450, 14
  %453 = add i64 %452, %451
  %454 = inttoptr i64 %453 to i8*
  %455 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.7", %"struct.base::internal::SlotSpanMetadata.7"* %406, i64 0, i32 3
  %456 = load i16, i16* %455, align 1
  %457 = sext i16 %456 to i64
  %458 = mul nsw i64 %457, %446
  %459 = getelementptr inbounds i8, i8* %454, i64 %458
  %460 = getelementptr inbounds i8, i8* %459, i64 %446
  %461 = ptrtoint i8* %459 to i64
  %462 = ptrtoint i8* %460 to i64
  %463 = add i64 %462, 4095
  %464 = and i64 %463, -4096
  %465 = inttoptr i64 %464 to i8*
  %466 = add i16 %456, 1
  store i16 %466, i16* %455, align 1
  %467 = sub i64 %464, %461
  %468 = udiv i64 %467, %446
  %469 = trunc i64 %468 to i16
  %470 = load i16, i16* %443, align 1
  %471 = sub i16 %470, %469
  store i16 %471, i16* %443, align 1
  %472 = getelementptr inbounds i8, i8* %460, i64 %446
  %473 = icmp ugt i8* %472, %465
  br i1 %473, label %497, label %474

474:                                              ; preds = %442
  %475 = bitcast %"struct.base::internal::SlotSpanMetadata.7"* %406 to i8**
  br label %476

476:                                              ; preds = %494, %474
  %477 = phi i8* [ %472, %474 ], [ %495, %494 ]
  %478 = phi %"class.base::internal::PartitionFreelistEntry"* [ null, %474 ], [ %480, %494 ]
  %479 = phi i8* [ %460, %474 ], [ %477, %494 ]
  %480 = bitcast i8* %479 to %"class.base::internal::PartitionFreelistEntry"*
  %481 = bitcast i8* %479 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* null, %"struct.base::internal::EncodedPartitionFreelistEntry"** %481, align 8
  %482 = getelementptr inbounds i8, i8* %479, i64 8
  %483 = bitcast i8* %482 to i64*
  store i64 -1, i64* %483, align 8
  %484 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %416, align 1
  %485 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %484, null
  br i1 %485, label %486, label %487

486:                                              ; preds = %476
  store i8* %479, i8** %475, align 1
  br label %494

487:                                              ; preds = %476
  %488 = ptrtoint i8* %479 to i64
  %489 = tail call i64 @llvm.bswap.i64(i64 %488) #9
  %490 = inttoptr i64 %489 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %491 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %478, i64 0, i32 0
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %490, %"struct.base::internal::EncodedPartitionFreelistEntry"** %491, align 8
  %492 = xor i64 %489, -1
  %493 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %478, i64 0, i32 1
  store i64 %492, i64* %493, align 8
  br label %494

494:                                              ; preds = %487, %486
  %495 = getelementptr inbounds i8, i8* %477, i64 %446
  %496 = icmp ugt i8* %495, %465
  br i1 %496, label %497, label %476

497:                                              ; preds = %494, %442, %401, %160, %125, %11, %435
  %498 = phi i8* [ %441, %435 ], [ null, %11 ], [ null, %125 ], [ null, %160 ], [ null, %401 ], [ %459, %442 ], [ %459, %494 ]
  ret i8* %498
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK4base8internal15PartitionBucketILb0EE16is_direct_mappedEv(%"struct.base::internal::PartitionBucket.6"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = and i32 %3, 255
  %5 = icmp eq i32 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN4base8internal15PartitionBucketILb0EE20SetNewActiveSlotSpanEv(%"struct.base::internal::PartitionBucket.6"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %0, i64 0, i32 0
  %3 = load %"struct.base::internal::SlotSpanMetadata.7"*, %"struct.base::internal::SlotSpanMetadata.7"** %2, align 8
  %4 = tail call %"struct.base::internal::SlotSpanMetadata.7"* @_ZN4base8internal16SlotSpanMetadataILb0EE22get_sentinel_slot_spanEv() #9
  %5 = icmp eq %"struct.base::internal::SlotSpanMetadata.7"* %3, %4
  br i1 %5, label %60, label %6

6:                                                ; preds = %1
  %7 = icmp eq %"struct.base::internal::SlotSpanMetadata.7"* %3, null
  br i1 %7, label %55, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %0, i64 0, i32 1
  %10 = bitcast %"struct.base::internal::SlotSpanMetadata.7"** %9 to i64*
  %11 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %0, i64 0, i32 2
  %12 = bitcast %"struct.base::internal::SlotSpanMetadata.7"** %11 to i64*
  %13 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %0, i64 0, i32 4
  br label %14

14:                                               ; preds = %8, %53
  %15 = phi %"struct.base::internal::SlotSpanMetadata.7"* [ %3, %8 ], [ %17, %53 ]
  %16 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.7", %"struct.base::internal::SlotSpanMetadata.7"* %15, i64 0, i32 1
  %17 = load %"struct.base::internal::SlotSpanMetadata.7"*, %"struct.base::internal::SlotSpanMetadata.7"** %16, align 1
  %18 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.7", %"struct.base::internal::SlotSpanMetadata.7"* %15, i64 0, i32 3
  %19 = load i16, i16* %18, align 1
  %20 = icmp sgt i16 %19, 0
  br i1 %20, label %21, label %29, !prof !4

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.7", %"struct.base::internal::SlotSpanMetadata.7"* %15, i64 0, i32 0
  %23 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %22, align 1
  %24 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %23, null
  br i1 %24, label %25, label %57

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.7", %"struct.base::internal::SlotSpanMetadata.7"* %15, i64 0, i32 4
  %27 = load i16, i16* %26, align 1
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %41, label %57, !prof !3

29:                                               ; preds = %14
  %30 = icmp eq i16 %19, 0
  br i1 %30, label %31, label %41, !prof !4

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.7", %"struct.base::internal::SlotSpanMetadata.7"* %15, i64 0, i32 0
  %33 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %32, align 1
  %34 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %33, null
  br i1 %34, label %38, label %35, !prof !3

35:                                               ; preds = %31
  %36 = load i64, i64* %10, align 8
  %37 = bitcast %"struct.base::internal::SlotSpanMetadata.7"** %16 to i64*
  store i64 %36, i64* %37, align 1
  store %"struct.base::internal::SlotSpanMetadata.7"* %15, %"struct.base::internal::SlotSpanMetadata.7"** %9, align 8
  br label %53

38:                                               ; preds = %31
  %39 = load i64, i64* %12, align 8
  %40 = bitcast %"struct.base::internal::SlotSpanMetadata.7"** %16 to i64*
  store i64 %39, i64* %40, align 1
  store %"struct.base::internal::SlotSpanMetadata.7"* %15, %"struct.base::internal::SlotSpanMetadata.7"** %11, align 8
  br label %53

41:                                               ; preds = %25, %29
  %42 = sub i16 0, %19
  store i16 %42, i16* %18, align 1
  %43 = load i32, i32* %13, align 4
  %44 = lshr i32 %43, 8
  %45 = add nuw nsw i32 %44, 1
  %46 = shl i32 %45, 8
  %47 = and i32 %43, 255
  %48 = or i32 %46, %47
  store i32 %48, i32* %13, align 4
  %49 = and i32 %45, 16777215
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52, !prof !3

51:                                               ; preds = %41
  tail call void @_ZN4base8internal15PartitionBucketILb0EE6OnFullEv()
  br label %52

52:                                               ; preds = %51, %41
  store %"struct.base::internal::SlotSpanMetadata.7"* null, %"struct.base::internal::SlotSpanMetadata.7"** %16, align 1
  br label %53

53:                                               ; preds = %35, %52, %38
  %54 = icmp eq %"struct.base::internal::SlotSpanMetadata.7"* %17, null
  br i1 %54, label %55, label %14

55:                                               ; preds = %53, %6
  %56 = tail call %"struct.base::internal::SlotSpanMetadata.7"* @_ZN4base8internal16SlotSpanMetadataILb0EE22get_sentinel_slot_spanEv() #9
  br label %57

57:                                               ; preds = %25, %21, %55
  %58 = phi %"struct.base::internal::SlotSpanMetadata.7"* [ %56, %55 ], [ %15, %21 ], [ %15, %25 ]
  %59 = phi i1 [ false, %55 ], [ true, %21 ], [ true, %25 ]
  store %"struct.base::internal::SlotSpanMetadata.7"* %58, %"struct.base::internal::SlotSpanMetadata.7"** %2, align 8
  br label %60

60:                                               ; preds = %1, %57
  %61 = phi i1 [ %59, %57 ], [ false, %1 ]
  ret i1 %61
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i64 @_ZNK4base8internal15PartitionBucketILb0EE18get_bytes_per_spanEv(%"struct.base::internal::PartitionBucket.6"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = shl i32 %3, 12
  %5 = and i32 %4, 1044480
  %6 = zext i32 %5 to i64
  ret i64 %6
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden %"struct.base::internal::SlotSpanMetadata.7"* @_ZN4base8internal15PartitionBucketILb0EE16AllocNewSlotSpanEPNS_13PartitionRootILb0EEEim(%"struct.base::internal::PartitionBucket.6"*, %"struct.base::PartitionRoot.8"*, i32, i64) local_unnamed_addr #3 comdat align 2 {
  %5 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 255
  %8 = add nuw nsw i32 %7, 3
  %9 = lshr i32 %8, 2
  %10 = shl nuw nsw i32 %9, 14
  %11 = zext i32 %10 to i64
  %12 = shl i32 %6, 12
  %13 = and i32 %12, 1044480
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.base::PartitionRoot.8", %"struct.base::PartitionRoot.8"* %1, i64 0, i32 17
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %3, -1
  %19 = add i64 %18, %17
  %20 = sub i64 0, %3
  %21 = and i64 %19, %20
  %22 = inttoptr i64 %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 %11
  %24 = getelementptr inbounds %"struct.base::PartitionRoot.8", %"struct.base::PartitionRoot.8"* %1, i64 0, i32 18
  %25 = load i8*, i8** %24, align 8
  %26 = icmp ugt i8* %23, %25
  br i1 %26, label %27, label %88, !prof !3

27:                                               ; preds = %4
  %28 = getelementptr inbounds %"struct.base::PartitionRoot.8", %"struct.base::PartitionRoot.8"* %1, i64 0, i32 16
  %29 = load i8*, i8** %28, align 8
  %30 = tail call %"class.base::internal::AddressPoolManager"* @_ZN4base8internal18AddressPoolManager11GetInstanceEv() #9
  %31 = load i32, i32* @_ZN4base8internal21PartitionAddressSpace9brp_pool_E, align 4
  %32 = tail call i8* @_ZN4base8internal18AddressPoolManager7ReserveEjPvm(%"class.base::internal::AddressPoolManager"* %30, i32 %31, i8* %29, i64 2097152) #9
  %33 = icmp eq i8* %32, null
  br i1 %33, label %239, label %34, !prof !3

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"struct.base::PartitionRoot.8", %"struct.base::PartitionRoot.8"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i64* %35, i64 2097152 monotonic
  %37 = getelementptr inbounds i8, i8* %32, i64 2097152
  store i8* %37, i8** %28, align 8
  %38 = getelementptr inbounds i8, i8* %32, i64 16384
  %39 = getelementptr inbounds %"struct.base::PartitionRoot.8", %"struct.base::PartitionRoot.8"* %1, i64 0, i32 0
  %40 = load i8, i8* %39, align 8
  %41 = icmp eq i8 %40, 0
  %42 = select i1 %41, i64 0, i64 32768
  %43 = getelementptr inbounds i8, i8* %38, i64 %42
  store i8* %43, i8** %15, align 8
  %44 = getelementptr inbounds i8, i8* %32, i64 2080768
  store i8* %44, i8** %24, align 8
  %45 = getelementptr inbounds i8, i8* %32, i64 4096
  tail call void @_ZN4base19RecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8* %45, i64 4096, i32 2, i32 0) #9
  %46 = load i8, i8* %39, align 8
  %47 = icmp eq i8 %46, 2
  br i1 %47, label %48, label %49

48:                                               ; preds = %34
  tail call void @_ZN4base19RecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8* %38, i64 %42, i32 2, i32 0) #9
  br label %49

49:                                               ; preds = %48, %34
  %50 = icmp eq i8* %29, null
  %51 = icmp eq i8* %29, %32
  %52 = or i1 %50, %51
  br i1 %52, label %54, label %53

53:                                               ; preds = %49
  store i8* null, i8** %28, align 8
  br label %54

54:                                               ; preds = %53, %49
  %55 = ptrtoint i8* %32 to i64
  %56 = add i64 %55, 4096
  %57 = inttoptr i64 %56 to i8*
  %58 = inttoptr i64 %56 to %"struct.base::PartitionRoot.8"**
  store %"struct.base::PartitionRoot.8"* %1, %"struct.base::PartitionRoot.8"** %58, align 8
  %59 = getelementptr inbounds i8, i8* %57, i64 8
  %60 = getelementptr inbounds %"struct.base::PartitionRoot.8", %"struct.base::PartitionRoot.8"* %1, i64 0, i32 19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 24, i1 false) #9
  %61 = load %"struct.base::internal::PartitionSuperPageExtentEntry.10"*, %"struct.base::internal::PartitionSuperPageExtentEntry.10"** %60, align 8
  br i1 %51, label %72, label %62, !prof !2

62:                                               ; preds = %54
  %63 = getelementptr inbounds i8, i8* %57, i64 16
  %64 = bitcast i8* %63 to i8**
  %65 = bitcast i8* %59 to i8**
  %66 = icmp eq %"struct.base::internal::PartitionSuperPageExtentEntry.10"* %61, null
  %67 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry.10", %"struct.base::internal::PartitionSuperPageExtentEntry.10"* %61, i64 0, i32 3
  %68 = getelementptr inbounds %"struct.base::PartitionRoot.8", %"struct.base::PartitionRoot.8"* %1, i64 0, i32 20
  %69 = select i1 %66, %"struct.base::internal::PartitionSuperPageExtentEntry.10"** %68, %"struct.base::internal::PartitionSuperPageExtentEntry.10"** %67, !prof !3
  %70 = bitcast %"struct.base::internal::PartitionSuperPageExtentEntry.10"** %69 to i8**
  store i8* %57, i8** %70, align 8
  %71 = bitcast %"struct.base::internal::PartitionSuperPageExtentEntry.10"** %60 to i8**
  store i8* %57, i8** %71, align 8
  store i8* %32, i8** %65, align 8
  store i8* %37, i8** %64, align 8
  br label %76

72:                                               ; preds = %54
  %73 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry.10", %"struct.base::internal::PartitionSuperPageExtentEntry.10"* %61, i64 0, i32 2
  %74 = load i8*, i8** %73, align 8
  %75 = getelementptr inbounds i8, i8* %74, i64 2097152
  store i8* %75, i8** %73, align 8
  br label %76

76:                                               ; preds = %62, %72
  %77 = icmp eq i8* %43, null
  br i1 %77, label %239, label %78

78:                                               ; preds = %76
  %79 = load i64, i64* %16, align 8
  %80 = add i64 %18, %79
  %81 = and i64 %80, %20
  %82 = inttoptr i64 %81 to i8*
  %83 = getelementptr inbounds i8, i8* %82, i64 %11
  %84 = load i8*, i8** %24, align 8
  %85 = icmp ugt i8* %83, %84
  br i1 %85, label %86, label %88, !prof !3

86:                                               ; preds = %78
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([168 x i8], [168 x i8]* @.str.2, i64 0, i64 0)) #9
  %87 = load i64, i64* %16, align 8
  br label %88

88:                                               ; preds = %86, %78, %4
  %89 = phi i64 [ %87, %86 ], [ %79, %78 ], [ %17, %4 ]
  %90 = phi i8* [ %82, %86 ], [ %82, %78 ], [ %22, %4 ]
  %91 = and i64 %89, -2097152
  %92 = or i64 %91, 4096
  %93 = inttoptr i64 %92 to i8*
  %94 = lshr i64 %89, 9
  %95 = and i64 %94, 4064
  %96 = getelementptr inbounds i8, i8* %93, i64 %95
  %97 = ptrtoint i8* %90 to i64
  %98 = and i64 %97, -2097152
  %99 = or i64 %98, 4096
  %100 = inttoptr i64 %99 to i8*
  %101 = lshr i64 %97, 9
  %102 = and i64 %101, 4064
  %103 = getelementptr inbounds i8, i8* %100, i64 %102
  %104 = bitcast i8* %103 to %"struct.base::internal::PartitionPage.14"*
  %105 = icmp ult i8* %96, %103
  br i1 %105, label %106, label %129

106:                                              ; preds = %88
  %107 = bitcast i8* %96 to %"struct.base::internal::PartitionPage.14"*
  %108 = xor i64 %91, -4097
  %109 = add nuw nsw i64 %102, %108
  %110 = sub nuw nsw i64 %109, %95
  %111 = getelementptr i8, i8* %100, i64 %110
  %112 = ptrtoint i8* %111 to i64
  %113 = lshr i64 %112, 5
  %114 = add nuw nsw i64 %113, 1
  %115 = and i64 %114, 7
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %126, label %117

117:                                              ; preds = %106, %117
  %118 = phi %"struct.base::internal::PartitionPage.14"* [ %123, %117 ], [ %107, %106 ]
  %119 = phi i64 [ %124, %117 ], [ %115, %106 ]
  %120 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %118, i64 0, i32 2
  %121 = load i8, i8* %120, align 1
  %122 = or i8 %121, 2
  store i8 %122, i8* %120, align 1
  %123 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %118, i64 1
  %124 = add i64 %119, -1
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %117, !llvm.loop !17

126:                                              ; preds = %117, %106
  %127 = phi %"struct.base::internal::PartitionPage.14"* [ %107, %106 ], [ %123, %117 ]
  %128 = icmp ult i8* %111, inttoptr (i64 224 to i8*)
  br i1 %128, label %129, label %211

129:                                              ; preds = %126, %211, %88
  %130 = getelementptr inbounds i8, i8* %90, i64 %11
  store i8* %130, i8** %15, align 8
  %131 = bitcast i8* %103 to %"struct.base::internal::SlotSpanMetadata.7"*
  tail call void @_ZN4base8internal16SlotSpanMetadataILb0EEC1EPNS0_15PartitionBucketILb0EEE(%"struct.base::internal::SlotSpanMetadata.7"* %131, %"struct.base::internal::PartitionBucket.6"* %0) #9
  %132 = getelementptr inbounds i8, i8* %103, i64 28
  store i8 -1, i8* %132, align 4
  %133 = getelementptr inbounds i8, i8* %103, i64 16
  %134 = bitcast i8* %133 to %"struct.base::internal::PartitionBucket.6"**
  %135 = load %"struct.base::internal::PartitionBucket.6"*, %"struct.base::internal::PartitionBucket.6"** %134, align 16
  %136 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %135, i64 0, i32 4
  %137 = load i32, i32* %136, align 4
  %138 = shl i32 %137, 12
  %139 = and i32 %138, 1044480
  %140 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %135, i64 0, i32 3
  %141 = load i32, i32* %140, align 8
  %142 = udiv i32 %139, %141
  %143 = trunc i32 %142 to i16
  %144 = getelementptr inbounds i8, i8* %103, i64 26
  %145 = bitcast i8* %144 to i16*
  store i16 %143, i16* %145, align 2
  %146 = getelementptr inbounds i8, i8* %103, i64 8
  %147 = bitcast i8* %146 to %"struct.base::internal::SlotSpanMetadata.7"**
  store %"struct.base::internal::SlotSpanMetadata.7"* null, %"struct.base::internal::SlotSpanMetadata.7"** %147, align 8
  %148 = load i32, i32* %5, align 4
  %149 = trunc i32 %148 to i16
  %150 = and i16 %149, 255
  %151 = add nuw nsw i16 %150, 3
  %152 = lshr i16 %151, 2
  %153 = icmp eq i16 %152, 0
  br i1 %153, label %208, label %154

154:                                              ; preds = %129
  %155 = add nsw i16 %152, -1
  %156 = and i16 %152, 3
  %157 = icmp ult i16 %155, 3
  br i1 %157, label %191, label %158

158:                                              ; preds = %154
  %159 = sub nsw i16 %152, %156
  br label %160

160:                                              ; preds = %160, %158
  %161 = phi i16 [ 0, %158 ], [ %187, %160 ]
  %162 = phi %"struct.base::internal::PartitionPage.14"* [ %104, %158 ], [ %188, %160 ]
  %163 = phi i16 [ %159, %158 ], [ %189, %160 ]
  %164 = trunc i16 %161 to i8
  %165 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %162, i64 0, i32 1
  store i8 %164, i8* %165, align 1
  %166 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %162, i64 0, i32 2
  %167 = load i8, i8* %166, align 1
  %168 = or i8 %167, 1
  store i8 %168, i8* %166, align 1
  %169 = trunc i16 %161 to i8
  %170 = or i8 %169, 1
  %171 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %162, i64 1, i32 1
  store i8 %170, i8* %171, align 1
  %172 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %162, i64 1, i32 2
  %173 = load i8, i8* %172, align 1
  %174 = or i8 %173, 1
  store i8 %174, i8* %172, align 1
  %175 = trunc i16 %161 to i8
  %176 = or i8 %175, 2
  %177 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %162, i64 2, i32 1
  store i8 %176, i8* %177, align 1
  %178 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %162, i64 2, i32 2
  %179 = load i8, i8* %178, align 1
  %180 = or i8 %179, 1
  store i8 %180, i8* %178, align 1
  %181 = trunc i16 %161 to i8
  %182 = or i8 %181, 3
  %183 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %162, i64 3, i32 1
  store i8 %182, i8* %183, align 1
  %184 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %162, i64 3, i32 2
  %185 = load i8, i8* %184, align 1
  %186 = or i8 %185, 1
  store i8 %186, i8* %184, align 1
  %187 = add nuw nsw i16 %161, 4
  %188 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %162, i64 4
  %189 = add i16 %163, -4
  %190 = icmp eq i16 %189, 0
  br i1 %190, label %191, label %160

191:                                              ; preds = %160, %154
  %192 = phi i16 [ 0, %154 ], [ %187, %160 ]
  %193 = phi %"struct.base::internal::PartitionPage.14"* [ %104, %154 ], [ %188, %160 ]
  %194 = icmp eq i16 %156, 0
  br i1 %194, label %208, label %195

195:                                              ; preds = %191, %195
  %196 = phi i16 [ %204, %195 ], [ %192, %191 ]
  %197 = phi %"struct.base::internal::PartitionPage.14"* [ %205, %195 ], [ %193, %191 ]
  %198 = phi i16 [ %206, %195 ], [ %156, %191 ]
  %199 = trunc i16 %196 to i8
  %200 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %197, i64 0, i32 1
  store i8 %199, i8* %200, align 1
  %201 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %197, i64 0, i32 2
  %202 = load i8, i8* %201, align 1
  %203 = or i8 %202, 1
  store i8 %203, i8* %201, align 1
  %204 = add nuw nsw i16 %196, 1
  %205 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %197, i64 1
  %206 = add i16 %198, -1
  %207 = icmp eq i16 %206, 0
  br i1 %207, label %208, label %195, !llvm.loop !18

208:                                              ; preds = %191, %195, %129
  tail call void @_ZN4base19RecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8* %90, i64 %14, i32 2, i32 0) #9
  %209 = getelementptr inbounds %"struct.base::PartitionRoot.8", %"struct.base::PartitionRoot.8"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = atomicrmw add i64* %209, i64 %14 monotonic
  br label %239

211:                                              ; preds = %126, %211
  %212 = phi %"struct.base::internal::PartitionPage.14"* [ %237, %211 ], [ %127, %126 ]
  %213 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %212, i64 0, i32 2
  %214 = load i8, i8* %213, align 1
  %215 = or i8 %214, 2
  store i8 %215, i8* %213, align 1
  %216 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %212, i64 1, i32 2
  %217 = load i8, i8* %216, align 1
  %218 = or i8 %217, 2
  store i8 %218, i8* %216, align 1
  %219 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %212, i64 2, i32 2
  %220 = load i8, i8* %219, align 1
  %221 = or i8 %220, 2
  store i8 %221, i8* %219, align 1
  %222 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %212, i64 3, i32 2
  %223 = load i8, i8* %222, align 1
  %224 = or i8 %223, 2
  store i8 %224, i8* %222, align 1
  %225 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %212, i64 4, i32 2
  %226 = load i8, i8* %225, align 1
  %227 = or i8 %226, 2
  store i8 %227, i8* %225, align 1
  %228 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %212, i64 5, i32 2
  %229 = load i8, i8* %228, align 1
  %230 = or i8 %229, 2
  store i8 %230, i8* %228, align 1
  %231 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %212, i64 6, i32 2
  %232 = load i8, i8* %231, align 1
  %233 = or i8 %232, 2
  store i8 %233, i8* %231, align 1
  %234 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %212, i64 7, i32 2
  %235 = load i8, i8* %234, align 1
  %236 = or i8 %235, 2
  store i8 %236, i8* %234, align 1
  %237 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %212, i64 8
  %238 = icmp ult %"struct.base::internal::PartitionPage.14"* %237, %104
  br i1 %238, label %211, label %129

239:                                              ; preds = %27, %76, %208
  %240 = phi %"struct.base::internal::SlotSpanMetadata.7"* [ %131, %208 ], [ null, %76 ], [ null, %27 ]
  ret %"struct.base::internal::SlotSpanMetadata.7"* %240
}

; Function Attrs: noreturn
declare void @_ZN4base13PartitionRootILb0EE11OutOfMemoryEm(%"struct.base::PartitionRoot.8"*, i64) local_unnamed_addr #4

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i8* @_ZN4base8internal15PartitionBucketILb0EE29ProvisionMoreSlotsAndAllocOneEPNS_13PartitionRootILb0EEEPNS0_16SlotSpanMetadataILb0EEE(%"struct.base::internal::PartitionBucket.6"*, %"struct.base::PartitionRoot.8"*, %"struct.base::internal::SlotSpanMetadata.7"*) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.7", %"struct.base::internal::SlotSpanMetadata.7"* %2, i64 0, i32 4
  %5 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = ptrtoint %"struct.base::internal::SlotSpanMetadata.7"* %2 to i64
  %9 = and i64 %8, 2097151
  %10 = add nuw nsw i64 %9, 36028797018959872
  %11 = lshr i64 %10, 5
  %12 = and i64 %8, -2097152
  %13 = shl i64 %11, 14
  %14 = add i64 %13, %12
  %15 = inttoptr i64 %14 to i8*
  %16 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.7", %"struct.base::internal::SlotSpanMetadata.7"* %2, i64 0, i32 3
  %17 = load i16, i16* %16, align 1
  %18 = sext i16 %17 to i64
  %19 = mul nsw i64 %18, %7
  %20 = getelementptr inbounds i8, i8* %15, i64 %19
  %21 = getelementptr inbounds i8, i8* %20, i64 %7
  %22 = ptrtoint i8* %20 to i64
  %23 = ptrtoint i8* %21 to i64
  %24 = add i64 %23, 4095
  %25 = and i64 %24, -4096
  %26 = inttoptr i64 %25 to i8*
  %27 = add i16 %17, 1
  store i16 %27, i16* %16, align 1
  %28 = sub i64 %25, %22
  %29 = udiv i64 %28, %7
  %30 = trunc i64 %29 to i16
  %31 = load i16, i16* %4, align 1
  %32 = sub i16 %31, %30
  store i16 %32, i16* %4, align 1
  %33 = getelementptr inbounds i8, i8* %21, i64 %7
  %34 = icmp ugt i8* %33, %26
  br i1 %34, label %59, label %35

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.7", %"struct.base::internal::SlotSpanMetadata.7"* %2, i64 0, i32 0
  %37 = bitcast %"struct.base::internal::SlotSpanMetadata.7"* %2 to i8**
  br label %38

38:                                               ; preds = %35, %56
  %39 = phi i8* [ %33, %35 ], [ %57, %56 ]
  %40 = phi %"class.base::internal::PartitionFreelistEntry"* [ null, %35 ], [ %42, %56 ]
  %41 = phi i8* [ %21, %35 ], [ %39, %56 ]
  %42 = bitcast i8* %41 to %"class.base::internal::PartitionFreelistEntry"*
  %43 = bitcast i8* %41 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* null, %"struct.base::internal::EncodedPartitionFreelistEntry"** %43, align 8
  %44 = getelementptr inbounds i8, i8* %41, i64 8
  %45 = bitcast i8* %44 to i64*
  store i64 -1, i64* %45, align 8
  %46 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %36, align 1
  %47 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %46, null
  br i1 %47, label %48, label %49

48:                                               ; preds = %38
  store i8* %41, i8** %37, align 1
  br label %56

49:                                               ; preds = %38
  %50 = ptrtoint i8* %41 to i64
  %51 = tail call i64 @llvm.bswap.i64(i64 %50) #9
  %52 = inttoptr i64 %51 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %53 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %40, i64 0, i32 0
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %52, %"struct.base::internal::EncodedPartitionFreelistEntry"** %53, align 8
  %54 = xor i64 %51, -1
  %55 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %40, i64 0, i32 1
  store i64 %54, i64* %55, align 8
  br label %56

56:                                               ; preds = %49, %48
  %57 = getelementptr inbounds i8, i8* %39, i64 %7
  %58 = icmp ugt i8* %57, %26
  br i1 %58, label %59, label %38

59:                                               ; preds = %56, %3
  ret i8* %20
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK4base8internal15PartitionBucketILb0EE15CanStoreRawSizeEv(%"struct.base::internal::PartitionBucket.6"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = icmp ugt i32 %3, 65536
  ret i1 %4
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK4base8internal15PartitionBucketILb0EE8is_validEv(%"struct.base::internal::PartitionBucket.6"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %0, i64 0, i32 0
  %3 = load %"struct.base::internal::SlotSpanMetadata.7"*, %"struct.base::internal::SlotSpanMetadata.7"** %2, align 8
  %4 = icmp ne %"struct.base::internal::SlotSpanMetadata.7"* %3, null
  ret i1 %4
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i16 @_ZNK4base8internal15PartitionBucketILb0EE18get_slots_per_spanEv(%"struct.base::internal::PartitionBucket.6"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = shl i32 %3, 12
  %5 = and i32 %4, 1044480
  %6 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = udiv i32 %5, %7
  %9 = trunc i32 %8 to i16
  ret i16 %9
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i16 @_ZNK4base8internal15PartitionBucketILb0EE23get_pages_per_slot_spanEv(%"struct.base::internal::PartitionBucket.6"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = trunc i32 %3 to i16
  %5 = and i16 %4, 255
  %6 = add nuw nsw i16 %5, 3
  %7 = lshr i16 %6, 2
  ret i16 %7
}

; Function Attrs: noinline nounwind ssp uwtable
define weak_odr hidden void @_ZN4base8internal15PartitionBucketILb0EE6OnFullEv() local_unnamed_addr #2 comdat align 2 {
  notail call fastcc void @_ZN12_GLOBAL__N_110OnNoMemoryEm() #11
  unreachable
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i64 @_ZN4base8internal15PartitionBucketILb0EE13GetSlotNumberEm(%"struct.base::internal::PartitionBucket.6"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = mul i64 %4, %1
  %6 = lshr i64 %5, 42
  ret i64 %6
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i8* @_ZN4base8internal15PartitionBucketILb0EE17AllocNewSuperPageEPNS_13PartitionRootILb0EEE(%"struct.base::internal::PartitionBucket.6"*, %"struct.base::PartitionRoot.8"*) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"struct.base::PartitionRoot.8", %"struct.base::PartitionRoot.8"* %1, i64 0, i32 16
  %4 = load i8*, i8** %3, align 8
  %5 = tail call %"class.base::internal::AddressPoolManager"* @_ZN4base8internal18AddressPoolManager11GetInstanceEv() #9
  %6 = load i32, i32* @_ZN4base8internal21PartitionAddressSpace9brp_pool_E, align 4
  %7 = tail call i8* @_ZN4base8internal18AddressPoolManager7ReserveEjPvm(%"class.base::internal::AddressPoolManager"* %5, i32 %6, i8* %4, i64 2097152) #9
  %8 = icmp eq i8* %7, null
  br i1 %8, label %53, label %9, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.base::PartitionRoot.8", %"struct.base::PartitionRoot.8"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i64* %10, i64 2097152 monotonic
  %12 = getelementptr inbounds i8, i8* %7, i64 2097152
  store i8* %12, i8** %3, align 8
  %13 = getelementptr inbounds i8, i8* %7, i64 16384
  %14 = getelementptr inbounds %"struct.base::PartitionRoot.8", %"struct.base::PartitionRoot.8"* %1, i64 0, i32 0
  %15 = load i8, i8* %14, align 8
  %16 = icmp eq i8 %15, 0
  %17 = select i1 %16, i64 0, i64 32768
  %18 = getelementptr inbounds i8, i8* %13, i64 %17
  %19 = getelementptr inbounds %"struct.base::PartitionRoot.8", %"struct.base::PartitionRoot.8"* %1, i64 0, i32 17
  store i8* %18, i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %7, i64 2080768
  %21 = getelementptr inbounds %"struct.base::PartitionRoot.8", %"struct.base::PartitionRoot.8"* %1, i64 0, i32 18
  store i8* %20, i8** %21, align 8
  %22 = getelementptr inbounds i8, i8* %7, i64 4096
  tail call void @_ZN4base19RecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8* %22, i64 4096, i32 2, i32 0) #9
  %23 = load i8, i8* %14, align 8
  %24 = icmp eq i8 %23, 2
  br i1 %24, label %25, label %26

25:                                               ; preds = %9
  tail call void @_ZN4base19RecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8* %13, i64 %17, i32 2, i32 0) #9
  br label %26

26:                                               ; preds = %25, %9
  %27 = icmp eq i8* %4, null
  %28 = icmp eq i8* %4, %7
  %29 = or i1 %27, %28
  br i1 %29, label %31, label %30

30:                                               ; preds = %26
  store i8* null, i8** %3, align 8
  br label %31

31:                                               ; preds = %26, %30
  %32 = ptrtoint i8* %7 to i64
  %33 = add i64 %32, 4096
  %34 = inttoptr i64 %33 to i8*
  %35 = inttoptr i64 %33 to %"struct.base::PartitionRoot.8"**
  store %"struct.base::PartitionRoot.8"* %1, %"struct.base::PartitionRoot.8"** %35, align 8
  %36 = getelementptr inbounds i8, i8* %34, i64 8
  %37 = getelementptr inbounds %"struct.base::PartitionRoot.8", %"struct.base::PartitionRoot.8"* %1, i64 0, i32 19
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false)
  %38 = load %"struct.base::internal::PartitionSuperPageExtentEntry.10"*, %"struct.base::internal::PartitionSuperPageExtentEntry.10"** %37, align 8
  br i1 %28, label %49, label %39, !prof !2

39:                                               ; preds = %31
  %40 = getelementptr inbounds i8, i8* %34, i64 16
  %41 = bitcast i8* %40 to i8**
  %42 = bitcast i8* %36 to i8**
  %43 = icmp eq %"struct.base::internal::PartitionSuperPageExtentEntry.10"* %38, null
  %44 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry.10", %"struct.base::internal::PartitionSuperPageExtentEntry.10"* %38, i64 0, i32 3
  %45 = getelementptr inbounds %"struct.base::PartitionRoot.8", %"struct.base::PartitionRoot.8"* %1, i64 0, i32 20
  %46 = select i1 %43, %"struct.base::internal::PartitionSuperPageExtentEntry.10"** %45, %"struct.base::internal::PartitionSuperPageExtentEntry.10"** %44, !prof !3
  %47 = bitcast %"struct.base::internal::PartitionSuperPageExtentEntry.10"** %46 to i8**
  store i8* %34, i8** %47, align 8
  %48 = bitcast %"struct.base::internal::PartitionSuperPageExtentEntry.10"** %37 to i8**
  store i8* %34, i8** %48, align 8
  store i8* %7, i8** %42, align 8
  store i8* %12, i8** %41, align 8
  br label %53

49:                                               ; preds = %31
  %50 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry.10", %"struct.base::internal::PartitionSuperPageExtentEntry.10"* %38, i64 0, i32 2
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 2097152
  store i8* %52, i8** %50, align 8
  br label %53

53:                                               ; preds = %39, %49, %2
  %54 = phi i8* [ null, %2 ], [ %18, %49 ], [ %18, %39 ]
  ret i8* %54
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden void @_ZN4base8internal15PartitionBucketILb0EE18InitializeSlotSpanEPNS0_16SlotSpanMetadataILb0EEE(%"struct.base::internal::PartitionBucket.6"*, %"struct.base::internal::SlotSpanMetadata.7"*) local_unnamed_addr #3 comdat align 2 {
  tail call void @_ZN4base8internal16SlotSpanMetadataILb0EEC1EPNS0_15PartitionBucketILb0EEE(%"struct.base::internal::SlotSpanMetadata.7"* %1, %"struct.base::internal::PartitionBucket.6"* %0) #9
  %3 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.7", %"struct.base::internal::SlotSpanMetadata.7"* %1, i64 0, i32 5
  store i8 -1, i8* %3, align 1
  %4 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.7", %"struct.base::internal::SlotSpanMetadata.7"* %1, i64 0, i32 2
  %5 = load %"struct.base::internal::PartitionBucket.6"*, %"struct.base::internal::PartitionBucket.6"** %4, align 1
  %6 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %5, i64 0, i32 4
  %7 = load i32, i32* %6, align 4
  %8 = shl i32 %7, 12
  %9 = and i32 %8, 1044480
  %10 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %5, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = udiv i32 %9, %11
  %13 = trunc i32 %12 to i16
  %14 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.7", %"struct.base::internal::SlotSpanMetadata.7"* %1, i64 0, i32 4
  store i16 %13, i16* %14, align 1
  %15 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.7", %"struct.base::internal::SlotSpanMetadata.7"* %1, i64 0, i32 1
  store %"struct.base::internal::SlotSpanMetadata.7"* null, %"struct.base::internal::SlotSpanMetadata.7"** %15, align 1
  %16 = getelementptr inbounds %"struct.base::internal::PartitionBucket.6", %"struct.base::internal::PartitionBucket.6"* %0, i64 0, i32 4
  %17 = load i32, i32* %16, align 4
  %18 = trunc i32 %17 to i16
  %19 = and i16 %18, 255
  %20 = add nuw nsw i16 %19, 3
  %21 = lshr i16 %20, 2
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %47, label %23

23:                                               ; preds = %2
  %24 = bitcast %"struct.base::internal::SlotSpanMetadata.7"* %1 to %"struct.base::internal::PartitionPage.14"*
  %25 = add nsw i16 %21, -1
  %26 = and i16 %21, 3
  %27 = icmp ult i16 %25, 3
  br i1 %27, label %30, label %28

28:                                               ; preds = %23
  %29 = sub nsw i16 %21, %26
  br label %48

30:                                               ; preds = %48, %23
  %31 = phi i16 [ 0, %23 ], [ %75, %48 ]
  %32 = phi %"struct.base::internal::PartitionPage.14"* [ %24, %23 ], [ %76, %48 ]
  %33 = icmp eq i16 %26, 0
  br i1 %33, label %47, label %34

34:                                               ; preds = %30, %34
  %35 = phi i16 [ %43, %34 ], [ %31, %30 ]
  %36 = phi %"struct.base::internal::PartitionPage.14"* [ %44, %34 ], [ %32, %30 ]
  %37 = phi i16 [ %45, %34 ], [ %26, %30 ]
  %38 = trunc i16 %35 to i8
  %39 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %36, i64 0, i32 1
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %36, i64 0, i32 2
  %41 = load i8, i8* %40, align 1
  %42 = or i8 %41, 1
  store i8 %42, i8* %40, align 1
  %43 = add nuw nsw i16 %35, 1
  %44 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %36, i64 1
  %45 = add i16 %37, -1
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %47, label %34, !llvm.loop !19

47:                                               ; preds = %30, %34, %2
  ret void

48:                                               ; preds = %48, %28
  %49 = phi i16 [ 0, %28 ], [ %75, %48 ]
  %50 = phi %"struct.base::internal::PartitionPage.14"* [ %24, %28 ], [ %76, %48 ]
  %51 = phi i16 [ %29, %28 ], [ %77, %48 ]
  %52 = trunc i16 %49 to i8
  %53 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %50, i64 0, i32 1
  store i8 %52, i8* %53, align 1
  %54 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %50, i64 0, i32 2
  %55 = load i8, i8* %54, align 1
  %56 = or i8 %55, 1
  store i8 %56, i8* %54, align 1
  %57 = trunc i16 %49 to i8
  %58 = or i8 %57, 1
  %59 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %50, i64 1, i32 1
  store i8 %58, i8* %59, align 1
  %60 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %50, i64 1, i32 2
  %61 = load i8, i8* %60, align 1
  %62 = or i8 %61, 1
  store i8 %62, i8* %60, align 1
  %63 = trunc i16 %49 to i8
  %64 = or i8 %63, 2
  %65 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %50, i64 2, i32 1
  store i8 %64, i8* %65, align 1
  %66 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %50, i64 2, i32 2
  %67 = load i8, i8* %66, align 1
  %68 = or i8 %67, 1
  store i8 %68, i8* %66, align 1
  %69 = trunc i16 %49 to i8
  %70 = or i8 %69, 3
  %71 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %50, i64 3, i32 1
  store i8 %70, i8* %71, align 1
  %72 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %50, i64 3, i32 2
  %73 = load i8, i8* %72, align 1
  %74 = or i8 %73, 1
  store i8 %74, i8* %72, align 1
  %75 = add nuw nsw i16 %49, 4
  %76 = getelementptr inbounds %"struct.base::internal::PartitionPage.14", %"struct.base::internal::PartitionPage.14"* %50, i64 4
  %77 = add i16 %51, -4
  %78 = icmp eq i16 %77, 0
  br i1 %78, label %30, label %48
}

declare void @_ZN4base8internal16SlotSpanMetadataILb0EEC1EPNS0_15PartitionBucketILb0EEE(%"struct.base::internal::SlotSpanMetadata.7"*, %"struct.base::internal::PartitionBucket.6"*) unnamed_addr #1

; Function Attrs: noinline noreturn nounwind ssp uwtable
define internal fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() unnamed_addr #5 {
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !20
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !21
  unreachable
}

; Function Attrs: inaccessiblemem_or_argmemonly nounwind
declare void @llvm.prefetch(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #6

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.bswap.i64(i64) #7

declare void @_ZN4base8internal28RunPartitionAllocOomCallbackEv() local_unnamed_addr #1

declare void @_ZN4base27TerminateBecauseOutOfMemoryEm(i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZN4base8internal32PartitionExcessiveAllocationSizeEm(i64) local_unnamed_addr #4

declare void @_ZN4base8internal18AddressPoolManager20UnreserveAndDecommitEjPvm(%"class.base::internal::AddressPoolManager"*, i32, i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN4base22TryRecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8*, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal13MaybeSpinLockILb1EE6UnlockEv(%"class.base::internal::MaybeSpinLock"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw xchg i32* %2, i32 0 release
  %4 = icmp eq i32 %3, 2
  br i1 %4, label %5, label %7, !prof !3

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %6) #9
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

declare void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { alwaysinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inaccessiblemem_or_argmemonly nounwind }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { argmemonly nounwind }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { noreturn }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2146410443, i32 1073205}
!5 = !{i32 -2142356097}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = distinct !{!8, !7}
!9 = !{i8 0, i8 2}
!10 = distinct !{!10, !7}
!11 = distinct !{!11, !7}
!12 = !{i32 -2142572258}
!13 = !{i32 -2142572237}
!14 = distinct !{!14, !7}
!15 = distinct !{!15, !7}
!16 = distinct !{!16, !7}
!17 = distinct !{!17, !7}
!18 = distinct !{!18, !7}
!19 = distinct !{!19, !7}
!20 = !{i32 -2142394670}
!21 = !{i32 -2142394649}
