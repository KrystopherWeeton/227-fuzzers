; ModuleID = '../../v8/src/compiler/control-equivalence.cc'
source_filename = "../../v8/src/compiler/control-equivalence.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::compiler::ControlEquivalence" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Graph"*, i32, i32, %"class.v8::internal::ZoneVector.11" }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type opaque
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::compiler::Graph" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32, i32, %"class.v8::internal::ZoneVector" }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::compiler::GraphDecorator"**, %"class.v8::internal::compiler::GraphDecorator"**, %"class.std::__1::__compressed_pair.8" }
%"class.v8::internal::compiler::GraphDecorator" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.v8::internal::compiler::GraphDecorator"** }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.11" = type { %"class.std::__1::vector.12" }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**, %"class.std::__1::__compressed_pair.18" }
%"struct.v8::internal::compiler::ControlEquivalence::NodeData" = type <{ i64, %"class.v8::internal::ZoneLinkedList", i8, [7 x i8] }>
%"class.v8::internal::ZoneLinkedList" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.14" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15", %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i64 }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.v8::internal::ZoneAllocator.17" }
%"class.v8::internal::ZoneAllocator.17" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19", %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.v8::internal::ZoneAllocator.21" }
%"class.v8::internal::ZoneAllocator.21" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::Node" = type { %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Type", i32, i32, %"struct.v8::internal::compiler::Node::Use"* }
%"class.v8::internal::compiler::Operator" = type <{ i32 (...)**, i8*, i16, %"class.v8::base::Flags", i8, i32, i32, i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::base::Flags" = type { i8 }
%"class.v8::internal::compiler::Type" = type { i64 }
%"struct.v8::internal::compiler::Node::Use" = type { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"*, i32 }
%"class.v8::internal::ZoneDeque.30" = type { %"class.std::__1::deque.31" }
%"class.std::__1::deque.31" = type { %"class.std::__1::__deque_base.32" }
%"class.std::__1::__deque_base.32" = type { %"struct.std::__1::__split_buffer.33", i64, %"class.std::__1::__compressed_pair.39" }
%"struct.std::__1::__split_buffer.33" = type { %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35", %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.v8::internal::compiler::Node"*** }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.v8::internal::RecyclingZoneAllocator.37" }
%"class.v8::internal::RecyclingZoneAllocator.37" = type { %"class.v8::internal::ZoneAllocator.38", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.38" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, i64 }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.15", %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.v8::internal::RecyclingZoneAllocator.41" }
%"class.v8::internal::RecyclingZoneAllocator.41" = type { %"class.v8::internal::ZoneAllocator.42", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.42" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, i64 }
%"class.v8::internal::ZoneQueue" = type { %"class.std::__1::queue" }
%"class.std::__1::queue" = type { %"class.v8::internal::ZoneDeque.30" }
%"class.v8::internal::ZoneDeque" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.26" }
%"struct.std::__1::__split_buffer" = type { %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"class.std::__1::__compressed_pair.22" }
%"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry" = type { i32, %"class.v8::internal::compiler::Node::InputEdges::iterator", %"class.v8::internal::compiler::Node::UseEdges::iterator", %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"* }
%"class.v8::internal::compiler::Node::InputEdges::iterator" = type { %"struct.v8::internal::compiler::Node::Use"*, %"class.v8::internal::compiler::Node"** }
%"class.v8::internal::compiler::Node::UseEdges::iterator" = type { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"* }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23", %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.v8::internal::RecyclingZoneAllocator" }
%"class.v8::internal::RecyclingZoneAllocator" = type { %"class.v8::internal::ZoneAllocator.25", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.25" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"*, i64 }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.15", %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.v8::internal::RecyclingZoneAllocator.28" }
%"class.v8::internal::RecyclingZoneAllocator.28" = type { %"class.v8::internal::ZoneAllocator.29", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.29" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"*, i64 }
%"class.v8::internal::ZoneStack" = type { %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.v8::internal::ZoneDeque" }
%"struct.v8::internal::compiler::Node::OutOfLineInputs" = type { %"class.v8::internal::compiler::Node"*, i32, i32 }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.v8::internal::compiler::ControlEquivalence::Bracket" }
%"struct.v8::internal::compiler::ControlEquivalence::Bracket" = type { i32, i64, i64, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__split_buffer.54" = type { %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.35", %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.v8::internal::RecyclingZoneAllocator.37"* }
%"struct.std::__1::__split_buffer.62" = type { %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.23", %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.v8::internal::RecyclingZoneAllocator"* }

$_ZNSt3__16vectorIPN2v88internal8compiler18ControlEquivalence8NodeDataENS2_13ZoneAllocatorIS6_EEE8__appendEm = comdat any

$_ZNSt3__112__deque_baseIN2v88internal8compiler18ControlEquivalence13DFSStackEntryENS2_22RecyclingZoneAllocatorIS5_EEED2Ev = comdat any

$_ZNSt3__112__deque_baseIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEED2Ev = comdat any

$_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_ = comdat any

$_ZNSt3__15dequeIN2v88internal8compiler18ControlEquivalence13DFSStackEntryENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal8compiler18ControlEquivalence13DFSStackEntryENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_ = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal8compiler18ControlEquivalence13DFSStackEntryENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal8compiler18ControlEquivalence13DFSStackEntryENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal8compiler18ControlEquivalence13DFSStackEntryERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal8compiler18ControlEquivalence13DFSStackEntryERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_ = comdat any

@_ZN2v88internal8compiler18ControlEquivalence13kInvalidClassE = hidden local_unnamed_addr constant i64 -1, align 8
@_ZN2v88internal20FLAG_trace_turbo_ceqE = external local_unnamed_addr global i8, align 1
@.str = private unnamed_addr constant [26 x i8] c"CEQ: Pre-visit of #%d:%s\0A\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"CEQ: Mid-visit of #%d:%s\0A\00", align 1
@.str.2 = private unnamed_addr constant [32 x i8] c"  Assigned class number is %zu\0A\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"CEQ: Post-visit of #%d:%s\0A\00", align 1
@.str.4 = private unnamed_addr constant [37 x i8] c"CEQ: Backedge from #%d:%s to #%d:%s\0A\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"  BList erased: {%d->%d}\0A\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"  BList: \00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"{%d->%d} \00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18ControlEquivalence3RunEPNS1_4NodeE(%"class.v8::internal::compiler::ControlEquivalence"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 16777215
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %0, i64 0, i32 4, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.12"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %14, %6
  %16 = inttoptr i64 %12 to %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**
  br i1 %15, label %23, label %17

17:                                               ; preds = %2
  %18 = add nuw nsw i64 %6, 1
  %19 = sub nsw i64 %18, %14
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler18ControlEquivalence8NodeDataENS2_13ZoneAllocatorIS6_EEE8__appendEm(%"class.std::__1::vector.12"* %7, i64 %19) #5
  %20 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %7, i64 0, i32 0, i32 0
  %21 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %20, align 8
  %22 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %21 to i64
  br label %23

23:                                               ; preds = %2, %17
  %24 = phi i64 [ %22, %17 ], [ %12, %2 ]
  %25 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %21, %17 ], [ %16, %2 ]
  %26 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %25, i64 %6
  %27 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %26, align 8
  %28 = icmp eq %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %27, null
  br i1 %28, label %50, label %29

29:                                               ; preds = %23
  %30 = load i32, i32* %3, align 4
  %31 = and i32 %30, 16777215
  %32 = zext i32 %31 to i64
  %33 = load i64, i64* %9, align 8
  %34 = sub i64 %33, %24
  %35 = ashr exact i64 %34, 3
  %36 = icmp ugt i64 %35, %32
  %37 = inttoptr i64 %24 to %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**
  br i1 %36, label %43, label %38

38:                                               ; preds = %29
  %39 = add nuw nsw i64 %32, 1
  %40 = sub nsw i64 %39, %35
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler18ControlEquivalence8NodeDataENS2_13ZoneAllocatorIS6_EEE8__appendEm(%"class.std::__1::vector.12"* %7, i64 %40) #5
  %41 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %7, i64 0, i32 0, i32 0
  %42 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %41, align 8
  br label %43

43:                                               ; preds = %29, %38
  %44 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %42, %38 ], [ %37, %29 ]
  %45 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %44, i64 %32
  %46 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %45, align 8
  %47 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData", %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %46, i64 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, -1
  br i1 %49, label %50, label %51

50:                                               ; preds = %23, %43
  tail call void @_ZN2v88internal8compiler18ControlEquivalence22DetermineParticipationEPNS1_4NodeE(%"class.v8::internal::compiler::ControlEquivalence"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void @_ZN2v88internal8compiler18ControlEquivalence16RunUndirectedDFSEPNS1_4NodeE(%"class.v8::internal::compiler::ControlEquivalence"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %51

51:                                               ; preds = %50, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18ControlEquivalence22DetermineParticipationEPNS1_4NodeE(%"class.v8::internal::compiler::ControlEquivalence"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::ZoneDeque.30", align 8
  %4 = alloca %"class.v8::internal::ZoneQueue", align 8
  %5 = bitcast %"class.v8::internal::ZoneQueue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %5) #5
  %6 = bitcast %"class.v8::internal::compiler::ControlEquivalence"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.v8::internal::ZoneDeque.30"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %8) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 32, i1 false) #5
  %9 = getelementptr inbounds %"class.v8::internal::ZoneDeque.30", %"class.v8::internal::ZoneDeque.30"* %3, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %10 = bitcast %"struct.std::__1::__compressed_pair_elem.36"* %9 to i64*
  store i64 %7, i64* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::ZoneDeque.30", %"class.v8::internal::ZoneDeque.30"* %3, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %12 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #5
  %13 = getelementptr inbounds %"class.v8::internal::ZoneDeque.30", %"class.v8::internal::ZoneDeque.30"* %3, i64 0, i32 0, i32 0, i32 2, i32 1
  %14 = bitcast %"struct.std::__1::__compressed_pair_elem.40"* %13 to i64*
  store i64 %7, i64* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::ZoneDeque.30", %"class.v8::internal::ZoneDeque.30"* %3, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  store %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* null, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3
  %17 = getelementptr inbounds %"class.v8::internal::ZoneDeque.30", %"class.v8::internal::ZoneDeque.30"* %3, i64 0, i32 0, i32 0, i32 0, i32 3
  %18 = bitcast %"class.std::__1::__compressed_pair.34"* %16 to i8*
  %19 = bitcast %"class.std::__1::__compressed_pair.34"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 32, i1 false) #5
  %20 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.v8::internal::ZoneDeque.30", %"class.v8::internal::ZoneDeque.30"* %3, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %23 = getelementptr inbounds %"class.v8::internal::ZoneDeque.30", %"class.v8::internal::ZoneDeque.30"* %3, i64 0, i32 0, i32 0, i32 2
  %24 = bitcast %"class.std::__1::__compressed_pair.39"* %22 to i8*
  %25 = bitcast %"class.std::__1::__compressed_pair.39"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false) #5
  %26 = bitcast i64* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #5
  %27 = getelementptr inbounds %"class.v8::internal::ZoneDeque.30", %"class.v8::internal::ZoneDeque.30"* %3, i64 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base.32"* nonnull %27) #5
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %8) #5
  call void @_ZN2v88internal8compiler18ControlEquivalence29DetermineParticipationEnqueueERNS0_9ZoneQueueIPNS1_4NodeEEES5_(%"class.v8::internal::compiler::ControlEquivalence"* %0, %"class.v8::internal::ZoneQueue"* nonnull dereferenceable(80) %4, %"class.v8::internal::compiler::Node"* %1)
  %28 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %134, label %31

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %34 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %33 to i64*
  %35 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %33 to %"class.v8::internal::compiler::Node"***
  br label %39

36:                                               ; preds = %126, %72
  %37 = load i64, i64* %28, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %134, label %39

39:                                               ; preds = %31, %36
  %40 = phi i64 [ %29, %31 ], [ %37, %36 ]
  %41 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %32, align 8
  %42 = load i64, i64* %20, align 8
  %43 = lshr i64 %42, 9
  %44 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %41, i64 %43
  %45 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %44, align 8
  %46 = and i64 %42, 511
  %47 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %45, i64 %46
  %48 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %47, align 8
  %49 = add i64 %40, -1
  store i64 %49, i64* %28, align 8
  %50 = add i64 %42, 1
  store i64 %50, i64* %20, align 8
  %51 = icmp ult i64 %50, 1024
  br i1 %51, label %72, label %52

52:                                               ; preds = %39
  %53 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %41, align 8
  %54 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %33, align 8
  %55 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %54, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %54, i64 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = icmp ugt i64 %58, 512
  br i1 %59, label %67, label %60

60:                                               ; preds = %56, %52
  %61 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %53, i64 1
  %62 = bitcast %"class.v8::internal::compiler::Node"** %61 to i64*
  store i64 512, i64* %62, align 8
  %63 = load i64, i64* %34, align 8
  %64 = bitcast %"class.v8::internal::compiler::Node"** %53 to i64*
  store i64 %63, i64* %64, align 8
  store %"class.v8::internal::compiler::Node"** %53, %"class.v8::internal::compiler::Node"*** %35, align 8
  %65 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %32, align 8
  %66 = load i64, i64* %20, align 8
  br label %67

67:                                               ; preds = %60, %56
  %68 = phi i64 [ %50, %56 ], [ %66, %60 ]
  %69 = phi %"class.v8::internal::compiler::Node"*** [ %41, %56 ], [ %65, %60 ]
  %70 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %69, i64 1
  store %"class.v8::internal::compiler::Node"*** %70, %"class.v8::internal::compiler::Node"**** %32, align 8
  %71 = add i64 %68, -512
  store i64 %71, i64* %20, align 8
  br label %72

72:                                               ; preds = %39, %67
  %73 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %48, i64 0, i32 0
  %74 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %74, i64 0, i32 5
  %76 = load i32, i32* %75, align 4
  %77 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %74) #5
  %78 = zext i1 %77 to i32
  %79 = add nsw i32 %76, %78
  %80 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %73, align 8
  %81 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %80) #5
  %82 = zext i1 %81 to i32
  %83 = add nsw i32 %79, %82
  %84 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %73, align 8
  %85 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %84, i64 0, i32 6
  %86 = load i32, i32* %85, align 8
  %87 = add nsw i32 %83, %86
  %88 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %84, i64 0, i32 7
  %89 = load i32, i32* %88, align 4
  %90 = add nsw i32 %87, %89
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %84, i64 0, i32 5
  %92 = load i32, i32* %91, align 4
  %93 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %84) #5
  %94 = zext i1 %93 to i32
  %95 = add nsw i32 %92, %94
  %96 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %73, align 8
  %97 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %96) #5
  %98 = zext i1 %97 to i32
  %99 = add nsw i32 %95, %98
  %100 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %73, align 8
  %101 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %100, i64 0, i32 6
  %102 = load i32, i32* %101, align 8
  %103 = add nsw i32 %99, %102
  %104 = icmp slt i32 %103, %90
  br i1 %104, label %105, label %36

105:                                              ; preds = %72
  %106 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %48, i64 0, i32 3
  %107 = ptrtoint %"class.v8::internal::compiler::Node"* %48 to i64
  %108 = add i64 %107, 32
  %109 = inttoptr i64 %108 to i64*
  %110 = add i32 %92, %102
  %111 = add i32 %110, %94
  %112 = add i32 %111, %98
  %113 = sext i32 %112 to i64
  %114 = add i32 %76, %86
  %115 = add i32 %114, %89
  %116 = add i32 %115, %78
  %117 = add i32 %116, %82
  br label %118

118:                                              ; preds = %126, %105
  %119 = phi i64 [ %113, %105 ], [ %131, %126 ]
  %120 = load i32, i32* %106, align 4
  %121 = and i32 %120, 251658240
  %122 = icmp eq i32 %121, 251658240
  br i1 %122, label %123, label %126

123:                                              ; preds = %118
  %124 = load i64, i64* %109, align 8
  %125 = add i64 %124, 16
  br label %126

126:                                              ; preds = %118, %123
  %127 = phi i64 [ %125, %123 ], [ %108, %118 ]
  %128 = inttoptr i64 %127 to %"class.v8::internal::compiler::Node"**
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %128, i64 %119
  %130 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %129, align 8
  call void @_ZN2v88internal8compiler18ControlEquivalence29DetermineParticipationEnqueueERNS0_9ZoneQueueIPNS1_4NodeEEES5_(%"class.v8::internal::compiler::ControlEquivalence"* %0, %"class.v8::internal::ZoneQueue"* nonnull dereferenceable(80) %4, %"class.v8::internal::compiler::Node"* %130)
  %131 = add nsw i64 %119, 1
  %132 = trunc i64 %131 to i32
  %133 = icmp eq i32 %117, %132
  br i1 %133, label %36, label %118

134:                                              ; preds = %36, %2
  %135 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base.32"* nonnull %135) #5
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %5) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18ControlEquivalence16RunUndirectedDFSEPNS1_4NodeE(%"class.v8::internal::compiler::ControlEquivalence"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::ZoneDeque", align 8
  %4 = alloca %"class.v8::internal::ZoneStack", align 8
  %5 = bitcast %"class.v8::internal::ZoneStack"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %5) #5
  %6 = bitcast %"class.v8::internal::compiler::ControlEquivalence"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.v8::internal::ZoneDeque"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %8) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 32, i1 false) #5
  %9 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %3, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %10 = bitcast %"struct.std::__1::__compressed_pair_elem.24"* %9 to i64*
  store i64 %7, i64* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %3, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %12 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #5
  %13 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %3, i64 0, i32 0, i32 0, i32 2, i32 1
  %14 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %13 to i64*
  store i64 %7, i64* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %3, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  store %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"* null, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"** %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3
  %17 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %3, i64 0, i32 0, i32 0, i32 0, i32 3
  %18 = bitcast %"class.std::__1::__compressed_pair.22"* %16 to i8*
  %19 = bitcast %"class.std::__1::__compressed_pair.22"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 32, i1 false) #5
  %20 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %3, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %23 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %3, i64 0, i32 0, i32 0, i32 2
  %24 = bitcast %"class.std::__1::__compressed_pair.26"* %22 to i8*
  %25 = bitcast %"class.std::__1::__compressed_pair.26"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false) #5
  %26 = bitcast i64* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #5
  %27 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %3, i64 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIN2v88internal8compiler18ControlEquivalence13DFSStackEntryENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base"* nonnull %27) #5
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %8) #5
  call void @_ZN2v88internal8compiler18ControlEquivalence7DFSPushERNS0_9ZoneStackINS2_13DFSStackEntryEEEPNS1_4NodeES8_NS2_12DFSDirectionE(%"class.v8::internal::compiler::ControlEquivalence"* %0, %"class.v8::internal::ZoneStack"* nonnull dereferenceable(80) %4, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* null, i32 0)
  %28 = load i8, i8* @_ZN2v88internal20FLAG_trace_turbo_ceqE, align 1, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %38, label %30

30:                                               ; preds = %2
  %31 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = and i32 %32, 16777215
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %35 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %35, i64 0, i32 1
  %37 = load i8*, i8** %36, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 %33, i8* %37) #5
  br label %38

38:                                               ; preds = %2, %30
  %39 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %327, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %0, i64 0, i32 4, i32 0
  %45 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %46 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %45 to i64*
  %47 = bitcast %"class.std::__1::vector.12"* %44 to i64*
  %48 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %44, i64 0, i32 0, i32 0
  br label %49

49:                                               ; preds = %42, %324
  %50 = phi i64 [ %40, %42 ], [ %325, %324 ]
  %51 = load i64, i64* %20, align 8
  %52 = add i64 %50, -1
  %53 = add i64 %52, %51
  %54 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %43, align 8
  %55 = udiv i64 %53, 73
  %56 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %54, i64 %55
  %57 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %56, align 8
  %58 = urem i64 %53, 73
  %59 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry", %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %57, i64 %58, i32 4
  %60 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %59, align 8
  %61 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry", %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %57, i64 %58, i32 0
  %62 = load i32, i32* %61, align 8
  switch i32 %62, label %320 [
    i32 0, label %63
    i32 1, label %180
  ]

63:                                               ; preds = %49
  %64 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %60, i64 0, i32 3
  %65 = load i32, i32* %64, align 4, !noalias !3
  %66 = lshr i32 %65, 24
  %67 = and i32 %66, 15
  %68 = icmp eq i32 %67, 15
  %69 = ptrtoint %"class.v8::internal::compiler::Node"* %60 to i64
  %70 = add i64 %69, 32
  br i1 %68, label %71, label %78

71:                                               ; preds = %63
  %72 = inttoptr i64 %70 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %73 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %72, align 8, !noalias !3
  %74 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %73 to i64
  %75 = add i64 %74, 16
  %76 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %73, i64 0, i32 1
  %77 = load i32, i32* %76, align 8, !noalias !3
  br label %78

78:                                               ; preds = %63, %71
  %79 = phi i64 [ %75, %71 ], [ %70, %63 ]
  %80 = phi i32 [ %77, %71 ], [ %67, %63 ]
  %81 = inttoptr i64 %79 to %"class.v8::internal::compiler::Node"**
  %82 = sext i32 %80 to i64
  %83 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %81, i64 %82
  %84 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry", %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %57, i64 %58, i32 1, i32 1
  %85 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %84, align 8
  %86 = icmp eq %"class.v8::internal::compiler::Node"** %85, %83
  br i1 %86, label %175, label %87

87:                                               ; preds = %78
  %88 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry", %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %57, i64 %58, i32 1, i32 0
  %89 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %88, align 8
  %90 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %85, align 8
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %85, i64 1
  store %"class.v8::internal::compiler::Node"** %91, %"class.v8::internal::compiler::Node"*** %84, align 8
  %92 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %89, i64 -1
  store %"struct.v8::internal::compiler::Node::Use"* %92, %"struct.v8::internal::compiler::Node::Use"** %88, align 8
  %93 = call zeroext i1 @_ZN2v88internal8compiler14NodeProperties13IsControlEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"* %89, %"class.v8::internal::compiler::Node"** %85) #5
  br i1 %93, label %94, label %324

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %90, i64 0, i32 3
  %96 = load i32, i32* %95, align 4
  %97 = and i32 %96, 16777215
  %98 = zext i32 %97 to i64
  %99 = load i64, i64* %46, align 8
  %100 = load i64, i64* %47, align 8
  %101 = sub i64 %99, %100
  %102 = ashr exact i64 %101, 3
  %103 = icmp ugt i64 %102, %98
  %104 = inttoptr i64 %100 to %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**
  br i1 %103, label %110, label %105

105:                                              ; preds = %94
  %106 = add nuw nsw i64 %98, 1
  %107 = sub nsw i64 %106, %102
  call void @_ZNSt3__16vectorIPN2v88internal8compiler18ControlEquivalence8NodeDataENS2_13ZoneAllocatorIS6_EEE8__appendEm(%"class.std::__1::vector.12"* %44, i64 %107) #5
  %108 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %48, align 8
  %109 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %108 to i64
  br label %110

110:                                              ; preds = %94, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %94 ]
  %112 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %108, %105 ], [ %104, %94 ]
  %113 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %112, i64 %98
  %114 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %113, align 8
  %115 = icmp eq %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %114, null
  br i1 %115, label %324, label %116

116:                                              ; preds = %110
  %117 = load i32, i32* %95, align 4
  %118 = and i32 %117, 16777215
  %119 = zext i32 %118 to i64
  %120 = load i64, i64* %46, align 8
  %121 = sub i64 %120, %111
  %122 = ashr exact i64 %121, 3
  %123 = icmp ugt i64 %122, %119
  %124 = inttoptr i64 %111 to %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**
  br i1 %123, label %130, label %125

125:                                              ; preds = %116
  %126 = add nuw nsw i64 %119, 1
  %127 = sub nsw i64 %126, %122
  call void @_ZNSt3__16vectorIPN2v88internal8compiler18ControlEquivalence8NodeDataENS2_13ZoneAllocatorIS6_EEE8__appendEm(%"class.std::__1::vector.12"* %44, i64 %127) #5
  %128 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %48, align 8
  %129 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %128 to i64
  br label %130

130:                                              ; preds = %116, %125
  %131 = phi i64 [ %129, %125 ], [ %111, %116 ]
  %132 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %128, %125 ], [ %124, %116 ]
  %133 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %132, i64 %119
  %134 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %133, align 8
  %135 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData", %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %134, i64 0, i32 2
  %136 = load i8, i8* %135, align 8
  %137 = and i8 %136, 1
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %139, label %324

139:                                              ; preds = %130
  %140 = load i32, i32* %95, align 4
  %141 = and i32 %140, 16777215
  %142 = zext i32 %141 to i64
  %143 = load i64, i64* %46, align 8
  %144 = sub i64 %143, %131
  %145 = ashr exact i64 %144, 3
  %146 = icmp ugt i64 %145, %142
  %147 = inttoptr i64 %131 to %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**
  br i1 %146, label %152, label %148

148:                                              ; preds = %139
  %149 = add nuw nsw i64 %142, 1
  %150 = sub nsw i64 %149, %145
  call void @_ZNSt3__16vectorIPN2v88internal8compiler18ControlEquivalence8NodeDataENS2_13ZoneAllocatorIS6_EEE8__appendEm(%"class.std::__1::vector.12"* %44, i64 %150) #5
  %151 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %48, align 8
  br label %152

152:                                              ; preds = %139, %148
  %153 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %151, %148 ], [ %147, %139 ]
  %154 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %153, i64 %142
  %155 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %154, align 8
  %156 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData", %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %155, i64 0, i32 2
  %157 = load i8, i8* %156, align 8
  %158 = and i8 %157, 2
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %165, label %160

160:                                              ; preds = %152
  %161 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry", %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %57, i64 %58, i32 3
  %162 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %161, align 8
  %163 = icmp eq %"class.v8::internal::compiler::Node"* %90, %162
  br i1 %163, label %324, label %164

164:                                              ; preds = %160
  call void @_ZN2v88internal8compiler18ControlEquivalence13VisitBackedgeEPNS1_4NodeES4_NS2_12DFSDirectionE(%"class.v8::internal::compiler::ControlEquivalence"* %0, %"class.v8::internal::compiler::Node"* %60, %"class.v8::internal::compiler::Node"* %90, i32 0)
  br label %324

165:                                              ; preds = %152
  call void @_ZN2v88internal8compiler18ControlEquivalence7DFSPushERNS0_9ZoneStackINS2_13DFSStackEntryEEEPNS1_4NodeES8_NS2_12DFSDirectionE(%"class.v8::internal::compiler::ControlEquivalence"* %0, %"class.v8::internal::ZoneStack"* nonnull dereferenceable(80) %4, %"class.v8::internal::compiler::Node"* %90, %"class.v8::internal::compiler::Node"* %60, i32 0)
  %166 = load i8, i8* @_ZN2v88internal20FLAG_trace_turbo_ceqE, align 1, !range !2
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %324, label %168

168:                                              ; preds = %165
  %169 = load i32, i32* %95, align 4
  %170 = and i32 %169, 16777215
  %171 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %90, i64 0, i32 0
  %172 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %172, i64 0, i32 1
  %174 = load i8*, i8** %173, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 %170, i8* %174) #5
  br label %324

175:                                              ; preds = %78
  %176 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry", %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %57, i64 %58, i32 2, i32 0
  %177 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %176, align 8
  %178 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %177, null
  br i1 %178, label %320, label %179

179:                                              ; preds = %175
  store i32 1, i32* %61, align 8
  call void @_ZN2v88internal8compiler18ControlEquivalence8VisitMidEPNS1_4NodeENS2_12DFSDirectionE(%"class.v8::internal::compiler::ControlEquivalence"* %0, %"class.v8::internal::compiler::Node"* %60, i32 0)
  br label %324

180:                                              ; preds = %49
  %181 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry", %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %57, i64 %58, i32 2, i32 0
  %182 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %181, align 8
  %183 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %182, null
  br i1 %183, label %295, label %184

184:                                              ; preds = %180
  %185 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %182, i64 0, i32 2
  %186 = load i32, i32* %185, align 8
  %187 = lshr i32 %186, 1
  %188 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %182, i64 1
  %189 = zext i32 %187 to i64
  %190 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %188, i64 %189
  %191 = and i32 %186, 1
  %192 = icmp eq i32 %191, 0
  %193 = ptrtoint %"struct.v8::internal::compiler::Node::Use"* %190 to i64
  %194 = select i1 %192, i64 16, i64 32
  %195 = add i64 %194, %193
  %196 = inttoptr i64 %195 to %"class.v8::internal::compiler::Node"**
  %197 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 %189
  br i1 %192, label %200, label %198

198:                                              ; preds = %184
  %199 = bitcast %"struct.v8::internal::compiler::Node::Use"* %190 to %"class.v8::internal::compiler::Node"*
  br label %203

200:                                              ; preds = %184
  %201 = bitcast %"struct.v8::internal::compiler::Node::Use"* %190 to %"class.v8::internal::compiler::Node"**
  %202 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %201, align 8
  br label %203

203:                                              ; preds = %198, %200
  %204 = phi %"class.v8::internal::compiler::Node"* [ %199, %198 ], [ %202, %200 ]
  %205 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry", %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %57, i64 %58, i32 2, i32 1
  %206 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %205, align 8
  store %"struct.v8::internal::compiler::Node::Use"* %206, %"struct.v8::internal::compiler::Node::Use"** %181, align 8
  %207 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %206, null
  br i1 %207, label %211, label %208

208:                                              ; preds = %203
  %209 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %206, i64 0, i32 0
  %210 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %209, align 8
  br label %211

211:                                              ; preds = %203, %208
  %212 = phi %"struct.v8::internal::compiler::Node::Use"* [ %210, %208 ], [ null, %203 ]
  store %"struct.v8::internal::compiler::Node::Use"* %212, %"struct.v8::internal::compiler::Node::Use"** %205, align 8
  %213 = call zeroext i1 @_ZN2v88internal8compiler14NodeProperties13IsControlEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"* nonnull %182, %"class.v8::internal::compiler::Node"** %197) #5
  br i1 %213, label %214, label %324

214:                                              ; preds = %211
  %215 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %204, i64 0, i32 3
  %216 = load i32, i32* %215, align 4
  %217 = and i32 %216, 16777215
  %218 = zext i32 %217 to i64
  %219 = load i64, i64* %46, align 8
  %220 = load i64, i64* %47, align 8
  %221 = sub i64 %219, %220
  %222 = ashr exact i64 %221, 3
  %223 = icmp ugt i64 %222, %218
  %224 = inttoptr i64 %220 to %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**
  br i1 %223, label %230, label %225

225:                                              ; preds = %214
  %226 = add nuw nsw i64 %218, 1
  %227 = sub nsw i64 %226, %222
  call void @_ZNSt3__16vectorIPN2v88internal8compiler18ControlEquivalence8NodeDataENS2_13ZoneAllocatorIS6_EEE8__appendEm(%"class.std::__1::vector.12"* %44, i64 %227) #5
  %228 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %48, align 8
  %229 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %228 to i64
  br label %230

230:                                              ; preds = %214, %225
  %231 = phi i64 [ %229, %225 ], [ %220, %214 ]
  %232 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %228, %225 ], [ %224, %214 ]
  %233 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %232, i64 %218
  %234 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %233, align 8
  %235 = icmp eq %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %234, null
  br i1 %235, label %324, label %236

236:                                              ; preds = %230
  %237 = load i32, i32* %215, align 4
  %238 = and i32 %237, 16777215
  %239 = zext i32 %238 to i64
  %240 = load i64, i64* %46, align 8
  %241 = sub i64 %240, %231
  %242 = ashr exact i64 %241, 3
  %243 = icmp ugt i64 %242, %239
  %244 = inttoptr i64 %231 to %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**
  br i1 %243, label %250, label %245

245:                                              ; preds = %236
  %246 = add nuw nsw i64 %239, 1
  %247 = sub nsw i64 %246, %242
  call void @_ZNSt3__16vectorIPN2v88internal8compiler18ControlEquivalence8NodeDataENS2_13ZoneAllocatorIS6_EEE8__appendEm(%"class.std::__1::vector.12"* %44, i64 %247) #5
  %248 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %48, align 8
  %249 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %248 to i64
  br label %250

250:                                              ; preds = %236, %245
  %251 = phi i64 [ %249, %245 ], [ %231, %236 ]
  %252 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %248, %245 ], [ %244, %236 ]
  %253 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %252, i64 %239
  %254 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %253, align 8
  %255 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData", %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %254, i64 0, i32 2
  %256 = load i8, i8* %255, align 8
  %257 = and i8 %256, 1
  %258 = icmp eq i8 %257, 0
  br i1 %258, label %259, label %324

259:                                              ; preds = %250
  %260 = load i32, i32* %215, align 4
  %261 = and i32 %260, 16777215
  %262 = zext i32 %261 to i64
  %263 = load i64, i64* %46, align 8
  %264 = sub i64 %263, %251
  %265 = ashr exact i64 %264, 3
  %266 = icmp ugt i64 %265, %262
  %267 = inttoptr i64 %251 to %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**
  br i1 %266, label %272, label %268

268:                                              ; preds = %259
  %269 = add nuw nsw i64 %262, 1
  %270 = sub nsw i64 %269, %265
  call void @_ZNSt3__16vectorIPN2v88internal8compiler18ControlEquivalence8NodeDataENS2_13ZoneAllocatorIS6_EEE8__appendEm(%"class.std::__1::vector.12"* %44, i64 %270) #5
  %271 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %48, align 8
  br label %272

272:                                              ; preds = %259, %268
  %273 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %271, %268 ], [ %267, %259 ]
  %274 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %273, i64 %262
  %275 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %274, align 8
  %276 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData", %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %275, i64 0, i32 2
  %277 = load i8, i8* %276, align 8
  %278 = and i8 %277, 2
  %279 = icmp eq i8 %278, 0
  br i1 %279, label %285, label %280

280:                                              ; preds = %272
  %281 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry", %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %57, i64 %58, i32 3
  %282 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %281, align 8
  %283 = icmp eq %"class.v8::internal::compiler::Node"* %204, %282
  br i1 %283, label %324, label %284

284:                                              ; preds = %280
  call void @_ZN2v88internal8compiler18ControlEquivalence13VisitBackedgeEPNS1_4NodeES4_NS2_12DFSDirectionE(%"class.v8::internal::compiler::ControlEquivalence"* %0, %"class.v8::internal::compiler::Node"* %60, %"class.v8::internal::compiler::Node"* %204, i32 1)
  br label %324

285:                                              ; preds = %272
  call void @_ZN2v88internal8compiler18ControlEquivalence7DFSPushERNS0_9ZoneStackINS2_13DFSStackEntryEEEPNS1_4NodeES8_NS2_12DFSDirectionE(%"class.v8::internal::compiler::ControlEquivalence"* %0, %"class.v8::internal::ZoneStack"* nonnull dereferenceable(80) %4, %"class.v8::internal::compiler::Node"* %204, %"class.v8::internal::compiler::Node"* %60, i32 1)
  %286 = load i8, i8* @_ZN2v88internal20FLAG_trace_turbo_ceqE, align 1, !range !2
  %287 = icmp eq i8 %286, 0
  br i1 %287, label %324, label %288

288:                                              ; preds = %285
  %289 = load i32, i32* %215, align 4
  %290 = and i32 %289, 16777215
  %291 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %204, i64 0, i32 0
  %292 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %291, align 8
  %293 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %292, i64 0, i32 1
  %294 = load i8*, i8** %293, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 %290, i8* %294) #5
  br label %324

295:                                              ; preds = %180
  %296 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %60, i64 0, i32 3
  %297 = load i32, i32* %296, align 4, !noalias !6
  %298 = lshr i32 %297, 24
  %299 = and i32 %298, 15
  %300 = icmp eq i32 %299, 15
  %301 = ptrtoint %"class.v8::internal::compiler::Node"* %60 to i64
  %302 = add i64 %301, 32
  br i1 %300, label %303, label %310

303:                                              ; preds = %295
  %304 = inttoptr i64 %302 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %305 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %304, align 8, !noalias !6
  %306 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %305 to i64
  %307 = add i64 %306, 16
  %308 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %305, i64 0, i32 1
  %309 = load i32, i32* %308, align 8, !noalias !6
  br label %310

310:                                              ; preds = %295, %303
  %311 = phi i64 [ %307, %303 ], [ %302, %295 ]
  %312 = phi i32 [ %309, %303 ], [ %299, %295 ]
  %313 = inttoptr i64 %311 to %"class.v8::internal::compiler::Node"**
  %314 = sext i32 %312 to i64
  %315 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %313, i64 %314
  %316 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry", %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %57, i64 %58, i32 1, i32 1
  %317 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %316, align 8
  %318 = icmp eq %"class.v8::internal::compiler::Node"** %317, %315
  br i1 %318, label %320, label %319

319:                                              ; preds = %310
  store i32 0, i32* %61, align 8
  call void @_ZN2v88internal8compiler18ControlEquivalence8VisitMidEPNS1_4NodeENS2_12DFSDirectionE(%"class.v8::internal::compiler::ControlEquivalence"* %0, %"class.v8::internal::compiler::Node"* %60, i32 1)
  br label %324

320:                                              ; preds = %175, %310, %49
  call void @_ZN2v88internal8compiler18ControlEquivalence6DFSPopERNS0_9ZoneStackINS2_13DFSStackEntryEEEPNS1_4NodeE(%"class.v8::internal::compiler::ControlEquivalence"* %0, %"class.v8::internal::ZoneStack"* nonnull dereferenceable(80) %4, %"class.v8::internal::compiler::Node"* %60)
  %321 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry", %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %57, i64 %58, i32 3
  %322 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %321, align 8
  %323 = load i32, i32* %61, align 8
  call void @_ZN2v88internal8compiler18ControlEquivalence9VisitPostEPNS1_4NodeES4_NS2_12DFSDirectionE(%"class.v8::internal::compiler::ControlEquivalence"* %0, %"class.v8::internal::compiler::Node"* %60, %"class.v8::internal::compiler::Node"* %322, i32 %323)
  br label %324

324:                                              ; preds = %110, %230, %250, %280, %284, %211, %285, %288, %130, %160, %164, %87, %165, %168, %320, %319, %179
  %325 = load i64, i64* %39, align 8
  %326 = icmp eq i64 %325, 0
  br i1 %326, label %327, label %49

327:                                              ; preds = %324, %38
  %328 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIN2v88internal8compiler18ControlEquivalence13DFSStackEntryENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base"* nonnull %328) #5
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %5) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18ControlEquivalence8VisitPreEPNS1_4NodeE(%"class.v8::internal::compiler::ControlEquivalence"* nocapture readnone, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* @_ZN2v88internal20FLAG_trace_turbo_ceqE, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 16777215
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %10 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %10, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 %8, i8* %12) #5
  br label %13

13:                                               ; preds = %2, %5
  ret void
}

declare void @_ZN2v88internal6PrintFEPKcz(i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18ControlEquivalence8VisitMidEPNS1_4NodeENS2_12DFSDirectionE(%"class.v8::internal::compiler::ControlEquivalence"*, %"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #0 align 2 {
  %4 = load i8, i8* @_ZN2v88internal20FLAG_trace_turbo_ceqE, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 16777215
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %11 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %11, i64 0, i32 1
  %13 = load i8*, i8** %12, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i32 %9, i8* %13) #5
  br label %14

14:                                               ; preds = %3, %6
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 16777215
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %0, i64 0, i32 4, i32 0
  %20 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %21 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.12"* %19 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = ashr exact i64 %25, 3
  %27 = icmp ugt i64 %26, %18
  %28 = inttoptr i64 %24 to %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**
  br i1 %27, label %34, label %29

29:                                               ; preds = %14
  %30 = add nuw nsw i64 %18, 1
  %31 = sub nsw i64 %30, %26
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler18ControlEquivalence8NodeDataENS2_13ZoneAllocatorIS6_EEE8__appendEm(%"class.std::__1::vector.12"* %19, i64 %31) #5
  %32 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %19, i64 0, i32 0, i32 0
  %33 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %32, align 8
  br label %34

34:                                               ; preds = %14, %29
  %35 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %33, %29 ], [ %28, %14 ]
  %36 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %35, i64 %18
  %37 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %36, align 8
  %38 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData", %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %37, i64 0, i32 1
  %39 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData", %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %37, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %40 = bitcast %"struct.std::__1::__list_node_base"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList", %"class.v8::internal::ZoneLinkedList"* %38, i64 0, i32 0, i32 0, i32 0
  %43 = inttoptr i64 %41 to %"struct.std::__1::__list_node_base"*
  %44 = icmp eq %"struct.std::__1::__list_node_base"* %42, %43
  br i1 %44, label %91, label %45

45:                                               ; preds = %34
  %46 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData", %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %37, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  br label %47

47:                                               ; preds = %87, %45
  %48 = phi %"struct.std::__1::__list_node_base"* [ %43, %45 ], [ %89, %87 ]
  %49 = phi i64 [ %41, %45 ], [ %88, %87 ]
  %50 = inttoptr i64 %49 to %"struct.std::__1::__list_node"*
  %51 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %50, i64 0, i32 1, i32 4
  %52 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %51, align 8
  %53 = icmp eq %"class.v8::internal::compiler::Node"* %52, %1
  br i1 %53, label %54, label %83

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %50, i64 0, i32 1, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %56, %2
  br i1 %57, label %83, label %58

58:                                               ; preds = %54
  %59 = load i8, i8* @_ZN2v88internal20FLAG_trace_turbo_ceqE, align 1, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %69, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %50, i64 0, i32 1, i32 3
  %63 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %63, i64 0, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = and i32 %65, 16777215
  %67 = load i32, i32* %15, align 4
  %68 = and i32 %67, 16777215
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i32 %66, i32 %68) #5
  br label %69

69:                                               ; preds = %61, %58
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %48, i64 0, i32 1
  %71 = bitcast %"struct.std::__1::__list_node_base"** %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %48, i64 0, i32 0
  %74 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %73, align 8
  %75 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %74, i64 0, i32 1
  %76 = bitcast %"struct.std::__1::__list_node_base"** %75 to i64*
  store i64 %72, i64* %76, align 8
  %77 = inttoptr i64 %49 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"struct.std::__1::__list_node_base"** %70 to i64**
  %80 = load i64*, i64** %79, align 8
  store i64 %78, i64* %80, align 8
  %81 = load i64, i64* %46, align 8
  %82 = add i64 %81, -1
  store i64 %82, i64* %46, align 8
  br label %87

83:                                               ; preds = %54, %47
  %84 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %48, i64 0, i32 1
  %85 = bitcast %"struct.std::__1::__list_node_base"** %84 to i64*
  %86 = load i64, i64* %85, align 8
  br label %87

87:                                               ; preds = %83, %69
  %88 = phi i64 [ %86, %83 ], [ %72, %69 ]
  %89 = inttoptr i64 %88 to %"struct.std::__1::__list_node_base"*
  %90 = icmp eq %"struct.std::__1::__list_node_base"* %42, %89
  br i1 %90, label %91, label %47

91:                                               ; preds = %87, %34
  %92 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData", %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %37, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %93 = load i64, i64* %92, align 8
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %100

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %0, i64 0, i32 1
  %97 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %97, i64 0, i32 2
  %99 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %98, align 8
  tail call void @_ZN2v88internal8compiler18ControlEquivalence13VisitBackedgeEPNS1_4NodeES4_NS2_12DFSDirectionE(%"class.v8::internal::compiler::ControlEquivalence"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %99, i32 0)
  br label %100

100:                                              ; preds = %95, %91
  %101 = load i8, i8* @_ZN2v88internal20FLAG_trace_turbo_ceqE, align 1, !range !2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %134, label %103

103:                                              ; preds = %100
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0)) #5
  %104 = load i64, i64* %40, align 8
  %105 = inttoptr i64 %104 to %"struct.std::__1::__list_node_base"*
  %106 = icmp eq %"struct.std::__1::__list_node_base"* %42, %105
  br i1 %106, label %107, label %110

107:                                              ; preds = %127, %103
  %108 = load i8, i8* @_ZN2v88internal20FLAG_trace_turbo_ceqE, align 1, !range !2
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %134, label %133

110:                                              ; preds = %103, %127
  %111 = phi %"struct.std::__1::__list_node_base"* [ %131, %127 ], [ %105, %103 ]
  %112 = phi i64 [ %130, %127 ], [ %104, %103 ]
  %113 = inttoptr i64 %112 to %"struct.std::__1::__list_node"*
  %114 = load i8, i8* @_ZN2v88internal20FLAG_trace_turbo_ceqE, align 1, !range !2
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %127, label %116

116:                                              ; preds = %110
  %117 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %113, i64 0, i32 1, i32 4
  %118 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %117, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %113, i64 0, i32 1, i32 3
  %120 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %119, align 8
  %121 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %120, i64 0, i32 3
  %122 = load i32, i32* %121, align 4
  %123 = and i32 %122, 16777215
  %124 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %118, i64 0, i32 3
  %125 = load i32, i32* %124, align 4
  %126 = and i32 %125, 16777215
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0), i32 %123, i32 %126) #5
  br label %127

127:                                              ; preds = %116, %110
  %128 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %111, i64 0, i32 1
  %129 = bitcast %"struct.std::__1::__list_node_base"** %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = inttoptr i64 %130 to %"struct.std::__1::__list_node_base"*
  %132 = icmp eq %"struct.std::__1::__list_node_base"* %42, %131
  br i1 %132, label %107, label %110

133:                                              ; preds = %107
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #5
  br label %134

134:                                              ; preds = %100, %107, %133
  %135 = bitcast %"class.v8::internal::ZoneLinkedList"* %38 to %"struct.std::__1::__list_node"**
  %136 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %135, align 8
  %137 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %136, i64 0, i32 1, i32 2
  %138 = load i64, i64* %137, align 8
  %139 = load i64, i64* %92, align 8
  %140 = icmp eq i64 %138, %139
  br i1 %140, label %141, label %144

141:                                              ; preds = %134
  %142 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %136, i64 0, i32 1, i32 1
  %143 = load i64, i64* %142, align 8
  br label %150

144:                                              ; preds = %134
  store i64 %139, i64* %137, align 8
  %145 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %0, i64 0, i32 3
  %146 = load i32, i32* %145, align 4
  %147 = add nsw i32 %146, 1
  store i32 %147, i32* %145, align 4
  %148 = sext i32 %146 to i64
  %149 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %136, i64 0, i32 1, i32 1
  store i64 %148, i64* %149, align 8
  br label %150

150:                                              ; preds = %141, %144
  %151 = phi i64 [ %143, %141 ], [ %148, %144 ]
  %152 = load i32, i32* %15, align 4
  %153 = and i32 %152, 16777215
  %154 = zext i32 %153 to i64
  %155 = load i64, i64* %21, align 8
  %156 = load i64, i64* %23, align 8
  %157 = sub i64 %155, %156
  %158 = ashr exact i64 %157, 3
  %159 = icmp ugt i64 %158, %154
  %160 = inttoptr i64 %156 to %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**
  br i1 %159, label %166, label %161

161:                                              ; preds = %150
  %162 = add nuw nsw i64 %154, 1
  %163 = sub nsw i64 %162, %158
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler18ControlEquivalence8NodeDataENS2_13ZoneAllocatorIS6_EEE8__appendEm(%"class.std::__1::vector.12"* %19, i64 %163) #5
  %164 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %19, i64 0, i32 0, i32 0
  %165 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %164, align 8
  br label %166

166:                                              ; preds = %150, %161
  %167 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %165, %161 ], [ %160, %150 ]
  %168 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %167, i64 %154
  %169 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %168, align 8
  %170 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData", %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %169, i64 0, i32 0
  store i64 %151, i64* %170, align 8
  %171 = load i8, i8* @_ZN2v88internal20FLAG_trace_turbo_ceqE, align 1, !range !2
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %194, label %173

173:                                              ; preds = %166
  %174 = load i32, i32* %15, align 4
  %175 = and i32 %174, 16777215
  %176 = zext i32 %175 to i64
  %177 = load i64, i64* %21, align 8
  %178 = load i64, i64* %23, align 8
  %179 = sub i64 %177, %178
  %180 = ashr exact i64 %179, 3
  %181 = icmp ugt i64 %180, %176
  %182 = inttoptr i64 %178 to %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**
  br i1 %181, label %188, label %183

183:                                              ; preds = %173
  %184 = add nuw nsw i64 %176, 1
  %185 = sub nsw i64 %184, %180
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler18ControlEquivalence8NodeDataENS2_13ZoneAllocatorIS6_EEE8__appendEm(%"class.std::__1::vector.12"* %19, i64 %185) #5
  %186 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %19, i64 0, i32 0, i32 0
  %187 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %186, align 8
  br label %188

188:                                              ; preds = %173, %183
  %189 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %187, %183 ], [ %182, %173 ]
  %190 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %189, i64 %176
  %191 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %190, align 8
  %192 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData", %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %191, i64 0, i32 0
  %193 = load i64, i64* %192, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0), i64 %193) #5
  br label %194

194:                                              ; preds = %166, %188
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18ControlEquivalence17BracketListDeleteERNS0_14ZoneLinkedListINS2_7BracketEEEPNS1_4NodeENS2_12DFSDirectionE(%"class.v8::internal::compiler::ControlEquivalence"* nocapture readnone, %"class.v8::internal::ZoneLinkedList"* dereferenceable(32), %"class.v8::internal::compiler::Node"* readnone, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList", %"class.v8::internal::ZoneLinkedList"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::__list_node_base"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList", %"class.v8::internal::ZoneLinkedList"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = inttoptr i64 %7 to %"struct.std::__1::__list_node_base"*
  %10 = icmp eq %"struct.std::__1::__list_node_base"* %8, %9
  br i1 %10, label %14, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList", %"class.v8::internal::ZoneLinkedList"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  br label %15

14:                                               ; preds = %55, %4
  ret void

15:                                               ; preds = %11, %55
  %16 = phi %"struct.std::__1::__list_node_base"* [ %9, %11 ], [ %57, %55 ]
  %17 = phi i64 [ %7, %11 ], [ %56, %55 ]
  %18 = inttoptr i64 %17 to %"struct.std::__1::__list_node"*
  %19 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %18, i64 0, i32 1, i32 4
  %20 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %19, align 8
  %21 = icmp eq %"class.v8::internal::compiler::Node"* %20, %2
  br i1 %21, label %22, label %51

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %18, i64 0, i32 1, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, %3
  br i1 %25, label %51, label %26

26:                                               ; preds = %22
  %27 = load i8, i8* @_ZN2v88internal20FLAG_trace_turbo_ceqE, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %37, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %18, i64 0, i32 1, i32 3
  %31 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %31, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %33, 16777215
  %35 = load i32, i32* %13, align 4
  %36 = and i32 %35, 16777215
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i32 %34, i32 %36) #5
  br label %37

37:                                               ; preds = %26, %29
  %38 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %16, i64 0, i32 1
  %39 = bitcast %"struct.std::__1::__list_node_base"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %16, i64 0, i32 0
  %42 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %41, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %42, i64 0, i32 1
  %44 = bitcast %"struct.std::__1::__list_node_base"** %43 to i64*
  store i64 %40, i64* %44, align 8
  %45 = inttoptr i64 %17 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"struct.std::__1::__list_node_base"** %38 to i64**
  %48 = load i64*, i64** %47, align 8
  store i64 %46, i64* %48, align 8
  %49 = load i64, i64* %12, align 8
  %50 = add i64 %49, -1
  store i64 %50, i64* %12, align 8
  br label %55

51:                                               ; preds = %22, %15
  %52 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %16, i64 0, i32 1
  %53 = bitcast %"struct.std::__1::__list_node_base"** %52 to i64*
  %54 = load i64, i64* %53, align 8
  br label %55

55:                                               ; preds = %51, %37
  %56 = phi i64 [ %54, %51 ], [ %40, %37 ]
  %57 = inttoptr i64 %56 to %"struct.std::__1::__list_node_base"*
  %58 = icmp eq %"struct.std::__1::__list_node_base"* %8, %57
  br i1 %58, label %14, label %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18ControlEquivalence13VisitBackedgeEPNS1_4NodeES4_NS2_12DFSDirectionE(%"class.v8::internal::compiler::ControlEquivalence"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #0 align 2 {
  %5 = load i8, i8* @_ZN2v88internal20FLAG_trace_turbo_ceqE, align 1, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %22, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 16777215
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %12 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %12, i64 0, i32 1
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 16777215
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 0
  %19 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %19, i64 0, i32 1
  %21 = load i8*, i8** %20, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), i32 %10, i8* %14, i32 %17, i8* %21) #5
  br label %22

22:                                               ; preds = %4, %7
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 16777215
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %0, i64 0, i32 4, i32 0
  %28 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %29 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::__1::vector.12"* %27 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %30, %32
  %34 = ashr exact i64 %33, 3
  %35 = icmp ugt i64 %34, %26
  %36 = inttoptr i64 %32 to %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**
  br i1 %35, label %42, label %37

37:                                               ; preds = %22
  %38 = add nuw nsw i64 %26, 1
  %39 = sub nsw i64 %38, %34
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler18ControlEquivalence8NodeDataENS2_13ZoneAllocatorIS6_EEE8__appendEm(%"class.std::__1::vector.12"* %27, i64 %39) #5
  %40 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %27, i64 0, i32 0, i32 0
  %41 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %40, align 8
  br label %42

42:                                               ; preds = %22, %37
  %43 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %41, %37 ], [ %36, %22 ]
  %44 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %43, i64 %26
  %45 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %44, align 8
  %46 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData", %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %45, i64 0, i32 1, i32 0
  %47 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData", %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %45, i64 0, i32 1, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %48 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %47, align 8, !noalias !9
  %49 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %48, i64 0, i32 2
  %50 = load i64, i64* %49, align 8, !noalias !9
  %51 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %48, i64 0, i32 3
  %52 = load i64, i64* %51, align 8, !noalias !9
  %53 = sub i64 %52, %50
  %54 = icmp ult i64 %53, 56
  br i1 %54, label %55, label %57, !prof !12

55:                                               ; preds = %42
  %56 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %48, i64 56) #5, !noalias !9
  br label %59

57:                                               ; preds = %42
  %58 = add i64 %50, 56
  store i64 %58, i64* %49, align 8, !noalias !9
  br label %59

59:                                               ; preds = %55, %57
  %60 = phi i64 [ %56, %55 ], [ %50, %57 ]
  %61 = inttoptr i64 %60 to %"struct.std::__1::__list_node"*
  %62 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %61, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %62, align 8, !noalias !9
  %63 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %61, i64 0, i32 1, i32 0
  store i32 %3, i32* %63, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %61, i64 0, i32 1, i32 1
  %65 = bitcast i64* %64 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %65, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %61, i64 0, i32 1, i32 3
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %66, align 8
  %67 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %61, i64 0, i32 1, i32 4
  store %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"** %67, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %61, i64 0, i32 0
  %69 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %46, i64 0, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %61, i64 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %69, %"struct.std::__1::__list_node_base"** %70, align 8
  %71 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %46, i64 0, i32 0, i32 0, i32 0
  %72 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %71, align 8
  store %"struct.std::__1::__list_node_base"* %72, %"struct.std::__1::__list_node_base"** %62, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %72, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %68, %"struct.std::__1::__list_node_base"** %73, align 8
  store %"struct.std::__1::__list_node_base"* %68, %"struct.std::__1::__list_node_base"** %71, align 8
  %74 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData", %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %45, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = add i64 %75, 1
  store i64 %76, i64* %74, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18ControlEquivalence16BracketListTRACEERNS0_14ZoneLinkedListINS2_7BracketEEE(%"class.v8::internal::compiler::ControlEquivalence"* nocapture readnone, %"class.v8::internal::ZoneLinkedList"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* @_ZN2v88internal20FLAG_trace_turbo_ceqE, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %39, label %5

5:                                                ; preds = %2
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0)) #5
  %6 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList", %"class.v8::internal::ZoneLinkedList"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList", %"class.v8::internal::ZoneLinkedList"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"struct.std::__1::__list_node_base"** %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = inttoptr i64 %9 to %"struct.std::__1::__list_node_base"*
  %11 = icmp eq %"struct.std::__1::__list_node_base"* %7, %10
  br i1 %11, label %12, label %15

12:                                               ; preds = %32, %5
  %13 = load i8, i8* @_ZN2v88internal20FLAG_trace_turbo_ceqE, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %39, label %38

15:                                               ; preds = %5, %32
  %16 = phi %"struct.std::__1::__list_node_base"* [ %36, %32 ], [ %10, %5 ]
  %17 = phi i64 [ %35, %32 ], [ %9, %5 ]
  %18 = inttoptr i64 %17 to %"struct.std::__1::__list_node"*
  %19 = load i8, i8* @_ZN2v88internal20FLAG_trace_turbo_ceqE, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %32, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %18, i64 0, i32 1, i32 4
  %23 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %18, i64 0, i32 1, i32 3
  %25 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %25, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, 16777215
  %29 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %23, i64 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, 16777215
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0), i32 %28, i32 %31) #5
  br label %32

32:                                               ; preds = %15, %21
  %33 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %16, i64 0, i32 1
  %34 = bitcast %"struct.std::__1::__list_node_base"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = inttoptr i64 %35 to %"struct.std::__1::__list_node_base"*
  %37 = icmp eq %"struct.std::__1::__list_node_base"* %7, %36
  br i1 %37, label %12, label %15

38:                                               ; preds = %12
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #5
  br label %39

39:                                               ; preds = %12, %2, %38
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18ControlEquivalence9VisitPostEPNS1_4NodeES4_NS2_12DFSDirectionE(%"class.v8::internal::compiler::ControlEquivalence"*, %"class.v8::internal::compiler::Node"* readonly, %"class.v8::internal::compiler::Node"* readonly, i32) local_unnamed_addr #0 align 2 {
  %5 = load i8, i8* @_ZN2v88internal20FLAG_trace_turbo_ceqE, align 1, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 16777215
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %12 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %12, i64 0, i32 1
  %14 = load i8*, i8** %13, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i32 %10, i8* %14) #5
  br label %15

15:                                               ; preds = %4, %7
  %16 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, 16777215
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %0, i64 0, i32 4, i32 0
  %21 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %22 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector.12"* %20 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = ashr exact i64 %26, 3
  %28 = icmp ugt i64 %27, %19
  %29 = inttoptr i64 %25 to %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**
  br i1 %28, label %35, label %30

30:                                               ; preds = %15
  %31 = add nuw nsw i64 %19, 1
  %32 = sub nsw i64 %31, %27
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler18ControlEquivalence8NodeDataENS2_13ZoneAllocatorIS6_EEE8__appendEm(%"class.std::__1::vector.12"* %20, i64 %32) #5
  %33 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %20, i64 0, i32 0, i32 0
  %34 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %33, align 8
  br label %35

35:                                               ; preds = %15, %30
  %36 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %34, %30 ], [ %29, %15 ]
  %37 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %36, i64 %19
  %38 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %37, align 8
  %39 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData", %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %38, i64 0, i32 1
  %40 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData", %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %38, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %41 = bitcast %"struct.std::__1::__list_node_base"** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList", %"class.v8::internal::ZoneLinkedList"* %39, i64 0, i32 0, i32 0, i32 0
  %44 = inttoptr i64 %42 to %"struct.std::__1::__list_node_base"*
  %45 = icmp eq %"struct.std::__1::__list_node_base"* %43, %44
  br i1 %45, label %92, label %46

46:                                               ; preds = %35
  %47 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData", %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %38, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  br label %48

48:                                               ; preds = %88, %46
  %49 = phi %"struct.std::__1::__list_node_base"* [ %44, %46 ], [ %90, %88 ]
  %50 = phi i64 [ %42, %46 ], [ %89, %88 ]
  %51 = inttoptr i64 %50 to %"struct.std::__1::__list_node"*
  %52 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %51, i64 0, i32 1, i32 4
  %53 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %52, align 8
  %54 = icmp eq %"class.v8::internal::compiler::Node"* %53, %1
  br i1 %54, label %55, label %84

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %51, i64 0, i32 1, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = icmp eq i32 %57, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %55
  %60 = load i8, i8* @_ZN2v88internal20FLAG_trace_turbo_ceqE, align 1, !range !2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %70, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %51, i64 0, i32 1, i32 3
  %64 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %64, i64 0, i32 3
  %66 = load i32, i32* %65, align 4
  %67 = and i32 %66, 16777215
  %68 = load i32, i32* %16, align 4
  %69 = and i32 %68, 16777215
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i32 %67, i32 %69) #5
  br label %70

70:                                               ; preds = %62, %59
  %71 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %49, i64 0, i32 1
  %72 = bitcast %"struct.std::__1::__list_node_base"** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %49, i64 0, i32 0
  %75 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %75, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base"** %76 to i64*
  store i64 %73, i64* %77, align 8
  %78 = inttoptr i64 %50 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"struct.std::__1::__list_node_base"** %71 to i64**
  %81 = load i64*, i64** %80, align 8
  store i64 %79, i64* %81, align 8
  %82 = load i64, i64* %47, align 8
  %83 = add i64 %82, -1
  store i64 %83, i64* %47, align 8
  br label %88

84:                                               ; preds = %55, %48
  %85 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %49, i64 0, i32 1
  %86 = bitcast %"struct.std::__1::__list_node_base"** %85 to i64*
  %87 = load i64, i64* %86, align 8
  br label %88

88:                                               ; preds = %84, %70
  %89 = phi i64 [ %87, %84 ], [ %73, %70 ]
  %90 = inttoptr i64 %89 to %"struct.std::__1::__list_node_base"*
  %91 = icmp eq %"struct.std::__1::__list_node_base"* %43, %90
  br i1 %91, label %92, label %48

92:                                               ; preds = %88, %35
  %93 = icmp eq %"class.v8::internal::compiler::Node"* %2, null
  br i1 %93, label %143, label %94

94:                                               ; preds = %92
  %95 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %96 = load i32, i32* %95, align 4
  %97 = and i32 %96, 16777215
  %98 = zext i32 %97 to i64
  %99 = load i64, i64* %22, align 8
  %100 = load i64, i64* %24, align 8
  %101 = sub i64 %99, %100
  %102 = ashr exact i64 %101, 3
  %103 = icmp ugt i64 %102, %98
  %104 = inttoptr i64 %100 to %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**
  br i1 %103, label %110, label %105

105:                                              ; preds = %94
  %106 = add nuw nsw i64 %98, 1
  %107 = sub nsw i64 %106, %102
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler18ControlEquivalence8NodeDataENS2_13ZoneAllocatorIS6_EEE8__appendEm(%"class.std::__1::vector.12"* %20, i64 %107) #5
  %108 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %20, i64 0, i32 0, i32 0
  %109 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %108, align 8
  br label %110

110:                                              ; preds = %94, %105
  %111 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %109, %105 ], [ %104, %94 ]
  %112 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %111, i64 %98
  %113 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %112, align 8
  %114 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData", %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %113, i64 0, i32 1, i32 0
  %115 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData", %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %38, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %116 = load i64, i64* %115, align 8
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %143, label %118

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %114, i64 0, i32 0, i32 0
  %120 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %40, align 8
  %121 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList", %"class.v8::internal::ZoneLinkedList"* %39, i64 0, i32 0, i32 0, i32 0, i32 0
  %122 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %121, align 8
  %123 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %122, i64 0, i32 1
  %124 = bitcast %"struct.std::__1::__list_node_base"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %120, i64 0, i32 0
  %127 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %126, align 8
  %128 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %127, i64 0, i32 1
  %129 = bitcast %"struct.std::__1::__list_node_base"** %128 to i64*
  store i64 %125, i64* %129, align 8
  %130 = bitcast %"struct.std::__1::__list_node_base"* %120 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"struct.std::__1::__list_node_base"** %123 to i64**
  %133 = load i64*, i64** %132, align 8
  store i64 %131, i64* %133, align 8
  %134 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %114, i64 0, i32 0, i32 0, i32 0
  %135 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %134, align 8
  %136 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %135, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %120, %"struct.std::__1::__list_node_base"** %136, align 8
  %137 = bitcast %"class.std::__1::list"* %114 to i64*
  %138 = load i64, i64* %137, align 8
  store i64 %138, i64* %130, align 8
  store %"struct.std::__1::__list_node_base"* %122, %"struct.std::__1::__list_node_base"** %134, align 8
  store %"struct.std::__1::__list_node_base"* %119, %"struct.std::__1::__list_node_base"** %123, align 8
  %139 = load i64, i64* %115, align 8
  %140 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData", %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %113, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %141 = load i64, i64* %140, align 8
  %142 = add i64 %141, %139
  store i64 %142, i64* %140, align 8
  store i64 0, i64* %115, align 8
  br label %143

143:                                              ; preds = %118, %110, %92
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18ControlEquivalence7DFSPushERNS0_9ZoneStackINS2_13DFSStackEntryEEEPNS1_4NodeES8_NS2_12DFSDirectionE(%"class.v8::internal::compiler::ControlEquivalence"*, %"class.v8::internal::ZoneStack"* dereferenceable(80), %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 16777215
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %0, i64 0, i32 4, i32 0
  %11 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %12 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.12"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 3
  %18 = icmp ugt i64 %17, %9
  %19 = inttoptr i64 %15 to %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**
  br i1 %18, label %25, label %20

20:                                               ; preds = %5
  %21 = add nuw nsw i64 %9, 1
  %22 = sub nsw i64 %21, %17
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler18ControlEquivalence8NodeDataENS2_13ZoneAllocatorIS6_EEE8__appendEm(%"class.std::__1::vector.12"* %10, i64 %22) #5
  %23 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %10, i64 0, i32 0, i32 0
  %24 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %23, align 8
  br label %25

25:                                               ; preds = %5, %20
  %26 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %24, %20 ], [ %19, %5 ]
  %27 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %26, i64 %9
  %28 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %27, align 8
  %29 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData", %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %28, i64 0, i32 2
  %30 = load i8, i8* %29, align 8
  %31 = or i8 %30, 2
  store i8 %31, i8* %29, align 8
  %32 = load i32, i32* %6, align 4, !noalias !13
  %33 = and i32 %32, 251658240
  %34 = icmp eq i32 %33, 251658240
  %35 = ptrtoint %"class.v8::internal::compiler::Node"* %2 to i64
  %36 = add i64 %35, 32
  br i1 %34, label %40, label %37

37:                                               ; preds = %25
  %38 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 -1, i32 1
  %39 = bitcast %"class.v8::internal::compiler::Type"* %38 to %"struct.v8::internal::compiler::Node::Use"*
  br label %47

40:                                               ; preds = %25
  %41 = inttoptr i64 %36 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %42 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %41, align 8, !noalias !13
  %43 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %42 to i64
  %44 = add i64 %43, 16
  %45 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %42, i64 -2, i32 1
  %46 = bitcast i32* %45 to %"struct.v8::internal::compiler::Node::Use"*
  br label %47

47:                                               ; preds = %37, %40
  %48 = phi %"struct.v8::internal::compiler::Node::Use"* [ %46, %40 ], [ %39, %37 ]
  %49 = phi i64 [ %44, %40 ], [ %36, %37 ]
  %50 = inttoptr i64 %49 to %"class.v8::internal::compiler::Node"**
  %51 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 4
  %52 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %51, align 8
  %53 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %52, i64 0, i32 0
  %56 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %55, align 8
  br label %57

57:                                               ; preds = %47, %54
  %58 = phi %"struct.v8::internal::compiler::Node::Use"* [ %56, %54 ], [ null, %47 ]
  %59 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %60 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %61, %64
  %66 = ashr exact i64 %65, 3
  %67 = icmp eq i64 %65, 0
  %68 = mul i64 %66, 73
  %69 = add i64 %68, -1
  %70 = select i1 %67, i64 0, i64 %69
  %71 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, %72
  %76 = icmp eq i64 %70, %75
  %77 = inttoptr i64 %64 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**
  %78 = inttoptr i64 %61 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**
  br i1 %76, label %79, label %86

79:                                               ; preds = %57
  %80 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %1, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNSt3__15dequeIN2v88internal8compiler18ControlEquivalence13DFSStackEntryENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %80) #5
  %81 = load i64, i64* %73, align 8
  %82 = load i64, i64* %71, align 8
  %83 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %62, align 8
  %84 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %59, align 8
  %85 = add i64 %82, %81
  br label %86

86:                                               ; preds = %79, %57
  %87 = phi i64 [ %85, %79 ], [ %75, %57 ]
  %88 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %84, %79 ], [ %78, %57 ]
  %89 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %83, %79 ], [ %77, %57 ]
  %90 = icmp eq %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %88, %89
  br i1 %90, label %98, label %91

91:                                               ; preds = %86
  %92 = udiv i64 %87, 73
  %93 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %89, i64 %92
  %94 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %93, align 8
  %95 = urem i64 %87, 73
  %96 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry", %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %94, i64 %95
  %97 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %96 to i8*
  br label %98

98:                                               ; preds = %86, %91
  %99 = phi i8* [ %97, %91 ], [ null, %86 ]
  %100 = bitcast i8* %99 to i32*
  store i32 %4, i32* %100, align 8
  %101 = getelementptr inbounds i8, i8* %99, i64 8
  %102 = bitcast i8* %101 to %"struct.v8::internal::compiler::Node::Use"**
  store %"struct.v8::internal::compiler::Node::Use"* %48, %"struct.v8::internal::compiler::Node::Use"** %102, align 8
  %103 = getelementptr inbounds i8, i8* %99, i64 16
  %104 = bitcast i8* %103 to %"class.v8::internal::compiler::Node"***
  store %"class.v8::internal::compiler::Node"** %50, %"class.v8::internal::compiler::Node"*** %104, align 8
  %105 = getelementptr inbounds i8, i8* %99, i64 24
  %106 = bitcast i8* %105 to %"struct.v8::internal::compiler::Node::Use"**
  store %"struct.v8::internal::compiler::Node::Use"* %52, %"struct.v8::internal::compiler::Node::Use"** %106, align 8
  %107 = getelementptr inbounds i8, i8* %99, i64 32
  %108 = bitcast i8* %107 to %"struct.v8::internal::compiler::Node::Use"**
  store %"struct.v8::internal::compiler::Node::Use"* %58, %"struct.v8::internal::compiler::Node::Use"** %108, align 8
  %109 = getelementptr inbounds i8, i8* %99, i64 40
  %110 = bitcast i8* %109 to %"class.v8::internal::compiler::Node"**
  store %"class.v8::internal::compiler::Node"* %3, %"class.v8::internal::compiler::Node"** %110, align 8
  %111 = getelementptr inbounds i8, i8* %99, i64 48
  %112 = bitcast i8* %111 to %"class.v8::internal::compiler::Node"**
  store %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"** %112, align 8
  %113 = load i64, i64* %73, align 8
  %114 = add i64 %113, 1
  store i64 %114, i64* %73, align 8
  ret void
}

declare zeroext i1 @_ZN2v88internal8compiler14NodeProperties13IsControlEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"*, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18ControlEquivalence6DFSPopERNS0_9ZoneStackINS2_13DFSStackEntryEEEPNS1_4NodeE(%"class.v8::internal::compiler::ControlEquivalence"*, %"class.v8::internal::ZoneStack"* nocapture dereferenceable(80), %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 16777215
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %0, i64 0, i32 4, i32 0
  %9 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %10 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.12"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 3
  %16 = icmp ugt i64 %15, %7
  %17 = inttoptr i64 %13 to %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**
  br i1 %16, label %23, label %18

18:                                               ; preds = %3
  %19 = add nuw nsw i64 %7, 1
  %20 = sub nsw i64 %19, %15
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler18ControlEquivalence8NodeDataENS2_13ZoneAllocatorIS6_EEE8__appendEm(%"class.std::__1::vector.12"* %8, i64 %20) #5
  %21 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %8, i64 0, i32 0, i32 0
  %22 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %21, align 8
  br label %23

23:                                               ; preds = %3, %18
  %24 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %22, %18 ], [ %17, %3 ]
  %25 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %24, i64 %7
  %26 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %25, align 8
  %27 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData", %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %26, i64 0, i32 2
  %28 = load i8, i8* %27, align 8
  %29 = and i8 %28, -3
  store i8 %29, i8* %27, align 8
  %30 = load i32, i32* %4, align 4
  %31 = and i32 %30, 16777215
  %32 = zext i32 %31 to i64
  %33 = load i64, i64* %10, align 8
  %34 = load i64, i64* %12, align 8
  %35 = sub i64 %33, %34
  %36 = ashr exact i64 %35, 3
  %37 = icmp ugt i64 %36, %32
  %38 = inttoptr i64 %34 to %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**
  br i1 %37, label %44, label %39

39:                                               ; preds = %23
  %40 = add nuw nsw i64 %32, 1
  %41 = sub nsw i64 %40, %36
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler18ControlEquivalence8NodeDataENS2_13ZoneAllocatorIS6_EEE8__appendEm(%"class.std::__1::vector.12"* %8, i64 %41) #5
  %42 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %8, i64 0, i32 0, i32 0
  %43 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %42, align 8
  br label %44

44:                                               ; preds = %23, %39
  %45 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %43, %39 ], [ %38, %23 ]
  %46 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %45, i64 %32
  %47 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %46, align 8
  %48 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData", %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %47, i64 0, i32 2
  %49 = load i8, i8* %48, align 8
  %50 = or i8 %49, 1
  store i8 %50, i8* %48, align 8
  %51 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %52, -1
  store i64 %55, i64* %51, align 8
  %56 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %57 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = sub i64 %58, %61
  %63 = ashr exact i64 %62, 3
  %64 = icmp eq i64 %62, 0
  %65 = mul i64 %63, 73
  %66 = add i64 %65, -1
  %67 = select i1 %64, i64 0, i64 %66
  %68 = sub i64 1, %52
  %69 = sub i64 %68, %54
  %70 = add i64 %69, %67
  %71 = icmp ult i64 %70, 146
  %72 = inttoptr i64 %58 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**
  br i1 %71, label %94, label %73

73:                                               ; preds = %44
  %74 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %72, i64 -1
  %75 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %77 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"** %76, align 8
  %78 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"* %77, null
  br i1 %78, label %83, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"* %77, i64 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = icmp ugt i64 %81, 73
  br i1 %82, label %91, label %83

83:                                               ; preds = %79, %73
  %84 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry", %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %75, i64 0, i32 1
  %85 = bitcast %"class.v8::internal::compiler::Node::InputEdges::iterator"* %84 to i64*
  store i64 73, i64* %85, align 8
  %86 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"** %76 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %75 to i64*
  store i64 %87, i64* %88, align 8
  %89 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"** %76 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %75, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %89, align 8
  %90 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %56, align 8
  br label %91

91:                                               ; preds = %83, %79
  %92 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %72, %79 ], [ %90, %83 ]
  %93 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %92, i64 -1
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %93, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %56, align 8
  br label %94

94:                                               ; preds = %44, %91
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18ControlEquivalence29DetermineParticipationEnqueueERNS0_9ZoneQueueIPNS1_4NodeEEES5_(%"class.v8::internal::compiler::ControlEquivalence"*, %"class.v8::internal::ZoneQueue"* dereferenceable(80), %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.v8::internal::compiler::Node"* %2 to i64
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 16777215
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %0, i64 0, i32 4, i32 0
  %10 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %11 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.12"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 3
  %17 = icmp ugt i64 %16, %8
  %18 = inttoptr i64 %14 to %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**
  br i1 %17, label %25, label %19

19:                                               ; preds = %3
  %20 = add nuw nsw i64 %8, 1
  %21 = sub nsw i64 %20, %16
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler18ControlEquivalence8NodeDataENS2_13ZoneAllocatorIS6_EEE8__appendEm(%"class.std::__1::vector.12"* %9, i64 %21) #5
  %22 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %9, i64 0, i32 0, i32 0
  %23 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %22, align 8
  %24 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %23 to i64
  br label %25

25:                                               ; preds = %3, %19
  %26 = phi i64 [ %24, %19 ], [ %14, %3 ]
  %27 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %23, %19 ], [ %18, %3 ]
  %28 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %27, i64 %8
  %29 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %28, align 8
  %30 = icmp eq %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %29, null
  br i1 %30, label %31, label %116

31:                                               ; preds = %25
  %32 = load i32, i32* %5, align 4
  %33 = and i32 %32, 16777215
  %34 = zext i32 %33 to i64
  %35 = load i64, i64* %11, align 8
  %36 = sub i64 %35, %26
  %37 = ashr exact i64 %36, 3
  %38 = icmp ugt i64 %37, %34
  br i1 %38, label %42, label %39

39:                                               ; preds = %31
  %40 = add nuw nsw i64 %34, 1
  %41 = sub nsw i64 %40, %37
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler18ControlEquivalence8NodeDataENS2_13ZoneAllocatorIS6_EEE8__appendEm(%"class.std::__1::vector.12"* %9, i64 %41) #5
  br label %42

42:                                               ; preds = %39, %31
  %43 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %0, i64 0, i32 0
  %44 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %44, i64 0, i32 2
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %44, i64 0, i32 3
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %48, %46
  %50 = icmp ult i64 %49, 48
  br i1 %50, label %51, label %53, !prof !12

51:                                               ; preds = %42
  %52 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %44, i64 48) #5
  br label %55

53:                                               ; preds = %42
  %54 = add i64 %46, 48
  store i64 %54, i64* %45, align 8
  br label %55

55:                                               ; preds = %51, %53
  %56 = phi i64 [ %52, %51 ], [ %46, %53 ]
  %57 = inttoptr i64 %56 to %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*
  %58 = bitcast %"class.v8::internal::compiler::ControlEquivalence"* %0 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData", %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %57, i64 0, i32 0
  store i64 -1, i64* %60, align 8
  %61 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData", %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %57, i64 0, i32 1
  %62 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList", %"class.v8::internal::ZoneLinkedList"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList", %"class.v8::internal::ZoneLinkedList"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %62, %"struct.std::__1::__list_node_base"** %63, align 8
  %64 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData", %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %57, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %62, %"struct.std::__1::__list_node_base"** %64, align 8
  %65 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData", %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %57, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData", %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %57, i64 0, i32 1, i32 0, i32 0, i32 1, i32 1
  %67 = bitcast %"struct.std::__1::__compressed_pair_elem.16"* %66 to i64*
  store i64 %59, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData", %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %57, i64 0, i32 2
  %69 = load i8, i8* %68, align 8
  %70 = and i8 %69, -4
  store i8 %70, i8* %68, align 8
  %71 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %9, i64 0, i32 0, i32 0
  %72 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %71, align 8
  %73 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %72, i64 %34
  store %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %57, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %73, align 8
  %74 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %75 = bitcast %"class.v8::internal::compiler::Node"**** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = bitcast %"class.v8::internal::compiler::Node"**** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = sub i64 %76, %79
  %81 = icmp eq i64 %80, 0
  %82 = shl i64 %80, 6
  %83 = add i64 %82, -1
  %84 = select i1 %81, i64 0, i64 %83
  %85 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, %86
  %90 = icmp eq i64 %84, %89
  %91 = inttoptr i64 %79 to %"class.v8::internal::compiler::Node"***
  %92 = inttoptr i64 %76 to %"class.v8::internal::compiler::Node"***
  br i1 %90, label %93, label %100

93:                                               ; preds = %55
  %94 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %1, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque.31"* %94) #5
  %95 = load i64, i64* %87, align 8
  %96 = load i64, i64* %85, align 8
  %97 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %77, align 8
  %98 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %74, align 8
  %99 = add i64 %96, %95
  br label %100

100:                                              ; preds = %93, %55
  %101 = phi i64 [ %99, %93 ], [ %89, %55 ]
  %102 = phi %"class.v8::internal::compiler::Node"*** [ %98, %93 ], [ %92, %55 ]
  %103 = phi %"class.v8::internal::compiler::Node"*** [ %97, %93 ], [ %91, %55 ]
  %104 = icmp eq %"class.v8::internal::compiler::Node"*** %102, %103
  br i1 %104, label %112, label %105

105:                                              ; preds = %100
  %106 = lshr i64 %101, 9
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %103, i64 %106
  %108 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %107, align 8
  %109 = and i64 %101, 511
  %110 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %108, i64 %109
  %111 = bitcast %"class.v8::internal::compiler::Node"** %110 to i64*
  br label %112

112:                                              ; preds = %100, %105
  %113 = phi i64* [ %111, %105 ], [ null, %100 ]
  store i64 %4, i64* %113, align 8
  %114 = load i64, i64* %87, align 8
  %115 = add i64 %114, 1
  store i64 %115, i64* %87, align 8
  br label %116

116:                                              ; preds = %25, %112
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN2v88internal8compiler18ControlEquivalence8NodeDataENS2_13ZoneAllocatorIS6_EEE8__appendEm(%"class.std::__1::vector.12"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %13, i64 %18
  %20 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #5
  %26 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  ret void

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.12"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 268435455
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.12"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #6
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 134217727
  br i1 %41, label %42, label %47

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %65, label %47

47:                                               ; preds = %38, %42
  %48 = phi i64 [ %45, %42 ], [ 268435455, %38 ]
  %49 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %50 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %49, align 8
  %51 = shl i64 %48, 3
  %52 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 2
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 3
  %55 = load i64, i64* %54, align 8
  %56 = sub i64 %55, %53
  %57 = icmp ugt i64 %51, %56
  br i1 %57, label %58, label %60, !prof !12

58:                                               ; preds = %47
  %59 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %50, i64 %51) #5
  br label %62

60:                                               ; preds = %47
  %61 = add i64 %53, %51
  store i64 %61, i64* %52, align 8
  br label %62

62:                                               ; preds = %60, %58
  %63 = phi i64 [ %59, %58 ], [ %53, %60 ]
  %64 = inttoptr i64 %63 to %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**
  br label %65

65:                                               ; preds = %62, %42
  %66 = phi i64 [ %48, %62 ], [ 0, %42 ]
  %67 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %64, %62 ], [ null, %42 ]
  %68 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %67, i64 %33
  %69 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %68 to i8*
  %70 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %67, i64 %66
  %71 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %68, i64 %1
  %72 = shl i64 %1, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 %72, i1 false) #5
  %73 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %70 to i64
  %74 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %71 to i64
  %75 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 0
  %76 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %75, align 8
  %77 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %76 to i64
  %78 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %6, align 8
  %79 = icmp eq %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %78, %76
  br i1 %79, label %249, label %80

80:                                               ; preds = %65
  %81 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %78, i64 -1
  %82 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %81 to i64
  %83 = sub i64 %82, %77
  %84 = lshr i64 %83, 3
  %85 = add nuw nsw i64 %84, 1
  %86 = icmp ult i64 %85, 4
  br i1 %86, label %179, label %87

87:                                               ; preds = %80
  %88 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %78, i64 -1
  %89 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %88 to i64
  %90 = sub i64 %89, %77
  %91 = lshr i64 %90, 3
  %92 = xor i64 %91, -1
  %93 = add nsw i64 %33, %92
  %94 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %67, i64 %93
  %95 = xor i64 %91, -1
  %96 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %78, i64 %95
  %97 = icmp ult %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %94, %78
  %98 = icmp ult %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %96, %68
  %99 = and i1 %97, %98
  br i1 %99, label %179, label %100

100:                                              ; preds = %87
  %101 = and i64 %85, 4611686018427387900
  %102 = sub nsw i64 0, %101
  %103 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %68, i64 %102
  %104 = sub nsw i64 0, %101
  %105 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %78, i64 %104
  %106 = add nsw i64 %101, -4
  %107 = lshr exact i64 %106, 2
  %108 = add nuw nsw i64 %107, 1
  %109 = and i64 %108, 1
  %110 = icmp eq i64 %106, 0
  br i1 %110, label %157, label %111

111:                                              ; preds = %100
  %112 = sub nuw nsw i64 %108, %109
  %113 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %68, i64 -1
  %114 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %78, i64 -1
  %115 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %68, i64 -1
  %116 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %78, i64 -1
  br label %117

117:                                              ; preds = %117, %111
  %118 = phi i64 [ 0, %111 ], [ %152, %117 ]
  %119 = phi i64 [ %112, %111 ], [ %153, %117 ]
  %120 = sub i64 0, %118
  %121 = sub i64 0, %118
  %122 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %113, i64 %120
  %123 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %114, i64 %121
  %124 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %123, i64 -1
  %125 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !16
  %127 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %123, i64 -2
  %128 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %127, i64 -1
  %129 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %128 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8, !alias.scope !16
  %131 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %122, i64 -1
  %132 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %131 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %132, align 8, !alias.scope !19, !noalias !16
  %133 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %122, i64 -2
  %134 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %133, i64 -1
  %135 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %134 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %135, align 8, !alias.scope !19, !noalias !16
  %136 = sub nuw nsw i64 -4, %118
  %137 = sub nuw nsw i64 -4, %118
  %138 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %115, i64 %136
  %139 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %116, i64 %137
  %140 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %139, i64 -1
  %141 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %140 to <2 x i64>*
  %142 = load <2 x i64>, <2 x i64>* %141, align 8, !alias.scope !16
  %143 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %139, i64 -2
  %144 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %143, i64 -1
  %145 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %144 to <2 x i64>*
  %146 = load <2 x i64>, <2 x i64>* %145, align 8, !alias.scope !16
  %147 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %138, i64 -1
  %148 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %147 to <2 x i64>*
  store <2 x i64> %142, <2 x i64>* %148, align 8, !alias.scope !19, !noalias !16
  %149 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %138, i64 -2
  %150 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %149, i64 -1
  %151 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %150 to <2 x i64>*
  store <2 x i64> %146, <2 x i64>* %151, align 8, !alias.scope !19, !noalias !16
  %152 = add i64 %118, 8
  %153 = add i64 %119, -2
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %117, !llvm.loop !21

155:                                              ; preds = %117
  %156 = sub nuw nsw i64 -8, %118
  br label %157

157:                                              ; preds = %155, %100
  %158 = phi i64 [ 0, %100 ], [ %156, %155 ]
  %159 = icmp eq i64 %109, 0
  br i1 %159, label %177, label %160

160:                                              ; preds = %157
  %161 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %68, i64 -1
  %162 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %78, i64 -1
  %163 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %161, i64 %158
  %164 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %162, i64 %158
  %165 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %164, i64 -1
  %166 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %165 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 8, !alias.scope !16
  %168 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %164, i64 -2
  %169 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %168, i64 -1
  %170 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %169 to <2 x i64>*
  %171 = load <2 x i64>, <2 x i64>* %170, align 8, !alias.scope !16
  %172 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %163, i64 -1
  %173 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %172 to <2 x i64>*
  store <2 x i64> %167, <2 x i64>* %173, align 8, !alias.scope !19, !noalias !16
  %174 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %163, i64 -2
  %175 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %174, i64 -1
  %176 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %175 to <2 x i64>*
  store <2 x i64> %171, <2 x i64>* %176, align 8, !alias.scope !19, !noalias !16
  br label %177

177:                                              ; preds = %157, %160
  %178 = icmp eq i64 %85, %101
  br i1 %178, label %249, label %179

179:                                              ; preds = %177, %87, %80
  %180 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %68, %87 ], [ %68, %80 ], [ %103, %177 ]
  %181 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %78, %87 ], [ %78, %80 ], [ %105, %177 ]
  %182 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %181, i64 -1
  %183 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %182 to i64
  %184 = sub i64 %183, %77
  %185 = lshr i64 %184, 3
  %186 = add nuw nsw i64 %185, 1
  %187 = and i64 %186, 7
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %200, label %189

189:                                              ; preds = %179, %189
  %190 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %193, %189 ], [ %180, %179 ]
  %191 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %194, %189 ], [ %181, %179 ]
  %192 = phi i64 [ %198, %189 ], [ %187, %179 ]
  %193 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %190, i64 -1
  %194 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %191, i64 -1
  %195 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %194 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %193 to i64*
  store i64 %196, i64* %197, align 8
  %198 = add i64 %192, -1
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %200, label %189, !llvm.loop !23

200:                                              ; preds = %189, %179
  %201 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ undef, %179 ], [ %193, %189 ]
  %202 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %180, %179 ], [ %193, %189 ]
  %203 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %181, %179 ], [ %194, %189 ]
  %204 = icmp ult i64 %184, 56
  br i1 %204, label %249, label %205

205:                                              ; preds = %200, %205
  %206 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %243, %205 ], [ %202, %200 ]
  %207 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %244, %205 ], [ %203, %200 ]
  %208 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %206, i64 -1
  %209 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %207, i64 -1
  %210 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %209 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %208 to i64*
  store i64 %211, i64* %212, align 8
  %213 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %206, i64 -2
  %214 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %207, i64 -2
  %215 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %214 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %213 to i64*
  store i64 %216, i64* %217, align 8
  %218 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %206, i64 -3
  %219 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %207, i64 -3
  %220 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %218 to i64*
  store i64 %221, i64* %222, align 8
  %223 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %206, i64 -4
  %224 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %207, i64 -4
  %225 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %223 to i64*
  store i64 %226, i64* %227, align 8
  %228 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %206, i64 -5
  %229 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %207, i64 -5
  %230 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %229 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %228 to i64*
  store i64 %231, i64* %232, align 8
  %233 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %206, i64 -6
  %234 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %207, i64 -6
  %235 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %234 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %233 to i64*
  store i64 %236, i64* %237, align 8
  %238 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %206, i64 -7
  %239 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %207, i64 -7
  %240 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %239 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %238 to i64*
  store i64 %241, i64* %242, align 8
  %243 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %206, i64 -8
  %244 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %207, i64 -8
  %245 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %244 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %243 to i64*
  store i64 %246, i64* %247, align 8
  %248 = icmp eq %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %244, %76
  br i1 %248, label %249, label %205, !llvm.loop !25

249:                                              ; preds = %200, %205, %177, %65
  %250 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %68, %65 ], [ %103, %177 ], [ %201, %200 ], [ %243, %205 ]
  %251 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %250 to i64
  store i64 %251, i64* %30, align 8
  store i64 %74, i64* %7, align 8
  store i64 %73, i64* %4, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__deque_baseIN2v88internal8compiler18ControlEquivalence13DFSStackEntryENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 1
  %3 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = udiv i64 %5, 73
  %7 = urem i64 %5, 73
  %8 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %3, i64 %6
  %9 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 2
  %10 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %9, align 8
  %11 = icmp eq %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %10, %3
  %12 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %10 to i64
  %13 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %3 to i64
  br i1 %11, label %14, label %16

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  br label %28

16:                                               ; preds = %1
  %17 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %8, align 8
  %18 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry", %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %17, i64 %7
  %19 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %5
  %22 = udiv i64 %21, 73
  %23 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %3, i64 %22
  %24 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %23, align 8
  %25 = urem i64 %21, 73
  %26 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry", %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %24, i64 %25
  %27 = icmp eq %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %26, %18
  br i1 %27, label %28, label %39

28:                                               ; preds = %52, %16, %14
  %29 = phi i64* [ %15, %14 ], [ %19, %16 ], [ %19, %52 ]
  store i64 0, i64* %29, align 8
  %30 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %9 to i64*
  %31 = sub i64 %12, %13
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, 2
  br i1 %33, label %34, label %89

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 1, i32 0, i32 1
  %36 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"** %35 to i64*
  %37 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"** %35 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**
  %38 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"** %35, align 8
  br label %57

39:                                               ; preds = %16, %52
  %40 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* [ %55, %52 ], [ %18, %16 ]
  %41 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %53, %52 ], [ %8, %16 ]
  %42 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry", %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %40, i64 1
  %43 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %42 to i64
  %44 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %41 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = icmp eq i64 %46, 4088
  br i1 %47, label %48, label %52

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %41, i64 1
  %50 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  br label %52

52:                                               ; preds = %48, %39
  %53 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %49, %48 ], [ %41, %39 ]
  %54 = phi i64 [ %51, %48 ], [ %43, %39 ]
  %55 = inttoptr i64 %54 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*
  %56 = icmp eq %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %26, %55
  br i1 %56, label %28, label %39

57:                                               ; preds = %78, %34
  %58 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %10, %34 ], [ %79, %78 ]
  %59 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %10, %34 ], [ %80, %78 ]
  %60 = phi i64 [ %12, %34 ], [ %81, %78 ]
  %61 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"* [ %38, %34 ], [ %83, %78 ]
  %62 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %3, %34 ], [ %84, %78 ]
  %63 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %62, align 8
  %64 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"* %61, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"* %61, i64 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = icmp ugt i64 %67, 73
  br i1 %68, label %78, label %69

69:                                               ; preds = %65, %57
  %70 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry", %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %63, i64 0, i32 1
  %71 = bitcast %"class.v8::internal::compiler::Node::InputEdges::iterator"* %70 to i64*
  store i64 73, i64* %71, align 8
  %72 = load i64, i64* %36, align 8
  %73 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %63 to i64*
  store i64 %72, i64* %73, align 8
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %63, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %37, align 8
  %74 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %63 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"*
  %75 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %2, align 8
  %76 = load i64, i64* %30, align 8
  %77 = inttoptr i64 %76 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**
  br label %78

78:                                               ; preds = %69, %65
  %79 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %58, %65 ], [ %77, %69 ]
  %80 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %59, %65 ], [ %77, %69 ]
  %81 = phi i64 [ %60, %65 ], [ %76, %69 ]
  %82 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %62, %65 ], [ %75, %69 ]
  %83 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"* [ %61, %65 ], [ %74, %69 ]
  %84 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %82, i64 1
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %84, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %2, align 8
  %85 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %84 to i64
  %86 = sub i64 %81, %85
  %87 = ashr exact i64 %86, 3
  %88 = icmp ugt i64 %87, 2
  br i1 %88, label %57, label %89

89:                                               ; preds = %78, %28
  %90 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %10, %28 ], [ %79, %78 ]
  %91 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %10, %28 ], [ %80, %78 ]
  %92 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %3, %28 ], [ %84, %78 ]
  %93 = phi i64 [ %32, %28 ], [ %87, %78 ]
  %94 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %92 to i64
  switch i64 %93, label %98 [
    i64 1, label %96
    i64 2, label %95
  ]

95:                                               ; preds = %89
  br label %96

96:                                               ; preds = %89, %95
  %97 = phi i64 [ 73, %95 ], [ 36, %89 ]
  store i64 %97, i64* %4, align 8
  br label %98

98:                                               ; preds = %96, %89
  %99 = icmp eq %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %92, %91
  br i1 %99, label %153, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 1, i32 0, i32 1
  %102 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"** %101 to i64*
  %103 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"** %101 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**
  %104 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"** %101, align 8
  %105 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %91, i64 -1
  %106 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %105 to i64
  %107 = sub i64 %106, %94
  %108 = and i64 %107, 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %126

110:                                              ; preds = %100
  %111 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %92, align 8
  %112 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"* %104, null
  br i1 %112, label %117, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"* %104, i64 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = icmp ugt i64 %115, 73
  br i1 %116, label %123, label %117

117:                                              ; preds = %113, %110
  %118 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry", %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %111, i64 0, i32 1
  %119 = bitcast %"class.v8::internal::compiler::Node::InputEdges::iterator"* %118 to i64*
  store i64 73, i64* %119, align 8
  %120 = load i64, i64* %102, align 8
  %121 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %111 to i64*
  store i64 %120, i64* %121, align 8
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %111, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %103, align 8
  %122 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %111 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"*
  br label %123

123:                                              ; preds = %117, %113
  %124 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"* [ %104, %113 ], [ %122, %117 ]
  %125 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %92, i64 1
  br label %126

126:                                              ; preds = %123, %100
  %127 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"* [ %104, %100 ], [ %124, %123 ]
  %128 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %92, %100 ], [ %125, %123 ]
  %129 = icmp ult i64 %107, 8
  br i1 %129, label %150, label %130

130:                                              ; preds = %126, %203
  %131 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"* [ %204, %203 ], [ %127, %126 ]
  %132 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %205, %203 ], [ %128, %126 ]
  %133 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %132, align 8
  %134 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"* %131, null
  br i1 %134, label %139, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"* %131, i64 0, i32 1
  %137 = load i64, i64* %136, align 8
  %138 = icmp ugt i64 %137, 73
  br i1 %138, label %145, label %139

139:                                              ; preds = %135, %130
  %140 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry", %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %133, i64 0, i32 1
  %141 = bitcast %"class.v8::internal::compiler::Node::InputEdges::iterator"* %140 to i64*
  store i64 73, i64* %141, align 8
  %142 = load i64, i64* %102, align 8
  %143 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %133 to i64*
  store i64 %142, i64* %143, align 8
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %133, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %103, align 8
  %144 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %133 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"*
  br label %145

145:                                              ; preds = %135, %139
  %146 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"* [ %131, %135 ], [ %144, %139 ]
  %147 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %132, i64 1
  %148 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %147, align 8
  %149 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"* %146, null
  br i1 %149, label %197, label %193

150:                                              ; preds = %203, %126
  %151 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %2, align 8
  %152 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %9, align 8
  br label %153

153:                                              ; preds = %150, %98
  %154 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %152, %150 ], [ %90, %98 ]
  %155 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %151, %150 ], [ %91, %98 ]
  %156 = icmp eq %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %154, %155
  br i1 %156, label %165, label %157

157:                                              ; preds = %153
  %158 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %155 to i64
  %159 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %154, i64 -1
  %160 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %159 to i64
  %161 = sub i64 %160, %158
  %162 = lshr i64 %161, 3
  %163 = xor i64 %162, -1
  %164 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %154, i64 %163
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %164, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %9, align 8
  br label %165

165:                                              ; preds = %157, %153
  %166 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 0
  %167 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %166, align 8
  %168 = icmp eq %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %167, null
  br i1 %168, label %192, label %169

169:                                              ; preds = %165
  %170 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %167 to i64
  %171 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %172 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = sub i64 %173, %170
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %192, label %177

177:                                              ; preds = %169
  %178 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %179 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %178, align 8
  %180 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %179, null
  br i1 %180, label %185, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %179, i64 0, i32 1
  %183 = load i64, i64* %182, align 8
  %184 = icmp ugt i64 %183, %175
  br i1 %184, label %192, label %185

185:                                              ; preds = %181, %177
  %186 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %167, i64 1
  %187 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %186 to i64*
  store i64 %175, i64* %187, align 8
  %188 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %178 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %167 to i64*
  store i64 %189, i64* %190, align 8
  %191 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %178 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"***
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %167, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %191, align 8
  br label %192

192:                                              ; preds = %165, %169, %181, %185
  ret void

193:                                              ; preds = %145
  %194 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"* %146, i64 0, i32 1
  %195 = load i64, i64* %194, align 8
  %196 = icmp ugt i64 %195, 73
  br i1 %196, label %203, label %197

197:                                              ; preds = %193, %145
  %198 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry", %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %148, i64 0, i32 1
  %199 = bitcast %"class.v8::internal::compiler::Node::InputEdges::iterator"* %198 to i64*
  store i64 73, i64* %199, align 8
  %200 = load i64, i64* %102, align 8
  %201 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %148 to i64*
  store i64 %200, i64* %201, align 8
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %148, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %103, align 8
  %202 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %148 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"*
  br label %203

203:                                              ; preds = %197, %193
  %204 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"* [ %146, %193 ], [ %202, %197 ]
  %205 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %132, i64 2
  %206 = icmp eq %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %205, %91
  br i1 %206, label %150, label %130
}

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #1

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__deque_baseIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base.32"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__deque_base.32", %"class.std::__1::__deque_base.32"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__deque_base.32", %"class.std::__1::__deque_base.32"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 9
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %3, i64 %6
  %8 = getelementptr inbounds %"class.std::__1::__deque_base.32", %"class.std::__1::__deque_base.32"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %8, align 8
  %10 = icmp eq %"class.v8::internal::compiler::Node"*** %9, %3
  %11 = ptrtoint %"class.v8::internal::compiler::Node"*** %9 to i64
  %12 = ptrtoint %"class.v8::internal::compiler::Node"*** %3 to i64
  br i1 %10, label %13, label %15

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::__deque_base.32", %"class.std::__1::__deque_base.32"* %0, i64 0, i32 2, i32 0, i32 0
  br label %28

15:                                               ; preds = %1
  %16 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %7, align 8
  %17 = and i64 %5, 511
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %16, i64 %17
  %19 = getelementptr inbounds %"class.std::__1::__deque_base.32", %"class.std::__1::__deque_base.32"* %0, i64 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %5
  %22 = lshr i64 %21, 9
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %3, i64 %22
  %24 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, align 8
  %25 = and i64 %21, 511
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %24, i64 %25
  %27 = icmp eq %"class.v8::internal::compiler::Node"** %26, %18
  br i1 %27, label %28, label %39

28:                                               ; preds = %52, %15, %13
  %29 = phi i64* [ %14, %13 ], [ %19, %15 ], [ %19, %52 ]
  store i64 0, i64* %29, align 8
  %30 = bitcast %"class.v8::internal::compiler::Node"**** %8 to i64*
  %31 = sub i64 %11, %12
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, 2
  br i1 %33, label %34, label %89

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::__deque_base.32", %"class.std::__1::__deque_base.32"* %0, i64 0, i32 2, i32 1, i32 0, i32 1
  %36 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %35 to i64*
  %37 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %35 to %"class.v8::internal::compiler::Node"***
  %38 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %35, align 8
  br label %57

39:                                               ; preds = %15, %52
  %40 = phi %"class.v8::internal::compiler::Node"** [ %55, %52 ], [ %18, %15 ]
  %41 = phi %"class.v8::internal::compiler::Node"*** [ %53, %52 ], [ %7, %15 ]
  %42 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %40, i64 1
  %43 = ptrtoint %"class.v8::internal::compiler::Node"** %42 to i64
  %44 = bitcast %"class.v8::internal::compiler::Node"*** %41 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = icmp eq i64 %46, 4096
  br i1 %47, label %48, label %52

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %41, i64 1
  %50 = bitcast %"class.v8::internal::compiler::Node"*** %49 to i64*
  %51 = load i64, i64* %50, align 8
  br label %52

52:                                               ; preds = %48, %39
  %53 = phi %"class.v8::internal::compiler::Node"*** [ %49, %48 ], [ %41, %39 ]
  %54 = phi i64 [ %51, %48 ], [ %43, %39 ]
  %55 = inttoptr i64 %54 to %"class.v8::internal::compiler::Node"**
  %56 = icmp eq %"class.v8::internal::compiler::Node"** %26, %55
  br i1 %56, label %28, label %39

57:                                               ; preds = %78, %34
  %58 = phi %"class.v8::internal::compiler::Node"*** [ %9, %34 ], [ %79, %78 ]
  %59 = phi %"class.v8::internal::compiler::Node"*** [ %9, %34 ], [ %80, %78 ]
  %60 = phi i64 [ %11, %34 ], [ %81, %78 ]
  %61 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %38, %34 ], [ %83, %78 ]
  %62 = phi %"class.v8::internal::compiler::Node"*** [ %3, %34 ], [ %84, %78 ]
  %63 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %62, align 8
  %64 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %61, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %61, i64 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = icmp ugt i64 %67, 512
  br i1 %68, label %78, label %69

69:                                               ; preds = %65, %57
  %70 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %63, i64 1
  %71 = bitcast %"class.v8::internal::compiler::Node"** %70 to i64*
  store i64 512, i64* %71, align 8
  %72 = load i64, i64* %36, align 8
  %73 = bitcast %"class.v8::internal::compiler::Node"** %63 to i64*
  store i64 %72, i64* %73, align 8
  store %"class.v8::internal::compiler::Node"** %63, %"class.v8::internal::compiler::Node"*** %37, align 8
  %74 = bitcast %"class.v8::internal::compiler::Node"** %63 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*
  %75 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %2, align 8
  %76 = load i64, i64* %30, align 8
  %77 = inttoptr i64 %76 to %"class.v8::internal::compiler::Node"***
  br label %78

78:                                               ; preds = %69, %65
  %79 = phi %"class.v8::internal::compiler::Node"*** [ %58, %65 ], [ %77, %69 ]
  %80 = phi %"class.v8::internal::compiler::Node"*** [ %59, %65 ], [ %77, %69 ]
  %81 = phi i64 [ %60, %65 ], [ %76, %69 ]
  %82 = phi %"class.v8::internal::compiler::Node"*** [ %62, %65 ], [ %75, %69 ]
  %83 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %61, %65 ], [ %74, %69 ]
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 1
  store %"class.v8::internal::compiler::Node"*** %84, %"class.v8::internal::compiler::Node"**** %2, align 8
  %85 = ptrtoint %"class.v8::internal::compiler::Node"*** %84 to i64
  %86 = sub i64 %81, %85
  %87 = ashr exact i64 %86, 3
  %88 = icmp ugt i64 %87, 2
  br i1 %88, label %57, label %89

89:                                               ; preds = %78, %28
  %90 = phi %"class.v8::internal::compiler::Node"*** [ %9, %28 ], [ %79, %78 ]
  %91 = phi %"class.v8::internal::compiler::Node"*** [ %9, %28 ], [ %80, %78 ]
  %92 = phi %"class.v8::internal::compiler::Node"*** [ %3, %28 ], [ %84, %78 ]
  %93 = phi i64 [ %32, %28 ], [ %87, %78 ]
  %94 = ptrtoint %"class.v8::internal::compiler::Node"*** %92 to i64
  switch i64 %93, label %98 [
    i64 1, label %96
    i64 2, label %95
  ]

95:                                               ; preds = %89
  br label %96

96:                                               ; preds = %89, %95
  %97 = phi i64 [ 512, %95 ], [ 256, %89 ]
  store i64 %97, i64* %4, align 8
  br label %98

98:                                               ; preds = %96, %89
  %99 = icmp eq %"class.v8::internal::compiler::Node"*** %92, %91
  br i1 %99, label %153, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"class.std::__1::__deque_base.32", %"class.std::__1::__deque_base.32"* %0, i64 0, i32 2, i32 1, i32 0, i32 1
  %102 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %101 to i64*
  %103 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %101 to %"class.v8::internal::compiler::Node"***
  %104 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %101, align 8
  %105 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %91, i64 -1
  %106 = ptrtoint %"class.v8::internal::compiler::Node"*** %105 to i64
  %107 = sub i64 %106, %94
  %108 = and i64 %107, 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %126

110:                                              ; preds = %100
  %111 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %92, align 8
  %112 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %104, null
  br i1 %112, label %117, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %104, i64 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = icmp ugt i64 %115, 512
  br i1 %116, label %123, label %117

117:                                              ; preds = %113, %110
  %118 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %111, i64 1
  %119 = bitcast %"class.v8::internal::compiler::Node"** %118 to i64*
  store i64 512, i64* %119, align 8
  %120 = load i64, i64* %102, align 8
  %121 = bitcast %"class.v8::internal::compiler::Node"** %111 to i64*
  store i64 %120, i64* %121, align 8
  store %"class.v8::internal::compiler::Node"** %111, %"class.v8::internal::compiler::Node"*** %103, align 8
  %122 = bitcast %"class.v8::internal::compiler::Node"** %111 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*
  br label %123

123:                                              ; preds = %117, %113
  %124 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %104, %113 ], [ %122, %117 ]
  %125 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %92, i64 1
  br label %126

126:                                              ; preds = %123, %100
  %127 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %104, %100 ], [ %124, %123 ]
  %128 = phi %"class.v8::internal::compiler::Node"*** [ %92, %100 ], [ %125, %123 ]
  %129 = icmp ult i64 %107, 8
  br i1 %129, label %150, label %130

130:                                              ; preds = %126, %203
  %131 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %204, %203 ], [ %127, %126 ]
  %132 = phi %"class.v8::internal::compiler::Node"*** [ %205, %203 ], [ %128, %126 ]
  %133 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %132, align 8
  %134 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %131, null
  br i1 %134, label %139, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %131, i64 0, i32 1
  %137 = load i64, i64* %136, align 8
  %138 = icmp ugt i64 %137, 512
  br i1 %138, label %145, label %139

139:                                              ; preds = %135, %130
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %133, i64 1
  %141 = bitcast %"class.v8::internal::compiler::Node"** %140 to i64*
  store i64 512, i64* %141, align 8
  %142 = load i64, i64* %102, align 8
  %143 = bitcast %"class.v8::internal::compiler::Node"** %133 to i64*
  store i64 %142, i64* %143, align 8
  store %"class.v8::internal::compiler::Node"** %133, %"class.v8::internal::compiler::Node"*** %103, align 8
  %144 = bitcast %"class.v8::internal::compiler::Node"** %133 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*
  br label %145

145:                                              ; preds = %135, %139
  %146 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %131, %135 ], [ %144, %139 ]
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %132, i64 1
  %148 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %147, align 8
  %149 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %146, null
  br i1 %149, label %197, label %193

150:                                              ; preds = %203, %126
  %151 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %2, align 8
  %152 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %8, align 8
  br label %153

153:                                              ; preds = %150, %98
  %154 = phi %"class.v8::internal::compiler::Node"*** [ %152, %150 ], [ %90, %98 ]
  %155 = phi %"class.v8::internal::compiler::Node"*** [ %151, %150 ], [ %91, %98 ]
  %156 = icmp eq %"class.v8::internal::compiler::Node"*** %154, %155
  br i1 %156, label %165, label %157

157:                                              ; preds = %153
  %158 = ptrtoint %"class.v8::internal::compiler::Node"*** %155 to i64
  %159 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %154, i64 -1
  %160 = ptrtoint %"class.v8::internal::compiler::Node"*** %159 to i64
  %161 = sub i64 %160, %158
  %162 = lshr i64 %161, 3
  %163 = xor i64 %162, -1
  %164 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %154, i64 %163
  store %"class.v8::internal::compiler::Node"*** %164, %"class.v8::internal::compiler::Node"**** %8, align 8
  br label %165

165:                                              ; preds = %157, %153
  %166 = getelementptr inbounds %"class.std::__1::__deque_base.32", %"class.std::__1::__deque_base.32"* %0, i64 0, i32 0, i32 0
  %167 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %166, align 8
  %168 = icmp eq %"class.v8::internal::compiler::Node"*** %167, null
  br i1 %168, label %192, label %169

169:                                              ; preds = %165
  %170 = ptrtoint %"class.v8::internal::compiler::Node"*** %167 to i64
  %171 = getelementptr inbounds %"class.std::__1::__deque_base.32", %"class.std::__1::__deque_base.32"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %172 = bitcast %"class.v8::internal::compiler::Node"**** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = sub i64 %173, %170
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %192, label %177

177:                                              ; preds = %169
  %178 = getelementptr inbounds %"class.std::__1::__deque_base.32", %"class.std::__1::__deque_base.32"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %179 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %178, align 8
  %180 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %179, null
  br i1 %180, label %185, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %179, i64 0, i32 1
  %183 = load i64, i64* %182, align 8
  %184 = icmp ugt i64 %183, %175
  br i1 %184, label %192, label %185

185:                                              ; preds = %181, %177
  %186 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %167, i64 1
  %187 = bitcast %"class.v8::internal::compiler::Node"*** %186 to i64*
  store i64 %175, i64* %187, align 8
  %188 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %178 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = bitcast %"class.v8::internal::compiler::Node"*** %167 to i64*
  store i64 %189, i64* %190, align 8
  %191 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %178 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %167, %"class.v8::internal::compiler::Node"**** %191, align 8
  br label %192

192:                                              ; preds = %165, %169, %181, %185
  ret void

193:                                              ; preds = %145
  %194 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %146, i64 0, i32 1
  %195 = load i64, i64* %194, align 8
  %196 = icmp ugt i64 %195, 512
  br i1 %196, label %203, label %197

197:                                              ; preds = %193, %145
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %148, i64 1
  %199 = bitcast %"class.v8::internal::compiler::Node"** %198 to i64*
  store i64 512, i64* %199, align 8
  %200 = load i64, i64* %102, align 8
  %201 = bitcast %"class.v8::internal::compiler::Node"** %148 to i64*
  store i64 %200, i64* %201, align 8
  store %"class.v8::internal::compiler::Node"** %148, %"class.v8::internal::compiler::Node"*** %103, align 8
  %202 = bitcast %"class.v8::internal::compiler::Node"** %148 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*
  br label %203

203:                                              ; preds = %197, %193
  %204 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %146, %193 ], [ %202, %197 ]
  %205 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %132, i64 2
  %206 = icmp eq %"class.v8::internal::compiler::Node"*** %205, %91
  br i1 %206, label %150, label %130
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque.31"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %3 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %4 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %5 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %6 = alloca %"struct.std::__1::__split_buffer.54", align 16
  %7 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %8 = getelementptr inbounds %"class.std::__1::deque.31", %"class.std::__1::deque.31"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %9 = getelementptr inbounds %"class.std::__1::deque.31", %"class.std::__1::deque.31"* %0, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, 511
  br i1 %11, label %12, label %22

12:                                               ; preds = %1
  %13 = add i64 %10, -512
  store i64 %13, i64* %9, align 8
  %14 = bitcast %"class.v8::internal::compiler::Node"*** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #5
  %15 = getelementptr inbounds %"class.std::__1::deque.31", %"class.std::__1::deque.31"* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::deque.31", %"class.std::__1::deque.31"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %16, align 8
  %18 = bitcast %"class.v8::internal::compiler::Node"*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.v8::internal::compiler::Node"*** %2 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %17, i64 1
  store %"class.v8::internal::compiler::Node"*** %21, %"class.v8::internal::compiler::Node"**** %16, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer.33"* %15, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #5
  br label %247

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.std::__1::deque.31", %"class.std::__1::deque.31"* %0, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::deque.31", %"class.std::__1::deque.31"* %0, i64 0, i32 0, i32 0, i32 2
  %25 = bitcast %"class.v8::internal::compiler::Node"**** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::deque.31", %"class.std::__1::deque.31"* %0, i64 0, i32 0, i32 0, i32 1
  %28 = bitcast %"class.v8::internal::compiler::Node"**** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  %31 = ashr exact i64 %30, 3
  %32 = getelementptr inbounds %"class.std::__1::deque.31", %"class.std::__1::deque.31"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = bitcast %"class.v8::internal::compiler::Node"**** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::deque.31"* %0 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %34, %36
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %31, %38
  br i1 %39, label %40, label %112

40:                                               ; preds = %22
  %41 = icmp eq i64 %34, %26
  br i1 %41, label %74, label %42

42:                                               ; preds = %40
  %43 = bitcast %"class.v8::internal::compiler::Node"*** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #5
  %44 = getelementptr inbounds %"class.std::__1::deque.31", %"class.std::__1::deque.31"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %45 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %44, align 8
  %46 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45, null
  br i1 %46, label %56, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp ult i64 %49, 512
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45 to %"class.v8::internal::compiler::Node"**
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %44 to i64*
  store i64 %54, i64* %55, align 8
  br label %72

56:                                               ; preds = %47, %42
  %57 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.41", %"class.v8::internal::RecyclingZoneAllocator.41"* %8, i64 0, i32 0, i32 0
  %58 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 3
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %62, %60
  %64 = icmp ult i64 %63, 4096
  br i1 %64, label %65, label %67, !prof !12

65:                                               ; preds = %56
  %66 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 4096) #5
  br label %69

67:                                               ; preds = %56
  %68 = add i64 %60, 4096
  store i64 %68, i64* %59, align 8
  br label %69

69:                                               ; preds = %67, %65
  %70 = phi i64 [ %66, %65 ], [ %60, %67 ]
  %71 = inttoptr i64 %70 to %"class.v8::internal::compiler::Node"**
  br label %72

72:                                               ; preds = %51, %69
  %73 = phi %"class.v8::internal::compiler::Node"** [ %52, %51 ], [ %71, %69 ]
  store %"class.v8::internal::compiler::Node"** %73, %"class.v8::internal::compiler::Node"*** %3, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.33"* %23, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #5
  br label %247

74:                                               ; preds = %40
  %75 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #5
  %76 = getelementptr inbounds %"class.std::__1::deque.31", %"class.std::__1::deque.31"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %77 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %76, align 8
  %78 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77, null
  br i1 %78, label %88, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77, i64 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = icmp ult i64 %81, 512
  br i1 %82, label %88, label %83

83:                                               ; preds = %79
  %84 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77 to %"class.v8::internal::compiler::Node"**
  %85 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %76 to i64*
  store i64 %86, i64* %87, align 8
  br label %104

88:                                               ; preds = %79, %74
  %89 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.41", %"class.v8::internal::RecyclingZoneAllocator.41"* %8, i64 0, i32 0, i32 0
  %90 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 3
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %94, %92
  %96 = icmp ult i64 %95, 4096
  br i1 %96, label %97, label %99, !prof !12

97:                                               ; preds = %88
  %98 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %90, i64 4096) #5
  br label %101

99:                                               ; preds = %88
  %100 = add i64 %92, 4096
  store i64 %100, i64* %91, align 8
  br label %101

101:                                              ; preds = %99, %97
  %102 = phi i64 [ %98, %97 ], [ %92, %99 ]
  %103 = inttoptr i64 %102 to %"class.v8::internal::compiler::Node"**
  br label %104

104:                                              ; preds = %83, %101
  %105 = phi %"class.v8::internal::compiler::Node"** [ %84, %83 ], [ %103, %101 ]
  store %"class.v8::internal::compiler::Node"** %105, %"class.v8::internal::compiler::Node"*** %4, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer.33"* %23, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #5
  %106 = bitcast %"class.v8::internal::compiler::Node"*** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #5
  %107 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %27, align 8
  %108 = bitcast %"class.v8::internal::compiler::Node"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.v8::internal::compiler::Node"*** %5 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %107, i64 1
  store %"class.v8::internal::compiler::Node"*** %111, %"class.v8::internal::compiler::Node"**** %27, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer.33"* %23, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #5
  br label %247

112:                                              ; preds = %22
  %113 = bitcast %"struct.std::__1::__split_buffer.54"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %113) #5
  %114 = ashr exact i64 %37, 2
  %115 = icmp eq i64 %37, 0
  %116 = select i1 %115, i64 1, i64 %114
  %117 = getelementptr inbounds %"class.std::__1::deque.31", %"class.std::__1::deque.31"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %118 = getelementptr inbounds %"struct.std::__1::__split_buffer.54", %"struct.std::__1::__split_buffer.54"* %6, i64 0, i32 3, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"*** null, %"class.v8::internal::compiler::Node"**** %118, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__split_buffer.54", %"struct.std::__1::__split_buffer.54"* %6, i64 0, i32 3, i32 1, i32 0
  store %"class.v8::internal::RecyclingZoneAllocator.37"* %117, %"class.v8::internal::RecyclingZoneAllocator.37"** %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::deque.31", %"class.std::__1::deque.31"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %121 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %120, align 8
  %122 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121, null
  br i1 %122, label %132, label %123

123:                                              ; preds = %112
  %124 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121, i64 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = icmp ult i64 %125, %116
  br i1 %126, label %132, label %127

127:                                              ; preds = %123
  %128 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121 to %"class.v8::internal::compiler::Node"***
  %129 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %120 to i64*
  store i64 %130, i64* %131, align 8
  br label %149

132:                                              ; preds = %123, %112
  %133 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.37", %"class.v8::internal::RecyclingZoneAllocator.37"* %117, i64 0, i32 0, i32 0
  %134 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %133, align 8
  %135 = shl i64 %116, 3
  %136 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 2
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 3
  %139 = load i64, i64* %138, align 8
  %140 = sub i64 %139, %137
  %141 = icmp ugt i64 %135, %140
  br i1 %141, label %142, label %144, !prof !12

142:                                              ; preds = %132
  %143 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %134, i64 %135) #5
  br label %146

144:                                              ; preds = %132
  %145 = add i64 %137, %135
  store i64 %145, i64* %136, align 8
  br label %146

146:                                              ; preds = %144, %142
  %147 = phi i64 [ %143, %142 ], [ %137, %144 ]
  %148 = inttoptr i64 %147 to %"class.v8::internal::compiler::Node"***
  br label %149

149:                                              ; preds = %127, %146
  %150 = phi %"class.v8::internal::compiler::Node"*** [ %128, %127 ], [ %148, %146 ]
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer.54", %"struct.std::__1::__split_buffer.54"* %6, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"*** %150, %"class.v8::internal::compiler::Node"**** %151, align 16
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %150, i64 %31
  %153 = getelementptr inbounds %"struct.std::__1::__split_buffer.54", %"struct.std::__1::__split_buffer.54"* %6, i64 0, i32 2
  store %"class.v8::internal::compiler::Node"*** %152, %"class.v8::internal::compiler::Node"**** %153, align 16
  %154 = getelementptr inbounds %"struct.std::__1::__split_buffer.54", %"struct.std::__1::__split_buffer.54"* %6, i64 0, i32 1
  store %"class.v8::internal::compiler::Node"*** %152, %"class.v8::internal::compiler::Node"**** %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %150, i64 %116
  store %"class.v8::internal::compiler::Node"*** %155, %"class.v8::internal::compiler::Node"**** %118, align 8
  %156 = getelementptr inbounds %"class.std::__1::deque.31", %"class.std::__1::deque.31"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %157 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %156, align 8
  %158 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157, null
  br i1 %158, label %168, label %159

159:                                              ; preds = %149
  %160 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157, i64 0, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = icmp ult i64 %161, 512
  br i1 %162, label %168, label %163

163:                                              ; preds = %159
  %164 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157 to %"class.v8::internal::compiler::Node"**
  %165 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %156 to i64*
  store i64 %166, i64* %167, align 8
  br label %184

168:                                              ; preds = %159, %149
  %169 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.41", %"class.v8::internal::RecyclingZoneAllocator.41"* %8, i64 0, i32 0, i32 0
  %170 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 2
  %172 = load i64, i64* %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 3
  %174 = load i64, i64* %173, align 8
  %175 = sub i64 %174, %172
  %176 = icmp ult i64 %175, 4096
  br i1 %176, label %177, label %179, !prof !12

177:                                              ; preds = %168
  %178 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %170, i64 4096) #5
  br label %181

179:                                              ; preds = %168
  %180 = add i64 %172, 4096
  store i64 %180, i64* %171, align 8
  br label %181

181:                                              ; preds = %179, %177
  %182 = phi i64 [ %178, %177 ], [ %172, %179 ]
  %183 = inttoptr i64 %182 to %"class.v8::internal::compiler::Node"**
  br label %184

184:                                              ; preds = %163, %181
  %185 = phi %"class.v8::internal::compiler::Node"** [ %164, %163 ], [ %183, %181 ]
  %186 = bitcast %"class.v8::internal::compiler::Node"*** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #5
  store %"class.v8::internal::compiler::Node"** %185, %"class.v8::internal::compiler::Node"*** %7, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.54"* nonnull %6, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #5
  %187 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %24, align 8
  %188 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %27, align 8
  %189 = icmp eq %"class.v8::internal::compiler::Node"*** %187, %188
  %190 = ptrtoint %"class.v8::internal::compiler::Node"*** %187 to i64
  br i1 %189, label %193, label %242

191:                                              ; preds = %242
  %192 = load i64, i64* %25, align 8
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i64 [ %192, %191 ], [ %190, %184 ]
  %195 = phi %"class.v8::internal::compiler::Node"*** [ %245, %191 ], [ %188, %184 ]
  %196 = ptrtoint %"class.v8::internal::compiler::Node"*** %195 to i64
  %197 = load i64, i64* %35, align 8
  %198 = bitcast %"struct.std::__1::__split_buffer.54"* %6 to i64*
  %199 = bitcast %"class.v8::internal::compiler::Node"**** %154 to i64*
  %200 = bitcast %"struct.std::__1::__split_buffer.54"* %6 to <2 x i64>*
  %201 = load <2 x i64>, <2 x i64>* %200, align 16
  store i64 %197, i64* %198, align 16
  %202 = bitcast %"class.std::__1::deque.31"* %0 to <2 x i64>*
  store <2 x i64> %201, <2 x i64>* %202, align 8
  store i64 %196, i64* %199, align 8
  %203 = bitcast %"class.v8::internal::compiler::Node"**** %153 to i64*
  %204 = bitcast %"class.v8::internal::compiler::Node"**** %118 to i64*
  %205 = bitcast %"class.v8::internal::compiler::Node"**** %153 to <2 x i64>*
  %206 = load <2 x i64>, <2 x i64>* %205, align 16
  store i64 %194, i64* %203, align 16
  %207 = load i64, i64* %33, align 8
  %208 = bitcast %"class.v8::internal::compiler::Node"**** %24 to <2 x i64>*
  store <2 x i64> %206, <2 x i64>* %208, align 8
  store i64 %207, i64* %204, align 8
  %209 = inttoptr i64 %194 to %"class.v8::internal::compiler::Node"***
  %210 = icmp eq %"class.v8::internal::compiler::Node"*** %195, %209
  %211 = inttoptr i64 %197 to %"class.v8::internal::compiler::Node"***
  br i1 %210, label %219, label %212

212:                                              ; preds = %193
  %213 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %209, i64 -1
  %214 = ptrtoint %"class.v8::internal::compiler::Node"*** %213 to i64
  %215 = sub i64 %214, %196
  %216 = lshr i64 %215, 3
  %217 = xor i64 %216, -1
  %218 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %209, i64 %217
  store %"class.v8::internal::compiler::Node"*** %218, %"class.v8::internal::compiler::Node"**** %153, align 16
  br label %219

219:                                              ; preds = %212, %193
  %220 = icmp eq i64 %197, 0
  br i1 %220, label %241, label %221

221:                                              ; preds = %219
  %222 = sub i64 %207, %197
  %223 = ashr exact i64 %222, 3
  %224 = icmp ult i64 %222, 16
  br i1 %224, label %241, label %225

225:                                              ; preds = %221
  %226 = load %"class.v8::internal::RecyclingZoneAllocator.37"*, %"class.v8::internal::RecyclingZoneAllocator.37"** %119, align 8
  %227 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.37", %"class.v8::internal::RecyclingZoneAllocator.37"* %226, i64 0, i32 1
  %228 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %227, align 8
  %229 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %228, null
  br i1 %229, label %234, label %230

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %228, i64 0, i32 1
  %232 = load i64, i64* %231, align 8
  %233 = icmp ugt i64 %232, %223
  br i1 %233, label %241, label %234

234:                                              ; preds = %230, %225
  %235 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %211, i64 1
  %236 = bitcast %"class.v8::internal::compiler::Node"*** %235 to i64*
  store i64 %223, i64* %236, align 8
  %237 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %227 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = inttoptr i64 %197 to i64*
  store i64 %238, i64* %239, align 8
  %240 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %227 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %211, %"class.v8::internal::compiler::Node"**** %240, align 8
  br label %241

241:                                              ; preds = %219, %221, %230, %234
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %113) #5
  br label %247

242:                                              ; preds = %184, %242
  %243 = phi %"class.v8::internal::compiler::Node"*** [ %244, %242 ], [ %187, %184 ]
  %244 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %243, i64 -1
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.54"* nonnull %6, %"class.v8::internal::compiler::Node"*** dereferenceable(8) %244)
  %245 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %27, align 8
  %246 = icmp eq %"class.v8::internal::compiler::Node"*** %244, %245
  br i1 %246, label %191, label %242

247:                                              ; preds = %241, %104, %72, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer.33"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.33", %"struct.std::__1::__split_buffer.33"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.33", %"struct.std::__1::__split_buffer.33"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  %9 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %10 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.33", %"struct.std::__1::__split_buffer.33"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.33", %"struct.std::__1::__split_buffer.33"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %14, align 8
  %16 = icmp ugt %"class.v8::internal::compiler::Node"*** %13, %15
  %17 = ptrtoint %"class.v8::internal::compiler::Node"*** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.v8::internal::compiler::Node"*** %24 to i8*
  %30 = bitcast %"class.v8::internal::compiler::Node"*** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #5
  %31 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"class.v8::internal::compiler::Node"*** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %24, i64 %26
  store %"class.v8::internal::compiler::Node"*** %34, %"class.v8::internal::compiler::Node"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %33, i64 %23
  store %"class.v8::internal::compiler::Node"*** %35, %"class.v8::internal::compiler::Node"**** %12, align 8
  %36 = bitcast %"class.v8::internal::compiler::Node"*** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"class.v8::internal::compiler::Node"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.33"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.33", %"struct.std::__1::__split_buffer.33"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to %"class.v8::internal::compiler::Node"***
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer.33", %"struct.std::__1::__split_buffer.33"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !12

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #5
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::internal::compiler::Node"***
  %75 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %76 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"class.v8::internal::compiler::Node"*** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"class.v8::internal::compiler::Node"*** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %44
  %85 = ptrtoint %"class.v8::internal::compiler::Node"*** %84 to i64
  %86 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %43
  %87 = ptrtoint %"class.v8::internal::compiler::Node"*** %86 to i64
  %88 = ptrtoint %"class.v8::internal::compiler::Node"*** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"class.v8::internal::compiler::Node"*** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"class.v8::internal::compiler::Node"*** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"class.v8::internal::compiler::Node"*** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %100, i64 1
  %108 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  %109 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !26

112:                                              ; preds = %99
  %113 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"class.v8::internal::compiler::Node"*** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"class.v8::internal::compiler::Node"*** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"class.v8::internal::compiler::Node"*** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"class.v8::internal::compiler::Node"*** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"class.v8::internal::compiler::Node"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 1
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 1
  %128 = bitcast %"class.v8::internal::compiler::Node"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::compiler::Node"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 2
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 2
  %133 = bitcast %"class.v8::internal::compiler::Node"*** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.v8::internal::compiler::Node"*** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 3
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 3
  %138 = bitcast %"class.v8::internal::compiler::Node"*** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.v8::internal::compiler::Node"*** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 4
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 4
  %143 = bitcast %"class.v8::internal::compiler::Node"*** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.v8::internal::compiler::Node"*** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 5
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 5
  %148 = bitcast %"class.v8::internal::compiler::Node"*** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.v8::internal::compiler::Node"*** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 6
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 6
  %153 = bitcast %"class.v8::internal::compiler::Node"*** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.v8::internal::compiler::Node"*** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 7
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 7
  %158 = bitcast %"class.v8::internal::compiler::Node"*** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.v8::internal::compiler::Node"*** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 8
  %162 = ptrtoint %"class.v8::internal::compiler::Node"*** %161 to i64
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 8
  %164 = icmp eq %"class.v8::internal::compiler::Node"*** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"class.v8::internal::compiler::Node"*** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"class.v8::internal::compiler::Node"***
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %172, i64 1
  %188 = bitcast %"class.v8::internal::compiler::Node"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %172, %"class.v8::internal::compiler::Node"**** %192, align 8
  %193 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %199, i64 1
  store %"class.v8::internal::compiler::Node"*** %200, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.33"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.33", %"struct.std::__1::__split_buffer.33"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.33", %"struct.std::__1::__split_buffer.33"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  %9 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %10 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.33", %"struct.std::__1::__split_buffer.33"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.33", %"struct.std::__1::__split_buffer.33"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %14, align 8
  %16 = icmp ugt %"class.v8::internal::compiler::Node"*** %13, %15
  %17 = ptrtoint %"class.v8::internal::compiler::Node"*** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.v8::internal::compiler::Node"*** %24 to i8*
  %30 = bitcast %"class.v8::internal::compiler::Node"*** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #5
  %31 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"class.v8::internal::compiler::Node"*** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %24, i64 %26
  store %"class.v8::internal::compiler::Node"*** %34, %"class.v8::internal::compiler::Node"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %33, i64 %23
  store %"class.v8::internal::compiler::Node"*** %35, %"class.v8::internal::compiler::Node"**** %12, align 8
  %36 = bitcast %"class.v8::internal::compiler::Node"*** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"class.v8::internal::compiler::Node"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.33"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.33", %"struct.std::__1::__split_buffer.33"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to %"class.v8::internal::compiler::Node"***
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer.33", %"struct.std::__1::__split_buffer.33"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !12

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #5
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::internal::compiler::Node"***
  %75 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %76 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"class.v8::internal::compiler::Node"*** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"class.v8::internal::compiler::Node"*** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %44
  %85 = ptrtoint %"class.v8::internal::compiler::Node"*** %84 to i64
  %86 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %43
  %87 = ptrtoint %"class.v8::internal::compiler::Node"*** %86 to i64
  %88 = ptrtoint %"class.v8::internal::compiler::Node"*** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"class.v8::internal::compiler::Node"*** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"class.v8::internal::compiler::Node"*** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"class.v8::internal::compiler::Node"*** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %100, i64 1
  %108 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  %109 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !27

112:                                              ; preds = %99
  %113 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"class.v8::internal::compiler::Node"*** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"class.v8::internal::compiler::Node"*** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"class.v8::internal::compiler::Node"*** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"class.v8::internal::compiler::Node"*** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"class.v8::internal::compiler::Node"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 1
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 1
  %128 = bitcast %"class.v8::internal::compiler::Node"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::compiler::Node"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 2
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 2
  %133 = bitcast %"class.v8::internal::compiler::Node"*** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.v8::internal::compiler::Node"*** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 3
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 3
  %138 = bitcast %"class.v8::internal::compiler::Node"*** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.v8::internal::compiler::Node"*** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 4
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 4
  %143 = bitcast %"class.v8::internal::compiler::Node"*** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.v8::internal::compiler::Node"*** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 5
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 5
  %148 = bitcast %"class.v8::internal::compiler::Node"*** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.v8::internal::compiler::Node"*** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 6
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 6
  %153 = bitcast %"class.v8::internal::compiler::Node"*** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.v8::internal::compiler::Node"*** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 7
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 7
  %158 = bitcast %"class.v8::internal::compiler::Node"*** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.v8::internal::compiler::Node"*** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 8
  %162 = ptrtoint %"class.v8::internal::compiler::Node"*** %161 to i64
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 8
  %164 = icmp eq %"class.v8::internal::compiler::Node"*** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"class.v8::internal::compiler::Node"*** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"class.v8::internal::compiler::Node"***
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %172, i64 1
  %188 = bitcast %"class.v8::internal::compiler::Node"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %172, %"class.v8::internal::compiler::Node"**** %192, align 8
  %193 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %199, i64 1
  store %"class.v8::internal::compiler::Node"*** %200, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer.33"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.33", %"struct.std::__1::__split_buffer.33"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.33", %"struct.std::__1::__split_buffer.33"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  br i1 %7, label %9, label %194

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.33", %"struct.std::__1::__split_buffer.33"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.33", %"struct.std::__1::__split_buffer.33"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = icmp ult %"class.v8::internal::compiler::Node"*** %11, %13
  %15 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  %17 = ptrtoint %"class.v8::internal::compiler::Node"*** %11 to i64
  br i1 %14, label %18, label %38

18:                                               ; preds = %9
  %19 = sub i64 %16, %17
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %25 = sub i64 %17, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %18
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, i64 %29
  %31 = bitcast %"class.v8::internal::compiler::Node"*** %30 to i8*
  %32 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #5
  %33 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %34

34:                                               ; preds = %18, %27
  %35 = phi %"class.v8::internal::compiler::Node"*** [ %33, %27 ], [ %11, %18 ]
  %36 = phi %"class.v8::internal::compiler::Node"*** [ %30, %27 ], [ %23, %18 ]
  store %"class.v8::internal::compiler::Node"*** %36, %"class.v8::internal::compiler::Node"**** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %35, i64 %22
  store %"class.v8::internal::compiler::Node"*** %37, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %194

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.33"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer.33", %"struct.std::__1::__split_buffer.33"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %47 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46, align 8
  %48 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp ult i64 %51, %43
  br i1 %52, label %59, label %53

53:                                               ; preds = %49
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47 to %"class.v8::internal::compiler::Node"***
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46 to i64*
  store i64 %56, i64* %57, align 8
  %58 = bitcast %"class.v8::internal::compiler::Node"**** %10 to i64*
  br label %79

59:                                               ; preds = %49, %38
  %60 = getelementptr inbounds %"struct.std::__1::__split_buffer.33", %"struct.std::__1::__split_buffer.33"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !12

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #5
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"class.v8::internal::compiler::Node"***
  %76 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %77 = bitcast %"class.v8::internal::compiler::Node"**** %10 to i64*
  %78 = load i64, i64* %77, align 8
  br label %79

79:                                               ; preds = %53, %73
  %80 = phi i64* [ %58, %53 ], [ %77, %73 ]
  %81 = phi i64 [ %17, %53 ], [ %78, %73 ]
  %82 = phi %"class.v8::internal::compiler::Node"*** [ %4, %53 ], [ %76, %73 ]
  %83 = phi %"class.v8::internal::compiler::Node"*** [ %54, %53 ], [ %75, %73 ]
  %84 = ptrtoint %"class.v8::internal::compiler::Node"*** %83 to i64
  %85 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %83, i64 %45
  %86 = ptrtoint %"class.v8::internal::compiler::Node"*** %85 to i64
  %87 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %83, i64 %43
  %88 = ptrtoint %"class.v8::internal::compiler::Node"*** %87 to i64
  %89 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %90 = sub i64 %81, %89
  %91 = ashr exact i64 %90, 3
  %92 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %85, i64 %91
  %93 = icmp eq i64 %90, 0
  br i1 %93, label %168, label %94

94:                                               ; preds = %79
  %95 = add i64 %90, -8
  %96 = lshr i64 %95, 3
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 7
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %115, label %100

100:                                              ; preds = %94, %100
  %101 = phi %"class.v8::internal::compiler::Node"*** [ %108, %100 ], [ %85, %94 ]
  %102 = phi i64 [ %109, %100 ], [ %86, %94 ]
  %103 = phi %"class.v8::internal::compiler::Node"*** [ %110, %100 ], [ %82, %94 ]
  %104 = phi i64 [ %111, %100 ], [ %98, %94 ]
  %105 = bitcast %"class.v8::internal::compiler::Node"*** %103 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = inttoptr i64 %102 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %101, i64 1
  %109 = ptrtoint %"class.v8::internal::compiler::Node"*** %108 to i64
  %110 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %103, i64 1
  %111 = add i64 %104, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %100, !llvm.loop !28

113:                                              ; preds = %100
  %114 = ptrtoint %"class.v8::internal::compiler::Node"*** %108 to i64
  br label %115

115:                                              ; preds = %94, %113
  %116 = phi %"class.v8::internal::compiler::Node"*** [ %85, %94 ], [ %108, %113 ]
  %117 = phi i64 [ %86, %94 ], [ %114, %113 ]
  %118 = phi %"class.v8::internal::compiler::Node"*** [ %82, %94 ], [ %110, %113 ]
  %119 = icmp ult i64 %95, 56
  br i1 %119, label %166, label %120

120:                                              ; preds = %115, %120
  %121 = phi %"class.v8::internal::compiler::Node"*** [ %162, %120 ], [ %116, %115 ]
  %122 = phi i64 [ %163, %120 ], [ %117, %115 ]
  %123 = phi %"class.v8::internal::compiler::Node"*** [ %164, %120 ], [ %118, %115 ]
  %124 = bitcast %"class.v8::internal::compiler::Node"*** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = inttoptr i64 %122 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 1
  %128 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 1
  %129 = bitcast %"class.v8::internal::compiler::Node"*** %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"class.v8::internal::compiler::Node"*** %127 to i64*
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 2
  %133 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 2
  %134 = bitcast %"class.v8::internal::compiler::Node"*** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.v8::internal::compiler::Node"*** %132 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 3
  %138 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 3
  %139 = bitcast %"class.v8::internal::compiler::Node"*** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"class.v8::internal::compiler::Node"*** %137 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 4
  %143 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 4
  %144 = bitcast %"class.v8::internal::compiler::Node"*** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"class.v8::internal::compiler::Node"*** %142 to i64*
  store i64 %145, i64* %146, align 8
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 5
  %148 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 5
  %149 = bitcast %"class.v8::internal::compiler::Node"*** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.v8::internal::compiler::Node"*** %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 6
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 6
  %154 = bitcast %"class.v8::internal::compiler::Node"*** %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast %"class.v8::internal::compiler::Node"*** %152 to i64*
  store i64 %155, i64* %156, align 8
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 7
  %158 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 7
  %159 = bitcast %"class.v8::internal::compiler::Node"*** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"class.v8::internal::compiler::Node"*** %157 to i64*
  store i64 %160, i64* %161, align 8
  %162 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 8
  %163 = ptrtoint %"class.v8::internal::compiler::Node"*** %162 to i64
  %164 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 8
  %165 = icmp eq %"class.v8::internal::compiler::Node"*** %92, %162
  br i1 %165, label %166, label %120

166:                                              ; preds = %120, %115
  %167 = ptrtoint %"class.v8::internal::compiler::Node"*** %92 to i64
  br label %168

168:                                              ; preds = %79, %166
  %169 = phi i64 [ %167, %166 ], [ %86, %79 ]
  %170 = load i64, i64* %39, align 8
  store i64 %84, i64* %39, align 8
  %171 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  store i64 %86, i64* %171, align 8
  store i64 %169, i64* %80, align 8
  %172 = load i64, i64* %15, align 8
  store i64 %88, i64* %15, align 8
  %173 = inttoptr i64 %170 to %"class.v8::internal::compiler::Node"***
  %174 = icmp eq i64 %170, 0
  br i1 %174, label %194, label %175

175:                                              ; preds = %168
  %176 = sub i64 %172, %170
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %194, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %194, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %173, i64 1
  %188 = bitcast %"class.v8::internal::compiler::Node"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %170 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %173, %"class.v8::internal::compiler::Node"**** %192, align 8
  %193 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  br label %194

194:                                              ; preds = %186, %182, %175, %168, %34, %2
  %195 = phi %"class.v8::internal::compiler::Node"*** [ %193, %186 ], [ %85, %182 ], [ %85, %175 ], [ %85, %168 ], [ %36, %34 ], [ %4, %2 ]
  %196 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %195, i64 -1
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %"class.v8::internal::compiler::Node"*** %196 to i64*
  store i64 %198, i64* %199, align 8
  %200 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %201 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %200, i64 -1
  store %"class.v8::internal::compiler::Node"*** %201, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.54"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.54", %"struct.std::__1::__split_buffer.54"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.54", %"struct.std::__1::__split_buffer.54"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  %9 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i64*
  br i1 %7, label %10, label %193

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.54", %"struct.std::__1::__split_buffer.54"* %0, i64 0, i32 1
  %12 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.54", %"struct.std::__1::__split_buffer.54"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %13, align 8
  %15 = icmp ugt %"class.v8::internal::compiler::Node"*** %12, %14
  %16 = ptrtoint %"class.v8::internal::compiler::Node"*** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.v8::internal::compiler::Node"*** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %12, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.v8::internal::compiler::Node"*** %23 to i8*
  %30 = bitcast %"class.v8::internal::compiler::Node"*** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #5
  %31 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.v8::internal::compiler::Node"*** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, i64 %26
  store %"class.v8::internal::compiler::Node"*** %34, %"class.v8::internal::compiler::Node"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %33, i64 %22
  store %"class.v8::internal::compiler::Node"*** %35, %"class.v8::internal::compiler::Node"**** %11, align 8
  %36 = bitcast %"class.v8::internal::compiler::Node"*** %34 to i64*
  br label %193

37:                                               ; preds = %10
  %38 = bitcast %"class.v8::internal::compiler::Node"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.54"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.54", %"struct.std::__1::__split_buffer.54"* %0, i64 0, i32 3, i32 1, i32 0
  %46 = load %"class.v8::internal::RecyclingZoneAllocator.37"*, %"class.v8::internal::RecyclingZoneAllocator.37"** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.37", %"class.v8::internal::RecyclingZoneAllocator.37"* %46, i64 0, i32 1
  %48 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47, align 8
  %49 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48, null
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48, i64 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %43
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48 to %"class.v8::internal::compiler::Node"***
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47 to i64*
  store i64 %57, i64* %58, align 8
  br label %76

59:                                               ; preds = %50, %37
  %60 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.37", %"class.v8::internal::RecyclingZoneAllocator.37"* %46, i64 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !12

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #5
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"class.v8::internal::compiler::Node"***
  br label %76

76:                                               ; preds = %54, %73
  %77 = phi %"class.v8::internal::compiler::Node"*** [ %55, %54 ], [ %75, %73 ]
  %78 = ptrtoint %"class.v8::internal::compiler::Node"*** %77 to i64
  %79 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %77, i64 %44
  %80 = ptrtoint %"class.v8::internal::compiler::Node"*** %79 to i64
  %81 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %77, i64 %43
  %82 = ptrtoint %"class.v8::internal::compiler::Node"*** %81 to i64
  %83 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %11, align 8
  %84 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = ptrtoint %"class.v8::internal::compiler::Node"*** %83 to i64
  %87 = sub i64 %85, %86
  %88 = ashr exact i64 %87, 3
  %89 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %79, i64 %88
  %90 = icmp eq i64 %87, 0
  br i1 %90, label %165, label %91

91:                                               ; preds = %76
  %92 = add i64 %87, -8
  %93 = lshr i64 %92, 3
  %94 = add nuw nsw i64 %93, 1
  %95 = and i64 %94, 7
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %112, label %97

97:                                               ; preds = %91, %97
  %98 = phi %"class.v8::internal::compiler::Node"*** [ %105, %97 ], [ %79, %91 ]
  %99 = phi i64 [ %106, %97 ], [ %80, %91 ]
  %100 = phi %"class.v8::internal::compiler::Node"*** [ %107, %97 ], [ %83, %91 ]
  %101 = phi i64 [ %108, %97 ], [ %95, %91 ]
  %102 = bitcast %"class.v8::internal::compiler::Node"*** %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %99 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %98, i64 1
  %106 = ptrtoint %"class.v8::internal::compiler::Node"*** %105 to i64
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %100, i64 1
  %108 = add i64 %101, -1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %97, !llvm.loop !29

110:                                              ; preds = %97
  %111 = ptrtoint %"class.v8::internal::compiler::Node"*** %105 to i64
  br label %112

112:                                              ; preds = %91, %110
  %113 = phi %"class.v8::internal::compiler::Node"*** [ %79, %91 ], [ %105, %110 ]
  %114 = phi i64 [ %80, %91 ], [ %111, %110 ]
  %115 = phi %"class.v8::internal::compiler::Node"*** [ %83, %91 ], [ %107, %110 ]
  %116 = icmp ult i64 %92, 56
  br i1 %116, label %163, label %117

117:                                              ; preds = %112, %117
  %118 = phi %"class.v8::internal::compiler::Node"*** [ %159, %117 ], [ %113, %112 ]
  %119 = phi i64 [ %160, %117 ], [ %114, %112 ]
  %120 = phi %"class.v8::internal::compiler::Node"*** [ %161, %117 ], [ %115, %112 ]
  %121 = bitcast %"class.v8::internal::compiler::Node"*** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = inttoptr i64 %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 1
  %125 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 1
  %126 = bitcast %"class.v8::internal::compiler::Node"*** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.v8::internal::compiler::Node"*** %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 2
  %130 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 2
  %131 = bitcast %"class.v8::internal::compiler::Node"*** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.v8::internal::compiler::Node"*** %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 3
  %135 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 3
  %136 = bitcast %"class.v8::internal::compiler::Node"*** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.v8::internal::compiler::Node"*** %134 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 4
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 4
  %141 = bitcast %"class.v8::internal::compiler::Node"*** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"class.v8::internal::compiler::Node"*** %139 to i64*
  store i64 %142, i64* %143, align 8
  %144 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 5
  %145 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 5
  %146 = bitcast %"class.v8::internal::compiler::Node"*** %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = bitcast %"class.v8::internal::compiler::Node"*** %144 to i64*
  store i64 %147, i64* %148, align 8
  %149 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 6
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 6
  %151 = bitcast %"class.v8::internal::compiler::Node"*** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast %"class.v8::internal::compiler::Node"*** %149 to i64*
  store i64 %152, i64* %153, align 8
  %154 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 7
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 7
  %156 = bitcast %"class.v8::internal::compiler::Node"*** %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %"class.v8::internal::compiler::Node"*** %154 to i64*
  store i64 %157, i64* %158, align 8
  %159 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 8
  %160 = ptrtoint %"class.v8::internal::compiler::Node"*** %159 to i64
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 8
  %162 = icmp eq %"class.v8::internal::compiler::Node"*** %89, %159
  br i1 %162, label %163, label %117

163:                                              ; preds = %117, %112
  %164 = ptrtoint %"class.v8::internal::compiler::Node"*** %89 to i64
  br label %165

165:                                              ; preds = %76, %163
  %166 = phi i64 [ %164, %163 ], [ %80, %76 ]
  %167 = load i64, i64* %39, align 8
  store i64 %78, i64* %39, align 8
  %168 = bitcast %"class.v8::internal::compiler::Node"**** %11 to i64*
  store i64 %80, i64* %168, align 8
  store i64 %166, i64* %84, align 8
  %169 = load i64, i64* %38, align 8
  store i64 %82, i64* %38, align 8
  %170 = inttoptr i64 %167 to %"class.v8::internal::compiler::Node"***
  %171 = icmp eq i64 %167, 0
  %172 = inttoptr i64 %166 to i64*
  br i1 %171, label %193, label %173

173:                                              ; preds = %165
  %174 = sub i64 %169, %167
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %193, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %193, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %170, i64 1
  %186 = bitcast %"class.v8::internal::compiler::Node"*** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %167 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %170, %"class.v8::internal::compiler::Node"**** %190, align 8
  %191 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64**
  %192 = load i64*, i64** %191, align 8
  br label %193

193:                                              ; preds = %184, %180, %173, %165, %32, %2
  %194 = phi i64* [ %192, %184 ], [ %172, %180 ], [ %172, %173 ], [ %172, %165 ], [ %36, %32 ], [ %9, %2 ]
  %195 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %194, align 8
  %197 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %197, i64 1
  store %"class.v8::internal::compiler::Node"*** %198, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.54"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.54", %"struct.std::__1::__split_buffer.54"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.54", %"struct.std::__1::__split_buffer.54"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  br i1 %7, label %9, label %192

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.54", %"struct.std::__1::__split_buffer.54"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.54", %"struct.std::__1::__split_buffer.54"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = icmp ult %"class.v8::internal::compiler::Node"*** %11, %13
  %15 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.v8::internal::compiler::Node"*** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, i64 %29
  %31 = bitcast %"class.v8::internal::compiler::Node"*** %30 to i8*
  %32 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #5
  %33 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.v8::internal::compiler::Node"*** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.v8::internal::compiler::Node"*** [ %30, %27 ], [ %23, %17 ]
  store %"class.v8::internal::compiler::Node"*** %36, %"class.v8::internal::compiler::Node"**** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %35, i64 %22
  store %"class.v8::internal::compiler::Node"*** %37, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %192

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.54"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer.54", %"struct.std::__1::__split_buffer.54"* %0, i64 0, i32 3, i32 1, i32 0
  %47 = load %"class.v8::internal::RecyclingZoneAllocator.37"*, %"class.v8::internal::RecyclingZoneAllocator.37"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.37", %"class.v8::internal::RecyclingZoneAllocator.37"* %47, i64 0, i32 1
  %49 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48, align 8
  %50 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49, null
  br i1 %50, label %60, label %51

51:                                               ; preds = %38
  %52 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49, i64 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %53, %43
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49 to %"class.v8::internal::compiler::Node"***
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48 to i64*
  store i64 %58, i64* %59, align 8
  br label %77

60:                                               ; preds = %51, %38
  %61 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.37", %"class.v8::internal::RecyclingZoneAllocator.37"* %47, i64 0, i32 0, i32 0
  %62 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %61, align 8
  %63 = shl i64 %43, 3
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 2
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 3
  %67 = load i64, i64* %66, align 8
  %68 = sub i64 %67, %65
  %69 = icmp ugt i64 %63, %68
  br i1 %69, label %70, label %72, !prof !12

70:                                               ; preds = %60
  %71 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %62, i64 %63) #5
  br label %74

72:                                               ; preds = %60
  %73 = add i64 %65, %63
  store i64 %73, i64* %64, align 8
  br label %74

74:                                               ; preds = %72, %70
  %75 = phi i64 [ %71, %70 ], [ %65, %72 ]
  %76 = inttoptr i64 %75 to %"class.v8::internal::compiler::Node"***
  br label %77

77:                                               ; preds = %55, %74
  %78 = phi %"class.v8::internal::compiler::Node"*** [ %56, %55 ], [ %76, %74 ]
  %79 = ptrtoint %"class.v8::internal::compiler::Node"*** %78 to i64
  %80 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %78, i64 %45
  %81 = ptrtoint %"class.v8::internal::compiler::Node"*** %80 to i64
  %82 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %78, i64 %43
  %83 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %84 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %85 = bitcast %"class.v8::internal::compiler::Node"**** %10 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = ptrtoint %"class.v8::internal::compiler::Node"*** %84 to i64
  %88 = sub i64 %86, %87
  %89 = ashr exact i64 %88, 3
  %90 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %80, i64 %89
  %91 = icmp eq i64 %88, 0
  br i1 %91, label %166, label %92

92:                                               ; preds = %77
  %93 = add i64 %88, -8
  %94 = lshr i64 %93, 3
  %95 = add nuw nsw i64 %94, 1
  %96 = and i64 %95, 7
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %113, label %98

98:                                               ; preds = %92, %98
  %99 = phi %"class.v8::internal::compiler::Node"*** [ %106, %98 ], [ %80, %92 ]
  %100 = phi i64 [ %107, %98 ], [ %81, %92 ]
  %101 = phi %"class.v8::internal::compiler::Node"*** [ %108, %98 ], [ %84, %92 ]
  %102 = phi i64 [ %109, %98 ], [ %96, %92 ]
  %103 = bitcast %"class.v8::internal::compiler::Node"*** %101 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = inttoptr i64 %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %99, i64 1
  %107 = ptrtoint %"class.v8::internal::compiler::Node"*** %106 to i64
  %108 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %101, i64 1
  %109 = add i64 %102, -1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %98, !llvm.loop !30

111:                                              ; preds = %98
  %112 = ptrtoint %"class.v8::internal::compiler::Node"*** %106 to i64
  br label %113

113:                                              ; preds = %92, %111
  %114 = phi %"class.v8::internal::compiler::Node"*** [ %80, %92 ], [ %106, %111 ]
  %115 = phi i64 [ %81, %92 ], [ %112, %111 ]
  %116 = phi %"class.v8::internal::compiler::Node"*** [ %84, %92 ], [ %108, %111 ]
  %117 = icmp ult i64 %93, 56
  br i1 %117, label %164, label %118

118:                                              ; preds = %113, %118
  %119 = phi %"class.v8::internal::compiler::Node"*** [ %160, %118 ], [ %114, %113 ]
  %120 = phi i64 [ %161, %118 ], [ %115, %113 ]
  %121 = phi %"class.v8::internal::compiler::Node"*** [ %162, %118 ], [ %116, %113 ]
  %122 = bitcast %"class.v8::internal::compiler::Node"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = inttoptr i64 %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 1
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 1
  %127 = bitcast %"class.v8::internal::compiler::Node"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.v8::internal::compiler::Node"*** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 2
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 2
  %132 = bitcast %"class.v8::internal::compiler::Node"*** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.v8::internal::compiler::Node"*** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 3
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 3
  %137 = bitcast %"class.v8::internal::compiler::Node"*** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.v8::internal::compiler::Node"*** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 4
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 4
  %142 = bitcast %"class.v8::internal::compiler::Node"*** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.v8::internal::compiler::Node"*** %140 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 5
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 5
  %147 = bitcast %"class.v8::internal::compiler::Node"*** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"class.v8::internal::compiler::Node"*** %145 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 6
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 6
  %152 = bitcast %"class.v8::internal::compiler::Node"*** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast %"class.v8::internal::compiler::Node"*** %150 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 7
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 7
  %157 = bitcast %"class.v8::internal::compiler::Node"*** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"class.v8::internal::compiler::Node"*** %155 to i64*
  store i64 %158, i64* %159, align 8
  %160 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 8
  %161 = ptrtoint %"class.v8::internal::compiler::Node"*** %160 to i64
  %162 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 8
  %163 = icmp eq %"class.v8::internal::compiler::Node"*** %90, %160
  br i1 %163, label %164, label %118

164:                                              ; preds = %118, %113
  %165 = ptrtoint %"class.v8::internal::compiler::Node"*** %90 to i64
  br label %166

166:                                              ; preds = %77, %164
  %167 = phi i64 [ %165, %164 ], [ %81, %77 ]
  %168 = load i64, i64* %39, align 8
  store i64 %79, i64* %39, align 8
  %169 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  store i64 %81, i64* %169, align 8
  store i64 %167, i64* %85, align 8
  %170 = load i64, i64* %15, align 8
  store i64 %83, i64* %15, align 8
  %171 = inttoptr i64 %168 to %"class.v8::internal::compiler::Node"***
  %172 = icmp eq i64 %168, 0
  br i1 %172, label %192, label %173

173:                                              ; preds = %166
  %174 = sub i64 %170, %168
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %192, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %192, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %171, i64 1
  %186 = bitcast %"class.v8::internal::compiler::Node"*** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %168 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %171, %"class.v8::internal::compiler::Node"**** %190, align 8
  %191 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  br label %192

192:                                              ; preds = %184, %180, %173, %166, %34, %2
  %193 = phi %"class.v8::internal::compiler::Node"*** [ %191, %184 ], [ %80, %180 ], [ %80, %173 ], [ %80, %166 ], [ %36, %34 ], [ %4, %2 ]
  %194 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %193, i64 -1
  %195 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %194 to i64*
  store i64 %196, i64* %197, align 8
  %198 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %199 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %198, i64 -1
  store %"class.v8::internal::compiler::Node"*** %199, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN2v88internal8compiler18ControlEquivalence13DFSStackEntryENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, align 8
  %3 = alloca %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, align 8
  %4 = alloca %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, align 8
  %5 = alloca %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, align 8
  %6 = alloca %"struct.std::__1::__split_buffer.62", align 16
  %7 = alloca %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, align 8
  %8 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %9 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, 72
  br i1 %11, label %12, label %22

12:                                               ; preds = %1
  %13 = add i64 %10, -73
  store i64 %13, i64* %9, align 8
  %14 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #5
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %16, align 8
  %18 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %2 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %17, i64 1
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %21, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %16, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal8compiler18ControlEquivalence13DFSStackEntryENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer"* %15, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #5
  br label %247

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %25 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %28 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  %31 = ashr exact i64 %30, 3
  %32 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::deque"* %0 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %34, %36
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %31, %38
  br i1 %39, label %40, label %112

40:                                               ; preds = %22
  %41 = icmp eq i64 %34, %26
  br i1 %41, label %74, label %42

42:                                               ; preds = %40
  %43 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #5
  %44 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %45 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"** %44, align 8
  %46 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"* %45, null
  br i1 %46, label %56, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"* %45, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp ult i64 %49, 73
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"* %45 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"* %45 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"** %44 to i64*
  store i64 %54, i64* %55, align 8
  br label %72

56:                                               ; preds = %47, %42
  %57 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.28", %"class.v8::internal::RecyclingZoneAllocator.28"* %8, i64 0, i32 0, i32 0
  %58 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 3
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %62, %60
  %64 = icmp ult i64 %63, 4088
  br i1 %64, label %65, label %67, !prof !12

65:                                               ; preds = %56
  %66 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 4088) #5
  br label %69

67:                                               ; preds = %56
  %68 = add i64 %60, 4088
  store i64 %68, i64* %59, align 8
  br label %69

69:                                               ; preds = %67, %65
  %70 = phi i64 [ %66, %65 ], [ %60, %67 ]
  %71 = inttoptr i64 %70 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*
  br label %72

72:                                               ; preds = %51, %69
  %73 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* [ %52, %51 ], [ %71, %69 ]
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %73, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %3, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal8compiler18ControlEquivalence13DFSStackEntryENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer"* %23, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #5
  br label %247

74:                                               ; preds = %40
  %75 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #5
  %76 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %77 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"** %76, align 8
  %78 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"* %77, null
  br i1 %78, label %88, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"* %77, i64 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = icmp ult i64 %81, 73
  br i1 %82, label %88, label %83

83:                                               ; preds = %79
  %84 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"* %77 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*
  %85 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"* %77 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"** %76 to i64*
  store i64 %86, i64* %87, align 8
  br label %104

88:                                               ; preds = %79, %74
  %89 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.28", %"class.v8::internal::RecyclingZoneAllocator.28"* %8, i64 0, i32 0, i32 0
  %90 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 3
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %94, %92
  %96 = icmp ult i64 %95, 4088
  br i1 %96, label %97, label %99, !prof !12

97:                                               ; preds = %88
  %98 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %90, i64 4088) #5
  br label %101

99:                                               ; preds = %88
  %100 = add i64 %92, 4088
  store i64 %100, i64* %91, align 8
  br label %101

101:                                              ; preds = %99, %97
  %102 = phi i64 [ %98, %97 ], [ %92, %99 ]
  %103 = inttoptr i64 %102 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*
  br label %104

104:                                              ; preds = %83, %101
  %105 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* [ %84, %83 ], [ %103, %101 ]
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %105, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %4, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal8compiler18ControlEquivalence13DFSStackEntryENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer"* %23, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #5
  %106 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #5
  %107 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %27, align 8
  %108 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %5 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %107, i64 1
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %111, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %27, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal8compiler18ControlEquivalence13DFSStackEntryENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer"* %23, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #5
  br label %247

112:                                              ; preds = %22
  %113 = bitcast %"struct.std::__1::__split_buffer.62"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %113) #5
  %114 = ashr exact i64 %37, 2
  %115 = icmp eq i64 %37, 0
  %116 = select i1 %115, i64 1, i64 %114
  %117 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %118 = getelementptr inbounds %"struct.std::__1::__split_buffer.62", %"struct.std::__1::__split_buffer.62"* %6, i64 0, i32 3, i32 0, i32 0
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** null, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %118, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__split_buffer.62", %"struct.std::__1::__split_buffer.62"* %6, i64 0, i32 3, i32 1, i32 0
  store %"class.v8::internal::RecyclingZoneAllocator"* %117, %"class.v8::internal::RecyclingZoneAllocator"** %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %121 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %120, align 8
  %122 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %121, null
  br i1 %122, label %132, label %123

123:                                              ; preds = %112
  %124 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %121, i64 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = icmp ult i64 %125, %116
  br i1 %126, label %132, label %127

127:                                              ; preds = %123
  %128 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %121 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**
  %129 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %121 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %120 to i64*
  store i64 %130, i64* %131, align 8
  br label %149

132:                                              ; preds = %123, %112
  %133 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %117, i64 0, i32 0, i32 0
  %134 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %133, align 8
  %135 = shl i64 %116, 3
  %136 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 2
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 3
  %139 = load i64, i64* %138, align 8
  %140 = sub i64 %139, %137
  %141 = icmp ugt i64 %135, %140
  br i1 %141, label %142, label %144, !prof !12

142:                                              ; preds = %132
  %143 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %134, i64 %135) #5
  br label %146

144:                                              ; preds = %132
  %145 = add i64 %137, %135
  store i64 %145, i64* %136, align 8
  br label %146

146:                                              ; preds = %144, %142
  %147 = phi i64 [ %143, %142 ], [ %137, %144 ]
  %148 = inttoptr i64 %147 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**
  br label %149

149:                                              ; preds = %127, %146
  %150 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %128, %127 ], [ %148, %146 ]
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer.62", %"struct.std::__1::__split_buffer.62"* %6, i64 0, i32 0
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %150, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %151, align 16
  %152 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %150, i64 %31
  %153 = getelementptr inbounds %"struct.std::__1::__split_buffer.62", %"struct.std::__1::__split_buffer.62"* %6, i64 0, i32 2
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %152, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %153, align 16
  %154 = getelementptr inbounds %"struct.std::__1::__split_buffer.62", %"struct.std::__1::__split_buffer.62"* %6, i64 0, i32 1
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %152, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %154, align 8
  %155 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %150, i64 %116
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %155, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %118, align 8
  %156 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %157 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"** %156, align 8
  %158 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"* %157, null
  br i1 %158, label %168, label %159

159:                                              ; preds = %149
  %160 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"* %157, i64 0, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = icmp ult i64 %161, 73
  br i1 %162, label %168, label %163

163:                                              ; preds = %159
  %164 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"* %157 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*
  %165 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"* %157 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry>::FreeBlock"** %156 to i64*
  store i64 %166, i64* %167, align 8
  br label %184

168:                                              ; preds = %159, %149
  %169 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.28", %"class.v8::internal::RecyclingZoneAllocator.28"* %8, i64 0, i32 0, i32 0
  %170 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 2
  %172 = load i64, i64* %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 3
  %174 = load i64, i64* %173, align 8
  %175 = sub i64 %174, %172
  %176 = icmp ult i64 %175, 4088
  br i1 %176, label %177, label %179, !prof !12

177:                                              ; preds = %168
  %178 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %170, i64 4088) #5
  br label %181

179:                                              ; preds = %168
  %180 = add i64 %172, 4088
  store i64 %180, i64* %171, align 8
  br label %181

181:                                              ; preds = %179, %177
  %182 = phi i64 [ %178, %177 ], [ %172, %179 ]
  %183 = inttoptr i64 %182 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*
  br label %184

184:                                              ; preds = %163, %181
  %185 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* [ %164, %163 ], [ %183, %181 ]
  %186 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #5
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"* %185, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %7, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal8compiler18ControlEquivalence13DFSStackEntryERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.62"* nonnull %6, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** nonnull dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #5
  %187 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %24, align 8
  %188 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %27, align 8
  %189 = icmp eq %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %187, %188
  %190 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %187 to i64
  br i1 %189, label %193, label %242

191:                                              ; preds = %242
  %192 = load i64, i64* %25, align 8
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i64 [ %192, %191 ], [ %190, %184 ]
  %195 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %245, %191 ], [ %188, %184 ]
  %196 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %195 to i64
  %197 = load i64, i64* %35, align 8
  %198 = bitcast %"struct.std::__1::__split_buffer.62"* %6 to i64*
  %199 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %154 to i64*
  %200 = bitcast %"struct.std::__1::__split_buffer.62"* %6 to <2 x i64>*
  %201 = load <2 x i64>, <2 x i64>* %200, align 16
  store i64 %197, i64* %198, align 16
  %202 = bitcast %"class.std::__1::deque"* %0 to <2 x i64>*
  store <2 x i64> %201, <2 x i64>* %202, align 8
  store i64 %196, i64* %199, align 8
  %203 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %153 to i64*
  %204 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %118 to i64*
  %205 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %153 to <2 x i64>*
  %206 = load <2 x i64>, <2 x i64>* %205, align 16
  store i64 %194, i64* %203, align 16
  %207 = load i64, i64* %33, align 8
  %208 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %24 to <2 x i64>*
  store <2 x i64> %206, <2 x i64>* %208, align 8
  store i64 %207, i64* %204, align 8
  %209 = inttoptr i64 %194 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**
  %210 = icmp eq %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %195, %209
  %211 = inttoptr i64 %197 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**
  br i1 %210, label %219, label %212

212:                                              ; preds = %193
  %213 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %209, i64 -1
  %214 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %213 to i64
  %215 = sub i64 %214, %196
  %216 = lshr i64 %215, 3
  %217 = xor i64 %216, -1
  %218 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %209, i64 %217
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %218, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %153, align 16
  br label %219

219:                                              ; preds = %212, %193
  %220 = icmp eq i64 %197, 0
  br i1 %220, label %241, label %221

221:                                              ; preds = %219
  %222 = sub i64 %207, %197
  %223 = ashr exact i64 %222, 3
  %224 = icmp ult i64 %222, 16
  br i1 %224, label %241, label %225

225:                                              ; preds = %221
  %226 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %119, align 8
  %227 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %226, i64 0, i32 1
  %228 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %227, align 8
  %229 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %228, null
  br i1 %229, label %234, label %230

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %228, i64 0, i32 1
  %232 = load i64, i64* %231, align 8
  %233 = icmp ugt i64 %232, %223
  br i1 %233, label %241, label %234

234:                                              ; preds = %230, %225
  %235 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %211, i64 1
  %236 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %235 to i64*
  store i64 %223, i64* %236, align 8
  %237 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %227 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = inttoptr i64 %197 to i64*
  store i64 %238, i64* %239, align 8
  %240 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %227 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"***
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %211, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %240, align 8
  br label %241

241:                                              ; preds = %219, %221, %230, %234
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %113) #5
  br label %247

242:                                              ; preds = %184, %242
  %243 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %244, %242 ], [ %187, %184 ]
  %244 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %243, i64 -1
  call void @_ZNSt3__114__split_bufferIPN2v88internal8compiler18ControlEquivalence13DFSStackEntryERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.62"* nonnull %6, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** dereferenceable(8) %244)
  %245 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %27, align 8
  %246 = icmp eq %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %244, %245
  br i1 %246, label %191, label %242

247:                                              ; preds = %241, %104, %72, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal8compiler18ControlEquivalence13DFSStackEntryENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %5, align 8
  %7 = icmp eq %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %4, %6
  %8 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %6 to i64
  %9 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %4 to i64
  %10 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %13 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %15 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %14, align 8
  %16 = icmp ugt %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %13, %15
  %17 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %24 to i8*
  %30 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #5
  %31 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %24, i64 %26
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %34, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3, align 8
  %35 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %33, i64 %23
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %35, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %12, align 8
  %36 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %46 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !12

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #5
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**
  %75 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %12, align 8
  %76 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %82 to i64
  %84 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %82, i64 %44
  %85 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %84 to i64
  %86 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %82, i64 %43
  %87 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %86 to i64
  %88 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %100, i64 1
  %108 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %107 to i64
  %109 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !31

112:                                              ; preds = %99
  %113 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %120, i64 1
  %127 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %122, i64 1
  %128 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %120, i64 2
  %132 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %122, i64 2
  %133 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %120, i64 3
  %137 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %122, i64 3
  %138 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %120, i64 4
  %142 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %122, i64 4
  %143 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %120, i64 5
  %147 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %122, i64 5
  %148 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %120, i64 6
  %152 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %122, i64 6
  %153 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %120, i64 7
  %157 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %122, i64 7
  %158 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %120, i64 8
  %162 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %161 to i64
  %163 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %122, i64 8
  %164 = icmp eq %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %172, i64 1
  %188 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %45 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"***
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %172, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %192, align 8
  %193 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3, align 8
  %200 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %199, i64 1
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %200, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal8compiler18ControlEquivalence13DFSStackEntryENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %5, align 8
  %7 = icmp eq %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %4, %6
  %8 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %6 to i64
  %9 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %4 to i64
  %10 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %13 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %15 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %14, align 8
  %16 = icmp ugt %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %13, %15
  %17 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %24 to i8*
  %30 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #5
  %31 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %24, i64 %26
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %34, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3, align 8
  %35 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %33, i64 %23
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %35, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %12, align 8
  %36 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %46 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !12

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #5
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**
  %75 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %12, align 8
  %76 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %82 to i64
  %84 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %82, i64 %44
  %85 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %84 to i64
  %86 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %82, i64 %43
  %87 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %86 to i64
  %88 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %100, i64 1
  %108 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %107 to i64
  %109 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !32

112:                                              ; preds = %99
  %113 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %120, i64 1
  %127 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %122, i64 1
  %128 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %120, i64 2
  %132 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %122, i64 2
  %133 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %120, i64 3
  %137 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %122, i64 3
  %138 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %120, i64 4
  %142 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %122, i64 4
  %143 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %120, i64 5
  %147 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %122, i64 5
  %148 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %120, i64 6
  %152 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %122, i64 6
  %153 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %120, i64 7
  %157 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %122, i64 7
  %158 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %120, i64 8
  %162 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %161 to i64
  %163 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %122, i64 8
  %164 = icmp eq %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %172, i64 1
  %188 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %45 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"***
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %172, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %192, align 8
  %193 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3, align 8
  %200 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %199, i64 1
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %200, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal8compiler18ControlEquivalence13DFSStackEntryENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %5, align 8
  %7 = icmp eq %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %4, %6
  %8 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %6 to i64
  br i1 %7, label %9, label %194

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %12, align 8
  %14 = icmp ult %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %11, %13
  %15 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %12 to i64*
  %16 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %13 to i64
  %17 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %11 to i64
  br i1 %14, label %18, label %38

18:                                               ; preds = %9
  %19 = sub i64 %16, %17
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %11, i64 %22
  %24 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %4 to i64
  %25 = sub i64 %17, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %18
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %23, i64 %29
  %31 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %30 to i8*
  %32 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #5
  %33 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %10, align 8
  br label %34

34:                                               ; preds = %18, %27
  %35 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %33, %27 ], [ %11, %18 ]
  %36 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %30, %27 ], [ %23, %18 ]
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %36, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3, align 8
  %37 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %35, i64 %22
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %37, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %10, align 8
  br label %194

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %47 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %46, align 8
  %48 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %47, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp ult i64 %51, %43
  br i1 %52, label %59, label %53

53:                                               ; preds = %49
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %47 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %47 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %46 to i64*
  store i64 %56, i64* %57, align 8
  %58 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %10 to i64*
  br label %79

59:                                               ; preds = %49, %38
  %60 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !12

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #5
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**
  %76 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3, align 8
  %77 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %10 to i64*
  %78 = load i64, i64* %77, align 8
  br label %79

79:                                               ; preds = %53, %73
  %80 = phi i64* [ %58, %53 ], [ %77, %73 ]
  %81 = phi i64 [ %17, %53 ], [ %78, %73 ]
  %82 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %4, %53 ], [ %76, %73 ]
  %83 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %54, %53 ], [ %75, %73 ]
  %84 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %83 to i64
  %85 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %83, i64 %45
  %86 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %85 to i64
  %87 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %83, i64 %43
  %88 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %87 to i64
  %89 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %82 to i64
  %90 = sub i64 %81, %89
  %91 = ashr exact i64 %90, 3
  %92 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %85, i64 %91
  %93 = icmp eq i64 %90, 0
  br i1 %93, label %168, label %94

94:                                               ; preds = %79
  %95 = add i64 %90, -8
  %96 = lshr i64 %95, 3
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 7
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %115, label %100

100:                                              ; preds = %94, %100
  %101 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %108, %100 ], [ %85, %94 ]
  %102 = phi i64 [ %109, %100 ], [ %86, %94 ]
  %103 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %110, %100 ], [ %82, %94 ]
  %104 = phi i64 [ %111, %100 ], [ %98, %94 ]
  %105 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %103 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = inttoptr i64 %102 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %101, i64 1
  %109 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %108 to i64
  %110 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %103, i64 1
  %111 = add i64 %104, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %100, !llvm.loop !33

113:                                              ; preds = %100
  %114 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %108 to i64
  br label %115

115:                                              ; preds = %94, %113
  %116 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %85, %94 ], [ %108, %113 ]
  %117 = phi i64 [ %86, %94 ], [ %114, %113 ]
  %118 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %82, %94 ], [ %110, %113 ]
  %119 = icmp ult i64 %95, 56
  br i1 %119, label %166, label %120

120:                                              ; preds = %115, %120
  %121 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %162, %120 ], [ %116, %115 ]
  %122 = phi i64 [ %163, %120 ], [ %117, %115 ]
  %123 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %164, %120 ], [ %118, %115 ]
  %124 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = inttoptr i64 %122 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %121, i64 1
  %128 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %123, i64 1
  %129 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %127 to i64*
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %121, i64 2
  %133 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %123, i64 2
  %134 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %132 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %121, i64 3
  %138 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %123, i64 3
  %139 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %137 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %121, i64 4
  %143 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %123, i64 4
  %144 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %142 to i64*
  store i64 %145, i64* %146, align 8
  %147 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %121, i64 5
  %148 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %123, i64 5
  %149 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %121, i64 6
  %153 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %123, i64 6
  %154 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %152 to i64*
  store i64 %155, i64* %156, align 8
  %157 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %121, i64 7
  %158 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %123, i64 7
  %159 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %157 to i64*
  store i64 %160, i64* %161, align 8
  %162 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %121, i64 8
  %163 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %162 to i64
  %164 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %123, i64 8
  %165 = icmp eq %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %92, %162
  br i1 %165, label %166, label %120

166:                                              ; preds = %120, %115
  %167 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %92 to i64
  br label %168

168:                                              ; preds = %79, %166
  %169 = phi i64 [ %167, %166 ], [ %86, %79 ]
  %170 = load i64, i64* %39, align 8
  store i64 %84, i64* %39, align 8
  %171 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3 to i64*
  store i64 %86, i64* %171, align 8
  store i64 %169, i64* %80, align 8
  %172 = load i64, i64* %15, align 8
  store i64 %88, i64* %15, align 8
  %173 = inttoptr i64 %170 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**
  %174 = icmp eq i64 %170, 0
  br i1 %174, label %194, label %175

175:                                              ; preds = %168
  %176 = sub i64 %172, %170
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %194, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %46, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %194, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %173, i64 1
  %188 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %46 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %170 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %46 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"***
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %173, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %192, align 8
  %193 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3, align 8
  br label %194

194:                                              ; preds = %186, %182, %175, %168, %34, %2
  %195 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %193, %186 ], [ %85, %182 ], [ %85, %175 ], [ %85, %168 ], [ %36, %34 ], [ %4, %2 ]
  %196 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %195, i64 -1
  %197 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %1 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %196 to i64*
  store i64 %198, i64* %199, align 8
  %200 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3, align 8
  %201 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %200, i64 -1
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %201, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal8compiler18ControlEquivalence13DFSStackEntryERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.62"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.62", %"struct.std::__1::__split_buffer.62"* %0, i64 0, i32 2
  %4 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.62", %"struct.std::__1::__split_buffer.62"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %5, align 8
  %7 = icmp eq %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %4, %6
  %8 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %6 to i64
  %9 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %4 to i64*
  br i1 %7, label %10, label %193

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.62", %"struct.std::__1::__split_buffer.62"* %0, i64 0, i32 1
  %12 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.62", %"struct.std::__1::__split_buffer.62"* %0, i64 0, i32 0
  %14 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %13, align 8
  %15 = icmp ugt %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %12, %14
  %16 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %12, i64 %22
  %24 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %23 to i8*
  %30 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #5
  %31 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %23, i64 %26
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %34, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3, align 8
  %35 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %33, i64 %22
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %35, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %11, align 8
  %36 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %34 to i64*
  br label %193

37:                                               ; preds = %10
  %38 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.62"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.62", %"struct.std::__1::__split_buffer.62"* %0, i64 0, i32 3, i32 1, i32 0
  %46 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %46, i64 0, i32 1
  %48 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %47, align 8
  %49 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %48, null
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %48, i64 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %43
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %48 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %48 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %47 to i64*
  store i64 %57, i64* %58, align 8
  br label %76

59:                                               ; preds = %50, %37
  %60 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %46, i64 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !12

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #5
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**
  br label %76

76:                                               ; preds = %54, %73
  %77 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %55, %54 ], [ %75, %73 ]
  %78 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %77 to i64
  %79 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %77, i64 %44
  %80 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %79 to i64
  %81 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %77, i64 %43
  %82 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %81 to i64
  %83 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %11, align 8
  %84 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %83 to i64
  %87 = sub i64 %85, %86
  %88 = ashr exact i64 %87, 3
  %89 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %79, i64 %88
  %90 = icmp eq i64 %87, 0
  br i1 %90, label %165, label %91

91:                                               ; preds = %76
  %92 = add i64 %87, -8
  %93 = lshr i64 %92, 3
  %94 = add nuw nsw i64 %93, 1
  %95 = and i64 %94, 7
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %112, label %97

97:                                               ; preds = %91, %97
  %98 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %105, %97 ], [ %79, %91 ]
  %99 = phi i64 [ %106, %97 ], [ %80, %91 ]
  %100 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %107, %97 ], [ %83, %91 ]
  %101 = phi i64 [ %108, %97 ], [ %95, %91 ]
  %102 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %99 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %98, i64 1
  %106 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %105 to i64
  %107 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %100, i64 1
  %108 = add i64 %101, -1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %97, !llvm.loop !34

110:                                              ; preds = %97
  %111 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %105 to i64
  br label %112

112:                                              ; preds = %91, %110
  %113 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %79, %91 ], [ %105, %110 ]
  %114 = phi i64 [ %80, %91 ], [ %111, %110 ]
  %115 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %83, %91 ], [ %107, %110 ]
  %116 = icmp ult i64 %92, 56
  br i1 %116, label %163, label %117

117:                                              ; preds = %112, %117
  %118 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %159, %117 ], [ %113, %112 ]
  %119 = phi i64 [ %160, %117 ], [ %114, %112 ]
  %120 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %161, %117 ], [ %115, %112 ]
  %121 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = inttoptr i64 %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %118, i64 1
  %125 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %120, i64 1
  %126 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %118, i64 2
  %130 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %120, i64 2
  %131 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %118, i64 3
  %135 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %120, i64 3
  %136 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %134 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %118, i64 4
  %140 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %120, i64 4
  %141 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %139 to i64*
  store i64 %142, i64* %143, align 8
  %144 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %118, i64 5
  %145 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %120, i64 5
  %146 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %144 to i64*
  store i64 %147, i64* %148, align 8
  %149 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %118, i64 6
  %150 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %120, i64 6
  %151 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %149 to i64*
  store i64 %152, i64* %153, align 8
  %154 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %118, i64 7
  %155 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %120, i64 7
  %156 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %154 to i64*
  store i64 %157, i64* %158, align 8
  %159 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %118, i64 8
  %160 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %159 to i64
  %161 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %120, i64 8
  %162 = icmp eq %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %89, %159
  br i1 %162, label %163, label %117

163:                                              ; preds = %117, %112
  %164 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %89 to i64
  br label %165

165:                                              ; preds = %76, %163
  %166 = phi i64 [ %164, %163 ], [ %80, %76 ]
  %167 = load i64, i64* %39, align 8
  store i64 %78, i64* %39, align 8
  %168 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %11 to i64*
  store i64 %80, i64* %168, align 8
  store i64 %166, i64* %84, align 8
  %169 = load i64, i64* %38, align 8
  store i64 %82, i64* %38, align 8
  %170 = inttoptr i64 %167 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**
  %171 = icmp eq i64 %167, 0
  %172 = inttoptr i64 %166 to i64*
  br i1 %171, label %193, label %173

173:                                              ; preds = %165
  %174 = sub i64 %169, %167
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %193, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %47, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %193, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %170, i64 1
  %186 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %47 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %167 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %47 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"***
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %170, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %190, align 8
  %191 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3 to i64**
  %192 = load i64*, i64** %191, align 8
  br label %193

193:                                              ; preds = %184, %180, %173, %165, %32, %2
  %194 = phi i64* [ %192, %184 ], [ %172, %180 ], [ %172, %173 ], [ %172, %165 ], [ %36, %32 ], [ %9, %2 ]
  %195 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %1 to i64*
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %194, align 8
  %197 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3, align 8
  %198 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %197, i64 1
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %198, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal8compiler18ControlEquivalence13DFSStackEntryERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.62"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.62", %"struct.std::__1::__split_buffer.62"* %0, i64 0, i32 1
  %4 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.62", %"struct.std::__1::__split_buffer.62"* %0, i64 0, i32 0
  %6 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %5, align 8
  %7 = icmp eq %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %4, %6
  %8 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %6 to i64
  br i1 %7, label %9, label %192

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.62", %"struct.std::__1::__split_buffer.62"* %0, i64 0, i32 2
  %11 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.62", %"struct.std::__1::__split_buffer.62"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %12, align 8
  %14 = icmp ult %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %11, %13
  %15 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %12 to i64*
  %16 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %11, i64 %22
  %24 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %23, i64 %29
  %31 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %30 to i8*
  %32 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #5
  %33 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %36, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3, align 8
  %37 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %35, i64 %22
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %37, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %10, align 8
  br label %192

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.62"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer.62", %"struct.std::__1::__split_buffer.62"* %0, i64 0, i32 3, i32 1, i32 0
  %47 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %47, i64 0, i32 1
  %49 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %48, align 8
  %50 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %49, null
  br i1 %50, label %60, label %51

51:                                               ; preds = %38
  %52 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %49, i64 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %53, %43
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %49 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %49 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %48 to i64*
  store i64 %58, i64* %59, align 8
  br label %77

60:                                               ; preds = %51, %38
  %61 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %47, i64 0, i32 0, i32 0
  %62 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %61, align 8
  %63 = shl i64 %43, 3
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 2
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 3
  %67 = load i64, i64* %66, align 8
  %68 = sub i64 %67, %65
  %69 = icmp ugt i64 %63, %68
  br i1 %69, label %70, label %72, !prof !12

70:                                               ; preds = %60
  %71 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %62, i64 %63) #5
  br label %74

72:                                               ; preds = %60
  %73 = add i64 %65, %63
  store i64 %73, i64* %64, align 8
  br label %74

74:                                               ; preds = %72, %70
  %75 = phi i64 [ %71, %70 ], [ %65, %72 ]
  %76 = inttoptr i64 %75 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**
  br label %77

77:                                               ; preds = %55, %74
  %78 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %56, %55 ], [ %76, %74 ]
  %79 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %78 to i64
  %80 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %78, i64 %45
  %81 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %80 to i64
  %82 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %78, i64 %43
  %83 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %82 to i64
  %84 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3, align 8
  %85 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %10 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %84 to i64
  %88 = sub i64 %86, %87
  %89 = ashr exact i64 %88, 3
  %90 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %80, i64 %89
  %91 = icmp eq i64 %88, 0
  br i1 %91, label %166, label %92

92:                                               ; preds = %77
  %93 = add i64 %88, -8
  %94 = lshr i64 %93, 3
  %95 = add nuw nsw i64 %94, 1
  %96 = and i64 %95, 7
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %113, label %98

98:                                               ; preds = %92, %98
  %99 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %106, %98 ], [ %80, %92 ]
  %100 = phi i64 [ %107, %98 ], [ %81, %92 ]
  %101 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %108, %98 ], [ %84, %92 ]
  %102 = phi i64 [ %109, %98 ], [ %96, %92 ]
  %103 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %101 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = inttoptr i64 %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %99, i64 1
  %107 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %106 to i64
  %108 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %101, i64 1
  %109 = add i64 %102, -1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %98, !llvm.loop !35

111:                                              ; preds = %98
  %112 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %106 to i64
  br label %113

113:                                              ; preds = %92, %111
  %114 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %80, %92 ], [ %106, %111 ]
  %115 = phi i64 [ %81, %92 ], [ %112, %111 ]
  %116 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %84, %92 ], [ %108, %111 ]
  %117 = icmp ult i64 %93, 56
  br i1 %117, label %164, label %118

118:                                              ; preds = %113, %118
  %119 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %160, %118 ], [ %114, %113 ]
  %120 = phi i64 [ %161, %118 ], [ %115, %113 ]
  %121 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %162, %118 ], [ %116, %113 ]
  %122 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = inttoptr i64 %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %119, i64 1
  %126 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %121, i64 1
  %127 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %119, i64 2
  %131 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %121, i64 2
  %132 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %119, i64 3
  %136 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %121, i64 3
  %137 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %119, i64 4
  %141 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %121, i64 4
  %142 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %140 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %119, i64 5
  %146 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %121, i64 5
  %147 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %145 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %119, i64 6
  %151 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %121, i64 6
  %152 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %150 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %119, i64 7
  %156 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %121, i64 7
  %157 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %155 to i64*
  store i64 %158, i64* %159, align 8
  %160 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %119, i64 8
  %161 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %160 to i64
  %162 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %121, i64 8
  %163 = icmp eq %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %90, %160
  br i1 %163, label %164, label %118

164:                                              ; preds = %118, %113
  %165 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %90 to i64
  br label %166

166:                                              ; preds = %77, %164
  %167 = phi i64 [ %165, %164 ], [ %81, %77 ]
  %168 = load i64, i64* %39, align 8
  store i64 %79, i64* %39, align 8
  %169 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3 to i64*
  store i64 %81, i64* %169, align 8
  store i64 %167, i64* %85, align 8
  %170 = load i64, i64* %15, align 8
  store i64 %83, i64* %15, align 8
  %171 = inttoptr i64 %168 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**
  %172 = icmp eq i64 %168, 0
  br i1 %172, label %192, label %173

173:                                              ; preds = %166
  %174 = sub i64 %170, %168
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %192, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %48, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %192, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %171, i64 1
  %186 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %48 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %168 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ControlEquivalence::DFSStackEntry *>::FreeBlock"** %48 to %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"***
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %171, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %190, align 8
  %191 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3, align 8
  br label %192

192:                                              ; preds = %184, %180, %173, %166, %34, %2
  %193 = phi %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** [ %191, %184 ], [ %80, %180 ], [ %80, %173 ], [ %80, %166 ], [ %36, %34 ], [ %4, %2 ]
  %194 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %193, i64 -1
  %195 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %1 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %194 to i64*
  store i64 %196, i64* %197, align 8
  %198 = load %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"**, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3, align 8
  %199 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %198, i64 -1
  store %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"** %199, %"struct.v8::internal::compiler::ControlEquivalence::DFSStackEntry"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN2v88internal8compiler4Node11input_edgesEv: argument 0"}
!5 = distinct !{!5, !"_ZN2v88internal8compiler4Node11input_edgesEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN2v88internal8compiler4Node11input_edgesEv: argument 0"}
!8 = distinct !{!8, !"_ZN2v88internal8compiler4Node11input_edgesEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__14listIN2v88internal8compiler18ControlEquivalence7BracketENS2_13ZoneAllocatorIS5_EEE15__allocate_nodeERNS6_INS_11__list_nodeIS5_PvEEEE: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__14listIN2v88internal8compiler18ControlEquivalence7BracketENS2_13ZoneAllocatorIS5_EEE15__allocate_nodeERNS6_INS_11__list_nodeIS5_PvEEEE"}
!12 = !{!"branch_weights", i32 1, i32 2000}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN2v88internal8compiler4Node11input_edgesEv: argument 0"}
!15 = distinct !{!15, !"_ZN2v88internal8compiler4Node11input_edgesEv"}
!16 = !{!17}
!17 = distinct !{!17, !18}
!18 = distinct !{!18, !"LVerDomain"}
!19 = !{!20}
!20 = distinct !{!20, !18}
!21 = distinct !{!21, !22}
!22 = !{!"llvm.loop.isvectorized", i32 1}
!23 = distinct !{!23, !24}
!24 = !{!"llvm.loop.unroll.disable"}
!25 = distinct !{!25, !22}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !24}
!28 = distinct !{!28, !24}
!29 = distinct !{!29, !24}
!30 = distinct !{!30, !24}
!31 = distinct !{!31, !24}
!32 = distinct !{!32, !24}
!33 = distinct !{!33, !24}
!34 = distinct !{!34, !24}
!35 = distinct !{!35, !24}
