; ModuleID = '../../third_party/blink/renderer/platform/graphics/image_orientation.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/image_orientation.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::AffineTransform" = type { [6 x double] }
%"class.blink::ImageOrientation" = type { i8 }
%"class.blink::FloatSize" = type { float, float }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16ImageOrientation20TransformFromDefaultERKNS_9FloatSizeE(%"class.blink::AffineTransform"* noalias sret, %"class.blink::ImageOrientation"* nocapture readonly, %"class.blink::FloatSize"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %2, i64 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %2, i64 0, i32 1
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %"class.blink::ImageOrientation", %"class.blink::ImageOrientation"* %1, i64 0, i32 0
  %9 = load i8, i8* %8, align 1
  switch i8 %9, label %26 [
    i8 1, label %10
    i8 2, label %11
    i8 3, label %13
    i8 4, label %16
    i8 5, label %18
    i8 6, label %19
    i8 7, label %21
    i8 8, label %24
  ]

10:                                               ; preds = %3
  tail call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %0) #2
  br label %27

11:                                               ; preds = %3
  %12 = fpext float %5 to double
  tail call void @_ZN5blink15AffineTransformC1Edddddd(%"class.blink::AffineTransform"* %0, double -1.000000e+00, double 0.000000e+00, double 0.000000e+00, double 1.000000e+00, double %12, double 0.000000e+00) #2
  br label %27

13:                                               ; preds = %3
  %14 = fpext float %5 to double
  %15 = fpext float %7 to double
  tail call void @_ZN5blink15AffineTransformC1Edddddd(%"class.blink::AffineTransform"* %0, double -1.000000e+00, double 0.000000e+00, double 0.000000e+00, double -1.000000e+00, double %14, double %15) #2
  br label %27

16:                                               ; preds = %3
  %17 = fpext float %7 to double
  tail call void @_ZN5blink15AffineTransformC1Edddddd(%"class.blink::AffineTransform"* %0, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00, double -1.000000e+00, double 0.000000e+00, double %17) #2
  br label %27

18:                                               ; preds = %3
  tail call void @_ZN5blink15AffineTransformC1Edddddd(%"class.blink::AffineTransform"* %0, double 0.000000e+00, double 1.000000e+00, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00) #2
  br label %27

19:                                               ; preds = %3
  %20 = fpext float %5 to double
  tail call void @_ZN5blink15AffineTransformC1Edddddd(%"class.blink::AffineTransform"* %0, double 0.000000e+00, double 1.000000e+00, double -1.000000e+00, double 0.000000e+00, double %20, double 0.000000e+00) #2
  br label %27

21:                                               ; preds = %3
  %22 = fpext float %5 to double
  %23 = fpext float %7 to double
  tail call void @_ZN5blink15AffineTransformC1Edddddd(%"class.blink::AffineTransform"* %0, double 0.000000e+00, double -1.000000e+00, double -1.000000e+00, double 0.000000e+00, double %22, double %23) #2
  br label %27

24:                                               ; preds = %3
  %25 = fpext float %7 to double
  tail call void @_ZN5blink15AffineTransformC1Edddddd(%"class.blink::AffineTransform"* %0, double 0.000000e+00, double -1.000000e+00, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00, double %25) #2
  br label %27

26:                                               ; preds = %3
  tail call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %0) #2
  br label %27

27:                                               ; preds = %26, %24, %21, %19, %18, %16, %13, %11, %10
  ret void
}

declare void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"*) unnamed_addr #1

declare void @_ZN5blink15AffineTransformC1Edddddd(%"class.blink::AffineTransform"*, double, double, double, double, double, double) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
