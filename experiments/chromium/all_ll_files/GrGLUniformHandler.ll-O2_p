; ModuleID = '../../third_party/skia/src/gpu/gl/GrGLUniformHandler.cpp'
source_filename = "../../third_party/skia/src/gpu/gl/GrGLUniformHandler.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrGLUniformHandler = type { %class.GrGLSLUniformHandler, %class.GrTBlockList.271, %class.GrTBlockList.271, %class.SkTArray.274 }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%class.GrGLSLProgramBuilder = type { i32 (...)**, [8 x i8], %class.GrGLSLVertexBuilder, %class.GrGLSLGeometryBuilder, %class.GrGLSLFragmentShaderBuilder, i32, %class.GrProgramDesc*, %class.GrProgramInfo*, %struct.GrGLSLBuiltinUniformHandles, %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.248", %"class.std::__1::vector.254", i32, %class.SkSTArray.268 }
%class.GrGLSLVertexBuilder = type { %class.GrGLSLVertexGeoBuilder.base, [12 x i8] }
%class.GrGLSLVertexGeoBuilder.base = type { %class.GrGLSLShaderBuilder.base }
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.2, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.8], i32, i8, [3 x i8], i32 }>
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [120 x i8] }
%class.SkTArray = type { %class.SkString*, i64 }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkSTArray.2 = type { %class.SkAlignedSTStorage.3, %class.SkTArray.4 }
%class.SkAlignedSTStorage.3 = type { [16 x i8] }
%class.SkTArray.4 = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.8 = type { %class.SkAlignedSTStorage.9, %class.SkTArray }
%class.SkAlignedSTStorage.9 = type { [8 x i8] }
%class.GrGLSLGeometryBuilder = type { %class.GrGLSLVertexGeoBuilder.base, i32, [8 x i8] }
%class.GrGLSLFragmentShaderBuilder = type <{ %class.GrGLSLFPFragmentBuilder.base, [4 x i8], %class.GrGLSLXPFragmentBuilder.base, %class.SkTArray.10, %class.SkString, %class.GrShaderVar*, i8, i8, i8, i8, [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLFPFragmentBuilder.base = type <{ i32 (...)**, [4 x i8] }>
%class.GrGLSLXPFragmentBuilder.base = type { i32 (...)** }
%class.SkTArray.10 = type { i32*, i64 }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%class.GrProgramDesc = type <{ %class.SkSTArray.11, i32, [4 x i8] }>
%class.SkSTArray.11 = type { %class.SkAlignedSTStorage.12, %class.SkTArray.13 }
%class.SkAlignedSTStorage.12 = type { [132 x i8] }
%class.SkTArray.13 = type { i32*, i64 }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon.14, i32, [4 x i8] }
%union.anon.14 = type { %struct.anon.15 }
%struct.anon.15 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.223, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrSurfaceProxyView = type <{ %class.sk_sp.17, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.17 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt, %class.sk_sp.18, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.217" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.sk_sp.18 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.214 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.19, [4 x i8] }>
%union.anon.19 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.20, i8* }
%class.sk_sp.20 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.21, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.21 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type { %class.SkRefCnt.base, %"class.GrGpu::Stats", %class.sk_sp.22, %"class.std::__1::unique_ptr.24", i32, %class.GrDirectContext*, %class.SkSTArray.211, i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.GrGpu::Stats" = type { i8 }
%class.sk_sp.22 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.23, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.23 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.SkSL::Compiler"* }
%"class.SkSL::Compiler" = type { %"class.SkSL::ErrorReporter", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr.65", %"class.std::__1::shared_ptr.65", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"class.SkSL::ModifiersPool", %"class.SkSL::Inliner", %"class.std::__1::unique_ptr.67", %"class.SkSL::String"*, i32, %"class.SkSL::String", %"class.std::__1::vector.73" }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%"class.std::__1::shared_ptr" = type { %"class.SkSL::Context"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27" }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.SkSL::Type"* }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.35", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.37" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.SkSL::Type::Field"* }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.64"* }
%"class.std::__1::vector.64" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::shared_ptr.65" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr.65", %"class.std::__1::vector.275", i8, %"class.std::__1::vector.283", %"class.std::__1::forward_list", %class.SkTHashMap.296, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::vector.275" = type { %"class.std::__1::__vector_base.276" }
%"class.std::__1::__vector_base.276" = type { %"class.std::__1::unique_ptr.277"*, %"class.std::__1::unique_ptr.277"*, %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"class.SkSL::Symbol"* }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.std::__1::unique_ptr.277"* }
%"class.std::__1::vector.283" = type { %"class.std::__1::__vector_base.284" }
%"class.std::__1::__vector_base.284" = type { %"class.std::__1::unique_ptr.285"*, %"class.std::__1::unique_ptr.285"*, %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.505" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.std::__1::unique_ptr.285"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap.296 = type { %class.SkTHashTable.297 }
%class.SkTHashTable.297 = type { i32, i32, %class.SkAutoTArray.298 }
%class.SkAutoTArray.298 = type { %"class.std::__1::unique_ptr.299" }
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair.510" }
%"struct.std::__1::pair.510" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"struct.SkSL::ParsedModule" = type { %"class.std::__1::shared_ptr.65", %"class.std::__1::shared_ptr.66" }
%"class.std::__1::shared_ptr.66" = type { %"class.SkSL::IRIntrinsicMap"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::IRIntrinsicMap" = type opaque
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.45", %"class.std::__1::__compressed_pair.54", %"class.std::__1::__compressed_pair.59", %"class.std::__1::__compressed_pair.61", [4 x i8] }>
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47", %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { i64 }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { float }
%"class.SkSL::Inliner" = type { %"class.SkSL::Context"*, %"class.SkSL::Mangler", i32 }
%"class.SkSL::Mangler" = type { i32 }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.SkSL::IRGenerator"* }
%"class.SkSL::IRGenerator" = type opaque
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { i64*, i64*, %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { i64* }
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.134", %"class.std::__1::unique_ptr.140", %class.sk_sp.146, %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.186", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.205" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.84", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.128" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.83 }
%class.sk_sp.83 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.87, %class.SkTHashMap, %class.SkTHashMap.95, %class.SkTArray.104, %class.SkTArray, i32, i8, [3 x i8] }>
%class.SkTArray.87 = type { %"class.std::__1::unique_ptr.88"*, i64 }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.488" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.89" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.95 = type { %class.SkTHashTable.96 }
%class.SkTHashTable.96 = type { i32, i32, %class.SkAutoTArray.97 }
%class.SkAutoTArray.97 = type { %"class.std::__1::unique_ptr.98" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.493" }
%"struct.std::__1::pair.493" = type { i32, %class.SkTArray.494* }
%class.SkTArray.494 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.104 = type { %"class.std::__1::unique_ptr.105"*, i64 }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.494, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.115" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.118 }
%class.SkFibBlockSizes.118 = type { i32 }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.146 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.158, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.174, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.150 }
%class.SkTHashTable.150 = type { i32, i32, %class.SkAutoTArray.151 }
%class.SkAutoTArray.151 = type { %"class.std::__1::unique_ptr.152" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.158 = type { %class.SkTHashTable.159 }
%class.SkTHashTable.159 = type { i32, i32, %class.SkAutoTArray.160 }
%class.SkAutoTArray.160 = type { %"class.std::__1::unique_ptr.161" }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.167, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.167 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.168" }
%"struct.std::__1::atomic.168" = type { %"struct.std::__1::__atomic_base.169" }
%"struct.std::__1::__atomic_base.169" = type { %"struct.std::__1::__atomic_base.170" }
%"struct.std::__1::__atomic_base.170" = type { %"struct.std::__1::__cxx_atomic_impl.171" }
%"struct.std::__1::__cxx_atomic_impl.171" = type { %"struct.std::__1::__cxx_atomic_base_impl.172" }
%"struct.std::__1::__cxx_atomic_base_impl.172" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.173, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.173 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.174 = type { %class.SkTHashTable.175 }
%class.SkTHashTable.175 = type { i32, i32, %class.SkAutoTArray.176 }
%class.SkAutoTArray.176 = type { %"class.std::__1::unique_ptr.177" }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.22, %class.sk_sp.189, %class.sk_sp.189 }
%class.sk_sp.189 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.SkSTArray.211 = type { %class.SkAlignedSTStorage.212, %class.SkTArray.213 }
%class.SkAlignedSTStorage.212 = type { [64 x i8] }
%class.SkTArray.213 = type { %"struct.GrGpu::SubmittedProc"*, i64 }
%"struct.GrGpu::SubmittedProc" = type { void (i8*, i1)*, i8* }
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.214 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.215, void (i8*)*, i8* }
%class.SkNVRefCnt.215 = type { %"struct.std::__1::atomic" }
%struct.SkISize = type { i32, i32 }
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.18, i32, i8, [3 x i8] }>
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.217" = type { %"struct.std::__1::__atomic_base.218" }
%"struct.std::__1::__atomic_base.218" = type { %"struct.std::__1::__atomic_base.219" }
%"struct.std::__1::__atomic_base.219" = type { %"struct.std::__1::__cxx_atomic_impl.220" }
%"struct.std::__1::__cxx_atomic_impl.220" = type { %"struct.std::__1::__cxx_atomic_base_impl.221" }
%"struct.std::__1::__cxx_atomic_base_impl.221" = type { i64 }
%struct.SkIPoint = type { i32, i32 }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.222 }
%union.anon.222 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef = type { i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.sk_sp.223 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.224, i8, i8, [2 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.GrNonAtomicRef.224 = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.225"*, [24 x i8] }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %class.GrFragmentProcessor* }
%class.GrSwizzle = type { i16 }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.240, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.240 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%struct.GrGLSLBuiltinUniformHandles = type { %class.GrResourceHandle, %class.GrResourceHandle }
%class.GrResourceHandle = type { i32 }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %class.GrGLSLGeometryProcessor* }
%class.GrGLSLGeometryProcessor = type { i32 (...)**, %class.SkTArray.244 }
%class.SkTArray.244 = type { %"struct.GrGLSLGeometryProcessor::TransformInfo"*, i64 }
%"struct.GrGLSLGeometryProcessor::TransformInfo" = type { %class.GrShaderVar, %class.GrShaderVar, %class.GrFragmentProcessor* }
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %class.GrGLSLXferProcessor* }
%class.GrGLSLXferProcessor = type { i32 (...)**, %class.GrResourceHandle, %class.GrResourceHandle }
%"class.std::__1::vector.254" = type { %"class.std::__1::__vector_base.255" }
%"class.std::__1::__vector_base.255" = type { %"class.std::__1::unique_ptr.256"*, %"class.std::__1::unique_ptr.256"*, %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %class.GrGLSLFragmentProcessor* }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray, %class.SkTArray.259 }
%class.SkTArray.259 = type { %"class.std::__1::unique_ptr.256"*, i64 }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.std::__1::unique_ptr.256"* }
%class.SkSTArray.268 = type { %class.SkAlignedSTStorage.269, %class.SkTArray.270 }
%class.SkAlignedSTStorage.269 = type { [160 x i8] }
%class.SkTArray.270 = type { %class.GrShaderVar*, i64 }
%class.GrTBlockList.271 = type { %class.GrSBlockAllocator.272 }
%class.GrSBlockAllocator.272 = type { [120 x i8], [8 x i8] }
%class.SkTArray.274 = type { %class.GrSwizzle*, i64 }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.228, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.SkSTArray.228 = type { %class.SkAlignedSTStorage.229, %class.SkTArray.230 }
%class.SkAlignedSTStorage.229 = type { [8 x i8] }
%class.SkTArray.230 = type { %"class.std::__1::unique_ptr.231"*, i64 }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%"struct.GrGLProgramDataManager::GLUniformInfo" = type <{ %"struct.GrGLSLUniformHandler::UniformInfo", i32, [4 x i8] }>
%"struct.GrGLSLUniformHandler::UniformInfo" = type { %class.GrShaderVar, i32, %class.GrFragmentProcessor*, %class.SkString }
%"class.GrBlockAllocator::Block" = type { %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"*, i32, i32, i32, i32 }
%class.GrBlockAllocator = type { %"class.GrBlockAllocator::Block"*, i64, %"class.GrBlockAllocator::Block" }
%class.GrGLCaps = type <{ %class.GrCaps.base, i8, i32, [4 x i8], %class.SkTArray.306, i32, i32, i32, i32, i32, i32, i32, i40, i32, i32, [4 x i8], [24 x %"struct.GrGLCaps::FormatInfo"], [31 x i32], [4 x i8] }>
%class.GrCaps.base = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.23, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8 }>
%class.SkTArray.306 = type { i32*, i64 }
%"struct.GrGLCaps::FormatInfo" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i32, %class.SkTDArray.307, %"class.std::__1::unique_ptr.308", i32, [4 x i8] }>
%class.SkTDArray.307 = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"struct.GrGLCaps::ColorTypeInfo"* }
%"struct.GrGLCaps::ColorTypeInfo" = type <{ i32, i32, %class.GrSwizzle, %class.GrSwizzle, [4 x i8], %"class.std::__1::unique_ptr.311", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"struct.GrGLCaps::ColorTypeInfo::ExternalIOFormats"* }
%"struct.GrGLCaps::ColorTypeInfo::ExternalIOFormats" = type <{ i32, i32, i32, i32, i8, [3 x i8] }>
%class.GrGLProgramBuilder = type { %class.GrGLSLProgramBuilder, %class.GrGLGpu*, [8 x i8], %class.GrGLVaryingHandler, %class.GrGLUniformHandler, %"class.std::__1::unique_ptr.446", i32, i32, i64, i64, %class.sk_sp.20, [8 x i8] }
%class.GrGLGpu = type <{ %class.GrGpu, %"class.std::__1::unique_ptr.322", %class.sk_sp.436, i32, i32, %class.sk_sp.445, i32, i32, i32, %struct.anon.453, %class.anon, %struct.GrNativeRect, %"class.GrGLGpu::HWVertexArrayState", i8, [3 x i8], [6 x %struct.anon.457], %struct.anon.458, i32, i32, i32, %class.GrStencilSettings, i32, i32, i32, %"class.GrGpuResource::UniqueID", i8, [3 x i8], i32, [4 x i8], %class.SkAutoTArray.460, [4 x float], i32, [3 x %struct.anon.467], [4 x i8], %class.sk_sp.468, [4 x %struct.anon.469], %class.sk_sp.468, i8, [7 x i8], i64, %"class.std::__1::unique_ptr.470", %"class.std::__1::unique_ptr.476", %class.GrFinishCallbacks, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %class.GrGLContext* }
%class.GrGLContext = type { %class.GrGLContextInfo }
%class.GrGLContextInfo = type { i32 (...)**, %class.sk_sp.325, %struct.GrGLDriverInfo, i32, %class.sk_sp.432 }
%class.sk_sp.325 = type { %struct.GrGLInterface* }
%struct.GrGLInterface = type { %class.SkRefCnt.base, %union.anon.326, %class.GrGLExtensions, %"struct.GrGLInterface::Functions" }
%union.anon.326 = type { i32 }
%class.GrGLExtensions = type { i8, %class.SkTArray }
%"struct.GrGLInterface::Functions" = type { %class.GrGLFunction, %class.GrGLFunction.327, %class.GrGLFunction.327, %class.GrGLFunction.328, %class.GrGLFunction.327, %class.GrGLFunction.328, %class.GrGLFunction.329, %class.GrGLFunction.327, %class.GrGLFunction.327, %class.GrGLFunction.327, %class.GrGLFunction.327, %class.GrGLFunction, %class.GrGLFunction.330, %class.GrGLFunction.331, %class.GrGLFunction, %class.GrGLFunction.327, %class.GrGLFunction.332, %class.GrGLFunction.333, %class.GrGLFunction.334, %class.GrGLFunction.335, %class.GrGLFunction, %class.GrGLFunction.331, %class.GrGLFunction.336, %class.GrGLFunction.337, %class.GrGLFunction.338, %class.GrGLFunction.339, %class.GrGLFunction, %class.GrGLFunction.340, %class.GrGLFunction.341, %class.GrGLFunction.342, %class.GrGLFunction.343, %class.GrGLFunction.335, %class.GrGLFunction, %class.GrGLFunction.344, %class.GrGLFunction.344, %class.GrGLFunction.344, %class.GrGLFunction, %class.GrGLFunction.344, %class.GrGLFunction.344, %class.GrGLFunction.344, %class.GrGLFunction, %class.GrGLFunction.344, %class.GrGLFunction.344, %class.GrGLFunction.345, %class.GrGLFunction, %class.GrGLFunction, %class.GrGLFunction.346, %class.GrGLFunction.347, %class.GrGLFunction.348, %class.GrGLFunction, %class.GrGLFunction.344, %class.GrGLFunction.349, %class.GrGLFunction.350, %class.GrGLFunction.351, %class.GrGLFunction.352, %class.GrGLFunction, %class.GrGLFunction, %class.GrGLFunction, %class.GrGLFunction.330, %class.GrGLFunction, %class.GrGLFunction.330, %class.GrGLFunction.353, %class.GrGLFunction.354, %class.GrGLFunction.355, %class.GrGLFunction.356, %class.GrGLFunction, %class.GrGLFunction.357, %class.GrGLFunction.357, %class.GrGLFunction.357, %class.GrGLFunction, %class.GrGLFunction.357, %class.GrGLFunction.357, %class.GrGLFunction.357, %class.GrGLFunction.357, %class.GrGLFunction.357, %class.GrGLFunction.358, %class.GrGLFunction.343, %class.GrGLFunction.359, %class.GrGLFunction.360, %class.GrGLFunction.361, %class.GrGLFunction.362, %class.GrGLFunction.363, %class.GrGLFunction.358, %class.GrGLFunction.364, %class.GrGLFunction.358, %class.GrGLFunction.365, %class.GrGLFunction.366, %class.GrGLFunction.358, %class.GrGLFunction.358, %class.GrGLFunction.363, %class.GrGLFunction.358, %class.GrGLFunction.367, %class.GrGLFunction.368, %class.GrGLFunction.369, %class.GrGLFunction.370, %class.GrGLFunction.371, %class.GrGLFunction.372, %class.GrGLFunction, %class.GrGLFunction.353, %class.GrGLFunction.373, %class.GrGLFunction.374, %class.GrGLFunction.375, %class.GrGLFunction.342, %class.GrGLFunction.376, %class.GrGLFunction.377, %class.GrGLFunction, %class.GrGLFunction.378, %class.GrGLFunction.379, %class.GrGLFunction.380, %class.GrGLFunction.381, %class.GrGLFunction.381, %class.GrGLFunction.382, %class.GrGLFunction.383, %class.GrGLFunction.384, %class.GrGLFunction.385, %class.GrGLFunction.386, %class.GrGLFunction.387, %class.GrGLFunction.388, %class.GrGLFunction.389, %class.GrGLFunction.375, %class.GrGLFunction.375, %class.GrGLFunction.327, %class.GrGLFunction.330, %class.GrGLFunction.372, %class.GrGLFunction.327, %class.GrGLFunction, %class.GrGLFunction.390, %class.GrGLFunction.391, %class.GrGLFunction.392, %class.GrGLFunction.392, %class.GrGLFunction.392, %class.GrGLFunction.393, %class.GrGLFunction.330, %class.GrGLFunction.379, %class.GrGLFunction.394, %class.GrGLFunction.395, %class.GrGLFunction.327, %class.GrGLFunction.396, %class.GrGLFunction.397, %class.GrGLFunction.398, %class.GrGLFunction, %class.GrGLFunction.327, %class.GrGLFunction.399, %class.GrGLFunction.354, %class.GrGLFunction.376, %class.GrGLFunction.399, %class.GrGLFunction.400, %class.GrGLFunction.401, %class.GrGLFunction.402, %class.GrGLFunction.403, %class.GrGLFunction.379, %class.GrGLFunction.394, %class.GrGLFunction.401, %class.GrGLFunction.392, %class.GrGLFunction.330, %class.GrGLFunction.373, %class.GrGLFunction.404, %class.GrGLFunction.405, %class.GrGLFunction.406, %class.GrGLFunction.407, %class.GrGLFunction.408, %class.GrGLFunction.409, %class.GrGLFunction.406, %class.GrGLFunction.407, %class.GrGLFunction.410, %class.GrGLFunction.395, %class.GrGLFunction.406, %class.GrGLFunction.407, %class.GrGLFunction.411, %class.GrGLFunction.412, %class.GrGLFunction.406, %class.GrGLFunction.407, %class.GrGLFunction.413, %class.GrGLFunction.413, %class.GrGLFunction.413, %class.GrGLFunction.376, %class.GrGLFunction.414, %class.GrGLFunction.414, %class.GrGLFunction, %class.GrGLFunction.415, %class.GrGLFunction.416, %class.GrGLFunction.416, %class.GrGLFunction.416, %class.GrGLFunction.327, %class.GrGLFunction.417, %class.GrGLFunction.418, %class.GrGLFunction.395, %class.GrGLFunction, %class.GrGLFunction.419, %class.GrGLFunction.420, %class.GrGLFunction.421, %class.GrGLFunction.422, %class.GrGLFunction.423, %class.GrGLFunction.424, %class.GrGLFunction.425, %class.GrGLFunction.426, %class.GrGLFunction.427, %class.GrGLFunction.428, %class.GrGLFunction.429, %class.GrGLFunction.330, %class.GrGLFunction.429, %class.GrGLFunction.430, %class.GrGLFunction.431, %class.GrGLFunction }
%class.GrGLFunction.328 = type { void (i8*, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.329 = type { void (i8*, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.332 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.333 = type { void (i8*, i32, i64, i8*, i32)*, [4 x i64] }
%class.GrGLFunction.334 = type { void (i8*, i32, i64, i64, i8*)*, [4 x i64] }
%class.GrGLFunction.331 = type { void (i8*, float, float, float, float)*, [4 x i64] }
%class.GrGLFunction.336 = type { void (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.337 = type { void (i8*, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.338 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.339 = type { void (i8*, i8, i8, i8, i8)*, [4 x i64] }
%class.GrGLFunction.340 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.341 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.335 = type { i32 (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.345 = type { void (i8*, i8)*, [4 x i64] }
%class.GrGLFunction.346 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.347 = type { void (i8*, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.348 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.344 = type { void (i8*, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.349 = type { void (i8*, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.350 = type { void (i8*, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.351 = type { void (i8*, i32, i32, i32, i8*, i32)*, [4 x i64] }
%class.GrGLFunction.352 = type { void (i8*, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.355 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.356 = type { void (i8*, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.357 = type { void (i8*, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.343 = type { i32 (i8*)*, [4 x i64] }
%class.GrGLFunction.359 = type { void (i8*, i32, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.360 = type { void (i8*, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.361 = type { void (i8*, i32, i32, float*)*, [4 x i64] }
%class.GrGLFunction.362 = type { void (i8*, i32, i32, i32*, i32*, i8*)*, [4 x i64] }
%class.GrGLFunction.364 = type { void (i8*, i32, i32, i64*)*, [4 x i64] }
%class.GrGLFunction.365 = type { void (i8*, i32, i32, i64*)*, [4 x i64] }
%class.GrGLFunction.366 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.363 = type { void (i8*, i32, i32, i32*, i8*)*, [4 x i64] }
%class.GrGLFunction.358 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.367 = type { void (i8*, i32, i32, i32*, i32*)*, [4 x i64] }
%class.GrGLFunction.368 = type { i8* (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.369 = type { i8* (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.370 = type { void (i8*, i32, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.371 = type { i32 (i8*, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.353 = type { void (i8*, i32, i64, i64)*, [4 x i64] }
%class.GrGLFunction.374 = type { void (i8*, i32, i32, i32*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.342 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.377 = type { void (i8*, float)*, [4 x i64] }
%class.GrGLFunction.378 = type { void (i8*, i32, i32, i8*, i32)*, [4 x i64] }
%class.GrGLFunction.380 = type { i8* (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.381 = type { i8* (i8*, i32, i64, i64, i32)*, [4 x i64] }
%class.GrGLFunction.382 = type { i8* (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.383 = type { i8* (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.384 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.385 = type { void (i8*, i32, i32, i32, i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.386 = type { void (i8*, i32, i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.387 = type { void (i8*, i32, i32, i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.388 = type { void (i8*, i32, i32*, i32*, i32*, i32*, i32)*, [4 x i64] }
%class.GrGLFunction.389 = type { void (i8*, i32, i32*, i32, i8**, i32*, i32*, i32*, i32)*, [4 x i64] }
%class.GrGLFunction.375 = type { void (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.372 = type { void (i8*, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.390 = type { void (i8*, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.391 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.393 = type { void (i8*, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.396 = type { void (i8*, i32, i32, i8**, i32*)*, [4 x i64] }
%class.GrGLFunction.397 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.398 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.354 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.399 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.400 = type { void (i8*, i32, i32, i32, i64, i64)*, [4 x i64] }
%class.GrGLFunction.402 = type { void (i8*, i32, i32, float)*, [4 x i64] }
%class.GrGLFunction.403 = type { void (i8*, i32, i32, float*)*, [4 x i64] }
%class.GrGLFunction.379 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.394 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.401 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.392 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.373 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.404 = type { void (i8*, i32, float)*, [4 x i64] }
%class.GrGLFunction.405 = type { void (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.408 = type { void (i8*, i32, float, float)*, [4 x i64] }
%class.GrGLFunction.409 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.410 = type { void (i8*, i32, float, float, float)*, [4 x i64] }
%class.GrGLFunction.411 = type { void (i8*, i32, float, float, float, float)*, [4 x i64] }
%class.GrGLFunction.412 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.406 = type { void (i8*, i32, i32, float*)*, [4 x i64] }
%class.GrGLFunction.407 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.413 = type { void (i8*, i32, i32, i8, float*)*, [4 x i64] }
%class.GrGLFunction.376 = type { i8 (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.414 = type { void (i8*, i8*)*, [4 x i64] }
%class.GrGLFunction.415 = type { void (i8*, i32, float)*, [4 x i64] }
%class.GrGLFunction.416 = type { void (i8*, i32, float*)*, [4 x i64] }
%class.GrGLFunction.327 = type { void (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.417 = type { void (i8*, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.418 = type { void (i8*, i32, i32, i32, i8, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.395 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.419 = type { %struct.__GLsync* (i8*, i32, i32)*, [4 x i64] }
%struct.__GLsync = type opaque
%class.GrGLFunction.420 = type { i8 (i8*, %struct.__GLsync*)*, [4 x i64] }
%class.GrGLFunction.421 = type { i32 (i8*, %struct.__GLsync*, i32, i64)*, [4 x i64] }
%class.GrGLFunction.422 = type { void (i8*, %struct.__GLsync*, i32, i64)*, [4 x i64] }
%class.GrGLFunction.423 = type { void (i8*, %struct.__GLsync*)*, [4 x i64] }
%class.GrGLFunction.424 = type { void (i8*, i32, i32, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.425 = type { void (i8*, i32, i32, i32, i32, i32*, i8)*, [4 x i64] }
%class.GrGLFunction.426 = type { void (i8*, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.427 = type { void (i8*, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, [4 x i64] }
%class.GrGLFunction.428 = type { i32 (i8*, i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, [4 x i64] }
%class.GrGLFunction.330 = type { void (i8*)*, [4 x i64] }
%class.GrGLFunction.429 = type { void (i8*, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.430 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.431 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction = type { void (i8*, i32)*, [4 x i64] }
%struct.GrGLDriverInfo = type <{ i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i8, [7 x i8] }>
%class.sk_sp.432 = type { %class.GrGLCaps* }
%class.sk_sp.436 = type { %"class.GrGLGpu::ProgramCache"* }
%"class.GrGLGpu::ProgramCache" = type { %class.GrThreadSafePipelineBuilder.base, %class.SkLRUCache }
%class.GrThreadSafePipelineBuilder.base = type { %class.SkRefCnt.base, %"class.GrThreadSafePipelineBuilder::Stats" }
%"class.GrThreadSafePipelineBuilder::Stats" = type { i8 }
%class.SkLRUCache = type { i32, %class.SkTHashTable.437, %class.SkTInternalLList }
%class.SkTHashTable.437 = type { i32, i32, %class.SkAutoTArray.438 }
%class.SkAutoTArray.438 = type { %"class.std::__1::unique_ptr.439" }
%"class.std::__1::unique_ptr.439" = type { %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"struct.SkTHashTable<SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Entry *, GrProgramDesc, SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Traits>::Slot"* }
%"struct.SkTHashTable<SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Entry *, GrProgramDesc, SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Traits>::Slot" = type opaque
%class.SkTInternalLList = type { %"struct.SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Entry"*, %"struct.SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Entry"* }
%"struct.SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Entry" = type opaque
%class.sk_sp.445 = type { %class.GrGLProgram* }
%class.GrGLProgram = type <{ %class.SkRefCnt.base, %"struct.GrGLProgram::RenderTargetState", %struct.GrGLSLBuiltinUniformHandles, i32, [4 x i8], %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.248", %"class.std::__1::vector.254", %"class.std::__1::unique_ptr.446", i32, i32, i32, i32, %class.GrGLGpu*, %class.GrGLProgramDataManager, i32, [4 x i8] }>
%"struct.GrGLProgram::RenderTargetState" = type { %struct.SkISize, i32 }
%class.GrGLProgramDataManager = type { %class.GrGLSLProgramDataManager, %class.SkTArray.452, %class.GrGLGpu* }
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%class.SkTArray.452 = type { %"struct.GrGLProgramDataManager::Uniform"*, i64 }
%"struct.GrGLProgramDataManager::Uniform" = type { i32 }
%struct.anon.453 = type { i32, %struct.GrNativeRect }
%class.anon = type { i32, i32, i32, %class.GrWindowRectsState }
%struct.GrNativeRect = type { i32, i32, i32, i32 }
%"class.GrGLGpu::HWVertexArrayState" = type { i32, i8, [3 x i8], %class.GrGLAttribArrayState, %class.GrGLVertexArray* }
%class.GrGLAttribArrayState = type <{ %class.SkSTArray.454, i32, i8, i8, [2 x i8] }>
%class.SkSTArray.454 = type { %class.SkAlignedSTStorage.455, %class.SkTArray.456 }
%class.SkAlignedSTStorage.455 = type { [640 x i8] }
%class.SkTArray.456 = type { %"struct.GrGLAttribArrayState::AttribArrayState"*, i64 }
%"struct.GrGLAttribArrayState::AttribArrayState" = type <{ %"class.GrGpuResource::UniqueID", i8, [3 x i8], i32, i32, i32, [4 x i8], i8*, i32, [4 x i8] }>
%class.GrGLVertexArray = type { i32, [4 x i8], %class.GrGLAttribArrayState, %"class.GrGpuResource::UniqueID", [4 x i8] }
%struct.anon.457 = type <{ i32, %"class.GrGpuResource::UniqueID", i8, [3 x i8] }>
%struct.anon.458 = type { i32, i32, i32, %struct.SkRGBA4f, i8, i32 }
%struct.SkRGBA4f = type { float, float, float, float }
%class.GrStencilSettings = type { i32, %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face" }
%"struct.GrStencilSettings::Face" = type { %struct.GrTStencilFaceSettings.459 }
%struct.GrTStencilFaceSettings.459 = type { i16, i16, i16, i8, i8, i16 }
%class.SkAutoTArray.460 = type { %"class.std::__1::unique_ptr.461" }
%"class.std::__1::unique_ptr.461" = type { %"class.std::__1::__compressed_pair.462" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.463" }
%"struct.std::__1::__compressed_pair_elem.463" = type { %"class.GrGLGpu::TextureUnitBindings"* }
%"class.GrGLGpu::TextureUnitBindings" = type { [3 x %"struct.GrGLGpu::TextureUnitBindings::TargetBinding"] }
%"struct.GrGLGpu::TextureUnitBindings::TargetBinding" = type <{ %"class.GrGpuResource::UniqueID", i8, [3 x i8] }>
%struct.anon.467 = type { i32, i32, i32, i32 }
%struct.anon.469 = type { i32, i32, i32 }
%class.sk_sp.468 = type { %class.GrGLBuffer* }
%class.GrGLBuffer = type opaque
%"class.std::__1::unique_ptr.470" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.GrGLGpu::SamplerObjectCache"* }
%"class.GrGLGpu::SamplerObjectCache" = type opaque
%"class.std::__1::unique_ptr.476" = type { %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %class.GrGLOpsRenderPass* }
%class.GrGLOpsRenderPass = type opaque
%class.GrFinishCallbacks = type { %class.GrGpu*, %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.482" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%class.GrGLVaryingHandler = type { %class.GrGLSLVaryingHandler }
%class.GrGLSLVaryingHandler = type { i32 (...)**, [8 x i8], %class.GrTBlockList.486, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrGLSLProgramBuilder*, i8* }
%class.GrTBlockList.486 = type { %class.GrSBlockAllocator.487 }
%class.GrSBlockAllocator.487 = type { [80 x i8] }
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"struct.GrGLProgram::Attribute"* }
%"struct.GrGLProgram::Attribute" = type { i32, i32, i64, i32 }

$_ZN12GrTBlockListIN22GrGLProgramDataManager13GLUniformInfoELi1EE9push_backEOS1_ = comdat any

$_ZN18GrGLUniformHandlerD2Ev = comdat any

$_ZN18GrGLUniformHandlerD0Ev = comdat any

$_ZNK18GrGLUniformHandler18getUniformVariableE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE = comdat any

$_ZNK18GrGLUniformHandler14getUniformCStrE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE = comdat any

$_ZNK18GrGLUniformHandler11numUniformsEv = comdat any

$_ZN18GrGLUniformHandler7uniformEi = comdat any

$_ZNK18GrGLUniformHandler7uniformEi = comdat any

$_ZNK18GrGLUniformHandler15samplerVariableE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEE = comdat any

$_ZNK18GrGLUniformHandler14samplerSwizzleE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEE = comdat any

$_ZNK20GrGLSLUniformHandler20inputSamplerVariableE16GrResourceHandleINS_17SamplerHandleKindEE = comdat any

$_ZNK20GrGLSLUniformHandler19inputSamplerSwizzleE16GrResourceHandleINS_17SamplerHandleKindEE = comdat any

$_ZN20GrGLSLUniformHandler15addInputSamplerERK9GrSwizzlePKc = comdat any

$_ZN12GrTBlockListIN22GrGLProgramDataManager13GLUniformInfoELi1EE5resetEv = comdat any

$_ZN9GrSwizzleC2EPKc = comdat any

$_ZN8SkTArrayI9GrSwizzleLb0EE12checkReallocEiNS1_11ReallocTypeE = comdat any

$_ZN4SkSL8Compiler13RTADJUST_NAMEE = comdat any

@.str = private unnamed_addr constant [4 x i8] c"sk_\00", align 1
@_ZN4SkSL8Compiler13RTADJUST_NAMEE = linkonce_odr hidden constant [12 x i8] c"sk_RTAdjust\00", comdat, align 1
@.str.1 = private unnamed_addr constant [2 x i8] c";\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c";\0A\00", align 1
@_ZTV18GrGLUniformHandler = hidden unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLUniformHandler*)* @_ZN18GrGLUniformHandlerD2Ev to i8*), i8* bitcast (void (%class.GrGLUniformHandler*)* @_ZN18GrGLUniformHandlerD0Ev to i8*), i8* bitcast (%class.GrShaderVar* (%class.GrGLUniformHandler*, i32)* @_ZNK18GrGLUniformHandler18getUniformVariableE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE to i8*), i8* bitcast (i8* (%class.GrGLUniformHandler*, i32)* @_ZNK18GrGLUniformHandler14getUniformCStrE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE to i8*), i8* bitcast (i32 (%class.GrGLUniformHandler*)* @_ZNK18GrGLUniformHandler11numUniformsEv to i8*), i8* bitcast (%"struct.GrGLSLUniformHandler::UniformInfo"* (%class.GrGLUniformHandler*, i32)* @_ZN18GrGLUniformHandler7uniformEi to i8*), i8* bitcast (%"struct.GrGLSLUniformHandler::UniformInfo"* (%class.GrGLUniformHandler*, i32)* @_ZNK18GrGLUniformHandler7uniformEi to i8*), i8* bitcast (i8* (%class.GrGLUniformHandler*, i32)* @_ZNK18GrGLUniformHandler15samplerVariableE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEE to i8*), i8* bitcast (void (%class.GrSwizzle*, %class.GrGLUniformHandler*, i32)* @_ZNK18GrGLUniformHandler14samplerSwizzleE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEE to i8*), i8* bitcast (i8* (%class.GrGLSLUniformHandler*, i32)* @_ZNK20GrGLSLUniformHandler20inputSamplerVariableE16GrResourceHandleINS_17SamplerHandleKindEE to i8*), i8* bitcast (void (%class.GrSwizzle*, %class.GrGLSLUniformHandler*, i32)* @_ZNK20GrGLSLUniformHandler19inputSamplerSwizzleE16GrResourceHandleINS_17SamplerHandleKindEE to i8*), i8* bitcast (i32 (%class.GrGLUniformHandler*, %class.GrBackendFormat*, i64, i32, %class.GrSwizzle*, i8*, %class.GrShaderCaps*)* @_ZN18GrGLUniformHandler10addSamplerERK15GrBackendFormat14GrSamplerStateRK9GrSwizzlePKcPK12GrShaderCaps to i8*), i8* bitcast (i32 (%class.GrGLSLUniformHandler*, %class.GrSwizzle*, i8*)* @_ZN20GrGLSLUniformHandler15addInputSamplerERK9GrSwizzlePKc to i8*), i8* bitcast (i32 (%class.GrGLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)* @_ZN18GrGLUniformHandler23internalAddUniformArrayEPK19GrFragmentProcessorj8GrSLTypePKcbiPS5_ to i8*), i8* bitcast (void (%class.GrGLUniformHandler*, i32, %class.SkString*)* @_ZNK18GrGLUniformHandler18appendUniformDeclsE13GrShaderFlagsP8SkString to i8*)] }, align 8
@.str.3 = private unnamed_addr constant [53 x i8] c"../../third_party/skia/include/private/GrTypesPriv.h\00", align 1
@.str.4 = private unnamed_addr constant [24 x i8] c"Unexpected texture type\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"rgba\00", align 1
@switch.table._ZN18GrGLUniformHandler10addSamplerERK15GrBackendFormat14GrSamplerStateRK9GrSwizzlePKcPK12GrShaderCaps = private unnamed_addr constant [3 x i32] [i32 43, i32 45, i32 44], align 4

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_Z10valid_namePKc(i8* nocapture readonly) local_unnamed_addr #0 {
  %2 = tail call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3) #11
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %1
  %5 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZN4SkSL8Compiler13RTADJUST_NAMEE, i64 0, i64 0)) #11
  %6 = icmp eq i32 %5, 0
  br label %7

7:                                                ; preds = %1, %4
  %8 = phi i1 [ %6, %4 ], [ true, %1 ]
  ret i1 %8
}

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN18GrGLUniformHandler23internalAddUniformArrayEPK19GrFragmentProcessorj8GrSLTypePKcbiPS5_(%class.GrGLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1 zeroext, i32, i8**) unnamed_addr #2 align 2 {
  %9 = alloca %class.SkString, align 8
  %10 = alloca %"struct.GrGLProgramDataManager::GLUniformInfo", align 8
  %11 = alloca %class.SkString, align 8
  %12 = load i8, i8* %4, align 1
  %13 = icmp eq i8 %12, 117
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  %15 = tail call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3) #11
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14, %8
  br label %18

18:                                               ; preds = %14, %17
  %19 = phi i8 [ 0, %17 ], [ 117, %14 ]
  %20 = bitcast %class.SkString* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  %21 = getelementptr inbounds %class.SkString, %class.SkString* %9, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %21, align 8
  %22 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 0, i32 1
  %23 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %22, align 8
  call void @_ZN20GrGLSLProgramBuilder12nameVariableEcPKcb(%class.SkString* nonnull sret %9, %class.GrGLSLProgramBuilder* %23, i8 signext %19, i8* %4, i1 zeroext %5) #12
  %24 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 1
  %25 = bitcast %"struct.GrGLProgramDataManager::GLUniformInfo"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %25) #12
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %11, %class.SkString* nonnull dereferenceable(8) %9) #12
  %26 = getelementptr inbounds %"struct.GrGLProgramDataManager::GLUniformInfo", %"struct.GrGLProgramDataManager::GLUniformInfo"* %10, i64 0, i32 0, i32 0, i32 0
  store i32 %3, i32* %26, align 8
  %27 = getelementptr inbounds %"struct.GrGLProgramDataManager::GLUniformInfo", %"struct.GrGLProgramDataManager::GLUniformInfo"* %10, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %27, align 4
  %28 = getelementptr inbounds %"struct.GrGLProgramDataManager::GLUniformInfo", %"struct.GrGLProgramDataManager::GLUniformInfo"* %10, i64 0, i32 0, i32 0, i32 2
  store i32 %6, i32* %28, align 8
  %29 = getelementptr inbounds %"struct.GrGLProgramDataManager::GLUniformInfo", %"struct.GrGLProgramDataManager::GLUniformInfo"* %10, i64 0, i32 0, i32 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %29, %class.SkString* nonnull dereferenceable(8) %11) #12
  %30 = getelementptr inbounds %"struct.GrGLProgramDataManager::GLUniformInfo", %"struct.GrGLProgramDataManager::GLUniformInfo"* %10, i64 0, i32 0, i32 0, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %30) #12
  %31 = getelementptr inbounds %"struct.GrGLProgramDataManager::GLUniformInfo", %"struct.GrGLProgramDataManager::GLUniformInfo"* %10, i64 0, i32 0, i32 0, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %31) #12
  %32 = getelementptr inbounds %"struct.GrGLProgramDataManager::GLUniformInfo", %"struct.GrGLProgramDataManager::GLUniformInfo"* %10, i64 0, i32 0, i32 1
  store i32 %2, i32* %32, align 8
  %33 = getelementptr inbounds %"struct.GrGLProgramDataManager::GLUniformInfo", %"struct.GrGLProgramDataManager::GLUniformInfo"* %10, i64 0, i32 0, i32 2
  store %class.GrFragmentProcessor* %1, %class.GrFragmentProcessor** %33, align 8
  %34 = getelementptr inbounds %"struct.GrGLProgramDataManager::GLUniformInfo", %"struct.GrGLProgramDataManager::GLUniformInfo"* %10, i64 0, i32 0, i32 3
  call void @_ZN8SkStringC1EPKc(%class.SkString* %34, i8* %4) #12
  %35 = getelementptr inbounds %"struct.GrGLProgramDataManager::GLUniformInfo", %"struct.GrGLProgramDataManager::GLUniformInfo"* %10, i64 0, i32 1
  store i32 -1, i32* %35, align 8
  %36 = call dereferenceable(72) %"struct.GrGLProgramDataManager::GLUniformInfo"* @_ZN12GrTBlockListIN22GrGLProgramDataManager13GLUniformInfoELi1EE9push_backEOS1_(%class.GrTBlockList.271* %24, %"struct.GrGLProgramDataManager::GLUniformInfo"* nonnull dereferenceable(72) %10)
  call void @_ZN8SkStringD1Ev(%class.SkString* %34) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* %31) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* %30) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* %29) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %25) #12
  %37 = icmp eq i8** %7, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %18
  %39 = getelementptr inbounds %"struct.GrGLProgramDataManager::GLUniformInfo", %"struct.GrGLProgramDataManager::GLUniformInfo"* %36, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %40 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %39, align 8
  %41 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %40, i64 0, i32 2
  store i8* %41, i8** %7, align 8
  br label %42

42:                                               ; preds = %18, %38
  %43 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 1, i32 0, i32 0, i64 44
  %44 = bitcast i8* %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = add nsw i32 %45, -1
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  ret i32 %46
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN20GrGLSLProgramBuilder12nameVariableEcPKcb(%class.SkString* sret, %class.GrGLSLProgramBuilder*, i8 signext, i8*, i1 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(72) %"struct.GrGLProgramDataManager::GLUniformInfo"* @_ZN12GrTBlockListIN22GrGLProgramDataManager13GLUniformInfoELi1EE9push_backEOS1_(%class.GrTBlockList.271*, %"struct.GrGLProgramDataManager::GLUniformInfo"* dereferenceable(72)) local_unnamed_addr #2 comdat align 2 {
  %3 = bitcast %class.GrTBlockList.271* %0 to %"class.GrBlockAllocator::Block"**
  %4 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %3, align 16, !noalias !2
  %5 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %4, i64 0, i32 3
  %6 = load i32, i32* %5, align 4, !noalias !2
  %7 = add i32 %6, 7
  %8 = and i32 %7, -8
  %9 = add nsw i32 %8, 72
  %10 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %4, i64 0, i32 2
  %11 = load i32, i32* %10, align 8, !noalias !2
  %12 = icmp sgt i32 %9, %11
  br i1 %12, label %13, label %21

13:                                               ; preds = %2
  %14 = bitcast %class.GrTBlockList.271* %0 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator8addBlockEii(%class.GrBlockAllocator* %14, i32 104, i32 536870944) #12, !noalias !2
  %15 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %3, align 16, !noalias !2
  %16 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %15, i64 0, i32 3
  %17 = load i32, i32* %16, align 4, !noalias !2
  %18 = add i32 %17, 7
  %19 = and i32 %18, -8
  %20 = add nsw i32 %19, 72
  br label %21

21:                                               ; preds = %2, %13
  %22 = phi %"class.GrBlockAllocator::Block"* [ %15, %13 ], [ %4, %2 ]
  %23 = phi i32 [ %19, %13 ], [ %8, %2 ]
  %24 = phi i32 [ %20, %13 ], [ %9, %2 ]
  %25 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %22, i64 0, i32 3
  store i32 %24, i32* %25, align 4, !noalias !2
  %26 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %3, align 16, !noalias !2
  %27 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %26, i64 0, i32 4
  store i32 %23, i32* %27, align 8
  %28 = getelementptr inbounds %class.GrTBlockList.271, %class.GrTBlockList.271* %0, i64 0, i32 0, i32 0, i64 44
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %29, align 4
  %32 = bitcast %"class.GrBlockAllocator::Block"* %26 to i8*
  %33 = sext i32 %23 to i64
  %34 = getelementptr inbounds i8, i8* %32, i64 %33
  %35 = bitcast i8* %34 to %"struct.GrGLProgramDataManager::GLUniformInfo"*
  %36 = bitcast %"struct.GrGLProgramDataManager::GLUniformInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %36, i64 12, i1 false) #12
  %37 = getelementptr inbounds i8, i8* %34, i64 16
  %38 = bitcast i8* %37 to %class.SkString*
  %39 = getelementptr inbounds %"struct.GrGLProgramDataManager::GLUniformInfo", %"struct.GrGLProgramDataManager::GLUniformInfo"* %1, i64 0, i32 0, i32 0, i32 3
  tail call void @_ZN8SkStringC1EOS_(%class.SkString* %38, %class.SkString* dereferenceable(8) %39) #12
  %40 = getelementptr inbounds i8, i8* %34, i64 24
  %41 = bitcast i8* %40 to %class.SkString*
  %42 = getelementptr inbounds %"struct.GrGLProgramDataManager::GLUniformInfo", %"struct.GrGLProgramDataManager::GLUniformInfo"* %1, i64 0, i32 0, i32 0, i32 4
  tail call void @_ZN8SkStringC1EOS_(%class.SkString* %41, %class.SkString* dereferenceable(8) %42) #12
  %43 = getelementptr inbounds i8, i8* %34, i64 32
  %44 = bitcast i8* %43 to %class.SkString*
  %45 = getelementptr inbounds %"struct.GrGLProgramDataManager::GLUniformInfo", %"struct.GrGLProgramDataManager::GLUniformInfo"* %1, i64 0, i32 0, i32 0, i32 5
  tail call void @_ZN8SkStringC1EOS_(%class.SkString* %44, %class.SkString* dereferenceable(8) %45) #12
  %46 = getelementptr inbounds i8, i8* %34, i64 40
  %47 = getelementptr inbounds %"struct.GrGLProgramDataManager::GLUniformInfo", %"struct.GrGLProgramDataManager::GLUniformInfo"* %1, i64 0, i32 0, i32 1
  %48 = bitcast i32* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %48, i64 16, i1 false) #12
  %49 = getelementptr inbounds i8, i8* %34, i64 56
  %50 = bitcast i8* %49 to %class.SkString*
  %51 = getelementptr inbounds %"struct.GrGLProgramDataManager::GLUniformInfo", %"struct.GrGLProgramDataManager::GLUniformInfo"* %1, i64 0, i32 0, i32 3
  tail call void @_ZN8SkStringC1EOS_(%class.SkString* %50, %class.SkString* dereferenceable(8) %51) #12
  %52 = getelementptr inbounds i8, i8* %34, i64 64
  %53 = bitcast i8* %52 to i32*
  %54 = getelementptr inbounds %"struct.GrGLProgramDataManager::GLUniformInfo", %"struct.GrGLProgramDataManager::GLUniformInfo"* %1, i64 0, i32 1
  %55 = load i32, i32* %54, align 8
  store i32 %55, i32* %53, align 8
  ret %"struct.GrGLProgramDataManager::GLUniformInfo"* %35
}

declare void @_ZN8SkStringC1EOS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #4

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN18GrGLUniformHandler10addSamplerERK15GrBackendFormat14GrSamplerStateRK9GrSwizzlePKcPK12GrShaderCaps(%class.GrGLUniformHandler*, %class.GrBackendFormat* nocapture readonly dereferenceable(72), i64, i32, %class.GrSwizzle* nocapture readonly dereferenceable(2), i8*, %class.GrShaderCaps* nocapture readnone) unnamed_addr #2 align 2 {
  %8 = alloca %class.SkString, align 8
  %9 = alloca %"struct.GrGLProgramDataManager::GLUniformInfo", align 8
  %10 = alloca %class.SkString, align 8
  %11 = bitcast %class.SkString* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = getelementptr inbounds %class.SkString, %class.SkString* %8, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %12, align 8
  %13 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 0, i32 1
  %14 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %13, align 8
  call void @_ZN20GrGLSLProgramBuilder12nameVariableEcPKcb(%class.SkString* nonnull sret %8, %class.GrGLSLProgramBuilder* %14, i8 signext 117, i8* %5, i1 zeroext true) #12
  %15 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = bitcast %"struct.GrGLProgramDataManager::GLUniformInfo"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %17) #12
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %10, %class.SkString* nonnull dereferenceable(8) %8) #12
  %18 = add i32 %16, -1
  %19 = icmp ult i32 %18, 3
  br i1 %19, label %21, label %20

20:                                               ; preds = %7
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.3, i64 0, i64 0), i32 573, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

21:                                               ; preds = %7
  %22 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 2
  %23 = sext i32 %18 to i64
  %24 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN18GrGLUniformHandler10addSamplerERK15GrBackendFormat14GrSamplerStateRK9GrSwizzlePKcPK12GrShaderCaps, i64 0, i64 %23
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"struct.GrGLProgramDataManager::GLUniformInfo", %"struct.GrGLProgramDataManager::GLUniformInfo"* %9, i64 0, i32 0, i32 0, i32 0
  store i32 %25, i32* %26, align 8
  %27 = getelementptr inbounds %"struct.GrGLProgramDataManager::GLUniformInfo", %"struct.GrGLProgramDataManager::GLUniformInfo"* %9, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %27, align 4
  %28 = getelementptr inbounds %"struct.GrGLProgramDataManager::GLUniformInfo", %"struct.GrGLProgramDataManager::GLUniformInfo"* %9, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %28, align 8
  %29 = getelementptr inbounds %"struct.GrGLProgramDataManager::GLUniformInfo", %"struct.GrGLProgramDataManager::GLUniformInfo"* %9, i64 0, i32 0, i32 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %29, %class.SkString* nonnull dereferenceable(8) %10) #12
  %30 = getelementptr inbounds %"struct.GrGLProgramDataManager::GLUniformInfo", %"struct.GrGLProgramDataManager::GLUniformInfo"* %9, i64 0, i32 0, i32 0, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %30) #12
  %31 = getelementptr inbounds %"struct.GrGLProgramDataManager::GLUniformInfo", %"struct.GrGLProgramDataManager::GLUniformInfo"* %9, i64 0, i32 0, i32 0, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %31) #12
  %32 = getelementptr inbounds %"struct.GrGLProgramDataManager::GLUniformInfo", %"struct.GrGLProgramDataManager::GLUniformInfo"* %9, i64 0, i32 0, i32 1
  store i32 16, i32* %32, align 8
  %33 = getelementptr inbounds %"struct.GrGLProgramDataManager::GLUniformInfo", %"struct.GrGLProgramDataManager::GLUniformInfo"* %9, i64 0, i32 0, i32 2
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %33, align 8
  %34 = getelementptr inbounds %"struct.GrGLProgramDataManager::GLUniformInfo", %"struct.GrGLProgramDataManager::GLUniformInfo"* %9, i64 0, i32 0, i32 3
  call void @_ZN8SkStringC1EPKc(%class.SkString* %34, i8* %5) #12
  %35 = getelementptr inbounds %"struct.GrGLProgramDataManager::GLUniformInfo", %"struct.GrGLProgramDataManager::GLUniformInfo"* %9, i64 0, i32 1
  store i32 -1, i32* %35, align 8
  %36 = call dereferenceable(72) %"struct.GrGLProgramDataManager::GLUniformInfo"* @_ZN12GrTBlockListIN22GrGLProgramDataManager13GLUniformInfoELi1EE9push_backEOS1_(%class.GrTBlockList.271* %22, %"struct.GrGLProgramDataManager::GLUniformInfo"* nonnull dereferenceable(72) %9)
  call void @_ZN8SkStringD1Ev(%class.SkString* %34) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* %31) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* %30) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* %29) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %17) #12
  %37 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 3
  call void @_ZN8SkTArrayI9GrSwizzleLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.274* %37, i32 1, i32 1) #12
  %38 = getelementptr inbounds %class.SkTArray.274, %class.SkTArray.274* %37, i64 0, i32 0
  %39 = load %class.GrSwizzle*, %class.GrSwizzle** %38, align 8
  %40 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 3, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = lshr i64 %41, 1
  %43 = and i64 %42, 2147483647
  %44 = add i64 %41, 2
  %45 = and i64 %44, 4294967294
  %46 = and i64 %41, -4294967295
  %47 = or i64 %45, %46
  store i64 %47, i64* %40, align 8
  %48 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %39, i64 %43, i32 0
  %49 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %4, i64 0, i32 0
  %50 = load i16, i16* %49, align 2
  store i16 %50, i16* %48, align 2
  %51 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 2, i32 0, i32 0, i64 44
  %52 = bitcast i8* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = add nsw i32 %53, -1
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  ret i32 %54
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK18GrGLUniformHandler18appendUniformDeclsE13GrShaderFlagsP8SkString(%class.GrGLUniformHandler*, i32, %class.SkString*) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %5 = bitcast i8* %4 to %"class.GrBlockAllocator::Block"**
  %6 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %5, align 8, !noalias !5
  %7 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 1, i32 0, i32 0, i64 40
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 8, !noalias !5
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %21

11:                                               ; preds = %3, %14
  %12 = phi %"class.GrBlockAllocator::Block"* [ %20, %14 ], [ %6, %3 ]
  %13 = icmp eq %"class.GrBlockAllocator::Block"* %12, null
  br i1 %13, label %30, label %14

14:                                               ; preds = %11
  %15 = bitcast %"class.GrBlockAllocator::Block"* %12 to i64*
  %16 = load i64, i64* %15, align 8, !noalias !5
  %17 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %12, i64 0, i32 4
  %18 = load i32, i32* %17, align 8, !noalias !5
  %19 = icmp eq i32 %18, 0
  %20 = inttoptr i64 %16 to %"class.GrBlockAllocator::Block"*
  br i1 %19, label %11, label %25

21:                                               ; preds = %3
  %22 = bitcast i8* %4 to %"class.GrBlockAllocator::Block"*
  %23 = ptrtoint %"class.GrBlockAllocator::Block"* %6 to i64
  %24 = icmp eq i8* %4, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %14, %21
  %26 = phi i32 [ %9, %21 ], [ %18, %14 ]
  %27 = phi i64 [ %23, %21 ], [ %16, %14 ]
  %28 = phi %"class.GrBlockAllocator::Block"* [ %22, %21 ], [ %12, %14 ]
  %29 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 0, i32 1
  br label %57

30:                                               ; preds = %11, %83, %103, %93, %21
  %31 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 2, i32 0, i32 0, i64 16
  %32 = bitcast i8* %31 to %"class.GrBlockAllocator::Block"**
  %33 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %32, align 8, !noalias !8
  %34 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 2, i32 0, i32 0, i64 40
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 8, !noalias !8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %48

38:                                               ; preds = %30, %41
  %39 = phi %"class.GrBlockAllocator::Block"* [ %47, %41 ], [ %33, %30 ]
  %40 = icmp eq %"class.GrBlockAllocator::Block"* %39, null
  br i1 %40, label %109, label %41

41:                                               ; preds = %38
  %42 = bitcast %"class.GrBlockAllocator::Block"* %39 to i64*
  %43 = load i64, i64* %42, align 8, !noalias !8
  %44 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %39, i64 0, i32 4
  %45 = load i32, i32* %44, align 8, !noalias !8
  %46 = icmp eq i32 %45, 0
  %47 = inttoptr i64 %43 to %"class.GrBlockAllocator::Block"*
  br i1 %46, label %38, label %52

48:                                               ; preds = %30
  %49 = bitcast i8* %31 to %"class.GrBlockAllocator::Block"*
  %50 = ptrtoint %"class.GrBlockAllocator::Block"* %33 to i64
  %51 = icmp eq i8* %31, null
  br i1 %51, label %109, label %52

52:                                               ; preds = %41, %48
  %53 = phi %"class.GrBlockAllocator::Block"* [ %49, %48 ], [ %39, %41 ]
  %54 = phi i64 [ %50, %48 ], [ %43, %41 ]
  %55 = phi i32 [ %36, %48 ], [ %45, %41 ]
  %56 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 0, i32 1
  br label %110

57:                                               ; preds = %25, %103
  %58 = phi i32 [ %26, %25 ], [ %107, %103 ]
  %59 = phi i32 [ 32, %25 ], [ %106, %103 ]
  %60 = phi i64 [ %27, %25 ], [ %105, %103 ]
  %61 = phi %"class.GrBlockAllocator::Block"* [ %28, %25 ], [ %104, %103 ]
  %62 = bitcast %"class.GrBlockAllocator::Block"* %61 to i8*
  %63 = sext i32 %59 to i64
  %64 = getelementptr inbounds i8, i8* %62, i64 %63
  %65 = getelementptr inbounds i8, i8* %64, i64 40
  %66 = bitcast i8* %65 to i32*
  %67 = load i32, i32* %66, align 8
  %68 = and i32 %67, %1
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %80, label %70

70:                                               ; preds = %57
  %71 = bitcast i8* %64 to %class.GrShaderVar*
  %72 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %29, align 8
  %73 = bitcast %class.GrGLSLProgramBuilder* %72 to %class.GrCaps* (%class.GrGLSLProgramBuilder*)***
  %74 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %73, align 16
  %75 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %74, i64 2
  %76 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %75, align 8
  %77 = tail call %class.GrCaps* %76(%class.GrGLSLProgramBuilder* %72) #12
  %78 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %77, i64 0, i32 2, i32 0
  %79 = load %class.GrShaderCaps*, %class.GrShaderCaps** %78, align 8
  tail call void @_ZNK11GrShaderVar10appendDeclEPK12GrShaderCapsP8SkString(%class.GrShaderVar* %71, %class.GrShaderCaps* %79, %class.SkString* %2) #12
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %2, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #12
  br label %80

80:                                               ; preds = %57, %70
  %81 = add i32 %59, 72
  %82 = icmp sgt i32 %81, %58
  br i1 %82, label %83, label %103

83:                                               ; preds = %80
  %84 = inttoptr i64 %60 to %"class.GrBlockAllocator::Block"*
  %85 = icmp eq i64 %60, 0
  br i1 %85, label %30, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %84, i64 0, i32 0
  %88 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %87, align 8
  %89 = ptrtoint %"class.GrBlockAllocator::Block"* %88 to i64
  %90 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %84, i64 0, i32 4
  %91 = load i32, i32* %90, align 8
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %103

93:                                               ; preds = %86, %96
  %94 = phi %"class.GrBlockAllocator::Block"* [ %102, %96 ], [ %88, %86 ]
  %95 = icmp eq %"class.GrBlockAllocator::Block"* %94, null
  br i1 %95, label %30, label %96

96:                                               ; preds = %93
  %97 = bitcast %"class.GrBlockAllocator::Block"* %94 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %94, i64 0, i32 4
  %100 = load i32, i32* %99, align 8
  %101 = icmp eq i32 %100, 0
  %102 = inttoptr i64 %98 to %"class.GrBlockAllocator::Block"*
  br i1 %101, label %93, label %103

103:                                              ; preds = %96, %86, %80
  %104 = phi %"class.GrBlockAllocator::Block"* [ %61, %80 ], [ %84, %86 ], [ %94, %96 ]
  %105 = phi i64 [ %60, %80 ], [ %89, %86 ], [ %98, %96 ]
  %106 = phi i32 [ %81, %80 ], [ 32, %86 ], [ 32, %96 ]
  %107 = phi i32 [ %58, %80 ], [ %91, %86 ], [ %100, %96 ]
  %108 = icmp eq %"class.GrBlockAllocator::Block"* %104, null
  br i1 %108, label %30, label %57

109:                                              ; preds = %38, %136, %156, %146, %48
  ret void

110:                                              ; preds = %52, %156
  %111 = phi %"class.GrBlockAllocator::Block"* [ %53, %52 ], [ %160, %156 ]
  %112 = phi i64 [ %54, %52 ], [ %159, %156 ]
  %113 = phi i32 [ 32, %52 ], [ %158, %156 ]
  %114 = phi i32 [ %55, %52 ], [ %157, %156 ]
  %115 = bitcast %"class.GrBlockAllocator::Block"* %111 to i8*
  %116 = sext i32 %113 to i64
  %117 = getelementptr inbounds i8, i8* %115, i64 %116
  %118 = getelementptr inbounds i8, i8* %117, i64 40
  %119 = bitcast i8* %118 to i32*
  %120 = load i32, i32* %119, align 8
  %121 = and i32 %120, %1
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %133, label %123

123:                                              ; preds = %110
  %124 = bitcast i8* %117 to %class.GrShaderVar*
  %125 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %56, align 8
  %126 = bitcast %class.GrGLSLProgramBuilder* %125 to %class.GrCaps* (%class.GrGLSLProgramBuilder*)***
  %127 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %126, align 16
  %128 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %127, i64 2
  %129 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %128, align 8
  %130 = tail call %class.GrCaps* %129(%class.GrGLSLProgramBuilder* %125) #12
  %131 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %130, i64 0, i32 2, i32 0
  %132 = load %class.GrShaderCaps*, %class.GrShaderCaps** %131, align 8
  tail call void @_ZNK11GrShaderVar10appendDeclEPK12GrShaderCapsP8SkString(%class.GrShaderVar* %124, %class.GrShaderCaps* %132, %class.SkString* %2) #12
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %2, i64 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #12
  br label %133

133:                                              ; preds = %110, %123
  %134 = add i32 %113, 72
  %135 = icmp sgt i32 %134, %114
  br i1 %135, label %136, label %156

136:                                              ; preds = %133
  %137 = inttoptr i64 %112 to %"class.GrBlockAllocator::Block"*
  %138 = icmp eq i64 %112, 0
  br i1 %138, label %109, label %139

139:                                              ; preds = %136
  %140 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %137, i64 0, i32 0
  %141 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %140, align 8
  %142 = ptrtoint %"class.GrBlockAllocator::Block"* %141 to i64
  %143 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %137, i64 0, i32 4
  %144 = load i32, i32* %143, align 8
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %156

146:                                              ; preds = %139, %149
  %147 = phi %"class.GrBlockAllocator::Block"* [ %155, %149 ], [ %141, %139 ]
  %148 = icmp eq %"class.GrBlockAllocator::Block"* %147, null
  br i1 %148, label %109, label %149

149:                                              ; preds = %146
  %150 = bitcast %"class.GrBlockAllocator::Block"* %147 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %147, i64 0, i32 4
  %153 = load i32, i32* %152, align 8
  %154 = icmp eq i32 %153, 0
  %155 = inttoptr i64 %151 to %"class.GrBlockAllocator::Block"*
  br i1 %154, label %146, label %156

156:                                              ; preds = %149, %139, %133
  %157 = phi i32 [ %114, %133 ], [ %144, %139 ], [ %153, %149 ]
  %158 = phi i32 [ %134, %133 ], [ 32, %139 ], [ 32, %149 ]
  %159 = phi i64 [ %112, %133 ], [ %142, %139 ], [ %151, %149 ]
  %160 = phi %"class.GrBlockAllocator::Block"* [ %111, %133 ], [ %137, %139 ], [ %147, %149 ]
  %161 = icmp eq %"class.GrBlockAllocator::Block"* %160, null
  br i1 %161, label %109, label %110
}

declare void @_ZNK11GrShaderVar10appendDeclEPK12GrShaderCapsP8SkString(%class.GrShaderVar*, %class.GrShaderCaps*, %class.SkString*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18GrGLUniformHandler20bindUniformLocationsEjRK8GrGLCaps(%class.GrGLUniformHandler*, i32, %class.GrGLCaps* nocapture readonly dereferenceable(2160)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %2, i64 0, i32 12
  %5 = bitcast i40* %4 to i64*
  %6 = load i64, i64* %5, align 4
  %7 = and i64 %6, 1024
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %176, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %11 = bitcast i8* %10 to %"class.GrBlockAllocator::Block"**
  %12 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %11, align 8, !noalias !11
  %13 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 1, i32 0, i32 0, i64 40
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 8, !noalias !11
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %27

17:                                               ; preds = %9, %20
  %18 = phi %"class.GrBlockAllocator::Block"* [ %26, %20 ], [ %12, %9 ]
  %19 = icmp eq %"class.GrBlockAllocator::Block"* %18, null
  br i1 %19, label %37, label %20

20:                                               ; preds = %17
  %21 = bitcast %"class.GrBlockAllocator::Block"* %18 to i64*
  %22 = load i64, i64* %21, align 8, !noalias !11
  %23 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %18, i64 0, i32 4
  %24 = load i32, i32* %23, align 8, !noalias !11
  %25 = icmp eq i32 %24, 0
  %26 = inttoptr i64 %22 to %"class.GrBlockAllocator::Block"*
  br i1 %25, label %17, label %31

27:                                               ; preds = %9
  %28 = bitcast i8* %10 to %"class.GrBlockAllocator::Block"*
  %29 = ptrtoint %"class.GrBlockAllocator::Block"* %12 to i64
  %30 = icmp eq i8* %10, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %20, %27
  %32 = phi i32 [ %15, %27 ], [ %24, %20 ]
  %33 = phi i64 [ %29, %27 ], [ %22, %20 ]
  %34 = phi %"class.GrBlockAllocator::Block"* [ %28, %27 ], [ %18, %20 ]
  %35 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 0, i32 1
  %36 = bitcast %class.GrGLSLProgramBuilder** %35 to %class.GrGLProgramBuilder**
  br label %66

37:                                               ; preds = %17, %95, %115, %105, %27
  %38 = phi i32 [ 0, %27 ], [ %92, %105 ], [ %92, %115 ], [ %92, %95 ], [ 0, %17 ]
  %39 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 2, i32 0, i32 0, i64 16
  %40 = bitcast i8* %39 to %"class.GrBlockAllocator::Block"**
  %41 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %40, align 8, !noalias !14
  %42 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 2, i32 0, i32 0, i64 40
  %43 = bitcast i8* %42 to i32*
  %44 = load i32, i32* %43, align 8, !noalias !14
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %56

46:                                               ; preds = %37, %49
  %47 = phi %"class.GrBlockAllocator::Block"* [ %55, %49 ], [ %41, %37 ]
  %48 = icmp eq %"class.GrBlockAllocator::Block"* %47, null
  br i1 %48, label %176, label %49

49:                                               ; preds = %46
  %50 = bitcast %"class.GrBlockAllocator::Block"* %47 to i64*
  %51 = load i64, i64* %50, align 8, !noalias !14
  %52 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %47, i64 0, i32 4
  %53 = load i32, i32* %52, align 8, !noalias !14
  %54 = icmp eq i32 %53, 0
  %55 = inttoptr i64 %51 to %"class.GrBlockAllocator::Block"*
  br i1 %54, label %46, label %60

56:                                               ; preds = %37
  %57 = bitcast i8* %39 to %"class.GrBlockAllocator::Block"*
  %58 = ptrtoint %"class.GrBlockAllocator::Block"* %41 to i64
  %59 = icmp eq i8* %39, null
  br i1 %59, label %176, label %60

60:                                               ; preds = %49, %56
  %61 = phi %"class.GrBlockAllocator::Block"* [ %57, %56 ], [ %47, %49 ]
  %62 = phi i64 [ %58, %56 ], [ %51, %49 ]
  %63 = phi i32 [ %44, %56 ], [ %53, %49 ]
  %64 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 0, i32 1
  %65 = bitcast %class.GrGLSLProgramBuilder** %64 to %class.GrGLProgramBuilder**
  br label %121

66:                                               ; preds = %31, %115
  %67 = phi i32 [ 0, %31 ], [ %92, %115 ]
  %68 = phi i32 [ %32, %31 ], [ %119, %115 ]
  %69 = phi i32 [ 32, %31 ], [ %118, %115 ]
  %70 = phi i64 [ %33, %31 ], [ %117, %115 ]
  %71 = phi %"class.GrBlockAllocator::Block"* [ %34, %31 ], [ %116, %115 ]
  %72 = bitcast %"class.GrBlockAllocator::Block"* %71 to i8*
  %73 = sext i32 %69 to i64
  %74 = getelementptr inbounds i8, i8* %72, i64 %73
  %75 = load %class.GrGLProgramBuilder*, %class.GrGLProgramBuilder** %36, align 8
  %76 = getelementptr inbounds %class.GrGLProgramBuilder, %class.GrGLProgramBuilder* %75, i64 0, i32 1
  %77 = load %class.GrGLGpu*, %class.GrGLGpu** %76, align 16
  %78 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %77, i64 0, i32 1, i32 0, i32 0, i32 0
  %79 = load %class.GrGLContext*, %class.GrGLContext** %78, align 8
  %80 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %79, i64 0, i32 0, i32 1, i32 0
  %81 = load %struct.GrGLInterface*, %struct.GrGLInterface** %80, align 8
  %82 = getelementptr inbounds i8, i8* %74, i64 16
  %83 = bitcast i8* %82 to %"struct.SkString::Rec"**
  %84 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %83, align 8
  %85 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %84, i64 0, i32 2
  %86 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %81, i64 0, i32 3, i32 131, i32 0
  %87 = load void (i8*, i32, i32, i8*)*, void (i8*, i32, i32, i8*)** %86, align 8
  %88 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %81, i64 0, i32 3, i32 131, i32 1, i64 0
  %89 = bitcast i64* %88 to i8*
  tail call void %87(i8* %89, i32 %1, i32 %67, i8* %85) #12
  %90 = getelementptr inbounds i8, i8* %74, i64 64
  %91 = bitcast i8* %90 to i32*
  store i32 %67, i32* %91, align 8
  %92 = add nuw nsw i32 %67, 1
  %93 = add i32 %69, 72
  %94 = icmp sgt i32 %93, %68
  br i1 %94, label %95, label %115

95:                                               ; preds = %66
  %96 = inttoptr i64 %70 to %"class.GrBlockAllocator::Block"*
  %97 = icmp eq i64 %70, 0
  br i1 %97, label %37, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %96, i64 0, i32 0
  %100 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %99, align 8
  %101 = ptrtoint %"class.GrBlockAllocator::Block"* %100 to i64
  %102 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %96, i64 0, i32 4
  %103 = load i32, i32* %102, align 8
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %115

105:                                              ; preds = %98, %108
  %106 = phi %"class.GrBlockAllocator::Block"* [ %114, %108 ], [ %100, %98 ]
  %107 = icmp eq %"class.GrBlockAllocator::Block"* %106, null
  br i1 %107, label %37, label %108

108:                                              ; preds = %105
  %109 = bitcast %"class.GrBlockAllocator::Block"* %106 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %106, i64 0, i32 4
  %112 = load i32, i32* %111, align 8
  %113 = icmp eq i32 %112, 0
  %114 = inttoptr i64 %110 to %"class.GrBlockAllocator::Block"*
  br i1 %113, label %105, label %115

115:                                              ; preds = %108, %98, %66
  %116 = phi %"class.GrBlockAllocator::Block"* [ %71, %66 ], [ %96, %98 ], [ %106, %108 ]
  %117 = phi i64 [ %70, %66 ], [ %101, %98 ], [ %110, %108 ]
  %118 = phi i32 [ %93, %66 ], [ 32, %98 ], [ 32, %108 ]
  %119 = phi i32 [ %68, %66 ], [ %103, %98 ], [ %112, %108 ]
  %120 = icmp eq %"class.GrBlockAllocator::Block"* %116, null
  br i1 %120, label %37, label %66

121:                                              ; preds = %60, %170
  %122 = phi i32 [ %38, %60 ], [ %147, %170 ]
  %123 = phi %"class.GrBlockAllocator::Block"* [ %61, %60 ], [ %174, %170 ]
  %124 = phi i64 [ %62, %60 ], [ %173, %170 ]
  %125 = phi i32 [ 32, %60 ], [ %172, %170 ]
  %126 = phi i32 [ %63, %60 ], [ %171, %170 ]
  %127 = bitcast %"class.GrBlockAllocator::Block"* %123 to i8*
  %128 = sext i32 %125 to i64
  %129 = getelementptr inbounds i8, i8* %127, i64 %128
  %130 = load %class.GrGLProgramBuilder*, %class.GrGLProgramBuilder** %65, align 8
  %131 = getelementptr inbounds %class.GrGLProgramBuilder, %class.GrGLProgramBuilder* %130, i64 0, i32 1
  %132 = load %class.GrGLGpu*, %class.GrGLGpu** %131, align 16
  %133 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %132, i64 0, i32 1, i32 0, i32 0, i32 0
  %134 = load %class.GrGLContext*, %class.GrGLContext** %133, align 8
  %135 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %134, i64 0, i32 0, i32 1, i32 0
  %136 = load %struct.GrGLInterface*, %struct.GrGLInterface** %135, align 8
  %137 = getelementptr inbounds i8, i8* %129, i64 16
  %138 = bitcast i8* %137 to %"struct.SkString::Rec"**
  %139 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %138, align 8
  %140 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %139, i64 0, i32 2
  %141 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %136, i64 0, i32 3, i32 131, i32 0
  %142 = load void (i8*, i32, i32, i8*)*, void (i8*, i32, i32, i8*)** %141, align 8
  %143 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %136, i64 0, i32 3, i32 131, i32 1, i64 0
  %144 = bitcast i64* %143 to i8*
  tail call void %142(i8* %144, i32 %1, i32 %122, i8* %140) #12
  %145 = getelementptr inbounds i8, i8* %129, i64 64
  %146 = bitcast i8* %145 to i32*
  store i32 %122, i32* %146, align 8
  %147 = add nuw nsw i32 %122, 1
  %148 = add i32 %125, 72
  %149 = icmp sgt i32 %148, %126
  br i1 %149, label %150, label %170

150:                                              ; preds = %121
  %151 = inttoptr i64 %124 to %"class.GrBlockAllocator::Block"*
  %152 = icmp eq i64 %124, 0
  br i1 %152, label %176, label %153

153:                                              ; preds = %150
  %154 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %151, i64 0, i32 0
  %155 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %154, align 8
  %156 = ptrtoint %"class.GrBlockAllocator::Block"* %155 to i64
  %157 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %151, i64 0, i32 4
  %158 = load i32, i32* %157, align 8
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %170

160:                                              ; preds = %153, %163
  %161 = phi %"class.GrBlockAllocator::Block"* [ %169, %163 ], [ %155, %153 ]
  %162 = icmp eq %"class.GrBlockAllocator::Block"* %161, null
  br i1 %162, label %176, label %163

163:                                              ; preds = %160
  %164 = bitcast %"class.GrBlockAllocator::Block"* %161 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %161, i64 0, i32 4
  %167 = load i32, i32* %166, align 8
  %168 = icmp eq i32 %167, 0
  %169 = inttoptr i64 %165 to %"class.GrBlockAllocator::Block"*
  br i1 %168, label %160, label %170

170:                                              ; preds = %163, %153, %121
  %171 = phi i32 [ %126, %121 ], [ %158, %153 ], [ %167, %163 ]
  %172 = phi i32 [ %148, %121 ], [ 32, %153 ], [ 32, %163 ]
  %173 = phi i64 [ %124, %121 ], [ %156, %153 ], [ %165, %163 ]
  %174 = phi %"class.GrBlockAllocator::Block"* [ %123, %121 ], [ %151, %153 ], [ %161, %163 ]
  %175 = icmp eq %"class.GrBlockAllocator::Block"* %174, null
  br i1 %175, label %176, label %121

176:                                              ; preds = %46, %150, %170, %160, %56, %3
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.GrGLGpu* @_ZNK18GrGLUniformHandler5glGpuEv(%class.GrGLUniformHandler* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 0, i32 1
  %3 = bitcast %class.GrGLSLProgramBuilder** %2 to %class.GrGLProgramBuilder**
  %4 = load %class.GrGLProgramBuilder*, %class.GrGLProgramBuilder** %3, align 8
  %5 = getelementptr inbounds %class.GrGLProgramBuilder, %class.GrGLProgramBuilder* %4, i64 0, i32 1
  %6 = load %class.GrGLGpu*, %class.GrGLGpu** %5, align 16
  ret %class.GrGLGpu* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18GrGLUniformHandler19getUniformLocationsEjRK8GrGLCapsb(%class.GrGLUniformHandler*, i32, %class.GrGLCaps* nocapture readonly dereferenceable(2160), i1 zeroext) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %2, i64 0, i32 12
  %6 = bitcast i40* %5 to i64*
  %7 = load i64, i64* %6, align 4
  %8 = and i64 %7, 1024
  %9 = icmp eq i64 %8, 0
  %10 = or i1 %9, %3
  br i1 %10, label %11, label %175

11:                                               ; preds = %4
  %12 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %13 = bitcast i8* %12 to %"class.GrBlockAllocator::Block"**
  %14 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %13, align 8, !noalias !17
  %15 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 1, i32 0, i32 0, i64 40
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 8, !noalias !17
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %29

19:                                               ; preds = %11, %22
  %20 = phi %"class.GrBlockAllocator::Block"* [ %28, %22 ], [ %14, %11 ]
  %21 = icmp eq %"class.GrBlockAllocator::Block"* %20, null
  br i1 %21, label %39, label %22

22:                                               ; preds = %19
  %23 = bitcast %"class.GrBlockAllocator::Block"* %20 to i64*
  %24 = load i64, i64* %23, align 8, !noalias !17
  %25 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %20, i64 0, i32 4
  %26 = load i32, i32* %25, align 8, !noalias !17
  %27 = icmp eq i32 %26, 0
  %28 = inttoptr i64 %24 to %"class.GrBlockAllocator::Block"*
  br i1 %27, label %19, label %33

29:                                               ; preds = %11
  %30 = bitcast i8* %12 to %"class.GrBlockAllocator::Block"*
  %31 = ptrtoint %"class.GrBlockAllocator::Block"* %14 to i64
  %32 = icmp eq i8* %12, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %22, %29
  %34 = phi i32 [ %17, %29 ], [ %26, %22 ]
  %35 = phi i64 [ %31, %29 ], [ %24, %22 ]
  %36 = phi %"class.GrBlockAllocator::Block"* [ %30, %29 ], [ %20, %22 ]
  %37 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 0, i32 1
  %38 = bitcast %class.GrGLSLProgramBuilder** %37 to %class.GrGLProgramBuilder**
  br label %67

39:                                               ; preds = %19, %95, %115, %105, %29
  %40 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 2, i32 0, i32 0, i64 16
  %41 = bitcast i8* %40 to %"class.GrBlockAllocator::Block"**
  %42 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %41, align 8, !noalias !20
  %43 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 2, i32 0, i32 0, i64 40
  %44 = bitcast i8* %43 to i32*
  %45 = load i32, i32* %44, align 8, !noalias !20
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %57

47:                                               ; preds = %39, %50
  %48 = phi %"class.GrBlockAllocator::Block"* [ %56, %50 ], [ %42, %39 ]
  %49 = icmp eq %"class.GrBlockAllocator::Block"* %48, null
  br i1 %49, label %175, label %50

50:                                               ; preds = %47
  %51 = bitcast %"class.GrBlockAllocator::Block"* %48 to i64*
  %52 = load i64, i64* %51, align 8, !noalias !20
  %53 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %48, i64 0, i32 4
  %54 = load i32, i32* %53, align 8, !noalias !20
  %55 = icmp eq i32 %54, 0
  %56 = inttoptr i64 %52 to %"class.GrBlockAllocator::Block"*
  br i1 %55, label %47, label %61

57:                                               ; preds = %39
  %58 = bitcast i8* %40 to %"class.GrBlockAllocator::Block"*
  %59 = ptrtoint %"class.GrBlockAllocator::Block"* %42 to i64
  %60 = icmp eq i8* %40, null
  br i1 %60, label %175, label %61

61:                                               ; preds = %50, %57
  %62 = phi %"class.GrBlockAllocator::Block"* [ %58, %57 ], [ %48, %50 ]
  %63 = phi i64 [ %59, %57 ], [ %52, %50 ]
  %64 = phi i32 [ %45, %57 ], [ %54, %50 ]
  %65 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 0, i32 1
  %66 = bitcast %class.GrGLSLProgramBuilder** %65 to %class.GrGLProgramBuilder**
  br label %121

67:                                               ; preds = %33, %115
  %68 = phi i32 [ %34, %33 ], [ %119, %115 ]
  %69 = phi i32 [ 32, %33 ], [ %118, %115 ]
  %70 = phi i64 [ %35, %33 ], [ %117, %115 ]
  %71 = phi %"class.GrBlockAllocator::Block"* [ %36, %33 ], [ %116, %115 ]
  %72 = bitcast %"class.GrBlockAllocator::Block"* %71 to i8*
  %73 = sext i32 %69 to i64
  %74 = getelementptr inbounds i8, i8* %72, i64 %73
  %75 = load %class.GrGLProgramBuilder*, %class.GrGLProgramBuilder** %38, align 8
  %76 = getelementptr inbounds %class.GrGLProgramBuilder, %class.GrGLProgramBuilder* %75, i64 0, i32 1
  %77 = load %class.GrGLGpu*, %class.GrGLGpu** %76, align 16
  %78 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %77, i64 0, i32 1, i32 0, i32 0, i32 0
  %79 = load %class.GrGLContext*, %class.GrGLContext** %78, align 8
  %80 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %79, i64 0, i32 0, i32 1, i32 0
  %81 = load %struct.GrGLInterface*, %struct.GrGLInterface** %80, align 8
  %82 = getelementptr inbounds i8, i8* %74, i64 16
  %83 = bitcast i8* %82 to %"struct.SkString::Rec"**
  %84 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %83, align 8
  %85 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %84, i64 0, i32 2
  %86 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %81, i64 0, i32 3, i32 95, i32 0
  %87 = load i32 (i8*, i32, i8*)*, i32 (i8*, i32, i8*)** %86, align 8
  %88 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %81, i64 0, i32 3, i32 95, i32 1, i64 0
  %89 = bitcast i64* %88 to i8*
  %90 = tail call i32 %87(i8* %89, i32 %1, i8* %85) #12
  %91 = getelementptr inbounds i8, i8* %74, i64 64
  %92 = bitcast i8* %91 to i32*
  store i32 %90, i32* %92, align 8
  %93 = add i32 %69, 72
  %94 = icmp sgt i32 %93, %68
  br i1 %94, label %95, label %115

95:                                               ; preds = %67
  %96 = inttoptr i64 %70 to %"class.GrBlockAllocator::Block"*
  %97 = icmp eq i64 %70, 0
  br i1 %97, label %39, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %96, i64 0, i32 0
  %100 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %99, align 8
  %101 = ptrtoint %"class.GrBlockAllocator::Block"* %100 to i64
  %102 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %96, i64 0, i32 4
  %103 = load i32, i32* %102, align 8
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %115

105:                                              ; preds = %98, %108
  %106 = phi %"class.GrBlockAllocator::Block"* [ %114, %108 ], [ %100, %98 ]
  %107 = icmp eq %"class.GrBlockAllocator::Block"* %106, null
  br i1 %107, label %39, label %108

108:                                              ; preds = %105
  %109 = bitcast %"class.GrBlockAllocator::Block"* %106 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %106, i64 0, i32 4
  %112 = load i32, i32* %111, align 8
  %113 = icmp eq i32 %112, 0
  %114 = inttoptr i64 %110 to %"class.GrBlockAllocator::Block"*
  br i1 %113, label %105, label %115

115:                                              ; preds = %108, %98, %67
  %116 = phi %"class.GrBlockAllocator::Block"* [ %71, %67 ], [ %96, %98 ], [ %106, %108 ]
  %117 = phi i64 [ %70, %67 ], [ %101, %98 ], [ %110, %108 ]
  %118 = phi i32 [ %93, %67 ], [ 32, %98 ], [ 32, %108 ]
  %119 = phi i32 [ %68, %67 ], [ %103, %98 ], [ %112, %108 ]
  %120 = icmp eq %"class.GrBlockAllocator::Block"* %116, null
  br i1 %120, label %39, label %67

121:                                              ; preds = %61, %169
  %122 = phi %"class.GrBlockAllocator::Block"* [ %62, %61 ], [ %173, %169 ]
  %123 = phi i64 [ %63, %61 ], [ %172, %169 ]
  %124 = phi i32 [ 32, %61 ], [ %171, %169 ]
  %125 = phi i32 [ %64, %61 ], [ %170, %169 ]
  %126 = bitcast %"class.GrBlockAllocator::Block"* %122 to i8*
  %127 = sext i32 %124 to i64
  %128 = getelementptr inbounds i8, i8* %126, i64 %127
  %129 = load %class.GrGLProgramBuilder*, %class.GrGLProgramBuilder** %66, align 8
  %130 = getelementptr inbounds %class.GrGLProgramBuilder, %class.GrGLProgramBuilder* %129, i64 0, i32 1
  %131 = load %class.GrGLGpu*, %class.GrGLGpu** %130, align 16
  %132 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %131, i64 0, i32 1, i32 0, i32 0, i32 0
  %133 = load %class.GrGLContext*, %class.GrGLContext** %132, align 8
  %134 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %133, i64 0, i32 0, i32 1, i32 0
  %135 = load %struct.GrGLInterface*, %struct.GrGLInterface** %134, align 8
  %136 = getelementptr inbounds i8, i8* %128, i64 16
  %137 = bitcast i8* %136 to %"struct.SkString::Rec"**
  %138 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %137, align 8
  %139 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %138, i64 0, i32 2
  %140 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %135, i64 0, i32 3, i32 95, i32 0
  %141 = load i32 (i8*, i32, i8*)*, i32 (i8*, i32, i8*)** %140, align 8
  %142 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %135, i64 0, i32 3, i32 95, i32 1, i64 0
  %143 = bitcast i64* %142 to i8*
  %144 = tail call i32 %141(i8* %143, i32 %1, i8* %139) #12
  %145 = getelementptr inbounds i8, i8* %128, i64 64
  %146 = bitcast i8* %145 to i32*
  store i32 %144, i32* %146, align 8
  %147 = add i32 %124, 72
  %148 = icmp sgt i32 %147, %125
  br i1 %148, label %149, label %169

149:                                              ; preds = %121
  %150 = inttoptr i64 %123 to %"class.GrBlockAllocator::Block"*
  %151 = icmp eq i64 %123, 0
  br i1 %151, label %175, label %152

152:                                              ; preds = %149
  %153 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %150, i64 0, i32 0
  %154 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %153, align 8
  %155 = ptrtoint %"class.GrBlockAllocator::Block"* %154 to i64
  %156 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %150, i64 0, i32 4
  %157 = load i32, i32* %156, align 8
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %169

159:                                              ; preds = %152, %162
  %160 = phi %"class.GrBlockAllocator::Block"* [ %168, %162 ], [ %154, %152 ]
  %161 = icmp eq %"class.GrBlockAllocator::Block"* %160, null
  br i1 %161, label %175, label %162

162:                                              ; preds = %159
  %163 = bitcast %"class.GrBlockAllocator::Block"* %160 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %160, i64 0, i32 4
  %166 = load i32, i32* %165, align 8
  %167 = icmp eq i32 %166, 0
  %168 = inttoptr i64 %164 to %"class.GrBlockAllocator::Block"*
  br i1 %167, label %159, label %169

169:                                              ; preds = %162, %152, %121
  %170 = phi i32 [ %125, %121 ], [ %157, %152 ], [ %166, %162 ]
  %171 = phi i32 [ %147, %121 ], [ 32, %152 ], [ 32, %162 ]
  %172 = phi i64 [ %123, %121 ], [ %155, %152 ], [ %164, %162 ]
  %173 = phi %"class.GrBlockAllocator::Block"* [ %122, %121 ], [ %150, %152 ], [ %160, %162 ]
  %174 = icmp eq %"class.GrBlockAllocator::Block"* %173, null
  br i1 %174, label %175, label %121

175:                                              ; preds = %47, %149, %169, %159, %57, %4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18GrGLUniformHandlerD2Ev(%class.GrGLUniformHandler*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV18GrGLUniformHandler, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 16
  %3 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 3, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 3
  %9 = bitcast %class.SkTArray.274* %8 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_Z7sk_freePv(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %7
  %12 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 2
  tail call void @_ZN12GrTBlockListIN22GrGLProgramDataManager13GLUniformInfoELi1EE5resetEv(%class.GrTBlockList.271* %12) #12
  %13 = bitcast %class.GrTBlockList.271* %12 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %13) #12
  %14 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 2, i32 0, i32 0, i64 16
  %15 = bitcast i8* %14 to %"class.GrBlockAllocator::Block"*
  tail call void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"* %15) #12
  %16 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 1
  tail call void @_ZN12GrTBlockListIN22GrGLProgramDataManager13GLUniformInfoELi1EE5resetEv(%class.GrTBlockList.271* %16) #12
  %17 = bitcast %class.GrTBlockList.271* %16 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %17) #12
  %18 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %19 = bitcast i8* %18 to %"class.GrBlockAllocator::Block"*
  tail call void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"* %19) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18GrGLUniformHandlerD0Ev(%class.GrGLUniformHandler*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV18GrGLUniformHandler, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 16
  %3 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 3, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 3
  %9 = bitcast %class.SkTArray.274* %8 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_Z7sk_freePv(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %7
  %12 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 2
  tail call void @_ZN12GrTBlockListIN22GrGLProgramDataManager13GLUniformInfoELi1EE5resetEv(%class.GrTBlockList.271* %12) #12
  %13 = bitcast %class.GrTBlockList.271* %12 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %13) #12
  %14 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 2, i32 0, i32 0, i64 16
  %15 = bitcast i8* %14 to %"class.GrBlockAllocator::Block"*
  tail call void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"* %15) #12
  %16 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 1
  tail call void @_ZN12GrTBlockListIN22GrGLProgramDataManager13GLUniformInfoELi1EE5resetEv(%class.GrTBlockList.271* %16) #12
  %17 = bitcast %class.GrTBlockList.271* %16 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %17) #12
  %18 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %19 = bitcast i8* %18 to %"class.GrBlockAllocator::Block"*
  tail call void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"* %19) #12
  %20 = bitcast %class.GrGLUniformHandler* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %class.GrShaderVar* @_ZNK18GrGLUniformHandler18getUniformVariableE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE(%class.GrGLUniformHandler*, i32) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %4 = bitcast i8* %3 to %"class.GrBlockAllocator::Block"**
  %5 = bitcast i8* %3 to %"class.GrBlockAllocator::Block"*
  br label %6

6:                                                ; preds = %27, %2
  %7 = phi i32 [ %28, %27 ], [ %1, %2 ]
  %8 = phi %"class.GrBlockAllocator::Block"** [ %30, %27 ], [ %4, %2 ]
  %9 = phi %"class.GrBlockAllocator::Block"* [ %11, %27 ], [ %5, %2 ]
  %10 = phi i8* [ %12, %27 ], [ %3, %2 ]
  %11 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %8, align 8
  %12 = bitcast %"class.GrBlockAllocator::Block"* %11 to i8*
  %13 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %9, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %27, label %16

16:                                               ; preds = %6
  %17 = add i32 %14, 72
  %18 = mul i32 %7, 72
  %19 = add i32 %18, 32
  %20 = icmp slt i32 %19, %17
  br i1 %20, label %32, label %21

21:                                               ; preds = %16
  %22 = add i32 %14, 40
  %23 = sext i32 %22 to i64
  %24 = udiv i64 %23, 72
  %25 = trunc i64 %24 to i32
  %26 = sub i32 %7, %25
  br label %27

27:                                               ; preds = %21, %6
  %28 = phi i32 [ %26, %21 ], [ %7, %6 ]
  %29 = icmp eq %"class.GrBlockAllocator::Block"* %11, null
  %30 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %11, i64 0, i32 0
  br i1 %29, label %31, label %6

31:                                               ; preds = %27
  tail call void @llvm.trap() #12
  unreachable

32:                                               ; preds = %16
  %33 = sext i32 %19 to i64
  %34 = getelementptr inbounds i8, i8* %10, i64 %33
  %35 = bitcast i8* %34 to %class.GrShaderVar*
  ret %class.GrShaderVar* %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK18GrGLUniformHandler14getUniformCStrE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE(%class.GrGLUniformHandler*, i32) unnamed_addr #2 comdat align 2 {
  %3 = bitcast %class.GrGLUniformHandler* %0 to %class.GrShaderVar* (%class.GrGLUniformHandler*, i32)***
  %4 = load %class.GrShaderVar* (%class.GrGLUniformHandler*, i32)**, %class.GrShaderVar* (%class.GrGLUniformHandler*, i32)*** %3, align 16
  %5 = getelementptr inbounds %class.GrShaderVar* (%class.GrGLUniformHandler*, i32)*, %class.GrShaderVar* (%class.GrGLUniformHandler*, i32)** %4, i64 2
  %6 = load %class.GrShaderVar* (%class.GrGLUniformHandler*, i32)*, %class.GrShaderVar* (%class.GrGLUniformHandler*, i32)** %5, align 8
  %7 = tail call dereferenceable(40) %class.GrShaderVar* %6(%class.GrGLUniformHandler* %0, i32 %1) #12
  %8 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %7, i64 0, i32 3, i32 0, i32 0
  %9 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %8, align 8
  %10 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %9, i64 0, i32 2
  ret i8* %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK18GrGLUniformHandler11numUniformsEv(%class.GrGLUniformHandler*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 1, i32 0, i32 0, i64 44
  %3 = bitcast i8* %2 to i32*
  %4 = load i32, i32* %3, align 4
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(64) %"struct.GrGLSLUniformHandler::UniformInfo"* @_ZN18GrGLUniformHandler7uniformEi(%class.GrGLUniformHandler*, i32) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %4 = bitcast i8* %3 to %"class.GrBlockAllocator::Block"**
  %5 = bitcast i8* %3 to %"class.GrBlockAllocator::Block"*
  br label %6

6:                                                ; preds = %27, %2
  %7 = phi i32 [ %28, %27 ], [ %1, %2 ]
  %8 = phi %"class.GrBlockAllocator::Block"** [ %30, %27 ], [ %4, %2 ]
  %9 = phi %"class.GrBlockAllocator::Block"* [ %11, %27 ], [ %5, %2 ]
  %10 = phi i8* [ %12, %27 ], [ %3, %2 ]
  %11 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %8, align 8
  %12 = bitcast %"class.GrBlockAllocator::Block"* %11 to i8*
  %13 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %9, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %27, label %16

16:                                               ; preds = %6
  %17 = add i32 %14, 72
  %18 = mul i32 %7, 72
  %19 = add i32 %18, 32
  %20 = icmp slt i32 %19, %17
  br i1 %20, label %32, label %21

21:                                               ; preds = %16
  %22 = add i32 %14, 40
  %23 = sext i32 %22 to i64
  %24 = udiv i64 %23, 72
  %25 = trunc i64 %24 to i32
  %26 = sub i32 %7, %25
  br label %27

27:                                               ; preds = %21, %6
  %28 = phi i32 [ %26, %21 ], [ %7, %6 ]
  %29 = icmp eq %"class.GrBlockAllocator::Block"* %11, null
  %30 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %11, i64 0, i32 0
  br i1 %29, label %31, label %6

31:                                               ; preds = %27
  tail call void @llvm.trap() #12
  unreachable

32:                                               ; preds = %16
  %33 = sext i32 %19 to i64
  %34 = getelementptr inbounds i8, i8* %10, i64 %33
  %35 = bitcast i8* %34 to %"struct.GrGLSLUniformHandler::UniformInfo"*
  ret %"struct.GrGLSLUniformHandler::UniformInfo"* %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(64) %"struct.GrGLSLUniformHandler::UniformInfo"* @_ZNK18GrGLUniformHandler7uniformEi(%class.GrGLUniformHandler*, i32) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %4 = bitcast i8* %3 to %"class.GrBlockAllocator::Block"**
  %5 = bitcast i8* %3 to %"class.GrBlockAllocator::Block"*
  br label %6

6:                                                ; preds = %27, %2
  %7 = phi i32 [ %28, %27 ], [ %1, %2 ]
  %8 = phi %"class.GrBlockAllocator::Block"** [ %30, %27 ], [ %4, %2 ]
  %9 = phi %"class.GrBlockAllocator::Block"* [ %11, %27 ], [ %5, %2 ]
  %10 = phi i8* [ %12, %27 ], [ %3, %2 ]
  %11 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %8, align 8
  %12 = bitcast %"class.GrBlockAllocator::Block"* %11 to i8*
  %13 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %9, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %27, label %16

16:                                               ; preds = %6
  %17 = add i32 %14, 72
  %18 = mul i32 %7, 72
  %19 = add i32 %18, 32
  %20 = icmp slt i32 %19, %17
  br i1 %20, label %32, label %21

21:                                               ; preds = %16
  %22 = add i32 %14, 40
  %23 = sext i32 %22 to i64
  %24 = udiv i64 %23, 72
  %25 = trunc i64 %24 to i32
  %26 = sub i32 %7, %25
  br label %27

27:                                               ; preds = %21, %6
  %28 = phi i32 [ %26, %21 ], [ %7, %6 ]
  %29 = icmp eq %"class.GrBlockAllocator::Block"* %11, null
  %30 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %11, i64 0, i32 0
  br i1 %29, label %31, label %6

31:                                               ; preds = %27
  tail call void @llvm.trap() #12
  unreachable

32:                                               ; preds = %16
  %33 = sext i32 %19 to i64
  %34 = getelementptr inbounds i8, i8* %10, i64 %33
  %35 = bitcast i8* %34 to %"struct.GrGLSLUniformHandler::UniformInfo"*
  ret %"struct.GrGLSLUniformHandler::UniformInfo"* %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK18GrGLUniformHandler15samplerVariableE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEE(%class.GrGLUniformHandler*, i32) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %0, i64 0, i32 2, i32 0, i32 0, i64 16
  %4 = bitcast i8* %3 to %"class.GrBlockAllocator::Block"**
  %5 = bitcast i8* %3 to %"class.GrBlockAllocator::Block"*
  br label %6

6:                                                ; preds = %27, %2
  %7 = phi i32 [ %28, %27 ], [ %1, %2 ]
  %8 = phi %"class.GrBlockAllocator::Block"** [ %30, %27 ], [ %4, %2 ]
  %9 = phi %"class.GrBlockAllocator::Block"* [ %11, %27 ], [ %5, %2 ]
  %10 = phi i8* [ %12, %27 ], [ %3, %2 ]
  %11 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %8, align 8
  %12 = bitcast %"class.GrBlockAllocator::Block"* %11 to i8*
  %13 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %9, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %27, label %16

16:                                               ; preds = %6
  %17 = add i32 %14, 72
  %18 = mul i32 %7, 72
  %19 = add i32 %18, 32
  %20 = icmp slt i32 %19, %17
  br i1 %20, label %32, label %21

21:                                               ; preds = %16
  %22 = add i32 %14, 40
  %23 = sext i32 %22 to i64
  %24 = udiv i64 %23, 72
  %25 = trunc i64 %24 to i32
  %26 = sub i32 %7, %25
  br label %27

27:                                               ; preds = %21, %6
  %28 = phi i32 [ %26, %21 ], [ %7, %6 ]
  %29 = icmp eq %"class.GrBlockAllocator::Block"* %11, null
  %30 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %11, i64 0, i32 0
  br i1 %29, label %31, label %6

31:                                               ; preds = %27
  tail call void @llvm.trap() #12
  unreachable

32:                                               ; preds = %16
  %33 = sext i32 %19 to i64
  %34 = getelementptr inbounds i8, i8* %10, i64 %33
  %35 = getelementptr inbounds i8, i8* %34, i64 16
  %36 = bitcast i8* %35 to %"struct.SkString::Rec"**
  %37 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %36, align 8
  %38 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %37, i64 0, i32 2
  ret i8* %38
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK18GrGLUniformHandler14samplerSwizzleE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEE(%class.GrSwizzle* noalias sret, %class.GrGLUniformHandler*, i32) unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %class.GrGLUniformHandler, %class.GrGLUniformHandler* %1, i64 0, i32 3, i32 0
  %5 = load %class.GrSwizzle*, %class.GrSwizzle** %4, align 8
  %6 = sext i32 %2 to i64
  %7 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  %8 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %5, i64 %6, i32 0
  %9 = load i16, i16* %8, align 2
  store i16 %9, i16* %7, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK20GrGLSLUniformHandler20inputSamplerVariableE16GrResourceHandleINS_17SamplerHandleKindEE(%class.GrGLSLUniformHandler*, i32) unnamed_addr #2 comdat align 2 {
  ret i8* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK20GrGLSLUniformHandler19inputSamplerSwizzleE16GrResourceHandleINS_17SamplerHandleKindEE(%class.GrSwizzle* noalias sret, %class.GrGLSLUniformHandler*, i32) unnamed_addr #2 comdat align 2 {
  tail call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0)) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN20GrGLSLUniformHandler15addInputSamplerERK9GrSwizzlePKc(%class.GrGLSLUniformHandler*, %class.GrSwizzle* dereferenceable(2), i8*) unnamed_addr #2 comdat align 2 {
  ret i32 -1
}

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #4

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #8

declare void @_ZN8SkString6insertEmPKc(%class.SkString*, i64, i8*) local_unnamed_addr #4

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrTBlockListIN22GrGLProgramDataManager13GLUniformInfoELi1EE5resetEv(%class.GrTBlockList.271*) local_unnamed_addr #2 comdat align 2 {
  %2 = bitcast %class.GrTBlockList.271* %0 to %"class.GrBlockAllocator::Block"**
  %3 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %2, align 16, !noalias !23
  %4 = icmp eq %"class.GrBlockAllocator::Block"* %3, null
  br i1 %4, label %40, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %3, i64 0, i32 1
  %7 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %6, align 8, !noalias !23
  %8 = icmp eq %"class.GrBlockAllocator::Block"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %7, i64 0, i32 3
  %11 = load i32, i32* %10, align 4, !noalias !23
  %12 = icmp slt i32 %11, 0
  %13 = select i1 %12, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %7
  br label %14

14:                                               ; preds = %9, %5
  %15 = phi %"class.GrBlockAllocator::Block"* [ %13, %9 ], [ null, %5 ]
  %16 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8, !noalias !23
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %35, %14
  %20 = phi %"class.GrBlockAllocator::Block"* [ %3, %14 ], [ %24, %35 ]
  %21 = phi %"class.GrBlockAllocator::Block"* [ %15, %14 ], [ %36, %35 ]
  %22 = phi i32 [ %17, %14 ], [ %38, %35 ]
  br label %42

23:                                               ; preds = %14, %35
  %24 = phi %"class.GrBlockAllocator::Block"* [ %36, %35 ], [ %15, %14 ]
  %25 = icmp eq %"class.GrBlockAllocator::Block"* %24, null
  br i1 %25, label %40, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %24, i64 0, i32 1
  %28 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %27, align 8, !noalias !23
  %29 = icmp eq %"class.GrBlockAllocator::Block"* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %28, i64 0, i32 3
  %32 = load i32, i32* %31, align 4, !noalias !23
  %33 = icmp slt i32 %32, 0
  %34 = select i1 %33, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %28
  br label %35

35:                                               ; preds = %30, %26
  %36 = phi %"class.GrBlockAllocator::Block"* [ null, %26 ], [ %34, %30 ]
  %37 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %24, i64 0, i32 4
  %38 = load i32, i32* %37, align 8, !noalias !23
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %23, label %19

40:                                               ; preds = %23, %61, %81, %1
  %41 = bitcast %class.GrTBlockList.271* %0 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %41) #12
  ret void

42:                                               ; preds = %77, %19
  %43 = phi %"class.GrBlockAllocator::Block"* [ %20, %19 ], [ %78, %77 ]
  %44 = phi %"class.GrBlockAllocator::Block"* [ %21, %19 ], [ %79, %77 ]
  %45 = phi i32 [ %22, %19 ], [ %80, %77 ]
  %46 = bitcast %"class.GrBlockAllocator::Block"* %43 to i8*
  br label %47

47:                                               ; preds = %42, %47
  %48 = phi i32 [ %59, %47 ], [ %45, %42 ]
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %46, i64 %49
  %51 = getelementptr inbounds i8, i8* %50, i64 56
  %52 = bitcast i8* %51 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %52) #12
  %53 = getelementptr inbounds i8, i8* %50, i64 32
  %54 = bitcast i8* %53 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %54) #12
  %55 = getelementptr inbounds i8, i8* %50, i64 24
  %56 = bitcast i8* %55 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %56) #12
  %57 = getelementptr inbounds i8, i8* %50, i64 16
  %58 = bitcast i8* %57 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %58) #12
  %59 = add i32 %48, -72
  %60 = icmp slt i32 %59, 32
  br i1 %60, label %61, label %47

61:                                               ; preds = %47
  %62 = icmp eq %"class.GrBlockAllocator::Block"* %44, null
  br i1 %62, label %40, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %44, i64 0, i32 1
  %65 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %64, align 8
  %66 = icmp eq %"class.GrBlockAllocator::Block"* %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %65, i64 0, i32 3
  %69 = load i32, i32* %68, align 4
  %70 = icmp slt i32 %69, 0
  %71 = select i1 %70, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %65
  br label %72

72:                                               ; preds = %67, %63
  %73 = phi %"class.GrBlockAllocator::Block"* [ null, %63 ], [ %71, %67 ]
  %74 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %44, i64 0, i32 4
  %75 = load i32, i32* %74, align 8
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %81, label %77

77:                                               ; preds = %93, %72
  %78 = phi %"class.GrBlockAllocator::Block"* [ %44, %72 ], [ %82, %93 ]
  %79 = phi %"class.GrBlockAllocator::Block"* [ %73, %72 ], [ %94, %93 ]
  %80 = phi i32 [ %75, %72 ], [ %96, %93 ]
  br label %42

81:                                               ; preds = %72, %93
  %82 = phi %"class.GrBlockAllocator::Block"* [ %94, %93 ], [ %73, %72 ]
  %83 = icmp eq %"class.GrBlockAllocator::Block"* %82, null
  br i1 %83, label %40, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %82, i64 0, i32 1
  %86 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %85, align 8
  %87 = icmp eq %"class.GrBlockAllocator::Block"* %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %86, i64 0, i32 3
  %90 = load i32, i32* %89, align 4
  %91 = icmp slt i32 %90, 0
  %92 = select i1 %91, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %86
  br label %93

93:                                               ; preds = %88, %84
  %94 = phi %"class.GrBlockAllocator::Block"* [ null, %84 ], [ %92, %88 ]
  %95 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %82, i64 0, i32 4
  %96 = load i32, i32* %95, align 8
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %81, label %77
}

declare void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle*, i8*) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  %4 = load i8, i8* %1, align 1
  %5 = sext i8 %4 to i32
  switch i32 %5, label %11 [
    i32 114, label %12
    i32 103, label %6
    i32 98, label %7
    i32 97, label %8
    i32 48, label %9
    i32 49, label %10
  ]

6:                                                ; preds = %2
  br label %12

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  br label %12

9:                                                ; preds = %2
  br label %12

10:                                               ; preds = %2
  br label %12

11:                                               ; preds = %2
  tail call void @llvm.trap() #12
  unreachable

12:                                               ; preds = %2, %6, %7, %8, %9, %10
  %13 = phi i16 [ 5, %10 ], [ 4, %9 ], [ 3, %8 ], [ 2, %7 ], [ 1, %6 ], [ 0, %2 ]
  %14 = getelementptr inbounds i8, i8* %1, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  switch i32 %16, label %22 [
    i32 114, label %23
    i32 103, label %17
    i32 98, label %18
    i32 97, label %19
    i32 48, label %20
    i32 49, label %21
  ]

17:                                               ; preds = %12
  br label %23

18:                                               ; preds = %12
  br label %23

19:                                               ; preds = %12
  br label %23

20:                                               ; preds = %12
  br label %23

21:                                               ; preds = %12
  br label %23

22:                                               ; preds = %12
  tail call void @llvm.trap() #12
  unreachable

23:                                               ; preds = %12, %17, %18, %19, %20, %21
  %24 = phi i16 [ 80, %21 ], [ 64, %20 ], [ 48, %19 ], [ 32, %18 ], [ 16, %17 ], [ 0, %12 ]
  %25 = or i16 %24, %13
  %26 = getelementptr inbounds i8, i8* %1, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  switch i32 %28, label %34 [
    i32 114, label %35
    i32 103, label %29
    i32 98, label %30
    i32 97, label %31
    i32 48, label %32
    i32 49, label %33
  ]

29:                                               ; preds = %23
  br label %35

30:                                               ; preds = %23
  br label %35

31:                                               ; preds = %23
  br label %35

32:                                               ; preds = %23
  br label %35

33:                                               ; preds = %23
  br label %35

34:                                               ; preds = %23
  tail call void @llvm.trap() #12
  unreachable

35:                                               ; preds = %23, %29, %30, %31, %32, %33
  %36 = phi i16 [ 1280, %33 ], [ 1024, %32 ], [ 768, %31 ], [ 512, %30 ], [ 256, %29 ], [ 0, %23 ]
  %37 = or i16 %25, %36
  %38 = getelementptr inbounds i8, i8* %1, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  switch i32 %40, label %46 [
    i32 114, label %47
    i32 103, label %41
    i32 98, label %42
    i32 97, label %43
    i32 48, label %44
    i32 49, label %45
  ]

41:                                               ; preds = %35
  br label %47

42:                                               ; preds = %35
  br label %47

43:                                               ; preds = %35
  br label %47

44:                                               ; preds = %35
  br label %47

45:                                               ; preds = %35
  br label %47

46:                                               ; preds = %35
  tail call void @llvm.trap() #12
  unreachable

47:                                               ; preds = %35, %41, %42, %43, %44, %45
  %48 = phi i16 [ 20480, %45 ], [ 16384, %44 ], [ 12288, %43 ], [ 8192, %42 ], [ 4096, %41 ], [ 0, %35 ]
  %49 = or i16 %37, %48
  store i16 %49, i16* %3, align 2
  ret void
}

declare void @_ZN16GrBlockAllocator8addBlockEii(%class.GrBlockAllocator*, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI9GrSwizzleLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.274*, i32, i32) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.274, %class.SkTArray.274* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %75

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %75, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 2) #12
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %63, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.274, %class.SkTArray.274* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %58, %50 ]
  %52 = shl nuw i64 %51, 1
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %class.GrSwizzle*, %class.GrSwizzle** %49, align 8
  %55 = bitcast i8* %53 to i16*
  %56 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %54, i64 %51, i32 0
  %57 = load i16, i16* %56, align 2
  store i16 %57, i16* %55, align 2
  %58 = add nuw nsw i64 %51, 1
  %59 = load i64, i64* %4, align 8
  %60 = lshr i64 %59, 1
  %61 = and i64 %60, 2147483647
  %62 = icmp ult i64 %58, %61
  br i1 %62, label %50, label %63

63:                                               ; preds = %50, %35
  %64 = phi i64 [ %45, %35 ], [ %59, %50 ]
  %65 = and i64 %64, 1
  %66 = icmp eq i64 %65, 0
  %67 = bitcast %class.SkTArray.274* %0 to i8**
  br i1 %66, label %71, label %68

68:                                               ; preds = %63
  %69 = load i8*, i8** %67, align 8
  tail call void @_Z7sk_freePv(i8* %69) #12
  %70 = load i64, i64* %4, align 8
  br label %71

71:                                               ; preds = %63, %68
  %72 = phi i64 [ %70, %68 ], [ %64, %63 ]
  store i8* %44, i8** %67, align 8
  %73 = and i64 %72, -4294967298
  %74 = or i64 %73, 1
  store i64 %74, i64* %4, align 8
  br label %75

75:                                               ; preds = %71, %32, %21
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #4

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nounwind readonly }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN16GrBlockAllocator8allocateILm8ELm0EEENS_9ByteRangeEm: argument 0"}
!4 = distinct !{!4, !"_ZN16GrBlockAllocator8allocateILm8ELm0EEENS_9ByteRangeEm"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK18BlockIndexIteratorIRKN22GrGLProgramDataManager13GLUniformInfoELb1ELb1EXadL_ZN12GrTBlockListIS1_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS5_4LastES9_EEXadL_ZNS5_9IncrementES9_iEEXadL_ZNS5_7GetItemES9_iEEE5beginEv: argument 0"}
!7 = distinct !{!7, !"_ZNK18BlockIndexIteratorIRKN22GrGLProgramDataManager13GLUniformInfoELb1ELb1EXadL_ZN12GrTBlockListIS1_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS5_4LastES9_EEXadL_ZNS5_9IncrementES9_iEEXadL_ZNS5_7GetItemES9_iEEE5beginEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK18BlockIndexIteratorIRKN22GrGLProgramDataManager13GLUniformInfoELb1ELb1EXadL_ZN12GrTBlockListIS1_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS5_4LastES9_EEXadL_ZNS5_9IncrementES9_iEEXadL_ZNS5_7GetItemES9_iEEE5beginEv: argument 0"}
!10 = distinct !{!10, !"_ZNK18BlockIndexIteratorIRKN22GrGLProgramDataManager13GLUniformInfoELb1ELb1EXadL_ZN12GrTBlockListIS1_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS5_4LastES9_EEXadL_ZNS5_9IncrementES9_iEEXadL_ZNS5_7GetItemES9_iEEE5beginEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK18BlockIndexIteratorIRN22GrGLProgramDataManager13GLUniformInfoELb1ELb0EXadL_ZN12GrTBlockListIS1_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS4_4LastES8_EEXadL_ZNS4_9IncrementES8_iEEXadL_ZNS4_7GetItemEPS6_iEEE5beginEv: argument 0"}
!13 = distinct !{!13, !"_ZNK18BlockIndexIteratorIRN22GrGLProgramDataManager13GLUniformInfoELb1ELb0EXadL_ZN12GrTBlockListIS1_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS4_4LastES8_EEXadL_ZNS4_9IncrementES8_iEEXadL_ZNS4_7GetItemEPS6_iEEE5beginEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK18BlockIndexIteratorIRN22GrGLProgramDataManager13GLUniformInfoELb1ELb0EXadL_ZN12GrTBlockListIS1_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS4_4LastES8_EEXadL_ZNS4_9IncrementES8_iEEXadL_ZNS4_7GetItemEPS6_iEEE5beginEv: argument 0"}
!16 = distinct !{!16, !"_ZNK18BlockIndexIteratorIRN22GrGLProgramDataManager13GLUniformInfoELb1ELb0EXadL_ZN12GrTBlockListIS1_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS4_4LastES8_EEXadL_ZNS4_9IncrementES8_iEEXadL_ZNS4_7GetItemEPS6_iEEE5beginEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK18BlockIndexIteratorIRN22GrGLProgramDataManager13GLUniformInfoELb1ELb0EXadL_ZN12GrTBlockListIS1_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS4_4LastES8_EEXadL_ZNS4_9IncrementES8_iEEXadL_ZNS4_7GetItemEPS6_iEEE5beginEv: argument 0"}
!19 = distinct !{!19, !"_ZNK18BlockIndexIteratorIRN22GrGLProgramDataManager13GLUniformInfoELb1ELb0EXadL_ZN12GrTBlockListIS1_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS4_4LastES8_EEXadL_ZNS4_9IncrementES8_iEEXadL_ZNS4_7GetItemEPS6_iEEE5beginEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK18BlockIndexIteratorIRN22GrGLProgramDataManager13GLUniformInfoELb1ELb0EXadL_ZN12GrTBlockListIS1_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS4_4LastES8_EEXadL_ZNS4_9IncrementES8_iEEXadL_ZNS4_7GetItemEPS6_iEEE5beginEv: argument 0"}
!22 = distinct !{!22, !"_ZNK18BlockIndexIteratorIRN22GrGLProgramDataManager13GLUniformInfoELb1ELb0EXadL_ZN12GrTBlockListIS1_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS4_4LastES8_EEXadL_ZNS4_9IncrementES8_iEEXadL_ZNS4_7GetItemEPS6_iEEE5beginEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK18BlockIndexIteratorIRN22GrGLProgramDataManager13GLUniformInfoELb0ELb0EXadL_ZN12GrTBlockListIS1_Li1EE4LastEPKN16GrBlockAllocator5BlockEEEXadL_ZNS4_5FirstES8_EEXadL_ZNS4_9DecrementES8_iEEXadL_ZNS4_7GetItemEPS6_iEEE5beginEv: argument 0"}
!25 = distinct !{!25, !"_ZNK18BlockIndexIteratorIRN22GrGLProgramDataManager13GLUniformInfoELb0ELb0EXadL_ZN12GrTBlockListIS1_Li1EE4LastEPKN16GrBlockAllocator5BlockEEEXadL_ZNS4_5FirstES8_EEXadL_ZNS4_9DecrementES8_iEEXadL_ZNS4_7GetItemEPS6_iEEE5beginEv"}
