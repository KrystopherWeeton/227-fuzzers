; ModuleID = '../../third_party/webrtc/rtc_base/copy_on_write_buffer.cc'
source_filename = "../../third_party/webrtc/rtc_base/copy_on_write_buffer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.rtc::CopyOnWriteBuffer" = type { %"class.rtc::scoped_refptr", i64, i64 }
%"class.rtc::scoped_refptr" = type { %"class.rtc::FinalRefCountedObject"* }
%"class.rtc::FinalRefCountedObject" = type <{ %"class.rtc::BufferT", %"class.webrtc::webrtc_impl::RefCounter", [4 x i8] }>
%"class.rtc::BufferT" = type { i64, i64, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.webrtc::webrtc_impl::RefCounter" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN3rtc17CopyOnWriteBufferC1Ev = hidden unnamed_addr alias void (%"class.rtc::CopyOnWriteBuffer"*), void (%"class.rtc::CopyOnWriteBuffer"*)* @_ZN3rtc17CopyOnWriteBufferC2Ev
@_ZN3rtc17CopyOnWriteBufferC1ERKS0_ = hidden unnamed_addr alias void (%"class.rtc::CopyOnWriteBuffer"*, %"class.rtc::CopyOnWriteBuffer"*), void (%"class.rtc::CopyOnWriteBuffer"*, %"class.rtc::CopyOnWriteBuffer"*)* @_ZN3rtc17CopyOnWriteBufferC2ERKS0_
@_ZN3rtc17CopyOnWriteBufferC1EOS0_ = hidden unnamed_addr alias void (%"class.rtc::CopyOnWriteBuffer"*, %"class.rtc::CopyOnWriteBuffer"*), void (%"class.rtc::CopyOnWriteBuffer"*, %"class.rtc::CopyOnWriteBuffer"*)* @_ZN3rtc17CopyOnWriteBufferC2EOS0_
@_ZN3rtc17CopyOnWriteBufferC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.rtc::CopyOnWriteBuffer"*, %"class.std::__1::basic_string"*), void (%"class.rtc::CopyOnWriteBuffer"*, %"class.std::__1::basic_string"*)* @_ZN3rtc17CopyOnWriteBufferC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
@_ZN3rtc17CopyOnWriteBufferC1Em = hidden unnamed_addr alias void (%"class.rtc::CopyOnWriteBuffer"*, i64), void (%"class.rtc::CopyOnWriteBuffer"*, i64)* @_ZN3rtc17CopyOnWriteBufferC2Em
@_ZN3rtc17CopyOnWriteBufferC1Emm = hidden unnamed_addr alias void (%"class.rtc::CopyOnWriteBuffer"*, i64, i64), void (%"class.rtc::CopyOnWriteBuffer"*, i64, i64)* @_ZN3rtc17CopyOnWriteBufferC2Emm
@_ZN3rtc17CopyOnWriteBufferD1Ev = hidden unnamed_addr alias void (%"class.rtc::CopyOnWriteBuffer"*), void (%"class.rtc::CopyOnWriteBuffer"*)* @_ZN3rtc17CopyOnWriteBufferD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3rtc17CopyOnWriteBufferC2Ev(%"class.rtc::CopyOnWriteBuffer"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.rtc::CopyOnWriteBuffer"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3rtc17CopyOnWriteBufferC2ERKS0_(%"class.rtc::CopyOnWriteBuffer"* nocapture, %"class.rtc::CopyOnWriteBuffer"* nocapture readonly dereferenceable(24)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.rtc::FinalRefCountedObject"*, %"class.rtc::FinalRefCountedObject"** %4, align 8
  store %"class.rtc::FinalRefCountedObject"* %5, %"class.rtc::FinalRefCountedObject"** %3, align 8
  %6 = icmp eq %"class.rtc::FinalRefCountedObject"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.rtc::FinalRefCountedObject", %"class.rtc::FinalRefCountedObject"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %1, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %11, align 8
  %14 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %1, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %14, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3rtc17CopyOnWriteBufferC2EOS0_(%"class.rtc::CopyOnWriteBuffer"* nocapture, %"class.rtc::CopyOnWriteBuffer"* nocapture dereferenceable(24)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %1, i64 0, i32 0, i32 0
  %4 = bitcast %"class.rtc::CopyOnWriteBuffer"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %"class.rtc::FinalRefCountedObject"* null, %"class.rtc::FinalRefCountedObject"** %3, align 8
  %6 = bitcast %"class.rtc::CopyOnWriteBuffer"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %1, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %7, align 8
  %10 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %1, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %10, align 8
  %13 = bitcast i64* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3rtc17CopyOnWriteBufferC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.rtc::CopyOnWriteBuffer"* nocapture, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.rtc::CopyOnWriteBuffer"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #9
  br label %33

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %18 = select i1 %6, i8* %16, i8* %17
  %19 = tail call i8* @_Znwm(i64 32) #10
  %20 = bitcast i8* %19 to i64*
  store i64 %10, i64* %20, align 8
  %21 = getelementptr inbounds i8, i8* %19, i64 8
  %22 = bitcast i8* %21 to i64*
  store i64 %10, i64* %22, align 8
  %23 = getelementptr inbounds i8, i8* %19, i64 16
  %24 = tail call i8* @_Znam(i64 %10) #10
  %25 = ptrtoint i8* %24 to i64
  %26 = bitcast i8* %23 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %19, i64 24
  %28 = bitcast i8* %27 to i32*
  store i32 0, i32* %28, align 4
  %29 = bitcast %"class.rtc::CopyOnWriteBuffer"* %0 to i8**
  store i8* %19, i8** %29, align 8
  %30 = atomicrmw add i32* %28, i32 1 monotonic
  %31 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 1
  store i64 0, i64* %31, align 8
  %32 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 2
  store i64 %10, i64* %32, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %24, i8* align 1 %18, i64 %10, i1 false) #9
  store i64 0, i64* %31, align 8
  store i64 %10, i64* %32, align 8
  br label %33

33:                                               ; preds = %12, %14
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN3rtc17CopyOnWriteBufferC2Em(%"class.rtc::CopyOnWriteBuffer"* nocapture, i64) unnamed_addr #3 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 0, i32 0
  store %"class.rtc::FinalRefCountedObject"* null, %"class.rtc::FinalRefCountedObject"** %5, align 8
  br label %19

6:                                                ; preds = %2
  %7 = tail call i8* @_Znwm(i64 32) #10
  %8 = bitcast i8* %7 to i64*
  store i64 %1, i64* %8, align 8
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %9 to i64*
  store i64 %1, i64* %10, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 16
  %12 = tail call i8* @_Znam(i64 %1) #10
  %13 = ptrtoint i8* %12 to i64
  %14 = bitcast i8* %11 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds i8, i8* %7, i64 24
  %16 = bitcast i8* %15 to i32*
  store i32 0, i32* %16, align 4
  %17 = bitcast %"class.rtc::CopyOnWriteBuffer"* %0 to i8**
  store i8* %7, i8** %17, align 8
  %18 = atomicrmw add i32* %16, i32 1 monotonic
  br label %19

19:                                               ; preds = %4, %6
  %20 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 1
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 2
  store i64 %1, i64* %21, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN3rtc17CopyOnWriteBufferC2Emm(%"class.rtc::CopyOnWriteBuffer"* nocapture, i64, i64) unnamed_addr #3 align 2 {
  %4 = or i64 %2, %1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 0, i32 0
  store %"class.rtc::FinalRefCountedObject"* null, %"class.rtc::FinalRefCountedObject"** %7, align 8
  br label %27

8:                                                ; preds = %3
  %9 = tail call i8* @_Znwm(i64 32) #10
  %10 = bitcast i8* %9 to i64*
  store i64 %1, i64* %10, align 8
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  %12 = bitcast i8* %11 to i64*
  %13 = icmp ult i64 %1, %2
  %14 = select i1 %13, i64 %2, i64 %1
  store i64 %14, i64* %12, align 8
  %15 = getelementptr inbounds i8, i8* %9, i64 16
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %8
  %18 = tail call i8* @_Znam(i64 %14) #10
  %19 = ptrtoint i8* %18 to i64
  br label %20

20:                                               ; preds = %8, %17
  %21 = phi i64 [ %19, %17 ], [ 0, %8 ]
  %22 = bitcast i8* %15 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds i8, i8* %9, i64 24
  %24 = bitcast i8* %23 to i32*
  store i32 0, i32* %24, align 4
  %25 = bitcast %"class.rtc::CopyOnWriteBuffer"* %0 to i8**
  store i8* %9, i8** %25, align 8
  %26 = atomicrmw add i32* %24, i32 1 monotonic
  br label %27

27:                                               ; preds = %6, %20
  %28 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 1
  store i64 0, i64* %28, align 8
  %29 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 2
  store i64 %1, i64* %29, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3rtc17CopyOnWriteBufferD2Ev(%"class.rtc::CopyOnWriteBuffer"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.rtc::FinalRefCountedObject"*, %"class.rtc::FinalRefCountedObject"** %2, align 8
  %4 = icmp eq %"class.rtc::FinalRefCountedObject"* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.rtc::FinalRefCountedObject", %"class.rtc::FinalRefCountedObject"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %16

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.rtc::FinalRefCountedObject", %"class.rtc::FinalRefCountedObject"* %3, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  store i8* null, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @_ZdaPv(i8* nonnull %11) #10
  br label %14

14:                                               ; preds = %13, %9
  %15 = bitcast %"class.rtc::FinalRefCountedObject"* %3 to i8*
  tail call void @_ZdlPv(i8* %15) #10
  br label %16

16:                                               ; preds = %1, %5, %14
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3rtc17CopyOnWriteBuffereqERKS0_(%"class.rtc::CopyOnWriteBuffer"* nocapture readonly, %"class.rtc::CopyOnWriteBuffer"* nocapture readonly dereferenceable(24)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %1, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %51

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 0, i32 0
  %10 = load %"class.rtc::FinalRefCountedObject"*, %"class.rtc::FinalRefCountedObject"** %9, align 8
  %11 = icmp eq %"class.rtc::FinalRefCountedObject"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.rtc::FinalRefCountedObject", %"class.rtc::FinalRefCountedObject"* %10, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds i8, i8* %14, i64 %16
  br label %18

18:                                               ; preds = %8, %12
  %19 = phi i8* [ %17, %12 ], [ null, %8 ]
  %20 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %1, i64 0, i32 0, i32 0
  %21 = load %"class.rtc::FinalRefCountedObject"*, %"class.rtc::FinalRefCountedObject"** %20, align 8
  %22 = icmp eq %"class.rtc::FinalRefCountedObject"* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.rtc::FinalRefCountedObject", %"class.rtc::FinalRefCountedObject"* %21, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %1, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds i8, i8* %25, i64 %27
  br label %29

29:                                               ; preds = %18, %23
  %30 = phi i8* [ %28, %23 ], [ null, %18 ]
  %31 = icmp eq i8* %19, %30
  br i1 %31, label %51, label %32

32:                                               ; preds = %29
  br i1 %11, label %39, label %33

33:                                               ; preds = %32
  %34 = getelementptr inbounds %"class.rtc::FinalRefCountedObject", %"class.rtc::FinalRefCountedObject"* %10, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds i8, i8* %35, i64 %37
  br label %39

39:                                               ; preds = %32, %33
  %40 = phi i8* [ %38, %33 ], [ null, %32 ]
  br i1 %22, label %47, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"class.rtc::FinalRefCountedObject", %"class.rtc::FinalRefCountedObject"* %21, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %1, i64 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds i8, i8* %43, i64 %45
  br label %47

47:                                               ; preds = %39, %41
  %48 = phi i8* [ %46, %41 ], [ null, %39 ]
  %49 = tail call i32 @bcmp(i8* %40, i8* %48, i64 %4)
  %50 = icmp eq i32 %49, 0
  br label %51

51:                                               ; preds = %29, %47, %2
  %52 = phi i1 [ false, %2 ], [ true, %29 ], [ %50, %47 ]
  ret i1 %52
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3rtc17CopyOnWriteBuffer7SetSizeEm(%"class.rtc::CopyOnWriteBuffer"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.rtc::FinalRefCountedObject"*, %"class.rtc::FinalRefCountedObject"** %3, align 8
  %5 = icmp eq %"class.rtc::FinalRefCountedObject"* %4, null
  br i1 %5, label %6, label %23

6:                                                ; preds = %2
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %63, label %8

8:                                                ; preds = %6
  %9 = tail call i8* @_Znwm(i64 32) #10
  %10 = bitcast i8* %9 to i64*
  store i64 %1, i64* %10, align 8
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  %12 = bitcast i8* %11 to i64*
  store i64 %1, i64* %12, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 16
  %14 = tail call i8* @_Znam(i64 %1) #10
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast i8* %13 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds i8, i8* %9, i64 24
  %18 = bitcast i8* %17 to i32*
  store i32 0, i32* %18, align 4
  %19 = atomicrmw add i32* %18, i32 1 monotonic
  %20 = bitcast %"class.rtc::CopyOnWriteBuffer"* %0 to i8**
  store i8* %9, i8** %20, align 8
  %21 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 1
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 2
  br label %61

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = icmp ult i64 %25, %1
  br i1 %26, label %27, label %61

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.rtc::FinalRefCountedObject", %"class.rtc::FinalRefCountedObject"* %4, i64 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %29, %31
  %33 = icmp ult i64 %32, %1
  %34 = select i1 %33, i64 %1, i64 %32
  tail call void @_ZN3rtc17CopyOnWriteBuffer24UnshareAndEnsureCapacityEm(%"class.rtc::CopyOnWriteBuffer"* %0, i64 %34)
  %35 = load %"class.rtc::FinalRefCountedObject"*, %"class.rtc::FinalRefCountedObject"** %3, align 8
  %36 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, %1
  %39 = getelementptr inbounds %"class.rtc::FinalRefCountedObject", %"class.rtc::FinalRefCountedObject"* %35, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.rtc::FinalRefCountedObject", %"class.rtc::FinalRefCountedObject"* %35, i64 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = icmp ult i64 %41, %38
  br i1 %42, label %43, label %60

43:                                               ; preds = %27
  %44 = lshr i64 %41, 1
  %45 = add i64 %44, %41
  %46 = icmp ugt i64 %45, %38
  %47 = select i1 %46, i64 %45, i64 %38
  %48 = tail call i8* @_Znam(i64 %47) #10
  %49 = ptrtoint i8* %48 to i64
  %50 = getelementptr inbounds %"class.rtc::FinalRefCountedObject", %"class.rtc::FinalRefCountedObject"* %35, i64 0, i32 0, i32 2
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %43
  %55 = bitcast %"class.std::__1::unique_ptr"* %50 to i64*
  store i64 %49, i64* %55, align 8
  br label %59

56:                                               ; preds = %43
  %57 = load i64, i64* %39, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %48, i8* nonnull align 1 %52, i64 %57, i1 false) #9
  %58 = bitcast %"class.std::__1::unique_ptr"* %50 to i64*
  store i64 %49, i64* %58, align 8
  tail call void @_ZdaPv(i8* nonnull %52) #10
  br label %59

59:                                               ; preds = %56, %54
  store i64 %47, i64* %40, align 8
  br label %60

60:                                               ; preds = %27, %59
  store i64 %38, i64* %39, align 8
  br label %61

61:                                               ; preds = %23, %60, %8
  %62 = phi i64* [ %22, %8 ], [ %24, %60 ], [ %24, %23 ]
  store i64 %1, i64* %62, align 8
  br label %63

63:                                               ; preds = %61, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3rtc17CopyOnWriteBuffer24UnshareAndEnsureCapacityEm(%"class.rtc::CopyOnWriteBuffer"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.rtc::FinalRefCountedObject"*, %"class.rtc::FinalRefCountedObject"** %3, align 8
  %5 = getelementptr inbounds %"class.rtc::FinalRefCountedObject", %"class.rtc::FinalRefCountedObject"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load atomic i32, i32* %5 acquire, align 4
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %20

8:                                                ; preds = %2
  %9 = load %"class.rtc::FinalRefCountedObject"*, %"class.rtc::FinalRefCountedObject"** %3, align 8
  %10 = icmp eq %"class.rtc::FinalRefCountedObject"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.rtc::FinalRefCountedObject", %"class.rtc::FinalRefCountedObject"* %9, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  br label %17

17:                                               ; preds = %8, %11
  %18 = phi i64 [ %16, %11 ], [ 0, %8 ]
  %19 = icmp ult i64 %18, %1
  br i1 %19, label %20, label %62

20:                                               ; preds = %17, %2
  %21 = tail call i8* @_Znwm(i64 32) #10
  %22 = load %"class.rtc::FinalRefCountedObject"*, %"class.rtc::FinalRefCountedObject"** %3, align 8
  %23 = getelementptr inbounds %"class.rtc::FinalRefCountedObject", %"class.rtc::FinalRefCountedObject"* %22, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds i8, i8* %24, i64 %26
  %28 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i8* %21 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds i8, i8* %21, i64 8
  %32 = bitcast i8* %31 to i64*
  %33 = icmp ult i64 %29, %1
  %34 = select i1 %33, i64 %1, i64 %29
  store i64 %34, i64* %32, align 8
  %35 = getelementptr inbounds i8, i8* %21, i64 16
  %36 = icmp eq i64 %34, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %20
  %38 = tail call i8* @_Znam(i64 %34) #10
  %39 = ptrtoint i8* %38 to i64
  br label %40

40:                                               ; preds = %20, %37
  %41 = phi i64 [ %39, %37 ], [ 0, %20 ]
  %42 = bitcast i8* %35 to i64*
  store i64 %41, i64* %42, align 8
  %43 = inttoptr i64 %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %43, i8* align 1 %27, i64 %29, i1 false) #9
  %44 = getelementptr inbounds i8, i8* %21, i64 24
  %45 = bitcast i8* %44 to i32*
  store i32 0, i32* %45, align 4
  %46 = atomicrmw add i32* %45, i32 1 monotonic
  %47 = load %"class.rtc::FinalRefCountedObject"*, %"class.rtc::FinalRefCountedObject"** %3, align 8
  %48 = icmp eq %"class.rtc::FinalRefCountedObject"* %47, null
  br i1 %48, label %60, label %49

49:                                               ; preds = %40
  %50 = getelementptr inbounds %"class.rtc::FinalRefCountedObject", %"class.rtc::FinalRefCountedObject"* %47, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw sub i32* %50, i32 1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %60

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.rtc::FinalRefCountedObject", %"class.rtc::FinalRefCountedObject"* %47, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  store i8* null, i8** %54, align 8
  %56 = icmp eq i8* %55, null
  br i1 %56, label %58, label %57

57:                                               ; preds = %53
  tail call void @_ZdaPv(i8* nonnull %55) #10
  br label %58

58:                                               ; preds = %57, %53
  %59 = bitcast %"class.rtc::FinalRefCountedObject"* %47 to i8*
  tail call void @_ZdlPv(i8* %59) #10
  br label %60

60:                                               ; preds = %40, %49, %58
  %61 = bitcast %"class.rtc::CopyOnWriteBuffer"* %0 to i8**
  store i8* %21, i8** %61, align 8
  store i64 0, i64* %25, align 8
  br label %62

62:                                               ; preds = %17, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3rtc17CopyOnWriteBuffer14EnsureCapacityEm(%"class.rtc::CopyOnWriteBuffer"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.rtc::FinalRefCountedObject"*, %"class.rtc::FinalRefCountedObject"** %3, align 8
  %5 = icmp eq %"class.rtc::FinalRefCountedObject"* %4, null
  br i1 %5, label %6, label %23

6:                                                ; preds = %2
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %31, label %8

8:                                                ; preds = %6
  %9 = tail call i8* @_Znwm(i64 32) #10
  %10 = bitcast i8* %9 to i64*
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  %12 = bitcast i8* %11 to i64*
  store i64 %1, i64* %12, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 16
  %14 = tail call i8* @_Znam(i64 %1) #10
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast i8* %13 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds i8, i8* %9, i64 24
  %18 = bitcast i8* %17 to i32*
  store i32 0, i32* %18, align 4
  %19 = atomicrmw add i32* %18, i32 1 monotonic
  %20 = bitcast %"class.rtc::CopyOnWriteBuffer"* %0 to i8**
  store i8* %9, i8** %20, align 8
  %21 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 1
  %22 = bitcast i64* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false)
  br label %31

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.rtc::FinalRefCountedObject", %"class.rtc::FinalRefCountedObject"* %4, i64 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = icmp ult i64 %28, %1
  br i1 %29, label %30, label %31

30:                                               ; preds = %23
  tail call void @_ZN3rtc17CopyOnWriteBuffer24UnshareAndEnsureCapacityEm(%"class.rtc::CopyOnWriteBuffer"* %0, i64 %1)
  br label %31

31:                                               ; preds = %23, %6, %8, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3rtc17CopyOnWriteBuffer5ClearEv(%"class.rtc::CopyOnWriteBuffer"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.rtc::FinalRefCountedObject"*, %"class.rtc::FinalRefCountedObject"** %2, align 8
  %4 = icmp eq %"class.rtc::FinalRefCountedObject"* %3, null
  br i1 %4, label %59, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.rtc::FinalRefCountedObject", %"class.rtc::FinalRefCountedObject"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 acquire, align 4
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = load %"class.rtc::FinalRefCountedObject"*, %"class.rtc::FinalRefCountedObject"** %2, align 8
  %11 = getelementptr inbounds %"class.rtc::FinalRefCountedObject", %"class.rtc::FinalRefCountedObject"* %10, i64 0, i32 0, i32 0
  store i64 0, i64* %11, align 8
  br label %56

12:                                               ; preds = %5
  %13 = tail call i8* @_Znwm(i64 32) #10
  %14 = load %"class.rtc::FinalRefCountedObject"*, %"class.rtc::FinalRefCountedObject"** %2, align 8
  %15 = icmp eq %"class.rtc::FinalRefCountedObject"* %14, null
  br i1 %15, label %16, label %23

16:                                               ; preds = %12
  %17 = bitcast i8* %13 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %17, align 8
  %18 = getelementptr inbounds i8, i8* %13, i64 16
  %19 = bitcast i8* %18 to i64*
  store i64 0, i64* %19, align 8
  %20 = getelementptr inbounds i8, i8* %13, i64 24
  %21 = bitcast i8* %20 to i32*
  store i32 0, i32* %21, align 4
  %22 = atomicrmw add i32* %21, i32 1 monotonic
  br label %54

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"class.rtc::FinalRefCountedObject", %"class.rtc::FinalRefCountedObject"* %14, i64 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = bitcast i8* %13 to i64*
  store i64 0, i64* %29, align 8
  %30 = getelementptr inbounds i8, i8* %13, i64 8
  %31 = bitcast i8* %30 to i64*
  %32 = icmp eq i64 %28, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %23
  store i64 %28, i64* %31, align 8
  %34 = tail call i8* @_Znam(i64 %28) #10
  %35 = ptrtoint i8* %34 to i64
  br label %37

36:                                               ; preds = %23
  store i64 0, i64* %31, align 8
  br label %37

37:                                               ; preds = %36, %33
  %38 = phi i64 [ 0, %36 ], [ %35, %33 ]
  %39 = getelementptr inbounds i8, i8* %13, i64 16
  %40 = bitcast i8* %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = getelementptr inbounds i8, i8* %13, i64 24
  %42 = bitcast i8* %41 to i32*
  store i32 0, i32* %42, align 4
  %43 = atomicrmw add i32* %42, i32 1 monotonic
  %44 = getelementptr inbounds %"class.rtc::FinalRefCountedObject", %"class.rtc::FinalRefCountedObject"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %54

47:                                               ; preds = %37
  %48 = getelementptr inbounds %"class.rtc::FinalRefCountedObject", %"class.rtc::FinalRefCountedObject"* %14, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  store i8* null, i8** %48, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %52, label %51

51:                                               ; preds = %47
  tail call void @_ZdaPv(i8* nonnull %49) #10
  br label %52

52:                                               ; preds = %51, %47
  %53 = bitcast %"class.rtc::FinalRefCountedObject"* %14 to i8*
  tail call void @_ZdlPv(i8* %53) #10
  br label %54

54:                                               ; preds = %16, %37, %52
  %55 = bitcast %"class.rtc::CopyOnWriteBuffer"* %0 to i8**
  store i8* %13, i8** %55, align 8
  br label %56

56:                                               ; preds = %54, %9
  %57 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %0, i64 0, i32 1
  %58 = bitcast i64* %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 16, i1 false)
  br label %59

59:                                               ; preds = %1, %56
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
