; ModuleID = '../../ui/base/models/list_selection_model.cc'
source_filename = "../../ui/base/models/list_selection_model.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::ListSelectionModel" = type { %"class.base::internal::flat_tree", i32, i32 }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type opaque
%"struct.std::__1::__split_buffer" = type { i32*, i32*, i32*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::allocator"* }
%"class.std::__1::allocator" = type { i8 }

$_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__16vectorIiNS_9allocatorIiEEE7emplaceIJRKiEEENS_11__wrap_iterIPiEENS7_IPS5_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE12emplace_backIJRKiEEEvDpOT_ = comdat any

$_ZNSt3__16vectorIiNS_9allocatorIiEEE7emplaceIJiEEENS_11__wrap_iterIPiEENS5_IPKiEEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE12emplace_backIJiEEEvDpOT_ = comdat any

@.str.1 = private unnamed_addr constant [34 x i8] c"../../base/containers/flat_tree.h\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"position != body_.end()\00", align 1

@_ZN2ui18ListSelectionModelC1Ev = hidden unnamed_addr alias void (%"class.ui::ListSelectionModel"*), void (%"class.ui::ListSelectionModel"*)* @_ZN2ui18ListSelectionModelC2Ev
@_ZN2ui18ListSelectionModelC1ERKS0_ = hidden unnamed_addr alias void (%"class.ui::ListSelectionModel"*, %"class.ui::ListSelectionModel"*), void (%"class.ui::ListSelectionModel"*, %"class.ui::ListSelectionModel"*)* @_ZN2ui18ListSelectionModelC2ERKS0_
@_ZN2ui18ListSelectionModelC1EOS0_ = hidden unnamed_addr alias void (%"class.ui::ListSelectionModel"*, %"class.ui::ListSelectionModel"*), void (%"class.ui::ListSelectionModel"*, %"class.ui::ListSelectionModel"*)* @_ZN2ui18ListSelectionModelC2EOS0_
@_ZN2ui18ListSelectionModelD1Ev = hidden unnamed_addr alias void (%"class.ui::ListSelectionModel"*), void (%"class.ui::ListSelectionModel"*)* @_ZN2ui18ListSelectionModelD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18ListSelectionModelC2Ev(%"class.ui::ListSelectionModel"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.ui::ListSelectionModel"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #10
  %3 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 1
  store i32 -1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 2
  store i32 -1, i32* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18ListSelectionModelC2ERKS0_(%"class.ui::ListSelectionModel"*, %"class.ui::ListSelectionModel"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.ui::ListSelectionModel"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #10
  %4 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast i32** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.ui::ListSelectionModel"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %39, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 4611686018427387903
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.ui::ListSelectionModel"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #11
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #12
  %18 = bitcast i8* %17 to i32*
  %19 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast i32** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"class.ui::ListSelectionModel"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds i32, i32* %18, i64 %10
  %23 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i32* %22, i32** %23, align 8
  %24 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = load i64, i64* %5, align 8
  %27 = bitcast i32** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = ptrtoint i32* %25 to i64
  %30 = sub i64 %26, %29
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %32, label %37

32:                                               ; preds = %16
  %33 = lshr exact i64 %30, 2
  %34 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %17, i8* align 4 %34, i64 %30, i1 false) #10
  %35 = getelementptr inbounds i32, i32* %18, i64 %33
  %36 = ptrtoint i32* %35 to i64
  br label %37

37:                                               ; preds = %32, %16
  %38 = phi i64 [ %36, %32 ], [ %28, %16 ]
  store i64 %38, i64* %27, align 8
  br label %39

39:                                               ; preds = %2, %37
  %40 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 1
  %41 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %1, i64 0, i32 1
  %42 = bitcast i32* %41 to i64*
  %43 = bitcast i32* %40 to i64*
  %44 = load i64, i64* %42, align 8
  store i64 %44, i64* %43, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18ListSelectionModelC2EOS0_(%"class.ui::ListSelectionModel"* nocapture, %"class.ui::ListSelectionModel"* nocapture dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.ui::ListSelectionModel"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #10
  %4 = bitcast %"class.ui::ListSelectionModel"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.ui::ListSelectionModel"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast i32** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i32** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast i32** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"class.ui::ListSelectionModel"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #10
  %18 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %1, i64 0, i32 1
  %20 = bitcast i32* %19 to i64*
  %21 = bitcast i32* %18 to i64*
  %22 = load i64, i64* %20, align 8
  store i64 %22, i64* %21, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18ListSelectionModelD2Ev(%"class.ui::ListSelectionModel"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i32* %3 to i64
  %7 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast i32* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"class.ui::ListSelectionModel"* @_ZN2ui18ListSelectionModelaSERKS0_(%"class.ui::ListSelectionModel"* returned, %"class.ui::ListSelectionModel"* readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.ui::ListSelectionModel"* %0, %1
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i32*, i32** %8, align 8
  tail call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %5, i32* %7, i32* %9) #10
  br label %10

10:                                               ; preds = %2, %4
  %11 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %1, i64 0, i32 1
  %13 = bitcast i32* %12 to i64*
  %14 = bitcast i32* %11 to i64*
  %15 = load i64, i64* %13, align 8
  store i64 %15, i64* %14, align 8
  ret %"class.ui::ListSelectionModel"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"class.ui::ListSelectionModel"* @_ZN2ui18ListSelectionModelaSEOS0_(%"class.ui::ListSelectionModel"* returned, %"class.ui::ListSelectionModel"* nocapture dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = ptrtoint i32* %4 to i64
  %8 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  %11 = bitcast %"class.ui::ListSelectionModel"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #10
  br label %12

12:                                               ; preds = %2, %6
  %13 = bitcast %"class.ui::ListSelectionModel"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.ui::ListSelectionModel"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast i32** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast i32** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %22 = bitcast i32** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast i32** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = bitcast %"class.ui::ListSelectionModel"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #10
  %27 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 1
  %28 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %1, i64 0, i32 1
  %29 = bitcast i32* %28 to i64*
  %30 = bitcast i32* %27 to i64*
  %31 = load i64, i64* %29, align 8
  store i64 %31, i64* %30, align 8
  ret %"class.ui::ListSelectionModel"* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2ui18ListSelectionModeleqERKS0_(%"class.ui::ListSelectionModel"* nocapture readonly, %"class.ui::ListSelectionModel"* nocapture readonly dereferenceable(32)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %44

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %1, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %44

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast i32** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.ui::ListSelectionModel"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %22 = bitcast i32** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.ui::ListSelectionModel"* %1 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = icmp eq i64 %20, %26
  %28 = inttoptr i64 %19 to i32*
  %29 = inttoptr i64 %17 to i32*
  br i1 %27, label %30, label %44

30:                                               ; preds = %14
  %31 = icmp eq i32* %28, %29
  br i1 %31, label %44, label %32

32:                                               ; preds = %30
  %33 = inttoptr i64 %25 to i32*
  br label %34

34:                                               ; preds = %40, %32
  %35 = phi i32* [ %42, %40 ], [ %33, %32 ]
  %36 = phi i32* [ %41, %40 ], [ %28, %32 ]
  %37 = load i32, i32* %36, align 4
  %38 = load i32, i32* %35, align 4
  %39 = icmp eq i32 %37, %38
  br i1 %39, label %40, label %44

40:                                               ; preds = %34
  %41 = getelementptr inbounds i32, i32* %36, i64 1
  %42 = getelementptr inbounds i32, i32* %35, i64 1
  %43 = icmp eq i32* %41, %29
  br i1 %43, label %44, label %34

44:                                               ; preds = %40, %34, %30, %14, %8, %2
  %45 = phi i1 [ false, %8 ], [ false, %2 ], [ false, %14 ], [ true, %30 ], [ true, %40 ], [ false, %34 ]
  ret i1 %45
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2ui18ListSelectionModelneERKS0_(%"class.ui::ListSelectionModel"* nocapture readonly, %"class.ui::ListSelectionModel"* nocapture readonly dereferenceable(32)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %44

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %1, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %44

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast i32** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.ui::ListSelectionModel"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %22 = bitcast i32** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.ui::ListSelectionModel"* %1 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = icmp eq i64 %20, %26
  %28 = inttoptr i64 %19 to i32*
  %29 = inttoptr i64 %17 to i32*
  br i1 %27, label %30, label %44

30:                                               ; preds = %14
  %31 = icmp eq i32* %28, %29
  br i1 %31, label %44, label %32

32:                                               ; preds = %30
  %33 = inttoptr i64 %25 to i32*
  br label %34

34:                                               ; preds = %40, %32
  %35 = phi i32* [ %42, %40 ], [ %33, %32 ]
  %36 = phi i32* [ %41, %40 ], [ %28, %32 ]
  %37 = load i32, i32* %36, align 4
  %38 = load i32, i32* %35, align 4
  %39 = icmp eq i32 %37, %38
  br i1 %39, label %40, label %44

40:                                               ; preds = %34
  %41 = getelementptr inbounds i32, i32* %36, i64 1
  %42 = getelementptr inbounds i32, i32* %35, i64 1
  %43 = icmp eq i32* %41, %29
  br i1 %43, label %44, label %34

44:                                               ; preds = %34, %40, %2, %8, %14, %30
  %45 = phi i1 [ true, %8 ], [ true, %2 ], [ true, %14 ], [ false, %30 ], [ true, %34 ], [ false, %40 ]
  ret i1 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18ListSelectionModel13IncrementFromEi(%"class.ui::ListSelectionModel"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %4, %6
  br i1 %7, label %8, label %21

8:                                                ; preds = %29, %2
  %9 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %10, %1
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = add nsw i32 %10, 1
  store i32 %13, i32* %9, align 4
  br label %14

14:                                               ; preds = %8, %12
  %15 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %16, %1
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = add nsw i32 %16, 1
  store i32 %19, i32* %15, align 4
  br label %20

20:                                               ; preds = %14, %18
  ret void

21:                                               ; preds = %2, %29
  %22 = phi i32* [ %30, %29 ], [ %6, %2 ]
  %23 = phi i32* [ %31, %29 ], [ %4, %2 ]
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %24, %1
  br i1 %25, label %29, label %26

26:                                               ; preds = %21
  %27 = add nsw i32 %24, 1
  store i32 %27, i32* %23, align 4
  %28 = load i32*, i32** %5, align 8
  br label %29

29:                                               ; preds = %21, %26
  %30 = phi i32* [ %22, %21 ], [ %28, %26 ]
  %31 = getelementptr inbounds i32, i32* %23, i64 1
  %32 = icmp eq i32* %31, %30
  br i1 %32, label %8, label %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18ListSelectionModel13DecrementFromEi(%"class.ui::ListSelectionModel"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i32*, i32** %6, align 8
  %8 = icmp eq i32* %5, %7
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.logging::CheckError"* %3 to i8*
  %11 = bitcast i32** %6 to i64*
  br label %33

12:                                               ; preds = %66, %2
  %13 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, %1
  br i1 %15, label %20, label %16

16:                                               ; preds = %12
  %17 = icmp sgt i32 %14, %1
  br i1 %17, label %18, label %22

18:                                               ; preds = %16
  %19 = add nsw i32 %14, -1
  br label %20

20:                                               ; preds = %12, %18
  %21 = phi i32 [ %19, %18 ], [ -1, %12 ]
  store i32 %21, i32* %13, align 4
  br label %22

22:                                               ; preds = %20, %16
  %23 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, %1
  br i1 %25, label %30, label %26

26:                                               ; preds = %22
  %27 = icmp sgt i32 %24, %1
  br i1 %27, label %28, label %32

28:                                               ; preds = %26
  %29 = add nsw i32 %24, -1
  br label %30

30:                                               ; preds = %22, %28
  %31 = phi i32 [ %29, %28 ], [ -1, %22 ]
  store i32 %31, i32* %23, align 4
  br label %32

32:                                               ; preds = %30, %26
  ret void

33:                                               ; preds = %9, %66
  %34 = phi i32* [ %7, %9 ], [ %67, %66 ]
  %35 = phi i32* [ %5, %9 ], [ %68, %66 ]
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, %1
  br i1 %37, label %43, label %38

38:                                               ; preds = %33
  %39 = icmp sgt i32 %36, %1
  br i1 %39, label %40, label %63

40:                                               ; preds = %38
  %41 = add nsw i32 %36, -1
  store i32 %41, i32* %35, align 4
  %42 = load i32*, i32** %6, align 8
  br label %63

43:                                               ; preds = %33
  store i32 -1, i32* %35, align 4
  %44 = load i32*, i32** %6, align 8
  %45 = icmp eq i32* %44, %35
  br i1 %45, label %48, label %46

46:                                               ; preds = %43
  %47 = ptrtoint i32* %44 to i64
  br label %51

48:                                               ; preds = %43
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i64 0, i64 0), i32 879, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #10
  %49 = call %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  %50 = load i64, i64* %11, align 8
  br label %51

51:                                               ; preds = %48, %46
  %52 = phi i64 [ %47, %46 ], [ %50, %48 ]
  %53 = getelementptr inbounds i32, i32* %35, i64 1
  %54 = ptrtoint i32* %53 to i64
  %55 = sub i64 %52, %54
  %56 = ashr exact i64 %55, 2
  %57 = icmp eq i64 %55, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %51
  %59 = bitcast i32* %35 to i8*
  %60 = bitcast i32* %53 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %60, i64 %55, i1 false) #10
  br label %61

61:                                               ; preds = %51, %58
  %62 = getelementptr inbounds i32, i32* %35, i64 %56
  store i32* %62, i32** %6, align 8
  br label %66

63:                                               ; preds = %40, %38
  %64 = phi i32* [ %42, %40 ], [ %34, %38 ]
  %65 = getelementptr inbounds i32, i32* %35, i64 1
  br label %66

66:                                               ; preds = %63, %61
  %67 = phi i32* [ %62, %61 ], [ %64, %63 ]
  %68 = phi i32* [ %35, %61 ], [ %65, %63 ]
  %69 = icmp eq i32* %68, %67
  br i1 %69, label %12, label %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18ListSelectionModel16SetSelectedIndexEi(%"class.ui::ListSelectionModel"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  store i32 %1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 1
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 2
  store i32 %1, i32* %5, align 4
  %6 = bitcast %"class.ui::ListSelectionModel"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = icmp eq i32 %1, -1
  br i1 %10, label %15, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %7 to i32*
  %13 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0
  %14 = call i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEE7emplaceIJRKiEEENS_11__wrap_iterIPiEENS7_IPS5_EEDpOT_(%"class.std::__1::vector"* %13, i32* %12, i32* nonnull dereferenceable(4) %3) #10
  br label %15

15:                                               ; preds = %11, %2
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2ui18ListSelectionModel10IsSelectedEi(%"class.ui::ListSelectionModel"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast i32** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint i32* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to i32*
  br i1 %10, label %27, label %12

12:                                               ; preds = %2
  %13 = ashr exact i64 %9, 2
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi i32* [ %4, %12 ], [ %25, %14 ]
  %16 = phi i64 [ %13, %12 ], [ %24, %14 ]
  %17 = lshr i64 %16, 1
  %18 = getelementptr inbounds i32, i32* %15, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = icmp slt i32 %19, %1
  %21 = getelementptr inbounds i32, i32* %18, i64 1
  %22 = xor i64 %17, -1
  %23 = add i64 %16, %22
  %24 = select i1 %20, i64 %23, i64 %17
  %25 = select i1 %20, i32* %21, i32* %15
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %27, label %14

27:                                               ; preds = %14, %2
  %28 = phi i32* [ %4, %2 ], [ %25, %14 ]
  %29 = icmp eq i32* %28, %11
  br i1 %29, label %33, label %30

30:                                               ; preds = %27
  %31 = load i32, i32* %28, align 4
  %32 = icmp sle i32 %31, %1
  br label %33

33:                                               ; preds = %27, %30
  %34 = phi i1 [ false, %27 ], [ %32, %30 ]
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18ListSelectionModel19AddIndexToSelectionEi(%"class.ui::ListSelectionModel"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  store i32 %1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint i32* %5 to i64
  %10 = sub i64 %8, %9
  %11 = icmp eq i64 %10, 0
  %12 = inttoptr i64 %8 to i32*
  br i1 %11, label %28, label %13

13:                                               ; preds = %2
  %14 = ashr exact i64 %10, 2
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i32* [ %5, %13 ], [ %26, %15 ]
  %17 = phi i64 [ %14, %13 ], [ %25, %15 ]
  %18 = lshr i64 %17, 1
  %19 = getelementptr inbounds i32, i32* %16, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %20, %1
  %22 = getelementptr inbounds i32, i32* %19, i64 1
  %23 = xor i64 %18, -1
  %24 = add i64 %17, %23
  %25 = select i1 %21, i64 %24, i64 %18
  %26 = select i1 %21, i32* %22, i32* %16
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %28, label %15

28:                                               ; preds = %15, %2
  %29 = phi i32* [ %5, %2 ], [ %26, %15 ]
  %30 = icmp eq i32* %29, %12
  br i1 %30, label %34, label %31

31:                                               ; preds = %28
  %32 = load i32, i32* %29, align 4
  %33 = icmp sgt i32 %32, %1
  br i1 %33, label %34, label %37

34:                                               ; preds = %31, %28
  %35 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0
  %36 = call i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEE7emplaceIJRKiEEENS_11__wrap_iterIPiEENS7_IPS5_EEDpOT_(%"class.std::__1::vector"* %35, i32* %29, i32* nonnull dereferenceable(4) %3) #10
  br label %37

37:                                               ; preds = %31, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18ListSelectionModel24AddIndexRangeToSelectionEii(%"class.ui::ListSelectionModel"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = icmp eq i32 %1, %2
  br i1 %6, label %7, label %43

7:                                                ; preds = %3
  %8 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8)
  store i32 %1, i32* %4, align 4
  %9 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast i32** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = ptrtoint i32* %10 to i64
  %15 = sub i64 %13, %14
  %16 = icmp eq i64 %15, 0
  %17 = inttoptr i64 %13 to i32*
  br i1 %16, label %33, label %18

18:                                               ; preds = %7
  %19 = ashr exact i64 %15, 2
  br label %20

20:                                               ; preds = %20, %18
  %21 = phi i32* [ %10, %18 ], [ %31, %20 ]
  %22 = phi i64 [ %19, %18 ], [ %30, %20 ]
  %23 = lshr i64 %22, 1
  %24 = getelementptr inbounds i32, i32* %21, i64 %23
  %25 = load i32, i32* %24, align 4
  %26 = icmp slt i32 %25, %1
  %27 = getelementptr inbounds i32, i32* %24, i64 1
  %28 = xor i64 %23, -1
  %29 = add i64 %22, %28
  %30 = select i1 %26, i64 %29, i64 %23
  %31 = select i1 %26, i32* %27, i32* %21
  %32 = icmp eq i64 %30, 0
  br i1 %32, label %33, label %20

33:                                               ; preds = %20, %7
  %34 = phi i32* [ %10, %7 ], [ %31, %20 ]
  %35 = icmp eq i32* %34, %17
  br i1 %35, label %39, label %36

36:                                               ; preds = %33
  %37 = load i32, i32* %34, align 4
  %38 = icmp sgt i32 %37, %1
  br i1 %38, label %39, label %42

39:                                               ; preds = %36, %33
  %40 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0
  %41 = call i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEE7emplaceIJRKiEEENS_11__wrap_iterIPiEENS7_IPS5_EEDpOT_(%"class.std::__1::vector"* %40, i32* %34, i32* nonnull dereferenceable(4) %4) #10
  br label %42

42:                                               ; preds = %36, %39
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8)
  br label %88

43:                                               ; preds = %3
  %44 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44) #10
  store i32 %1, i32* %5, align 4
  %45 = icmp sgt i32 %1, %2
  br i1 %45, label %51, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %49 = bitcast i32** %48 to i64*
  %50 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0
  br label %52

51:                                               ; preds = %84, %43
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44) #10
  br label %88

52:                                               ; preds = %84, %46
  %53 = phi i32 [ %1, %46 ], [ %86, %84 ]
  %54 = load i32*, i32** %47, align 8
  %55 = load i64, i64* %49, align 8
  %56 = ptrtoint i32* %54 to i64
  %57 = sub i64 %55, %56
  %58 = icmp eq i64 %57, 0
  %59 = inttoptr i64 %55 to i32*
  br i1 %58, label %75, label %60

60:                                               ; preds = %52
  %61 = ashr exact i64 %57, 2
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i32* [ %54, %60 ], [ %73, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %72, %62 ]
  %65 = lshr i64 %64, 1
  %66 = getelementptr inbounds i32, i32* %63, i64 %65
  %67 = load i32, i32* %66, align 4
  %68 = icmp slt i32 %67, %53
  %69 = getelementptr inbounds i32, i32* %66, i64 1
  %70 = xor i64 %65, -1
  %71 = add i64 %64, %70
  %72 = select i1 %68, i64 %71, i64 %65
  %73 = select i1 %68, i32* %69, i32* %63
  %74 = icmp eq i64 %72, 0
  br i1 %74, label %75, label %62

75:                                               ; preds = %62, %52
  %76 = phi i32* [ %54, %52 ], [ %73, %62 ]
  %77 = icmp eq i32* %76, %59
  br i1 %77, label %81, label %78

78:                                               ; preds = %75
  %79 = load i32, i32* %76, align 4
  %80 = icmp slt i32 %53, %79
  br i1 %80, label %81, label %84

81:                                               ; preds = %78, %75
  %82 = call i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEE7emplaceIJRKiEEENS_11__wrap_iterIPiEENS7_IPS5_EEDpOT_(%"class.std::__1::vector"* %50, i32* %76, i32* nonnull dereferenceable(4) %5) #10
  %83 = load i32, i32* %5, align 4
  br label %84

84:                                               ; preds = %78, %81
  %85 = phi i32 [ %53, %78 ], [ %83, %81 ]
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %5, align 4
  %87 = icmp slt i32 %85, %2
  br i1 %87, label %52, label %51

88:                                               ; preds = %42, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18ListSelectionModel24RemoveIndexFromSelectionEi(%"class.ui::ListSelectionModel"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast i32** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint i32* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to i32*
  br i1 %10, label %29, label %12

12:                                               ; preds = %2
  %13 = ashr exact i64 %9, 2
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi i32* [ %4, %12 ], [ %25, %14 ]
  %16 = phi i64 [ %13, %12 ], [ %24, %14 ]
  %17 = lshr i64 %16, 1
  %18 = getelementptr inbounds i32, i32* %15, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = icmp slt i32 %19, %1
  %21 = getelementptr inbounds i32, i32* %18, i64 1
  %22 = xor i64 %17, -1
  %23 = add i64 %16, %22
  %24 = select i1 %20, i64 %23, i64 %17
  %25 = select i1 %20, i32* %21, i32* %15
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %27, label %14

27:                                               ; preds = %14
  %28 = ptrtoint i32* %25 to i64
  br label %29

29:                                               ; preds = %27, %2
  %30 = phi i64 [ %28, %27 ], [ %8, %2 ]
  %31 = phi i32* [ %25, %27 ], [ %4, %2 ]
  %32 = icmp eq i32* %31, %11
  br i1 %32, label %39, label %33

33:                                               ; preds = %29
  %34 = load i32, i32* %31, align 4
  %35 = icmp sgt i32 %34, %1
  br i1 %35, label %39, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds i32, i32* %31, i64 1
  %38 = ptrtoint i32* %37 to i64
  br label %39

39:                                               ; preds = %36, %33, %29
  %40 = phi i64 [ %38, %36 ], [ %30, %29 ], [ %30, %33 ]
  %41 = inttoptr i64 %40 to i32*
  %42 = icmp eq i32* %31, %41
  br i1 %42, label %52, label %43

43:                                               ; preds = %39
  %44 = sub i64 %7, %40
  %45 = ashr exact i64 %44, 2
  %46 = icmp eq i64 %44, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %43
  %48 = bitcast i32* %31 to i8*
  %49 = inttoptr i64 %40 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %48, i8* align 4 %49, i64 %44, i1 false) #10
  br label %50

50:                                               ; preds = %47, %43
  %51 = getelementptr inbounds i32, i32* %31, i64 %45
  store i32* %51, i32** %5, align 8
  br label %52

52:                                               ; preds = %39, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18ListSelectionModel24SetSelectionFromAnchorToEi(%"class.ui::ListSelectionModel"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.base::internal::flat_tree", align 16
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %9, label %22

9:                                                ; preds = %2
  %10 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10)
  store i32 %1, i32* %3, align 4
  %11 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 1
  store i32 %1, i32* %11, align 8
  store i32 %1, i32* %6, align 4
  %12 = bitcast %"class.ui::ListSelectionModel"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast i32** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = icmp eq i32 %1, -1
  br i1 %16, label %21, label %17

17:                                               ; preds = %9
  %18 = inttoptr i64 %13 to i32*
  %19 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0
  %20 = call i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEE7emplaceIJRKiEEENS_11__wrap_iterIPiEENS7_IPS5_EEDpOT_(%"class.std::__1::vector"* %19, i32* %18, i32* nonnull dereferenceable(4) %3) #10
  br label %21

21:                                               ; preds = %9, %17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10)
  br label %92

22:                                               ; preds = %2
  %23 = sub nsw i32 %1, %7
  %24 = icmp slt i32 %23, 0
  %25 = sub nsw i32 0, %23
  %26 = select i1 %24, i32 %25, i32 %23
  %27 = bitcast %"class.base::internal::flat_tree"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #10
  %28 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %4, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %4, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %27, i8 0, i64 24, i1 false) #10
  %31 = icmp slt i32 %7, %1
  %32 = select i1 %31, i32 %7, i32 %1
  %33 = bitcast i32* %5 to i8*
  %34 = bitcast i32** %29 to i64*
  %35 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %4, i64 0, i32 0
  br label %54

36:                                               ; preds = %86
  %37 = bitcast %"class.ui::ListSelectionModel"* %0 to <2 x i64>*
  %38 = load <2 x i64>, <2 x i64>* %37, align 8
  %39 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %40 = bitcast i32** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.base::internal::flat_tree"* %4 to <2 x i64>*
  %43 = load <2 x i64>, <2 x i64>* %42, align 16
  %44 = bitcast %"class.ui::ListSelectionModel"* %0 to <2 x i64>*
  store <2 x i64> %43, <2 x i64>* %44, align 8
  %45 = bitcast i32** %30 to i64*
  %46 = load i64, i64* %45, align 16
  store i64 %46, i64* %40, align 8
  %47 = bitcast %"class.base::internal::flat_tree"* %4 to <2 x i64>*
  store <2 x i64> %38, <2 x i64>* %47, align 16
  store i64 %41, i64* %45, align 16
  %48 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 1
  store i32 %1, i32* %48, align 8
  %49 = extractelement <2 x i64> %38, i32 0
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %36
  store i64 %49, i64* %34, align 8
  %52 = inttoptr i64 %49 to i8*
  call void @_ZdlPv(i8* %52) #12
  br label %53

53:                                               ; preds = %36, %51
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #10
  br label %92

54:                                               ; preds = %88, %22
  %55 = phi i64 [ 0, %22 ], [ %91, %88 ]
  %56 = phi i32* [ null, %22 ], [ %90, %88 ]
  %57 = phi i32 [ 0, %22 ], [ %89, %88 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #10
  %58 = add nsw i32 %57, %32
  store i32 %58, i32* %5, align 4
  %59 = ptrtoint i32* %56 to i64
  %60 = sub i64 %55, %59
  %61 = icmp eq i64 %60, 0
  %62 = inttoptr i64 %55 to i32*
  br i1 %61, label %78, label %63

63:                                               ; preds = %54
  %64 = ashr exact i64 %60, 2
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i32* [ %56, %63 ], [ %76, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %75, %65 ]
  %68 = lshr i64 %67, 1
  %69 = getelementptr inbounds i32, i32* %66, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = icmp slt i32 %70, %58
  %72 = getelementptr inbounds i32, i32* %69, i64 1
  %73 = xor i64 %68, -1
  %74 = add i64 %67, %73
  %75 = select i1 %71, i64 %74, i64 %68
  %76 = select i1 %71, i32* %72, i32* %66
  %77 = icmp eq i64 %75, 0
  br i1 %77, label %78, label %65

78:                                               ; preds = %65, %54
  %79 = phi i32* [ %56, %54 ], [ %76, %65 ]
  %80 = icmp eq i32* %79, %62
  br i1 %80, label %84, label %81

81:                                               ; preds = %78
  %82 = load i32, i32* %79, align 4
  %83 = icmp slt i32 %58, %82
  br i1 %83, label %84, label %86

84:                                               ; preds = %81, %78
  %85 = call i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEE7emplaceIJiEEENS_11__wrap_iterIPiEENS5_IPKiEEDpOT_(%"class.std::__1::vector"* nonnull %35, i32* %79, i32* nonnull dereferenceable(4) %5) #10
  br label %86

86:                                               ; preds = %81, %84
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #10
  %87 = icmp slt i32 %57, %26
  br i1 %87, label %88, label %36

88:                                               ; preds = %86
  %89 = add nuw nsw i32 %57, 1
  %90 = load i32*, i32** %28, align 16
  %91 = load i64, i64* %34, align 8
  br label %54

92:                                               ; preds = %53, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18ListSelectionModel24AddSelectionFromAnchorToEi(%"class.ui::ListSelectionModel"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %8, label %21

8:                                                ; preds = %2
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9)
  store i32 %1, i32* %3, align 4
  %10 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 1
  store i32 %1, i32* %10, align 8
  store i32 %1, i32* %5, align 4
  %11 = bitcast %"class.ui::ListSelectionModel"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast i32** %13 to i64*
  store i64 %12, i64* %14, align 8
  %15 = icmp eq i32 %1, -1
  br i1 %15, label %20, label %16

16:                                               ; preds = %8
  %17 = inttoptr i64 %12 to i32*
  %18 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0
  %19 = call i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEE7emplaceIJRKiEEENS_11__wrap_iterIPiEENS7_IPS5_EEDpOT_(%"class.std::__1::vector"* %18, i32* %17, i32* nonnull dereferenceable(4) %3) #10
  br label %20

20:                                               ; preds = %8, %16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9)
  br label %69

21:                                               ; preds = %2
  %22 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #10
  %23 = icmp slt i32 %6, %1
  %24 = select i1 %23, i32 %6, i32 %1
  store i32 %24, i32* %4, align 4
  %25 = icmp sgt i32 %6, %1
  %26 = select i1 %25, i32 %6, i32 %1
  %27 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %29 = bitcast i32** %28 to i64*
  %30 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0
  br label %33

31:                                               ; preds = %65
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #10
  %32 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 1
  store i32 %1, i32* %32, align 8
  br label %69

33:                                               ; preds = %65, %21
  %34 = phi i32 [ %24, %21 ], [ %67, %65 ]
  %35 = load i32*, i32** %27, align 8
  %36 = load i64, i64* %29, align 8
  %37 = ptrtoint i32* %35 to i64
  %38 = sub i64 %36, %37
  %39 = icmp eq i64 %38, 0
  %40 = inttoptr i64 %36 to i32*
  br i1 %39, label %56, label %41

41:                                               ; preds = %33
  %42 = ashr exact i64 %38, 2
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i32* [ %35, %41 ], [ %54, %43 ]
  %45 = phi i64 [ %42, %41 ], [ %53, %43 ]
  %46 = lshr i64 %45, 1
  %47 = getelementptr inbounds i32, i32* %44, i64 %46
  %48 = load i32, i32* %47, align 4
  %49 = icmp slt i32 %48, %34
  %50 = getelementptr inbounds i32, i32* %47, i64 1
  %51 = xor i64 %46, -1
  %52 = add i64 %45, %51
  %53 = select i1 %49, i64 %52, i64 %46
  %54 = select i1 %49, i32* %50, i32* %44
  %55 = icmp eq i64 %53, 0
  br i1 %55, label %56, label %43

56:                                               ; preds = %43, %33
  %57 = phi i32* [ %35, %33 ], [ %54, %43 ]
  %58 = icmp eq i32* %57, %40
  br i1 %58, label %62, label %59

59:                                               ; preds = %56
  %60 = load i32, i32* %57, align 4
  %61 = icmp slt i32 %34, %60
  br i1 %61, label %62, label %65

62:                                               ; preds = %59, %56
  %63 = call i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEE7emplaceIJRKiEEENS_11__wrap_iterIPiEENS7_IPS5_EEDpOT_(%"class.std::__1::vector"* %30, i32* %57, i32* nonnull dereferenceable(4) %4) #10
  %64 = load i32, i32* %4, align 4
  br label %65

65:                                               ; preds = %59, %62
  %66 = phi i32 [ %34, %59 ], [ %64, %62 ]
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %4, align 4
  %68 = icmp slt i32 %66, %26
  br i1 %68, label %33, label %31

69:                                               ; preds = %31, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18ListSelectionModel4MoveEiii(%"class.ui::ListSelectionModel"* nocapture, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = icmp sgt i32 %2, %1
  br i1 %5, label %6, label %13

6:                                                ; preds = %4, %6
  %7 = phi i32 [ %11, %6 ], [ %3, %4 ]
  %8 = phi i32 [ %9, %6 ], [ %2, %4 ]
  %9 = phi i32 [ %10, %6 ], [ %1, %4 ]
  %10 = add nsw i32 %7, %9
  %11 = sub nsw i32 %8, %9
  %12 = icmp slt i32 %7, 0
  br i1 %12, label %6, label %13

13:                                               ; preds = %6, %4
  %14 = phi i32 [ %1, %4 ], [ %10, %6 ]
  %15 = phi i32 [ %2, %4 ], [ %9, %6 ]
  %16 = phi i32 [ %3, %4 ], [ %11, %6 ]
  %17 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp sge i32 %18, %15
  %20 = add nsw i32 %16, %14
  %21 = icmp slt i32 %18, %20
  %22 = and i1 %19, %21
  br i1 %22, label %23, label %28

23:                                               ; preds = %13
  %24 = icmp slt i32 %18, %14
  %25 = sub i32 %15, %14
  %26 = select i1 %24, i32 %16, i32 %25
  %27 = add i32 %18, %26
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %23, %13
  %29 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp sge i32 %30, %15
  %32 = icmp slt i32 %30, %20
  %33 = and i1 %31, %32
  br i1 %33, label %34, label %39

34:                                               ; preds = %28
  %35 = icmp slt i32 %30, %14
  %36 = sub i32 %15, %14
  %37 = select i1 %35, i32 %16, i32 %36
  %38 = add i32 %30, %37
  store i32 %38, i32* %29, align 4
  br label %39

39:                                               ; preds = %34, %28
  %40 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %43 = bitcast i32** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = ptrtoint i32* %41 to i64
  %46 = sub i64 %44, %45
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %39
  %49 = bitcast i32* %41 to i8*
  br label %87

50:                                               ; preds = %39
  %51 = ashr exact i64 %46, 2
  br label %52

52:                                               ; preds = %52, %50
  %53 = phi i32* [ %41, %50 ], [ %63, %52 ]
  %54 = phi i64 [ %51, %50 ], [ %62, %52 ]
  %55 = lshr i64 %54, 1
  %56 = getelementptr inbounds i32, i32* %53, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = icmp slt i32 %57, %15
  %59 = getelementptr inbounds i32, i32* %56, i64 1
  %60 = xor i64 %55, -1
  %61 = add i64 %54, %60
  %62 = select i1 %58, i64 %61, i64 %55
  %63 = select i1 %58, i32* %59, i32* %53
  %64 = icmp eq i64 %62, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %52
  %66 = ptrtoint i32* %63 to i64
  %67 = sub i64 %44, %66
  %68 = bitcast i32* %63 to i8*
  %69 = icmp eq i64 %67, 0
  br i1 %69, label %87, label %70

70:                                               ; preds = %65
  %71 = ashr exact i64 %67, 2
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i32* [ %63, %70 ], [ %83, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %82, %72 ]
  %75 = lshr i64 %74, 1
  %76 = getelementptr inbounds i32, i32* %73, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = icmp slt i32 %77, %20
  %79 = getelementptr inbounds i32, i32* %76, i64 1
  %80 = xor i64 %75, -1
  %81 = add i64 %74, %80
  %82 = select i1 %78, i64 %81, i64 %75
  %83 = select i1 %78, i32* %79, i32* %73
  %84 = icmp eq i64 %82, 0
  br i1 %84, label %85, label %72

85:                                               ; preds = %72
  %86 = ptrtoint i32* %83 to i64
  br label %87

87:                                               ; preds = %48, %85, %65
  %88 = phi i8* [ %68, %85 ], [ %68, %65 ], [ %49, %48 ]
  %89 = phi i32* [ %63, %85 ], [ %63, %65 ], [ %41, %48 ]
  %90 = phi i64 [ %66, %85 ], [ %66, %65 ], [ %45, %48 ]
  %91 = phi i64 [ %86, %85 ], [ %66, %65 ], [ %45, %48 ]
  %92 = phi i32* [ %83, %85 ], [ %63, %65 ], [ %41, %48 ]
  %93 = ptrtoint i32* %89 to i64
  %94 = sub i64 %91, %90
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %114, label %96

96:                                               ; preds = %87
  %97 = ashr exact i64 %94, 2
  br label %98

98:                                               ; preds = %98, %96
  %99 = phi i32* [ %89, %96 ], [ %109, %98 ]
  %100 = phi i64 [ %97, %96 ], [ %108, %98 ]
  %101 = lshr i64 %100, 1
  %102 = getelementptr inbounds i32, i32* %99, i64 %101
  %103 = load i32, i32* %102, align 4
  %104 = icmp slt i32 %103, %14
  %105 = getelementptr inbounds i32, i32* %102, i64 1
  %106 = xor i64 %101, -1
  %107 = add i64 %100, %106
  %108 = select i1 %104, i64 %107, i64 %101
  %109 = select i1 %104, i32* %105, i32* %99
  %110 = icmp eq i64 %108, 0
  br i1 %110, label %111, label %98

111:                                              ; preds = %98
  %112 = bitcast i32* %109 to i8*
  %113 = ptrtoint i32* %109 to i64
  br label %114

114:                                              ; preds = %111, %87
  %115 = phi i64 [ %113, %111 ], [ %90, %87 ]
  %116 = phi i8* [ %112, %111 ], [ %88, %87 ]
  %117 = phi i32* [ %109, %111 ], [ %89, %87 ]
  %118 = ptrtoint i32* %117 to i64
  %119 = icmp eq i32* %89, %117
  br i1 %119, label %186, label %120

120:                                              ; preds = %114
  %121 = getelementptr i32, i32* %117, i64 -1
  %122 = ptrtoint i32* %121 to i64
  %123 = sub i64 %122, %93
  %124 = lshr i64 %123, 2
  %125 = add nuw nsw i64 %124, 1
  %126 = icmp ult i64 %125, 8
  br i1 %126, label %127, label %129

127:                                              ; preds = %184, %120
  %128 = phi i32* [ %89, %120 ], [ %131, %184 ]
  br label %255

129:                                              ; preds = %120
  %130 = and i64 %125, 9223372036854775800
  %131 = getelementptr i32, i32* %89, i64 %130
  %132 = insertelement <4 x i32> undef, i32 %16, i32 0
  %133 = shufflevector <4 x i32> %132, <4 x i32> undef, <4 x i32> zeroinitializer
  %134 = insertelement <4 x i32> undef, i32 %16, i32 0
  %135 = shufflevector <4 x i32> %134, <4 x i32> undef, <4 x i32> zeroinitializer
  %136 = add nsw i64 %130, -8
  %137 = lshr exact i64 %136, 3
  %138 = add nuw nsw i64 %137, 1
  %139 = and i64 %138, 1
  %140 = icmp eq i64 %136, 0
  br i1 %140, label %170, label %141

141:                                              ; preds = %129
  %142 = sub nuw nsw i64 %138, %139
  br label %143

143:                                              ; preds = %143, %141
  %144 = phi i64 [ 0, %141 ], [ %167, %143 ]
  %145 = phi i64 [ %142, %141 ], [ %168, %143 ]
  %146 = getelementptr i32, i32* %89, i64 %144
  %147 = bitcast i32* %146 to <4 x i32>*
  %148 = load <4 x i32>, <4 x i32>* %147, align 4
  %149 = getelementptr i32, i32* %146, i64 4
  %150 = bitcast i32* %149 to <4 x i32>*
  %151 = load <4 x i32>, <4 x i32>* %150, align 4
  %152 = add nsw <4 x i32> %148, %133
  %153 = add nsw <4 x i32> %151, %135
  %154 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> %152, <4 x i32>* %154, align 4
  %155 = bitcast i32* %149 to <4 x i32>*
  store <4 x i32> %153, <4 x i32>* %155, align 4
  %156 = or i64 %144, 8
  %157 = getelementptr i32, i32* %89, i64 %156
  %158 = bitcast i32* %157 to <4 x i32>*
  %159 = load <4 x i32>, <4 x i32>* %158, align 4
  %160 = getelementptr i32, i32* %157, i64 4
  %161 = bitcast i32* %160 to <4 x i32>*
  %162 = load <4 x i32>, <4 x i32>* %161, align 4
  %163 = add nsw <4 x i32> %159, %133
  %164 = add nsw <4 x i32> %162, %135
  %165 = bitcast i32* %157 to <4 x i32>*
  store <4 x i32> %163, <4 x i32>* %165, align 4
  %166 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> %164, <4 x i32>* %166, align 4
  %167 = add i64 %144, 16
  %168 = add i64 %145, -2
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %143, !llvm.loop !2

170:                                              ; preds = %143, %129
  %171 = phi i64 [ 0, %129 ], [ %167, %143 ]
  %172 = icmp eq i64 %139, 0
  br i1 %172, label %184, label %173

173:                                              ; preds = %170
  %174 = getelementptr i32, i32* %89, i64 %171
  %175 = bitcast i32* %174 to <4 x i32>*
  %176 = load <4 x i32>, <4 x i32>* %175, align 4
  %177 = getelementptr i32, i32* %174, i64 4
  %178 = bitcast i32* %177 to <4 x i32>*
  %179 = load <4 x i32>, <4 x i32>* %178, align 4
  %180 = add nsw <4 x i32> %176, %133
  %181 = add nsw <4 x i32> %179, %135
  %182 = bitcast i32* %174 to <4 x i32>*
  store <4 x i32> %180, <4 x i32>* %182, align 4
  %183 = bitcast i32* %177 to <4 x i32>*
  store <4 x i32> %181, <4 x i32>* %183, align 4
  br label %184

184:                                              ; preds = %170, %173
  %185 = icmp eq i64 %125, %130
  br i1 %185, label %186, label %127

186:                                              ; preds = %255, %184, %114
  %187 = icmp eq i32* %117, %92
  br i1 %187, label %492, label %188

188:                                              ; preds = %186
  %189 = sub i32 %15, %14
  %190 = getelementptr i32, i32* %92, i64 -1
  %191 = ptrtoint i32* %190 to i64
  %192 = sub i64 %191, %118
  %193 = lshr i64 %192, 2
  %194 = add nuw nsw i64 %193, 1
  %195 = icmp ult i64 %194, 8
  br i1 %195, label %196, label %198

196:                                              ; preds = %253, %188
  %197 = phi i32* [ %117, %188 ], [ %200, %253 ]
  br label %486

198:                                              ; preds = %188
  %199 = and i64 %194, 9223372036854775800
  %200 = getelementptr i32, i32* %117, i64 %199
  %201 = insertelement <4 x i32> undef, i32 %189, i32 0
  %202 = shufflevector <4 x i32> %201, <4 x i32> undef, <4 x i32> zeroinitializer
  %203 = insertelement <4 x i32> undef, i32 %189, i32 0
  %204 = shufflevector <4 x i32> %203, <4 x i32> undef, <4 x i32> zeroinitializer
  %205 = add nsw i64 %199, -8
  %206 = lshr exact i64 %205, 3
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 1
  %209 = icmp eq i64 %205, 0
  br i1 %209, label %239, label %210

210:                                              ; preds = %198
  %211 = sub nuw nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %236, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %237, %212 ]
  %215 = getelementptr i32, i32* %117, i64 %213
  %216 = bitcast i32* %215 to <4 x i32>*
  %217 = load <4 x i32>, <4 x i32>* %216, align 4
  %218 = getelementptr i32, i32* %215, i64 4
  %219 = bitcast i32* %218 to <4 x i32>*
  %220 = load <4 x i32>, <4 x i32>* %219, align 4
  %221 = add <4 x i32> %202, %217
  %222 = add <4 x i32> %204, %220
  %223 = bitcast i32* %215 to <4 x i32>*
  store <4 x i32> %221, <4 x i32>* %223, align 4
  %224 = bitcast i32* %218 to <4 x i32>*
  store <4 x i32> %222, <4 x i32>* %224, align 4
  %225 = or i64 %213, 8
  %226 = getelementptr i32, i32* %117, i64 %225
  %227 = bitcast i32* %226 to <4 x i32>*
  %228 = load <4 x i32>, <4 x i32>* %227, align 4
  %229 = getelementptr i32, i32* %226, i64 4
  %230 = bitcast i32* %229 to <4 x i32>*
  %231 = load <4 x i32>, <4 x i32>* %230, align 4
  %232 = add <4 x i32> %202, %228
  %233 = add <4 x i32> %204, %231
  %234 = bitcast i32* %226 to <4 x i32>*
  store <4 x i32> %232, <4 x i32>* %234, align 4
  %235 = bitcast i32* %229 to <4 x i32>*
  store <4 x i32> %233, <4 x i32>* %235, align 4
  %236 = add i64 %213, 16
  %237 = add i64 %214, -2
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %239, label %212, !llvm.loop !4

239:                                              ; preds = %212, %198
  %240 = phi i64 [ 0, %198 ], [ %236, %212 ]
  %241 = icmp eq i64 %208, 0
  br i1 %241, label %253, label %242

242:                                              ; preds = %239
  %243 = getelementptr i32, i32* %117, i64 %240
  %244 = bitcast i32* %243 to <4 x i32>*
  %245 = load <4 x i32>, <4 x i32>* %244, align 4
  %246 = getelementptr i32, i32* %243, i64 4
  %247 = bitcast i32* %246 to <4 x i32>*
  %248 = load <4 x i32>, <4 x i32>* %247, align 4
  %249 = add <4 x i32> %202, %245
  %250 = add <4 x i32> %204, %248
  %251 = bitcast i32* %243 to <4 x i32>*
  store <4 x i32> %249, <4 x i32>* %251, align 4
  %252 = bitcast i32* %246 to <4 x i32>*
  store <4 x i32> %250, <4 x i32>* %252, align 4
  br label %253

253:                                              ; preds = %239, %242
  %254 = icmp eq i64 %194, %199
  br i1 %254, label %261, label %196

255:                                              ; preds = %127, %255
  %256 = phi i32* [ %259, %255 ], [ %128, %127 ]
  %257 = load i32, i32* %256, align 4
  %258 = add nsw i32 %257, %16
  store i32 %258, i32* %256, align 4
  %259 = getelementptr inbounds i32, i32* %256, i64 1
  %260 = icmp eq i32* %259, %117
  br i1 %260, label %186, label %255, !llvm.loop !5

261:                                              ; preds = %486, %253
  %262 = or i1 %119, %187
  br i1 %262, label %492, label %263

263:                                              ; preds = %261
  %264 = getelementptr inbounds i32, i32* %89, i64 1
  %265 = icmp eq i32* %264, %117
  br i1 %265, label %266, label %274

266:                                              ; preds = %263
  %267 = load i32, i32* %89, align 4
  %268 = sub i64 %91, %115
  %269 = ashr exact i64 %268, 2
  %270 = icmp eq i64 %268, 0
  br i1 %270, label %272, label %271

271:                                              ; preds = %266
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %88, i8* align 4 %116, i64 %268, i1 false) #10
  br label %272

272:                                              ; preds = %271, %266
  %273 = getelementptr inbounds i32, i32* %89, i64 %269
  store i32 %267, i32* %273, align 4
  br label %492

274:                                              ; preds = %263
  %275 = getelementptr inbounds i32, i32* %117, i64 1
  %276 = icmp eq i32* %275, %92
  br i1 %276, label %277, label %289

277:                                              ; preds = %274
  %278 = getelementptr inbounds i32, i32* %92, i64 -1
  %279 = load i32, i32* %278, align 4
  %280 = ptrtoint i32* %278 to i64
  %281 = sub i64 %280, %90
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %288, label %283

283:                                              ; preds = %277
  %284 = ashr exact i64 %281, 2
  %285 = sub nsw i64 0, %284
  %286 = getelementptr inbounds i32, i32* %92, i64 %285
  %287 = bitcast i32* %286 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %287, i8* align 4 %88, i64 %281, i1 false) #10
  br label %288

288:                                              ; preds = %283, %277
  store i32 %279, i32* %89, align 4
  br label %492

289:                                              ; preds = %274
  %290 = sub i64 %115, %90
  %291 = ashr exact i64 %290, 2
  %292 = sub i64 %91, %115
  %293 = ashr exact i64 %292, 2
  %294 = icmp eq i64 %291, %293
  br i1 %294, label %295, label %430

295:                                              ; preds = %289
  %296 = getelementptr i32, i32* %117, i64 -1
  %297 = ptrtoint i32* %296 to i64
  %298 = sub i64 %297, %93
  %299 = lshr i64 %298, 2
  %300 = add nuw nsw i64 %299, 1
  %301 = icmp ult i64 %300, 8
  br i1 %301, label %385, label %302

302:                                              ; preds = %295
  %303 = getelementptr i32, i32* %117, i64 -1
  %304 = ptrtoint i32* %303 to i64
  %305 = sub i64 %304, %93
  %306 = lshr i64 %305, 2
  %307 = add nuw nsw i64 %306, 1
  %308 = getelementptr i32, i32* %89, i64 %307
  %309 = getelementptr i32, i32* %117, i64 %307
  %310 = icmp ult i32* %89, %309
  %311 = icmp ult i32* %117, %308
  %312 = and i1 %310, %311
  br i1 %312, label %385, label %313

313:                                              ; preds = %302
  %314 = and i64 %300, 9223372036854775800
  %315 = getelementptr i32, i32* %117, i64 %314
  %316 = getelementptr i32, i32* %89, i64 %314
  %317 = add nsw i64 %314, -8
  %318 = lshr exact i64 %317, 3
  %319 = add nuw nsw i64 %318, 1
  %320 = and i64 %319, 1
  %321 = icmp eq i64 %317, 0
  br i1 %321, label %363, label %322

322:                                              ; preds = %313
  %323 = sub nuw nsw i64 %319, %320
  br label %324

324:                                              ; preds = %324, %322
  %325 = phi i64 [ 0, %322 ], [ %360, %324 ]
  %326 = phi i64 [ %323, %322 ], [ %361, %324 ]
  %327 = getelementptr i32, i32* %117, i64 %325
  %328 = getelementptr i32, i32* %89, i64 %325
  %329 = bitcast i32* %328 to <4 x i32>*
  %330 = load <4 x i32>, <4 x i32>* %329, align 4, !alias.scope !7, !noalias !10
  %331 = getelementptr i32, i32* %328, i64 4
  %332 = bitcast i32* %331 to <4 x i32>*
  %333 = load <4 x i32>, <4 x i32>* %332, align 4, !alias.scope !7, !noalias !10
  %334 = bitcast i32* %327 to <4 x i32>*
  %335 = load <4 x i32>, <4 x i32>* %334, align 4, !alias.scope !10
  %336 = getelementptr i32, i32* %327, i64 4
  %337 = bitcast i32* %336 to <4 x i32>*
  %338 = load <4 x i32>, <4 x i32>* %337, align 4, !alias.scope !10
  %339 = bitcast i32* %328 to <4 x i32>*
  store <4 x i32> %335, <4 x i32>* %339, align 4, !alias.scope !7, !noalias !10
  %340 = bitcast i32* %331 to <4 x i32>*
  store <4 x i32> %338, <4 x i32>* %340, align 4, !alias.scope !7, !noalias !10
  %341 = bitcast i32* %327 to <4 x i32>*
  store <4 x i32> %330, <4 x i32>* %341, align 4, !alias.scope !10
  %342 = bitcast i32* %336 to <4 x i32>*
  store <4 x i32> %333, <4 x i32>* %342, align 4, !alias.scope !10
  %343 = or i64 %325, 8
  %344 = getelementptr i32, i32* %117, i64 %343
  %345 = getelementptr i32, i32* %89, i64 %343
  %346 = bitcast i32* %345 to <4 x i32>*
  %347 = load <4 x i32>, <4 x i32>* %346, align 4, !alias.scope !7, !noalias !10
  %348 = getelementptr i32, i32* %345, i64 4
  %349 = bitcast i32* %348 to <4 x i32>*
  %350 = load <4 x i32>, <4 x i32>* %349, align 4, !alias.scope !7, !noalias !10
  %351 = bitcast i32* %344 to <4 x i32>*
  %352 = load <4 x i32>, <4 x i32>* %351, align 4, !alias.scope !10
  %353 = getelementptr i32, i32* %344, i64 4
  %354 = bitcast i32* %353 to <4 x i32>*
  %355 = load <4 x i32>, <4 x i32>* %354, align 4, !alias.scope !10
  %356 = bitcast i32* %345 to <4 x i32>*
  store <4 x i32> %352, <4 x i32>* %356, align 4, !alias.scope !7, !noalias !10
  %357 = bitcast i32* %348 to <4 x i32>*
  store <4 x i32> %355, <4 x i32>* %357, align 4, !alias.scope !7, !noalias !10
  %358 = bitcast i32* %344 to <4 x i32>*
  store <4 x i32> %347, <4 x i32>* %358, align 4, !alias.scope !10
  %359 = bitcast i32* %353 to <4 x i32>*
  store <4 x i32> %350, <4 x i32>* %359, align 4, !alias.scope !10
  %360 = add i64 %325, 16
  %361 = add i64 %326, -2
  %362 = icmp eq i64 %361, 0
  br i1 %362, label %363, label %324, !llvm.loop !12

363:                                              ; preds = %324, %313
  %364 = phi i64 [ 0, %313 ], [ %360, %324 ]
  %365 = icmp eq i64 %320, 0
  br i1 %365, label %383, label %366

366:                                              ; preds = %363
  %367 = getelementptr i32, i32* %117, i64 %364
  %368 = getelementptr i32, i32* %89, i64 %364
  %369 = bitcast i32* %368 to <4 x i32>*
  %370 = load <4 x i32>, <4 x i32>* %369, align 4, !alias.scope !7, !noalias !10
  %371 = getelementptr i32, i32* %368, i64 4
  %372 = bitcast i32* %371 to <4 x i32>*
  %373 = load <4 x i32>, <4 x i32>* %372, align 4, !alias.scope !7, !noalias !10
  %374 = bitcast i32* %367 to <4 x i32>*
  %375 = load <4 x i32>, <4 x i32>* %374, align 4, !alias.scope !10
  %376 = getelementptr i32, i32* %367, i64 4
  %377 = bitcast i32* %376 to <4 x i32>*
  %378 = load <4 x i32>, <4 x i32>* %377, align 4, !alias.scope !10
  %379 = bitcast i32* %368 to <4 x i32>*
  store <4 x i32> %375, <4 x i32>* %379, align 4, !alias.scope !7, !noalias !10
  %380 = bitcast i32* %371 to <4 x i32>*
  store <4 x i32> %378, <4 x i32>* %380, align 4, !alias.scope !7, !noalias !10
  %381 = bitcast i32* %367 to <4 x i32>*
  store <4 x i32> %370, <4 x i32>* %381, align 4, !alias.scope !10
  %382 = bitcast i32* %376 to <4 x i32>*
  store <4 x i32> %373, <4 x i32>* %382, align 4, !alias.scope !10
  br label %383

383:                                              ; preds = %363, %366
  %384 = icmp eq i64 %300, %314
  br i1 %384, label %492, label %385

385:                                              ; preds = %383, %302, %295
  %386 = phi i32* [ %117, %302 ], [ %117, %295 ], [ %315, %383 ]
  %387 = phi i32* [ %89, %302 ], [ %89, %295 ], [ %316, %383 ]
  %388 = ptrtoint i32* %387 to i64
  %389 = getelementptr i32, i32* %117, i64 -1
  %390 = ptrtoint i32* %389 to i64
  %391 = sub i64 %390, %388
  %392 = lshr i64 %391, 2
  %393 = add nuw nsw i64 %392, 1
  %394 = and i64 %393, 3
  %395 = icmp eq i64 %394, 0
  br i1 %395, label %406, label %396

396:                                              ; preds = %385, %396
  %397 = phi i32* [ %403, %396 ], [ %386, %385 ]
  %398 = phi i32* [ %402, %396 ], [ %387, %385 ]
  %399 = phi i64 [ %404, %396 ], [ %394, %385 ]
  %400 = load i32, i32* %398, align 4
  %401 = load i32, i32* %397, align 4
  store i32 %401, i32* %398, align 4
  store i32 %400, i32* %397, align 4
  %402 = getelementptr inbounds i32, i32* %398, i64 1
  %403 = getelementptr inbounds i32, i32* %397, i64 1
  %404 = add i64 %399, -1
  %405 = icmp eq i64 %404, 0
  br i1 %405, label %406, label %396, !llvm.loop !13

406:                                              ; preds = %396, %385
  %407 = phi i32* [ %386, %385 ], [ %403, %396 ]
  %408 = phi i32* [ %387, %385 ], [ %402, %396 ]
  %409 = icmp ult i64 %391, 12
  br i1 %409, label %492, label %410

410:                                              ; preds = %406, %410
  %411 = phi i32* [ %428, %410 ], [ %407, %406 ]
  %412 = phi i32* [ %427, %410 ], [ %408, %406 ]
  %413 = load i32, i32* %412, align 4
  %414 = load i32, i32* %411, align 4
  store i32 %414, i32* %412, align 4
  store i32 %413, i32* %411, align 4
  %415 = getelementptr inbounds i32, i32* %412, i64 1
  %416 = getelementptr inbounds i32, i32* %411, i64 1
  %417 = load i32, i32* %415, align 4
  %418 = load i32, i32* %416, align 4
  store i32 %418, i32* %415, align 4
  store i32 %417, i32* %416, align 4
  %419 = getelementptr inbounds i32, i32* %412, i64 2
  %420 = getelementptr inbounds i32, i32* %411, i64 2
  %421 = load i32, i32* %419, align 4
  %422 = load i32, i32* %420, align 4
  store i32 %422, i32* %419, align 4
  store i32 %421, i32* %420, align 4
  %423 = getelementptr inbounds i32, i32* %412, i64 3
  %424 = getelementptr inbounds i32, i32* %411, i64 3
  %425 = load i32, i32* %423, align 4
  %426 = load i32, i32* %424, align 4
  store i32 %426, i32* %423, align 4
  store i32 %425, i32* %424, align 4
  %427 = getelementptr inbounds i32, i32* %412, i64 4
  %428 = getelementptr inbounds i32, i32* %411, i64 4
  %429 = icmp eq i32* %427, %117
  br i1 %429, label %492, label %410, !llvm.loop !15

430:                                              ; preds = %289, %430
  %431 = phi i64 [ %433, %430 ], [ %293, %289 ]
  %432 = phi i64 [ %431, %430 ], [ %291, %289 ]
  %433 = srem i64 %432, %431
  %434 = icmp eq i64 %433, 0
  br i1 %434, label %435, label %430

435:                                              ; preds = %430
  %436 = icmp eq i64 %431, 0
  br i1 %436, label %492, label %437

437:                                              ; preds = %435
  %438 = getelementptr inbounds i32, i32* %89, i64 %431
  %439 = shl nsw i64 %431, 2
  %440 = add i64 %439, -4
  %441 = and i64 %440, 4
  %442 = icmp eq i64 %441, 0
  br i1 %442, label %443, label %461

443:                                              ; preds = %437
  %444 = getelementptr inbounds i32, i32* %438, i64 -1
  %445 = load i32, i32* %444, align 4
  %446 = getelementptr inbounds i32, i32* %444, i64 %291
  br label %447

447:                                              ; preds = %447, %443
  %448 = phi i32* [ %444, %443 ], [ %449, %447 ]
  %449 = phi i32* [ %446, %443 ], [ %458, %447 ]
  %450 = ptrtoint i32* %449 to i64
  %451 = load i32, i32* %449, align 4
  store i32 %451, i32* %448, align 4
  %452 = sub i64 %91, %450
  %453 = ashr exact i64 %452, 2
  %454 = icmp slt i64 %291, %453
  %455 = getelementptr inbounds i32, i32* %449, i64 %291
  %456 = sub nsw i64 %291, %453
  %457 = getelementptr inbounds i32, i32* %89, i64 %456
  %458 = select i1 %454, i32* %455, i32* %457
  %459 = icmp eq i32* %458, %444
  br i1 %459, label %460, label %447

460:                                              ; preds = %447
  store i32 %445, i32* %449, align 4
  br label %461

461:                                              ; preds = %460, %437
  %462 = phi i32* [ %438, %437 ], [ %444, %460 ]
  %463 = icmp eq i64 %440, 0
  br i1 %463, label %492, label %464

464:                                              ; preds = %461, %506
  %465 = phi i32* [ %483, %506 ], [ %462, %461 ]
  %466 = getelementptr inbounds i32, i32* %465, i64 -1
  %467 = load i32, i32* %466, align 4
  %468 = getelementptr inbounds i32, i32* %466, i64 %291
  br label %469

469:                                              ; preds = %469, %464
  %470 = phi i32* [ %466, %464 ], [ %471, %469 ]
  %471 = phi i32* [ %468, %464 ], [ %480, %469 ]
  %472 = ptrtoint i32* %471 to i64
  %473 = load i32, i32* %471, align 4
  store i32 %473, i32* %470, align 4
  %474 = sub i64 %91, %472
  %475 = ashr exact i64 %474, 2
  %476 = icmp slt i64 %291, %475
  %477 = getelementptr inbounds i32, i32* %471, i64 %291
  %478 = sub nsw i64 %291, %475
  %479 = getelementptr inbounds i32, i32* %89, i64 %478
  %480 = select i1 %476, i32* %477, i32* %479
  %481 = icmp eq i32* %480, %466
  br i1 %481, label %482, label %469

482:                                              ; preds = %469
  store i32 %467, i32* %471, align 4
  %483 = getelementptr inbounds i32, i32* %465, i64 -2
  %484 = load i32, i32* %483, align 4
  %485 = getelementptr inbounds i32, i32* %483, i64 %291
  br label %493

486:                                              ; preds = %196, %486
  %487 = phi i32* [ %490, %486 ], [ %197, %196 ]
  %488 = load i32, i32* %487, align 4
  %489 = add i32 %189, %488
  store i32 %489, i32* %487, align 4
  %490 = getelementptr inbounds i32, i32* %487, i64 1
  %491 = icmp eq i32* %490, %92
  br i1 %491, label %261, label %486, !llvm.loop !16

492:                                              ; preds = %461, %506, %406, %410, %383, %186, %288, %272, %261, %435
  ret void

493:                                              ; preds = %493, %482
  %494 = phi i32* [ %483, %482 ], [ %495, %493 ]
  %495 = phi i32* [ %485, %482 ], [ %504, %493 ]
  %496 = ptrtoint i32* %495 to i64
  %497 = load i32, i32* %495, align 4
  store i32 %497, i32* %494, align 4
  %498 = sub i64 %91, %496
  %499 = ashr exact i64 %498, 2
  %500 = icmp slt i64 %291, %499
  %501 = getelementptr inbounds i32, i32* %495, i64 %291
  %502 = sub nsw i64 %291, %499
  %503 = getelementptr inbounds i32, i32* %89, i64 %502
  %504 = select i1 %500, i32* %501, i32* %503
  %505 = icmp eq i32* %504, %483
  br i1 %505, label %506, label %493

506:                                              ; preds = %493
  store i32 %484, i32* %495, align 4
  %507 = icmp eq i32* %483, %89
  br i1 %507, label %492, label %464
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2ui18ListSelectionModel5ClearEv(%"class.ui::ListSelectionModel"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 1
  store i32 -1, i32* %2, align 8
  %3 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 2
  store i32 -1, i32* %3, align 4
  %4 = bitcast %"class.ui::ListSelectionModel"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  store i64 %5, i64* %7, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #10
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #10
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #12
  %55 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #10
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #11
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #11
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #12
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #10
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #8

declare %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEE7emplaceIJRKiEEENS_11__wrap_iterIPiEENS7_IPS5_EEDpOT_(%"class.std::__1::vector"*, i32*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = icmp ult i32* %8, %10
  %12 = ptrtoint i32* %8 to i64
  %13 = ptrtoint i32* %10 to i64
  br i1 %11, label %14, label %158

14:                                               ; preds = %3
  %15 = icmp eq i32* %8, %1
  %16 = load i32, i32* %2, align 4
  br i1 %15, label %17, label %21

17:                                               ; preds = %14
  store i32 %16, i32* %1, align 4
  %18 = getelementptr inbounds i32, i32* %1, i64 1
  %19 = ptrtoint i32* %18 to i64
  %20 = bitcast i32** %7 to i64*
  store i64 %19, i64* %20, align 8
  br label %301

21:                                               ; preds = %14
  %22 = getelementptr inbounds i32, i32* %1, i64 1
  %23 = ptrtoint i32* %22 to i64
  %24 = sub i64 %12, %23
  %25 = ashr exact i64 %24, 2
  %26 = getelementptr inbounds i32, i32* %1, i64 %25
  %27 = bitcast i32** %7 to i64*
  %28 = icmp ult i32* %26, %8
  br i1 %28, label %29, label %142

29:                                               ; preds = %21
  %30 = sub nsw i64 0, %25
  %31 = getelementptr i32, i32* %8, i64 %30
  %32 = bitcast i32* %31 to i8*
  %33 = xor i64 %4, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 2
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 8
  br i1 %38, label %39, label %42

39:                                               ; preds = %137, %42, %29
  %40 = phi i32* [ %8, %42 ], [ %8, %29 ], [ %60, %137 ]
  %41 = phi i32* [ %26, %42 ], [ %26, %29 ], [ %61, %137 ]
  br label %150

42:                                               ; preds = %29
  %43 = sub nsw i64 0, %25
  %44 = getelementptr i32, i32* %8, i64 %43
  %45 = bitcast i32* %44 to i8*
  %46 = xor i64 %4, -1
  %47 = getelementptr i8, i8* %45, i64 %46
  %48 = ptrtoint i8* %47 to i64
  %49 = lshr i64 %48, 2
  %50 = add nuw nsw i64 %49, 1
  %51 = getelementptr i32, i32* %8, i64 %50
  %52 = add nsw i64 %25, %49
  %53 = add i64 %52, 1
  %54 = getelementptr i32, i32* %1, i64 %53
  %55 = icmp ult i32* %8, %54
  %56 = icmp ult i32* %26, %51
  %57 = and i1 %55, %56
  br i1 %57, label %39, label %58

58:                                               ; preds = %42
  %59 = and i64 %37, 9223372036854775800
  %60 = getelementptr i32, i32* %8, i64 %59
  %61 = getelementptr i32, i32* %26, i64 %59
  %62 = add nsw i64 %59, -8
  %63 = lshr exact i64 %62, 3
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 24
  br i1 %66, label %118, label %67

67:                                               ; preds = %58
  %68 = sub nsw i64 %64, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %115, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %116, %69 ]
  %72 = getelementptr i32, i32* %8, i64 %70
  %73 = getelementptr i32, i32* %26, i64 %70
  %74 = bitcast i32* %73 to <4 x i32>*
  %75 = load <4 x i32>, <4 x i32>* %74, align 4, !alias.scope !17
  %76 = getelementptr i32, i32* %73, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  %78 = load <4 x i32>, <4 x i32>* %77, align 4, !alias.scope !17
  %79 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> %75, <4 x i32>* %79, align 4, !alias.scope !20, !noalias !17
  %80 = getelementptr i32, i32* %72, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %81, align 4, !alias.scope !20, !noalias !17
  %82 = or i64 %70, 8
  %83 = getelementptr i32, i32* %8, i64 %82
  %84 = getelementptr i32, i32* %26, i64 %82
  %85 = bitcast i32* %84 to <4 x i32>*
  %86 = load <4 x i32>, <4 x i32>* %85, align 4, !alias.scope !17
  %87 = getelementptr i32, i32* %84, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  %89 = load <4 x i32>, <4 x i32>* %88, align 4, !alias.scope !17
  %90 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> %86, <4 x i32>* %90, align 4, !alias.scope !20, !noalias !17
  %91 = getelementptr i32, i32* %83, i64 4
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %89, <4 x i32>* %92, align 4, !alias.scope !20, !noalias !17
  %93 = or i64 %70, 16
  %94 = getelementptr i32, i32* %8, i64 %93
  %95 = getelementptr i32, i32* %26, i64 %93
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !17
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !17
  %101 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !20, !noalias !17
  %102 = getelementptr i32, i32* %94, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !20, !noalias !17
  %104 = or i64 %70, 24
  %105 = getelementptr i32, i32* %8, i64 %104
  %106 = getelementptr i32, i32* %26, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !17
  %109 = getelementptr i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !17
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !20, !noalias !17
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !20, !noalias !17
  %115 = add i64 %70, 32
  %116 = add i64 %71, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %69, !llvm.loop !22

118:                                              ; preds = %69, %58
  %119 = phi i64 [ 0, %58 ], [ %115, %69 ]
  %120 = icmp eq i64 %65, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %134, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %135, %121 ], [ %65, %118 ]
  %124 = getelementptr i32, i32* %8, i64 %122
  %125 = getelementptr i32, i32* %26, i64 %122
  %126 = bitcast i32* %125 to <4 x i32>*
  %127 = load <4 x i32>, <4 x i32>* %126, align 4, !alias.scope !17
  %128 = getelementptr i32, i32* %125, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !17
  %131 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %131, align 4, !alias.scope !20, !noalias !17
  %132 = getelementptr i32, i32* %124, i64 4
  %133 = bitcast i32* %132 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %133, align 4, !alias.scope !20, !noalias !17
  %134 = add i64 %122, 8
  %135 = add i64 %123, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %121, !llvm.loop !23

137:                                              ; preds = %121, %118
  %138 = icmp eq i64 %37, %59
  br i1 %138, label %139, label %39

139:                                              ; preds = %150, %137
  %140 = phi i32* [ %60, %137 ], [ %155, %150 ]
  %141 = ptrtoint i32* %140 to i64
  br label %142

142:                                              ; preds = %139, %21
  %143 = phi i64 [ %141, %139 ], [ %12, %21 ]
  store i64 %143, i64* %27, align 8
  %144 = icmp eq i64 %24, 0
  br i1 %144, label %157, label %145

145:                                              ; preds = %142
  %146 = sub nsw i64 0, %25
  %147 = getelementptr inbounds i32, i32* %8, i64 %146
  %148 = bitcast i32* %147 to i8*
  %149 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %148, i8* align 4 %149, i64 %24, i1 false) #10
  br label %157

150:                                              ; preds = %39, %150
  %151 = phi i32* [ %155, %150 ], [ %40, %39 ]
  %152 = phi i32* [ %154, %150 ], [ %41, %39 ]
  %153 = load i32, i32* %152, align 4
  store i32 %153, i32* %151, align 4
  %154 = getelementptr inbounds i32, i32* %152, i64 1
  %155 = getelementptr inbounds i32, i32* %151, i64 1
  %156 = icmp ult i32* %154, %8
  br i1 %156, label %150, label %139, !llvm.loop !24

157:                                              ; preds = %142, %145
  store i32 %16, i32* %1, align 4
  br label %301

158:                                              ; preds = %3
  %159 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2
  %160 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %160) #10
  %161 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 0
  %162 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 1
  %163 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 2
  %164 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 0, i32 0
  %165 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 1, i32 0
  %166 = bitcast i32** %7 to i64*
  %167 = bitcast %"class.std::__1::vector"* %0 to i64*
  %168 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 -86, i64 40, i1 false)
  %169 = load i64, i64* %167, align 8
  %170 = sub i64 %12, %169
  %171 = ashr exact i64 %170, 2
  %172 = add nsw i64 %171, 1
  %173 = icmp ugt i64 %172, 4611686018427387903
  br i1 %173, label %174, label %176

174:                                              ; preds = %158
  %175 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %175) #11
  unreachable

176:                                              ; preds = %158
  %177 = bitcast i32** %9 to i64*
  %178 = sub i64 %13, %169
  %179 = ashr exact i64 %178, 2
  %180 = icmp ult i64 %179, 2305843009213693951
  br i1 %180, label %185, label %181

181:                                              ; preds = %176
  %182 = sub i64 %4, %169
  %183 = ashr exact i64 %182, 2
  store i32* null, i32** %164, align 8
  %184 = bitcast %"class.std::__1::allocator"** %165 to %"class.std::__1::__compressed_pair"**
  store %"class.std::__1::__compressed_pair"* %159, %"class.std::__1::__compressed_pair"** %184, align 8
  br label %196

185:                                              ; preds = %176
  %186 = ashr exact i64 %178, 1
  %187 = icmp ult i64 %186, %172
  %188 = select i1 %187, i64 %172, i64 %186
  %189 = sub i64 %4, %169
  %190 = ashr exact i64 %189, 2
  store i32* null, i32** %164, align 8
  %191 = bitcast %"class.std::__1::allocator"** %165 to %"class.std::__1::__compressed_pair"**
  store %"class.std::__1::__compressed_pair"* %159, %"class.std::__1::__compressed_pair"** %191, align 8
  %192 = icmp eq i64 %188, 0
  br i1 %192, label %202, label %193

193:                                              ; preds = %185
  %194 = icmp ugt i64 %188, 4611686018427387903
  br i1 %194, label %195, label %196

195:                                              ; preds = %193
  tail call void @abort() #11
  unreachable

196:                                              ; preds = %181, %193
  %197 = phi i64 [ 4611686018427387903, %181 ], [ %188, %193 ]
  %198 = phi i64 [ %183, %181 ], [ %190, %193 ]
  %199 = shl i64 %197, 2
  %200 = tail call i8* @_Znwm(i64 %199) #12
  %201 = bitcast i8* %200 to i32*
  br label %202

202:                                              ; preds = %185, %196
  %203 = phi i64 [ %198, %196 ], [ %190, %185 ]
  %204 = phi i64 [ %197, %196 ], [ 0, %185 ]
  %205 = phi i32* [ %201, %196 ], [ null, %185 ]
  store i32* %205, i32** %161, align 8
  %206 = getelementptr inbounds i32, i32* %205, i64 %203
  store i32* %206, i32** %163, align 8
  store i32* %206, i32** %162, align 8
  %207 = getelementptr inbounds i32, i32* %205, i64 %204
  store i32* %207, i32** %164, align 8
  call void @_ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE12emplace_backIJRKiEEEvDpOT_(%"struct.std::__1::__split_buffer"* nonnull %5, i32* dereferenceable(4) %2)
  %208 = load i32*, i32** %162, align 8
  %209 = load i32*, i32** %6, align 8
  %210 = ptrtoint i32* %209 to i64
  %211 = sub i64 %4, %210
  %212 = ashr exact i64 %211, 2
  %213 = sub nsw i64 0, %212
  %214 = getelementptr inbounds i32, i32* %208, i64 %213
  store i32* %214, i32** %162, align 8
  %215 = icmp sgt i64 %211, 0
  br i1 %215, label %216, label %219

216:                                              ; preds = %202
  %217 = bitcast i32* %214 to i8*
  %218 = bitcast i32* %209 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %217, i8* align 4 %218, i64 %211, i1 false) #10
  br label %219

219:                                              ; preds = %216, %202
  %220 = load i32*, i32** %7, align 8
  %221 = icmp eq i32* %220, %1
  br i1 %221, label %222, label %226

222:                                              ; preds = %219
  %223 = ptrtoint i32* %220 to i64
  %224 = bitcast i32** %163 to i64*
  %225 = load i64, i64* %224, align 8
  br label %275

226:                                              ; preds = %219
  %227 = load i32*, i32** %163, align 8
  %228 = getelementptr i32, i32* %220, i64 -1
  %229 = ptrtoint i32* %228 to i64
  %230 = sub i64 %229, %4
  %231 = lshr i64 %230, 2
  %232 = add nuw nsw i64 %231, 1
  %233 = and i64 %232, 3
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %245, label %235

235:                                              ; preds = %226, %235
  %236 = phi i32* [ %242, %235 ], [ %227, %226 ]
  %237 = phi i32* [ %240, %235 ], [ %1, %226 ]
  %238 = phi i64 [ %243, %235 ], [ %233, %226 ]
  %239 = load i32, i32* %237, align 4
  store i32 %239, i32* %236, align 4
  %240 = getelementptr inbounds i32, i32* %237, i64 1
  %241 = load i32*, i32** %163, align 8
  %242 = getelementptr inbounds i32, i32* %241, i64 1
  store i32* %242, i32** %163, align 8
  %243 = add i64 %238, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %235, !llvm.loop !25

245:                                              ; preds = %235, %226
  %246 = phi i32* [ undef, %226 ], [ %242, %235 ]
  %247 = phi i32* [ %227, %226 ], [ %242, %235 ]
  %248 = phi i32* [ %1, %226 ], [ %240, %235 ]
  %249 = icmp ult i64 %230, 12
  br i1 %249, label %270, label %250

250:                                              ; preds = %245, %250
  %251 = phi i32* [ %268, %250 ], [ %247, %245 ]
  %252 = phi i32* [ %266, %250 ], [ %248, %245 ]
  %253 = load i32, i32* %252, align 4
  store i32 %253, i32* %251, align 4
  %254 = getelementptr inbounds i32, i32* %252, i64 1
  %255 = load i32*, i32** %163, align 8
  %256 = getelementptr inbounds i32, i32* %255, i64 1
  store i32* %256, i32** %163, align 8
  %257 = load i32, i32* %254, align 4
  store i32 %257, i32* %256, align 4
  %258 = getelementptr inbounds i32, i32* %252, i64 2
  %259 = load i32*, i32** %163, align 8
  %260 = getelementptr inbounds i32, i32* %259, i64 1
  store i32* %260, i32** %163, align 8
  %261 = load i32, i32* %258, align 4
  store i32 %261, i32* %260, align 4
  %262 = getelementptr inbounds i32, i32* %252, i64 3
  %263 = load i32*, i32** %163, align 8
  %264 = getelementptr inbounds i32, i32* %263, i64 1
  store i32* %264, i32** %163, align 8
  %265 = load i32, i32* %262, align 4
  store i32 %265, i32* %264, align 4
  %266 = getelementptr inbounds i32, i32* %252, i64 4
  %267 = load i32*, i32** %163, align 8
  %268 = getelementptr inbounds i32, i32* %267, i64 1
  store i32* %268, i32** %163, align 8
  %269 = icmp eq i32* %266, %220
  br i1 %269, label %270, label %250

270:                                              ; preds = %250, %245
  %271 = phi i32* [ %246, %245 ], [ %268, %250 ]
  %272 = ptrtoint i32* %271 to i64
  %273 = load i64, i64* %166, align 8
  %274 = bitcast i32** %163 to i64*
  br label %275

275:                                              ; preds = %222, %270
  %276 = phi i64* [ %224, %222 ], [ %274, %270 ]
  %277 = phi i64 [ %225, %222 ], [ %272, %270 ]
  %278 = phi i64 [ %223, %222 ], [ %273, %270 ]
  %279 = load i64, i64* %167, align 8
  %280 = bitcast i32** %162 to i64*
  %281 = load i64, i64* %280, align 8
  store i64 %281, i64* %167, align 8
  store i64 %279, i64* %280, align 8
  store i64 %277, i64* %166, align 8
  store i64 %278, i64* %276, align 8
  %282 = load i64, i64* %177, align 8
  %283 = bitcast i32** %164 to i64*
  %284 = load i64, i64* %283, align 8
  store i64 %284, i64* %177, align 8
  store i64 %282, i64* %283, align 8
  %285 = bitcast %"struct.std::__1::__split_buffer"* %5 to i64*
  store i64 %279, i64* %285, align 8
  %286 = inttoptr i64 %279 to i32*
  %287 = inttoptr i64 %278 to i32*
  %288 = icmp eq i32* %287, %286
  br i1 %288, label %296, label %289

289:                                              ; preds = %275
  %290 = getelementptr i32, i32* %287, i64 -1
  %291 = ptrtoint i32* %290 to i64
  %292 = sub i64 %291, %279
  %293 = lshr i64 %292, 2
  %294 = xor i64 %293, -1
  %295 = getelementptr i32, i32* %287, i64 %294
  store i32* %295, i32** %163, align 8
  br label %296

296:                                              ; preds = %289, %275
  %297 = icmp eq i64 %279, 0
  br i1 %297, label %300, label %298

298:                                              ; preds = %296
  %299 = inttoptr i64 %279 to i8*
  call void @_ZdlPv(i8* %299) #12
  br label %300

300:                                              ; preds = %296, %298
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %160) #10
  br label %301

301:                                              ; preds = %17, %157, %300
  %302 = phi i32* [ %1, %17 ], [ %1, %157 ], [ %208, %300 ]
  ret i32* %302
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE12emplace_backIJRKiEEEvDpOT_(%"struct.std::__1::__split_buffer"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %4, %6
  %8 = ptrtoint i32* %6 to i64
  br i1 %7, label %9, label %229

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %11 = load i32*, i32** %10, align 8
  %12 = bitcast i32* %11 to i8*
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp ugt i32* %11, %14
  %16 = ptrtoint i32* %14 to i64
  br i1 %15, label %17, label %35

17:                                               ; preds = %9
  %18 = ptrtoint i32* %11 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 2
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i32, i32* %11, i64 %22
  %24 = ptrtoint i32* %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %17
  %29 = bitcast i32* %23 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %12, i64 %25, i1 false) #10
  %30 = load i32*, i32** %10, align 8
  br label %31

31:                                               ; preds = %17, %28
  %32 = phi i32* [ %11, %17 ], [ %30, %28 ]
  %33 = getelementptr inbounds i32, i32* %23, i64 %26
  store i32* %33, i32** %3, align 8
  %34 = getelementptr inbounds i32, i32* %32, i64 %22
  store i32* %34, i32** %10, align 8
  br label %229

35:                                               ; preds = %9
  %36 = bitcast i32** %5 to i64*
  %37 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %38 = sub i64 %8, %16
  %39 = ashr exact i64 %38, 1
  %40 = icmp eq i64 %38, 0
  %41 = select i1 %40, i64 1, i64 %39
  %42 = icmp ugt i64 %41, 4611686018427387903
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  tail call void @abort() #11
  unreachable

44:                                               ; preds = %35
  %45 = lshr i64 %41, 2
  %46 = shl i64 %41, 2
  %47 = tail call i8* @_Znwm(i64 %46) #12
  %48 = bitcast i8* %47 to i32*
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds i32, i32* %48, i64 %45
  %51 = ptrtoint i32* %50 to i64
  %52 = getelementptr inbounds i32, i32* %48, i64 %41
  %53 = ptrtoint i32* %52 to i64
  %54 = ptrtoint i32* %11 to i64
  %55 = ptrtoint i32* %4 to i64
  %56 = sub i64 %55, %54
  %57 = ashr exact i64 %56, 2
  %58 = getelementptr inbounds i32, i32* %50, i64 %57
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %219, label %60

60:                                               ; preds = %44
  %61 = add i64 %56, -4
  %62 = lshr i64 %61, 2
  %63 = add nuw nsw i64 %62, 1
  %64 = icmp ult i64 %63, 8
  br i1 %64, label %161, label %65

65:                                               ; preds = %60
  %66 = and i64 %41, -4
  %67 = getelementptr i8, i8* %47, i64 %66
  %68 = add i64 %56, -4
  %69 = lshr i64 %68, 2
  %70 = and i64 %68, -4
  %71 = add i64 %66, %70
  %72 = add i64 %71, 4
  %73 = getelementptr i8, i8* %47, i64 %72
  %74 = add nuw nsw i64 %69, 1
  %75 = getelementptr i32, i32* %11, i64 %74
  %76 = bitcast i32* %75 to i8*
  %77 = icmp ult i8* %67, %76
  %78 = icmp ugt i8* %73, %12
  %79 = and i1 %77, %78
  br i1 %79, label %161, label %80

80:                                               ; preds = %65
  %81 = and i64 %63, 9223372036854775800
  %82 = getelementptr i32, i32* %50, i64 %81
  %83 = getelementptr i32, i32* %11, i64 %81
  %84 = add nsw i64 %81, -8
  %85 = lshr exact i64 %84, 3
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 3
  %88 = icmp ult i64 %84, 24
  br i1 %88, label %140, label %89

89:                                               ; preds = %80
  %90 = sub nsw i64 %86, %87
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi i64 [ 0, %89 ], [ %137, %91 ]
  %93 = phi i64 [ %90, %89 ], [ %138, %91 ]
  %94 = getelementptr i32, i32* %50, i64 %92
  %95 = getelementptr i32, i32* %11, i64 %92
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !26
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !26
  %101 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !29, !noalias !26
  %102 = getelementptr i32, i32* %94, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !29, !noalias !26
  %104 = or i64 %92, 8
  %105 = getelementptr i32, i32* %50, i64 %104
  %106 = getelementptr i32, i32* %11, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !26
  %109 = getelementptr i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !26
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !29, !noalias !26
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !29, !noalias !26
  %115 = or i64 %92, 16
  %116 = getelementptr i32, i32* %50, i64 %115
  %117 = getelementptr i32, i32* %11, i64 %115
  %118 = bitcast i32* %117 to <4 x i32>*
  %119 = load <4 x i32>, <4 x i32>* %118, align 4, !alias.scope !26
  %120 = getelementptr i32, i32* %117, i64 4
  %121 = bitcast i32* %120 to <4 x i32>*
  %122 = load <4 x i32>, <4 x i32>* %121, align 4, !alias.scope !26
  %123 = bitcast i32* %116 to <4 x i32>*
  store <4 x i32> %119, <4 x i32>* %123, align 4, !alias.scope !29, !noalias !26
  %124 = getelementptr i32, i32* %116, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %122, <4 x i32>* %125, align 4, !alias.scope !29, !noalias !26
  %126 = or i64 %92, 24
  %127 = getelementptr i32, i32* %50, i64 %126
  %128 = getelementptr i32, i32* %11, i64 %126
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !26
  %131 = getelementptr i32, i32* %128, i64 4
  %132 = bitcast i32* %131 to <4 x i32>*
  %133 = load <4 x i32>, <4 x i32>* %132, align 4, !alias.scope !26
  %134 = bitcast i32* %127 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %134, align 4, !alias.scope !29, !noalias !26
  %135 = getelementptr i32, i32* %127, i64 4
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> %133, <4 x i32>* %136, align 4, !alias.scope !29, !noalias !26
  %137 = add i64 %92, 32
  %138 = add i64 %93, -4
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %91, !llvm.loop !31

140:                                              ; preds = %91, %80
  %141 = phi i64 [ 0, %80 ], [ %137, %91 ]
  %142 = icmp eq i64 %87, 0
  br i1 %142, label %159, label %143

143:                                              ; preds = %140, %143
  %144 = phi i64 [ %156, %143 ], [ %141, %140 ]
  %145 = phi i64 [ %157, %143 ], [ %87, %140 ]
  %146 = getelementptr i32, i32* %50, i64 %144
  %147 = getelementptr i32, i32* %11, i64 %144
  %148 = bitcast i32* %147 to <4 x i32>*
  %149 = load <4 x i32>, <4 x i32>* %148, align 4, !alias.scope !26
  %150 = getelementptr i32, i32* %147, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  %152 = load <4 x i32>, <4 x i32>* %151, align 4, !alias.scope !26
  %153 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> %149, <4 x i32>* %153, align 4, !alias.scope !29, !noalias !26
  %154 = getelementptr i32, i32* %146, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> %152, <4 x i32>* %155, align 4, !alias.scope !29, !noalias !26
  %156 = add i64 %144, 8
  %157 = add i64 %145, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %143, !llvm.loop !32

159:                                              ; preds = %143, %140
  %160 = icmp eq i64 %63, %81
  br i1 %160, label %216, label %161

161:                                              ; preds = %159, %65, %60
  %162 = phi i32* [ %50, %65 ], [ %50, %60 ], [ %82, %159 ]
  %163 = phi i32* [ %11, %65 ], [ %11, %60 ], [ %83, %159 ]
  %164 = ptrtoint i32* %162 to i64
  %165 = and i64 %41, -4
  %166 = add i64 %56, %165
  %167 = add i64 %166, -4
  %168 = sub i64 %167, %164
  %169 = getelementptr i8, i8* %47, i64 %168
  %170 = ptrtoint i8* %169 to i64
  %171 = lshr i64 %170, 2
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 7
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %184, label %175

175:                                              ; preds = %161, %175
  %176 = phi i32* [ %180, %175 ], [ %162, %161 ]
  %177 = phi i32* [ %181, %175 ], [ %163, %161 ]
  %178 = phi i64 [ %182, %175 ], [ %173, %161 ]
  %179 = load i32, i32* %177, align 4
  store i32 %179, i32* %176, align 4
  %180 = getelementptr inbounds i32, i32* %176, i64 1
  %181 = getelementptr inbounds i32, i32* %177, i64 1
  %182 = add i64 %178, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %175, !llvm.loop !33

184:                                              ; preds = %175, %161
  %185 = phi i32* [ %162, %161 ], [ %180, %175 ]
  %186 = phi i32* [ %163, %161 ], [ %181, %175 ]
  %187 = icmp ult i8* %169, inttoptr (i64 28 to i8*)
  br i1 %187, label %216, label %188

188:                                              ; preds = %184, %188
  %189 = phi i32* [ %213, %188 ], [ %185, %184 ]
  %190 = phi i32* [ %214, %188 ], [ %186, %184 ]
  %191 = load i32, i32* %190, align 4
  store i32 %191, i32* %189, align 4
  %192 = getelementptr inbounds i32, i32* %189, i64 1
  %193 = getelementptr inbounds i32, i32* %190, i64 1
  %194 = load i32, i32* %193, align 4
  store i32 %194, i32* %192, align 4
  %195 = getelementptr inbounds i32, i32* %189, i64 2
  %196 = getelementptr inbounds i32, i32* %190, i64 2
  %197 = load i32, i32* %196, align 4
  store i32 %197, i32* %195, align 4
  %198 = getelementptr inbounds i32, i32* %189, i64 3
  %199 = getelementptr inbounds i32, i32* %190, i64 3
  %200 = load i32, i32* %199, align 4
  store i32 %200, i32* %198, align 4
  %201 = getelementptr inbounds i32, i32* %189, i64 4
  %202 = getelementptr inbounds i32, i32* %190, i64 4
  %203 = load i32, i32* %202, align 4
  store i32 %203, i32* %201, align 4
  %204 = getelementptr inbounds i32, i32* %189, i64 5
  %205 = getelementptr inbounds i32, i32* %190, i64 5
  %206 = load i32, i32* %205, align 4
  store i32 %206, i32* %204, align 4
  %207 = getelementptr inbounds i32, i32* %189, i64 6
  %208 = getelementptr inbounds i32, i32* %190, i64 6
  %209 = load i32, i32* %208, align 4
  store i32 %209, i32* %207, align 4
  %210 = getelementptr inbounds i32, i32* %189, i64 7
  %211 = getelementptr inbounds i32, i32* %190, i64 7
  %212 = load i32, i32* %211, align 4
  store i32 %212, i32* %210, align 4
  %213 = getelementptr inbounds i32, i32* %189, i64 8
  %214 = getelementptr inbounds i32, i32* %190, i64 8
  %215 = icmp eq i32* %58, %213
  br i1 %215, label %216, label %188, !llvm.loop !34

216:                                              ; preds = %184, %188, %159
  %217 = ptrtoint i32* %58 to i64
  %218 = load i32*, i32** %13, align 8
  br label %219

219:                                              ; preds = %44, %216
  %220 = phi i32* [ %218, %216 ], [ %14, %44 ]
  %221 = phi i64 [ %217, %216 ], [ %51, %44 ]
  store i64 %49, i64* %37, align 8
  %222 = bitcast i32** %10 to i64*
  store i64 %51, i64* %222, align 8
  %223 = bitcast i32** %3 to i64*
  store i64 %221, i64* %223, align 8
  store i64 %53, i64* %36, align 8
  %224 = icmp eq i32* %220, null
  %225 = inttoptr i64 %221 to i32*
  br i1 %224, label %229, label %226

226:                                              ; preds = %219
  %227 = bitcast i32* %220 to i8*
  tail call void @_ZdlPv(i8* %227) #12
  %228 = load i32*, i32** %3, align 8
  br label %229

229:                                              ; preds = %226, %219, %31, %2
  %230 = phi i32* [ %228, %226 ], [ %225, %219 ], [ %33, %31 ], [ %4, %2 ]
  %231 = load i32, i32* %1, align 4
  store i32 %231, i32* %230, align 4
  %232 = load i32*, i32** %3, align 8
  %233 = getelementptr inbounds i32, i32* %232, i64 1
  store i32* %233, i32** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEE7emplaceIJiEEENS_11__wrap_iterIPiEENS5_IPKiEEDpOT_(%"class.std::__1::vector"*, i32*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = icmp ult i32* %8, %10
  %12 = ptrtoint i32* %8 to i64
  %13 = ptrtoint i32* %10 to i64
  br i1 %11, label %14, label %158

14:                                               ; preds = %3
  %15 = icmp eq i32* %8, %1
  %16 = load i32, i32* %2, align 4
  br i1 %15, label %17, label %21

17:                                               ; preds = %14
  store i32 %16, i32* %1, align 4
  %18 = getelementptr inbounds i32, i32* %1, i64 1
  %19 = ptrtoint i32* %18 to i64
  %20 = bitcast i32** %7 to i64*
  store i64 %19, i64* %20, align 8
  br label %301

21:                                               ; preds = %14
  %22 = getelementptr inbounds i32, i32* %1, i64 1
  %23 = ptrtoint i32* %22 to i64
  %24 = sub i64 %12, %23
  %25 = ashr exact i64 %24, 2
  %26 = getelementptr inbounds i32, i32* %1, i64 %25
  %27 = bitcast i32** %7 to i64*
  %28 = icmp ult i32* %26, %8
  br i1 %28, label %29, label %142

29:                                               ; preds = %21
  %30 = sub nsw i64 0, %25
  %31 = getelementptr i32, i32* %8, i64 %30
  %32 = bitcast i32* %31 to i8*
  %33 = xor i64 %4, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 2
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 8
  br i1 %38, label %39, label %42

39:                                               ; preds = %137, %42, %29
  %40 = phi i32* [ %8, %42 ], [ %8, %29 ], [ %60, %137 ]
  %41 = phi i32* [ %26, %42 ], [ %26, %29 ], [ %61, %137 ]
  br label %150

42:                                               ; preds = %29
  %43 = sub nsw i64 0, %25
  %44 = getelementptr i32, i32* %8, i64 %43
  %45 = bitcast i32* %44 to i8*
  %46 = xor i64 %4, -1
  %47 = getelementptr i8, i8* %45, i64 %46
  %48 = ptrtoint i8* %47 to i64
  %49 = lshr i64 %48, 2
  %50 = add nuw nsw i64 %49, 1
  %51 = getelementptr i32, i32* %8, i64 %50
  %52 = add nsw i64 %25, %49
  %53 = add i64 %52, 1
  %54 = getelementptr i32, i32* %1, i64 %53
  %55 = icmp ult i32* %8, %54
  %56 = icmp ult i32* %26, %51
  %57 = and i1 %55, %56
  br i1 %57, label %39, label %58

58:                                               ; preds = %42
  %59 = and i64 %37, 9223372036854775800
  %60 = getelementptr i32, i32* %8, i64 %59
  %61 = getelementptr i32, i32* %26, i64 %59
  %62 = add nsw i64 %59, -8
  %63 = lshr exact i64 %62, 3
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 24
  br i1 %66, label %118, label %67

67:                                               ; preds = %58
  %68 = sub nsw i64 %64, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %115, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %116, %69 ]
  %72 = getelementptr i32, i32* %8, i64 %70
  %73 = getelementptr i32, i32* %26, i64 %70
  %74 = bitcast i32* %73 to <4 x i32>*
  %75 = load <4 x i32>, <4 x i32>* %74, align 4, !alias.scope !35
  %76 = getelementptr i32, i32* %73, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  %78 = load <4 x i32>, <4 x i32>* %77, align 4, !alias.scope !35
  %79 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> %75, <4 x i32>* %79, align 4, !alias.scope !38, !noalias !35
  %80 = getelementptr i32, i32* %72, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %81, align 4, !alias.scope !38, !noalias !35
  %82 = or i64 %70, 8
  %83 = getelementptr i32, i32* %8, i64 %82
  %84 = getelementptr i32, i32* %26, i64 %82
  %85 = bitcast i32* %84 to <4 x i32>*
  %86 = load <4 x i32>, <4 x i32>* %85, align 4, !alias.scope !35
  %87 = getelementptr i32, i32* %84, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  %89 = load <4 x i32>, <4 x i32>* %88, align 4, !alias.scope !35
  %90 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> %86, <4 x i32>* %90, align 4, !alias.scope !38, !noalias !35
  %91 = getelementptr i32, i32* %83, i64 4
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %89, <4 x i32>* %92, align 4, !alias.scope !38, !noalias !35
  %93 = or i64 %70, 16
  %94 = getelementptr i32, i32* %8, i64 %93
  %95 = getelementptr i32, i32* %26, i64 %93
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !35
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !35
  %101 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !38, !noalias !35
  %102 = getelementptr i32, i32* %94, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !38, !noalias !35
  %104 = or i64 %70, 24
  %105 = getelementptr i32, i32* %8, i64 %104
  %106 = getelementptr i32, i32* %26, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !35
  %109 = getelementptr i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !35
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !38, !noalias !35
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !38, !noalias !35
  %115 = add i64 %70, 32
  %116 = add i64 %71, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %69, !llvm.loop !40

118:                                              ; preds = %69, %58
  %119 = phi i64 [ 0, %58 ], [ %115, %69 ]
  %120 = icmp eq i64 %65, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %134, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %135, %121 ], [ %65, %118 ]
  %124 = getelementptr i32, i32* %8, i64 %122
  %125 = getelementptr i32, i32* %26, i64 %122
  %126 = bitcast i32* %125 to <4 x i32>*
  %127 = load <4 x i32>, <4 x i32>* %126, align 4, !alias.scope !35
  %128 = getelementptr i32, i32* %125, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !35
  %131 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %131, align 4, !alias.scope !38, !noalias !35
  %132 = getelementptr i32, i32* %124, i64 4
  %133 = bitcast i32* %132 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %133, align 4, !alias.scope !38, !noalias !35
  %134 = add i64 %122, 8
  %135 = add i64 %123, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %121, !llvm.loop !41

137:                                              ; preds = %121, %118
  %138 = icmp eq i64 %37, %59
  br i1 %138, label %139, label %39

139:                                              ; preds = %150, %137
  %140 = phi i32* [ %60, %137 ], [ %155, %150 ]
  %141 = ptrtoint i32* %140 to i64
  br label %142

142:                                              ; preds = %139, %21
  %143 = phi i64 [ %141, %139 ], [ %12, %21 ]
  store i64 %143, i64* %27, align 8
  %144 = icmp eq i64 %24, 0
  br i1 %144, label %157, label %145

145:                                              ; preds = %142
  %146 = sub nsw i64 0, %25
  %147 = getelementptr inbounds i32, i32* %8, i64 %146
  %148 = bitcast i32* %147 to i8*
  %149 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %148, i8* align 4 %149, i64 %24, i1 false) #10
  br label %157

150:                                              ; preds = %39, %150
  %151 = phi i32* [ %155, %150 ], [ %40, %39 ]
  %152 = phi i32* [ %154, %150 ], [ %41, %39 ]
  %153 = load i32, i32* %152, align 4
  store i32 %153, i32* %151, align 4
  %154 = getelementptr inbounds i32, i32* %152, i64 1
  %155 = getelementptr inbounds i32, i32* %151, i64 1
  %156 = icmp ult i32* %154, %8
  br i1 %156, label %150, label %139, !llvm.loop !42

157:                                              ; preds = %142, %145
  store i32 %16, i32* %1, align 4
  br label %301

158:                                              ; preds = %3
  %159 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2
  %160 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %160) #10
  %161 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 0
  %162 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 1
  %163 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 2
  %164 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 0, i32 0
  %165 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 1, i32 0
  %166 = bitcast i32** %7 to i64*
  %167 = bitcast %"class.std::__1::vector"* %0 to i64*
  %168 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 -86, i64 40, i1 false)
  %169 = load i64, i64* %167, align 8
  %170 = sub i64 %12, %169
  %171 = ashr exact i64 %170, 2
  %172 = add nsw i64 %171, 1
  %173 = icmp ugt i64 %172, 4611686018427387903
  br i1 %173, label %174, label %176

174:                                              ; preds = %158
  %175 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %175) #11
  unreachable

176:                                              ; preds = %158
  %177 = bitcast i32** %9 to i64*
  %178 = sub i64 %13, %169
  %179 = ashr exact i64 %178, 2
  %180 = icmp ult i64 %179, 2305843009213693951
  br i1 %180, label %185, label %181

181:                                              ; preds = %176
  %182 = sub i64 %4, %169
  %183 = ashr exact i64 %182, 2
  store i32* null, i32** %164, align 8
  %184 = bitcast %"class.std::__1::allocator"** %165 to %"class.std::__1::__compressed_pair"**
  store %"class.std::__1::__compressed_pair"* %159, %"class.std::__1::__compressed_pair"** %184, align 8
  br label %196

185:                                              ; preds = %176
  %186 = ashr exact i64 %178, 1
  %187 = icmp ult i64 %186, %172
  %188 = select i1 %187, i64 %172, i64 %186
  %189 = sub i64 %4, %169
  %190 = ashr exact i64 %189, 2
  store i32* null, i32** %164, align 8
  %191 = bitcast %"class.std::__1::allocator"** %165 to %"class.std::__1::__compressed_pair"**
  store %"class.std::__1::__compressed_pair"* %159, %"class.std::__1::__compressed_pair"** %191, align 8
  %192 = icmp eq i64 %188, 0
  br i1 %192, label %202, label %193

193:                                              ; preds = %185
  %194 = icmp ugt i64 %188, 4611686018427387903
  br i1 %194, label %195, label %196

195:                                              ; preds = %193
  tail call void @abort() #11
  unreachable

196:                                              ; preds = %181, %193
  %197 = phi i64 [ 4611686018427387903, %181 ], [ %188, %193 ]
  %198 = phi i64 [ %183, %181 ], [ %190, %193 ]
  %199 = shl i64 %197, 2
  %200 = tail call i8* @_Znwm(i64 %199) #12
  %201 = bitcast i8* %200 to i32*
  br label %202

202:                                              ; preds = %185, %196
  %203 = phi i64 [ %198, %196 ], [ %190, %185 ]
  %204 = phi i64 [ %197, %196 ], [ 0, %185 ]
  %205 = phi i32* [ %201, %196 ], [ null, %185 ]
  store i32* %205, i32** %161, align 8
  %206 = getelementptr inbounds i32, i32* %205, i64 %203
  store i32* %206, i32** %163, align 8
  store i32* %206, i32** %162, align 8
  %207 = getelementptr inbounds i32, i32* %205, i64 %204
  store i32* %207, i32** %164, align 8
  call void @_ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE12emplace_backIJiEEEvDpOT_(%"struct.std::__1::__split_buffer"* nonnull %5, i32* dereferenceable(4) %2)
  %208 = load i32*, i32** %162, align 8
  %209 = load i32*, i32** %6, align 8
  %210 = ptrtoint i32* %209 to i64
  %211 = sub i64 %4, %210
  %212 = ashr exact i64 %211, 2
  %213 = sub nsw i64 0, %212
  %214 = getelementptr inbounds i32, i32* %208, i64 %213
  store i32* %214, i32** %162, align 8
  %215 = icmp sgt i64 %211, 0
  br i1 %215, label %216, label %219

216:                                              ; preds = %202
  %217 = bitcast i32* %214 to i8*
  %218 = bitcast i32* %209 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %217, i8* align 4 %218, i64 %211, i1 false) #10
  br label %219

219:                                              ; preds = %216, %202
  %220 = load i32*, i32** %7, align 8
  %221 = icmp eq i32* %220, %1
  br i1 %221, label %222, label %226

222:                                              ; preds = %219
  %223 = ptrtoint i32* %220 to i64
  %224 = bitcast i32** %163 to i64*
  %225 = load i64, i64* %224, align 8
  br label %275

226:                                              ; preds = %219
  %227 = load i32*, i32** %163, align 8
  %228 = getelementptr i32, i32* %220, i64 -1
  %229 = ptrtoint i32* %228 to i64
  %230 = sub i64 %229, %4
  %231 = lshr i64 %230, 2
  %232 = add nuw nsw i64 %231, 1
  %233 = and i64 %232, 3
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %245, label %235

235:                                              ; preds = %226, %235
  %236 = phi i32* [ %242, %235 ], [ %227, %226 ]
  %237 = phi i32* [ %240, %235 ], [ %1, %226 ]
  %238 = phi i64 [ %243, %235 ], [ %233, %226 ]
  %239 = load i32, i32* %237, align 4
  store i32 %239, i32* %236, align 4
  %240 = getelementptr inbounds i32, i32* %237, i64 1
  %241 = load i32*, i32** %163, align 8
  %242 = getelementptr inbounds i32, i32* %241, i64 1
  store i32* %242, i32** %163, align 8
  %243 = add i64 %238, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %235, !llvm.loop !43

245:                                              ; preds = %235, %226
  %246 = phi i32* [ undef, %226 ], [ %242, %235 ]
  %247 = phi i32* [ %227, %226 ], [ %242, %235 ]
  %248 = phi i32* [ %1, %226 ], [ %240, %235 ]
  %249 = icmp ult i64 %230, 12
  br i1 %249, label %270, label %250

250:                                              ; preds = %245, %250
  %251 = phi i32* [ %268, %250 ], [ %247, %245 ]
  %252 = phi i32* [ %266, %250 ], [ %248, %245 ]
  %253 = load i32, i32* %252, align 4
  store i32 %253, i32* %251, align 4
  %254 = getelementptr inbounds i32, i32* %252, i64 1
  %255 = load i32*, i32** %163, align 8
  %256 = getelementptr inbounds i32, i32* %255, i64 1
  store i32* %256, i32** %163, align 8
  %257 = load i32, i32* %254, align 4
  store i32 %257, i32* %256, align 4
  %258 = getelementptr inbounds i32, i32* %252, i64 2
  %259 = load i32*, i32** %163, align 8
  %260 = getelementptr inbounds i32, i32* %259, i64 1
  store i32* %260, i32** %163, align 8
  %261 = load i32, i32* %258, align 4
  store i32 %261, i32* %260, align 4
  %262 = getelementptr inbounds i32, i32* %252, i64 3
  %263 = load i32*, i32** %163, align 8
  %264 = getelementptr inbounds i32, i32* %263, i64 1
  store i32* %264, i32** %163, align 8
  %265 = load i32, i32* %262, align 4
  store i32 %265, i32* %264, align 4
  %266 = getelementptr inbounds i32, i32* %252, i64 4
  %267 = load i32*, i32** %163, align 8
  %268 = getelementptr inbounds i32, i32* %267, i64 1
  store i32* %268, i32** %163, align 8
  %269 = icmp eq i32* %266, %220
  br i1 %269, label %270, label %250

270:                                              ; preds = %250, %245
  %271 = phi i32* [ %246, %245 ], [ %268, %250 ]
  %272 = ptrtoint i32* %271 to i64
  %273 = load i64, i64* %166, align 8
  %274 = bitcast i32** %163 to i64*
  br label %275

275:                                              ; preds = %222, %270
  %276 = phi i64* [ %224, %222 ], [ %274, %270 ]
  %277 = phi i64 [ %225, %222 ], [ %272, %270 ]
  %278 = phi i64 [ %223, %222 ], [ %273, %270 ]
  %279 = load i64, i64* %167, align 8
  %280 = bitcast i32** %162 to i64*
  %281 = load i64, i64* %280, align 8
  store i64 %281, i64* %167, align 8
  store i64 %279, i64* %280, align 8
  store i64 %277, i64* %166, align 8
  store i64 %278, i64* %276, align 8
  %282 = load i64, i64* %177, align 8
  %283 = bitcast i32** %164 to i64*
  %284 = load i64, i64* %283, align 8
  store i64 %284, i64* %177, align 8
  store i64 %282, i64* %283, align 8
  %285 = bitcast %"struct.std::__1::__split_buffer"* %5 to i64*
  store i64 %279, i64* %285, align 8
  %286 = inttoptr i64 %279 to i32*
  %287 = inttoptr i64 %278 to i32*
  %288 = icmp eq i32* %287, %286
  br i1 %288, label %296, label %289

289:                                              ; preds = %275
  %290 = getelementptr i32, i32* %287, i64 -1
  %291 = ptrtoint i32* %290 to i64
  %292 = sub i64 %291, %279
  %293 = lshr i64 %292, 2
  %294 = xor i64 %293, -1
  %295 = getelementptr i32, i32* %287, i64 %294
  store i32* %295, i32** %163, align 8
  br label %296

296:                                              ; preds = %289, %275
  %297 = icmp eq i64 %279, 0
  br i1 %297, label %300, label %298

298:                                              ; preds = %296
  %299 = inttoptr i64 %279 to i8*
  call void @_ZdlPv(i8* %299) #12
  br label %300

300:                                              ; preds = %296, %298
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %160) #10
  br label %301

301:                                              ; preds = %17, %157, %300
  %302 = phi i32* [ %1, %17 ], [ %1, %157 ], [ %208, %300 ]
  ret i32* %302
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE12emplace_backIJiEEEvDpOT_(%"struct.std::__1::__split_buffer"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %4, %6
  %8 = ptrtoint i32* %6 to i64
  br i1 %7, label %9, label %229

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %11 = load i32*, i32** %10, align 8
  %12 = bitcast i32* %11 to i8*
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp ugt i32* %11, %14
  %16 = ptrtoint i32* %14 to i64
  br i1 %15, label %17, label %35

17:                                               ; preds = %9
  %18 = ptrtoint i32* %11 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 2
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i32, i32* %11, i64 %22
  %24 = ptrtoint i32* %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %17
  %29 = bitcast i32* %23 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %12, i64 %25, i1 false) #10
  %30 = load i32*, i32** %10, align 8
  br label %31

31:                                               ; preds = %17, %28
  %32 = phi i32* [ %11, %17 ], [ %30, %28 ]
  %33 = getelementptr inbounds i32, i32* %23, i64 %26
  store i32* %33, i32** %3, align 8
  %34 = getelementptr inbounds i32, i32* %32, i64 %22
  store i32* %34, i32** %10, align 8
  br label %229

35:                                               ; preds = %9
  %36 = bitcast i32** %5 to i64*
  %37 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %38 = sub i64 %8, %16
  %39 = ashr exact i64 %38, 1
  %40 = icmp eq i64 %38, 0
  %41 = select i1 %40, i64 1, i64 %39
  %42 = icmp ugt i64 %41, 4611686018427387903
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  tail call void @abort() #11
  unreachable

44:                                               ; preds = %35
  %45 = lshr i64 %41, 2
  %46 = shl i64 %41, 2
  %47 = tail call i8* @_Znwm(i64 %46) #12
  %48 = bitcast i8* %47 to i32*
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds i32, i32* %48, i64 %45
  %51 = ptrtoint i32* %50 to i64
  %52 = getelementptr inbounds i32, i32* %48, i64 %41
  %53 = ptrtoint i32* %52 to i64
  %54 = ptrtoint i32* %11 to i64
  %55 = ptrtoint i32* %4 to i64
  %56 = sub i64 %55, %54
  %57 = ashr exact i64 %56, 2
  %58 = getelementptr inbounds i32, i32* %50, i64 %57
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %219, label %60

60:                                               ; preds = %44
  %61 = add i64 %56, -4
  %62 = lshr i64 %61, 2
  %63 = add nuw nsw i64 %62, 1
  %64 = icmp ult i64 %63, 8
  br i1 %64, label %161, label %65

65:                                               ; preds = %60
  %66 = and i64 %41, -4
  %67 = getelementptr i8, i8* %47, i64 %66
  %68 = add i64 %56, -4
  %69 = lshr i64 %68, 2
  %70 = and i64 %68, -4
  %71 = add i64 %66, %70
  %72 = add i64 %71, 4
  %73 = getelementptr i8, i8* %47, i64 %72
  %74 = add nuw nsw i64 %69, 1
  %75 = getelementptr i32, i32* %11, i64 %74
  %76 = bitcast i32* %75 to i8*
  %77 = icmp ult i8* %67, %76
  %78 = icmp ugt i8* %73, %12
  %79 = and i1 %77, %78
  br i1 %79, label %161, label %80

80:                                               ; preds = %65
  %81 = and i64 %63, 9223372036854775800
  %82 = getelementptr i32, i32* %50, i64 %81
  %83 = getelementptr i32, i32* %11, i64 %81
  %84 = add nsw i64 %81, -8
  %85 = lshr exact i64 %84, 3
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 3
  %88 = icmp ult i64 %84, 24
  br i1 %88, label %140, label %89

89:                                               ; preds = %80
  %90 = sub nsw i64 %86, %87
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi i64 [ 0, %89 ], [ %137, %91 ]
  %93 = phi i64 [ %90, %89 ], [ %138, %91 ]
  %94 = getelementptr i32, i32* %50, i64 %92
  %95 = getelementptr i32, i32* %11, i64 %92
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !44
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !44
  %101 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !47, !noalias !44
  %102 = getelementptr i32, i32* %94, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !47, !noalias !44
  %104 = or i64 %92, 8
  %105 = getelementptr i32, i32* %50, i64 %104
  %106 = getelementptr i32, i32* %11, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !44
  %109 = getelementptr i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !44
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !47, !noalias !44
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !47, !noalias !44
  %115 = or i64 %92, 16
  %116 = getelementptr i32, i32* %50, i64 %115
  %117 = getelementptr i32, i32* %11, i64 %115
  %118 = bitcast i32* %117 to <4 x i32>*
  %119 = load <4 x i32>, <4 x i32>* %118, align 4, !alias.scope !44
  %120 = getelementptr i32, i32* %117, i64 4
  %121 = bitcast i32* %120 to <4 x i32>*
  %122 = load <4 x i32>, <4 x i32>* %121, align 4, !alias.scope !44
  %123 = bitcast i32* %116 to <4 x i32>*
  store <4 x i32> %119, <4 x i32>* %123, align 4, !alias.scope !47, !noalias !44
  %124 = getelementptr i32, i32* %116, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %122, <4 x i32>* %125, align 4, !alias.scope !47, !noalias !44
  %126 = or i64 %92, 24
  %127 = getelementptr i32, i32* %50, i64 %126
  %128 = getelementptr i32, i32* %11, i64 %126
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !44
  %131 = getelementptr i32, i32* %128, i64 4
  %132 = bitcast i32* %131 to <4 x i32>*
  %133 = load <4 x i32>, <4 x i32>* %132, align 4, !alias.scope !44
  %134 = bitcast i32* %127 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %134, align 4, !alias.scope !47, !noalias !44
  %135 = getelementptr i32, i32* %127, i64 4
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> %133, <4 x i32>* %136, align 4, !alias.scope !47, !noalias !44
  %137 = add i64 %92, 32
  %138 = add i64 %93, -4
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %91, !llvm.loop !49

140:                                              ; preds = %91, %80
  %141 = phi i64 [ 0, %80 ], [ %137, %91 ]
  %142 = icmp eq i64 %87, 0
  br i1 %142, label %159, label %143

143:                                              ; preds = %140, %143
  %144 = phi i64 [ %156, %143 ], [ %141, %140 ]
  %145 = phi i64 [ %157, %143 ], [ %87, %140 ]
  %146 = getelementptr i32, i32* %50, i64 %144
  %147 = getelementptr i32, i32* %11, i64 %144
  %148 = bitcast i32* %147 to <4 x i32>*
  %149 = load <4 x i32>, <4 x i32>* %148, align 4, !alias.scope !44
  %150 = getelementptr i32, i32* %147, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  %152 = load <4 x i32>, <4 x i32>* %151, align 4, !alias.scope !44
  %153 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> %149, <4 x i32>* %153, align 4, !alias.scope !47, !noalias !44
  %154 = getelementptr i32, i32* %146, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> %152, <4 x i32>* %155, align 4, !alias.scope !47, !noalias !44
  %156 = add i64 %144, 8
  %157 = add i64 %145, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %143, !llvm.loop !50

159:                                              ; preds = %143, %140
  %160 = icmp eq i64 %63, %81
  br i1 %160, label %216, label %161

161:                                              ; preds = %159, %65, %60
  %162 = phi i32* [ %50, %65 ], [ %50, %60 ], [ %82, %159 ]
  %163 = phi i32* [ %11, %65 ], [ %11, %60 ], [ %83, %159 ]
  %164 = ptrtoint i32* %162 to i64
  %165 = and i64 %41, -4
  %166 = add i64 %56, %165
  %167 = add i64 %166, -4
  %168 = sub i64 %167, %164
  %169 = getelementptr i8, i8* %47, i64 %168
  %170 = ptrtoint i8* %169 to i64
  %171 = lshr i64 %170, 2
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 7
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %184, label %175

175:                                              ; preds = %161, %175
  %176 = phi i32* [ %180, %175 ], [ %162, %161 ]
  %177 = phi i32* [ %181, %175 ], [ %163, %161 ]
  %178 = phi i64 [ %182, %175 ], [ %173, %161 ]
  %179 = load i32, i32* %177, align 4
  store i32 %179, i32* %176, align 4
  %180 = getelementptr inbounds i32, i32* %176, i64 1
  %181 = getelementptr inbounds i32, i32* %177, i64 1
  %182 = add i64 %178, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %175, !llvm.loop !51

184:                                              ; preds = %175, %161
  %185 = phi i32* [ %162, %161 ], [ %180, %175 ]
  %186 = phi i32* [ %163, %161 ], [ %181, %175 ]
  %187 = icmp ult i8* %169, inttoptr (i64 28 to i8*)
  br i1 %187, label %216, label %188

188:                                              ; preds = %184, %188
  %189 = phi i32* [ %213, %188 ], [ %185, %184 ]
  %190 = phi i32* [ %214, %188 ], [ %186, %184 ]
  %191 = load i32, i32* %190, align 4
  store i32 %191, i32* %189, align 4
  %192 = getelementptr inbounds i32, i32* %189, i64 1
  %193 = getelementptr inbounds i32, i32* %190, i64 1
  %194 = load i32, i32* %193, align 4
  store i32 %194, i32* %192, align 4
  %195 = getelementptr inbounds i32, i32* %189, i64 2
  %196 = getelementptr inbounds i32, i32* %190, i64 2
  %197 = load i32, i32* %196, align 4
  store i32 %197, i32* %195, align 4
  %198 = getelementptr inbounds i32, i32* %189, i64 3
  %199 = getelementptr inbounds i32, i32* %190, i64 3
  %200 = load i32, i32* %199, align 4
  store i32 %200, i32* %198, align 4
  %201 = getelementptr inbounds i32, i32* %189, i64 4
  %202 = getelementptr inbounds i32, i32* %190, i64 4
  %203 = load i32, i32* %202, align 4
  store i32 %203, i32* %201, align 4
  %204 = getelementptr inbounds i32, i32* %189, i64 5
  %205 = getelementptr inbounds i32, i32* %190, i64 5
  %206 = load i32, i32* %205, align 4
  store i32 %206, i32* %204, align 4
  %207 = getelementptr inbounds i32, i32* %189, i64 6
  %208 = getelementptr inbounds i32, i32* %190, i64 6
  %209 = load i32, i32* %208, align 4
  store i32 %209, i32* %207, align 4
  %210 = getelementptr inbounds i32, i32* %189, i64 7
  %211 = getelementptr inbounds i32, i32* %190, i64 7
  %212 = load i32, i32* %211, align 4
  store i32 %212, i32* %210, align 4
  %213 = getelementptr inbounds i32, i32* %189, i64 8
  %214 = getelementptr inbounds i32, i32* %190, i64 8
  %215 = icmp eq i32* %58, %213
  br i1 %215, label %216, label %188, !llvm.loop !52

216:                                              ; preds = %184, %188, %159
  %217 = ptrtoint i32* %58 to i64
  %218 = load i32*, i32** %13, align 8
  br label %219

219:                                              ; preds = %44, %216
  %220 = phi i32* [ %218, %216 ], [ %14, %44 ]
  %221 = phi i64 [ %217, %216 ], [ %51, %44 ]
  store i64 %49, i64* %37, align 8
  %222 = bitcast i32** %10 to i64*
  store i64 %51, i64* %222, align 8
  %223 = bitcast i32** %3 to i64*
  store i64 %221, i64* %223, align 8
  store i64 %53, i64* %36, align 8
  %224 = icmp eq i32* %220, null
  %225 = inttoptr i64 %221 to i32*
  br i1 %224, label %229, label %226

226:                                              ; preds = %219
  %227 = bitcast i32* %220 to i8*
  tail call void @_ZdlPv(i8* %227) #12
  %228 = load i32*, i32** %3, align 8
  br label %229

229:                                              ; preds = %226, %219, %31, %2
  %230 = phi i32* [ %228, %226 ], [ %225, %219 ], [ %33, %31 ], [ %4, %2 ]
  %231 = load i32, i32* %1, align 4
  store i32 %231, i32* %230, align 4
  %232 = load i32*, i32** %3, align 8
  %233 = getelementptr inbounds i32, i32* %232, i64 1
  store i32* %233, i32** %3, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !6, !3}
!6 = !{!"llvm.loop.unroll.runtime.disable"}
!7 = !{!8}
!8 = distinct !{!8, !9}
!9 = distinct !{!9, !"LVerDomain"}
!10 = !{!11}
!11 = distinct !{!11, !9}
!12 = distinct !{!12, !3}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.unroll.disable"}
!15 = distinct !{!15, !3}
!16 = distinct !{!16, !6, !3}
!17 = !{!18}
!18 = distinct !{!18, !19}
!19 = distinct !{!19, !"LVerDomain"}
!20 = !{!21}
!21 = distinct !{!21, !19}
!22 = distinct !{!22, !3}
!23 = distinct !{!23, !14}
!24 = distinct !{!24, !3}
!25 = distinct !{!25, !14}
!26 = !{!27}
!27 = distinct !{!27, !28}
!28 = distinct !{!28, !"LVerDomain"}
!29 = !{!30}
!30 = distinct !{!30, !28}
!31 = distinct !{!31, !3}
!32 = distinct !{!32, !14}
!33 = distinct !{!33, !14}
!34 = distinct !{!34, !3}
!35 = !{!36}
!36 = distinct !{!36, !37}
!37 = distinct !{!37, !"LVerDomain"}
!38 = !{!39}
!39 = distinct !{!39, !37}
!40 = distinct !{!40, !3}
!41 = distinct !{!41, !14}
!42 = distinct !{!42, !3}
!43 = distinct !{!43, !14}
!44 = !{!45}
!45 = distinct !{!45, !46}
!46 = distinct !{!46, !"LVerDomain"}
!47 = !{!48}
!48 = distinct !{!48, !46}
!49 = distinct !{!49, !3}
!50 = distinct !{!50, !14}
!51 = distinct !{!51, !14}
!52 = distinct !{!52, !3}
