; ModuleID = '../../third_party/icu/source/i18n/decContext.cpp'
source_filename = "../../third_party/icu/source/i18n/decContext.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.decContext = type { i32, i32, i32, i32, i32, i32, i8 }

@.str = private unnamed_addr constant [18 x i8] c"Conversion syntax\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"Division by zero\00", align 1
@.str.2 = private unnamed_addr constant [20 x i8] c"Division impossible\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"Division undefined\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"Inexact\00", align 1
@.str.5 = private unnamed_addr constant [21 x i8] c"Insufficient storage\00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"Invalid context\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"Invalid operation\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"Overflow\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"Clamped\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"Rounded\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"Subnormal\00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"Underflow\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"No status\00", align 1
@.str.14 = private unnamed_addr constant [16 x i8] c"Multiple status\00", align 1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct.decContext* @uprv_decContextClearStatus_69(%struct.decContext* returned, i32) local_unnamed_addr #0 {
  %3 = xor i32 %1, -1
  %4 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, %3
  store i32 %6, i32* %4, align 4
  ret %struct.decContext* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct.decContext* @uprv_decContextDefault_69(%struct.decContext* returned, i32) local_unnamed_addr #0 {
  %3 = bitcast %struct.decContext* %0 to <4 x i32>*
  store <4 x i32> <i32 9, i32 999999999, i32 -999999999, i32 2>, <4 x i32>* %3, align 4
  %4 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 4
  store i32 8927, i32* %4, align 4
  %5 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 6
  store i8 0, i8* %6, align 4
  %7 = lshr i32 %1, 5
  %8 = shl i32 %1, 27
  %9 = or i32 %7, %8
  switch i32 %9, label %16 [
    i32 0, label %17
    i32 1, label %10
    i32 2, label %12
    i32 4, label %14
  ]

10:                                               ; preds = %2
  %11 = bitcast %struct.decContext* %0 to <4 x i32>*
  store <4 x i32> <i32 7, i32 96, i32 -95, i32 3>, <4 x i32>* %11, align 4
  store i32 0, i32* %4, align 4
  store i8 1, i8* %6, align 4
  br label %17

12:                                               ; preds = %2
  %13 = bitcast %struct.decContext* %0 to <4 x i32>*
  store <4 x i32> <i32 16, i32 384, i32 -383, i32 3>, <4 x i32>* %13, align 4
  store i32 0, i32* %4, align 4
  store i8 1, i8* %6, align 4
  br label %17

14:                                               ; preds = %2
  %15 = bitcast %struct.decContext* %0 to <4 x i32>*
  store <4 x i32> <i32 34, i32 6144, i32 -6143, i32 3>, <4 x i32>* %15, align 4
  store i32 0, i32* %4, align 4
  store i8 1, i8* %6, align 4
  br label %17

16:                                               ; preds = %2
  store i32 128, i32* %5, align 4
  br label %17

17:                                               ; preds = %16, %14, %12, %10, %2
  ret %struct.decContext* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* returned, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4
  %5 = or i32 %4, %1
  store i32 %5, i32* %3, align 4
  ret %struct.decContext* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @uprv_decContextGetRounding_69(%struct.decContext* nocapture readonly) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @uprv_decContextGetStatus_69(%struct.decContext* nocapture readonly) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct.decContext* @uprv_decContextRestoreStatus_69(%struct.decContext* returned, i32, i32) local_unnamed_addr #0 {
  %4 = xor i32 %2, -1
  %5 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, %4
  %8 = and i32 %2, %1
  %9 = or i32 %7, %8
  store i32 %9, i32* %5, align 4
  ret %struct.decContext* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @uprv_decContextSaveStatus_69(%struct.decContext* nocapture readonly, i32) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, %1
  ret i32 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden %struct.decContext* @uprv_decContextSetRounding_69(%struct.decContext* returned, i32) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 3
  store i32 %1, i32* %3, align 4
  ret %struct.decContext* %0
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden %struct.decContext* @uprv_decContextSetStatusFromString_69(%struct.decContext*, i8* nocapture readonly) local_unnamed_addr #3 {
  %3 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0)) #6
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = or i32 %7, 1
  store i32 %8, i32* %6, align 4
  br label %97

9:                                                ; preds = %2
  %10 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #6
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %14 = load i32, i32* %13, align 4
  %15 = or i32 %14, 2
  store i32 %15, i32* %13, align 4
  br label %97

16:                                               ; preds = %9
  %17 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0)) #6
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %21 = load i32, i32* %20, align 4
  %22 = or i32 %21, 4
  store i32 %22, i32* %20, align 4
  br label %97

23:                                               ; preds = %16
  %24 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #6
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %28 = load i32, i32* %27, align 4
  %29 = or i32 %28, 8
  store i32 %29, i32* %27, align 4
  br label %97

30:                                               ; preds = %23
  %31 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0)) #6
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %37

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %35 = load i32, i32* %34, align 4
  %36 = or i32 %35, 32
  store i32 %36, i32* %34, align 4
  br label %97

37:                                               ; preds = %30
  %38 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0)) #6
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %37
  %41 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %42 = load i32, i32* %41, align 4
  %43 = or i32 %42, 16
  store i32 %43, i32* %41, align 4
  br label %97

44:                                               ; preds = %37
  %45 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0)) #6
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %51

47:                                               ; preds = %44
  %48 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %49 = load i32, i32* %48, align 4
  %50 = or i32 %49, 64
  store i32 %50, i32* %48, align 4
  br label %97

51:                                               ; preds = %44
  %52 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0)) #6
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %58

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %56 = load i32, i32* %55, align 4
  %57 = or i32 %56, 128
  store i32 %57, i32* %55, align 4
  br label %97

58:                                               ; preds = %51
  %59 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0)) #6
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %65

61:                                               ; preds = %58
  %62 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %63 = load i32, i32* %62, align 4
  %64 = or i32 %63, 512
  store i32 %64, i32* %62, align 4
  br label %97

65:                                               ; preds = %58
  %66 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0)) #6
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %72

68:                                               ; preds = %65
  %69 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %70 = load i32, i32* %69, align 4
  %71 = or i32 %70, 1024
  store i32 %71, i32* %69, align 4
  br label %97

72:                                               ; preds = %65
  %73 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0)) #6
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %77 = load i32, i32* %76, align 4
  %78 = or i32 %77, 2048
  store i32 %78, i32* %76, align 4
  br label %97

79:                                               ; preds = %72
  %80 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0)) #6
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %86

82:                                               ; preds = %79
  %83 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %84 = load i32, i32* %83, align 4
  %85 = or i32 %84, 4096
  store i32 %85, i32* %83, align 4
  br label %97

86:                                               ; preds = %79
  %87 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0)) #6
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %93

89:                                               ; preds = %86
  %90 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %91 = load i32, i32* %90, align 4
  %92 = or i32 %91, 8192
  store i32 %92, i32* %90, align 4
  br label %97

93:                                               ; preds = %86
  %94 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0)) #6
  %95 = icmp eq i32 %94, 0
  %96 = select i1 %95, %struct.decContext* %0, %struct.decContext* null
  br label %97

97:                                               ; preds = %93, %89, %82, %75, %68, %61, %54, %47, %40, %33, %26, %19, %12, %5
  %98 = phi %struct.decContext* [ %0, %5 ], [ %0, %12 ], [ %0, %19 ], [ %0, %26 ], [ %0, %33 ], [ %0, %40 ], [ %0, %47 ], [ %0, %54 ], [ %0, %61 ], [ %0, %68 ], [ %0, %75 ], [ %0, %82 ], [ %0, %89 ], [ %96, %93 ]
  ret %struct.decContext* %98
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #4

; Function Attrs: nofree nounwind ssp uwtable
define hidden %struct.decContext* @uprv_decContextSetStatusFromStringQuiet_69(%struct.decContext*, i8* nocapture readonly) local_unnamed_addr #3 {
  %3 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0)) #6
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = or i32 %7, 1
  store i32 %8, i32* %6, align 4
  br label %97

9:                                                ; preds = %2
  %10 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #6
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %14 = load i32, i32* %13, align 4
  %15 = or i32 %14, 2
  store i32 %15, i32* %13, align 4
  br label %97

16:                                               ; preds = %9
  %17 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0)) #6
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %21 = load i32, i32* %20, align 4
  %22 = or i32 %21, 4
  store i32 %22, i32* %20, align 4
  br label %97

23:                                               ; preds = %16
  %24 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #6
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %28 = load i32, i32* %27, align 4
  %29 = or i32 %28, 8
  store i32 %29, i32* %27, align 4
  br label %97

30:                                               ; preds = %23
  %31 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0)) #6
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %37

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %35 = load i32, i32* %34, align 4
  %36 = or i32 %35, 32
  store i32 %36, i32* %34, align 4
  br label %97

37:                                               ; preds = %30
  %38 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0)) #6
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %37
  %41 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %42 = load i32, i32* %41, align 4
  %43 = or i32 %42, 16
  store i32 %43, i32* %41, align 4
  br label %97

44:                                               ; preds = %37
  %45 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0)) #6
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %51

47:                                               ; preds = %44
  %48 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %49 = load i32, i32* %48, align 4
  %50 = or i32 %49, 64
  store i32 %50, i32* %48, align 4
  br label %97

51:                                               ; preds = %44
  %52 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0)) #6
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %58

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %56 = load i32, i32* %55, align 4
  %57 = or i32 %56, 128
  store i32 %57, i32* %55, align 4
  br label %97

58:                                               ; preds = %51
  %59 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0)) #6
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %65

61:                                               ; preds = %58
  %62 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %63 = load i32, i32* %62, align 4
  %64 = or i32 %63, 512
  store i32 %64, i32* %62, align 4
  br label %97

65:                                               ; preds = %58
  %66 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0)) #6
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %72

68:                                               ; preds = %65
  %69 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %70 = load i32, i32* %69, align 4
  %71 = or i32 %70, 1024
  store i32 %71, i32* %69, align 4
  br label %97

72:                                               ; preds = %65
  %73 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0)) #6
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %77 = load i32, i32* %76, align 4
  %78 = or i32 %77, 2048
  store i32 %78, i32* %76, align 4
  br label %97

79:                                               ; preds = %72
  %80 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0)) #6
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %86

82:                                               ; preds = %79
  %83 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %84 = load i32, i32* %83, align 4
  %85 = or i32 %84, 4096
  store i32 %85, i32* %83, align 4
  br label %97

86:                                               ; preds = %79
  %87 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0)) #6
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %93

89:                                               ; preds = %86
  %90 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %91 = load i32, i32* %90, align 4
  %92 = or i32 %91, 8192
  store i32 %92, i32* %90, align 4
  br label %97

93:                                               ; preds = %86
  %94 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0)) #6
  %95 = icmp eq i32 %94, 0
  %96 = select i1 %95, %struct.decContext* %0, %struct.decContext* null
  br label %97

97:                                               ; preds = %93, %89, %82, %75, %68, %61, %54, %47, %40, %33, %26, %19, %12, %5
  %98 = phi %struct.decContext* [ %0, %5 ], [ %0, %12 ], [ %0, %19 ], [ %0, %26 ], [ %0, %33 ], [ %0, %40 ], [ %0, %47 ], [ %0, %54 ], [ %0, %61 ], [ %0, %68 ], [ %0, %75 ], [ %0, %82 ], [ %0, %89 ], [ %96, %93 ]
  ret %struct.decContext* %98
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct.decContext* @uprv_decContextSetStatusQuiet_69(%struct.decContext* returned, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4
  %5 = or i32 %4, %1
  store i32 %5, i32* %3, align 4
  ret %struct.decContext* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @uprv_decContextStatusToString_69(%struct.decContext* nocapture readonly) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %17 [
    i32 128, label %18
    i32 2, label %4
    i32 512, label %5
    i32 8192, label %6
    i32 32, label %7
    i32 4, label %8
    i32 8, label %9
    i32 2048, label %10
    i32 1024, label %11
    i32 4096, label %12
    i32 1, label %13
    i32 16, label %14
    i32 64, label %15
    i32 0, label %16
  ]

4:                                                ; preds = %1
  br label %18

5:                                                ; preds = %1
  br label %18

6:                                                ; preds = %1
  br label %18

7:                                                ; preds = %1
  br label %18

8:                                                ; preds = %1
  br label %18

9:                                                ; preds = %1
  br label %18

10:                                               ; preds = %1
  br label %18

11:                                               ; preds = %1
  br label %18

12:                                               ; preds = %1
  br label %18

13:                                               ; preds = %1
  br label %18

14:                                               ; preds = %1
  br label %18

15:                                               ; preds = %1
  br label %18

16:                                               ; preds = %1
  br label %18

17:                                               ; preds = %1
  br label %18

18:                                               ; preds = %1, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4
  %19 = phi i8* [ getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), %4 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0), %5 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0), %6 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0), %7 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0), %8 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), %9 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), %10 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), %11 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), %12 ], [ getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), %13 ], [ getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), %14 ], [ getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), %15 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0), %16 ], [ getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0), %17 ], [ getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), %1 ]
  ret i8* %19
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @uprv_decContextTestSavedStatus_69(i32, i32) local_unnamed_addr #5 {
  %3 = and i32 %1, %0
  %4 = icmp ne i32 %3, 0
  %5 = zext i1 %4 to i32
  ret i32 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @uprv_decContextTestStatus_69(%struct.decContext* nocapture readonly, i32) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, %1
  %6 = icmp ne i32 %5, 0
  %7 = zext i1 %6 to i32
  ret i32 %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden %struct.decContext* @uprv_decContextZeroStatus_69(%struct.decContext* returned) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i64 0, i32 5
  store i32 0, i32* %2, align 4
  ret %struct.decContext* %0
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
