; ModuleID = '../../third_party/blink/renderer/core/origin_trials/origin_trial_context.cc'
source_filename = "../../third_party/blink/renderer/core/origin_trials/origin_trial_context.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.318", i32, [4 x i8], %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.456", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.467", %"class.std::__1::unique_ptr.473", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.485", %"class.std::__1::unique_ptr.491", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.498", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.321", %"class.std::__1::unique_ptr.327", %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.339", %"class.std::__1::unique_ptr.345", %"class.std::__1::unique_ptr.351", %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.369", %"class.std::__1::unique_ptr.369", %"class.std::__1::unique_ptr.376", %"class.std::__1::unique_ptr.383", %"class.std::__1::unique_ptr.390", %"class.std::__1::unique_ptr.390", %"class.std::__1::unique_ptr.397", %"class.std::__1::unique_ptr.404", %"class.std::__1::unique_ptr.411", %"class.std::__1::unique_ptr.436", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.354" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.354" = type { %"struct.std::__1::__atomic_base.355" }
%"struct.std::__1::__atomic_base.355" = type { %"struct.std::__1::__atomic_base.356" }
%"struct.std::__1::__atomic_base.356" = type { %"struct.std::__1::__cxx_atomic_impl.357" }
%"struct.std::__1::__cxx_atomic_impl.357" = type { %"struct.std::__1::__cxx_atomic_base_impl.358" }
%"struct.std::__1::__cxx_atomic_base_impl.358" = type { i64 }
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"class.blink::Worklist.365"* }
%"class.blink::Worklist.365" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.354" }
%"class.std::__1::unique_ptr.369" = type { %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { %"class.blink::Worklist.372"* }
%"class.blink::Worklist.372" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.354" }
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.blink::Worklist.379"* }
%"class.blink::Worklist.379" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.354" }
%"class.std::__1::unique_ptr.383" = type { %"class.std::__1::__compressed_pair.384" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"class.blink::Worklist.386"* }
%"class.blink::Worklist.386" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.354" }
%"class.std::__1::unique_ptr.390" = type { %"class.std::__1::__compressed_pair.391" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"struct.std::__1::__compressed_pair_elem.392" = type { %"class.blink::Worklist.393"* }
%"class.blink::Worklist.393" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.354" }
%"class.std::__1::unique_ptr.397" = type { %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"class.blink::Worklist.400"* }
%"class.blink::Worklist.400" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.354" }
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"class.blink::Worklist.407"* }
%"class.blink::Worklist.407" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.354" }
%"class.std::__1::unique_ptr.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.414", %"class.std::__1::__compressed_pair.422", %"class.std::__1::__compressed_pair.427", %"class.std::__1::__compressed_pair.429", [4 x i8] }>
%"class.std::__1::unique_ptr.414" = type { %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416", %"struct.std::__1::__compressed_pair_elem.417" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.417" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.418" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { i64 }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { float }
%"class.std::__1::unique_ptr.436" = type { %"class.std::__1::__compressed_pair.437" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.439", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.439" = type { %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.448" }
%"class.WTF::Vector.448" = type { %"class.WTF::VectorBuffer.449" }
%"class.WTF::VectorBuffer.449" = type { %"class.WTF::VectorBufferBase.450" }
%"class.WTF::VectorBufferBase.450" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.464" }
%"class.WTF::VectorBuffer.464" = type { %"class.WTF::VectorBufferBase.465" }
%"class.WTF::VectorBufferBase.465" = type { %"struct.std::__1::pair.466"*, i32, i32 }
%"struct.std::__1::pair.466" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.467" = type { %"class.std::__1::__compressed_pair.468" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.473" = type { %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.479" }
%"class.std::__1::unique_ptr.479" = type { %"class.std::__1::__compressed_pair.480" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.365"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.372"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.379"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.386"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.393"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1922", i64 }
%"class.std::__1::vector.1922" = type { %"class.std::__1::__vector_base.1923" }
%"class.std::__1::__vector_base.1923" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1924" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1924" = type { %"struct.std::__1::__compressed_pair_elem.1925" }
%"struct.std::__1::__compressed_pair_elem.1925" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.491" = type { %"class.std::__1::__compressed_pair.492" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.497 }
%class.scoped_refptr.497 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.498" = type { %"struct.std::__1::__atomic_base.499" }
%"struct.std::__1::__atomic_base.499" = type { %"struct.std::__1::__cxx_atomic_impl.500" }
%"struct.std::__1::__cxx_atomic_impl.500" = type { %"struct.std::__1::__cxx_atomic_base_impl.501" }
%"struct.std::__1::__cxx_atomic_base_impl.501" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.167" }
%"class.base::time_internal::TimeBase.167" = type { i64 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"struct.blink::OriginTrialTokenResult" = type { %"class.WTF::String", i32, %"class.absl::optional" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::TrialToken" }
%"class.blink::TrialToken" = type { %"class.url::Origin", i8, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", i8, i32 }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.3" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.3" = type { %"class.absl::optional_internal::optional_data.4" }
%"class.absl::optional_internal::optional_data.4" = type { %"class.absl::optional_internal::optional_data_base.5" }
%"class.absl::optional_internal::optional_data_base.5" = type { %"class.absl::optional_internal::optional_data_dtor_base.6" }
%"class.absl::optional_internal::optional_data_dtor_base.6" = type { i8, %union.anon.7 }
%union.anon.7 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.1 }
%union.anon.1 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.blink::OriginTrialContext" = type { %"class.WTF::HashSet", %"class.WTF::HashSet", %"class.WTF::HashSet", %"class.WTF::HashMap", %"class.std::__1::unique_ptr", %"class.blink::Member", %"class.WTF::HashMap.14" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.8" }
%"class.WTF::HashTable.8" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i32, %"class.base::Time" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.blink::TrialTokenValidator"* }
%"class.blink::TrialTokenValidator" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashMap.14" = type { %"class.WTF::HashTable.15" }
%"class.WTF::HashTable.15" = type <{ %"struct.WTF::KeyValuePair.18"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.18" = type { %"class.WTF::String", %"struct.blink::OriginTrialResult" }
%"struct.blink::OriginTrialResult" = type { %"class.WTF::String", i32, %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.blink::OriginTrialTokenResult"*, i32, i32 }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.76", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.85", %"class.blink::Member.87", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.96", %"class.blink::Member.238", %"class.blink::Member.240", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.23" }
%"class.WTF::HashMap.23" = type { %"class.WTF::HashTable.24" }
%"class.WTF::HashTable.24" = type <{ %"struct.WTF::KeyValuePair.26"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.26" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.32" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.29" }
%"class.WTF::HashSet.29" = type { %"class.WTF::HashTable.30" }
%"class.WTF::HashTable.30" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.32" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.33" }
%"class.blink::HeapHashMap.33" = type { %"class.WTF::HashMap.36" }
%"class.WTF::HashMap.36" = type { %"class.WTF::HashTable.37" }
%"class.WTF::HashTable.37" = type <{ %"struct.WTF::KeyValuePair.39"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.39" = type { i8*, %"class.blink::Member.2048" }
%"class.blink::Member.2048" = type { %"class.blink::MemberBase.2049" }
%"class.blink::MemberBase.2049" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2050" }
%"class.blink::Member.2050" = type { %"class.blink::MemberBase.2051" }
%"class.blink::MemberBase.2051" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.40, %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66", %"class.blink::Member", i32, [4 x i8], %"class.WTF::HashSet.72", i32, i32 }
%class.scoped_refptr.40 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.3", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.41 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr.41 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.53", %"class.std::__1::map.62"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"class.std::__1::map.53" = type { %"class.std::__1::__tree.54" }
%"class.std::__1::__tree.54" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"class.std::__1::map.62" = type opaque
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.72" = type { %"class.WTF::HashTable.73" }
%"class.WTF::HashTable.73" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.76" = type { %"class.blink::MemberBase.77" }
%"class.blink::MemberBase.77" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.80" }
%"class.WTF::Vector.80" = type { %"class.WTF::VectorBuffer.81" }
%"class.WTF::VectorBuffer.81" = type { %"class.WTF::VectorBufferBase.82" }
%"class.WTF::VectorBufferBase.82" = type { %"class.blink::Member.83"*, i32, i32 }
%"class.blink::Member.83" = type opaque
%"class.blink::Member.85" = type { %"class.blink::MemberBase.86" }
%"class.blink::MemberBase.86" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.87" = type { %"class.blink::MemberBase.88" }
%"class.blink::MemberBase.88" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.89", i32, i32 }
%"class.blink::HeapHashMap.89" = type { %"class.WTF::HashMap.92" }
%"class.WTF::HashMap.92" = type { %"class.WTF::HashTable.93" }
%"class.WTF::HashTable.93" = type <{ %"struct.WTF::KeyValuePair.95"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.95" = type opaque
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.99" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.102" }
%"class.WTF::Vector.102" = type { %"class.WTF::VectorBuffer.103" }
%"class.WTF::VectorBuffer.103" = type { %"class.WTF::VectorBufferBase.104" }
%"class.WTF::VectorBufferBase.104" = type { %"class.mojo::StructPtr.105"*, i32, i32 }
%"class.mojo::StructPtr.105" = type { %"class.std::__1::unique_ptr.106" }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.109", %"class.WTF::HashMap.116", %"class.WTF::HashMap.121", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.126", i32, %"class.mojo::StructPtr.131", %"class.WTF::Vector.126" }
%"class.mojo::StructPtr.109" = type { %"class.std::__1::unique_ptr.110" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.116" = type { %"class.WTF::HashTable.117" }
%"class.WTF::HashTable.117" = type <{ %"struct.WTF::KeyValuePair.120"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.120" = type opaque
%"class.WTF::HashMap.121" = type { %"class.WTF::HashTable.122" }
%"class.WTF::HashTable.122" = type <{ %"struct.WTF::KeyValuePair.125"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.125" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.131" = type { %"class.std::__1::unique_ptr.132" }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.126", i8, i8, [6 x i8] }>
%"class.WTF::Vector.126" = type { %"class.WTF::VectorBuffer.127" }
%"class.WTF::VectorBuffer.127" = type { %"class.WTF::VectorBufferBase.128" }
%"class.WTF::VectorBufferBase.128" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.229" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.146", i32 }>
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.155", %"class.absl::optional.160", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.182", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.204", %"class.std::__1::map.215", i64, %"class.base::OnceCallback.175", %"class.base::OnceCallback.224", i8, %class.scoped_refptr.165, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.225" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.149 }
%class.scoped_refptr.149 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.150" }
%"struct.std::__1::atomic.150" = type { %"struct.std::__1::__atomic_base.151" }
%"struct.std::__1::__atomic_base.151" = type { %"struct.std::__1::__atomic_base.152" }
%"struct.std::__1::__atomic_base.152" = type { %"struct.std::__1::__cxx_atomic_impl.153" }
%"struct.std::__1::__cxx_atomic_impl.153" = type { %"struct.std::__1::__cxx_atomic_base_impl.154" }
%"struct.std::__1::__cxx_atomic_base_impl.154" = type { i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.155" = type { %"class.absl::optional_internal::optional_data.156" }
%"class.absl::optional_internal::optional_data.156" = type { %"class.absl::optional_internal::optional_data_base.157" }
%"class.absl::optional_internal::optional_data_base.157" = type { %"class.absl::optional_internal::optional_data_dtor_base.158" }
%"class.absl::optional_internal::optional_data_dtor_base.158" = type { i8, %union.anon.159 }
%union.anon.159 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.160" = type { %"class.absl::optional_internal::optional_data.161" }
%"class.absl::optional_internal::optional_data.161" = type { %"class.absl::optional_internal::optional_data_base.162" }
%"class.absl::optional_internal::optional_data_base.162" = type { %"class.absl::optional_internal::optional_data_dtor_base.163" }
%"class.absl::optional_internal::optional_data_dtor_base.163" = type { i8, %union.anon.164 }
%union.anon.164 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.175" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.165, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.168 }
%class.scoped_refptr.168 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.169", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.169" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.170" }
%"struct.std::__1::atomic.170" = type { %"struct.std::__1::__atomic_base.171" }
%"struct.std::__1::__atomic_base.171" = type { %"struct.std::__1::__atomic_base.172" }
%"struct.std::__1::__atomic_base.172" = type { %"struct.std::__1::__cxx_atomic_impl.173" }
%"struct.std::__1::__cxx_atomic_impl.173" = type { %"struct.std::__1::__cxx_atomic_base_impl.174" }
%"struct.std::__1::__cxx_atomic_base_impl.174" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.180 }
%class.scoped_refptr.180 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.252", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.165, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.252" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.181 }
%class.scoped_refptr.181 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.185", %class.scoped_refptr.186 }
%"class.base::RepeatingCallback.185" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.186 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.187", [4 x i8] }>
%"class.base::RefCountedThreadSafe.187" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.197", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.203" }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.203" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.204" = type { %"class.std::__1::__tree.205" }
%"class.std::__1::__tree.205" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.206", %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"class.std::__1::map.215" = type { %"class.std::__1::__tree.216" }
%"class.std::__1::__tree.216" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.217", %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"class.base::OnceCallback.175" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.224" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.165 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.166" }>
%"class.base::RefCountedThreadSafe.166" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.175" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.225" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.238" = type { %"class.blink::MemberBase.239" }
%"class.blink::MemberBase.239" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::Member.240" = type { %"class.blink::MemberBase.241" }
%"class.blink::MemberBase.241" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.87", i8, [7 x i8], %"class.WTF::Vector.102", %"class.blink::HeapVector.244", i8, [7 x i8], %"class.WTF::HashSet.72", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.244" = type { %"class.WTF::Vector.247" }
%"class.WTF::Vector.247" = type { %"class.WTF::VectorBuffer.248" }
%"class.WTF::VectorBuffer.248" = type { %"class.WTF::VectorBufferBase.249" }
%"class.WTF::VectorBufferBase.249" = type { %"class.blink::Member.250"*, i32, i32 }
%"class.blink::Member.250" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.2142, i32, i8, i8, [2 x i8] }>
%union.anon.2142 = type { %"class.WTF::Vector.2143" }
%"class.WTF::Vector.2143" = type { %"class.WTF::VectorBuffer.2144" }
%"class.WTF::VectorBuffer.2144" = type { %"class.WTF::VectorBufferBase.2145", [16 x i8] }
%"class.WTF::VectorBufferBase.2145" = type { i8*, i32, i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::Vector.259" = type { %"class.WTF::VectorBuffer.260" }
%"class.WTF::VectorBuffer.260" = type { %"class.WTF::VectorBufferBase.261" }
%"class.WTF::VectorBufferBase.261" = type { i32*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringUTF8Adaptor" = type <{ %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.blink::TrialTokenResult" = type { i32, %"class.std::__1::unique_ptr.1982" }
%"class.std::__1::unique_ptr.1982" = type { %"class.std::__1::__compressed_pair.1983" }
%"class.std::__1::__compressed_pair.1983" = type { %"struct.std::__1::__compressed_pair_elem.1984" }
%"struct.std::__1::__compressed_pair_elem.1984" = type { %"class.blink::TrialToken"* }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic", [4 x i8] }>
%"class.blink::ScriptState::Scope" = type { %"class.v8::HandleScope", %"class.v8::Local.1942" }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Local.1942" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.616", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.624", %"class.blink::Member.632", %"class.blink::Member.634", i8, %"class.blink::Member.636", %"class.blink::Member.638", %"class.blink::Member.640", %"class.blink::Member.640", %"class.blink::Member.640", %"class.blink::Member.640", %"class.blink::Member.640", %"class.blink::Member.640", %"class.blink::Member.642", %"class.blink::Member.644", %"class.blink::Member.646", %"class.blink::Member.648", %"class.blink::Member.652", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.126", %"class.blink::Member.654", %class.scoped_refptr.656, %"class.blink::HeapHashSet.718", %"class.blink::Member.725", %"class.blink::HeapHashMap.738", %"class.std::__1::unique_ptr.745", %"class.blink::Member.757", %"class.blink::Member.786", %"class.blink::Member.794", %"class.blink::Member.800", %"class.WTF::Vector.803", %"class.util::TokenType", %"class.WTF::HashSet.808", %"class.WTF::Deque.812" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.294", %"class.blink::Member.296", %"class.blink::Member.509", %"class.blink::Member.511", i8, %"class.WTF::Vector.513" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.287" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.276" }
%"class.blink::HeapVector.276" = type { %"class.WTF::Vector.279" }
%"class.WTF::Vector.279" = type { %"class.WTF::VectorBuffer.280" }
%"class.WTF::VectorBuffer.280" = type { %"class.WTF::VectorBufferBase.281", [32 x i8] }
%"class.WTF::VectorBufferBase.281" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.282" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.282" = type { %"class.blink::MemberBase.283" }
%"class.blink::MemberBase.283" = type { %"class.blink::HeapVector.284"* }
%"class.blink::HeapVector.284" = type opaque
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.WTF::Vector.290"* }
%"class.WTF::Vector.290" = type opaque
%"class.blink::Member.294" = type { %"class.blink::MemberBase.295" }
%"class.blink::MemberBase.295" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.918", %"class.blink::Member.920", %"class.blink::Member.922", i8, i32, i8, i32, %"class.blink::Member.924", %"class.blink::Member.296", %"class.blink::FrameLifecycle", %"class.blink::Member.294", %"class.blink::Member.294", %"class.blink::Member.294", %"class.blink::Member.294", %"class.blink::Member.294", %"class.blink::Member.294", %"class.blink::Member.763", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.932", i8, %"class.base::UnguessableToken", %"class.absl::optional.934", %"class.absl::optional.939", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.294", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.918" = type { %"class.blink::MemberBase.919" }
%"class.blink::MemberBase.919" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.920" = type { %"class.blink::MemberBase.921" }
%"class.blink::MemberBase.921" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.922" = type { %"class.blink::MemberBase.923" }
%"class.blink::MemberBase.923" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.924" = type { %"class.blink::MemberBase.925" }
%"class.blink::MemberBase.925" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.763" = type { %"class.blink::MemberBase.764" }
%"class.blink::MemberBase.764" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.952", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.960", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.968", %"class.blink::FrameLoader", %"class.blink::Member.995", %"class.blink::Member.834", %"class.blink::Member.997", %"class.blink::Member.999", %"class.blink::Member.1001", %"class.blink::Member.1003", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1005", %class.scoped_refptr.1007, %"class.blink::Member.1008", %"class.blink::Member.1010", %"class.blink::Member.1012", %"class.blink::Member.1014", %"class.blink::Member.1016", %"class.blink::Member.1018", %"class.blink::Member.1020", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.1022", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1025", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1046", %"class.std::__1::unique_ptr.1047", %"class.absl::optional.939", i32, [4 x i8], %"class.std::__1::unique_ptr.1053", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1061", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1066", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1071", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1074", %"class.blink::Member.1076", %"class.blink::Member.1078", %"class.blink::Member.1080", %"class.mojo::StructPtr.1083", %"class.blink::Member.1092", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1094", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.952" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.953" }
%"class.blink::HeapHashMap.953" = type { %"class.WTF::HashMap.956" }
%"class.WTF::HashMap.956" = type { %"class.WTF::HashTable.957" }
%"class.WTF::HashTable.957" = type <{ %"struct.WTF::KeyValuePair.959"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.959" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.960" = type { %"class.std::__1::__compressed_pair.961" }
%"class.std::__1::__compressed_pair.961" = type { %"struct.std::__1::__compressed_pair_elem.962" }
%"struct.std::__1::__compressed_pair_elem.962" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.748", %"class.base::WeakPtrFactory.753" }
%"class.WTF::HashMap.748" = type { %"class.WTF::HashTable.749" }
%"class.WTF::HashTable.749" = type <{ %"struct.WTF::KeyValuePair.752"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.752" = type opaque
%"class.base::WeakPtrFactory.753" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.966" }
%"class.blink::Member.966" = type { %"class.blink::MemberBase.967" }
%"class.blink::MemberBase.967" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.761" }
%"class.blink::WeakMember.761" = type { %"class.blink::MemberBase.762" }
%"class.blink::MemberBase.762" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.2060", i64, %"class.std::__1::map.2061", i8*, i64, %"class.base::WeakPtrFactory.2070" }
%"class.base::RepeatingCallback.2060" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2061" = type { %"class.std::__1::__tree.2062" }
%"class.std::__1::__tree.2062" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2063", %"class.std::__1::__compressed_pair.2067" }
%"class.std::__1::__compressed_pair.2063" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.2067" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"class.base::WeakPtrFactory.2070" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.968" = type { %"class.WTF::HashSet.971" }
%"class.WTF::HashSet.971" = type { %"class.WTF::HashTable.972" }
%"class.WTF::HashTable.972" = type <{ %"class.blink::WeakMember.974"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.974" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.763", %"class.blink::Member.975", %"class.blink::Member.977", %"class.std::__1::unique_ptr.979", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.991" }
%"class.blink::Member.975" = type { %"class.blink::MemberBase.976" }
%"class.blink::MemberBase.976" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.977" = type { %"class.blink::MemberBase.978" }
%"class.blink::MemberBase.978" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.979" = type { %"class.std::__1::__compressed_pair.980" }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.981" }
%"struct.std::__1::__compressed_pair_elem.981" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.982" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.982" = type { %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { %"class.blink::KURL"* }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.WTF::HashSet.991" = type { %"class.WTF::HashTable.992" }
%"class.WTF::HashTable.992" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.995" = type { %"class.blink::MemberBase.996" }
%"class.blink::MemberBase.996" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1101", %"class.blink::Member.763", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer", i8, i32, %"class.blink::Color", %"class.absl::optional.1109", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1114", %"class.blink::Member.1116", %"class.blink::Member.1116", %"class.std::__1::unique_ptr.1119", i32, [4 x i8], %"class.WTF::HashSet.1122", %"class.blink::Member.1129", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1131", %"class.blink::HeapHashSet.1138", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1146", i8, %"class.blink::Member.1152", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1164", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1178", i8, %"class.std::__1::unique_ptr.1184", %"class.std::__1::unique_ptr.1301", %"class.WTF::Vector.1307", i32, %class.scoped_refptr.1312, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1313", %"class.blink::Member.1315", %"class.blink::Member.1317", %"class.blink::HeapHashSet.1319", %"class.blink::HeapHashSet.1326", %"class.std::__1::unique_ptr.1333", %"class.std::__1::unique_ptr.1339", %"class.WTF::Vector.1350" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1101" = type { %"class.WTF::HashTable.1102" }
%"class.WTF::HashTable.1102" = type <{ %class.scoped_refptr.1105*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1105 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1108", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1106, %"class.base::WeakPtrFactory.1107" }
%class.scoped_refptr.1106 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.1107" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1108" = type { %"class.blink::MemberBase.996" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1109" = type { %"class.absl::optional_internal::optional_data.1110" }
%"class.absl::optional_internal::optional_data.1110" = type { %"class.absl::optional_internal::optional_data_base.1111" }
%"class.absl::optional_internal::optional_data_base.1111" = type { %"class.absl::optional_internal::optional_data_dtor_base.1112" }
%"class.absl::optional_internal::optional_data_dtor_base.1112" = type { i8, %union.anon.1113 }
%union.anon.1113 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1114" = type { %"class.blink::MemberBase.1115" }
%"class.blink::MemberBase.1115" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1116" = type { %"class.blink::MemberBase.1117" }
%"class.blink::MemberBase.1117" = type { %"class.blink::HeapHashSet.1118"* }
%"class.blink::HeapHashSet.1118" = type opaque
%"class.std::__1::unique_ptr.1119" = type { %"class.std::__1::__compressed_pair.1120" }
%"class.std::__1::__compressed_pair.1120" = type { %"struct.std::__1::__compressed_pair_elem.1121" }
%"struct.std::__1::__compressed_pair_elem.1121" = type { %"class.WTF::HashSet.1122"* }
%"class.WTF::HashSet.1122" = type { %"class.WTF::HashTable.1123" }
%"class.WTF::HashTable.1123" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1129" = type { %"class.blink::MemberBase.1130" }
%"class.blink::MemberBase.1130" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1131" = type { %"class.WTF::HashSet.1134" }
%"class.WTF::HashSet.1134" = type { %"class.WTF::HashTable.1135" }
%"class.WTF::HashTable.1135" = type <{ %"class.blink::Member.1137"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1137" = type opaque
%"class.blink::HeapHashSet.1138" = type { %"class.WTF::HashSet.1141" }
%"class.WTF::HashSet.1141" = type { %"class.WTF::HashTable.1142" }
%"class.WTF::HashTable.1142" = type <{ %"class.blink::Member.1144"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1144" = type { %"class.blink::MemberBase.1145" }
%"class.blink::MemberBase.1145" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1378", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1389", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.834" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1378" = type { %"class.blink::MemberBase.1379" }
%"class.blink::MemberBase.1379" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1380", %"class.blink::Member.1381", %"class.blink::Member.1383", %"class.blink::Member.1385", %"class.blink::Member.1387", %"class.WTF::Vector.1350", i16, %class.scoped_refptr.1106 }
%"class.blink::ThreadState::PrefinalizerRegistration.1380" = type { i8 }
%"class.blink::Member.1381" = type { %"class.blink::MemberBase.1382" }
%"class.blink::MemberBase.1382" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1383" = type { %"class.blink::MemberBase.1384" }
%"class.blink::MemberBase.1384" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1385" = type { %"class.blink::MemberBase.1386" }
%"class.blink::MemberBase.1386" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1387" = type { %"class.blink::MemberBase.1388" }
%"class.blink::MemberBase.1388" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1389" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1390", { i64, i64 } }
%"class.blink::WeakMember.1390" = type { %"class.blink::MemberBase.1145" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1146" = type { %"class.std::__1::__compressed_pair.1147" }
%"class.std::__1::__compressed_pair.1147" = type { %"struct.std::__1::__compressed_pair_elem.1148" }
%"struct.std::__1::__compressed_pair_elem.1148" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1152" = type { %"class.blink::MemberBase.1153" }
%"class.blink::MemberBase.1153" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1156", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1156" = type { %"class.WTF::HashTable.1157" }
%"class.WTF::HashTable.1157" = type <{ %"struct.WTF::KeyValuePair.1159"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1159" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1160", i32, i32 }
%"class.WTF::Vector.1160" = type { %"class.WTF::VectorBuffer.1161" }
%"class.WTF::VectorBuffer.1161" = type { %"class.WTF::VectorBufferBase.1162" }
%"class.WTF::VectorBufferBase.1162" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1164" = type { %"class.WTF::LinkedHashSet.1167" }
%"class.WTF::LinkedHashSet.1167" = type { %"class.WTF::HashMap.1168", %"class.WTF::VectorBackedLinkedList.1172" }
%"class.WTF::HashMap.1168" = type { %"class.WTF::HashTable.1169" }
%"class.WTF::HashTable.1169" = type <{ %"struct.WTF::KeyValuePair.1171"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1171" = type opaque
%"class.WTF::VectorBackedLinkedList.1172" = type { %"class.WTF::Vector.1173", i32, i32 }
%"class.WTF::Vector.1173" = type { %"class.WTF::VectorBuffer.1174" }
%"class.WTF::VectorBuffer.1174" = type { %"class.WTF::VectorBufferBase.1175" }
%"class.WTF::VectorBufferBase.1175" = type { %"class.WTF::VectorBackedLinkedListNode.1176"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1176" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1178" = type { %"class.std::__1::__compressed_pair.1179" }
%"class.std::__1::__compressed_pair.1179" = type { %"struct.std::__1::__compressed_pair_elem.1180" }
%"struct.std::__1::__compressed_pair_elem.1180" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1184" = type { %"class.std::__1::__compressed_pair.1185" }
%"class.std::__1::__compressed_pair.1185" = type { %"struct.std::__1::__compressed_pair_elem.1186" }
%"struct.std::__1::__compressed_pair_elem.1186" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1187, %class.scoped_refptr.1187, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1278", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1283", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1187 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1188", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1195" }
%"class.WTF::RefCounted.1188" = type { %"class.base::RefCounted.1189" }
%"class.base::RefCounted.1189" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1190", i32, [4 x i8] }>
%"class.WTF::Vector.1190" = type { %"class.WTF::VectorBuffer.1191" }
%"class.WTF::VectorBuffer.1191" = type { %"class.WTF::VectorBufferBase.1192" }
%"class.WTF::VectorBufferBase.1192" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1195" = type { %"class.WTF::VectorBuffer.1196" }
%"class.WTF::VectorBuffer.1196" = type { %"class.WTF::VectorBufferBase.1197" }
%"class.WTF::VectorBufferBase.1197" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1201", %"class.std::__1::unique_ptr.1250", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1198, %class.scoped_refptr.1199, %class.scoped_refptr.1200 }
%class.scoped_refptr.1198 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1214", i8, i8, %class.scoped_refptr.1198, i32, i32 }
%"class.WTF::RefCounted.1214" = type { %"class.base::RefCounted.1215" }
%"class.base::RefCounted.1215" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1199 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1373" }
%"class.blink::PaintPropertyNode.1373" = type { %"class.WTF::RefCounted.1374", i8, i8, %class.scoped_refptr.1199, i32, i32 }
%"class.WTF::RefCounted.1374" = type { %"class.base::RefCounted.1375" }
%"class.base::RefCounted.1375" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1200 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1370" }
%"class.blink::PaintPropertyNode.1370" = type { %"class.WTF::RefCounted.1371", i8, i8, %class.scoped_refptr.1200, i32, i32 }
%"class.WTF::RefCounted.1371" = type { %"class.base::RefCounted.1372" }
%"class.base::RefCounted.1372" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1201" = type { %"class.std::__1::__compressed_pair.1202" }
%"class.std::__1::__compressed_pair.1202" = type { %"struct.std::__1::__compressed_pair_elem.1203" }
%"struct.std::__1::__compressed_pair_elem.1203" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1204", %"class.WTF::Vector.1209", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1204" = type { %"class.WTF::VectorBuffer.1205" }
%"class.WTF::VectorBuffer.1205" = type { %"class.WTF::VectorBufferBase.1206" }
%"class.WTF::VectorBufferBase.1206" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1209" = type { %"class.WTF::VectorBuffer.1210" }
%"class.WTF::VectorBuffer.1210" = type { %"class.WTF::VectorBufferBase.1211" }
%"class.WTF::VectorBufferBase.1211" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1229" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1222, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1223", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1216" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1216" = type { %"class.std::__1::__compressed_pair.1217" }
%"class.std::__1::__compressed_pair.1217" = type { %"struct.std::__1::__compressed_pair_elem.1218" }
%"struct.std::__1::__compressed_pair_elem.1218" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1222 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1355", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1355" = type { %"class.WTF::RefCounted.1356", i8, i8, %class.scoped_refptr.1222, i32, i32 }
%"class.WTF::RefCounted.1356" = type { %"class.base::RefCounted.1357" }
%"class.base::RefCounted.1357" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1358" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1358" = type { %"class.absl::optional_internal::optional_data.1359" }
%"class.absl::optional_internal::optional_data.1359" = type { %"class.absl::optional_internal::optional_data_base.1360" }
%"class.absl::optional_internal::optional_data_base.1360" = type { %"class.absl::optional_internal::optional_data_dtor_base.1361" }
%"class.absl::optional_internal::optional_data_dtor_base.1361" = type { i8, %union.anon.1362 }
%union.anon.1362 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1363", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1363" = type { %"class.std::__1::__vector_base.1364" }
%"class.std::__1::__vector_base.1364" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1365" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1365" = type { %"struct.std::__1::__compressed_pair_elem.1366" }
%"struct.std::__1::__compressed_pair_elem.1366" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1223" = type { %"class.std::__1::__compressed_pair.1224" }
%"class.std::__1::__compressed_pair.1224" = type { %"struct.std::__1::__compressed_pair_elem.1225" }
%"struct.std::__1::__compressed_pair_elem.1225" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1229" = type { %"class.std::__1::__compressed_pair.1230" }
%"class.std::__1::__compressed_pair.1230" = type { %"struct.std::__1::__compressed_pair_elem.1231" }
%"struct.std::__1::__compressed_pair_elem.1231" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1232", %"class.std::__1::unique_ptr.1238", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1232" = type { %"class.std::__1::__compressed_pair.1233" }
%"class.std::__1::__compressed_pair.1233" = type { %"struct.std::__1::__compressed_pair_elem.1234" }
%"struct.std::__1::__compressed_pair_elem.1234" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1238" = type { %"class.std::__1::__compressed_pair.1239" }
%"class.std::__1::__compressed_pair.1239" = type { %"struct.std::__1::__compressed_pair_elem.1240" }
%"struct.std::__1::__compressed_pair_elem.1240" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1250" = type { %"class.std::__1::__compressed_pair.1251" }
%"class.std::__1::__compressed_pair.1251" = type { %"struct.std::__1::__compressed_pair_elem.1252" }
%"struct.std::__1::__compressed_pair_elem.1252" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1253", %"class.absl::optional.1253" }
%"class.absl::optional.1253" = type { %"class.absl::optional_internal::optional_data.1254" }
%"class.absl::optional_internal::optional_data.1254" = type { %"class.absl::optional_internal::optional_data_base.1255" }
%"class.absl::optional_internal::optional_data_base.1255" = type { %"class.absl::optional_internal::optional_data_dtor_base.1256" }
%"class.absl::optional_internal::optional_data_dtor_base.1256" = type { i8, [3 x i8], %union.anon.1257 }
%union.anon.1257 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1195"*, %"class.absl::optional.1263", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1263" = type { %"class.absl::optional_internal::optional_data.1264" }
%"class.absl::optional_internal::optional_data.1264" = type { %"class.absl::optional_internal::optional_data_base.1265" }
%"class.absl::optional_internal::optional_data_base.1265" = type { %"class.absl::optional_internal::optional_data_dtor_base.1266" }
%"class.absl::optional_internal::optional_data_dtor_base.1266" = type { i8, %union.anon.1267 }
%union.anon.1267 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1268", %"class.WTF::Vector.1273" }
%"class.WTF::Vector.1268" = type { %"class.WTF::VectorBuffer.1269" }
%"class.WTF::VectorBuffer.1269" = type { %"class.WTF::VectorBufferBase.1270", [128 x i8] }
%"class.WTF::VectorBufferBase.1270" = type { i32*, i32, i32 }
%"class.WTF::Vector.1273" = type { %"class.WTF::VectorBuffer.1274" }
%"class.WTF::VectorBuffer.1274" = type { %"class.WTF::VectorBufferBase.1275", [128 x i8] }
%"class.WTF::VectorBufferBase.1275" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1278" = type { %"class.WTF::VectorBuffer.1279" }
%"class.WTF::VectorBuffer.1279" = type { %"class.WTF::VectorBufferBase.1280" }
%"class.WTF::VectorBufferBase.1280" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1283" = type { %"class.WTF::HashTable.1284" }
%"class.WTF::HashTable.1284" = type <{ %"struct.WTF::KeyValuePair.1287"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1287" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1288", %"class.WTF::Vector.1293" }
%"class.WTF::HashMap.1288" = type { %"class.WTF::HashTable.1289" }
%"class.WTF::HashTable.1289" = type <{ %"struct.WTF::KeyValuePair.1292"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1292" = type opaque
%"class.WTF::Vector.1293" = type { %"class.WTF::VectorBuffer.1294" }
%"class.WTF::VectorBuffer.1294" = type { %"class.WTF::VectorBufferBase.1295" }
%"class.WTF::VectorBufferBase.1295" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1301" = type { %"class.std::__1::__compressed_pair.1302" }
%"class.std::__1::__compressed_pair.1302" = type { %"struct.std::__1::__compressed_pair_elem.1303" }
%"struct.std::__1::__compressed_pair_elem.1303" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1307" = type { %"class.WTF::VectorBuffer.1308" }
%"class.WTF::VectorBuffer.1308" = type { %"class.WTF::VectorBufferBase.1309" }
%"class.WTF::VectorBufferBase.1309" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1312 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1313" = type { %"class.blink::MemberBase.1314" }
%"class.blink::MemberBase.1314" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1315" = type { %"class.blink::MemberBase.1316" }
%"class.blink::MemberBase.1316" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1317" = type { %"class.blink::MemberBase.1318" }
%"class.blink::MemberBase.1318" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1319" = type { %"class.WTF::HashSet.1322" }
%"class.WTF::HashSet.1322" = type { %"class.WTF::HashTable.1323" }
%"class.WTF::HashTable.1323" = type <{ %"class.blink::WeakMember.1325"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1325" = type opaque
%"class.blink::HeapHashSet.1326" = type { %"class.WTF::HashSet.1329" }
%"class.WTF::HashSet.1329" = type { %"class.WTF::HashTable.1330" }
%"class.WTF::HashTable.1330" = type <{ %"class.blink::WeakMember.1332"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1332" = type opaque
%"class.std::__1::unique_ptr.1333" = type { %"class.std::__1::__compressed_pair.1334" }
%"class.std::__1::__compressed_pair.1334" = type { %"struct.std::__1::__compressed_pair_elem.1335" }
%"struct.std::__1::__compressed_pair_elem.1335" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1339" = type { %"class.std::__1::__compressed_pair.1340" }
%"class.std::__1::__compressed_pair.1340" = type { %"struct.std::__1::__compressed_pair_elem.1341" }
%"struct.std::__1::__compressed_pair_elem.1341" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1342", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1342" = type { %"class.absl::optional_internal::optional_data.1343" }
%"class.absl::optional_internal::optional_data.1343" = type { %"class.absl::optional_internal::optional_data_base.1344" }
%"class.absl::optional_internal::optional_data_base.1344" = type { %"class.absl::optional_internal::optional_data_dtor_base.1345" }
%"class.absl::optional_internal::optional_data_dtor_base.1345" = type { i8, %union.anon.1346 }
%union.anon.1346 = type { %"class.base::Time" }
%"class.WTF::Vector.1350" = type { %"class.WTF::VectorBuffer.1351" }
%"class.WTF::VectorBuffer.1351" = type { %"class.WTF::VectorBufferBase.1352" }
%"class.WTF::VectorBufferBase.1352" = type { %"class.base::OnceCallback.175"*, i32, i32 }
%"class.blink::Member.834" = type { %"class.blink::MemberBase.835" }
%"class.blink::MemberBase.835" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.839" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.767", %"class.blink::Member.767" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.767", %"class.blink::Member.769", %"class.blink::Member.767", %"class.blink::Member.767", %"class.blink::Member.771" }
%"class.blink::Member.769" = type { %"class.blink::MemberBase.770" }
%"class.blink::MemberBase.770" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.817", %"class.blink::Member.632", %"class.blink::Member.769", %"class.blink::Member.819", %"class.blink::Member.819", %"class.blink::Member.862", %"class.blink::Member.864", %"class.blink::Member.866", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.871", %"class.blink::HeapVector.873" }
%"class.blink::Member.817" = type { %"class.blink::MemberBase.818" }
%"class.blink::MemberBase.818" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.819" = type { %"class.blink::MemberBase.820" }
%"class.blink::MemberBase.820" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.823" }
%"class.blink::HeapHashMap.823" = type { %"class.WTF::HashMap.826" }
%"class.WTF::HashMap.826" = type { %"class.WTF::HashTable.827" }
%"class.WTF::HashTable.827" = type <{ %"struct.WTF::KeyValuePair.829"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.829" = type { %"class.WTF::AtomicString", %"class.blink::Member.830" }
%"class.blink::Member.830" = type { %"class.blink::MemberBase.831" }
%"class.blink::MemberBase.831" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.834", i32, %"class.blink::HeapVector.855" }
%"class.blink::HeapVector.855" = type { %"class.WTF::Vector.858" }
%"class.WTF::Vector.858" = type { %"class.WTF::VectorBuffer.859" }
%"class.WTF::VectorBuffer.859" = type { %"class.WTF::VectorBufferBase.860" }
%"class.WTF::VectorBufferBase.860" = type { %"class.blink::Member.834"*, i32, i32 }
%"class.blink::Member.862" = type { %"class.blink::MemberBase.863" }
%"class.blink::MemberBase.863" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.864" = type { %"class.blink::MemberBase.865" }
%"class.blink::MemberBase.865" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.866" = type { %"class.blink::MemberBase.867" }
%"class.blink::MemberBase.867" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.868" }
%"class.blink::Member.868" = type { %"class.blink::MemberBase.869" }
%"class.blink::MemberBase.869" = type { %"class.blink::HeapHashMap.870"* }
%"class.blink::HeapHashMap.870" = type opaque
%"class.blink::Member.871" = type { %"class.blink::MemberBase.872" }
%"class.blink::MemberBase.872" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.873" = type { %"class.WTF::Vector.876" }
%"class.WTF::Vector.876" = type { %"class.WTF::VectorBuffer.877" }
%"class.WTF::VectorBuffer.877" = type { %"class.WTF::VectorBufferBase.878" }
%"class.WTF::VectorBufferBase.878" = type { %"class.blink::Member.879"*, i32, i32 }
%"class.blink::Member.879" = type { %"class.blink::MemberBase.880" }
%"class.blink::MemberBase.880" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.881", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.883, %"class.WTF::Vector.884", %"class.WTF::Vector.884", %"class.blink::Member.767", %"class.blink::Member.889", %"class.blink::HeapHashSet.893", %"class.blink::Member.632", %"class.WTF::HashSet.900", %"class.WTF::TextPosition", %"class.blink::Member.904", %"class.blink::HeapVector.906", %"class.blink::Member.913" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.881" = type { %"class.blink::MemberBase.882" }
%"class.blink::MemberBase.882" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.883 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.884" = type { %"class.WTF::VectorBuffer.885" }
%"class.WTF::VectorBuffer.885" = type { %"class.WTF::VectorBufferBase.886" }
%"class.WTF::VectorBufferBase.886" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.889" = type { %"class.blink::MemberBase.890" }
%"class.blink::MemberBase.890" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.891" }
%"class.blink::Member.891" = type { %"class.blink::MemberBase.892" }
%"class.blink::MemberBase.892" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.893" = type { %"class.WTF::HashSet.896" }
%"class.WTF::HashSet.896" = type { %"class.WTF::HashTable.897" }
%"class.WTF::HashTable.897" = type <{ %"class.blink::WeakMember.899"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.899" = type { %"class.blink::MemberBase.770" }
%"class.WTF::HashSet.900" = type { %"class.WTF::HashTable.901" }
%"class.WTF::HashTable.901" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.904" = type { %"class.blink::MemberBase.905" }
%"class.blink::MemberBase.905" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.906" = type { %"class.WTF::Vector.909" }
%"class.WTF::Vector.909" = type { %"class.WTF::VectorBuffer.910" }
%"class.WTF::VectorBuffer.910" = type { %"class.WTF::VectorBufferBase.911" }
%"class.WTF::VectorBufferBase.911" = type { %"class.blink::Member.889"*, i32, i32 }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::Member.771" = type { %"class.blink::MemberBase.772" }
%"class.blink::MemberBase.772" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.767" = type { %"class.blink::MemberBase.768" }
%"class.blink::MemberBase.768" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.836 }
%class.scoped_refptr.836 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.837", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.837" = type { %"class.base::RefCounted.838" }
%"class.base::RefCounted.838" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.839" = type { %"class.blink::MemberBase.840" }
%"class.blink::MemberBase.840" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.843", %"class.blink::Member.845", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.843" = type { %"class.WTF::SingleThreadedBitField.844" }
%"class.WTF::SingleThreadedBitField.844" = type { i32 }
%"class.blink::Member.845" = type { %"class.blink::MemberBase.846" }
%"class.blink::MemberBase.846" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.847 }
%class.scoped_refptr.847 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.848", %"class.WTF::AtomicString", %"class.WTF::Vector.850" }
%"class.WTF::RefCounted.848" = type { %"class.base::RefCounted.849" }
%"class.base::RefCounted.849" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.850" = type { %"class.WTF::VectorBuffer.851" }
%"class.WTF::VectorBuffer.851" = type { %"class.WTF::VectorBufferBase.852", [32 x i8] }
%"class.WTF::VectorBufferBase.852" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.997" = type { %"class.blink::MemberBase.998" }
%"class.blink::MemberBase.998" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.999" = type { %"class.blink::MemberBase.1000" }
%"class.blink::MemberBase.1000" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1001" = type { %"class.blink::MemberBase.1002" }
%"class.blink::MemberBase.1002" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1003" = type { %"class.blink::MemberBase.1004" }
%"class.blink::MemberBase.1004" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1005" = type { %"class.blink::MemberBase.1006" }
%"class.blink::MemberBase.1006" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.1007 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1008" = type { %"class.blink::MemberBase.1009" }
%"class.blink::MemberBase.1009" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1010" = type { %"class.blink::MemberBase.1011" }
%"class.blink::MemberBase.1011" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1012" = type { %"class.blink::MemberBase.1013" }
%"class.blink::MemberBase.1013" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1014" = type { %"class.blink::MemberBase.1015" }
%"class.blink::MemberBase.1015" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1016" = type { %"class.blink::MemberBase.1017" }
%"class.blink::MemberBase.1017" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1018" = type { %"class.blink::MemberBase.1019" }
%"class.blink::MemberBase.1019" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1020" = type { %"class.blink::MemberBase.1021" }
%"class.blink::MemberBase.1021" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.1022" = type { %"class.blink::Member.1023" }
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2073" }
%"class.mojo::Remote.2073" = type { %"class.mojo::internal::InterfacePtrState.2074" }
%"class.mojo::internal::InterfacePtrState.2074" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2075" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.516, %"class.std::__1::unique_ptr.146", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.165, i32 }>
%class.scoped_refptr.516 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.165, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.574", %"class.absl::optional.579", %"class.absl::optional.533", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.599", i8, [7 x i8], %class.scoped_refptr.165, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.187" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.175", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.165, %"class.std::__1::unique_ptr.517", %"class.absl::optional.527", %"struct.std::__1::atomic.498", i8, i8, i8, i8, i32, i32, %"class.absl::optional.533", %"class.std::__1::unique_ptr.538", i8, i64, %class.scoped_refptr.571, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.573" }
%"class.std::__1::unique_ptr.517" = type { %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.165, i8, %"class.mojo::ScopedHandleBase.520", %class.scoped_refptr.521, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.522", i8*, %"class.base::WeakPtrFactory.523" }
%"class.mojo::ScopedHandleBase.520" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.521 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.522" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.523" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.527" = type { %"class.absl::optional_internal::optional_data.528" }
%"class.absl::optional_internal::optional_data.528" = type { %"class.absl::optional_internal::optional_data_base.529" }
%"class.absl::optional_internal::optional_data_base.529" = type { %"class.absl::optional_internal::optional_data_dtor_base.530" }
%"class.absl::optional_internal::optional_data_dtor_base.530" = type { i8, %union.anon.531 }
%union.anon.531 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.532", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.532" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.541", i8, i64, %class.scoped_refptr.542, %class.scoped_refptr.567 }
%"class.base::RepeatingCallback.541" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.542 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.543", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.545", %"class.std::__1::map.556", i8, [7 x i8] }>
%"class.base::RefCounted.543" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.544 }
%class.scoped_refptr.544 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.545" = type { %"class.std::__1::__tree.546" }
%"class.std::__1::__tree.546" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.547", %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"class.std::__1::map.556" = type { %"class.std::__1::__tree.557" }
%"class.std::__1::__tree.557" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.558", %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%class.scoped_refptr.567 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.571 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.572 }
%class.scoped_refptr.572 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.573" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.574" = type { %"class.absl::optional_internal::optional_data.575" }
%"class.absl::optional_internal::optional_data.575" = type { %"class.absl::optional_internal::optional_data_base.576" }
%"class.absl::optional_internal::optional_data_base.576" = type { %"class.absl::optional_internal::optional_data_dtor_base.577" }
%"class.absl::optional_internal::optional_data_dtor_base.577" = type { i8, %union.anon.578 }
%union.anon.578 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.579" = type { %"class.absl::optional_internal::optional_data.580" }
%"class.absl::optional_internal::optional_data.580" = type { %"class.absl::optional_internal::optional_data_base.581" }
%"class.absl::optional_internal::optional_data_base.581" = type { %"class.absl::optional_internal::optional_data_dtor_base.582" }
%"class.absl::optional_internal::optional_data_dtor_base.582" = type { i8, [7 x i8], %union.anon.583 }
%union.anon.583 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.533" = type { %"class.absl::optional_internal::optional_data.534" }
%"class.absl::optional_internal::optional_data.534" = type { %"class.absl::optional_internal::optional_data_base.535" }
%"class.absl::optional_internal::optional_data_base.535" = type { %"class.absl::optional_internal::optional_data_dtor_base.536" }
%"class.absl::optional_internal::optional_data_dtor_base.536" = type { i8, %union.anon.537 }
%union.anon.537 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.584 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.584 = type { %"class.std::__1::map.587" }
%"class.std::__1::map.587" = type { %"class.std::__1::__tree.588" }
%"class.std::__1::__tree.588" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.589", %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.598"*, i64 }
%"class.std::__1::unique_ptr.598" = type opaque
%"class.std::__1::map.599" = type { %"class.std::__1::__tree.600" }
%"class.std::__1::__tree.600" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.601", %"class.std::__1::__compressed_pair.605" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2075" = type { %"class.std::__1::__compressed_pair.2076" }
%"class.std::__1::__compressed_pair.2076" = type { %"struct.std::__1::__compressed_pair_elem.2077" }
%"struct.std::__1::__compressed_pair_elem.2077" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1025" = type { %"class.std::__1::__compressed_pair.1026" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.1027" }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.1028, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.1028 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.1029", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.1029" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.1030" }
%"class.std::__1::vector.1030" = type { %"class.std::__1::__vector_base.1031" }
%"class.std::__1::__vector_base.1031" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.1032" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.1033" }
%"struct.std::__1::__compressed_pair_elem.1033" = type { %"class.blink::WebString"* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.1037, i8, [7 x i8] }>
%class.scoped_refptr.1037 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.1038", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.1038" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1039" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1039" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1046" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1047" = type { %"class.std::__1::__compressed_pair.1048" }
%"class.std::__1::__compressed_pair.1048" = type { %"struct.std::__1::__compressed_pair_elem.1049" }
%"struct.std::__1::__compressed_pair_elem.1049" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.1053" = type { %"class.std::__1::__compressed_pair.1054" }
%"class.std::__1::__compressed_pair.1054" = type { %"struct.std::__1::__compressed_pair_elem.1055" }
%"struct.std::__1::__compressed_pair_elem.1055" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1059" }
%"class.blink::Member.1059" = type { %"class.blink::MemberBase.1060" }
%"class.blink::MemberBase.1060" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2083" }
%"class.mojo::AssociatedRemote.2083" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2084" }
%"class.mojo::internal::AssociatedInterfacePtrState.2084" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2085" }
%"class.std::__1::unique_ptr.2085" = type { %"class.std::__1::__compressed_pair.2086" }
%"class.std::__1::__compressed_pair.2086" = type { %"struct.std::__1::__compressed_pair_elem.2087" }
%"struct.std::__1::__compressed_pair_elem.2087" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1061" = type { %"class.blink::Member.1062" }
%"class.blink::Member.1062" = type { %"class.blink::MemberBase.1063" }
%"class.blink::MemberBase.1063" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2093" }
%"class.mojo::AssociatedRemote.2093" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2094" }
%"class.mojo::internal::AssociatedInterfacePtrState.2094" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2095" }
%"class.std::__1::unique_ptr.2095" = type { %"class.std::__1::__compressed_pair.2096" }
%"class.std::__1::__compressed_pair.2096" = type { %"struct.std::__1::__compressed_pair_elem.2097" }
%"struct.std::__1::__compressed_pair_elem.2097" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1064" }
%"class.blink::Member.1064" = type { %"class.blink::MemberBase.1065" }
%"class.blink::MemberBase.1065" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2103", %"class.blink::Member.763", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2103" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2104" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.146" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2104" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1066" = type { %"class.blink::Member.1067" }
%"class.blink::Member.1067" = type { %"class.blink::MemberBase.1068" }
%"class.blink::MemberBase.1068" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2107", %"class.blink::Member.763", %"class.mojo::AssociatedReceiver.2108" }
%"class.blink::ThreadState::PrefinalizerRegistration.2107" = type { i8 }
%"class.mojo::AssociatedReceiver.2108" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2109" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2109" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1069" }
%"class.blink::Member.1069" = type { %"class.blink::MemberBase.1070" }
%"class.blink::MemberBase.1070" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2112", %"class.blink::Member.763", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2112" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.516, %"class.std::__1::unique_ptr.146", %"class.base::WeakPtrFactory.2113" }
%"class.base::WeakPtrFactory.2113" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1071" = type { %"class.blink::Member.1072" }
%"class.blink::Member.1072" = type { %"class.blink::MemberBase.1073" }
%"class.blink::MemberBase.1073" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2116", %"class.blink::Member.763", %"class.mojo::AssociatedReceiver.2117" }
%"class.blink::ThreadState::PrefinalizerRegistration.2116" = type { i8 }
%"class.mojo::AssociatedReceiver.2117" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2118" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2118" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1074" = type { %"class.blink::MemberBase.1075" }
%"class.blink::MemberBase.1075" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1076" = type { %"class.blink::MemberBase.1077" }
%"class.blink::MemberBase.1077" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1078" = type { %"class.blink::MemberBase.1079" }
%"class.blink::MemberBase.1079" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1080" = type { %"class.blink::MemberBase.1081" }
%"class.blink::MemberBase.1081" = type { %"class.blink::HeapHashMap.1082"* }
%"class.blink::HeapHashMap.1082" = type opaque
%"class.mojo::StructPtr.1083" = type { %"class.std::__1::unique_ptr.1084" }
%"class.std::__1::unique_ptr.1084" = type { %"class.std::__1::__compressed_pair.1085" }
%"class.std::__1::__compressed_pair.1085" = type { %"struct.std::__1::__compressed_pair_elem.1086" }
%"struct.std::__1::__compressed_pair_elem.1086" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1087", %"class.mojo::InlinedStructPtr.1088" }
%"class.mojo::InlinedStructPtr.1087" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1088" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1092" = type { %"class.blink::MemberBase.1093" }
%"class.blink::MemberBase.1093" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1094" = type { %"class.absl::optional_internal::optional_data.1095" }
%"class.absl::optional_internal::optional_data.1095" = type { %"class.absl::optional_internal::optional_data_base.1096" }
%"class.absl::optional_internal::optional_data_base.1096" = type { %"class.absl::optional_internal::optional_data_dtor_base.1097" }
%"class.absl::optional_internal::optional_data_dtor_base.1097" = type { i8, %union.anon.1098 }
%union.anon.1098 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.294", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair.926"*, %"struct.std::__1::pair.926"*, %"class.std::__1::__compressed_pair.927" }
%"struct.std::__1::pair.926" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.928" }
%"struct.std::__1::__compressed_pair_elem.928" = type { %"struct.std::__1::pair.926"* }
%"class.blink::Member.932" = type { %"class.blink::MemberBase.933" }
%"class.blink::MemberBase.933" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.934" = type { %"class.absl::optional_internal::optional_data.935" }
%"class.absl::optional_internal::optional_data.935" = type { %"class.absl::optional_internal::optional_data_base.936" }
%"class.absl::optional_internal::optional_data_base.936" = type { %"class.absl::optional_internal::optional_data_dtor_base.937" }
%"class.absl::optional_internal::optional_data_dtor_base.937" = type { i8, %union.anon.938 }
%union.anon.938 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.939" = type { %"class.absl::optional_internal::optional_data.940" }
%"class.absl::optional_internal::optional_data.940" = type { %"class.absl::optional_internal::optional_data_base.941" }
%"class.absl::optional_internal::optional_data_base.941" = type { %"class.absl::optional_internal::optional_data_dtor_base.942" }
%"class.absl::optional_internal::optional_data_dtor_base.942" = type { i8, %union.anon.943 }
%union.anon.943 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.944 }
%class.scoped_refptr.944 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.945" }
%"class.blink::HeapHashSet.945" = type { %"class.WTF::HashSet.948" }
%"class.WTF::HashSet.948" = type { %"class.WTF::HashTable.949" }
%"class.WTF::HashTable.949" = type <{ %"class.blink::WeakMember.951"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.951" = type opaque
%"class.blink::Member.296" = type { %"class.blink::MemberBase.297" }
%"class.blink::MemberBase.297" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type { %"class.v8::Isolate"*, %"class.blink::Member.294", i32, %"class.blink::Member.300", %"class.blink::HeapHashMap.502" }
%"class.blink::Member.300" = type { %"class.blink::MemberBase.301" }
%"class.blink::MemberBase.301" = type { %"class.blink::WindowProxy"* }
%"class.blink::WindowProxy" = type <{ i32 (...)**, %"class.v8::Isolate"*, %"class.blink::Member.294", %class.scoped_refptr.304, %"class.blink::TraceWrapperV8Reference", i32, [4 x i8] }>
%class.scoped_refptr.304 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.305", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.305" = type { %"class.base::RefCounted.306" }
%"class.base::RefCounted.306" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.309" }
%"class.blink::HeapHashMap.309" = type { %"class.WTF::HashMap.312" }
%"class.WTF::HashMap.312" = type { %"class.WTF::HashTable.313" }
%"class.WTF::HashTable.313" = type <{ %"struct.WTF::KeyValuePair.315"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.315" = type { %"class.blink::WeakMember.316", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.316" = type { %"class.blink::MemberBase.317" }
%"class.blink::MemberBase.317" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::HeapHashMap.502" = type { %"class.WTF::HashMap.505" }
%"class.WTF::HashMap.505" = type { %"class.WTF::HashTable.506" }
%"class.WTF::HashTable.506" = type <{ %"struct.WTF::KeyValuePair.508"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.508" = type opaque
%"class.blink::Member.509" = type { %"class.blink::MemberBase.510" }
%"class.blink::MemberBase.510" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.511" = type { %"class.blink::MemberBase.512" }
%"class.blink::MemberBase.512" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.513" = type { %"class.WTF::VectorBuffer.514" }
%"class.WTF::VectorBuffer.514" = type { %"class.WTF::VectorBufferBase.515" }
%"class.WTF::VectorBufferBase.515" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.608" }
%"class.std::__1::unique_ptr.608" = type { %"class.std::__1::__compressed_pair.609" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.76", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.85", %"class.blink::Member.87", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.96", %"class.blink::Member.238", %"class.blink::Member.240", i8 }>
%"class.blink::Supplementable.616" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.617" }
%"class.blink::HeapHashMap.617" = type { %"class.WTF::HashMap.620" }
%"class.WTF::HashMap.620" = type { %"class.WTF::HashTable.621" }
%"class.WTF::HashTable.621" = type <{ %"struct.WTF::KeyValuePair.623"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.623" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.624" = type { %"class.blink::MemberBase.625" }
%"class.blink::MemberBase.625" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type { %"class.blink::Member.628", %"class.blink::Member.630" }
%"class.blink::Member.628" = type { %"class.blink::MemberBase.629" }
%"class.blink::MemberBase.629" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::Member.630" = type { %"class.blink::MemberBase.631" }
%"class.blink::MemberBase.631" = type { %"class.blink::LocalWindowProxyManager"* }
%"class.blink::LocalWindowProxyManager" = type { %"class.blink::WindowProxyManagerImplHelper" }
%"class.blink::WindowProxyManagerImplHelper" = type { %"class.blink::WindowProxyManager" }
%"class.blink::Member.632" = type { %"class.blink::MemberBase.633" }
%"class.blink::MemberBase.633" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1391", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1350", %"class.WTF::Vector.1350", i8, i32, %"class.blink::Member.628", %"class.blink::Member", %"class.blink::Member.1399", %"class.blink::Member.1401", %"class.blink::Member.1403", %"class.blink::Member.1405", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1407", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1413", %"class.blink::Member.1415", %"class.blink::Member.879", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1417", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1423", %"class.blink::HeapVector.855", %"class.blink::Member.834", %"class.blink::Member.782", %"class.blink::Member.834", %"class.blink::Member.834", %"class.blink::Member.834", %"class.blink::UserActionElementSet", %"class.blink::Member.1432", double, double, i64, i64, %"class.blink::HeapHashSet.1434", %"class.blink::HeapHashSet.1441", i16, i8, %"class.blink::Member.1448", %"class.blink::Member.1450", %"class.blink::Member.1452", %"class.blink::Member.1454", %"class.blink::TextLinkColors", %"class.blink::Member.1456", i8, [7 x i8], %"class.blink::HeapHashMap.1458", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.834", %"class.WTF::Vector.1465", %"class.blink::Member.1470", %"class.blink::Member.1472", i8, %"class.blink::Member.834", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1474", %"class.blink::HeapVector.1476", %"class.std::__1::unique_ptr.1484", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1490", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1503", %"class.WTF::Vector.1505", i8, i8, %"class.std::__1::unique_ptr.1510", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.855", %"class.blink::HeapVector.1516", i32, i8, %"class.blink::HeapTaskRunnerTimer.1423", %"class.blink::HeapTaskRunnerTimer.1423", %"class.blink::DocumentTiming", %"class.blink::Member.1524", i8, i32, %"class.blink::Member.1526", %"class.blink::Member.1528", %"class.blink::Member.1530", %"class.blink::HeapTaskRunnerTimer.1423", %"class.blink::Member.1532", %"class.WTF::HashMap.1534", %"class.blink::Member.1539", %"class.blink::Member.1541", %"class.blink::Member.1543", %"class.blink::Member.1545", %"class.blink::Member.632", %"class.blink::Member.632", %"class.blink::HeapTaskRunnerTimer.1423", %"class.blink::HeapHashSet.1547", i8, i32, %"class.blink::Member.1554", %"class.blink::Member.1556", i32, %"class.blink::Member.1558", %"class.blink::Member.1560", %"class.blink::Member.1562", %"class.std::__1::unique_ptr.1564", i64, %"class.std::__1::unique_ptr.1570", i32, i32, %"class.blink::Member.1576", %"class.blink::Member.1578", %"class.blink::Member.1580", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1582", %"class.WTF::Vector.803", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1584", %"class.blink::Member.1591", %"class.std::__1::unique_ptr.1593", %"class.blink::Member.1599", i8, i8, %"class.WTF::String", %"class.blink::Member.1601", i8, [7 x i8], %"class.blink::HeapHashMap.1603", %"class.blink::HeapObserverSet.1610", %"class.blink::Member.1618", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1620", i32, i8, i8, %"class.blink::WeakMember.1622", %"class.blink::Member.1623" }
%"class.blink::Supplementable.1391" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1392" }
%"class.blink::HeapHashMap.1392" = type { %"class.WTF::HashMap.1395" }
%"class.WTF::HashMap.1395" = type { %"class.WTF::HashTable.1396" }
%"class.WTF::HashTable.1396" = type <{ %"struct.WTF::KeyValuePair.1398"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1398" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1399" = type { %"class.blink::MemberBase.1400" }
%"class.blink::MemberBase.1400" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration.1638", %"class.blink::Member.1639", %"class.blink::Member.1641", %"class.blink::Member.1643", %class.scoped_refptr.1106, %class.scoped_refptr.1106, %"class.blink::Member.1645", %"class.blink::Member.1647", %"class.blink::Member.1653", %"class.blink::Member.1657", %"class.blink::Member.1708", %"class.blink::HeapHashMap.1710", %"class.blink::HeapHashSet.1717", %"class.blink::HeapHashSet.1717", %"class.blink::HeapHashMap.1872", %"class.blink::HeapVector.1879", %"class.blink::Member.1887", %"class.blink::HeapTaskRunnerTimer.1889", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.1891", %"class.WTF::Vector.1898", %"class.blink::HeapHashSet.1904", %"class.blink::HeapHashSet.1904", %"class.std::__1::unique_ptr.1910", %"class.base::WeakPtr.1702", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote.1916", %"class.blink::Member.1919", i8, i8, %"class.base::WeakPtrFactory.1921" }
%"class.blink::ThreadState::PrefinalizerRegistration.1638" = type { i8 }
%"class.blink::Member.1639" = type { %"class.blink::MemberBase.1640" }
%"class.blink::MemberBase.1640" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.1641" = type { %"class.blink::MemberBase.1642" }
%"class.blink::MemberBase.1642" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type opaque
%"class.blink::Member.1643" = type { %"class.blink::MemberBase.1644" }
%"class.blink::MemberBase.1644" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%"class.blink::Member.1645" = type { %"class.blink::MemberBase.1646" }
%"class.blink::MemberBase.1646" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.1647" = type { %"class.blink::MemberBase.1648" }
%"class.blink::MemberBase.1648" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.1651" }
%"class.blink::Member.1651" = type { %"class.blink::MemberBase.1652" }
%"class.blink::MemberBase.1652" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.1653" = type { %"class.blink::MemberBase.1654" }
%"class.blink::MemberBase.1654" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.1657" = type { %"class.blink::MemberBase.1658" }
%"class.blink::MemberBase.1658" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.1661", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.1663", %"class.WTF::HashSet.1668", i8, [3 x i8], i32, %"class.blink::HeapHashMap.1672", %"class.std::__1::map.1679", %"class.std::__1::map.1690", %"class.std::__1::unique_ptr.1699", %"class.blink::Member.1647", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.1706", %"class.mojo::InlinedStructPtr.1088", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.1661" = type { %"class.blink::MemberBase.1662" }
%"class.blink::MemberBase.1662" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.1663" = type { %"class.WTF::HashTable.1664" }
%"class.WTF::HashTable.1664" = type <{ %"struct.WTF::KeyValuePair.1667"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1667" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.1668" = type { %"class.WTF::HashTable.1669" }
%"class.WTF::HashTable.1669" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.1672" = type { %"class.WTF::HashMap.1675" }
%"class.WTF::HashMap.1675" = type { %"class.WTF::HashTable.1676" }
%"class.WTF::HashTable.1676" = type <{ %"struct.WTF::KeyValuePair.1678"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1678" = type opaque
%"class.std::__1::map.1679" = type { %"class.std::__1::__tree.1680" }
%"class.std::__1::__tree.1680" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1681", %"class.std::__1::__compressed_pair.1685" }
%"class.std::__1::__compressed_pair.1681" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.1685" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"class.std::__1::map.1690" = type { %"class.std::__1::__tree.1691" }
%"class.std::__1::__tree.1691" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1692", %"class.std::__1::__compressed_pair.1696" }
%"class.std::__1::__compressed_pair.1692" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.1696" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"class.std::__1::unique_ptr.1699" = type { %"class.std::__1::__compressed_pair.1700" }
%"class.std::__1::__compressed_pair.1700" = type { %"struct.std::__1::__compressed_pair_elem.1701" }
%"struct.std::__1::__compressed_pair_elem.1701" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.1702", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.1706" = type { %"class.blink::MemberBase.1707" }
%"class.blink::MemberBase.1707" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.blink::Member.1708" = type { %"class.blink::MemberBase.1709" }
%"class.blink::MemberBase.1709" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.1710" = type { %"class.WTF::HashMap.1713" }
%"class.WTF::HashMap.1713" = type { %"class.WTF::HashTable.1714" }
%"class.WTF::HashTable.1714" = type <{ %"struct.WTF::KeyValuePair.1716"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1716" = type opaque
%"class.blink::HeapHashSet.1717" = type { %"class.WTF::HashSet.1720" }
%"class.WTF::HashSet.1720" = type { %"class.WTF::HashTable.1721" }
%"class.WTF::HashTable.1721" = type <{ %"class.blink::WeakMember.1723"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1723" = type { %"class.blink::MemberBase.1724" }
%"class.blink::MemberBase.1724" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.1727", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.1747", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.1830", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.1847", %"class.blink::ResourceResponse", %class.scoped_refptr.1849, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.1727" = type { %"class.absl::optional_internal::optional_data.1728" }
%"class.absl::optional_internal::optional_data.1728" = type { %"class.absl::optional_internal::optional_data_base.1729" }
%"class.absl::optional_internal::optional_data_base.1729" = type { %"class.absl::optional_internal::optional_data_dtor_base.1730" }
%"class.absl::optional_internal::optional_data_dtor_base.1730" = type { i8, %union.anon.1731 }
%union.anon.1731 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.1732", i8, %"class.absl::optional.1737", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.1732" = type { %"class.absl::optional_internal::optional_data.1733" }
%"class.absl::optional_internal::optional_data.1733" = type { %"class.absl::optional_internal::optional_data_base.1734" }
%"class.absl::optional_internal::optional_data_base.1734" = type { %"class.absl::optional_internal::optional_data_dtor_base.1735" }
%"class.absl::optional_internal::optional_data_dtor_base.1735" = type { i8, [7 x i8], %union.anon.1736 }
%union.anon.1736 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.1737" = type { %"class.absl::optional_internal::optional_data.1738" }
%"class.absl::optional_internal::optional_data.1738" = type { %"class.absl::optional_internal::optional_data_base.1739" }
%"class.absl::optional_internal::optional_data_base.1739" = type { %"class.absl::optional_internal::optional_data_dtor_base.1740" }
%"class.absl::optional_internal::optional_data_dtor_base.1740" = type { i8, %union.anon.1741 }
%union.anon.1741 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.1742", %"class.WTF::Vector.126" }
%"class.WTF::Vector.1742" = type { %"class.WTF::VectorBuffer.1743" }
%"class.WTF::VectorBuffer.1743" = type { %"class.WTF::VectorBufferBase.1744" }
%"class.WTF::VectorBufferBase.1744" = type { i32*, i32, i32 }
%"class.WTF::Vector.1747" = type { %"class.WTF::VectorBuffer.1748" }
%"class.WTF::VectorBuffer.1748" = type { %"class.WTF::VectorBufferBase.1749" }
%"class.WTF::VectorBufferBase.1749" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.1826" }
%"class.WTF::HashMap.1826" = type { %"class.WTF::HashTable.1827" }
%"class.WTF::HashTable.1827" = type <{ %"struct.WTF::KeyValuePair.1829"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1829" = type <{ %"class.blink::WeakMember.2138", i32, [4 x i8] }>
%"class.blink::WeakMember.2138" = type { %"class.blink::MemberBase.2139" }
%"class.blink::MemberBase.2139" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2140", [7 x i8], %"class.blink::Member.1885", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.2140" = type { i8 }
%"class.blink::Member.1885" = type { %"class.blink::MemberBase.1724" }
%"class.blink::HeapHashSet.1830" = type { %"class.WTF::HashSet.1833" }
%"class.WTF::HashSet.1833" = type { %"class.WTF::HashTable.1834" }
%"class.WTF::HashTable.1834" = type <{ %"class.blink::WeakMember.1836"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1836" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias.1837", %"class.WTF::String", %"class.WTF::HashSet.1838", i8, i8, %class.scoped_refptr.1420, %class.scoped_refptr.1843, %class.scoped_refptr.1845 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.base::StrongAlias.1837" = type { i8 }
%"class.WTF::HashSet.1838" = type { %"class.WTF::HashTable.1839" }
%"class.WTF::HashTable.1839" = type <{ %"struct.std::__1::pair.1842"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.1842" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.1420 = type { %"class.blink::DOMWrapperWorld"* }
%class.scoped_refptr.1843 = type { %"class.base::RefCountedData.1844"* }
%"class.base::RefCountedData.1844" = type opaque
%class.scoped_refptr.1845 = type { %"class.base::RefCountedData.1846"* }
%"class.base::RefCountedData.1846" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.41, %class.scoped_refptr.41, %class.scoped_refptr.41, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.1755, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.1768", %"class.absl::optional.1773", %"class.absl::optional.1783", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.939", %"class.absl::optional.1783", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.1783", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.939", %"class.absl::optional.1788", i8, %class.scoped_refptr.1794 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.1750" }
%"class.WTF::HashMap.1750" = type { %"class.WTF::HashTable.1751" }
%"class.WTF::HashTable.1751" = type <{ %"struct.WTF::KeyValuePair.1754"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1754" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.1755 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.1756", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector.1757", %class.scoped_refptr.1766, i8, %"class.url::Origin" }
%"class.base::RefCounted.1756" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector.1757" = type { %"class.std::__1::vector.1758" }
%"class.std::__1::vector.1758" = type { %"class.std::__1::__vector_base.1759" }
%"class.std::__1::__vector_base.1759" = type { %"class.std::__1::unique_ptr.1760"*, %"class.std::__1::unique_ptr.1760"*, %"class.std::__1::__compressed_pair.1761" }
%"class.std::__1::unique_ptr.1760" = type { %"class.std::__1::__compressed_pair.2119" }
%"class.std::__1::__compressed_pair.2119" = type { %"struct.std::__1::__compressed_pair_elem.2120" }
%"struct.std::__1::__compressed_pair_elem.2120" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1761" = type { %"struct.std::__1::__compressed_pair_elem.1762" }
%"struct.std::__1::__compressed_pair_elem.1762" = type { %"class.std::__1::unique_ptr.1760"* }
%class.scoped_refptr.1766 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1767", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1767" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.1768" = type { %"class.absl::optional_internal::optional_data.1769" }
%"class.absl::optional_internal::optional_data.1769" = type { %"class.absl::optional_internal::optional_data_base.1770" }
%"class.absl::optional_internal::optional_data_base.1770" = type { %"class.absl::optional_internal::optional_data_dtor_base.1771" }
%"class.absl::optional_internal::optional_data_dtor_base.1771" = type { i8, %union.anon.1772 }
%union.anon.1772 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.1773" = type { %"class.absl::optional_internal::optional_data.1774" }
%"class.absl::optional_internal::optional_data.1774" = type { %"class.absl::optional_internal::optional_data_base.1775" }
%"class.absl::optional_internal::optional_data_base.1775" = type { %"class.absl::optional_internal::optional_data_dtor_base.1776" }
%"class.absl::optional_internal::optional_data_dtor_base.1776" = type { i8, %union.anon.1777 }
%union.anon.1777 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.1778", %"class.WTF::Vector.126", %"class.WTF::String" }
%"class.WTF::Vector.1778" = type { %"class.WTF::VectorBuffer.1779" }
%"class.WTF::VectorBuffer.1779" = type { %"class.WTF::VectorBufferBase.1780" }
%"class.WTF::VectorBufferBase.1780" = type { %class.scoped_refptr.41*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.155", %"class.absl::optional.155" }
%"class.absl::optional.1783" = type { %"class.absl::optional_internal::optional_data.1784" }
%"class.absl::optional_internal::optional_data.1784" = type { %"class.absl::optional_internal::optional_data_base.1785" }
%"class.absl::optional_internal::optional_data_base.1785" = type { %"class.absl::optional_internal::optional_data_dtor_base.1786" }
%"class.absl::optional_internal::optional_data_dtor_base.1786" = type { i8, %union.anon.1787 }
%union.anon.1787 = type { %"class.WTF::String" }
%"class.absl::optional.1788" = type { %"class.absl::optional_internal::optional_data.1789" }
%"class.absl::optional_internal::optional_data.1789" = type { %"class.absl::optional_internal::optional_data_base.1790" }
%"class.absl::optional_internal::optional_data_base.1790" = type { %"class.absl::optional_internal::optional_data_dtor_base.1791" }
%"class.absl::optional_internal::optional_data_dtor_base.1791" = type { i8, %union.anon.1792 }
%union.anon.1792 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1793" }
%"class.mojo::PendingRemote.1793" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%class.scoped_refptr.1794 = type { %"class.base::RefCountedData.1795"* }
%"class.base::RefCountedData.1795" = type { %"class.base::RefCountedThreadSafe.2124", %"class.base::internal::flat_tree.2125" }
%"class.base::RefCountedThreadSafe.2124" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.2125" = type { %"class.std::__1::vector.2126" }
%"class.std::__1::vector.2126" = type { %"class.std::__1::__vector_base.2127" }
%"class.std::__1::__vector_base.2127" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2128" }
%"class.std::__1::__compressed_pair.2128" = type { %"struct.std::__1::__compressed_pair_elem.2129" }
%"struct.std::__1::__compressed_pair_elem.2129" = type { i32* }
%"class.blink::Member.1847" = type { %"class.blink::MemberBase.1848" }
%"class.blink::MemberBase.1848" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.1796", %class.scoped_refptr.1810, %class.scoped_refptr.1811, %"struct.blink::CacheControlHeader", %"class.absl::optional.155", %"class.absl::optional.1342", %"class.absl::optional.1342", %"class.absl::optional.1342", i64, %"class.blink::KURL", %"class.WTF::Vector.1812", %"class.WTF::String", %"class.WTF::Vector.126", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.939", %"class.WTF::Vector.126", %"class.blink::KURL", %"class.absl::optional.1817" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.1796" = type { %"class.absl::optional_internal::optional_data.1797" }
%"class.absl::optional_internal::optional_data.1797" = type { %"class.absl::optional_internal::optional_data_base.1798" }
%"class.absl::optional_internal::optional_data_base.1798" = type { %"class.absl::optional_internal::optional_data_dtor_base.1799" }
%"class.absl::optional_internal::optional_data_dtor_base.1799" = type { i8, %union.anon.1800 }
%union.anon.1800 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.126", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1801", %"class.WTF::Vector.1805" }
%"class.WTF::Vector.1801" = type { %"class.WTF::VectorBuffer.1802" }
%"class.WTF::VectorBuffer.1802" = type { %"class.WTF::VectorBufferBase.852" }
%"class.WTF::Vector.1805" = type { %"class.WTF::VectorBuffer.1806" }
%"class.WTF::VectorBuffer.1806" = type { %"class.WTF::VectorBufferBase.1807" }
%"class.WTF::VectorBufferBase.1807" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1810 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.1811 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.WTF::Vector.1812" = type { %"class.WTF::VectorBuffer.1813" }
%"class.WTF::VectorBuffer.1813" = type { %"class.WTF::VectorBufferBase.1814" }
%"class.WTF::VectorBufferBase.1814" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.1817" = type { %"class.absl::optional_internal::optional_data.1818" }
%"class.absl::optional_internal::optional_data.1818" = type { %"class.absl::optional_internal::optional_data_base.1819" }
%"class.absl::optional_internal::optional_data_base.1819" = type { %"class.absl::optional_internal::optional_data_dtor_base.1820" }
%"class.absl::optional_internal::optional_data_dtor_base.1820" = type { i8, %union.anon.1821 }
%union.anon.1821 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.1849 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1850", i64, %"class.WTF::Vector.1852", %"class.WTF::Vector.1857" }
%"class.WTF::RefCounted.1850" = type { %"class.base::RefCounted.1851" }
%"class.base::RefCounted.1851" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1852" = type { %"class.WTF::VectorBuffer.1853" }
%"class.WTF::VectorBuffer.1853" = type { %"class.WTF::VectorBufferBase.1854" }
%"class.WTF::VectorBufferBase.1854" = type { i8*, i32, i32 }
%"class.WTF::Vector.1857" = type { %"class.WTF::VectorBuffer.1858" }
%"class.WTF::VectorBuffer.1858" = type { %"class.WTF::VectorBufferBase.1859" }
%"class.WTF::VectorBufferBase.1859" = type { %"class.std::__1::unique_ptr.1860"*, i32, i32 }
%"class.std::__1::unique_ptr.1860" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.1863" }
%"class.std::__1::__tree.1863" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1864", %"class.std::__1::__compressed_pair.1868" }
%"class.std::__1::__compressed_pair.1864" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.1868" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"class.blink::HeapHashMap.1872" = type { %"class.WTF::HashMap.1875" }
%"class.WTF::HashMap.1875" = type { %"class.WTF::HashTable.1876" }
%"class.WTF::HashTable.1876" = type <{ %"struct.WTF::KeyValuePair.1878"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1878" = type opaque
%"class.blink::HeapVector.1879" = type { %"class.WTF::Vector.1882" }
%"class.WTF::Vector.1882" = type { %"class.WTF::VectorBuffer.1883" }
%"class.WTF::VectorBuffer.1883" = type { %"class.WTF::VectorBufferBase.1884" }
%"class.WTF::VectorBufferBase.1884" = type { %"class.blink::Member.1885"*, i32, i32 }
%"class.blink::Member.1887" = type { %"class.blink::MemberBase.1888" }
%"class.blink::MemberBase.1888" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer.1889" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1890", { i64, i64 } }
%"class.blink::WeakMember.1890" = type { %"class.blink::MemberBase.1400" }
%"class.blink::HeapHashMap.1891" = type { %"class.WTF::HashMap.1894" }
%"class.WTF::HashMap.1894" = type { %"class.WTF::HashTable.1895" }
%"class.WTF::HashTable.1895" = type <{ %"struct.WTF::KeyValuePair.1897"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1897" = type opaque
%"class.WTF::Vector.1898" = type { %"class.WTF::VectorBuffer.1899" }
%"class.WTF::VectorBuffer.1899" = type { %"class.WTF::VectorBufferBase.1900" }
%"class.WTF::VectorBufferBase.1900" = type { %class.scoped_refptr.1901*, i32, i32 }
%class.scoped_refptr.1901 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.1904" = type { %"class.WTF::HashSet.1907" }
%"class.WTF::HashSet.1907" = type { %"class.WTF::HashTable.1908" }
%"class.WTF::HashTable.1908" = type <{ %"class.blink::Member.1847"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1910" = type { %"class.std::__1::__compressed_pair.1911" }
%"class.std::__1::__compressed_pair.1911" = type { %"struct.std::__1::__compressed_pair_elem.1912" }
%"struct.std::__1::__compressed_pair_elem.1912" = type { %"class.WTF::HashSet.991"* }
%"class.base::WeakPtr.1702" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::HeapMojoRemote.1916" = type { %"class.blink::Member.1917" }
%"class.blink::Member.1917" = type { %"class.blink::MemberBase.1918" }
%"class.blink::MemberBase.1918" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1919" = type { %"class.blink::MemberBase.1920" }
%"class.blink::MemberBase.1920" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.1921" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1401" = type { %"class.blink::MemberBase.1402" }
%"class.blink::MemberBase.1402" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1403" = type { %"class.blink::MemberBase.1404" }
%"class.blink::MemberBase.1404" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1407" = type { %"class.std::__1::__compressed_pair.1408" }
%"class.std::__1::__compressed_pair.1408" = type { %"struct.std::__1::__compressed_pair_elem.1409" }
%"struct.std::__1::__compressed_pair_elem.1409" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1413" = type { %"class.blink::MemberBase.1414" }
%"class.blink::MemberBase.1414" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1415" = type { %"class.blink::MemberBase.1416" }
%"class.blink::MemberBase.1416" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.WTF::Vector.1417" = type { %"class.WTF::VectorBuffer.1418" }
%"class.WTF::VectorBuffer.1418" = type { %"class.WTF::VectorBufferBase.1419" }
%"class.WTF::VectorBufferBase.1419" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1420 }
%"class.blink::Member.782" = type { %"class.blink::MemberBase.783" }
%"class.blink::MemberBase.783" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.632", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.767", %"class.blink::Member.767", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1425" }
%"class.blink::HeapHashMap.1425" = type { %"class.WTF::HashMap.1428" }
%"class.WTF::HashMap.1428" = type { %"class.WTF::HashTable.1429" }
%"class.WTF::HashTable.1429" = type <{ %"struct.WTF::KeyValuePair.1431"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1431" = type opaque
%"class.blink::Member.1432" = type { %"class.blink::MemberBase.1433" }
%"class.blink::MemberBase.1433" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1434" = type { %"class.WTF::HashSet.1437" }
%"class.WTF::HashSet.1437" = type { %"class.WTF::HashTable.1438" }
%"class.WTF::HashTable.1438" = type <{ %"class.blink::WeakMember.1440"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1440" = type opaque
%"class.blink::HeapHashSet.1441" = type { %"class.WTF::HashSet.1444" }
%"class.WTF::HashSet.1444" = type { %"class.WTF::HashTable.1445" }
%"class.WTF::HashTable.1445" = type <{ %"class.blink::WeakMember.1447"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1447" = type opaque
%"class.blink::Member.1448" = type { %"class.blink::MemberBase.1449" }
%"class.blink::MemberBase.1449" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1450" = type { %"class.blink::MemberBase.1451" }
%"class.blink::MemberBase.1451" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1452" = type { %"class.blink::MemberBase.1453" }
%"class.blink::MemberBase.1453" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.769", %"class.blink::HeapVector.873" }
%"class.blink::Member.1454" = type { %"class.blink::MemberBase.1455" }
%"class.blink::MemberBase.1455" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1456" = type { %"class.blink::MemberBase.1457" }
%"class.blink::MemberBase.1457" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1458" = type { %"class.WTF::HashMap.1461" }
%"class.WTF::HashMap.1461" = type { %"class.WTF::HashTable.1462" }
%"class.WTF::HashTable.1462" = type <{ %"struct.WTF::KeyValuePair.1464"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1464" = type opaque
%"class.WTF::Vector.1465" = type { %"class.WTF::VectorBuffer.1466" }
%"class.WTF::VectorBuffer.1466" = type { %"class.WTF::VectorBufferBase.1467" }
%"class.WTF::VectorBufferBase.1467" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1470" = type { %"class.blink::MemberBase.1471" }
%"class.blink::MemberBase.1471" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1472" = type { %"class.blink::MemberBase.1473" }
%"class.blink::MemberBase.1473" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1474" = type { %"class.blink::MemberBase.1475" }
%"class.blink::MemberBase.1475" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1476" = type { %"class.WTF::Vector.1479" }
%"class.WTF::Vector.1479" = type { %"class.WTF::VectorBuffer.1480" }
%"class.WTF::VectorBuffer.1480" = type { %"class.WTF::VectorBufferBase.1481" }
%"class.WTF::VectorBufferBase.1481" = type { %"class.blink::Member.1482"*, i32, i32 }
%"class.blink::Member.1482" = type opaque
%"class.std::__1::unique_ptr.1484" = type { %"class.std::__1::__compressed_pair.1485" }
%"class.std::__1::__compressed_pair.1485" = type { %"struct.std::__1::__compressed_pair_elem.1486" }
%"struct.std::__1::__compressed_pair_elem.1486" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1490" = type { %"class.WTF::HashSet.1493" }
%"class.WTF::HashSet.1493" = type { %"class.WTF::HashTable.1494" }
%"class.WTF::HashTable.1494" = type <{ %"class.blink::WeakMember.1496"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1496" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1497", i32, [4 x i8] }>
%"class.WTF::Vector.1497" = type { %"class.WTF::VectorBuffer.1498" }
%"class.WTF::VectorBuffer.1498" = type { %"class.WTF::VectorBufferBase.1499" }
%"class.WTF::VectorBufferBase.1499" = type { %"struct.std::__1::pair.1500"*, i32, i32 }
%"struct.std::__1::pair.1500" = type opaque
%"class.blink::Member.1503" = type { %"class.blink::MemberBase.1504" }
%"class.blink::MemberBase.1504" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1505" = type { %"class.WTF::VectorBuffer.1506" }
%"class.WTF::VectorBuffer.1506" = type { %"class.WTF::VectorBufferBase.1507" }
%"class.WTF::VectorBufferBase.1507" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1510" = type { %"class.std::__1::__compressed_pair.1511" }
%"class.std::__1::__compressed_pair.1511" = type { %"struct.std::__1::__compressed_pair_elem.1512" }
%"struct.std::__1::__compressed_pair_elem.1512" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1516" = type { %"class.WTF::Vector.1519" }
%"class.WTF::Vector.1519" = type { %"class.WTF::VectorBuffer.1520" }
%"class.WTF::VectorBuffer.1520" = type { %"class.WTF::VectorBufferBase.1521" }
%"class.WTF::VectorBufferBase.1521" = type { %"class.blink::Member.1522"*, i32, i32 }
%"class.blink::Member.1522" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.632" }
%"class.blink::Member.1524" = type { %"class.blink::MemberBase.1525" }
%"class.blink::MemberBase.1525" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1526" = type { %"class.blink::MemberBase.1527" }
%"class.blink::MemberBase.1527" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1528" = type { %"class.blink::MemberBase.1529" }
%"class.blink::MemberBase.1529" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1530" = type { %"class.blink::MemberBase.1531" }
%"class.blink::MemberBase.1531" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1532" = type { %"class.blink::MemberBase.1533" }
%"class.blink::MemberBase.1533" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"struct.WTF::KeyValuePair.1538"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1538" = type opaque
%"class.blink::Member.1539" = type { %"class.blink::MemberBase.1540" }
%"class.blink::MemberBase.1540" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1541" = type { %"class.blink::MemberBase.1542" }
%"class.blink::MemberBase.1542" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1543" = type { %"class.blink::MemberBase.1544" }
%"class.blink::MemberBase.1544" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1545" = type { %"class.blink::MemberBase.1546" }
%"class.blink::MemberBase.1546" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.1423" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1424", { i64, i64 } }
%"class.blink::WeakMember.1424" = type { %"class.blink::MemberBase.633" }
%"class.blink::HeapHashSet.1547" = type { %"class.WTF::HashSet.1550" }
%"class.WTF::HashSet.1550" = type { %"class.WTF::HashTable.1551" }
%"class.WTF::HashTable.1551" = type <{ %"class.blink::Member.1553"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1553" = type opaque
%"class.blink::Member.1554" = type { %"class.blink::MemberBase.1555" }
%"class.blink::MemberBase.1555" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1556" = type { %"class.blink::MemberBase.1557" }
%"class.blink::MemberBase.1557" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1558" = type { %"class.blink::MemberBase.1559" }
%"class.blink::MemberBase.1559" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1560" = type { %"class.blink::MemberBase.1561" }
%"class.blink::MemberBase.1561" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1562" = type { %"class.blink::MemberBase.1563" }
%"class.blink::MemberBase.1563" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1564" = type { %"class.std::__1::__compressed_pair.1565" }
%"class.std::__1::__compressed_pair.1565" = type { %"struct.std::__1::__compressed_pair_elem.1566" }
%"struct.std::__1::__compressed_pair_elem.1566" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1570" = type { %"class.std::__1::__compressed_pair.1571" }
%"class.std::__1::__compressed_pair.1571" = type { %"struct.std::__1::__compressed_pair_elem.1572" }
%"struct.std::__1::__compressed_pair_elem.1572" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1576" = type { %"class.blink::MemberBase.1577" }
%"class.blink::MemberBase.1577" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1578" = type { %"class.blink::MemberBase.1579" }
%"class.blink::MemberBase.1579" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1580" = type { %"class.blink::MemberBase.1581" }
%"class.blink::MemberBase.1581" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1582" = type { %"class.blink::MemberBase.1583" }
%"class.blink::MemberBase.1583" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.blink::HeapHashMap.1584" = type { %"class.WTF::HashMap.1587" }
%"class.WTF::HashMap.1587" = type { %"class.WTF::HashTable.1588" }
%"class.WTF::HashTable.1588" = type <{ %"struct.WTF::KeyValuePair.1590"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1590" = type opaque
%"class.blink::Member.1591" = type { %"class.blink::MemberBase.1592" }
%"class.blink::MemberBase.1592" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1593" = type { %"class.std::__1::__compressed_pair.1594" }
%"class.std::__1::__compressed_pair.1594" = type { %"struct.std::__1::__compressed_pair_elem.1595" }
%"struct.std::__1::__compressed_pair_elem.1595" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1599" = type { %"class.blink::MemberBase.1600" }
%"class.blink::MemberBase.1600" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1601" = type { %"class.blink::MemberBase.1602" }
%"class.blink::MemberBase.1602" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1603" = type { %"class.WTF::HashMap.1606" }
%"class.WTF::HashMap.1606" = type { %"class.WTF::HashTable.1607" }
%"class.WTF::HashTable.1607" = type <{ %"struct.WTF::KeyValuePair.1609"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1609" = type opaque
%"class.blink::HeapObserverSet.1610" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1611" }
%"class.blink::HeapHashSet.1611" = type { %"class.WTF::HashSet.1614" }
%"class.WTF::HashSet.1614" = type { %"class.WTF::HashTable.1615" }
%"class.WTF::HashTable.1615" = type <{ %"class.blink::WeakMember.1617"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1617" = type opaque
%"class.blink::Member.1618" = type { %"class.blink::MemberBase.1619" }
%"class.blink::MemberBase.1619" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1620" = type { %"class.blink::MemberBase.1621" }
%"class.blink::MemberBase.1621" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.632", %"class.blink::HeapHashSet.1627", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1634", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1627" = type { %"class.WTF::HashSet.1630" }
%"class.WTF::HashSet.1630" = type { %"class.WTF::HashTable.1631" }
%"class.WTF::HashTable.1631" = type <{ %"class.blink::Member.1633"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1633" = type opaque
%"class.blink::HeapTaskRunnerTimer.1634" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1635", { i64, i64 } }
%"class.blink::WeakMember.1635" = type { %"class.blink::MemberBase.1621" }
%"class.blink::WeakMember.1622" = type { %"class.blink::MemberBase.768" }
%"class.blink::Member.1623" = type { %"class.blink::MemberBase.1624" }
%"class.blink::MemberBase.1624" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.634" = type { %"class.blink::MemberBase.635" }
%"class.blink::MemberBase.635" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.636" = type { %"class.blink::MemberBase.637" }
%"class.blink::MemberBase.637" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.638" = type { %"class.blink::MemberBase.639" }
%"class.blink::MemberBase.639" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.640" = type { %"class.blink::MemberBase.641" }
%"class.blink::MemberBase.641" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.642" = type { %"class.blink::MemberBase.643" }
%"class.blink::MemberBase.643" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.644" = type { %"class.blink::MemberBase.645" }
%"class.blink::MemberBase.645" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.646" = type { %"class.blink::MemberBase.647" }
%"class.blink::MemberBase.647" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.648" = type { %"class.blink::MemberBase.649" }
%"class.blink::MemberBase.649" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.652" = type { %"class.blink::MemberBase.653" }
%"class.blink::MemberBase.653" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.blink::Member.654" = type { %"class.blink::MemberBase.655" }
%"class.blink::MemberBase.655" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.656 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.658", i64, %"class.WTF::Vector.662", %"class.WTF::Vector.667", %"class.WTF::Vector.673", %"class.WTF::Vector.691", %class.scoped_refptr.40, %"class.WTF::HashMap.697", %"class.WTF::Vector.702", %"class.WTF::Vector.662", %"class.WTF::Vector.708", %"class.WTF::HashMap.713", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.657" }
%"class.base::RefCountedThreadSafe.657" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.658" = type { %"class.std::__1::__compressed_pair.659" }
%"class.std::__1::__compressed_pair.659" = type { %"struct.std::__1::__compressed_pair_elem.660" }
%"struct.std::__1::__compressed_pair_elem.660" = type { i8* }
%"class.WTF::Vector.667" = type { %"class.WTF::VectorBuffer.668" }
%"class.WTF::VectorBuffer.668" = type { %"class.WTF::VectorBufferBase.669", [8 x i8] }
%"class.WTF::VectorBufferBase.669" = type { %class.scoped_refptr.670*, i32, i32 }
%class.scoped_refptr.670 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.673" = type { %"class.WTF::VectorBuffer.674" }
%"class.WTF::VectorBuffer.674" = type { %"class.WTF::VectorBufferBase.675" }
%"class.WTF::VectorBufferBase.675" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.677", %"class.std::__1::unique_ptr.683" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.676 }
%class.scoped_refptr.676 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.677" = type { %"class.std::__1::__compressed_pair.678" }
%"class.std::__1::__compressed_pair.678" = type { %"struct.std::__1::__compressed_pair_elem.679" }
%"struct.std::__1::__compressed_pair_elem.679" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.683" = type { %"class.std::__1::__compressed_pair.684" }
%"class.std::__1::__compressed_pair.684" = type { %"struct.std::__1::__compressed_pair_elem.685" }
%"struct.std::__1::__compressed_pair_elem.685" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.691" = type { %"class.WTF::VectorBuffer.692" }
%"class.WTF::VectorBuffer.692" = type { %"class.WTF::VectorBufferBase.693" }
%"class.WTF::VectorBufferBase.693" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.694", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.694" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.697" = type { %"class.WTF::HashTable.698" }
%"class.WTF::HashTable.698" = type <{ %"struct.WTF::KeyValuePair.701"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.701" = type opaque
%"class.WTF::Vector.702" = type { %"class.WTF::VectorBuffer.703" }
%"class.WTF::VectorBuffer.703" = type { %"class.WTF::VectorBufferBase.704" }
%"class.WTF::VectorBufferBase.704" = type { %"class.mojo::ScopedHandleBase.705"*, i32, i32 }
%"class.mojo::ScopedHandleBase.705" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.662" = type { %"class.WTF::VectorBuffer.663" }
%"class.WTF::VectorBuffer.663" = type { %"class.WTF::VectorBufferBase.664", [16 x i8] }
%"class.WTF::VectorBufferBase.664" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.708" = type { %"class.WTF::VectorBuffer.709" }
%"class.WTF::VectorBuffer.709" = type { %"class.WTF::VectorBufferBase.710" }
%"class.WTF::VectorBufferBase.710" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::HashMap.713" = type { %"class.WTF::HashTable.714" }
%"class.WTF::HashTable.714" = type <{ %"struct.WTF::KeyValuePair.717"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.717" = type { i8**, %"class.std::__1::unique_ptr.2052" }
%"class.std::__1::unique_ptr.2052" = type { %"class.std::__1::__compressed_pair.2053" }
%"class.std::__1::__compressed_pair.2053" = type { %"struct.std::__1::__compressed_pair_elem.2054" }
%"struct.std::__1::__compressed_pair_elem.2054" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.718" = type { %"class.WTF::HashSet.721" }
%"class.WTF::HashSet.721" = type { %"class.WTF::HashTable.722" }
%"class.WTF::HashTable.722" = type <{ %"class.blink::WeakMember.724"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.724" = type opaque
%"class.blink::Member.725" = type { %"class.blink::MemberBase.726" }
%"class.blink::MemberBase.726" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.732", %"class.blink::Member.732", %"class.blink::Member.734", %"class.blink::Member.736", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.727" }
%"class.absl::optional.727" = type { %"class.absl::optional_internal::optional_data.728" }
%"class.absl::optional_internal::optional_data.728" = type { %"class.absl::optional_internal::optional_data_base.729" }
%"class.absl::optional_internal::optional_data_base.729" = type { %"class.absl::optional_internal::optional_data_dtor_base.730" }
%"class.absl::optional_internal::optional_data_dtor_base.730" = type { i8, %union.anon.731 }
%union.anon.731 = type { i64 }
%"class.blink::Member.732" = type { %"class.blink::MemberBase.733" }
%"class.blink::MemberBase.733" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.734" = type { %"class.blink::MemberBase.735" }
%"class.blink::MemberBase.735" = type { %"class.blink::Event"* }
%"class.blink::Member.736" = type { %"class.blink::MemberBase.737" }
%"class.blink::MemberBase.737" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.738" = type { %"class.WTF::HashMap.741" }
%"class.WTF::HashMap.741" = type { %"class.WTF::HashTable.742" }
%"class.WTF::HashTable.742" = type <{ %"struct.WTF::KeyValuePair.744"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.744" = type opaque
%"class.std::__1::unique_ptr.745" = type { %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.757" = type { %"class.blink::MemberBase.758" }
%"class.blink::MemberBase.758" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.763", %"class.blink::CachedTextInputInfo", %"class.blink::Member.782", %"class.blink::Member.784", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.765", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.775", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.765" = type { %"class.blink::MemberBase.766" }
%"class.blink::MemberBase.766" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.775" = type { %"class.WTF::HashMap.778" }
%"class.WTF::HashMap.778" = type { %"class.WTF::HashTable.779" }
%"class.WTF::HashTable.779" = type <{ %"struct.WTF::KeyValuePair.781"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.781" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.767", i32, i32 }
%"class.blink::Member.784" = type { %"class.blink::MemberBase.785" }
%"class.blink::MemberBase.785" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.786" = type { %"class.blink::MemberBase.787" }
%"class.blink::MemberBase.787" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.628", %"class.blink::Member.790", %"class.blink::Member.792" }
%"class.blink::Member.790" = type { %"class.blink::MemberBase.791" }
%"class.blink::MemberBase.791" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.792" = type { %"class.blink::MemberBase.793" }
%"class.blink::MemberBase.793" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.794" = type { %"class.blink::MemberBase.795" }
%"class.blink::MemberBase.795" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.628", %"class.blink::HeapMojoRemote" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.798" }
%"class.blink::Member.798" = type { %"class.blink::MemberBase.799" }
%"class.blink::MemberBase.799" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.800" = type { %"class.blink::MemberBase.801" }
%"class.blink::MemberBase.801" = type { %"class.blink::HeapHashMap.802"* }
%"class.blink::HeapHashMap.802" = type opaque
%"class.WTF::Vector.803" = type { %"class.WTF::VectorBuffer.804" }
%"class.WTF::VectorBuffer.804" = type { %"class.WTF::VectorBufferBase.805" }
%"class.WTF::VectorBufferBase.805" = type { i8*, i32, i32 }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.808" = type { %"class.WTF::HashTable.809" }
%"class.WTF::HashTable.809" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.812" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.815" }
%"class.WTF::VectorBuffer.815" = type { %"class.WTF::VectorBufferBase.816" }
%"class.WTF::VectorBufferBase.816" = type { i64*, i32, i32 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.304, %"class.blink::Member.1931", %"class.blink::SelfKeepAlive", %"class.util::TokenType.1978" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.blink::Member.1931" = type { %"class.blink::MemberBase.1932" }
%"class.blink::MemberBase.1932" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.1935", %"class.blink::HeapHashMap.1944", %"class.std::__1::unique_ptr.1954", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.1966", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.1969" }
%"class.blink::HeapHashMap.1935" = type { %"class.WTF::HashMap.1938" }
%"class.WTF::HashMap.1938" = type { %"class.WTF::HashTable.1939" }
%"class.WTF::HashTable.1939" = type <{ %"struct.WTF::KeyValuePair.1941"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1941" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Template" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::HeapHashMap.1944" = type { %"class.WTF::HashMap.1947" }
%"class.WTF::HashMap.1947" = type { %"class.WTF::HashTable.1948" }
%"class.WTF::HashTable.1948" = type <{ %"struct.WTF::KeyValuePair.1950"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1950" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.1951" }
%"class.blink::TraceWrapperV8Reference.1951" = type { %"class.v8::TracedReference.1952" }
%"class.v8::TracedReference.1952" = type { %"class.v8::BasicTracedReference.1953" }
%"class.v8::BasicTracedReference.1953" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.1954" = type { %"class.std::__1::__compressed_pair.1955" }
%"class.std::__1::__compressed_pair.1955" = type { %"struct.std::__1::__compressed_pair_elem.1956" }
%"struct.std::__1::__compressed_pair_elem.1956" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.1957" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.1957" = type { %"class.std::__1::__compressed_pair.1958" }
%"class.std::__1::__compressed_pair.1958" = type { %"struct.std::__1::__compressed_pair_elem.1959" }
%"struct.std::__1::__compressed_pair_elem.1959" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.1966" = type { %"class.v8::Persistent.1967" }
%"class.v8::Persistent.1967" = type { %"class.v8::PersistentBase.1968" }
%"class.v8::PersistentBase.1968" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.1969" = type { %"class.WTF::HashMap.1972" }
%"class.WTF::HashMap.1972" = type { %"class.WTF::HashTable.1973" }
%"class.WTF::HashTable.1973" = type <{ %"struct.WTF::KeyValuePair.1975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1975" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.1976" }
%"class.blink::Persistent.1976" = type { %"class.blink::PersistentBase.1977" }
%"class.blink::PersistentBase.1977" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType.1978" = type { %"class.base::StrongAlias.1979" }
%"class.base::StrongAlias.1979" = type { %"class.base::UnguessableToken" }
%"class.base::CheckedContiguousIterator" = type { i32*, i32*, i32* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.2196", %"class.blink::FreeList", %"class.WTF::Vector.2201" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array.2195" }
%"struct.std::__1::array.2195" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.2196" = type { %"class.WTF::VectorBuffer.2197" }
%"class.WTF::VectorBuffer.2197" = type { %"class.WTF::VectorBufferBase.2198" }
%"class.WTF::VectorBufferBase.2198" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.2201" = type { %"class.WTF::VectorBuffer.2202" }
%"class.WTF::VectorBuffer.2202" = type { %"class.WTF::VectorBufferBase.2203" }
%"class.WTF::VectorBufferBase.2203" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.WTF::Vector.2148" = type { %"class.WTF::VectorBuffer.2149" }
%"class.WTF::VectorBuffer.2149" = type { %"class.WTF::VectorBufferBase.2150", [16 x i8] }
%"class.WTF::VectorBufferBase.2150" = type { i16*, i32, i32 }

$_ZNK4base25CheckedContiguousIteratorIKN5blink18OriginTrialFeatureEEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKN5blink18OriginTrialFeatureEEppEv = comdat any

$_ZN3WTF13StringBuilder6AppendEDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZZN7logging15CheckOpValueStrIPKN5blink18OriginTrialFeatureEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZN4base25CheckedContiguousIteratorIKN5blink18OriginTrialFeatureEEC2EPS3_S5_S5_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKN5blink18OriginTrialFeatureEE15CheckComparableERKS4_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS1_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink18OriginTrialFeatureELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18OriginTrialFeatureEEEmm = comdat any

$_ZN3WTF9HashTableIN5blink18OriginTrialFeatureES2_NS_17IdentityExtractorENS_7IntHashIS2_EENS_10HashTraitsIS2_EES7_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S7_S8_EERKS2_SE_EENS_18HashTableAddResultIS9_S2_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink18OriginTrialFeatureES2_NS_17IdentityExtractorENS_7IntHashIS2_EENS_10HashTraitsIS2_EES7_NS_18PartitionAllocatorEE6ExpandEPS2_ = comdat any

$_ZN3WTF9HashTableIN5blink18OriginTrialFeatureES2_NS_17IdentityExtractorENS_7IntHashIS2_EENS_10HashTraitsIS2_EES7_NS_18PartitionAllocatorEE8RehashToEPS2_jSA_ = comdat any

$_ZN3WTF9HashTableIN5blink18OriginTrialFeatureES2_NS_17IdentityExtractorENS_7IntHashIS2_EENS_10HashTraitsIS2_EES7_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S7_S8_EERKS2_RS2_EENS_18HashTableAddResultIS9_S2_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink18OriginTrialFeatureENS_12KeyValuePairIS2_N4base4TimeEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS2_RS5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink18OriginTrialFeatureENS_12KeyValuePairIS2_N4base4TimeEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIN5blink18OriginTrialFeatureENS_12KeyValuePairIS2_N4base4TimeEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink17OriginTrialResultEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERS1_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink17OriginTrialResultEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS2_IN5blink17OriginTrialResultEEEEENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S6_EERS3_S6_EEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink17OriginTrialResultEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_ = comdat any

$_ZN3WTF12KeyValuePairINS_6StringEN5blink17OriginTrialResultEED2Ev = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink17OriginTrialResultEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF6VectorIN5blink22OriginTrialTokenResultELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF15ConstructTraitsIN5blink22OriginTrialTokenResultENS_12VectorTraitsIS2_EENS_18PartitionAllocatorEE9ConstructIJS2_EEEPS2_PvDpOT_ = comdat any

$_ZN3WTF6VectorIN5blink22OriginTrialTokenResultELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22OriginTrialTokenResultEEEmm = comdat any

@.str = private unnamed_addr constant [23 x i8] c"HandwritingRecognition\00", align 1
@_ZN5blink8features37kHandwritingRecognitionWebPlatformApiE = external global %"struct.base::Feature", align 8
@_ZN5blink8features42kHandwritingRecognitionWebPlatformApiFinchE = external global %"struct.base::Feature", align 8
@.str.1 = private unnamed_addr constant [8 x i8] c"Portals\00", align 1
@_ZN5blink8features8kPortalsE = external global %"struct.base::Feature", align 8
@.str.2 = private unnamed_addr constant [13 x i8] c"FencedFrames\00", align 1
@_ZN5blink8features13kFencedFramesE = external global %"struct.base::Feature", align 8
@.str.3 = private unnamed_addr constant [9 x i8] c"AppCache\00", align 1
@_ZN5blink8features9kAppCacheE = external global %"struct.base::Feature", align 8
@.str.4 = private unnamed_addr constant [16 x i8] c"ComputePressure\00", align 1
@_ZN5blink8features16kComputePressureE = external global %"struct.base::Feature", align 8
@.str.5 = private unnamed_addr constant [23 x i8] c"FledgeInterestGroupAPI\00", align 1
@_ZN5blink8features21kFledgeInterestGroupsE = external global %"struct.base::Feature", align 8
@.str.6 = private unnamed_addr constant [12 x i8] c"TrustTokens\00", align 1
@_ZN7network8features12kTrustTokensE = external global %"struct.base::Feature", align 8
@.str.7 = private unnamed_addr constant [18 x i8] c"InterestCohortAPI\00", align 1
@_ZN5blink8features29kInterestCohortAPIOriginTrialE = external global %"struct.base::Feature", align 8
@.str.8 = private unnamed_addr constant [25 x i8] c"SpeculationRulesPrefetch\00", align 1
@_ZN5blink8features30kSpeculationRulesPrefetchProxyE = external global %"struct.base::Feature", align 8
@_ZN5blink12_GLOBAL__N_117kDefaultTrialNameE = internal constant [8 x i8] c"UNKNOWN\00", align 1
@.str.9 = private unnamed_addr constant [76 x i8] c"../../third_party/blink/renderer/core/origin_trials/origin_trial_context.cc\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"context_\00", align 1
@.str.11 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.12 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.14 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.15 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase37is_third_party_origin_trials_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.16 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.17 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.18 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.19 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.20 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@.str.21 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1
@.str.22 = private unnamed_addr constant [30 x i8] c"OriginTrials.ValidationResult\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [100 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<WTF::String, 0, WTF::PartitionAllocator>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIN5blink18OriginTrialFeatureELj0ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [114 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<blink::OriginTrialFeature, 0, WTF::PartitionAllocator>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18OriginTrialFeatureEEEPKcv = private unnamed_addr constant [73 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::OriginTrialFeature]\00", align 1
@.str.23 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.24 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink18OriginTrialFeatureEN4base4TimeEEEEEPKcv = private unnamed_addr constant [104 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::OriginTrialFeature, base::Time>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEN5blink17OriginTrialResultEEEEEPKcv = private unnamed_addr constant [104 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, blink::OriginTrialResult>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22OriginTrialTokenResultEEEPKcv = private unnamed_addr constant [77 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::OriginTrialTokenResult]\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZZN5blink12_GLOBAL__N_136RecordTokenValidationResultHistogramENS_22OriginTrialTokenStatusEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN5blink22OriginTrialTokenResultC1ERKN3WTF6StringENS_22OriginTrialTokenStatusERKN4absl8optionalINS_10TrialTokenEEE = hidden unnamed_addr alias void (%"struct.blink::OriginTrialTokenResult"*, %"class.WTF::String"*, i32, %"class.absl::optional"*), void (%"struct.blink::OriginTrialTokenResult"*, %"class.WTF::String"*, i32, %"class.absl::optional"*)* @_ZN5blink22OriginTrialTokenResultC2ERKN3WTF6StringENS_22OriginTrialTokenStatusERKN4absl8optionalINS_10TrialTokenEEE
@_ZN5blink18OriginTrialContextC1EPNS_16ExecutionContextE = hidden unnamed_addr alias void (%"class.blink::OriginTrialContext"*, %"class.blink::ExecutionContext"*), void (%"class.blink::OriginTrialContext"*, %"class.blink::ExecutionContext"*)* @_ZN5blink18OriginTrialContextC2EPNS_16ExecutionContextE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22OriginTrialTokenResultC2ERKN3WTF6StringENS_22OriginTrialTokenStatusERKN4absl8optionalINS_10TrialTokenEEE(%"struct.blink::OriginTrialTokenResult"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), i32, %"class.absl::optional"* dereferenceable(160)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %7, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #13
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !2

23:                                               ; preds = %14
  tail call void @llvm.trap() #13
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %4, %9, %24
  %27 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %0, i64 0, i32 1
  store i32 %2, i32* %27, align 8
  %28 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 160, i1 false) #13
  %30 = load i8, i8* %29, align 8, !range !3
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %76, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %34 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %33, %"class.url::Origin"* dereferenceable(80) %34) #13
  %35 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %36 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %37 = load i8, i8* %36, align 8, !range !3
  store i8 %37, i8* %35, align 8
  %38 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %39 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %40 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %32
  %45 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  %46 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 24, i1 false) #13
  br label %52

47:                                               ; preds = %32
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %38, i8* %49, i64 %51) #13
  br label %52

52:                                               ; preds = %47, %44
  %53 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %55 = load i64, i64* %53, align 8
  store i64 %55, i64* %54, align 8
  %56 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %57 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %58 = bitcast %"class.std::__1::basic_string"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %65, label %62

62:                                               ; preds = %52
  %63 = bitcast %"class.std::__1::basic_string"* %56 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #13
  br label %70

65:                                               ; preds = %52
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %69 = load i64, i64* %68, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %56, i8* %67, i64 %69) #13
  br label %70

70:                                               ; preds = %65, %62
  %71 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 5
  %72 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 5
  %73 = bitcast i8* %72 to i64*
  %74 = bitcast i8* %71 to i64*
  %75 = load i64, i64* %73, align 8
  store i64 %75, i64* %74, align 8
  store i8 1, i8* %28, align 8
  br label %76

76:                                               ; preds = %26, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18OriginTrialContextC2EPNS_16ExecutionContextE(%"class.blink::OriginTrialContext"* nocapture, %"class.blink::ExecutionContext"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::OriginTrialContext"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 20, i1 false) #13
  %4 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 1
  %5 = bitcast %"class.WTF::HashSet"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #13
  %6 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 2
  %7 = bitcast %"class.WTF::HashSet"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 20, i1 false) #13
  %8 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 3
  %9 = bitcast %"class.WTF::HashMap"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #13
  %10 = tail call i8* @_Znwm(i64 8) #14
  %11 = bitcast i8* %10 to %"class.blink::TrialTokenValidator"*
  tail call void @_ZN5blink19TrialTokenValidatorC1Ev(%"class.blink::TrialTokenValidator"* nonnull %11) #13
  %12 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %13 = bitcast %"class.blink::TrialTokenValidator"** %12 to i8**
  store i8* %10, i8** %13, align 8
  %14 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 5, i32 0, i32 0
  store %"class.blink::ExecutionContext"* %1, %"class.blink::ExecutionContext"** %14, align 8
  %15 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 6
  %16 = bitcast %"class.WTF::HashMap.14"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 20, i1 false) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18OriginTrialContext32SetTrialTokenValidatorForTestingENSt3__110unique_ptrINS_19TrialTokenValidatorENS1_14default_deleteIS3_EEEE(%"class.blink::OriginTrialContext"* nocapture, %"class.blink::TrialTokenValidator"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::TrialTokenValidator"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::TrialTokenValidator"*, %"class.blink::TrialTokenValidator"** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %3, i64* %7, align 8
  %8 = icmp eq %"class.blink::TrialTokenValidator"* %6, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::TrialTokenValidator"* %6 to void (%"class.blink::TrialTokenValidator"*)***
  %11 = load void (%"class.blink::TrialTokenValidator"*)**, void (%"class.blink::TrialTokenValidator"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::TrialTokenValidator"*)*, void (%"class.blink::TrialTokenValidator"*)** %11, i64 1
  %13 = load void (%"class.blink::TrialTokenValidator"*)*, void (%"class.blink::TrialTokenValidator"*)** %12, align 8
  tail call void %13(%"class.blink::TrialTokenValidator"* nonnull %6) #13
  br label %14

14:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::Vector.126"* @_ZN5blink18OriginTrialContext16ParseHeaderValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringBuilder", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #13
  %5 = bitcast i8* %4 to %"class.WTF::Vector.126"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #13
  %6 = ptrtoint i8* %4 to i64
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %482, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %482, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.WTF::String"* %3 to i8*
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %17 = bitcast %"class.WTF::StringBuilder"* %2 to i8*
  %18 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 1
  %20 = bitcast %union.anon.2142* %19 to i8*
  %21 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 2
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 3
  %23 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 4
  %24 = getelementptr inbounds i8, i8* %4, i64 12
  %25 = bitcast i8* %24 to i32*
  %26 = getelementptr inbounds i8, i8* %4, i64 8
  %27 = bitcast i8* %26 to i32*
  %28 = bitcast i8* %4 to %"class.WTF::String"**
  br label %29

29:                                               ; preds = %441, %14
  %30 = phi %"class.WTF::StringImpl"* [ %8, %14 ], [ %442, %441 ]
  %31 = phi i32 [ 0, %14 ], [ %423, %441 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #13
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %16, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %32, label %336, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp ult i32 %31, %35
  br i1 %36, label %37, label %336

37:                                               ; preds = %33
  %38 = zext i32 %35 to i64
  %39 = zext i32 %31 to i64
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 1
  %42 = bitcast %"class.WTF::StringImpl"* %41 to i8*
  %43 = bitcast %"class.WTF::StringImpl"* %41 to i16*
  br label %46

44:                                               ; preds = %62
  %45 = icmp eq i64 %63, %38
  br i1 %45, label %67, label %46

46:                                               ; preds = %44, %37
  %47 = phi i64 [ %39, %37 ], [ %63, %44 ]
  %48 = phi i1 [ true, %37 ], [ %65, %44 ]
  %49 = phi i32 [ %31, %37 ], [ %64, %44 ]
  %50 = load atomic i32, i32* %40 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds i8, i8* %42, i64 %47
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i16
  br label %60

57:                                               ; preds = %46
  %58 = getelementptr inbounds i16, i16* %43, i64 %47
  %59 = load i16, i16* %58, align 2
  br label %60

60:                                               ; preds = %57, %53
  %61 = phi i16 [ %56, %53 ], [ %59, %57 ]
  switch i16 %61, label %69 [
    i16 32, label %62
    i16 9, label %62
  ]

62:                                               ; preds = %60, %60
  %63 = add nuw nsw i64 %47, 1
  %64 = trunc i64 %63 to i32
  %65 = icmp ult i64 %63, %38
  %66 = icmp eq i32 %35, %64
  br i1 %66, label %69, label %44

67:                                               ; preds = %44
  %68 = trunc i64 %63 to i32
  br label %69

69:                                               ; preds = %62, %60, %67
  %70 = phi i32 [ %68, %67 ], [ %49, %60 ], [ %35, %62 ]
  %71 = phi i1 [ %65, %67 ], [ %48, %60 ], [ %65, %62 ]
  br i1 %71, label %72, label %336

72:                                               ; preds = %69
  %73 = icmp ugt i32 %35, %70
  br i1 %73, label %74, label %294

74:                                               ; preds = %72
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 1
  br i1 %78, label %86, label %80

80:                                               ; preds = %74
  %81 = bitcast %"class.WTF::StringImpl"* %79 to i8*
  %82 = zext i32 %70 to i64
  %83 = getelementptr inbounds i8, i8* %81, i64 %82
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i16
  br label %91

86:                                               ; preds = %74
  %87 = bitcast %"class.WTF::StringImpl"* %79 to i16*
  %88 = zext i32 %70 to i64
  %89 = getelementptr inbounds i16, i16* %87, i64 %88
  %90 = load i16, i16* %89, align 2
  br label %91

91:                                               ; preds = %86, %80
  %92 = phi i16 [ %85, %80 ], [ %90, %86 ]
  %93 = icmp eq i16 %92, 39
  br i1 %93, label %112, label %94

94:                                               ; preds = %91
  %95 = load atomic i32, i32* %75 monotonic, align 4
  %96 = and i32 %95, 1
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %104, label %98

98:                                               ; preds = %94
  %99 = bitcast %"class.WTF::StringImpl"* %79 to i8*
  %100 = zext i32 %70 to i64
  %101 = getelementptr inbounds i8, i8* %99, i64 %100
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i16
  br label %109

104:                                              ; preds = %94
  %105 = bitcast %"class.WTF::StringImpl"* %79 to i16*
  %106 = zext i32 %70 to i64
  %107 = getelementptr inbounds i16, i16* %105, i64 %106
  %108 = load i16, i16* %107, align 2
  br label %109

109:                                              ; preds = %104, %98
  %110 = phi i16 [ %103, %98 ], [ %108, %104 ]
  %111 = icmp eq i16 %110, 34
  br i1 %111, label %112, label %247

112:                                              ; preds = %91, %109
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %17) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 48, i1 false) #13
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %18, align 8
  store i8 0, i8* %20, align 8
  store i32 0, i32* %21, align 8
  store i8 1, i8* %22, align 4
  store i8 0, i8* %23, align 1
  %113 = add nuw i32 %70, 1
  %114 = load i32, i32* %34, align 4
  %115 = icmp ugt i32 %114, %70
  br i1 %115, label %116, label %131

116:                                              ; preds = %112
  %117 = load atomic i32, i32* %75 monotonic, align 4
  %118 = and i32 %117, 1
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %126, label %120

120:                                              ; preds = %116
  %121 = bitcast %"class.WTF::StringImpl"* %79 to i8*
  %122 = zext i32 %70 to i64
  %123 = getelementptr inbounds i8, i8* %121, i64 %122
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i16
  br label %131

126:                                              ; preds = %116
  %127 = bitcast %"class.WTF::StringImpl"* %79 to i16*
  %128 = zext i32 %70 to i64
  %129 = getelementptr inbounds i16, i16* %127, i64 %128
  %130 = load i16, i16* %129, align 2
  br label %131

131:                                              ; preds = %126, %120, %112
  %132 = phi i16 [ 0, %112 ], [ %125, %120 ], [ %130, %126 ]
  %133 = icmp ult i32 %113, %35
  br i1 %133, label %134, label %228

134:                                              ; preds = %131, %224
  %135 = phi i32 [ %221, %224 ], [ %113, %131 ]
  %136 = phi i32 [ %222, %224 ], [ %113, %131 ]
  %137 = phi %"class.WTF::StringImpl"* [ %225, %224 ], [ %30, %131 ]
  %138 = icmp eq %"class.WTF::StringImpl"* %137, null
  br i1 %138, label %160, label %139

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 1
  %141 = load i32, i32* %140, align 4
  %142 = icmp ugt i32 %141, %136
  br i1 %142, label %143, label %160

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 1
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 1
  br i1 %147, label %155, label %149

149:                                              ; preds = %143
  %150 = bitcast %"class.WTF::StringImpl"* %148 to i8*
  %151 = zext i32 %136 to i64
  %152 = getelementptr inbounds i8, i8* %150, i64 %151
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i16
  br label %160

155:                                              ; preds = %143
  %156 = bitcast %"class.WTF::StringImpl"* %148 to i16*
  %157 = zext i32 %136 to i64
  %158 = getelementptr inbounds i16, i16* %156, i64 %157
  %159 = load i16, i16* %158, align 2
  br label %160

160:                                              ; preds = %155, %149, %139, %134
  %161 = phi i16 [ 0, %139 ], [ 0, %134 ], [ %154, %149 ], [ %159, %155 ]
  %162 = icmp eq i16 %161, %132
  br i1 %162, label %226, label %163

163:                                              ; preds = %160
  br i1 %138, label %191, label %164

164:                                              ; preds = %163
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 1
  %166 = load i32, i32* %165, align 4
  %167 = icmp ugt i32 %166, %136
  br i1 %167, label %168, label %191

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load atomic i32, i32* %169 monotonic, align 4
  %171 = and i32 %170, 1
  %172 = icmp eq i32 %171, 0
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 1
  br i1 %172, label %180, label %174

174:                                              ; preds = %168
  %175 = bitcast %"class.WTF::StringImpl"* %173 to i8*
  %176 = zext i32 %136 to i64
  %177 = getelementptr inbounds i8, i8* %175, i64 %176
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i16
  br label %185

180:                                              ; preds = %168
  %181 = bitcast %"class.WTF::StringImpl"* %173 to i16*
  %182 = zext i32 %136 to i64
  %183 = getelementptr inbounds i16, i16* %181, i64 %182
  %184 = load i16, i16* %183, align 2
  br label %185

185:                                              ; preds = %180, %174
  %186 = phi i16 [ %179, %174 ], [ %184, %180 ]
  %187 = icmp eq i16 %186, 92
  %188 = add nuw i32 %136, 1
  %189 = select i1 %187, i32 %188, i32 %135
  %190 = select i1 %187, i32 %188, i32 %136
  br label %191

191:                                              ; preds = %185, %164, %163
  %192 = phi i32 [ %135, %163 ], [ %135, %164 ], [ %189, %185 ]
  %193 = phi i32 [ %136, %163 ], [ %136, %164 ], [ %190, %185 ]
  %194 = icmp ult i32 %193, %35
  br i1 %194, label %195, label %220

195:                                              ; preds = %191
  %196 = add nuw i32 %193, 1
  br i1 %138, label %218, label %197

197:                                              ; preds = %195
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 1
  %199 = load i32, i32* %198, align 4
  %200 = icmp ugt i32 %199, %193
  br i1 %200, label %201, label %218

201:                                              ; preds = %197
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load atomic i32, i32* %202 monotonic, align 4
  %204 = and i32 %203, 1
  %205 = icmp eq i32 %204, 0
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 1
  br i1 %205, label %213, label %207

207:                                              ; preds = %201
  %208 = bitcast %"class.WTF::StringImpl"* %206 to i8*
  %209 = zext i32 %193 to i64
  %210 = getelementptr inbounds i8, i8* %208, i64 %209
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i16
  br label %218

213:                                              ; preds = %201
  %214 = bitcast %"class.WTF::StringImpl"* %206 to i16*
  %215 = zext i32 %193 to i64
  %216 = getelementptr inbounds i16, i16* %214, i64 %215
  %217 = load i16, i16* %216, align 2
  br label %218

218:                                              ; preds = %213, %207, %197, %195
  %219 = phi i16 [ 0, %197 ], [ 0, %195 ], [ %212, %207 ], [ %217, %213 ]
  call void @_ZN3WTF13StringBuilder6AppendEDs(%"class.WTF::StringBuilder"* nonnull %2, i16 zeroext %219) #13
  br label %220

220:                                              ; preds = %218, %191
  %221 = phi i32 [ %196, %218 ], [ %192, %191 ]
  %222 = phi i32 [ %196, %218 ], [ %193, %191 ]
  %223 = icmp ult i32 %222, %35
  br i1 %223, label %224, label %228

224:                                              ; preds = %220
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  br label %134

226:                                              ; preds = %160
  %227 = add nuw i32 %136, 1
  br label %228

228:                                              ; preds = %220, %226, %131
  %229 = phi i32 [ %227, %226 ], [ %113, %131 ], [ %221, %220 ]
  %230 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %2) #13
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %2) #13
  %231 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %232 = icmp eq %"class.WTF::StringImpl"* %231, null
  br i1 %232, label %246, label %233

233:                                              ; preds = %228
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %231, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %235 = load atomic i32, i32* %234 monotonic, align 4
  %236 = and i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %231, i64 0, i32 0
  %239 = load i32, i32* %238, align 4
  br i1 %237, label %240, label %242

240:                                              ; preds = %233
  %241 = add i32 %239, -1
  store i32 %241, i32* %238, align 4
  br label %242

242:                                              ; preds = %240, %233
  %243 = phi i32 [ %241, %240 ], [ %239, %233 ]
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %246

245:                                              ; preds = %242
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %231) #13
  br label %246

246:                                              ; preds = %245, %242, %228
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %17) #13
  br label %299

247:                                              ; preds = %109
  %248 = zext i32 %70 to i64
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 1
  %251 = bitcast %"class.WTF::StringImpl"* %250 to i8*
  %252 = bitcast %"class.WTF::StringImpl"* %250 to i16*
  br label %253

253:                                              ; preds = %285, %247
  %254 = phi i32 [ %70, %247 ], [ %288, %285 ]
  %255 = phi i64 [ %248, %247 ], [ %286, %285 ]
  %256 = phi i32 [ %70, %247 ], [ %287, %285 ]
  %257 = icmp ult i64 %255, %38
  br i1 %257, label %258, label %285

258:                                              ; preds = %253
  %259 = load atomic i32, i32* %249 monotonic, align 4
  %260 = and i32 %259, 1
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %266, label %262

262:                                              ; preds = %258
  %263 = getelementptr inbounds i8, i8* %251, i64 %255
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %264 to i16
  br label %269

266:                                              ; preds = %258
  %267 = getelementptr inbounds i16, i16* %252, i64 %255
  %268 = load i16, i16* %267, align 2
  br label %269

269:                                              ; preds = %266, %262
  %270 = phi i16 [ %265, %262 ], [ %268, %266 ]
  switch i16 %270, label %271 [
    i16 32, label %290
    i16 9, label %290
  ]

271:                                              ; preds = %269
  %272 = load atomic i32, i32* %249 monotonic, align 4
  %273 = and i32 %272, 1
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %279, label %275

275:                                              ; preds = %271
  %276 = getelementptr inbounds i8, i8* %251, i64 %255
  %277 = load i8, i8* %276, align 1
  %278 = zext i8 %277 to i16
  br label %282

279:                                              ; preds = %271
  %280 = getelementptr inbounds i16, i16* %252, i64 %255
  %281 = load i16, i16* %280, align 2
  br label %282

282:                                              ; preds = %279, %275
  %283 = phi i16 [ %278, %275 ], [ %281, %279 ]
  %284 = icmp eq i16 %283, 44
  br i1 %284, label %292, label %285

285:                                              ; preds = %253, %282
  %286 = add nuw nsw i64 %255, 1
  %287 = add nuw i32 %256, 1
  %288 = trunc i64 %286 to i32
  %289 = icmp eq i32 %35, %288
  br i1 %289, label %294, label %253

290:                                              ; preds = %269, %269
  %291 = trunc i64 %255 to i32
  br label %294

292:                                              ; preds = %282
  %293 = trunc i64 %255 to i32
  br label %294

294:                                              ; preds = %285, %72, %292, %290
  %295 = phi i32 [ %254, %290 ], [ %254, %292 ], [ %70, %72 ], [ %35, %285 ]
  %296 = phi i32 [ %291, %290 ], [ %293, %292 ], [ %70, %72 ], [ %287, %285 ]
  %297 = sub i32 %296, %70
  %298 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %0, i32 %70, i32 %297) #13
  br label %299

299:                                              ; preds = %294, %246
  %300 = phi i32 [ %295, %294 ], [ %229, %246 ]
  %301 = phi %"class.WTF::StringImpl"* [ %298, %294 ], [ %230, %246 ]
  %302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %303 = icmp eq %"class.WTF::StringImpl"* %302, null
  br i1 %303, label %340, label %304

304:                                              ; preds = %299
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 1
  %306 = load i32, i32* %305, align 4
  %307 = icmp ult i32 %300, %306
  br i1 %307, label %308, label %340

308:                                              ; preds = %304
  %309 = zext i32 %306 to i64
  %310 = zext i32 %300 to i64
  %311 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 1
  %313 = bitcast %"class.WTF::StringImpl"* %312 to i8*
  %314 = bitcast %"class.WTF::StringImpl"* %312 to i16*
  br label %317

315:                                              ; preds = %332
  %316 = icmp eq i64 %333, %309
  br i1 %316, label %338, label %317

317:                                              ; preds = %315, %308
  %318 = phi i64 [ %310, %308 ], [ %333, %315 ]
  %319 = phi i32 [ %300, %308 ], [ %334, %315 ]
  %320 = load atomic i32, i32* %311 monotonic, align 4
  %321 = and i32 %320, 1
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %327, label %323

323:                                              ; preds = %317
  %324 = getelementptr inbounds i8, i8* %313, i64 %318
  %325 = load i8, i8* %324, align 1
  %326 = zext i8 %325 to i16
  br label %330

327:                                              ; preds = %317
  %328 = getelementptr inbounds i16, i16* %314, i64 %318
  %329 = load i16, i16* %328, align 2
  br label %330

330:                                              ; preds = %327, %323
  %331 = phi i16 [ %326, %323 ], [ %329, %327 ]
  switch i16 %331, label %340 [
    i16 32, label %332
    i16 9, label %332
  ]

332:                                              ; preds = %330, %330
  %333 = add nuw nsw i64 %318, 1
  %334 = trunc i64 %333 to i32
  %335 = icmp eq i32 %306, %334
  br i1 %335, label %340, label %315

336:                                              ; preds = %69, %33, %29
  %337 = phi i32 [ %31, %33 ], [ %70, %69 ], [ %31, %29 ]
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  br label %375

338:                                              ; preds = %315
  %339 = trunc i64 %333 to i32
  br label %340

340:                                              ; preds = %332, %330, %338, %299, %304
  %341 = phi i32 [ %300, %299 ], [ %300, %304 ], [ %339, %338 ], [ %306, %332 ], [ %319, %330 ]
  store %"class.WTF::StringImpl"* %301, %"class.WTF::StringImpl"** %16, align 8
  %342 = icmp eq %"class.WTF::StringImpl"* %301, null
  br i1 %342, label %375, label %343

343:                                              ; preds = %340
  %344 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %301, i64 0, i32 1
  %345 = load i32, i32* %344, align 4
  %346 = icmp eq i32 %345, 0
  br i1 %346, label %375, label %347

347:                                              ; preds = %343
  %348 = load i32, i32* %25, align 4
  %349 = load i32, i32* %27, align 8
  %350 = icmp eq i32 %348, %349
  br i1 %350, label %374, label %351, !prof !2

351:                                              ; preds = %347
  %352 = load %"class.WTF::String"*, %"class.WTF::String"** %28, align 8
  %353 = zext i32 %348 to i64
  %354 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %352, i64 %353, i32 0, i32 0
  store %"class.WTF::StringImpl"* %301, %"class.WTF::StringImpl"** %354, align 8
  %355 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %301, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load atomic i32, i32* %355 monotonic, align 4
  %357 = and i32 %356, 2
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %359, label %371

359:                                              ; preds = %351
  %360 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %301, i64 0, i32 0
  %361 = load i32, i32* %360, align 4
  %362 = zext i32 %361 to i33
  %363 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %362, i33 1) #13
  %364 = extractvalue { i33, i1 } %363, 1
  %365 = extractvalue { i33, i1 } %363, 0
  %366 = icmp slt i33 %365, 0
  %367 = or i1 %364, %366
  br i1 %367, label %368, label %369, !prof !2

368:                                              ; preds = %359
  call void @llvm.trap() #13
  unreachable

369:                                              ; preds = %359
  %370 = trunc i33 %365 to i32
  store i32 %370, i32* %360, align 4
  br label %371

371:                                              ; preds = %369, %351
  %372 = load i32, i32* %25, align 4
  %373 = add i32 %372, 1
  store i32 %373, i32* %25, align 4
  br label %375

374:                                              ; preds = %347
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_(%"class.WTF::Vector.126"* %5, %"class.WTF::String"* nonnull dereferenceable(8) %3) #13
  br label %375

375:                                              ; preds = %336, %340, %374, %371, %343
  %376 = phi i32 [ %341, %343 ], [ %341, %371 ], [ %341, %374 ], [ %337, %336 ], [ %341, %340 ]
  %377 = icmp ult i32 %376, %12
  br i1 %377, label %378, label %422

378:                                              ; preds = %375
  %379 = add nuw i32 %376, 1
  %380 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %381 = icmp eq %"class.WTF::StringImpl"* %380, null
  br i1 %381, label %406, label %382

382:                                              ; preds = %378
  %383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 1
  %384 = load i32, i32* %383, align 4
  %385 = icmp ugt i32 %384, %376
  br i1 %385, label %386, label %406

386:                                              ; preds = %382
  %387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %388 = load atomic i32, i32* %387 monotonic, align 4
  %389 = and i32 %388, 1
  %390 = icmp eq i32 %389, 0
  %391 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 1
  br i1 %390, label %398, label %392

392:                                              ; preds = %386
  %393 = bitcast %"class.WTF::StringImpl"* %391 to i8*
  %394 = zext i32 %376 to i64
  %395 = getelementptr inbounds i8, i8* %393, i64 %394
  %396 = load i8, i8* %395, align 1
  %397 = zext i8 %396 to i16
  br label %403

398:                                              ; preds = %386
  %399 = bitcast %"class.WTF::StringImpl"* %391 to i16*
  %400 = zext i32 %376 to i64
  %401 = getelementptr inbounds i16, i16* %399, i64 %400
  %402 = load i16, i16* %401, align 2
  br label %403

403:                                              ; preds = %392, %398
  %404 = phi i16 [ %397, %392 ], [ %402, %398 ]
  %405 = icmp eq i16 %404, 44
  br i1 %405, label %422, label %406

406:                                              ; preds = %378, %382, %403
  %407 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %408 = icmp eq %"class.WTF::StringImpl"* %407, null
  br i1 %408, label %443, label %409

409:                                              ; preds = %406
  %410 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %407, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %411 = load atomic i32, i32* %410 monotonic, align 4
  %412 = and i32 %411, 2
  %413 = icmp eq i32 %412, 0
  %414 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %407, i64 0, i32 0
  %415 = load i32, i32* %414, align 4
  br i1 %413, label %416, label %418

416:                                              ; preds = %409
  %417 = add i32 %415, -1
  store i32 %417, i32* %414, align 4
  br label %418

418:                                              ; preds = %416, %409
  %419 = phi i32 [ %417, %416 ], [ %415, %409 ]
  %420 = icmp eq i32 %419, 0
  br i1 %420, label %421, label %443

421:                                              ; preds = %418
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %407) #13
  br label %443

422:                                              ; preds = %375, %403
  %423 = phi i32 [ %379, %403 ], [ %376, %375 ]
  %424 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %425 = icmp eq %"class.WTF::StringImpl"* %424, null
  br i1 %425, label %439, label %426

426:                                              ; preds = %422
  %427 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %424, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %428 = load atomic i32, i32* %427 monotonic, align 4
  %429 = and i32 %428, 2
  %430 = icmp eq i32 %429, 0
  %431 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %424, i64 0, i32 0
  %432 = load i32, i32* %431, align 4
  br i1 %430, label %433, label %435

433:                                              ; preds = %426
  %434 = add i32 %432, -1
  store i32 %434, i32* %431, align 4
  br label %435

435:                                              ; preds = %433, %426
  %436 = phi i32 [ %434, %433 ], [ %432, %426 ]
  %437 = icmp eq i32 %436, 0
  br i1 %437, label %438, label %439

438:                                              ; preds = %435
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %424) #13
  br label %439

439:                                              ; preds = %422, %435, %438
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #13
  %440 = icmp ult i32 %423, %12
  br i1 %440, label %441, label %482

441:                                              ; preds = %439
  %442 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  br label %29

443:                                              ; preds = %421, %418, %406
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #13
  %444 = icmp eq i8* %4, null
  br i1 %444, label %482, label %445

445:                                              ; preds = %443
  %446 = load %"class.WTF::String"*, %"class.WTF::String"** %28, align 8
  %447 = icmp eq %"class.WTF::String"* %446, null
  br i1 %447, label %481, label %448, !prof !4

448:                                              ; preds = %445
  %449 = bitcast %"class.WTF::String"* %446 to i8*
  %450 = load i32, i32* %25, align 4
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %479, label %452, !prof !2

452:                                              ; preds = %448
  %453 = zext i32 %450 to i64
  %454 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %446, i64 %453
  br label %455

455:                                              ; preds = %473, %452
  %456 = phi %"class.WTF::String"* [ %474, %473 ], [ %446, %452 ]
  %457 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %456, i64 0, i32 0, i32 0
  %458 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %457, align 8
  %459 = icmp eq %"class.WTF::StringImpl"* %458, null
  br i1 %459, label %473, label %460

460:                                              ; preds = %455
  %461 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %458, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %462 = load atomic i32, i32* %461 monotonic, align 4
  %463 = and i32 %462, 2
  %464 = icmp eq i32 %463, 0
  %465 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %458, i64 0, i32 0
  %466 = load i32, i32* %465, align 4
  br i1 %464, label %467, label %469

467:                                              ; preds = %460
  %468 = add i32 %466, -1
  store i32 %468, i32* %465, align 4
  br label %469

469:                                              ; preds = %467, %460
  %470 = phi i32 [ %468, %467 ], [ %466, %460 ]
  %471 = icmp eq i32 %470, 0
  br i1 %471, label %472, label %473

472:                                              ; preds = %469
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %458) #13
  br label %473

473:                                              ; preds = %472, %469, %455
  %474 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %456, i64 1
  %475 = icmp eq %"class.WTF::String"* %474, %454
  br i1 %475, label %476, label %455

476:                                              ; preds = %473
  store i32 0, i32* %25, align 4
  %477 = bitcast i8* %4 to i8**
  %478 = load i8*, i8** %477, align 8
  br label %479

479:                                              ; preds = %476, %448
  %480 = phi i8* [ %478, %476 ], [ %449, %448 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %480) #13
  store %"class.WTF::String"* null, %"class.WTF::String"** %28, align 8
  br label %481

481:                                              ; preds = %479, %445
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %4) #13
  br label %482

482:                                              ; preds = %439, %1, %10, %443, %481
  %483 = phi i64 [ 0, %443 ], [ 0, %481 ], [ %6, %10 ], [ %6, %1 ], [ %6, %439 ]
  %484 = inttoptr i64 %483 to %"class.WTF::Vector.126"*
  ret %"class.WTF::Vector.126"* %484
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18OriginTrialContext19AddTokensFromHeaderEPNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %59, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %59, label %10

10:                                               ; preds = %6
  %11 = tail call %"class.WTF::Vector.126"* @_ZN5blink18OriginTrialContext16ParseHeaderValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %1)
  %12 = icmp eq %"class.WTF::Vector.126"* %11, null
  br i1 %12, label %59, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.WTF::Vector.126", %"class.WTF::Vector.126"* %11, i64 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 26, i32 0, i32 0
  %19 = load %"class.blink::OriginTrialContext"*, %"class.blink::OriginTrialContext"** %18, align 8
  tail call void @_ZN5blink18OriginTrialContext9AddTokensERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::OriginTrialContext"* %19, %"class.WTF::Vector.126"* nonnull dereferenceable(16) %11) #13
  br label %20

20:                                               ; preds = %17, %13
  %21 = getelementptr inbounds %"class.WTF::Vector.126", %"class.WTF::Vector.126"* %11, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::String"*, %"class.WTF::String"** %21, align 8
  %23 = icmp eq %"class.WTF::String"* %22, null
  br i1 %23, label %57, label %24, !prof !4

24:                                               ; preds = %20
  %25 = bitcast %"class.WTF::String"* %22 to i8*
  %26 = load i32, i32* %14, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %55, label %28, !prof !2

28:                                               ; preds = %24
  %29 = zext i32 %26 to i64
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 %29
  br label %31

31:                                               ; preds = %49, %28
  %32 = phi %"class.WTF::String"* [ %50, %49 ], [ %22, %28 ]
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #13
  br label %49

49:                                               ; preds = %48, %45, %31
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %32, i64 1
  %51 = icmp eq %"class.WTF::String"* %50, %30
  br i1 %51, label %52, label %31

52:                                               ; preds = %49
  store i32 0, i32* %14, align 4
  %53 = bitcast %"class.WTF::Vector.126"* %11 to i8**
  %54 = load i8*, i8** %53, align 8
  br label %55

55:                                               ; preds = %52, %24
  %56 = phi i8* [ %54, %52 ], [ %25, %24 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %56) #13
  store %"class.WTF::String"* null, %"class.WTF::String"** %21, align 8
  br label %57

57:                                               ; preds = %55, %20
  %58 = bitcast %"class.WTF::Vector.126"* %11 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %58) #13
  br label %59

59:                                               ; preds = %10, %2, %57, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18OriginTrialContext9AddTokensEPNS_16ExecutionContextEPKN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEE(%"class.blink::ExecutionContext"* nocapture readonly, %"class.WTF::Vector.126"* readonly) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.WTF::Vector.126"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.126", %"class.WTF::Vector.126"* %1, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 26, i32 0, i32 0
  %10 = load %"class.blink::OriginTrialContext"*, %"class.blink::OriginTrialContext"** %9, align 8
  tail call void @_ZN5blink18OriginTrialContext9AddTokensERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::OriginTrialContext"* %10, %"class.WTF::Vector.126"* nonnull dereferenceable(16) %1)
  br label %11

11:                                               ; preds = %2, %4, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18OriginTrialContext9AddTokensERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::OriginTrialContext"*, %"class.WTF::Vector.126"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.126", %"class.WTF::Vector.126"* %1, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %90, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::Vector.126", %"class.WTF::Vector.126"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::String"*, %"class.WTF::String"** %9, align 8
  %11 = zext i32 %6 to i64
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 %11
  %13 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 5, i32 0, i32 0
  %14 = bitcast %"class.logging::CheckError"* %3 to i8*
  %15 = bitcast %"class.logging::CheckError"* %4 to i8*
  br label %19

16:                                               ; preds = %85
  %17 = and i8 %86, 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %90, label %89

19:                                               ; preds = %8, %85
  %20 = phi %"class.WTF::String"* [ %10, %8 ], [ %87, %85 ]
  %21 = phi i8 [ 0, %8 ], [ %86, %85 ]
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %85, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %85, label %29

29:                                               ; preds = %25
  %30 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %13, align 8
  %31 = icmp eq %"class.blink::ExecutionContext"* %30, null
  br i1 %31, label %32, label %36

32:                                               ; preds = %29
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.9, i64 0, i64 0), i32 606, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0)) #13
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  %34 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %13, align 8
  %35 = icmp eq %"class.blink::ExecutionContext"* %34, null
  br i1 %35, label %50, label %36

36:                                               ; preds = %32, %29
  %37 = phi %"class.blink::ExecutionContext"* [ %34, %32 ], [ %30, %29 ]
  %38 = bitcast %"class.blink::ExecutionContext"* %37 to i1 (%"class.blink::ExecutionContext"*)***
  %39 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %38, align 8
  %40 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %39, i64 4
  %41 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %40, align 8
  %42 = call zeroext i1 %41(%"class.blink::ExecutionContext"* nonnull %37) #13
  br i1 %42, label %45, label %43

43:                                               ; preds = %36
  %44 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %13, align 8
  br label %50

45:                                               ; preds = %36
  %46 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %37, i64 -1, i32 22
  %47 = getelementptr inbounds %"class.blink::DOMTimerCoordinator", %"class.blink::DOMTimerCoordinator"* %46, i64 60
  %48 = bitcast %"class.blink::DOMTimerCoordinator"* %47 to %"class.blink::SecurityOrigin"**
  %49 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %48, align 8
  br label %53

50:                                               ; preds = %43, %32
  %51 = phi %"class.blink::ExecutionContext"* [ %44, %43 ], [ null, %32 ]
  %52 = call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %51) #13
  br label %53

53:                                               ; preds = %45, %50
  %54 = phi %"class.blink::SecurityOrigin"* [ %49, %45 ], [ %52, %50 ]
  %55 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %13, align 8
  %56 = icmp eq %"class.blink::ExecutionContext"* %55, null
  br i1 %56, label %57, label %61

57:                                               ; preds = %53
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.9, i64 0, i64 0), i32 620, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0)) #13
  %58 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #13
  %59 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %13, align 8
  %60 = icmp eq %"class.blink::ExecutionContext"* %59, null
  br i1 %60, label %76, label %61

61:                                               ; preds = %57, %53
  %62 = phi %"class.blink::ExecutionContext"* [ %59, %57 ], [ %55, %53 ]
  %63 = bitcast %"class.blink::ExecutionContext"* %62 to i1 (%"class.blink::ExecutionContext"*)***
  %64 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %63, align 8
  %65 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %64, i64 4
  %66 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %65, align 8
  %67 = call zeroext i1 %66(%"class.blink::ExecutionContext"* nonnull %62) #13
  br i1 %67, label %70, label %68

68:                                               ; preds = %61
  %69 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %13, align 8
  br label %76

70:                                               ; preds = %61
  %71 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %62, i64 -1, i32 22
  %72 = getelementptr inbounds %"class.blink::DOMTimerCoordinator", %"class.blink::DOMTimerCoordinator"* %71, i64 60, i32 0, i32 0, i32 0, i32 1
  %73 = bitcast i32* %72 to i8*
  %74 = load i8, i8* %73, align 8, !range !3
  %75 = icmp ne i8 %74, 0
  br label %81

76:                                               ; preds = %68, %57
  %77 = phi %"class.blink::ExecutionContext"* [ %69, %68 ], [ null, %57 ]
  %78 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %77, i64 0, i32 6, i32 11
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %79, 1
  br label %81

81:                                               ; preds = %70, %76
  %82 = phi i1 [ %75, %70 ], [ %80, %76 ]
  %83 = call zeroext i1 @_ZN5blink18OriginTrialContext20EnableTrialFromTokenEPKNS_14SecurityOriginEbS3_bRKN3WTF6StringE(%"class.blink::OriginTrialContext"* %0, %"class.blink::SecurityOrigin"* %54, i1 zeroext %82, %"class.blink::SecurityOrigin"* null, i1 zeroext false, %"class.WTF::String"* dereferenceable(8) %20) #13
  %84 = select i1 %83, i8 1, i8 %21
  br label %85

85:                                               ; preds = %19, %81, %25
  %86 = phi i8 [ %21, %25 ], [ %84, %81 ], [ %21, %19 ]
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 1
  %88 = icmp eq %"class.WTF::String"* %87, %12
  br i1 %88, label %16, label %19

89:                                               ; preds = %16
  call void @_ZN5blink18OriginTrialContext25InitializePendingFeaturesEv(%"class.blink::OriginTrialContext"* %0)
  br label %90

90:                                               ; preds = %89, %16, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18OriginTrialContext39ActivateNavigationFeaturesFromInitiatorEPNS_16ExecutionContextEPKN3WTF6VectorINS_18OriginTrialFeatureELj0ENS3_18PartitionAllocatorEEE(%"class.blink::ExecutionContext"* nocapture readonly, %"class.WTF::Vector.259"* readonly) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.WTF::Vector.259"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.259", %"class.WTF::Vector.259"* %1, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 26, i32 0, i32 0
  %10 = load %"class.blink::OriginTrialContext"*, %"class.blink::OriginTrialContext"** %9, align 8
  tail call void @_ZN5blink18OriginTrialContext39ActivateNavigationFeaturesFromInitiatorERKN3WTF6VectorINS_18OriginTrialFeatureELj0ENS1_18PartitionAllocatorEEE(%"class.blink::OriginTrialContext"* %10, %"class.WTF::Vector.259"* nonnull dereferenceable(16) %1)
  br label %11

11:                                               ; preds = %2, %4, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18OriginTrialContext39ActivateNavigationFeaturesFromInitiatorERKN3WTF6VectorINS_18OriginTrialFeatureELj0ENS1_18PartitionAllocatorEEE(%"class.blink::OriginTrialContext"*, %"class.WTF::Vector.259"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.259", %"class.WTF::Vector.259"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.259", %"class.WTF::Vector.259"* %1, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds i32, i32* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 2, i32 0
  br label %13

12:                                               ; preds = %77, %2
  tail call void @_ZN5blink18OriginTrialContext25InitializePendingFeaturesEv(%"class.blink::OriginTrialContext"* %0)
  ret void

13:                                               ; preds = %10, %77
  %14 = phi i32* [ %4, %10 ], [ %78, %77 ]
  %15 = load i32, i32* %14, align 4
  %16 = tail call dereferenceable(24) %"class.WTF::HashSet"* @_ZN5blink13origin_trials32GetNavigationOriginTrialFeaturesEv() #13
  %17 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %16, i64 0, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = icmp eq i32* %18, null
  br i1 %19, label %77, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %16, i64 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = add i32 %22, -1
  %24 = zext i32 %23 to i64
  %25 = shl i32 %15, 15
  %26 = xor i32 %25, -1
  %27 = add i32 %15, %26
  %28 = lshr i32 %27, 10
  %29 = xor i32 %28, %27
  %30 = mul i32 %29, 9
  %31 = lshr i32 %30, 6
  %32 = xor i32 %31, %30
  %33 = shl i32 %32, 11
  %34 = xor i32 %33, -1
  %35 = add i32 %32, %34
  %36 = lshr i32 %35, 16
  %37 = xor i32 %36, %35
  %38 = and i32 %23, %37
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i32, i32* %18, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, %15
  br i1 %42, label %72, label %43

43:                                               ; preds = %20
  %44 = xor i32 %37, -1
  %45 = lshr i32 %35, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %62, %43
  %58 = phi i32 [ %41, %43 ], [ %68, %62 ]
  %59 = phi i64 [ %39, %43 ], [ %66, %62 ]
  %60 = phi i64 [ 0, %43 ], [ %64, %62 ]
  %61 = icmp eq i32 %58, -128
  br i1 %61, label %77, label %62

62:                                               ; preds = %57
  %63 = icmp eq i64 %60, 0
  %64 = select i1 %63, i64 %56, i64 %60
  %65 = add i64 %64, %59
  %66 = and i64 %65, %24
  %67 = getelementptr inbounds i32, i32* %18, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, %15
  br i1 %69, label %70, label %57

70:                                               ; preds = %62
  %71 = getelementptr inbounds i32, i32* %18, i64 %66
  br label %72

72:                                               ; preds = %70, %20
  %73 = phi i32* [ %40, %20 ], [ %71, %70 ]
  %74 = icmp eq i32* %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %72
  %76 = tail call { i32*, i8 } @_ZN3WTF9HashTableIN5blink18OriginTrialFeatureES2_NS_17IdentityExtractorENS_7IntHashIS2_EENS_10HashTraitsIS2_EES7_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S7_S8_EERKS2_SE_EENS_18HashTableAddResultIS9_S2_EEOT0_OT1_(%"class.WTF::HashTable"* %11, i32* dereferenceable(4) %14, i32* dereferenceable(4) %14) #13
  br label %77

77:                                               ; preds = %57, %72, %13, %75
  %78 = getelementptr inbounds i32, i32* %14, i64 1
  %79 = icmp eq i32* %78, %8
  br i1 %79, label %12, label %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::Vector.126"* @_ZN5blink18OriginTrialContext9GetTokensEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 26, i32 0, i32 0
  %3 = load %"class.blink::OriginTrialContext"*, %"class.blink::OriginTrialContext"** %2, align 8
  %4 = icmp eq %"class.blink::OriginTrialContext"* %3, null
  br i1 %4, label %97, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %3, i64 0, i32 6, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %97, label %9

9:                                                ; preds = %5
  %10 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #13
  %11 = bitcast i8* %10 to %"class.WTF::Vector.126"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #13
  %12 = ptrtoint i8* %10 to i64
  %13 = load i32, i32* %6, align 4
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %3, i64 0, i32 6, i32 0, i32 0
  %16 = load %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %3, i64 0, i32 6, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %16, i64 %19
  br i1 %14, label %97, label %21

21:                                               ; preds = %9
  %22 = icmp eq i32 %18, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %21, %27
  %24 = phi %"struct.WTF::KeyValuePair.18"* [ %28, %27 ], [ %16, %21 ]
  %25 = bitcast %"struct.WTF::KeyValuePair.18"* %24 to i64*
  %26 = load i64, i64* %25, align 8
  switch i64 %26, label %30 [
    i64 -1, label %27
    i64 0, label %27
  ]

27:                                               ; preds = %23, %23
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %24, i64 1
  %29 = icmp eq %"struct.WTF::KeyValuePair.18"* %28, %20
  br i1 %29, label %97, label %23

30:                                               ; preds = %23, %21
  %31 = phi %"struct.WTF::KeyValuePair.18"* [ %16, %21 ], [ %24, %23 ]
  %32 = icmp eq %"struct.WTF::KeyValuePair.18"* %31, %20
  br i1 %32, label %97, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds i8, i8* %10, i64 12
  %35 = bitcast i8* %34 to i32*
  %36 = getelementptr inbounds i8, i8* %10, i64 8
  %37 = bitcast i8* %36 to i32*
  %38 = bitcast i8* %10 to %"class.WTF::String"**
  br label %39

39:                                               ; preds = %33, %58
  %40 = phi %"struct.WTF::KeyValuePair.18"* [ %31, %33 ], [ %52, %58 ]
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %40, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %42 = load %"struct.blink::OriginTrialTokenResult"*, %"struct.blink::OriginTrialTokenResult"** %41, align 8
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %40, i64 0, i32 1, i32 2, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %42, i64 %45
  %47 = icmp eq i32 %44, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %94, %39
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %40, i64 1
  %50 = icmp eq %"struct.WTF::KeyValuePair.18"* %49, %20
  br i1 %50, label %97, label %51

51:                                               ; preds = %48, %55
  %52 = phi %"struct.WTF::KeyValuePair.18"* [ %56, %55 ], [ %49, %48 ]
  %53 = bitcast %"struct.WTF::KeyValuePair.18"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  switch i64 %54, label %58 [
    i64 -1, label %55
    i64 0, label %55
  ]

55:                                               ; preds = %51, %51
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %52, i64 1
  %57 = icmp eq %"struct.WTF::KeyValuePair.18"* %56, %20
  br i1 %57, label %97, label %51

58:                                               ; preds = %51
  %59 = icmp eq %"struct.WTF::KeyValuePair.18"* %52, %20
  br i1 %59, label %97, label %39

60:                                               ; preds = %39, %94
  %61 = phi %"struct.blink::OriginTrialTokenResult"* [ %95, %94 ], [ %42, %39 ]
  %62 = load i32, i32* %35, align 4
  %63 = load i32, i32* %37, align 8
  %64 = icmp eq i32 %62, %63
  br i1 %64, label %92, label %65, !prof !2

65:                                               ; preds = %60
  %66 = load %"class.WTF::String"*, %"class.WTF::String"** %38, align 8
  %67 = zext i32 %62 to i64
  %68 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %61, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %66, i64 %67, i32 0, i32 0
  store %"class.WTF::StringImpl"* %69, %"class.WTF::StringImpl"** %70, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %71, label %89, label %72

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %89

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i33
  %81 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %80, i33 1) #13
  %82 = extractvalue { i33, i1 } %81, 1
  %83 = extractvalue { i33, i1 } %81, 0
  %84 = icmp slt i33 %83, 0
  %85 = or i1 %82, %84
  br i1 %85, label %86, label %87, !prof !2

86:                                               ; preds = %77
  tail call void @llvm.trap() #13
  unreachable

87:                                               ; preds = %77
  %88 = trunc i33 %83 to i32
  store i32 %88, i32* %78, align 4
  br label %89

89:                                               ; preds = %87, %72, %65
  %90 = load i32, i32* %35, align 4
  %91 = add i32 %90, 1
  store i32 %91, i32* %35, align 4
  br label %94

92:                                               ; preds = %60
  %93 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %61, i64 0, i32 0
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.126"* %11, %"class.WTF::String"* dereferenceable(8) %93) #13
  br label %94

94:                                               ; preds = %89, %92
  %95 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %61, i64 1
  %96 = icmp eq %"struct.blink::OriginTrialTokenResult"* %95, %46
  br i1 %96, label %48, label %60

97:                                               ; preds = %27, %48, %58, %55, %9, %30, %5, %1
  %98 = phi i64 [ 0, %1 ], [ 0, %5 ], [ %12, %30 ], [ %12, %9 ], [ %12, %55 ], [ %12, %58 ], [ %12, %48 ], [ %12, %27 ]
  %99 = inttoptr i64 %98 to %"class.WTF::Vector.126"*
  ret %"class.WTF::Vector.126"* %99
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::Vector.259"* @_ZN5blink18OriginTrialContext28GetEnabledNavigationFeaturesEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 26, i32 0, i32 0
  %3 = load %"class.blink::OriginTrialContext"*, %"class.blink::OriginTrialContext"** %2, align 8
  %4 = icmp eq %"class.blink::OriginTrialContext"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.WTF::Vector.259"* @_ZNK5blink18OriginTrialContext28GetEnabledNavigationFeaturesEv(%"class.blink::OriginTrialContext"* nonnull %3)
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi %"class.WTF::Vector.259"* [ %6, %5 ], [ null, %1 ]
  ret %"class.WTF::Vector.259"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::Vector.259"* @_ZNK5blink18OriginTrialContext28GetEnabledNavigationFeaturesEv(%"class.blink::OriginTrialContext"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %135, label %5

5:                                                ; preds = %1
  %6 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIN5blink18OriginTrialFeatureELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #13
  %7 = bitcast i8* %6 to %"class.WTF::Vector.259"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #13
  %8 = ptrtoint i8* %6 to i64
  %9 = load i32, i32* %2, align 4
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds i32, i32* %12, i64 %15
  br i1 %10, label %126, label %17

17:                                               ; preds = %5
  %18 = icmp eq i32 %14, 0
  br i1 %18, label %27, label %19

19:                                               ; preds = %17, %24
  %20 = phi i32* [ %25, %24 ], [ %12, %17 ]
  %21 = load i32, i32* %20, align 4
  %22 = or i32 %21, 1
  %23 = icmp eq i32 %22, -127
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = getelementptr inbounds i32, i32* %20, i64 1
  %26 = icmp eq i32* %25, %16
  br i1 %26, label %126, label %19

27:                                               ; preds = %19, %17
  %28 = phi i32* [ %12, %17 ], [ %20, %19 ]
  %29 = icmp eq i32* %28, %16
  br i1 %29, label %126, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds i8, i8* %6, i64 12
  %32 = bitcast i8* %31 to i32*
  %33 = getelementptr inbounds i8, i8* %6, i64 8
  %34 = bitcast i8* %33 to i32*
  %35 = bitcast i8* %6 to i32**
  br label %39

36:                                               ; preds = %113, %124, %121
  %37 = load i32, i32* %32, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %126, label %135

39:                                               ; preds = %30, %124
  %40 = phi i32* [ %28, %30 ], [ %117, %124 ]
  %41 = load i32, i32* %40, align 4
  %42 = tail call dereferenceable(24) %"class.WTF::HashSet"* @_ZN5blink13origin_trials32GetNavigationOriginTrialFeaturesEv() #13
  %43 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %42, i64 0, i32 0, i32 0
  %44 = load i32*, i32** %43, align 8
  %45 = icmp eq i32* %44, null
  br i1 %45, label %113, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %42, i64 0, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = add i32 %48, -1
  %50 = zext i32 %49 to i64
  %51 = shl i32 %41, 15
  %52 = xor i32 %51, -1
  %53 = add i32 %41, %52
  %54 = lshr i32 %53, 10
  %55 = xor i32 %54, %53
  %56 = mul i32 %55, 9
  %57 = lshr i32 %56, 6
  %58 = xor i32 %57, %56
  %59 = shl i32 %58, 11
  %60 = xor i32 %59, -1
  %61 = add i32 %58, %60
  %62 = lshr i32 %61, 16
  %63 = xor i32 %62, %61
  %64 = and i32 %49, %63
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds i32, i32* %44, i64 %65
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, %41
  br i1 %68, label %98, label %69

69:                                               ; preds = %46
  %70 = xor i32 %63, -1
  %71 = lshr i32 %61, 23
  %72 = add i32 %71, %70
  %73 = shl i32 %72, 12
  %74 = xor i32 %73, %72
  %75 = lshr i32 %74, 7
  %76 = xor i32 %75, %74
  %77 = shl i32 %76, 2
  %78 = xor i32 %77, %76
  %79 = lshr i32 %78, 20
  %80 = xor i32 %79, %78
  %81 = or i32 %80, 1
  %82 = zext i32 %81 to i64
  br label %83

83:                                               ; preds = %88, %69
  %84 = phi i32 [ %67, %69 ], [ %94, %88 ]
  %85 = phi i64 [ %65, %69 ], [ %92, %88 ]
  %86 = phi i64 [ 0, %69 ], [ %90, %88 ]
  %87 = icmp eq i32 %84, -128
  br i1 %87, label %113, label %88

88:                                               ; preds = %83
  %89 = icmp eq i64 %86, 0
  %90 = select i1 %89, i64 %82, i64 %86
  %91 = add i64 %90, %85
  %92 = and i64 %91, %50
  %93 = getelementptr inbounds i32, i32* %44, i64 %92
  %94 = load i32, i32* %93, align 4
  %95 = icmp eq i32 %94, %41
  br i1 %95, label %96, label %83

96:                                               ; preds = %88
  %97 = getelementptr inbounds i32, i32* %44, i64 %92
  br label %98

98:                                               ; preds = %96, %46
  %99 = phi i32* [ %66, %46 ], [ %97, %96 ]
  %100 = icmp eq i32* %99, null
  br i1 %100, label %113, label %101

101:                                              ; preds = %98
  %102 = load i32, i32* %32, align 4
  %103 = load i32, i32* %34, align 8
  %104 = icmp eq i32 %102, %103
  br i1 %104, label %112, label %105, !prof !2

105:                                              ; preds = %101
  %106 = load i32*, i32** %35, align 8
  %107 = zext i32 %102 to i64
  %108 = getelementptr inbounds i32, i32* %106, i64 %107
  %109 = load i32, i32* %40, align 4
  store i32 %109, i32* %108, align 4
  %110 = load i32, i32* %32, align 4
  %111 = add i32 %110, 1
  store i32 %111, i32* %32, align 4
  br label %113

112:                                              ; preds = %101
  tail call void @_ZN3WTF6VectorIN5blink18OriginTrialFeatureELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.259"* %7, i32* dereferenceable(4) %40) #13
  br label %113

113:                                              ; preds = %83, %98, %39, %112, %105
  %114 = getelementptr inbounds i32, i32* %40, i64 1
  %115 = icmp eq i32* %114, %16
  br i1 %115, label %36, label %116

116:                                              ; preds = %113, %121
  %117 = phi i32* [ %122, %121 ], [ %114, %113 ]
  %118 = load i32, i32* %117, align 4
  %119 = or i32 %118, 1
  %120 = icmp eq i32 %119, -127
  br i1 %120, label %121, label %124

121:                                              ; preds = %116
  %122 = getelementptr inbounds i32, i32* %117, i64 1
  %123 = icmp eq i32* %122, %16
  br i1 %123, label %36, label %116

124:                                              ; preds = %116
  %125 = icmp eq i32* %117, %16
  br i1 %125, label %36, label %39

126:                                              ; preds = %24, %5, %27, %36
  %127 = icmp eq i8* %6, null
  br i1 %127, label %135, label %128

128:                                              ; preds = %126
  %129 = bitcast i8* %6 to i32**
  %130 = load i32*, i32** %129, align 8
  %131 = icmp eq i32* %130, null
  br i1 %131, label %134, label %132, !prof !4

132:                                              ; preds = %128
  %133 = bitcast i32* %130 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %133) #13
  store i32* null, i32** %129, align 8
  br label %134

134:                                              ; preds = %132, %128
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %6) #13
  br label %135

135:                                              ; preds = %36, %134, %126, %1
  %136 = phi i64 [ 0, %1 ], [ 0, %126 ], [ 0, %134 ], [ %8, %36 ]
  %137 = inttoptr i64 %136 to %"class.WTF::Vector.259"*
  ret %"class.WTF::Vector.259"* %137
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18OriginTrialContext8AddTokenERKN3WTF6StringE(%"class.blink::OriginTrialContext"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 5, i32 0, i32 0
  %6 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %5, align 8
  %7 = icmp eq %"class.blink::ExecutionContext"* %6, null
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.9, i64 0, i64 0), i32 606, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0)) #13
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %11 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %5, align 8
  %12 = icmp eq %"class.blink::ExecutionContext"* %11, null
  br i1 %12, label %27, label %13

13:                                               ; preds = %8, %2
  %14 = phi %"class.blink::ExecutionContext"* [ %11, %8 ], [ %6, %2 ]
  %15 = bitcast %"class.blink::ExecutionContext"* %14 to i1 (%"class.blink::ExecutionContext"*)***
  %16 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %16, i64 4
  %18 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %17, align 8
  %19 = call zeroext i1 %18(%"class.blink::ExecutionContext"* nonnull %14) #13
  br i1 %19, label %22, label %20

20:                                               ; preds = %13
  %21 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %5, align 8
  br label %27

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %14, i64 -1, i32 22
  %24 = getelementptr inbounds %"class.blink::DOMTimerCoordinator", %"class.blink::DOMTimerCoordinator"* %23, i64 60
  %25 = bitcast %"class.blink::DOMTimerCoordinator"* %24 to %"class.blink::SecurityOrigin"**
  %26 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %25, align 8
  br label %30

27:                                               ; preds = %20, %8
  %28 = phi %"class.blink::ExecutionContext"* [ %21, %20 ], [ null, %8 ]
  %29 = call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %28) #13
  br label %30

30:                                               ; preds = %22, %27
  %31 = phi %"class.blink::SecurityOrigin"* [ %26, %22 ], [ %29, %27 ]
  %32 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %5, align 8
  %33 = icmp eq %"class.blink::ExecutionContext"* %32, null
  br i1 %33, label %34, label %39

34:                                               ; preds = %30
  %35 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.9, i64 0, i64 0), i32 620, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0)) #13
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #13
  %37 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %5, align 8
  %38 = icmp eq %"class.blink::ExecutionContext"* %37, null
  br i1 %38, label %54, label %39

39:                                               ; preds = %34, %30
  %40 = phi %"class.blink::ExecutionContext"* [ %37, %34 ], [ %32, %30 ]
  %41 = bitcast %"class.blink::ExecutionContext"* %40 to i1 (%"class.blink::ExecutionContext"*)***
  %42 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %41, align 8
  %43 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %42, i64 4
  %44 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %43, align 8
  %45 = call zeroext i1 %44(%"class.blink::ExecutionContext"* nonnull %40) #13
  br i1 %45, label %48, label %46

46:                                               ; preds = %39
  %47 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %5, align 8
  br label %54

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %40, i64 -1, i32 22
  %50 = getelementptr inbounds %"class.blink::DOMTimerCoordinator", %"class.blink::DOMTimerCoordinator"* %49, i64 60, i32 0, i32 0, i32 0, i32 1
  %51 = bitcast i32* %50 to i8*
  %52 = load i8, i8* %51, align 8, !range !3
  %53 = icmp ne i8 %52, 0
  br label %59

54:                                               ; preds = %46, %34
  %55 = phi %"class.blink::ExecutionContext"* [ %47, %46 ], [ null, %34 ]
  %56 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %55, i64 0, i32 6, i32 11
  %57 = load i32, i32* %56, align 8
  %58 = icmp eq i32 %57, 1
  br label %59

59:                                               ; preds = %48, %54
  %60 = phi i1 [ %53, %48 ], [ %58, %54 ]
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %71, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %64
  %69 = call zeroext i1 @_ZN5blink18OriginTrialContext20EnableTrialFromTokenEPKNS_14SecurityOriginEbS3_bRKN3WTF6StringE(%"class.blink::OriginTrialContext"* %0, %"class.blink::SecurityOrigin"* %31, i1 zeroext %60, %"class.blink::SecurityOrigin"* null, i1 zeroext false, %"class.WTF::String"* dereferenceable(8) %1) #13
  br i1 %69, label %70, label %71

70:                                               ; preds = %68
  call void @_ZN5blink18OriginTrialContext25InitializePendingFeaturesEv(%"class.blink::OriginTrialContext"* %0) #13
  br label %71

71:                                               ; preds = %59, %64, %68, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18OriginTrialContext16AddTokenInternalERKN3WTF6StringEPKNS_14SecurityOriginEbS7_b(%"class.blink::OriginTrialContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::SecurityOrigin"*, i1 zeroext, %"class.blink::SecurityOrigin"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = tail call zeroext i1 @_ZN5blink18OriginTrialContext20EnableTrialFromTokenEPKNS_14SecurityOriginEbS3_bRKN3WTF6StringE(%"class.blink::OriginTrialContext"* %0, %"class.blink::SecurityOrigin"* %2, i1 zeroext %3, %"class.blink::SecurityOrigin"* %4, i1 zeroext %5, %"class.WTF::String"* dereferenceable(8) %1)
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  tail call void @_ZN5blink18OriginTrialContext25InitializePendingFeaturesEv(%"class.blink::OriginTrialContext"* %0)
  br label %17

17:                                               ; preds = %6, %14, %16, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SecurityOrigin"* @_ZN5blink18OriginTrialContext17GetSecurityOriginEv(%"class.blink::OriginTrialContext"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 5, i32 0, i32 0
  %4 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %3, align 8
  %5 = icmp eq %"class.blink::ExecutionContext"* %4, null
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.9, i64 0, i64 0), i32 606, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0)) #13
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  %9 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %3, align 8
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  br i1 %10, label %25, label %11

11:                                               ; preds = %1, %6
  %12 = phi %"class.blink::ExecutionContext"* [ %9, %6 ], [ %4, %1 ]
  %13 = bitcast %"class.blink::ExecutionContext"* %12 to i1 (%"class.blink::ExecutionContext"*)***
  %14 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %14, i64 4
  %16 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %15, align 8
  %17 = call zeroext i1 %16(%"class.blink::ExecutionContext"* nonnull %12) #13
  br i1 %17, label %18, label %25

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %12, i64 -1, i32 22
  %20 = icmp eq %"class.blink::DOMTimerCoordinator"* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.blink::DOMTimerCoordinator", %"class.blink::DOMTimerCoordinator"* %19, i64 60
  %23 = bitcast %"class.blink::DOMTimerCoordinator"* %22 to %"class.blink::SecurityOrigin"**
  %24 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %23, align 8
  br label %28

25:                                               ; preds = %6, %11, %18
  %26 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %3, align 8
  %27 = call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %26) #13
  br label %28

28:                                               ; preds = %25, %21
  %29 = phi %"class.blink::SecurityOrigin"* [ %24, %21 ], [ %27, %25 ]
  ret %"class.blink::SecurityOrigin"* %29
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink18OriginTrialContext15IsSecureContextEv(%"class.blink::OriginTrialContext"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 5, i32 0, i32 0
  %4 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %3, align 8
  %5 = icmp eq %"class.blink::ExecutionContext"* %4, null
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.9, i64 0, i64 0), i32 620, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0)) #13
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  %9 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %3, align 8
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  br i1 %10, label %26, label %11

11:                                               ; preds = %1, %6
  %12 = phi %"class.blink::ExecutionContext"* [ %9, %6 ], [ %4, %1 ]
  %13 = bitcast %"class.blink::ExecutionContext"* %12 to i1 (%"class.blink::ExecutionContext"*)***
  %14 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %14, i64 4
  %16 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %15, align 8
  %17 = call zeroext i1 %16(%"class.blink::ExecutionContext"* nonnull %12) #13
  br i1 %17, label %18, label %26

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %12, i64 -1, i32 22
  %20 = icmp eq %"class.blink::DOMTimerCoordinator"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.blink::DOMTimerCoordinator", %"class.blink::DOMTimerCoordinator"* %19, i64 60, i32 0, i32 0, i32 0, i32 1
  %23 = bitcast i32* %22 to i8*
  %24 = load i8, i8* %23, align 8, !range !3
  %25 = icmp ne i8 %24, 0
  br label %31

26:                                               ; preds = %6, %11, %18
  %27 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %3, align 8
  %28 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %27, i64 0, i32 6, i32 11
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 1
  br label %31

31:                                               ; preds = %26, %21
  %32 = phi i1 [ %25, %21 ], [ %30, %26 ]
  ret i1 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18OriginTrialContext26AddTokenFromExternalScriptERKN3WTF6StringEPKNS_14SecurityOriginE(%"class.blink::OriginTrialContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::SecurityOrigin"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = icmp eq %"class.blink::SecurityOrigin"* %2, null
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase37is_third_party_origin_trials_enabled_E, align 1
  %8 = icmp eq i8 %7, 0
  %9 = or i1 %6, %8
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = tail call zeroext i1 @_ZNK5blink14SecurityOrigin24IsPotentiallyTrustworthyEv(%"class.blink::SecurityOrigin"* nonnull %2) #13
  br label %12

12:                                               ; preds = %3, %10
  %13 = phi %"class.blink::SecurityOrigin"* [ %2, %10 ], [ null, %3 ]
  %14 = phi i1 [ %11, %10 ], [ false, %3 ]
  %15 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 5, i32 0, i32 0
  %16 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %15, align 8
  %17 = icmp eq %"class.blink::ExecutionContext"* %16, null
  br i1 %17, label %18, label %23

18:                                               ; preds = %12
  %19 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.9, i64 0, i64 0), i32 606, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0)) #13
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  %21 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %15, align 8
  %22 = icmp eq %"class.blink::ExecutionContext"* %21, null
  br i1 %22, label %37, label %23

23:                                               ; preds = %18, %12
  %24 = phi %"class.blink::ExecutionContext"* [ %21, %18 ], [ %16, %12 ]
  %25 = bitcast %"class.blink::ExecutionContext"* %24 to i1 (%"class.blink::ExecutionContext"*)***
  %26 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %25, align 8
  %27 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %26, i64 4
  %28 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %27, align 8
  %29 = call zeroext i1 %28(%"class.blink::ExecutionContext"* nonnull %24) #13
  br i1 %29, label %32, label %30

30:                                               ; preds = %23
  %31 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %15, align 8
  br label %37

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %24, i64 -1, i32 22
  %34 = getelementptr inbounds %"class.blink::DOMTimerCoordinator", %"class.blink::DOMTimerCoordinator"* %33, i64 60
  %35 = bitcast %"class.blink::DOMTimerCoordinator"* %34 to %"class.blink::SecurityOrigin"**
  %36 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %35, align 8
  br label %40

37:                                               ; preds = %30, %18
  %38 = phi %"class.blink::ExecutionContext"* [ %31, %30 ], [ null, %18 ]
  %39 = call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %38) #13
  br label %40

40:                                               ; preds = %32, %37
  %41 = phi %"class.blink::SecurityOrigin"* [ %36, %32 ], [ %39, %37 ]
  %42 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %15, align 8
  %43 = icmp eq %"class.blink::ExecutionContext"* %42, null
  br i1 %43, label %44, label %49

44:                                               ; preds = %40
  %45 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.9, i64 0, i64 0), i32 620, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0)) #13
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #13
  %47 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %15, align 8
  %48 = icmp eq %"class.blink::ExecutionContext"* %47, null
  br i1 %48, label %64, label %49

49:                                               ; preds = %44, %40
  %50 = phi %"class.blink::ExecutionContext"* [ %47, %44 ], [ %42, %40 ]
  %51 = bitcast %"class.blink::ExecutionContext"* %50 to i1 (%"class.blink::ExecutionContext"*)***
  %52 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %52, i64 4
  %54 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %53, align 8
  %55 = call zeroext i1 %54(%"class.blink::ExecutionContext"* nonnull %50) #13
  br i1 %55, label %58, label %56

56:                                               ; preds = %49
  %57 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %15, align 8
  br label %64

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %50, i64 -1, i32 22
  %60 = getelementptr inbounds %"class.blink::DOMTimerCoordinator", %"class.blink::DOMTimerCoordinator"* %59, i64 60, i32 0, i32 0, i32 0, i32 1
  %61 = bitcast i32* %60 to i8*
  %62 = load i8, i8* %61, align 8, !range !3
  %63 = icmp ne i8 %62, 0
  br label %69

64:                                               ; preds = %56, %44
  %65 = phi %"class.blink::ExecutionContext"* [ %57, %56 ], [ null, %44 ]
  %66 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %65, i64 0, i32 6, i32 11
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 1
  br label %69

69:                                               ; preds = %58, %64
  %70 = phi i1 [ %63, %58 ], [ %68, %64 ]
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %81, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %74
  %79 = call zeroext i1 @_ZN5blink18OriginTrialContext20EnableTrialFromTokenEPKNS_14SecurityOriginEbS3_bRKN3WTF6StringE(%"class.blink::OriginTrialContext"* %0, %"class.blink::SecurityOrigin"* %41, i1 zeroext %70, %"class.blink::SecurityOrigin"* %13, i1 zeroext %14, %"class.WTF::String"* dereferenceable(8) %1) #13
  br i1 %79, label %80, label %81

80:                                               ; preds = %78
  call void @_ZN5blink18OriginTrialContext25InitializePendingFeaturesEv(%"class.blink::OriginTrialContext"* %0) #13
  br label %81

81:                                               ; preds = %69, %74, %78, %80
  ret void
}

declare zeroext i1 @_ZNK5blink14SecurityOrigin24IsPotentiallyTrustworthyEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink18OriginTrialContext20EnableTrialFromTokenEPKNS_14SecurityOriginEbS3_bRKN3WTF6StringE(%"class.blink::OriginTrialContext"*, %"class.blink::SecurityOrigin"*, i1 zeroext, %"class.blink::SecurityOrigin"*, i1 zeroext, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %10 = alloca %"class.url::Origin", align 8
  %11 = alloca %"class.url::Origin", align 8
  %12 = alloca %"class.blink::TrialTokenResult", align 8
  %13 = alloca %"class.url::Origin", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = bitcast %"class.WTF::StringUTF8Adaptor"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 40, i1 false)
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %9, %"class.WTF::String"* dereferenceable(8) %5, i32 0) #13
  %19 = bitcast %"class.url::Origin"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %19) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 80, i1 false)
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* nonnull %10) #13
  %20 = icmp ne %"class.blink::SecurityOrigin"* %3, null
  br i1 %20, label %21, label %24

21:                                               ; preds = %6
  %22 = bitcast %"class.url::Origin"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %22) #13
  call void @_ZNK5blink14SecurityOrigin11ToUrlOriginEv(%"class.url::Origin"* nonnull sret %11, %"class.blink::SecurityOrigin"* nonnull %3) #13
  %23 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* nonnull %10, %"class.url::Origin"* nonnull dereferenceable(80) %11) #13
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %22) #13
  br label %24

24:                                               ; preds = %21, %6
  %25 = bitcast %"class.blink::TrialTokenResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #13
  %26 = bitcast %"class.blink::TrialTokenResult"* %12 to i64*
  store i64 -6148914691236517206, i64* %26, align 8
  %27 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %28 = load %"class.blink::TrialTokenValidator"*, %"class.blink::TrialTokenValidator"** %27, align 8
  %29 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %9, i64 0, i32 1
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %9, i64 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = zext i32 %32 to i64
  %34 = bitcast %"class.url::Origin"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %34) #13
  call void @_ZNK5blink14SecurityOrigin11ToUrlOriginEv(%"class.url::Origin"* nonnull sret %13, %"class.blink::SecurityOrigin"* %1) #13
  %35 = select i1 %20, %"class.url::Origin"* %10, %"class.url::Origin"* null
  %36 = call i64 @_ZN4base4Time3NowEv() #13
  %37 = bitcast %"class.blink::TrialTokenValidator"* %28 to { i32, %"class.blink::TrialToken"* } (%"class.blink::TrialTokenValidator"*, i8*, i64, %"class.url::Origin"*, %"class.url::Origin"*, i64)***
  %38 = load { i32, %"class.blink::TrialToken"* } (%"class.blink::TrialTokenValidator"*, i8*, i64, %"class.url::Origin"*, %"class.url::Origin"*, i64)**, { i32, %"class.blink::TrialToken"* } (%"class.blink::TrialTokenValidator"*, i8*, i64, %"class.url::Origin"*, %"class.url::Origin"*, i64)*** %37, align 8
  %39 = getelementptr inbounds { i32, %"class.blink::TrialToken"* } (%"class.blink::TrialTokenValidator"*, i8*, i64, %"class.url::Origin"*, %"class.url::Origin"*, i64)*, { i32, %"class.blink::TrialToken"* } (%"class.blink::TrialTokenValidator"*, i8*, i64, %"class.url::Origin"*, %"class.url::Origin"*, i64)** %38, i64 3
  %40 = load { i32, %"class.blink::TrialToken"* } (%"class.blink::TrialTokenValidator"*, i8*, i64, %"class.url::Origin"*, %"class.url::Origin"*, i64)*, { i32, %"class.blink::TrialToken"* } (%"class.blink::TrialTokenValidator"*, i8*, i64, %"class.url::Origin"*, %"class.url::Origin"*, i64)** %39, align 8
  %41 = call { i32, %"class.blink::TrialToken"* } %40(%"class.blink::TrialTokenValidator"* %28, i8* %30, i64 %33, %"class.url::Origin"* nonnull dereferenceable(80) %13, %"class.url::Origin"* %35, i64 %36) #13
  %42 = getelementptr inbounds %"class.blink::TrialTokenResult", %"class.blink::TrialTokenResult"* %12, i64 0, i32 0
  %43 = extractvalue { i32, %"class.blink::TrialToken"* } %41, 0
  store i32 %43, i32* %42, align 8
  %44 = getelementptr inbounds %"class.blink::TrialTokenResult", %"class.blink::TrialTokenResult"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %45 = extractvalue { i32, %"class.blink::TrialToken"* } %41, 1
  store %"class.blink::TrialToken"* %45, %"class.blink::TrialToken"** %44, align 8
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %34) #13
  %46 = icmp eq i32 %43, 0
  br i1 %46, label %47, label %186

47:                                               ; preds = %24
  %48 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #13
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %49, align 8
  %50 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #13
  %51 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %45, i64 0, i32 2
  %52 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1, !noalias !5
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %47
  %57 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %50, i8* align 8 %57, i64 24, i1 false) #13
  br label %64

58:                                               ; preds = %47
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8, !noalias !5
  %61 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %62 = load i64, i64* %61, align 8, !noalias !5
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %15, i8* %60, i64 %62) #13
  %63 = load i8, i8* %53, align 1, !noalias !8
  br label %64

64:                                               ; preds = %56, %58
  %65 = phi i8 [ %54, %56 ], [ %63, %58 ]
  %66 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = select i1 %69, i8* %71, i8* %50
  %73 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #13
  %74 = icmp slt i8 %65, 0
  br i1 %74, label %77, label %75

75:                                               ; preds = %64
  %76 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* align 8 %76, i64 24, i1 false) #13
  br label %82

77:                                               ; preds = %64
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8, !noalias !8
  %80 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %81 = load i64, i64* %80, align 8, !noalias !8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %16, i8* %79, i64 %81) #13
  br label %82

82:                                               ; preds = %75, %77
  %83 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = zext i8 %85 to i64
  %90 = select i1 %86, i64 %88, i64 %89
  %91 = call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKhm(i8* %72, i64 %90) #13
  store %"class.WTF::StringImpl"* %91, %"class.WTF::StringImpl"** %49, align 8
  %92 = load i8, i8* %84, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %82
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  call void @_ZdlPv(i8* %96) #14
  br label %97

97:                                               ; preds = %82, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #13
  %98 = load i8, i8* %67, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %97
  %101 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %101) #14
  br label %102

102:                                              ; preds = %97, %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #13
  %103 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #13
  %104 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %104, label %105, label %109

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  store i8* null, i8** %106, align 8
  %107 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %108 = bitcast %"class.WTF::StringView"* %17 to i64*
  store i64 %107, i64* %108, align 8
  br label %116

109:                                              ; preds = %102
  %110 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 0
  store %"class.WTF::StringImpl"* %91, %"class.WTF::StringImpl"** %110, align 8
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 1
  %112 = load i32, i32* %111, align 4
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 1
  %114 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  %115 = bitcast i8** %114 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %113, %"class.WTF::StringImpl"** %115, align 8
  br label %116

116:                                              ; preds = %105, %109
  %117 = phi i32 [ %112, %109 ], [ 0, %105 ]
  %118 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 %117, i32* %118, align 8
  %119 = call zeroext i1 @_ZN5blink13origin_trials12IsTrialValidERKN3WTF10StringViewE(%"class.WTF::StringView"* nonnull dereferenceable(24) %17) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #13
  br i1 %119, label %120, label %169

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %45, i64 0, i32 5
  %122 = load i8, i8* %121, align 8, !range !3
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %144, label %124

124:                                              ; preds = %120
  %125 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %125) #13
  br i1 %104, label %126, label %130

126:                                              ; preds = %124
  %127 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %127, align 8
  %128 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %129 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %128, i64* %129, align 8
  br label %137

130:                                              ; preds = %124
  %131 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %91, %"class.WTF::StringImpl"** %131, align 8
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 1
  %133 = load i32, i32* %132, align 4
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 1
  %135 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %136 = bitcast i8** %135 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %134, %"class.WTF::StringImpl"** %136, align 8
  br label %137

137:                                              ; preds = %130, %126
  %138 = phi i32 [ %133, %130 ], [ 0, %126 ]
  %139 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %138, i32* %139, align 8
  %140 = call zeroext i1 @_ZN5blink13origin_trials34IsTrialEnabledForThirdPartyOriginsERKN3WTF10StringViewE(%"class.WTF::StringView"* nonnull dereferenceable(24) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %125) #13
  br i1 %140, label %141, label %169

141:                                              ; preds = %137
  %142 = and i1 %2, %4
  %143 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %143) #13
  br i1 %142, label %163, label %146

144:                                              ; preds = %120
  %145 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %145) #13
  br i1 %2, label %163, label %146

146:                                              ; preds = %144, %141
  %147 = phi i8* [ %143, %141 ], [ %145, %144 ]
  br i1 %104, label %148, label %152

148:                                              ; preds = %146
  %149 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %149, align 8
  %150 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %151 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %150, i64* %151, align 8
  br label %159

152:                                              ; preds = %146
  %153 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %91, %"class.WTF::StringImpl"** %153, align 8
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 1
  %155 = load i32, i32* %154, align 4
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 1
  %157 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %158 = bitcast i8** %157 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %156, %"class.WTF::StringImpl"** %158, align 8
  br label %159

159:                                              ; preds = %152, %148
  %160 = phi i32 [ %155, %152 ], [ 0, %148 ]
  %161 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %160, i32* %161, align 8
  %162 = call zeroext i1 @_ZN5blink13origin_trials32IsTrialEnabledForInsecureContextERKN3WTF10StringViewE(%"class.WTF::StringView"* nonnull dereferenceable(24) %8) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %147) #13
  br i1 %162, label %165, label %169

163:                                              ; preds = %144, %141
  %164 = phi i8* [ %143, %141 ], [ %145, %144 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %164) #13
  br label %165

165:                                              ; preds = %163, %159
  %166 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %45, i64 0, i32 3, i32 0, i32 0
  %167 = load i64, i64* %166, align 8
  %168 = call i32 @_ZN5blink18OriginTrialContext19EnableTrialFromNameERKN3WTF6StringEN4base4TimeE(%"class.blink::OriginTrialContext"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %14, i64 %167)
  br label %169

169:                                              ; preds = %159, %137, %165, %116
  %170 = phi i32 [ 0, %165 ], [ 0, %116 ], [ 2, %159 ], [ 8, %137 ]
  %171 = phi i32 [ %168, %165 ], [ 1, %116 ], [ 1, %159 ], [ 1, %137 ]
  br i1 %104, label %185, label %172

172:                                              ; preds = %169
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load atomic i32, i32* %173 monotonic, align 4
  %175 = and i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  br i1 %176, label %179, label %181

179:                                              ; preds = %172
  %180 = add i32 %178, -1
  store i32 %180, i32* %177, align 4
  br label %181

181:                                              ; preds = %179, %172
  %182 = phi i32 [ %180, %179 ], [ %178, %172 ]
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %185

184:                                              ; preds = %181
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #13
  br label %185

185:                                              ; preds = %169, %181, %184
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #13
  br label %186

186:                                              ; preds = %185, %24
  %187 = phi i32 [ %170, %185 ], [ %43, %24 ]
  %188 = phi i32 [ %171, %185 ], [ 1, %24 ]
  %189 = load atomic i64, i64* @_ZZN5blink12_GLOBAL__N_136RecordTokenValidationResultHistogramENS_22OriginTrialTokenStatusEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %190 = inttoptr i64 %189 to %"class.base::HistogramBase"*
  %191 = icmp eq i64 %189, 0
  br i1 %191, label %192, label %195

192:                                              ; preds = %186
  %193 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.22, i64 0, i64 0), i32 1, i32 11, i32 12, i32 1) #13
  %194 = ptrtoint %"class.base::HistogramBase"* %193 to i64
  store atomic i64 %194, i64* @_ZZN5blink12_GLOBAL__N_136RecordTokenValidationResultHistogramENS_22OriginTrialTokenStatusEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %195

195:                                              ; preds = %186, %192
  %196 = phi %"class.base::HistogramBase"* [ %190, %186 ], [ %193, %192 ]
  %197 = bitcast %"class.base::HistogramBase"* %196 to void (%"class.base::HistogramBase"*, i32)***
  %198 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %197, align 8
  %199 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %198, i64 6
  %200 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %199, align 8
  call void %200(%"class.base::HistogramBase"* %196, i32 %187) #13
  call void @_ZN5blink18OriginTrialContext10CacheTokenERKN3WTF6StringERKNS_16TrialTokenResultENS_17OriginTrialStatusE(%"class.blink::OriginTrialContext"* %0, %"class.WTF::String"* dereferenceable(8) %5, %"class.blink::TrialTokenResult"* nonnull dereferenceable(16) %12, i32 %188)
  %201 = icmp eq i32 %188, 0
  %202 = load %"class.blink::TrialToken"*, %"class.blink::TrialToken"** %44, align 8
  store %"class.blink::TrialToken"* null, %"class.blink::TrialToken"** %44, align 8
  %203 = icmp eq %"class.blink::TrialToken"* %202, null
  br i1 %203, label %206, label %204

204:                                              ; preds = %195
  call void @_ZN5blink10TrialTokenD1Ev(%"class.blink::TrialToken"* nonnull %202) #13
  %205 = bitcast %"class.blink::TrialToken"* %202 to i8*
  call void @_ZdlPv(i8* %205) #14
  br label %206

206:                                              ; preds = %195, %204
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #13
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %19) #13
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #13
  ret i1 %201
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18OriginTrialContext25InitializePendingFeaturesEv(%"class.blink::OriginTrialContext"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::ScriptState::Scope", align 8
  %3 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 2, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %161, label %10

10:                                               ; preds = %6, %1
  %11 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 5, i32 0, i32 0
  %12 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %11, align 8
  %13 = icmp eq %"class.blink::ExecutionContext"* %12, null
  br i1 %13, label %161, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.blink::ExecutionContext"* %12 to i1 (%"class.blink::ExecutionContext"*)***
  %16 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %16, i64 1
  %18 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::ExecutionContext"* nonnull %12) #13
  br i1 %19, label %20, label %161

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %12, i64 -1, i32 8
  %22 = icmp eq i32* %21, null
  br i1 %22, label %161, label %23

23:                                               ; preds = %20
  %24 = bitcast i32* %21 to %"class.blink::LocalDOMWindow"*
  %25 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* nonnull %24) #13
  %26 = icmp eq %"class.blink::Document"* %25, null
  br i1 %26, label %161, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds i32, i32* %21, i64 18
  %29 = bitcast i32* %28 to %"class.blink::LocalFrame"**
  %30 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %29, align 8
  %31 = icmp eq %"class.blink::LocalFrame"* %30, null
  br i1 %31, label %161, label %32

32:                                               ; preds = %27
  %33 = tail call %"class.blink::ScriptState"* @_ZN5blink25ToScriptStateForMainWorldEPNS_10LocalFrameE(%"class.blink::LocalFrame"* nonnull %30) #13
  %34 = icmp eq %"class.blink::ScriptState"* %33, null
  br i1 %34, label %161, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"class.v8::Context"*, %"class.v8::Context"** %36, align 8
  %38 = icmp eq %"class.v8::Context"* %37, null
  br i1 %38, label %161, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 3, i32 0, i32 0
  %41 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %40, align 8
  %42 = icmp eq %"class.blink::V8PerContextData"* %41, null
  br i1 %42, label %161, label %43

43:                                               ; preds = %39
  %44 = bitcast %"class.blink::ScriptState::Scope"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #13
  %45 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %2, i64 0, i32 1, i32 0
  %46 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %2, i64 0, i32 0
  %47 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 0
  %48 = bitcast %"class.blink::ScriptState::Scope"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 32, i1 false)
  %49 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %47, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %46, %"class.v8::Isolate"* %49) #13
  %50 = load %"class.v8::Context"*, %"class.v8::Context"** %36, align 8
  %51 = icmp eq %"class.v8::Context"* %50, null
  br i1 %51, label %59, label %52

52:                                               ; preds = %43
  %53 = bitcast %"class.blink::ScriptState"* %33 to %"class.v8::internal::Isolate"**
  %54 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %53, align 8
  %55 = bitcast %"class.v8::Context"* %50 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %54, i64 %56) #13
  %58 = bitcast i64* %57 to %"class.v8::Context"*
  br label %59

59:                                               ; preds = %43, %52
  %60 = phi %"class.v8::Context"* [ %58, %52 ], [ null, %43 ]
  store %"class.v8::Context"* %60, %"class.v8::Context"** %45, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %60) #13
  %61 = load i32, i32* %3, align 4
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 0, i32 0, i32 0
  %64 = load i32*, i32** %63, align 8
  %65 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 0, i32 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds i32, i32* %64, i64 %67
  br i1 %62, label %82, label %69

69:                                               ; preds = %59
  %70 = icmp eq i32 %66, 0
  br i1 %70, label %79, label %71

71:                                               ; preds = %69, %76
  %72 = phi i32* [ %77, %76 ], [ %64, %69 ]
  %73 = load i32, i32* %72, align 4
  %74 = or i32 %73, 1
  %75 = icmp eq i32 %74, -127
  br i1 %75, label %76, label %79

76:                                               ; preds = %71
  %77 = getelementptr inbounds i32, i32* %72, i64 1
  %78 = icmp eq i32* %77, %68
  br i1 %78, label %82, label %71

79:                                               ; preds = %71, %69
  %80 = phi i32* [ %64, %69 ], [ %72, %71 ]
  %81 = icmp eq i32* %80, %68
  br i1 %81, label %82, label %106

82:                                               ; preds = %76, %106, %123, %120, %59, %79
  %83 = phi i32 [ 0, %79 ], [ 0, %59 ], [ %112, %120 ], [ %112, %123 ], [ %112, %106 ], [ 0, %76 ]
  %84 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 2, i32 0, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 2, i32 0, i32 0
  %88 = load i32*, i32** %87, align 8
  %89 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 2, i32 0, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds i32, i32* %88, i64 %91
  br i1 %86, label %125, label %93

93:                                               ; preds = %82
  %94 = icmp eq i32 %90, 0
  br i1 %94, label %103, label %95

95:                                               ; preds = %93, %100
  %96 = phi i32* [ %101, %100 ], [ %88, %93 ]
  %97 = load i32, i32* %96, align 4
  %98 = or i32 %97, 1
  %99 = icmp eq i32 %98, -127
  br i1 %99, label %100, label %103

100:                                              ; preds = %95
  %101 = getelementptr inbounds i32, i32* %96, i64 1
  %102 = icmp eq i32* %101, %92
  br i1 %102, label %125, label %95

103:                                              ; preds = %95, %93
  %104 = phi i32* [ %88, %93 ], [ %96, %95 ]
  %105 = icmp eq i32* %104, %92
  br i1 %105, label %125, label %128

106:                                              ; preds = %79, %123
  %107 = phi i32 [ %112, %123 ], [ 0, %79 ]
  %108 = phi i32* [ %116, %123 ], [ %80, %79 ]
  %109 = load i32, i32* %108, align 4
  %110 = call zeroext i1 @_ZN5blink18OriginTrialContext14InstallFeatureENS_18OriginTrialFeatureEPNS_11ScriptStateE(%"class.blink::OriginTrialContext"* %0, i32 %109, %"class.blink::ScriptState"* nonnull %33)
  %111 = zext i1 %110 to i32
  %112 = add nuw nsw i32 %107, %111
  %113 = getelementptr inbounds i32, i32* %108, i64 1
  %114 = icmp eq i32* %113, %68
  br i1 %114, label %82, label %115

115:                                              ; preds = %106, %120
  %116 = phi i32* [ %121, %120 ], [ %113, %106 ]
  %117 = load i32, i32* %116, align 4
  %118 = or i32 %117, 1
  %119 = icmp eq i32 %118, -127
  br i1 %119, label %120, label %123

120:                                              ; preds = %115
  %121 = getelementptr inbounds i32, i32* %116, i64 1
  %122 = icmp eq i32* %121, %68
  br i1 %122, label %82, label %115

123:                                              ; preds = %115
  %124 = icmp eq i32* %116, %68
  br i1 %124, label %82, label %106

125:                                              ; preds = %100, %128, %145, %142, %82, %103
  %126 = phi i32 [ %83, %103 ], [ %83, %82 ], [ %134, %142 ], [ %134, %145 ], [ %134, %128 ], [ %83, %100 ]
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %159, label %147

128:                                              ; preds = %103, %145
  %129 = phi i32 [ %134, %145 ], [ %83, %103 ]
  %130 = phi i32* [ %138, %145 ], [ %104, %103 ]
  %131 = load i32, i32* %130, align 4
  %132 = call zeroext i1 @_ZN5blink18OriginTrialContext14InstallFeatureENS_18OriginTrialFeatureEPNS_11ScriptStateE(%"class.blink::OriginTrialContext"* %0, i32 %131, %"class.blink::ScriptState"* nonnull %33)
  %133 = zext i1 %132 to i32
  %134 = add nuw nsw i32 %129, %133
  %135 = getelementptr inbounds i32, i32* %130, i64 1
  %136 = icmp eq i32* %135, %92
  br i1 %136, label %125, label %137

137:                                              ; preds = %128, %142
  %138 = phi i32* [ %143, %142 ], [ %135, %128 ]
  %139 = load i32, i32* %138, align 4
  %140 = or i32 %139, 1
  %141 = icmp eq i32 %140, -127
  br i1 %141, label %142, label %145

142:                                              ; preds = %137
  %143 = getelementptr inbounds i32, i32* %138, i64 1
  %144 = icmp eq i32* %143, %92
  br i1 %144, label %125, label %137

145:                                              ; preds = %137
  %146 = icmp eq i32* %138, %92
  br i1 %146, label %125, label %128

147:                                              ; preds = %125
  %148 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %47, align 8
  %149 = load %"class.v8::Context"*, %"class.v8::Context"** %36, align 8
  %150 = icmp eq %"class.v8::Context"* %149, null
  br i1 %150, label %157, label %151

151:                                              ; preds = %147
  %152 = bitcast %"class.v8::Isolate"* %148 to %"class.v8::internal::Isolate"*
  %153 = bitcast %"class.v8::Context"* %149 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %152, i64 %154) #13
  %156 = bitcast i64* %155 to %"class.v8::Context"*
  br label %157

157:                                              ; preds = %147, %151
  %158 = phi %"class.v8::Context"* [ %156, %151 ], [ null, %147 ]
  call void @_ZN2v87Isolate26InstallConditionalFeaturesENS_5LocalINS_7ContextEEE(%"class.v8::Isolate"* %148, %"class.v8::Context"* %158) #13
  br label %159

159:                                              ; preds = %125, %157
  %160 = load %"class.v8::Context"*, %"class.v8::Context"** %45, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %160) #13
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %46) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #13
  br label %161

161:                                              ; preds = %39, %35, %10, %14, %23, %20, %159, %32, %27, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink18OriginTrialContext20EnableTrialFromTokenEPKNS_14SecurityOriginEbRKN3WTF6StringE(%"class.blink::OriginTrialContext"*, %"class.blink::SecurityOrigin"*, i1 zeroext, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = tail call zeroext i1 @_ZN5blink18OriginTrialContext20EnableTrialFromTokenEPKNS_14SecurityOriginEbS3_bRKN3WTF6StringE(%"class.blink::OriginTrialContext"* %0, %"class.blink::SecurityOrigin"* %1, i1 zeroext %2, %"class.blink::SecurityOrigin"* null, i1 zeroext false, %"class.WTF::String"* dereferenceable(8) %3)
  ret i1 %5
}

declare %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"*) local_unnamed_addr #2

declare %"class.blink::ScriptState"* @_ZN5blink25ToScriptStateForMainWorldEPNS_10LocalFrameE(%"class.blink::LocalFrame"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink18OriginTrialContext14InstallFeatureENS_18OriginTrialFeatureEPNS_11ScriptStateE(%"class.blink::OriginTrialContext"*, i32, %"class.blink::ScriptState"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  store i32 %1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %5, i64 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp eq i32* %7, null
  br i1 %8, label %64, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, -1
  %13 = zext i32 %12 to i64
  %14 = shl i32 %1, 15
  %15 = xor i32 %14, -1
  %16 = add i32 %15, %1
  %17 = lshr i32 %16, 10
  %18 = xor i32 %17, %16
  %19 = mul i32 %18, 9
  %20 = lshr i32 %19, 6
  %21 = xor i32 %20, %19
  %22 = shl i32 %21, 11
  %23 = xor i32 %22, -1
  %24 = add i32 %21, %23
  %25 = lshr i32 %24, 16
  %26 = xor i32 %25, %24
  %27 = and i32 %12, %26
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds i32, i32* %7, i64 %28
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, %1
  br i1 %31, label %61, label %32

32:                                               ; preds = %9
  %33 = xor i32 %26, -1
  %34 = lshr i32 %24, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %51, %32
  %47 = phi i32 [ %30, %32 ], [ %57, %51 ]
  %48 = phi i64 [ %28, %32 ], [ %55, %51 ]
  %49 = phi i64 [ 0, %32 ], [ %53, %51 ]
  %50 = icmp eq i32 %47, -128
  br i1 %50, label %64, label %51

51:                                               ; preds = %46
  %52 = icmp eq i64 %49, 0
  %53 = select i1 %52, i64 %45, i64 %49
  %54 = add i64 %53, %48
  %55 = and i64 %54, %13
  %56 = getelementptr inbounds i32, i32* %7, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %1
  br i1 %58, label %59, label %46

59:                                               ; preds = %51
  %60 = getelementptr inbounds i32, i32* %7, i64 %55
  br label %61

61:                                               ; preds = %59, %9
  %62 = phi i32* [ %29, %9 ], [ %60, %59 ]
  %63 = icmp eq i32* %62, null
  br i1 %63, label %64, label %67

64:                                               ; preds = %46, %61, %3
  tail call void @_ZN5blink27InstallPropertiesPerFeatureEPNS_11ScriptStateENS_18OriginTrialFeatureE(%"class.blink::ScriptState"* %2, i32 %1) #13
  %65 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %5, i64 0, i32 0
  %66 = call { i32*, i8 } @_ZN3WTF9HashTableIN5blink18OriginTrialFeatureES2_NS_17IdentityExtractorENS_7IntHashIS2_EENS_10HashTraitsIS2_EES7_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S7_S8_EERKS2_RS2_EENS_18HashTableAddResultIS9_S2_EEOT0_OT1_(%"class.WTF::HashTable"* %65, i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %4) #13
  br label %67

67:                                               ; preds = %61, %64
  %68 = phi i1 [ true, %64 ], [ false, %61 ]
  ret i1 %68
}

declare void @_ZN2v87Isolate26InstallConditionalFeaturesENS_5LocalINS_7ContextEEE(%"class.v8::Isolate"*, %"class.v8::Context"*) local_unnamed_addr #2

declare void @_ZN5blink27InstallPropertiesPerFeatureEPNS_11ScriptStateENS_18OriginTrialFeatureE(%"class.blink::ScriptState"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18OriginTrialContext10AddFeatureENS_18OriginTrialFeatureE(%"class.blink::OriginTrialContext"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  store i32 %1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 0, i32 0
  %5 = call { i32*, i8 } @_ZN3WTF9HashTableIN5blink18OriginTrialFeatureES2_NS_17IdentityExtractorENS_7IntHashIS2_EENS_10HashTraitsIS2_EES7_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S7_S8_EERKS2_RS2_EENS_18HashTableAddResultIS9_S2_EEOT0_OT1_(%"class.WTF::HashTable"* %4, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %3) #13
  call void @_ZN5blink18OriginTrialContext25InitializePendingFeaturesEv(%"class.blink::OriginTrialContext"* %0)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink18OriginTrialContext16IsFeatureEnabledENS_18OriginTrialFeatureE(%"class.blink::OriginTrialContext"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = shl i32 %1, 15
  %12 = xor i32 %11, -1
  %13 = add i32 %12, %1
  %14 = lshr i32 %13, 10
  %15 = xor i32 %14, %13
  %16 = mul i32 %15, 9
  %17 = lshr i32 %16, 6
  %18 = xor i32 %17, %16
  %19 = shl i32 %18, 11
  %20 = xor i32 %19, -1
  %21 = add i32 %18, %20
  %22 = lshr i32 %21, 16
  %23 = xor i32 %22, %21
  %24 = and i32 %9, %23
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i32, i32* %4, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, %1
  br i1 %28, label %58, label %29

29:                                               ; preds = %6
  %30 = xor i32 %23, -1
  %31 = lshr i32 %21, 23
  %32 = add i32 %31, %30
  %33 = shl i32 %32, 12
  %34 = xor i32 %33, %32
  %35 = lshr i32 %34, 7
  %36 = xor i32 %35, %34
  %37 = shl i32 %36, 2
  %38 = xor i32 %37, %36
  %39 = lshr i32 %38, 20
  %40 = xor i32 %39, %38
  %41 = or i32 %40, 1
  %42 = zext i32 %41 to i64
  br label %43

43:                                               ; preds = %48, %29
  %44 = phi i32 [ %27, %29 ], [ %54, %48 ]
  %45 = phi i64 [ %25, %29 ], [ %52, %48 ]
  %46 = phi i64 [ 0, %29 ], [ %50, %48 ]
  %47 = icmp eq i32 %44, -128
  br i1 %47, label %61, label %48

48:                                               ; preds = %43
  %49 = icmp eq i64 %46, 0
  %50 = select i1 %49, i64 %42, i64 %46
  %51 = add i64 %50, %45
  %52 = and i64 %51, %10
  %53 = getelementptr inbounds i32, i32* %4, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, %1
  br i1 %55, label %56, label %43

56:                                               ; preds = %48
  %57 = getelementptr inbounds i32, i32* %4, i64 %52
  br label %58

58:                                               ; preds = %56, %6
  %59 = phi i32* [ %26, %6 ], [ %57, %56 ]
  %60 = icmp eq i32* %59, null
  br i1 %60, label %61, label %120

61:                                               ; preds = %43, %58, %2
  %62 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load i32*, i32** %62, align 8
  %64 = icmp eq i32* %63, null
  br i1 %64, label %117, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 2, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, -1
  %69 = zext i32 %68 to i64
  %70 = shl i32 %1, 15
  %71 = xor i32 %70, -1
  %72 = add i32 %71, %1
  %73 = lshr i32 %72, 10
  %74 = xor i32 %73, %72
  %75 = mul i32 %74, 9
  %76 = lshr i32 %75, 6
  %77 = xor i32 %76, %75
  %78 = shl i32 %77, 11
  %79 = xor i32 %78, -1
  %80 = add i32 %77, %79
  %81 = lshr i32 %80, 16
  %82 = xor i32 %81, %80
  %83 = and i32 %68, %82
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds i32, i32* %63, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, %1
  br i1 %87, label %117, label %88

88:                                               ; preds = %65
  %89 = xor i32 %82, -1
  %90 = lshr i32 %80, 23
  %91 = add i32 %90, %89
  %92 = shl i32 %91, 12
  %93 = xor i32 %92, %91
  %94 = lshr i32 %93, 7
  %95 = xor i32 %94, %93
  %96 = shl i32 %95, 2
  %97 = xor i32 %96, %95
  %98 = lshr i32 %97, 20
  %99 = xor i32 %98, %97
  %100 = or i32 %99, 1
  %101 = zext i32 %100 to i64
  br label %102

102:                                              ; preds = %107, %88
  %103 = phi i32 [ %86, %88 ], [ %113, %107 ]
  %104 = phi i64 [ %84, %88 ], [ %111, %107 ]
  %105 = phi i64 [ 0, %88 ], [ %109, %107 ]
  %106 = icmp eq i32 %103, -128
  br i1 %106, label %117, label %107

107:                                              ; preds = %102
  %108 = icmp eq i64 %105, 0
  %109 = select i1 %108, i64 %101, i64 %105
  %110 = add i64 %109, %104
  %111 = and i64 %110, %69
  %112 = getelementptr inbounds i32, i32* %63, i64 %111
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %113, %1
  br i1 %114, label %115, label %102

115:                                              ; preds = %107
  %116 = getelementptr inbounds i32, i32* %63, i64 %111
  br label %117

117:                                              ; preds = %102, %115, %61, %65
  %118 = phi i32* [ null, %61 ], [ %85, %65 ], [ %116, %115 ], [ null, %102 ]
  %119 = icmp ne i32* %118, null
  br label %120

120:                                              ; preds = %58, %117
  %121 = phi i1 [ true, %58 ], [ %119, %117 ]
  ret i1 %121
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZN5blink18OriginTrialContext16GetFeatureExpiryENS_18OriginTrialFeatureE(%"class.blink::OriginTrialContext"* nocapture readonly, i32) local_unnamed_addr #4 align 2 {
  %3 = tail call zeroext i1 @_ZNK5blink18OriginTrialContext16IsFeatureEnabledENS_18OriginTrialFeatureE(%"class.blink::OriginTrialContext"* %0, i32 %1)
  br i1 %3, label %4, label %76

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair"* %6, null
  %8 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  br i1 %7, label %65, label %10

10:                                               ; preds = %4
  %11 = add i32 %9, -1
  %12 = zext i32 %11 to i64
  %13 = shl i32 %1, 15
  %14 = xor i32 %13, -1
  %15 = add i32 %14, %1
  %16 = lshr i32 %15, 10
  %17 = xor i32 %16, %15
  %18 = mul i32 %17, 9
  %19 = lshr i32 %18, 6
  %20 = xor i32 %19, %18
  %21 = shl i32 %20, 11
  %22 = xor i32 %21, -1
  %23 = add i32 %20, %22
  %24 = lshr i32 %23, 16
  %25 = xor i32 %24, %23
  %26 = and i32 %11, %25
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %28, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, %1
  br i1 %31, label %60, label %32

32:                                               ; preds = %10
  %33 = xor i32 %25, -1
  %34 = lshr i32 %23, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %51, %32
  %47 = phi i32 [ %30, %32 ], [ %58, %51 ]
  %48 = phi i64 [ %27, %32 ], [ %55, %51 ]
  %49 = phi i64 [ 0, %32 ], [ %53, %51 ]
  %50 = icmp eq i32 %47, -128
  br i1 %50, label %65, label %51

51:                                               ; preds = %46
  %52 = icmp eq i64 %49, 0
  %53 = select i1 %52, i64 %45, i64 %49
  %54 = add i64 %53, %48
  %55 = and i64 %54, %12
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %55
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %56, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %1
  br i1 %59, label %60, label %46

60:                                               ; preds = %51, %10
  %61 = phi %"struct.WTF::KeyValuePair"* [ %28, %10 ], [ %56, %51 ]
  %62 = icmp eq %"struct.WTF::KeyValuePair"* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %60
  %64 = zext i32 %9 to i64
  br label %68

65:                                               ; preds = %46, %60, %4
  %66 = zext i32 %9 to i64
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %66
  br label %68

68:                                               ; preds = %63, %65
  %69 = phi i64 [ %64, %63 ], [ %66, %65 ]
  %70 = phi %"struct.WTF::KeyValuePair"* [ %61, %63 ], [ %67, %65 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %69
  %72 = icmp eq %"struct.WTF::KeyValuePair"* %70, %71
  br i1 %72, label %76, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 0, i32 1, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  br label %76

76:                                               ; preds = %73, %68, %2
  %77 = phi i64 [ 0, %2 ], [ %75, %73 ], [ 0, %68 ]
  ret i64 %77
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink18OriginTrialContext28IsNavigationFeatureActivatedENS_18OriginTrialFeatureE(%"class.blink::OriginTrialContext"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %58, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = shl i32 %1, 15
  %12 = xor i32 %11, -1
  %13 = add i32 %12, %1
  %14 = lshr i32 %13, 10
  %15 = xor i32 %14, %13
  %16 = mul i32 %15, 9
  %17 = lshr i32 %16, 6
  %18 = xor i32 %17, %16
  %19 = shl i32 %18, 11
  %20 = xor i32 %19, -1
  %21 = add i32 %18, %20
  %22 = lshr i32 %21, 16
  %23 = xor i32 %22, %21
  %24 = and i32 %9, %23
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i32, i32* %4, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, %1
  br i1 %28, label %58, label %29

29:                                               ; preds = %6
  %30 = xor i32 %23, -1
  %31 = lshr i32 %21, 23
  %32 = add i32 %31, %30
  %33 = shl i32 %32, 12
  %34 = xor i32 %33, %32
  %35 = lshr i32 %34, 7
  %36 = xor i32 %35, %34
  %37 = shl i32 %36, 2
  %38 = xor i32 %37, %36
  %39 = lshr i32 %38, 20
  %40 = xor i32 %39, %38
  %41 = or i32 %40, 1
  %42 = zext i32 %41 to i64
  br label %43

43:                                               ; preds = %48, %29
  %44 = phi i32 [ %27, %29 ], [ %54, %48 ]
  %45 = phi i64 [ %25, %29 ], [ %52, %48 ]
  %46 = phi i64 [ 0, %29 ], [ %50, %48 ]
  %47 = icmp eq i32 %44, -128
  br i1 %47, label %58, label %48

48:                                               ; preds = %43
  %49 = icmp eq i64 %46, 0
  %50 = select i1 %49, i64 %42, i64 %46
  %51 = add i64 %50, %45
  %52 = and i64 %51, %10
  %53 = getelementptr inbounds i32, i32* %4, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, %1
  br i1 %55, label %56, label %43

56:                                               ; preds = %48
  %57 = getelementptr inbounds i32, i32* %4, i64 %52
  br label %58

58:                                               ; preds = %43, %56, %2, %6
  %59 = phi i32* [ null, %2 ], [ %26, %6 ], [ %57, %56 ], [ null, %43 ]
  %60 = icmp ne i32* %59, null
  ret i1 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18OriginTrialContext21AddForceEnabledTrialsERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::OriginTrialContext"*, %"class.WTF::Vector.126"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.126", %"class.WTF::Vector.126"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.126", %"class.WTF::Vector.126"* %1, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %20, label %11

10:                                               ; preds = %11
  br i1 %16, label %19, label %20

11:                                               ; preds = %2, %11
  %12 = phi i1 [ %16, %11 ], [ false, %2 ]
  %13 = phi %"class.WTF::String"* [ %17, %11 ], [ %4, %2 ]
  %14 = tail call i32 @_ZN5blink18OriginTrialContext19EnableTrialFromNameERKN3WTF6StringEN4base4TimeE(%"class.blink::OriginTrialContext"* %0, %"class.WTF::String"* dereferenceable(8) %13, i64 9223372036854775807)
  %15 = icmp eq i32 %14, 0
  %16 = or i1 %12, %15
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 1
  %18 = icmp eq %"class.WTF::String"* %17, %8
  br i1 %18, label %10, label %11

19:                                               ; preds = %10
  tail call void @_ZN5blink18OriginTrialContext25InitializePendingFeaturesEv(%"class.blink::OriginTrialContext"* %0)
  br label %20

20:                                               ; preds = %2, %19, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18OriginTrialContext19EnableTrialFromNameERKN3WTF6StringEN4base4TimeE(%"class.blink::OriginTrialContext"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::Time", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.base::CheckedContiguousIterator", align 8
  %8 = alloca %"class.base::CheckedContiguousIterator", align 8
  %9 = alloca i32, align 4
  %10 = alloca %"class.base::CheckedContiguousIterator", align 8
  %11 = alloca %"class.base::CheckedContiguousIterator", align 8
  %12 = alloca i32, align 4
  %13 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %4, i64 0, i32 0, i32 0
  store i64 %2, i64* %13, align 8
  %14 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %18, label %22

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %19, align 8
  %20 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %21 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %20, i64* %21, align 8
  br label %29

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 1
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %28 = bitcast i8** %27 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %28, align 8
  br label %29

29:                                               ; preds = %18, %22
  %30 = phi i32 [ %25, %22 ], [ 0, %18 ]
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %30, i32* %31, align 8
  %32 = call zeroext i1 @_ZN5blink18OriginTrialContext22CanEnableTrialFromNameERKN3WTF10StringViewE(%"class.blink::OriginTrialContext"* undef, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #13
  br i1 %32, label %33, label %139

33:                                               ; preds = %29
  %34 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #13
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %37, label %41

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %38, align 8
  %39 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %40 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %39, i64* %40, align 8
  br label %48

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %42, align 8
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 1
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %47 = bitcast i8** %46 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %47, align 8
  br label %48

48:                                               ; preds = %37, %41
  %49 = phi i32 [ %44, %41 ], [ 0, %37 ]
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %49, i32* %50, align 8
  %51 = call { i64, i32* } @_ZN5blink13origin_trials16FeaturesForTrialERKN3WTF10StringViewE(%"class.WTF::StringView"* nonnull dereferenceable(24) %6) #13
  %52 = extractvalue { i64, i32* } %51, 0
  %53 = extractvalue { i64, i32* } %51, 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #13
  %54 = bitcast %"class.base::CheckedContiguousIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #13
  %55 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %7, i64 0, i32 1
  %56 = getelementptr inbounds i32, i32* %53, i64 %52
  %57 = bitcast %"class.base::CheckedContiguousIterator"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink18OriginTrialFeatureEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"* nonnull %7, i32* %53, i32* %53, i32* %56) #13
  %58 = bitcast %"class.base::CheckedContiguousIterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #13
  %59 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %8, i64 0, i32 1
  %60 = bitcast %"class.base::CheckedContiguousIterator"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink18OriginTrialFeatureEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"* nonnull %8, i32* %53, i32* %56, i32* %56) #13
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink18OriginTrialFeatureEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"* nonnull %7, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %8) #13
  %61 = load i32*, i32** %55, align 8
  %62 = load i32*, i32** %59, align 8
  %63 = icmp eq i32* %61, %62
  br i1 %63, label %75, label %64

64:                                               ; preds = %48
  %65 = bitcast i32* %9 to i8*
  %66 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 3, i32 0
  %68 = bitcast %"class.base::CheckedContiguousIterator"* %10 to i8*
  %69 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %10, i64 0, i32 1
  %70 = bitcast %"class.base::CheckedContiguousIterator"* %11 to i8*
  %71 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %11, i64 0, i32 1
  %72 = bitcast i32* %12 to i8*
  %73 = bitcast %"class.base::CheckedContiguousIterator"* %10 to i8*
  %74 = bitcast %"class.base::CheckedContiguousIterator"* %11 to i8*
  br label %81

75:                                               ; preds = %133, %48
  %76 = phi i8 [ 0, %48 ], [ %134, %133 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #13
  %77 = shl i8 %76, 1
  %78 = and i8 %77, 2
  %79 = xor i8 %78, 2
  %80 = zext i8 %79 to i32
  br label %139

81:                                               ; preds = %64, %133
  %82 = phi i8 [ 0, %64 ], [ %134, %133 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %65) #13
  store i32 -1431655766, i32* %9, align 4
  %83 = call dereferenceable(4) i32* @_ZNK4base25CheckedContiguousIteratorIKN5blink18OriginTrialFeatureEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %7)
  %84 = load i32, i32* %83, align 4
  store i32 %84, i32* %9, align 4
  %85 = call zeroext i1 @_ZN5blink13origin_trials19FeatureEnabledForOSENS_18OriginTrialFeatureE(i32 %84) #13
  br i1 %85, label %86, label %133

86:                                               ; preds = %81
  %87 = call { i32*, i8 } @_ZN3WTF9HashTableIN5blink18OriginTrialFeatureES2_NS_17IdentityExtractorENS_7IntHashIS2_EENS_10HashTraitsIS2_EES7_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S7_S8_EERKS2_RS2_EENS_18HashTableAddResultIS9_S2_EEOT0_OT1_(%"class.WTF::HashTable"* %66, i32* nonnull dereferenceable(4) %9, i32* nonnull dereferenceable(4) %9) #13
  %88 = load i32, i32* %9, align 4
  %89 = call i64 @_ZN5blink18OriginTrialContext16GetFeatureExpiryENS_18OriginTrialFeatureE(%"class.blink::OriginTrialContext"* %0, i32 %88)
  %90 = load i64, i64* %13, align 8
  %91 = icmp slt i64 %89, %90
  br i1 %91, label %92, label %101

92:                                               ; preds = %86
  %93 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink18OriginTrialFeatureENS_12KeyValuePairIS2_N4base4TimeEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS2_RS5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.8"* %67, i32* nonnull dereferenceable(4) %9, %"class.base::Time"* nonnull dereferenceable(8) %4) #13
  %94 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %93, 1
  %95 = and i8 %94, 1
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %97, label %101

97:                                               ; preds = %92
  %98 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %93, 0
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %98, i64 0, i32 1, i32 0, i32 0
  %100 = load i64, i64* %13, align 8
  store i64 %100, i64* %99, align 8
  br label %101

101:                                              ; preds = %97, %92, %86
  %102 = load i32, i32* %9, align 4
  %103 = call { i64, i32* } @_ZN5blink13origin_trials18GetImpliedFeaturesENS_18OriginTrialFeatureE(i32 %102) #13
  %104 = extractvalue { i64, i32* } %103, 0
  %105 = extractvalue { i64, i32* } %103, 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #13
  %106 = getelementptr inbounds i32, i32* %105, i64 %104
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink18OriginTrialFeatureEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"* nonnull %10, i32* %105, i32* %105, i32* %106) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink18OriginTrialFeatureEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"* nonnull %11, i32* %105, i32* %106, i32* %106) #13
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink18OriginTrialFeatureEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"* nonnull %10, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %11) #13
  %107 = load i32*, i32** %69, align 8
  %108 = load i32*, i32** %71, align 8
  %109 = icmp eq i32* %107, %108
  br i1 %109, label %110, label %111

110:                                              ; preds = %128, %101
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #13
  br label %133

111:                                              ; preds = %101, %128
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %72) #13
  store i32 -1431655766, i32* %12, align 4
  %112 = call dereferenceable(4) i32* @_ZNK4base25CheckedContiguousIteratorIKN5blink18OriginTrialFeatureEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %10)
  %113 = load i32, i32* %112, align 4
  store i32 %113, i32* %12, align 4
  %114 = call { i32*, i8 } @_ZN3WTF9HashTableIN5blink18OriginTrialFeatureES2_NS_17IdentityExtractorENS_7IntHashIS2_EENS_10HashTraitsIS2_EES7_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S7_S8_EERKS2_RS2_EENS_18HashTableAddResultIS9_S2_EEOT0_OT1_(%"class.WTF::HashTable"* %66, i32* nonnull dereferenceable(4) %12, i32* nonnull dereferenceable(4) %12) #13
  %115 = load i32, i32* %12, align 4
  %116 = call i64 @_ZN5blink18OriginTrialContext16GetFeatureExpiryENS_18OriginTrialFeatureE(%"class.blink::OriginTrialContext"* %0, i32 %115)
  %117 = load i64, i64* %13, align 8
  %118 = icmp slt i64 %116, %117
  br i1 %118, label %119, label %128

119:                                              ; preds = %111
  %120 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink18OriginTrialFeatureENS_12KeyValuePairIS2_N4base4TimeEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS2_RS5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.8"* %67, i32* nonnull dereferenceable(4) %12, %"class.base::Time"* nonnull dereferenceable(8) %4) #13
  %121 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %120, 1
  %122 = and i8 %121, 1
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %128

124:                                              ; preds = %119
  %125 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %120, 0
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %125, i64 0, i32 1, i32 0, i32 0
  %127 = load i64, i64* %13, align 8
  store i64 %127, i64* %126, align 8
  br label %128

128:                                              ; preds = %124, %119, %111
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %72) #13
  %129 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKN5blink18OriginTrialFeatureEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %10)
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink18OriginTrialFeatureEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"* nonnull %10, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %11) #13
  %130 = load i32*, i32** %69, align 8
  %131 = load i32*, i32** %71, align 8
  %132 = icmp eq i32* %130, %131
  br i1 %132, label %110, label %111

133:                                              ; preds = %81, %110
  %134 = phi i8 [ 1, %110 ], [ %82, %81 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65) #13
  %135 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKN5blink18OriginTrialFeatureEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %7)
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink18OriginTrialFeatureEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"* nonnull %7, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %8) #13
  %136 = load i32*, i32** %55, align 8
  %137 = load i32*, i32** %59, align 8
  %138 = icmp eq i32* %136, %137
  br i1 %138, label %75, label %81

139:                                              ; preds = %29, %75
  %140 = phi i32 [ %80, %75 ], [ 3, %29 ]
  ret i32 %140
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink18OriginTrialContext22CanEnableTrialFromNameERKN3WTF10StringViewE(%"class.blink::OriginTrialContext"* nocapture readnone, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #13
  %13 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %14 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8** %15, align 8
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 22, i32* %16, align 8
  %17 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24) %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #13
  br i1 %17, label %18, label %22

18:                                               ; preds = %2
  %19 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features37kHandwritingRecognitionWebPlatformApiE) #13
  br i1 %19, label %20, label %103

20:                                               ; preds = %18
  %21 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features42kHandwritingRecognitionWebPlatformApiFinchE) #13
  br label %103

22:                                               ; preds = %2
  %23 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #13
  %24 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %25 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i8** %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 7, i32* %27, align 8
  %28 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24) %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #13
  br i1 %28, label %29, label %31

29:                                               ; preds = %22
  %30 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features8kPortalsE) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #13
  br i1 %30, label %32, label %103

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #13
  br label %32

32:                                               ; preds = %29, %31
  %33 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #13
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %35 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8** %36, align 8
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 12, i32* %37, align 8
  %38 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24) %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #13
  br i1 %38, label %39, label %41

39:                                               ; preds = %32
  %40 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features13kFencedFramesE) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #13
  br i1 %40, label %42, label %103

41:                                               ; preds = %32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #13
  br label %42

42:                                               ; preds = %39, %41
  %43 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #13
  %44 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %45 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i8** %46, align 8
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 8, i32* %47, align 8
  %48 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24) %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #13
  br i1 %48, label %49, label %51

49:                                               ; preds = %42
  %50 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features9kAppCacheE) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #13
  br i1 %50, label %52, label %103

51:                                               ; preds = %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #13
  br label %52

52:                                               ; preds = %49, %51
  %53 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #13
  %54 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %55 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i8** %56, align 8
  %57 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 15, i32* %57, align 8
  %58 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24) %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #13
  br i1 %58, label %59, label %61

59:                                               ; preds = %52
  %60 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features16kComputePressureE) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #13
  br i1 %60, label %62, label %103

61:                                               ; preds = %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #13
  br label %62

62:                                               ; preds = %59, %61
  %63 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #13
  %64 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %65 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8** %66, align 8
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 22, i32* %67, align 8
  %68 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24) %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #13
  br i1 %68, label %69, label %71

69:                                               ; preds = %62
  %70 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features21kFledgeInterestGroupsE) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #13
  br i1 %70, label %72, label %103

71:                                               ; preds = %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #13
  br label %72

72:                                               ; preds = %69, %71
  %73 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #13
  %74 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %75 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i8** %76, align 8
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 11, i32* %77, align 8
  %78 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24) %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #13
  br i1 %78, label %79, label %81

79:                                               ; preds = %72
  %80 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN7network8features12kTrustTokensE) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #13
  br i1 %80, label %82, label %103

81:                                               ; preds = %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #13
  br label %82

82:                                               ; preds = %79, %81
  %83 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #13
  %84 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %85 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8** %86, align 8
  %87 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 17, i32* %87, align 8
  %88 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24) %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #13
  br i1 %88, label %89, label %91

89:                                               ; preds = %82
  %90 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features29kInterestCohortAPIOriginTrialE) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #13
  br i1 %90, label %92, label %103

91:                                               ; preds = %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #13
  br label %92

92:                                               ; preds = %89, %91
  %93 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #13
  %94 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %95 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0), i8** %96, align 8
  %97 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 24, i32* %97, align 8
  %98 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24) %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #13
  br i1 %98, label %99, label %101

99:                                               ; preds = %92
  %100 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features30kSpeculationRulesPrefetchProxyE) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #13
  br i1 %100, label %102, label %103

101:                                              ; preds = %92
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #13
  br label %102

102:                                              ; preds = %99, %101
  br label %103

103:                                              ; preds = %99, %89, %79, %69, %59, %49, %39, %29, %18, %20, %102
  %104 = phi i1 [ true, %102 ], [ false, %18 ], [ %21, %20 ], [ false, %29 ], [ false, %39 ], [ false, %49 ], [ false, %59 ], [ false, %69 ], [ false, %79 ], [ false, %89 ], [ false, %99 ]
  ret i1 %104
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #2

declare { i64, i32* } @_ZN5blink13origin_trials16FeaturesForTrialERKN3WTF10StringViewE(%"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZNK4base25CheckedContiguousIteratorIKN5blink18OriginTrialFeatureEEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load i32*, i32** %7, align 8
  %11 = load i32*, i32** %8, align 8
  %12 = icmp eq i32* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast i32** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink18OriginTrialFeatureEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %17 = bitcast i32** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink18OriginTrialFeatureEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.21, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.17, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %26 = load i32*, i32** %7, align 8
  ret i32* %26
}

declare zeroext i1 @_ZN5blink13origin_trials19FeatureEnabledForOSENS_18OriginTrialFeatureE(i32) local_unnamed_addr #2

declare { i64, i32* } @_ZN5blink13origin_trials18GetImpliedFeaturesENS_18OriginTrialFeatureE(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKN5blink18OriginTrialFeatureEEppEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load i32*, i32** %7, align 8
  %11 = load i32*, i32** %8, align 8
  %12 = icmp eq i32* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast i32** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink18OriginTrialFeatureEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %17 = bitcast i32** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink18OriginTrialFeatureEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.21, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.17, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %26 = load i32*, i32** %7, align 8
  %27 = getelementptr inbounds i32, i32* %26, i64 1
  store i32* %27, i32** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18OriginTrialContext19ValidateTokenResultERKN3WTF6StringEbbb(%"class.blink::OriginTrialContext"* nocapture readnone, %"class.WTF::String"* nocapture readonly dereferenceable(8), i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  br i1 %4, label %8, label %31

8:                                                ; preds = %5
  %9 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %13, label %17

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %14, align 8
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %16 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %15, i64* %16, align 8
  br label %24

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 1
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %23 = bitcast i8** %22 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %23, align 8
  br label %24

24:                                               ; preds = %13, %17
  %25 = phi i32 [ %20, %17 ], [ 0, %13 ]
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %25, i32* %26, align 8
  %27 = call zeroext i1 @_ZN5blink13origin_trials34IsTrialEnabledForThirdPartyOriginsERKN3WTF10StringViewE(%"class.WTF::StringView"* nonnull dereferenceable(24) %6) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #13
  br i1 %27, label %28, label %56

28:                                               ; preds = %24
  %29 = and i1 %2, %3
  %30 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #13
  br i1 %29, label %53, label %33

31:                                               ; preds = %5
  %32 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #13
  br i1 %2, label %53, label %33

33:                                               ; preds = %28, %31
  %34 = phi i8* [ %30, %28 ], [ %32, %31 ]
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %38, label %42

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %39, align 8
  %40 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %41 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %40, i64* %41, align 8
  br label %49

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %43, align 8
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 1
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %48 = bitcast i8** %47 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %46, %"class.WTF::StringImpl"** %48, align 8
  br label %49

49:                                               ; preds = %38, %42
  %50 = phi i32 [ %45, %42 ], [ 0, %38 ]
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %50, i32* %51, align 8
  %52 = call zeroext i1 @_ZN5blink13origin_trials32IsTrialEnabledForInsecureContextERKN3WTF10StringViewE(%"class.WTF::StringView"* nonnull dereferenceable(24) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #13
  br i1 %52, label %55, label %56

53:                                               ; preds = %28, %31
  %54 = phi i8* [ %30, %28 ], [ %32, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #13
  br label %55

55:                                               ; preds = %49, %53
  br label %56

56:                                               ; preds = %49, %24, %55
  %57 = phi i32 [ 0, %55 ], [ 8, %24 ], [ 2, %49 ]
  ret i32 %57
}

declare zeroext i1 @_ZN5blink13origin_trials34IsTrialEnabledForThirdPartyOriginsERKN3WTF10StringViewE(%"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13origin_trials32IsTrialEnabledForInsecureContextERKN3WTF10StringViewE(%"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #2

declare void @_ZN3url6OriginC1Ev(%"class.url::Origin"*) unnamed_addr #2

declare void @_ZNK5blink14SecurityOrigin11ToUrlOriginEv(%"class.url::Origin"* sret, %"class.blink::SecurityOrigin"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #5

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13origin_trials12IsTrialValidERKN3WTF10StringViewE(%"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18OriginTrialContext10CacheTokenERKN3WTF6StringERKNS_16TrialTokenResultENS_17OriginTrialStatusE(%"class.blink::OriginTrialContext"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::TrialTokenResult"* nocapture readonly dereferenceable(16), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"struct.blink::OriginTrialResult", align 8
  %8 = alloca %"struct.blink::OriginTrialTokenResult", align 8
  %9 = alloca %"class.absl::optional", align 8
  %10 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::TrialTokenResult", %"class.blink::TrialTokenResult"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.blink::TrialToken"*, %"class.blink::TrialToken"** %12, align 8
  %14 = icmp eq %"class.blink::TrialToken"* %13, null
  br i1 %14, label %50, label %15

15:                                               ; preds = %4
  %16 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %13, i64 0, i32 2
  %18 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1, !noalias !11
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %15
  %23 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 8 %23, i64 24, i1 false) #13
  br label %29

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8, !noalias !11
  %27 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8, !noalias !11
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* %26, i64 %28) #13
  br label %29

29:                                               ; preds = %22, %24
  %30 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %29, %34
  %39 = phi i8* [ %36, %34 ], [ %16, %29 ]
  %40 = call i64 @strlen(i8* nonnull %39) #15
  br label %41

41:                                               ; preds = %34, %38
  %42 = phi i8* [ %39, %38 ], [ null, %34 ]
  %43 = phi i64 [ %40, %38 ], [ 0, %34 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* %42, i64 %43) #13
  %44 = load i8, i8* %31, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %48) #14
  br label %49

49:                                               ; preds = %41, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #13
  br label %51

50:                                               ; preds = %4
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN5blink12_GLOBAL__N_117kDefaultTrialNameE, i64 0, i64 0), i64 7) #13
  br label %51

51:                                               ; preds = %50, %49
  %52 = bitcast %"struct.blink::OriginTrialResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %52) #13
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %54 = getelementptr inbounds %"struct.blink::OriginTrialResult", %"struct.blink::OriginTrialResult"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %54, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %55, label %73, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %73

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i33
  %65 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %64, i33 1) #13
  %66 = extractvalue { i33, i1 } %65, 1
  %67 = extractvalue { i33, i1 } %65, 0
  %68 = icmp slt i33 %67, 0
  %69 = or i1 %66, %68
  br i1 %69, label %70, label %71, !prof !2

70:                                               ; preds = %61
  call void @llvm.trap() #13
  unreachable

71:                                               ; preds = %61
  %72 = trunc i33 %67 to i32
  store i32 %72, i32* %62, align 4
  br label %73

73:                                               ; preds = %51, %56, %71
  %74 = getelementptr inbounds %"struct.blink::OriginTrialResult", %"struct.blink::OriginTrialResult"* %7, i64 0, i32 1
  store i32 1, i32* %74, align 8
  %75 = getelementptr inbounds %"struct.blink::OriginTrialResult", %"struct.blink::OriginTrialResult"* %7, i64 0, i32 2
  %76 = bitcast %"class.WTF::Vector"* %75 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 16, i1 false) #13
  %77 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 6, i32 0
  %78 = call { %"struct.WTF::KeyValuePair.18"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink17OriginTrialResultEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERS1_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.15"* %77, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"struct.blink::OriginTrialResult"* nonnull dereferenceable(32) %7) #13
  %79 = extractvalue { %"struct.WTF::KeyValuePair.18"*, i8 } %78, 0
  %80 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %75, i64 0, i32 0, i32 0, i32 0
  %81 = load %"struct.blink::OriginTrialTokenResult"*, %"struct.blink::OriginTrialTokenResult"** %80, align 8
  %82 = icmp eq %"struct.blink::OriginTrialTokenResult"* %81, null
  br i1 %82, label %123, label %83, !prof !4

83:                                               ; preds = %73
  %84 = bitcast %"struct.blink::OriginTrialTokenResult"* %81 to i8*
  %85 = getelementptr inbounds %"struct.blink::OriginTrialResult", %"struct.blink::OriginTrialResult"* %7, i64 0, i32 2, i32 0, i32 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %121, label %88, !prof !2

88:                                               ; preds = %83
  %89 = zext i32 %86 to i64
  %90 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %81, i64 %89
  br label %91

91:                                               ; preds = %115, %88
  %92 = phi %"struct.blink::OriginTrialTokenResult"* [ %116, %115 ], [ %81, %88 ]
  %93 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %94 = load i8, i8* %93, align 8, !range !3
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %98, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5blink10TrialTokenD1Ev(%"class.blink::TrialToken"* %97) #13
  store i8 0, i8* %93, align 8
  br label %98

98:                                               ; preds = %96, %91
  %99 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %92, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #13
  br label %115

115:                                              ; preds = %114, %111, %98
  %116 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %92, i64 1
  %117 = icmp eq %"struct.blink::OriginTrialTokenResult"* %116, %90
  br i1 %117, label %118, label %91

118:                                              ; preds = %115
  store i32 0, i32* %85, align 4
  %119 = bitcast %"class.WTF::Vector"* %75 to i8**
  %120 = load i8*, i8** %119, align 8
  br label %121

121:                                              ; preds = %118, %83
  %122 = phi i8* [ %120, %118 ], [ %84, %83 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %122) #13
  store %"struct.blink::OriginTrialTokenResult"* null, %"struct.blink::OriginTrialTokenResult"** %80, align 8
  br label %123

123:                                              ; preds = %121, %73
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #13
  br label %139

139:                                              ; preds = %123, %135, %138
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %52) #13
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %79, i64 0, i32 1, i32 1
  %141 = load i32, i32* %140, align 8
  %142 = icmp eq i32 %141, 0
  %143 = icmp eq i32 %3, 0
  %144 = or i1 %143, %142
  br i1 %144, label %154, label %145

145:                                              ; preds = %139
  %146 = icmp eq i32 %141, 2
  %147 = icmp eq i32 %3, 2
  %148 = or i1 %147, %146
  br i1 %148, label %154, label %149

149:                                              ; preds = %145
  %150 = icmp eq i32 %141, 3
  %151 = icmp eq i32 %3, 3
  %152 = or i1 %151, %150
  %153 = select i1 %152, i32 3, i32 1
  br label %154

154:                                              ; preds = %139, %145, %149
  %155 = phi i32 [ 0, %139 ], [ 2, %145 ], [ %153, %149 ]
  store i32 %155, i32* %140, align 8
  %156 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %79, i64 0, i32 1, i32 2
  %157 = bitcast %"struct.blink::OriginTrialTokenResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %157) #13
  %158 = getelementptr inbounds %"class.blink::TrialTokenResult", %"class.blink::TrialTokenResult"* %2, i64 0, i32 0
  %159 = load i32, i32* %158, align 8
  %160 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %160) #13
  %161 = load %"class.blink::TrialToken"*, %"class.blink::TrialToken"** %12, align 8
  %162 = icmp eq %"class.blink::TrialToken"* %161, null
  br i1 %162, label %207, label %163

163:                                              ; preds = %154
  store i8 1, i8* %160, align 8, !alias.scope !14
  %164 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %165 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %161, i64 0, i32 0
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %164, %"class.url::Origin"* dereferenceable(80) %165) #13
  %166 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %167 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %161, i64 0, i32 1
  %168 = load i8, i8* %167, align 8, !range !3, !noalias !14
  store i8 %168, i8* %166, align 8, !alias.scope !14
  %169 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %170 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %161, i64 0, i32 2
  %171 = bitcast %"class.std::__1::basic_string"* %170 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %172 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %171, i64 0, i32 1, i32 0
  %173 = load i8, i8* %172, align 1, !noalias !14
  %174 = icmp slt i8 %173, 0
  br i1 %174, label %178, label %175

175:                                              ; preds = %163
  %176 = bitcast %"class.std::__1::basic_string"* %169 to i8*
  %177 = bitcast %"class.std::__1::basic_string"* %170 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %176, i8* align 8 %177, i64 24, i1 false) #13
  br label %183

178:                                              ; preds = %163
  %179 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %170, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load i8*, i8** %179, align 8, !noalias !14
  %181 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %182 = load i64, i64* %181, align 8, !noalias !14
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %169, i8* %180, i64 %182) #13
  br label %183

183:                                              ; preds = %178, %175
  %184 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %161, i64 0, i32 3, i32 0, i32 0
  %185 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %186 = load i64, i64* %184, align 8, !noalias !14
  store i64 %186, i64* %185, align 8, !alias.scope !14
  %187 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %188 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %161, i64 0, i32 4
  %189 = bitcast %"class.std::__1::basic_string"* %188 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %190 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %189, i64 0, i32 1, i32 0
  %191 = load i8, i8* %190, align 1, !noalias !14
  %192 = icmp slt i8 %191, 0
  br i1 %192, label %196, label %193

193:                                              ; preds = %183
  %194 = bitcast %"class.std::__1::basic_string"* %187 to i8*
  %195 = bitcast %"class.std::__1::basic_string"* %188 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %194, i8* align 8 %195, i64 24, i1 false) #13
  br label %201

196:                                              ; preds = %183
  %197 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %188, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load i8*, i8** %197, align 8, !noalias !14
  %199 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %161, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %200 = load i64, i64* %199, align 8, !noalias !14
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %187, i8* %198, i64 %200) #13
  br label %201

201:                                              ; preds = %193, %196
  %202 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 5
  %203 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %161, i64 0, i32 5
  %204 = bitcast i8* %203 to i64*
  %205 = bitcast i8* %202 to i64*
  %206 = load i64, i64* %204, align 8, !noalias !14
  store i64 %206, i64* %205, align 8, !alias.scope !14
  br label %210

207:                                              ; preds = %154
  store i8 0, i8* %160, align 8
  %208 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 1
  %209 = bitcast %union.anon* %208 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %209, i8 0, i64 152, i1 false) #13
  br label %210

210:                                              ; preds = %207, %201
  call void @_ZN5blink22OriginTrialTokenResultC2ERKN3WTF6StringENS_22OriginTrialTokenStatusERKN4absl8optionalINS_10TrialTokenEEE(%"struct.blink::OriginTrialTokenResult"* nonnull %8, %"class.WTF::String"* dereferenceable(8) %1, i32 %159, %"class.absl::optional"* nonnull dereferenceable(160) %9)
  %211 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %79, i64 0, i32 1, i32 2, i32 0, i32 0, i32 2
  %212 = load i32, i32* %211, align 4
  %213 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %79, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %214 = load i32, i32* %213, align 8
  %215 = icmp eq i32 %212, %214
  br i1 %215, label %225, label %216, !prof !2

216:                                              ; preds = %210
  %217 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %156, i64 0, i32 0, i32 0, i32 0
  %218 = load %"struct.blink::OriginTrialTokenResult"*, %"struct.blink::OriginTrialTokenResult"** %217, align 8
  %219 = zext i32 %212 to i64
  %220 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %218, i64 %219
  %221 = bitcast %"struct.blink::OriginTrialTokenResult"* %220 to i8*
  %222 = call %"struct.blink::OriginTrialTokenResult"* @_ZN3WTF15ConstructTraitsIN5blink22OriginTrialTokenResultENS_12VectorTraitsIS2_EENS_18PartitionAllocatorEE9ConstructIJS2_EEEPS2_PvDpOT_(i8* %221, %"struct.blink::OriginTrialTokenResult"* nonnull dereferenceable(176) %8) #13
  %223 = load i32, i32* %211, align 4
  %224 = add i32 %223, 1
  store i32 %224, i32* %211, align 4
  br label %226

225:                                              ; preds = %210
  call void @_ZN3WTF6VectorIN5blink22OriginTrialTokenResultELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector"* %156, %"struct.blink::OriginTrialTokenResult"* nonnull dereferenceable(176) %8) #13
  br label %226

226:                                              ; preds = %216, %225
  %227 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %228 = load i8, i8* %227, align 8, !range !3
  %229 = icmp eq i8 %228, 0
  br i1 %229, label %232, label %230

230:                                              ; preds = %226
  %231 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5blink10TrialTokenD1Ev(%"class.blink::TrialToken"* %231) #13
  store i8 0, i8* %227, align 8
  br label %232

232:                                              ; preds = %230, %226
  %233 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %8, i64 0, i32 0, i32 0, i32 0
  %234 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %233, align 8
  %235 = icmp eq %"class.WTF::StringImpl"* %234, null
  br i1 %235, label %249, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = load atomic i32, i32* %237 monotonic, align 4
  %239 = and i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 0
  %242 = load i32, i32* %241, align 4
  br i1 %240, label %243, label %245

243:                                              ; preds = %236
  %244 = add i32 %242, -1
  store i32 %244, i32* %241, align 4
  br label %245

245:                                              ; preds = %243, %236
  %246 = phi i32 [ %244, %243 ], [ %242, %236 ]
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %249

248:                                              ; preds = %245
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %234) #13
  br label %249

249:                                              ; preds = %232, %245, %248
  %250 = load i8, i8* %160, align 8, !range !3
  %251 = icmp eq i8 %250, 0
  br i1 %251, label %254, label %252

252:                                              ; preds = %249
  %253 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5blink10TrialTokenD1Ev(%"class.blink::TrialToken"* %253) #13
  store i8 0, i8* %160, align 8
  br label %254

254:                                              ; preds = %249, %252
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %160) #13
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %157) #13
  %255 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %256 = icmp eq %"class.WTF::StringImpl"* %255, null
  br i1 %256, label %270, label %257

257:                                              ; preds = %254
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load atomic i32, i32* %258 monotonic, align 4
  %260 = and i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 0
  %263 = load i32, i32* %262, align 4
  br i1 %261, label %264, label %266

264:                                              ; preds = %257
  %265 = add i32 %263, -1
  store i32 %265, i32* %262, align 4
  br label %266

266:                                              ; preds = %264, %257
  %267 = phi i32 [ %265, %264 ], [ %263, %257 ]
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %270

269:                                              ; preds = %266
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %255) #13
  br label %270

270:                                              ; preds = %254, %266, %269
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink18OriginTrialContext5TraceEPNS_7VisitorE(%"class.blink::OriginTrialContext"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 5
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %73, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = and i64 %5, -131072
  %10 = inttoptr i64 %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 4138
  %12 = load i8, i8* %11, align 2
  %13 = icmp eq i8 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i64 4160
  br label %54

16:                                               ; preds = %7
  %17 = getelementptr inbounds i8, i8* %10, i64 4096
  %18 = bitcast i8* %17 to %"class.blink::NormalPage"*
  %19 = getelementptr inbounds i8, i8* %10, i64 4400
  %20 = bitcast i8* %19 to i8**
  %21 = bitcast i8* %19 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = sub i64 %5, %22
  %24 = lshr i64 %23, 3
  %25 = lshr i64 %23, 6
  %26 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %25
  %27 = load atomic i8, i8* %26 acquire, align 1
  %28 = trunc i64 %24 to i32
  %29 = and i32 %28, 7
  %30 = shl i32 2, %29
  %31 = trunc i32 %30 to i8
  %32 = add i8 %31, -1
  %33 = and i8 %32, %27
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %16, %35
  %36 = phi i64 [ %37, %35 ], [ %25, %16 ]
  %37 = add i64 %36, -1
  %38 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %37
  %39 = load atomic i8, i8* %38 acquire, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %35, label %41

41:                                               ; preds = %35, %16
  %42 = phi i64 [ %25, %16 ], [ %37, %35 ]
  %43 = phi i8 [ %33, %16 ], [ %39, %35 ]
  %44 = zext i8 %43 to i32
  %45 = tail call i32 @llvm.ctlz.i32(i32 %44, i1 true) #13, !range !17
  %46 = add nsw i32 %45, -24
  %47 = shl i64 %42, 3
  %48 = or i64 %47, 7
  %49 = sext i32 %46 to i64
  %50 = sub i64 %48, %49
  %51 = shl i64 %50, 3
  %52 = load i8*, i8** %20, align 16
  %53 = getelementptr inbounds i8, i8* %52, i64 %51
  br label %54

54:                                               ; preds = %41, %14
  %55 = phi i8* [ %15, %14 ], [ %53, %41 ]
  %56 = getelementptr inbounds i8, i8* %55, i64 8
  %57 = getelementptr inbounds i8, i8* %55, i64 4
  %58 = bitcast i8* %57 to i16*
  %59 = load atomic i16, i16* %58 acquire, align 2
  %60 = lshr i16 %59, 2
  %61 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %62 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %61, i64 0, i32 0
  %63 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %62, align 8
  %64 = zext i16 %60 to i64
  %65 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %63, i64 %64
  %66 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %65, align 8
  %67 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %66, i64 0, i32 0
  %68 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %67, align 8
  %69 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* %56, void (%"class.blink::Visitor"*, i8*)* %68) #13
  br label %73

73:                                               ; preds = %2, %54
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEDs(%"class.WTF::StringBuilder"*, i16 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i16, align 2
  store i16 %1, i16* %4, align 2
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !3
  %7 = icmp ne i8 %6, 0
  %8 = icmp ult i16 %1, 256
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %35

10:                                               ; preds = %2
  %11 = trunc i16 %1 to i8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3)
  store i8 %11, i8* %3, align 1
  %12 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %13 = load i8, i8* %12, align 1, !range !3
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %10
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #13
  br label %16

16:                                               ; preds = %15, %10
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %30, label %23, !prof !2

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.WTF::Vector.2143", %"class.WTF::Vector.2143"* %17, i64 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = zext i32 %19 to i64
  %27 = getelementptr inbounds i8, i8* %25, i64 %26
  store i8 %11, i8* %27, align 1
  %28 = load i32, i32* %18, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %18, align 4
  br label %31

30:                                               ; preds = %16
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.2143"* %17, i8* nonnull dereferenceable(1) %3) #13
  br label %31

31:                                               ; preds = %23, %30
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3)
  br label %62

35:                                               ; preds = %2
  %36 = icmp eq i8 %6, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %39 = load i8, i8* %38, align 1, !range !3
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %37, %35
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #13
  br label %42

42:                                               ; preds = %37, %41
  %43 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %56, label %49, !prof !2

49:                                               ; preds = %42
  %50 = bitcast %union.anon.2142* %43 to i16**
  %51 = load i16*, i16** %50, align 8
  %52 = zext i32 %45 to i64
  %53 = getelementptr inbounds i16, i16* %51, i64 %52
  store i16 %1, i16* %53, align 2
  %54 = load i32, i32* %44, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %44, align 4
  br label %58

56:                                               ; preds = %42
  %57 = bitcast %union.anon.2142* %43 to %"class.WTF::Vector.2148"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.2148"* %57, i16* nonnull dereferenceable(2) %4) #13
  br label %58

58:                                               ; preds = %49, %56
  %59 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %60 = load i32, i32* %59, align 8
  %61 = add i32 %60, 1
  store i32 %61, i32* %59, align 8
  br label %62

62:                                               ; preds = %58, %31
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.2143"*, i8* dereferenceable(1)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2143", %"class.WTF::Vector.2143"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2143", %"class.WTF::Vector.2143"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2143"* %0, i32 %5) #13
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2143"* %0, i32 %5) #13
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2143"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2143", %"class.WTF::Vector.2143"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.11, i64 0, i64 0), i8* %15, i8* %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2143", %"class.WTF::Vector.2143"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #13
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #13
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2143"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.2143", %"class.WTF::Vector.2143"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.2143"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2143"* %0, i32 %27) #13
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2143"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2143", %"class.WTF::Vector.2143"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2143", %"class.WTF::Vector.2143"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.2143"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.2143", %"class.WTF::Vector.2143"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.2143", %"class.WTF::Vector.2143"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.2143", %"class.WTF::Vector.2143"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.2143"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.2143", %"class.WTF::Vector.2143"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #13
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.2144"* %18, i8* nonnull %6) #13
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #13
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #13
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.2143", %"class.WTF::Vector.2143"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !4

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.2143", %"class.WTF::Vector.2143"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #13
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.2143", %"class.WTF::Vector.2143"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !4

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.2143", %"class.WTF::Vector.2143"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.2144"* %46, i8* %42) #13
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.2143"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.2143", %"class.WTF::Vector.2143"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.15, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #13
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.2144"*, i8*) local_unnamed_addr #8 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #13
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.2148"*, i16* dereferenceable(2)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2148", %"class.WTF::Vector.2148"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2148", %"class.WTF::Vector.2148"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2148"* %0, i32 %5) #13
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2148"* %0, i32 %5) #13
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2148"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2148", %"class.WTF::Vector.2148"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.11, i64 0, i64 0), i8* %15, i8* %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2148", %"class.WTF::Vector.2148"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #13
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #13
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2148"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.2148", %"class.WTF::Vector.2148"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.2148"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2148"* %0, i32 %27) #13
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2148"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2148", %"class.WTF::Vector.2148"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2148", %"class.WTF::Vector.2148"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.2148"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.2148", %"class.WTF::Vector.2148"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.2148", %"class.WTF::Vector.2148"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.2148", %"class.WTF::Vector.2148"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.2148"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.2148", %"class.WTF::Vector.2148"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #13
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2149"* %19, i16* nonnull %6) #13
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #13
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #13
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.2148", %"class.WTF::Vector.2148"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !4

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.2148", %"class.WTF::Vector.2148"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #13
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.2148", %"class.WTF::Vector.2148"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !4

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.2148", %"class.WTF::Vector.2148"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2149"* %53, i16* %48) #13
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.2148"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.2148", %"class.WTF::Vector.2148"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.15, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2149"*, i16*) local_unnamed_addr #8 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.WTF::HashSet"* @_ZN5blink13origin_trials32GetNavigationOriginTrialFeaturesEv() local_unnamed_addr #2

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #2

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #5

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN5blink18OriginTrialFeatureEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #10 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #13
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKN5blink18OriginTrialFeatureEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"*, i32*, i32*, i32*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store i32* %1, i32** %7, align 8
  store i32* %2, i32** %8, align 8
  store i32* %3, i32** %9, align 8
  %14 = ptrtoint i32* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint i32* %2 to i64
  %18 = bitcast i32** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint i32* %3 to i64
  %21 = bitcast i32** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt i32* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast i32** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink18OriginTrialFeatureEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %30 = bitcast i32** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink18OriginTrialFeatureEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16, i64 0, i64 0), i8* %29, i8* %31) #13
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.17, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load i32*, i32** %8, align 8
  %43 = load i32*, i32** %9, align 8
  %44 = icmp ugt i32* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast i32** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink18OriginTrialFeatureEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %49 = bitcast i32** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink18OriginTrialFeatureEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i64 0, i64 0), i8* %48, i8* %50) #13
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.17, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #13
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #13
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKN5blink18OriginTrialFeatureEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"*, %"class.base::CheckedContiguousIterator"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load i32*, i32** %11, align 8
  %15 = load i32*, i32** %12, align 8
  %16 = icmp eq i32* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink18OriginTrialFeatureEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink18OriginTrialFeatureEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i64 0, i64 0), i8* %20, i8* %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.17, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #13
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #13
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load i32*, i32** %32, align 8
  %36 = load i32*, i32** %33, align 8
  %37 = icmp eq i32* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast i32** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink18OriginTrialFeatureEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %42 = bitcast i32** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink18OriginTrialFeatureEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.20, i64 0, i64 0), i8* %41, i8* %43) #13
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.17, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #13
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #13
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #13
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKhm(i8*, i64) local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink10TrialTokenD1Ev(%"class.blink::TrialToken"*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare void @_ZN5blink19TrialTokenValidatorC1Ev(%"class.blink::TrialTokenValidator"*) unnamed_addr #2

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_(%"class.WTF::Vector.126"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.126", %"class.WTF::Vector.126"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS1_(%"class.WTF::Vector.126"* %0, i32 %5, %"class.WTF::String"* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.126", %"class.WTF::Vector.126"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 %10, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #13
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !2

29:                                               ; preds = %20
  tail call void @llvm.trap() #13
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %2, %15, %30
  %33 = load i32, i32* %3, align 4
  %34 = add i32 %33, 1
  store i32 %34, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS1_(%"class.WTF::Vector.126"*, i32, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.126", %"class.WTF::Vector.126"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp ugt %"class.WTF::String"* %5, %2
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::Vector.126", %"class.WTF::Vector.126"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %2
  br i1 %12, label %53, label %13

13:                                               ; preds = %7, %3
  %14 = getelementptr inbounds %"class.WTF::Vector.126", %"class.WTF::Vector.126"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %1
  %22 = select i1 %21, i32 %20, i32 %1
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %98, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %5, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #13
  br i1 %25, label %29, label %34

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.126"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  br label %98

34:                                               ; preds = %24
  %35 = lshr i64 %27, 3
  %36 = ptrtoint i8* %28 to i64
  %37 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne %"class.WTF::String"* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast %"class.WTF::String"* %37 to i8*
  br i1 %40, label %42, label %49, !prof !4

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::Vector.126", %"class.WTF::Vector.126"* %0, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %41, i64 %46, i1 false) #13
  %47 = bitcast %"class.WTF::Vector.126"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %42, %34
  %50 = phi i8* [ %48, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  %51 = bitcast %"class.WTF::Vector.126"* %0 to i64*
  store atomic i64 %36, i64* %51 monotonic, align 8
  %52 = trunc i64 %35 to i32
  store i32 %52, i32* %14, align 8
  br label %98

53:                                               ; preds = %7
  %54 = ptrtoint %"class.WTF::String"* %2 to i64
  %55 = ptrtoint %"class.WTF::String"* %5 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 3
  %58 = getelementptr inbounds %"class.WTF::Vector.126", %"class.WTF::Vector.126"* %0, i64 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = lshr i32 %59, 2
  %61 = add i32 %59, 1
  %62 = add i32 %61, %60
  %63 = icmp ugt i32 %62, 4
  %64 = select i1 %63, i32 %62, i32 4
  %65 = icmp ugt i32 %64, %1
  %66 = select i1 %65, i32 %64, i32 %1
  %67 = icmp ult i32 %59, %66
  br i1 %67, label %68, label %95, !prof !4

68:                                               ; preds = %53
  %69 = icmp eq %"class.WTF::String"* %5, null
  %70 = zext i32 %66 to i64
  %71 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %70) #13
  %72 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %71, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #13
  %73 = ptrtoint i8* %72 to i64
  br i1 %69, label %74, label %76

74:                                               ; preds = %68
  %75 = bitcast %"class.WTF::Vector.126"* %0 to i64*
  store atomic i64 %73, i64* %75 monotonic, align 8
  br label %91

76:                                               ; preds = %68
  %77 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %78 = icmp ne i8* %72, null
  %79 = icmp ne %"class.WTF::String"* %77, null
  %80 = and i1 %78, %79
  %81 = bitcast %"class.WTF::String"* %77 to i8*
  br i1 %80, label %82, label %88, !prof !4

82:                                               ; preds = %76
  %83 = load i32, i32* %8, align 4
  %84 = zext i32 %83 to i64
  %85 = shl nuw nsw i64 %84, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %72, i8* nonnull align 8 %81, i64 %85, i1 false) #13
  %86 = bitcast %"class.WTF::Vector.126"* %0 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %82, %76
  %89 = phi i8* [ %87, %82 ], [ %81, %76 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #13
  %90 = bitcast %"class.WTF::Vector.126"* %0 to i64*
  store atomic i64 %73, i64* %90 monotonic, align 8
  br label %91

91:                                               ; preds = %88, %74
  %92 = lshr i64 %71, 3
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %58, align 8
  %94 = bitcast i8* %72 to %"class.WTF::String"*
  br label %95

95:                                               ; preds = %91, %53
  %96 = phi %"class.WTF::String"* [ %5, %53 ], [ %94, %91 ]
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 %57
  br label %98

98:                                               ; preds = %49, %29, %13, %95
  %99 = phi %"class.WTF::String"* [ %97, %95 ], [ %2, %13 ], [ %2, %29 ], [ %2, %49 ]
  ret %"class.WTF::String"* %99
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.15, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.126"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.126", %"class.WTF::Vector.126"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS1_(%"class.WTF::Vector.126"* %0, i32 %5, %"class.WTF::String"* %1) #13
  %7 = getelementptr inbounds %"class.WTF::Vector.126", %"class.WTF::Vector.126"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 %10, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #13
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !2

29:                                               ; preds = %20
  tail call void @llvm.trap() #13
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %2, %15, %30
  %33 = load i32, i32* %3, align 4
  %34 = add i32 %33, 1
  store i32 %34, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink18OriginTrialFeatureELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.259"*, i32* dereferenceable(4)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.259", %"class.WTF::Vector.259"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.259", %"class.WTF::Vector.259"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.259", %"class.WTF::Vector.259"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq i32* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18OriginTrialFeatureEEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18OriginTrialFeatureEEEPKcv, i64 0, i64 0)) #13
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.259"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i32*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load i32*, i32** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i32* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i32* %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #13
  %47 = bitcast %"class.WTF::Vector.259"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  %51 = bitcast %"class.WTF::Vector.259"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i32*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i32* %1 to i64
  %56 = ptrtoint i32* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.259", %"class.WTF::Vector.259"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq i32* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18OriginTrialFeatureEEEmm(i64 %71) #13
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18OriginTrialFeatureEEEPKcv, i64 0, i64 0)) #13
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.259"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i32*, i32** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i32* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i32* %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #13
  %87 = bitcast %"class.WTF::Vector.259"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #13
  %91 = bitcast %"class.WTF::Vector.259"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i32*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i32* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i32, i32* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i32* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i32* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %100, i64 %103
  %105 = load i32, i32* %101, align 4
  store i32 %105, i32* %104, align 4
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18OriginTrialFeatureEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.15, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32*, i8 } @_ZN3WTF9HashTableIN5blink18OriginTrialFeatureES2_NS_17IdentityExtractorENS_7IntHashIS2_EENS_10HashTraitsIS2_EES7_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S7_S8_EERKS2_SE_EENS_18HashTableAddResultIS9_S2_EEOT0_OT1_(%"class.WTF::HashTable"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = icmp eq i32* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call i32* @_ZN3WTF9HashTableIN5blink18OriginTrialFeatureES2_NS_17IdentityExtractorENS_7IntHashIS2_EENS_10HashTraitsIS2_EES7_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable"* %0, i32* null)
  %9 = load i32*, i32** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi i32* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i32, i32* %11, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, -128
  br i1 %34, label %75, label %35

35:                                               ; preds = %10
  %36 = xor i32 %29, -1
  %37 = lshr i32 %27, 23
  %38 = add i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %35, %56
  %50 = phi i32 [ %33, %35 ], [ %64, %56 ]
  %51 = phi i32* [ %32, %35 ], [ %63, %56 ]
  %52 = phi i32* [ null, %35 ], [ %58, %56 ]
  %53 = phi i64 [ %31, %35 ], [ %62, %56 ]
  %54 = phi i64 [ 0, %35 ], [ %60, %56 ]
  %55 = icmp eq i32 %50, %16
  br i1 %55, label %89, label %56

56:                                               ; preds = %49
  %57 = icmp eq i32 %50, -127
  %58 = select i1 %57, i32* %51, i32* %52
  %59 = icmp eq i64 %54, 0
  %60 = select i1 %59, i64 %48, i64 %54
  %61 = add i64 %60, %53
  %62 = and i64 %61, %15
  %63 = getelementptr inbounds i32, i32* %11, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, -128
  br i1 %65, label %66, label %49

66:                                               ; preds = %56
  %67 = icmp eq i32* %58, null
  br i1 %67, label %75, label %68

68:                                               ; preds = %66
  store i32 -128, i32* %58, align 4
  %69 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %70 = load i32, i32* %69, align 8
  %71 = add i32 %70, 2147483647
  %72 = and i32 %71, 2147483647
  %73 = and i32 %70, -2147483648
  %74 = or i32 %72, %73
  store i32 %74, i32* %69, align 8
  br label %75

75:                                               ; preds = %10, %66, %68
  %76 = phi i32* [ %58, %68 ], [ %63, %66 ], [ %32, %10 ]
  %77 = load i32, i32* %2, align 4
  store i32 %77, i32* %76, align 4
  %78 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %78, align 4
  %81 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, %80
  %84 = shl i32 %83, 1
  %85 = load i32, i32* %12, align 8
  %86 = icmp ult i32 %84, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %75
  %88 = tail call i32* @_ZN3WTF9HashTableIN5blink18OriginTrialFeatureES2_NS_17IdentityExtractorENS_7IntHashIS2_EENS_10HashTraitsIS2_EES7_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable"* %0, i32* %76)
  br label %89

89:                                               ; preds = %49, %75, %87
  %90 = phi i8 [ 1, %75 ], [ 1, %87 ], [ 0, %49 ]
  %91 = phi i32* [ %76, %75 ], [ %88, %87 ], [ %51, %49 ]
  %92 = insertvalue { i32*, i8 } undef, i32* %91, 0
  %93 = insertvalue { i32*, i8 } %92, i8 %90, 1
  ret { i32*, i8 } %93
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF9HashTableIN5blink18OriginTrialFeatureES2_NS_17IdentityExtractorENS_7IntHashIS2_EENS_10HashTraitsIS2_EES7_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable"*, i32*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #13
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0), i8* %22, i8* %23) #13
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.24, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 2
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18OriginTrialFeatureEEEPKcv, i64 0, i64 0)) #13
  %36 = bitcast i8* %35 to i32*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %116, label %38

38:                                               ; preds = %31
  %39 = icmp ult i32 %32, 8
  br i1 %39, label %109, label %40

40:                                               ; preds = %38
  %41 = and i64 %33, 4294967288
  %42 = add nsw i64 %41, -8
  %43 = lshr exact i64 %42, 3
  %44 = add nuw nsw i64 %43, 1
  %45 = and i64 %44, 7
  %46 = icmp ult i64 %42, 56
  br i1 %46, label %94, label %47

47:                                               ; preds = %40
  %48 = sub nsw i64 %44, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 0, %47 ], [ %91, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %92, %49 ]
  %52 = getelementptr inbounds i32, i32* %36, i64 %50
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 -128, i32 -128, i32 -128, i32 -128>, <4 x i32>* %53, align 4
  %54 = getelementptr inbounds i32, i32* %52, i64 4
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 -128, i32 -128, i32 -128, i32 -128>, <4 x i32>* %55, align 4
  %56 = or i64 %50, 8
  %57 = getelementptr inbounds i32, i32* %36, i64 %56
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 -128, i32 -128, i32 -128, i32 -128>, <4 x i32>* %58, align 4
  %59 = getelementptr inbounds i32, i32* %57, i64 4
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 -128, i32 -128, i32 -128, i32 -128>, <4 x i32>* %60, align 4
  %61 = or i64 %50, 16
  %62 = getelementptr inbounds i32, i32* %36, i64 %61
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 -128, i32 -128, i32 -128, i32 -128>, <4 x i32>* %63, align 4
  %64 = getelementptr inbounds i32, i32* %62, i64 4
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 -128, i32 -128, i32 -128, i32 -128>, <4 x i32>* %65, align 4
  %66 = or i64 %50, 24
  %67 = getelementptr inbounds i32, i32* %36, i64 %66
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 -128, i32 -128, i32 -128, i32 -128>, <4 x i32>* %68, align 4
  %69 = getelementptr inbounds i32, i32* %67, i64 4
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 -128, i32 -128, i32 -128, i32 -128>, <4 x i32>* %70, align 4
  %71 = or i64 %50, 32
  %72 = getelementptr inbounds i32, i32* %36, i64 %71
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 -128, i32 -128, i32 -128, i32 -128>, <4 x i32>* %73, align 4
  %74 = getelementptr inbounds i32, i32* %72, i64 4
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 -128, i32 -128, i32 -128, i32 -128>, <4 x i32>* %75, align 4
  %76 = or i64 %50, 40
  %77 = getelementptr inbounds i32, i32* %36, i64 %76
  %78 = bitcast i32* %77 to <4 x i32>*
  store <4 x i32> <i32 -128, i32 -128, i32 -128, i32 -128>, <4 x i32>* %78, align 4
  %79 = getelementptr inbounds i32, i32* %77, i64 4
  %80 = bitcast i32* %79 to <4 x i32>*
  store <4 x i32> <i32 -128, i32 -128, i32 -128, i32 -128>, <4 x i32>* %80, align 4
  %81 = or i64 %50, 48
  %82 = getelementptr inbounds i32, i32* %36, i64 %81
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> <i32 -128, i32 -128, i32 -128, i32 -128>, <4 x i32>* %83, align 4
  %84 = getelementptr inbounds i32, i32* %82, i64 4
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> <i32 -128, i32 -128, i32 -128, i32 -128>, <4 x i32>* %85, align 4
  %86 = or i64 %50, 56
  %87 = getelementptr inbounds i32, i32* %36, i64 %86
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 -128, i32 -128, i32 -128, i32 -128>, <4 x i32>* %88, align 4
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 -128, i32 -128, i32 -128, i32 -128>, <4 x i32>* %90, align 4
  %91 = add i64 %50, 64
  %92 = add i64 %51, -8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %49, !llvm.loop !18

94:                                               ; preds = %49, %40
  %95 = phi i64 [ 0, %40 ], [ %91, %49 ]
  %96 = icmp eq i64 %45, 0
  br i1 %96, label %107, label %97

97:                                               ; preds = %94, %97
  %98 = phi i64 [ %104, %97 ], [ %95, %94 ]
  %99 = phi i64 [ %105, %97 ], [ %45, %94 ]
  %100 = getelementptr inbounds i32, i32* %36, i64 %98
  %101 = bitcast i32* %100 to <4 x i32>*
  store <4 x i32> <i32 -128, i32 -128, i32 -128, i32 -128>, <4 x i32>* %101, align 4
  %102 = getelementptr inbounds i32, i32* %100, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> <i32 -128, i32 -128, i32 -128, i32 -128>, <4 x i32>* %103, align 4
  %104 = add i64 %98, 8
  %105 = add i64 %99, -1
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %97, !llvm.loop !20

107:                                              ; preds = %97, %94
  %108 = icmp eq i64 %41, %33
  br i1 %108, label %116, label %109

109:                                              ; preds = %107, %38
  %110 = phi i64 [ 0, %38 ], [ %41, %107 ]
  br label %111

111:                                              ; preds = %109, %111
  %112 = phi i64 [ %114, %111 ], [ %110, %109 ]
  %113 = getelementptr inbounds i32, i32* %36, i64 %112
  store i32 -128, i32* %113, align 4
  %114 = add nuw nsw i64 %112, 1
  %115 = icmp eq i64 %114, %33
  br i1 %115, label %116, label %111, !llvm.loop !22

116:                                              ; preds = %111, %107, %31
  %117 = call i32* @_ZN3WTF9HashTableIN5blink18OriginTrialFeatureES2_NS_17IdentityExtractorENS_7IntHashIS2_EENS_10HashTraitsIS2_EES7_NS_18PartitionAllocatorEE8RehashToEPS2_jSA_(%"class.WTF::HashTable"* %0, i32* %36, i32 %32, i32* %1) #13
  ret i32* %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF9HashTableIN5blink18OriginTrialFeatureES2_NS_17IdentityExtractorENS_7IntHashIS2_EENS_10HashTraitsIS2_EES7_NS_18PartitionAllocatorEE8RehashToEPS2_jSA_(%"class.WTF::HashTable"*, i32*, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i32* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load i32*, i32** %9, align 8
  %17 = ptrtoint i32* %16 to i64
  br label %31

18:                                               ; preds = %112
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %113, %18 ]
  %23 = phi i32* [ null, %10 ], [ %116, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #13
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret i32* %23

31:                                               ; preds = %13, %112
  %32 = phi i64 [ %17, %13 ], [ %113, %112 ]
  %33 = phi i32 [ %7, %13 ], [ %114, %112 ]
  %34 = phi i32* [ %16, %13 ], [ %115, %112 ]
  %35 = phi i32* [ null, %13 ], [ %116, %112 ]
  %36 = phi i32 [ 0, %13 ], [ %117, %112 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %34, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = or i32 %39, 1
  %41 = icmp eq i32 %40, -127
  br i1 %41, label %112, label %42

42:                                               ; preds = %31
  %43 = shl i32 %39, 15
  %44 = xor i32 %43, -1
  %45 = add i32 %39, %44
  %46 = lshr i32 %45, 10
  %47 = xor i32 %46, %45
  %48 = mul i32 %47, 9
  %49 = lshr i32 %48, 6
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 11
  %52 = xor i32 %51, -1
  %53 = add i32 %50, %52
  %54 = lshr i32 %53, 16
  %55 = xor i32 %54, %53
  %56 = and i32 %55, %14
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds i32, i32* %1, i64 %57
  %59 = ptrtoint i32* %58 to i64
  %60 = load i32, i32* %58, align 4
  %61 = icmp eq i32 %60, -128
  br i1 %61, label %79, label %62

62:                                               ; preds = %42
  %63 = xor i32 %55, -1
  %64 = lshr i32 %53, 23
  %65 = add i32 %64, %63
  %66 = shl i32 %65, 12
  %67 = xor i32 %66, %65
  %68 = lshr i32 %67, 7
  %69 = xor i32 %68, %67
  %70 = shl i32 %69, 2
  %71 = xor i32 %70, %69
  %72 = lshr i32 %71, 20
  %73 = xor i32 %72, %71
  %74 = or i32 %73, 1
  %75 = zext i32 %74 to i64
  br label %85

76:                                               ; preds = %92
  %77 = ptrtoint i32* %99 to i64
  %78 = inttoptr i64 %94 to i32*
  br label %79

79:                                               ; preds = %76, %42
  %80 = phi i64 [ %77, %76 ], [ %59, %42 ]
  %81 = phi i32* [ %78, %76 ], [ null, %42 ]
  %82 = icmp eq i32* %81, null
  %83 = ptrtoint i32* %81 to i64
  %84 = select i1 %82, i64 %80, i64 %83
  br label %103

85:                                               ; preds = %92, %62
  %86 = phi i64 [ 0, %62 ], [ %94, %92 ]
  %87 = phi i32 [ %60, %62 ], [ %101, %92 ]
  %88 = phi i64 [ %59, %62 ], [ %100, %92 ]
  %89 = phi i64 [ %57, %62 ], [ %98, %92 ]
  %90 = phi i64 [ 0, %62 ], [ %96, %92 ]
  %91 = icmp eq i32 %87, %39
  br i1 %91, label %103, label %92

92:                                               ; preds = %85
  %93 = icmp eq i32 %87, -127
  %94 = select i1 %93, i64 %88, i64 %86
  %95 = icmp eq i64 %90, 0
  %96 = select i1 %95, i64 %75, i64 %90
  %97 = add i64 %96, %89
  %98 = and i64 %97, %15
  %99 = getelementptr inbounds i32, i32* %1, i64 %98
  %100 = ptrtoint i32* %99 to i64
  %101 = load i32, i32* %99, align 4
  %102 = icmp eq i32 %101, -128
  br i1 %102, label %76, label %85

103:                                              ; preds = %85, %79
  %104 = phi i64 [ %84, %79 ], [ %88, %85 ]
  %105 = inttoptr i64 %104 to i32*
  store i32 %39, i32* %105, align 4
  %106 = load i32*, i32** %9, align 8
  %107 = getelementptr inbounds i32, i32* %106, i64 %37
  %108 = icmp eq i32* %107, %3
  %109 = select i1 %108, i32* %105, i32* %35
  %110 = load i32, i32* %6, align 8
  %111 = ptrtoint i32* %106 to i64
  br label %112

112:                                              ; preds = %31, %103
  %113 = phi i64 [ %32, %31 ], [ %111, %103 ]
  %114 = phi i32 [ %33, %31 ], [ %110, %103 ]
  %115 = phi i32* [ %34, %31 ], [ %106, %103 ]
  %116 = phi i32* [ %35, %31 ], [ %109, %103 ]
  %117 = add i32 %36, 1
  %118 = icmp eq i32 %117, %114
  br i1 %118, label %18, label %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32*, i8 } @_ZN3WTF9HashTableIN5blink18OriginTrialFeatureES2_NS_17IdentityExtractorENS_7IntHashIS2_EENS_10HashTraitsIS2_EES7_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S7_S8_EERKS2_RS2_EENS_18HashTableAddResultIS9_S2_EEOT0_OT1_(%"class.WTF::HashTable"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = icmp eq i32* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call i32* @_ZN3WTF9HashTableIN5blink18OriginTrialFeatureES2_NS_17IdentityExtractorENS_7IntHashIS2_EENS_10HashTraitsIS2_EES7_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable"* %0, i32* null)
  %9 = load i32*, i32** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi i32* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i32, i32* %11, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, -128
  br i1 %34, label %75, label %35

35:                                               ; preds = %10
  %36 = xor i32 %29, -1
  %37 = lshr i32 %27, 23
  %38 = add i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %35, %56
  %50 = phi i32 [ %33, %35 ], [ %64, %56 ]
  %51 = phi i32* [ %32, %35 ], [ %63, %56 ]
  %52 = phi i32* [ null, %35 ], [ %58, %56 ]
  %53 = phi i64 [ %31, %35 ], [ %62, %56 ]
  %54 = phi i64 [ 0, %35 ], [ %60, %56 ]
  %55 = icmp eq i32 %50, %16
  br i1 %55, label %89, label %56

56:                                               ; preds = %49
  %57 = icmp eq i32 %50, -127
  %58 = select i1 %57, i32* %51, i32* %52
  %59 = icmp eq i64 %54, 0
  %60 = select i1 %59, i64 %48, i64 %54
  %61 = add i64 %60, %53
  %62 = and i64 %61, %15
  %63 = getelementptr inbounds i32, i32* %11, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, -128
  br i1 %65, label %66, label %49

66:                                               ; preds = %56
  %67 = icmp eq i32* %58, null
  br i1 %67, label %75, label %68

68:                                               ; preds = %66
  store i32 -128, i32* %58, align 4
  %69 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %70 = load i32, i32* %69, align 8
  %71 = add i32 %70, 2147483647
  %72 = and i32 %71, 2147483647
  %73 = and i32 %70, -2147483648
  %74 = or i32 %72, %73
  store i32 %74, i32* %69, align 8
  br label %75

75:                                               ; preds = %10, %66, %68
  %76 = phi i32* [ %58, %68 ], [ %63, %66 ], [ %32, %10 ]
  %77 = load i32, i32* %2, align 4
  store i32 %77, i32* %76, align 4
  %78 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %78, align 4
  %81 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, %80
  %84 = shl i32 %83, 1
  %85 = load i32, i32* %12, align 8
  %86 = icmp ult i32 %84, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %75
  %88 = tail call i32* @_ZN3WTF9HashTableIN5blink18OriginTrialFeatureES2_NS_17IdentityExtractorENS_7IntHashIS2_EENS_10HashTraitsIS2_EES7_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable"* %0, i32* %76)
  br label %89

89:                                               ; preds = %49, %75, %87
  %90 = phi i8 [ 1, %75 ], [ 1, %87 ], [ 0, %49 ]
  %91 = phi i32* [ %76, %75 ], [ %88, %87 ], [ %51, %49 ]
  %92 = insertvalue { i32*, i8 } undef, i32* %91, 0
  %93 = insertvalue { i32*, i8 } %92, i8 %90, 1
  ret { i32*, i8 } %93
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink18OriginTrialFeatureENS_12KeyValuePairIS2_N4base4TimeEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS2_RS5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.8"*, i32* dereferenceable(4), %"class.base::Time"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.8", %"class.WTF::HashTable.8"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink18OriginTrialFeatureENS_12KeyValuePairIS2_N4base4TimeEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.8"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.8", %"class.WTF::HashTable.8"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -128
  br i1 %35, label %80, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %98, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -127
  %59 = select i1 %58, %"struct.WTF::KeyValuePair"* %52, %"struct.WTF::KeyValuePair"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, -128
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %80, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 0
  store i32 -128, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 1, i32 0, i32 0
  store i64 0, i64* %72, align 8
  %73 = getelementptr inbounds %"class.WTF::HashTable.8", %"class.WTF::HashTable.8"* %0, i64 0, i32 3
  %74 = load i32, i32* %73, align 8
  %75 = add i32 %74, 2147483647
  %76 = and i32 %75, 2147483647
  %77 = and i32 %74, -2147483648
  %78 = or i32 %76, %77
  store i32 %78, i32* %73, align 8
  %79 = load i32, i32* %1, align 4
  br label %80

80:                                               ; preds = %10, %68, %70
  %81 = phi i32 [ %79, %70 ], [ %16, %68 ], [ %16, %10 ]
  %82 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %82, i64 0, i32 0
  store i32 %81, i32* %83, align 8
  %84 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %2, i64 0, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %82, i64 0, i32 1, i32 0, i32 0
  %86 = load i64, i64* %84, align 8
  store i64 %86, i64* %85, align 8
  %87 = getelementptr inbounds %"class.WTF::HashTable.8", %"class.WTF::HashTable.8"* %0, i64 0, i32 2
  %88 = load i32, i32* %87, align 4
  %89 = add i32 %88, 1
  store i32 %89, i32* %87, align 4
  %90 = getelementptr inbounds %"class.WTF::HashTable.8", %"class.WTF::HashTable.8"* %0, i64 0, i32 3
  %91 = load i32, i32* %90, align 8
  %92 = add i32 %91, %89
  %93 = shl i32 %92, 1
  %94 = load i32, i32* %12, align 8
  %95 = icmp ult i32 %93, %94
  br i1 %95, label %98, label %96

96:                                               ; preds = %80
  %97 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink18OriginTrialFeatureENS_12KeyValuePairIS2_N4base4TimeEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.8"* %0, %"struct.WTF::KeyValuePair"* %82)
  br label %98

98:                                               ; preds = %50, %80, %96
  %99 = phi i8 [ 1, %80 ], [ 1, %96 ], [ 0, %50 ]
  %100 = phi %"struct.WTF::KeyValuePair"* [ %82, %80 ], [ %97, %96 ], [ %52, %50 ]
  %101 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %100, 0
  %102 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %101, i8 %99, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %102
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink18OriginTrialFeatureENS_12KeyValuePairIS2_N4base4TimeEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.8"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.8", %"class.WTF::HashTable.8"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.8", %"class.WTF::HashTable.8"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #13
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0), i8* %22, i8* %23) #13
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.24, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink18OriginTrialFeatureEN4base4TimeEEEEEPKcv, i64 0, i64 0)) #13
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %60, label %38

38:                                               ; preds = %31
  %39 = and i64 %33, 1
  %40 = icmp eq i32 %32, 1
  br i1 %40, label %54, label %41

41:                                               ; preds = %38
  %42 = sub nsw i64 %33, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %51, %43 ]
  %45 = phi i64 [ %42, %41 ], [ %52, %43 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %44, i32 0
  store i32 -128, i32* %46, align 8
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %44, i32 1, i32 0, i32 0
  store i64 0, i64* %47, align 8
  %48 = or i64 %44, 1
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %48, i32 0
  store i32 -128, i32* %49, align 8
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %48, i32 1, i32 0, i32 0
  store i64 0, i64* %50, align 8
  %51 = add nuw nsw i64 %44, 2
  %52 = add i64 %45, -2
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %43

54:                                               ; preds = %43, %38
  %55 = phi i64 [ 0, %38 ], [ %51, %43 ]
  %56 = icmp eq i64 %39, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %55, i32 0
  store i32 -128, i32* %58, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %55, i32 1, i32 0, i32 0
  store i64 0, i64* %59, align 8
  br label %60

60:                                               ; preds = %57, %54, %31
  %61 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink18OriginTrialFeatureENS_12KeyValuePairIS2_N4base4TimeEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.8"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #13
  ret %"struct.WTF::KeyValuePair"* %61
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink18OriginTrialFeatureENS_12KeyValuePairIS2_N4base4TimeEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.8"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.8", %"class.WTF::HashTable.8"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.8", %"class.WTF::HashTable.8"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.8"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %16 to i64
  br label %31

18:                                               ; preds = %117
  %19 = bitcast %"class.WTF::HashTable.8"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %118, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair"* [ null, %10 ], [ %121, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #13
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.8", %"class.WTF::HashTable.8"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"struct.WTF::KeyValuePair"* %23

31:                                               ; preds = %13, %117
  %32 = phi i64 [ %17, %13 ], [ %118, %117 ]
  %33 = phi i32 [ %7, %13 ], [ %119, %117 ]
  %34 = phi %"struct.WTF::KeyValuePair"* [ %16, %13 ], [ %120, %117 ]
  %35 = phi %"struct.WTF::KeyValuePair"* [ null, %13 ], [ %121, %117 ]
  %36 = phi i32 [ 0, %13 ], [ %122, %117 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = or i32 %40, 1
  %42 = icmp eq i32 %41, -127
  br i1 %42, label %117, label %43

43:                                               ; preds = %31
  %44 = shl i32 %40, 15
  %45 = xor i32 %44, -1
  %46 = add i32 %40, %45
  %47 = lshr i32 %46, 10
  %48 = xor i32 %47, %46
  %49 = mul i32 %48, 9
  %50 = lshr i32 %49, 6
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 11
  %53 = xor i32 %52, -1
  %54 = add i32 %51, %53
  %55 = lshr i32 %54, 16
  %56 = xor i32 %55, %54
  %57 = and i32 %56, %14
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %58
  %60 = ptrtoint %"struct.WTF::KeyValuePair"* %59 to i64
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, -128
  br i1 %63, label %81, label %64

64:                                               ; preds = %43
  %65 = xor i32 %56, -1
  %66 = lshr i32 %54, 23
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 12
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 7
  %71 = xor i32 %70, %69
  %72 = shl i32 %71, 2
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 20
  %75 = xor i32 %74, %73
  %76 = or i32 %75, 1
  %77 = zext i32 %76 to i64
  br label %87

78:                                               ; preds = %94
  %79 = ptrtoint %"struct.WTF::KeyValuePair"* %101 to i64
  %80 = inttoptr i64 %96 to %"struct.WTF::KeyValuePair"*
  br label %81

81:                                               ; preds = %78, %43
  %82 = phi i64 [ %79, %78 ], [ %60, %43 ]
  %83 = phi %"struct.WTF::KeyValuePair"* [ %80, %78 ], [ null, %43 ]
  %84 = icmp eq %"struct.WTF::KeyValuePair"* %83, null
  %85 = ptrtoint %"struct.WTF::KeyValuePair"* %83 to i64
  %86 = select i1 %84, i64 %82, i64 %85
  br label %106

87:                                               ; preds = %94, %64
  %88 = phi i64 [ 0, %64 ], [ %96, %94 ]
  %89 = phi i32 [ %62, %64 ], [ %104, %94 ]
  %90 = phi i64 [ %60, %64 ], [ %102, %94 ]
  %91 = phi i64 [ %58, %64 ], [ %100, %94 ]
  %92 = phi i64 [ 0, %64 ], [ %98, %94 ]
  %93 = icmp eq i32 %89, %40
  br i1 %93, label %106, label %94

94:                                               ; preds = %87
  %95 = icmp eq i32 %89, -127
  %96 = select i1 %95, i64 %90, i64 %88
  %97 = icmp eq i64 %92, 0
  %98 = select i1 %97, i64 %77, i64 %92
  %99 = add i64 %98, %91
  %100 = and i64 %99, %15
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %100
  %102 = ptrtoint %"struct.WTF::KeyValuePair"* %101 to i64
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %101, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, -128
  br i1 %105, label %78, label %87

106:                                              ; preds = %87, %81
  %107 = phi i64 [ %86, %81 ], [ %90, %87 ]
  %108 = inttoptr i64 %107 to %"struct.WTF::KeyValuePair"*
  %109 = inttoptr i64 %107 to i8*
  %110 = bitcast %"struct.WTF::KeyValuePair"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 16, i1 false) #13
  %111 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %111, i64 %37
  %113 = icmp eq %"struct.WTF::KeyValuePair"* %112, %3
  %114 = select i1 %113, %"struct.WTF::KeyValuePair"* %108, %"struct.WTF::KeyValuePair"* %35
  %115 = load i32, i32* %6, align 8
  %116 = ptrtoint %"struct.WTF::KeyValuePair"* %111 to i64
  br label %117

117:                                              ; preds = %31, %106
  %118 = phi i64 [ %32, %31 ], [ %116, %106 ]
  %119 = phi i32 [ %33, %31 ], [ %115, %106 ]
  %120 = phi %"struct.WTF::KeyValuePair"* [ %34, %31 ], [ %111, %106 ]
  %121 = phi %"struct.WTF::KeyValuePair"* [ %35, %31 ], [ %114, %106 ]
  %122 = add i32 %36, 1
  %123 = icmp eq i32 %122, %119
  br i1 %123, label %18, label %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.18"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink17OriginTrialResultEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERS1_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.15"*, %"class.WTF::String"* dereferenceable(8), %"struct.blink::OriginTrialResult"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.WTF::KeyValuePair.18", align 16
  %5 = getelementptr inbounds %"class.WTF::HashTable.15", %"class.WTF::HashTable.15"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.18"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"struct.WTF::KeyValuePair.18"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink17OriginTrialResultEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.15"* %0, %"struct.WTF::KeyValuePair.18"* null)
  %10 = load %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"struct.WTF::KeyValuePair.18"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable.15", %"class.WTF::HashTable.15"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = lshr i32 %20, 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %11
  %24 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %18) #13
  br label %25

25:                                               ; preds = %11, %23
  %26 = phi i32 [ %24, %23 ], [ %21, %11 ]
  %27 = and i32 %26, %15
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %12, i64 %28
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %91, label %33

33:                                               ; preds = %25
  %34 = xor i32 %26, -1
  %35 = lshr i32 %26, 23
  %36 = add i32 %35, %34
  %37 = shl i32 %36, 12
  %38 = xor i32 %37, %36
  %39 = lshr i32 %38, 7
  %40 = xor i32 %39, %38
  %41 = shl i32 %40, 2
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 20
  %44 = xor i32 %43, %42
  %45 = or i32 %44, 1
  %46 = zext i32 %45 to i64
  br label %47

47:                                               ; preds = %33, %59
  %48 = phi %"struct.WTF::KeyValuePair.18"* [ %29, %33 ], [ %65, %59 ]
  %49 = phi %"struct.WTF::KeyValuePair.18"* [ null, %33 ], [ %60, %59 ]
  %50 = phi i64 [ %28, %33 ], [ %64, %59 ]
  %51 = phi i64 [ 0, %33 ], [ %62, %59 ]
  %52 = bitcast %"struct.WTF::KeyValuePair.18"* %48 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)
  br i1 %54, label %59, label %55

55:                                               ; preds = %47
  %56 = bitcast i8* %53 to %"class.WTF::StringImpl"*
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %58 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"* %57) #13
  br i1 %58, label %104, label %59

59:                                               ; preds = %47, %55
  %60 = phi %"struct.WTF::KeyValuePair.18"* [ %49, %55 ], [ %48, %47 ]
  %61 = icmp eq i64 %51, 0
  %62 = select i1 %61, i64 %46, i64 %51
  %63 = add i64 %62, %50
  %64 = and i64 %63, %16
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %12, i64 %64
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %69, label %47

69:                                               ; preds = %59
  %70 = icmp eq %"struct.WTF::KeyValuePair.18"* %60, null
  br i1 %70, label %91, label %71

71:                                               ; preds = %69
  %72 = bitcast %"struct.WTF::KeyValuePair.18"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %72) #13
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %4, i64 0, i32 1, i32 2
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %4, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %4, i64 0, i32 1, i32 2, i32 0, i32 0, i32 2
  %76 = bitcast %"class.WTF::Vector"* %73 to i64*
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %4, i64 0, i32 1, i32 1
  store i32 0, i32* %77, align 8
  store atomic i64 0, i64* %76 monotonic, align 8, !alias.scope !24
  %78 = bitcast %"struct.WTF::KeyValuePair.18"* %60 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %78, align 8
  %79 = bitcast %"struct.WTF::KeyValuePair.18"* %4 to <2 x %"class.WTF::StringImpl"*>*
  store <2 x %"class.WTF::StringImpl"*> zeroinitializer, <2 x %"class.WTF::StringImpl"*>* %79, align 16
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %60, i64 0, i32 1, i32 1
  store i32 0, i32* %80, align 8
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %60, i64 0, i32 1, i32 2
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %60, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %60, i64 0, i32 1, i32 2, i32 0, i32 0, i32 2
  %84 = bitcast %"class.WTF::Vector"* %81 to i64*
  store i64 0, i64* %84, align 8
  store atomic i64 0, i64* %76 monotonic, align 8
  store atomic i64 0, i64* %84 monotonic, align 8
  store i32 0, i32* %82, align 4
  store i32 0, i32* %74, align 8
  store i32 0, i32* %83, align 4
  store i32 0, i32* %75, align 4
  call void @_ZN3WTF12KeyValuePairINS_6StringEN5blink17OriginTrialResultEED2Ev(%"struct.WTF::KeyValuePair.18"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %72) #13
  %85 = getelementptr inbounds %"class.WTF::HashTable.15", %"class.WTF::HashTable.15"* %0, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = add i32 %86, 2147483647
  %88 = and i32 %87, 2147483647
  %89 = and i32 %86, -2147483648
  %90 = or i32 %88, %89
  store i32 %90, i32* %85, align 8
  br label %91

91:                                               ; preds = %25, %69, %71
  %92 = phi %"struct.WTF::KeyValuePair.18"* [ %60, %71 ], [ %65, %69 ], [ %29, %25 ]
  call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS2_IN5blink17OriginTrialResultEEEEENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S6_EERS3_S6_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.18"* dereferenceable(40) %92, %"class.WTF::String"* dereferenceable(8) %1, %"struct.blink::OriginTrialResult"* dereferenceable(32) %2)
  %93 = getelementptr inbounds %"class.WTF::HashTable.15", %"class.WTF::HashTable.15"* %0, i64 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %93, align 4
  %96 = getelementptr inbounds %"class.WTF::HashTable.15", %"class.WTF::HashTable.15"* %0, i64 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = add i32 %97, %95
  %99 = shl i32 %98, 1
  %100 = load i32, i32* %13, align 8
  %101 = icmp ult i32 %99, %100
  br i1 %101, label %104, label %102

102:                                              ; preds = %91
  %103 = call %"struct.WTF::KeyValuePair.18"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink17OriginTrialResultEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.15"* %0, %"struct.WTF::KeyValuePair.18"* %92)
  br label %104

104:                                              ; preds = %55, %91, %102
  %105 = phi i8 [ 1, %91 ], [ 1, %102 ], [ 0, %55 ]
  %106 = phi %"struct.WTF::KeyValuePair.18"* [ %92, %91 ], [ %103, %102 ], [ %48, %55 ]
  %107 = insertvalue { %"struct.WTF::KeyValuePair.18"*, i8 } undef, %"struct.WTF::KeyValuePair.18"* %106, 0
  %108 = insertvalue { %"struct.WTF::KeyValuePair.18"*, i8 } %107, i8 %105, 1
  ret { %"struct.WTF::KeyValuePair.18"*, i8 } %108
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.18"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink17OriginTrialResultEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.15"*, %"struct.WTF::KeyValuePair.18"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"struct.WTF::KeyValuePair.18", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.15", %"class.WTF::HashTable.15"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %32, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.15", %"class.WTF::HashTable.15"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %32, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #13
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0), i8* %23, i8* %24) #13
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.24, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #13
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  br label %31

31:                                               ; preds = %21, %22, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %32

32:                                               ; preds = %10, %2, %31
  %33 = phi i32 [ %14, %31 ], [ 8, %2 ], [ %8, %10 ]
  %34 = zext i32 %33 to i64
  %35 = mul nuw nsw i64 %34, 40
  %36 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %35, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEN5blink17OriginTrialResultEEEEEPKcv, i64 0, i64 0)) #13
  %37 = bitcast i8* %36 to %"struct.WTF::KeyValuePair.18"*
  %38 = icmp eq i32 %33, 0
  br i1 %38, label %61, label %39

39:                                               ; preds = %32
  %40 = bitcast %"struct.WTF::KeyValuePair.18"* %4 to i8*
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %4, i64 0, i32 1, i32 2
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %4, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %4, i64 0, i32 1, i32 2, i32 0, i32 0, i32 2
  %44 = bitcast %"class.WTF::Vector"* %41 to i64*
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %4, i64 0, i32 1, i32 1
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %4, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %48

48:                                               ; preds = %48, %39
  %49 = phi i64 [ 0, %39 ], [ %59, %48 ]
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %37, i64 %49
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %40) #13
  store i32 0, i32* %45, align 8
  store atomic i64 0, i64* %44 monotonic, align 8, !alias.scope !27
  %51 = bitcast %"struct.WTF::KeyValuePair.18"* %50 to i64*
  store i64 0, i64* %51, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %46, align 8
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %37, i64 %49, i32 1
  %53 = bitcast %"struct.blink::OriginTrialResult"* %52 to i64*
  store i64 0, i64* %53, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %47, align 8
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %37, i64 %49, i32 1, i32 1
  store i32 0, i32* %54, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %37, i64 %49, i32 1, i32 2
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %37, i64 %49, i32 1, i32 2, i32 0, i32 0, i32 1
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %37, i64 %49, i32 1, i32 2, i32 0, i32 0, i32 2
  %58 = bitcast %"class.WTF::Vector"* %55 to i64*
  store i64 0, i64* %58, align 8
  store atomic i64 0, i64* %44 monotonic, align 8
  store atomic i64 0, i64* %58 monotonic, align 8
  store i32 0, i32* %56, align 4
  store i32 0, i32* %42, align 8
  store i32 0, i32* %57, align 4
  store i32 0, i32* %43, align 4
  call void @_ZN3WTF12KeyValuePairINS_6StringEN5blink17OriginTrialResultEED2Ev(%"struct.WTF::KeyValuePair.18"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %40) #13
  %59 = add nuw nsw i64 %49, 1
  %60 = icmp eq i64 %59, %34
  br i1 %60, label %61, label %48

61:                                               ; preds = %48, %32
  %62 = call %"struct.WTF::KeyValuePair.18"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink17OriginTrialResultEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable.15"* %0, %"struct.WTF::KeyValuePair.18"* %37, i32 %33, %"struct.WTF::KeyValuePair.18"* %1) #13
  ret %"struct.WTF::KeyValuePair.18"* %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS2_IN5blink17OriginTrialResultEEEEENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S6_EERS3_S6_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.18"* dereferenceable(40), %"class.WTF::String"* dereferenceable(8), %"struct.blink::OriginTrialResult"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #13
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #13
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %3
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"struct.WTF::KeyValuePair.18"* %0 to i64*
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #13
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %0, i64 0, i32 1
  %45 = getelementptr inbounds %"struct.blink::OriginTrialResult", %"struct.blink::OriginTrialResult"* %2, i64 0, i32 0, i32 0, i32 0
  %46 = bitcast %"struct.blink::OriginTrialResult"* %2 to i64*
  %47 = load i64, i64* %46, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %45, align 8
  %48 = bitcast %"struct.blink::OriginTrialResult"* %44 to i64*
  %49 = getelementptr inbounds %"struct.blink::OriginTrialResult", %"struct.blink::OriginTrialResult"* %44, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  store i64 %47, i64* %48, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #13
  br label %65

65:                                               ; preds = %43, %61, %64
  %66 = getelementptr inbounds %"struct.blink::OriginTrialResult", %"struct.blink::OriginTrialResult"* %2, i64 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %0, i64 0, i32 1, i32 1
  store i32 %67, i32* %68, align 8
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %0, i64 0, i32 1, i32 2
  %70 = getelementptr inbounds %"struct.blink::OriginTrialResult", %"struct.blink::OriginTrialResult"* %2, i64 0, i32 2
  %71 = bitcast %"class.WTF::Vector"* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %"class.WTF::Vector"* %69 to i64*
  %74 = load i64, i64* %73, align 8
  store atomic i64 %74, i64* %71 monotonic, align 8
  store atomic i64 %72, i64* %73 monotonic, align 8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %76 = getelementptr inbounds %"struct.blink::OriginTrialResult", %"struct.blink::OriginTrialResult"* %2, i64 0, i32 2, i32 0, i32 0, i32 1
  %77 = load i32, i32* %75, align 4
  %78 = load i32, i32* %76, align 4
  store i32 %78, i32* %75, align 4
  store i32 %77, i32* %76, align 4
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 2
  %80 = getelementptr inbounds %"struct.blink::OriginTrialResult", %"struct.blink::OriginTrialResult"* %2, i64 0, i32 2, i32 0, i32 0, i32 2
  %81 = load i32, i32* %79, align 4
  %82 = load i32, i32* %80, align 4
  store i32 %82, i32* %79, align 4
  store i32 %81, i32* %80, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.18"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink17OriginTrialResultEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable.15"*, %"struct.WTF::KeyValuePair.18"*, i32, %"struct.WTF::KeyValuePair.18"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.15", align 8
  %6 = bitcast %"class.WTF::HashTable.15"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::HashTable.15", %"class.WTF::HashTable.15"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.15", %"class.WTF::HashTable.15"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.15", %"class.WTF::HashTable.15"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.15", %"class.WTF::HashTable.15"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.15"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.18"* %1, %"struct.WTF::KeyValuePair.18"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.15", %"class.WTF::HashTable.15"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.15", %"class.WTF::HashTable.15"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.18"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.15"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.15"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.18"* %22 to i64
  br label %57

24:                                               ; preds = %103
  %25 = bitcast %"class.WTF::HashTable.15"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.15"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %104, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.18"* [ null, %16 ], [ %107, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %105, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.18"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %53, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %51, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %48, %39
  %42 = phi i64 [ 0, %39 ], [ %49, %48 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair.18"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, inttoptr (i64 -1 to i8*)
  br i1 %46, label %48, label %47

47:                                               ; preds = %41
  call void @_ZN3WTF12KeyValuePairINS_6StringEN5blink17OriginTrialResultEED2Ev(%"struct.WTF::KeyValuePair.18"* %43) #13
  br label %48

48:                                               ; preds = %47, %41
  %49 = add nuw nsw i64 %42, 1
  %50 = icmp eq i64 %49, %40
  br i1 %50, label %51, label %41

51:                                               ; preds = %48, %37
  %52 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %52) #13
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %28, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable.15", %"class.WTF::HashTable.15"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret %"struct.WTF::KeyValuePair.18"* %33

57:                                               ; preds = %21, %103
  %58 = phi i64 [ %104, %103 ], [ %23, %21 ]
  %59 = phi i32 [ %105, %103 ], [ %13, %21 ]
  %60 = phi %"struct.WTF::KeyValuePair.18"* [ %106, %103 ], [ %22, %21 ]
  %61 = phi %"struct.WTF::KeyValuePair.18"* [ %107, %103 ], [ null, %21 ]
  %62 = phi i32 [ %108, %103 ], [ 0, %21 ]
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %60, i64 %63
  %65 = bitcast %"struct.WTF::KeyValuePair.18"* %64 to i64*
  %66 = load i64, i64* %65, align 8
  switch i64 %66, label %67 [
    i64 -1, label %103
    i64 0, label %103
  ]

67:                                               ; preds = %57
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %64, i64 0, i32 0, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %64, i64 0, i32 0
  %70 = call { %"struct.WTF::KeyValuePair.18"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink17OriginTrialResultEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.15"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %69) #13
  %71 = extractvalue { %"struct.WTF::KeyValuePair.18"*, i8 } %70, 0
  call void @_ZN3WTF12KeyValuePairINS_6StringEN5blink17OriginTrialResultEED2Ev(%"struct.WTF::KeyValuePair.18"* %71) #13
  %72 = load i64, i64* %65, align 8
  %73 = bitcast %"struct.WTF::KeyValuePair.18"* %71 to i64*
  store i64 %72, i64* %73, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %68, align 8
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %71, i64 0, i32 1
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %60, i64 %63, i32 1
  %76 = getelementptr inbounds %"struct.blink::OriginTrialResult", %"struct.blink::OriginTrialResult"* %75, i64 0, i32 0, i32 0, i32 0
  %77 = bitcast %"struct.blink::OriginTrialResult"* %75 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"struct.blink::OriginTrialResult"* %74 to i64*
  store i64 %78, i64* %79, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %76, align 8
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %71, i64 0, i32 1, i32 1
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %60, i64 %63, i32 1, i32 1
  %82 = load i32, i32* %81, align 8
  store i32 %82, i32* %80, align 8
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %71, i64 0, i32 1, i32 2
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %60, i64 %63, i32 1, i32 2
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %71, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %71, i64 0, i32 1, i32 2, i32 0, i32 0, i32 2
  %87 = bitcast %"class.WTF::Vector"* %84 to i64*
  %88 = bitcast %"class.WTF::Vector"* %83 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 16, i1 false) #13
  %89 = load i64, i64* %87, align 8
  %90 = bitcast %"class.WTF::Vector"* %83 to i64*
  store atomic i64 0, i64* %87 monotonic, align 8
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %60, i64 %63, i32 1, i32 2, i32 0, i32 0, i32 1
  %92 = load i32, i32* %85, align 4
  %93 = load i32, i32* %91, align 4
  store i32 %93, i32* %85, align 4
  store i32 %92, i32* %91, align 4
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %60, i64 %63, i32 1, i32 2, i32 0, i32 0, i32 2
  %95 = load i32, i32* %86, align 4
  %96 = load i32, i32* %94, align 4
  store i32 %96, i32* %86, align 4
  store i32 %95, i32* %94, align 4
  %97 = load %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"** %15, align 8
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %97, i64 %63
  %99 = icmp eq %"struct.WTF::KeyValuePair.18"* %98, %3
  %100 = select i1 %99, %"struct.WTF::KeyValuePair.18"* %71, %"struct.WTF::KeyValuePair.18"* %61
  %101 = load i32, i32* %12, align 8
  %102 = ptrtoint %"struct.WTF::KeyValuePair.18"* %97 to i64
  br label %103

103:                                              ; preds = %57, %57, %67
  %104 = phi i64 [ %58, %57 ], [ %102, %67 ], [ %58, %57 ]
  %105 = phi i32 [ %59, %57 ], [ %101, %67 ], [ %59, %57 ]
  %106 = phi %"struct.WTF::KeyValuePair.18"* [ %60, %57 ], [ %97, %67 ], [ %60, %57 ]
  %107 = phi %"struct.WTF::KeyValuePair.18"* [ %61, %57 ], [ %100, %67 ], [ %61, %57 ]
  %108 = add i32 %62, 1
  %109 = icmp eq i32 %108, %105
  br i1 %109, label %24, label %57
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12KeyValuePairINS_6StringEN5blink17OriginTrialResultEED2Ev(%"struct.WTF::KeyValuePair.18"*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %0, i64 0, i32 1, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::OriginTrialTokenResult"*, %"struct.blink::OriginTrialTokenResult"** %3, align 8
  %5 = icmp eq %"struct.blink::OriginTrialTokenResult"* %4, null
  br i1 %5, label %46, label %6, !prof !4

6:                                                ; preds = %1
  %7 = bitcast %"struct.blink::OriginTrialTokenResult"* %4 to i8*
  %8 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %44, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %4, i64 %12
  br label %14

14:                                               ; preds = %38, %11
  %15 = phi %"struct.blink::OriginTrialTokenResult"* [ %39, %38 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5blink10TrialTokenD1Ev(%"class.blink::TrialToken"* %20) #13
  store i8 0, i8* %16, align 8
  br label %21

21:                                               ; preds = %19, %14
  %22 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %15, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #13
  br label %38

38:                                               ; preds = %37, %34, %21
  %39 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %15, i64 1
  %40 = icmp eq %"struct.blink::OriginTrialTokenResult"* %39, %13
  br i1 %40, label %41, label %14

41:                                               ; preds = %38
  store i32 0, i32* %8, align 4
  %42 = bitcast %"class.WTF::Vector"* %2 to i8**
  %43 = load i8*, i8** %42, align 8
  br label %44

44:                                               ; preds = %41, %6
  %45 = phi i8* [ %43, %41 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %45) #13
  store %"struct.blink::OriginTrialTokenResult"* null, %"struct.blink::OriginTrialTokenResult"** %3, align 8
  br label %46

46:                                               ; preds = %44, %1
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #13
  br label %63

63:                                               ; preds = %46, %59, %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #13
  br label %80

80:                                               ; preds = %63, %76, %79
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.18"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink17OriginTrialResultEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.15"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.15", %"class.WTF::HashTable.15"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.15", %"class.WTF::HashTable.15"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #13
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.18"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.18"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.18"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.18"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.18"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.18"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.18"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.18"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #13
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.18"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.18"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.18"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.18"*, i8 } undef, %"struct.WTF::KeyValuePair.18"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.18"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.18"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink22OriginTrialTokenResultELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector"*, %"struct.blink::OriginTrialTokenResult"* dereferenceable(176)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::OriginTrialTokenResult"*, %"struct.blink::OriginTrialTokenResult"** %6, align 8
  %8 = icmp ugt %"struct.blink::OriginTrialTokenResult"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::OriginTrialTokenResult"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::OriginTrialTokenResult"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22OriginTrialTokenResultEEEmm(i64 %27) #13
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22OriginTrialTokenResultEEEPKcv, i64 0, i64 0)) #13
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %28, 176
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"struct.blink::OriginTrialTokenResult"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink22OriginTrialTokenResultELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %22) #13
  %36 = load %"struct.blink::OriginTrialTokenResult"*, %"struct.blink::OriginTrialTokenResult"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"struct.blink::OriginTrialTokenResult"* %1 to i64
  %39 = ptrtoint %"struct.blink::OriginTrialTokenResult"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = sdiv exact i64 %40, 176
  %42 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !4

52:                                               ; preds = %37
  %53 = icmp eq %"struct.blink::OriginTrialTokenResult"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22OriginTrialTokenResultEEEmm(i64 %55) #13
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22OriginTrialTokenResultEEEPKcv, i64 0, i64 0)) #13
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = udiv i64 %56, 176
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"struct.blink::OriginTrialTokenResult"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN5blink22OriginTrialTokenResultELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %50) #13
  %64 = load %"struct.blink::OriginTrialTokenResult"*, %"struct.blink::OriginTrialTokenResult"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"struct.blink::OriginTrialTokenResult"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"struct.blink::OriginTrialTokenResult"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"struct.blink::OriginTrialTokenResult"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %69, i64 %72
  %74 = bitcast %"struct.blink::OriginTrialTokenResult"* %73 to i8*
  %75 = tail call %"struct.blink::OriginTrialTokenResult"* @_ZN3WTF15ConstructTraitsIN5blink22OriginTrialTokenResultENS_12VectorTraitsIS2_EENS_18PartitionAllocatorEE9ConstructIJS2_EEEPS2_PvDpOT_(i8* %74, %"struct.blink::OriginTrialTokenResult"* dereferenceable(176) %70) #13
  %76 = load i32, i32* %3, align 4
  %77 = add i32 %76, 1
  store i32 %77, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::OriginTrialTokenResult"* @_ZN3WTF15ConstructTraitsIN5blink22OriginTrialTokenResultENS_12VectorTraitsIS2_EENS_18PartitionAllocatorEE9ConstructIJS2_EEEPS2_PvDpOT_(i8*, %"struct.blink::OriginTrialTokenResult"* dereferenceable(176)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"struct.blink::OriginTrialTokenResult"*
  %4 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = bitcast i8* %0 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #13
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #13
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %23, %8, %2
  %26 = getelementptr inbounds i8, i8* %0, i64 8
  %27 = bitcast i8* %26 to i32*
  %28 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  store i32 %29, i32* %27, align 8
  %30 = getelementptr inbounds i8, i8* %0, i64 16
  %31 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 160, i1 false) #13
  %32 = load i8, i8* %31, align 8, !range !3
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %80, label %34

34:                                               ; preds = %25
  %35 = getelementptr inbounds i8, i8* %0, i64 24
  %36 = bitcast i8* %35 to %"class.url::Origin"*
  %37 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %36, %"class.url::Origin"* dereferenceable(80) %37) #13
  %38 = getelementptr inbounds i8, i8* %0, i64 104
  %39 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %40 = load i8, i8* %39, align 8, !range !3
  store i8 %40, i8* %38, align 8
  %41 = getelementptr inbounds i8, i8* %0, i64 112
  %42 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %43 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %34
  %48 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %48, i64 24, i1 false) #13
  br label %55

49:                                               ; preds = %34
  %50 = bitcast i8* %41 to %"class.std::__1::basic_string"*
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %50, i8* %52, i64 %54) #13
  br label %55

55:                                               ; preds = %49, %47
  %56 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %57 = getelementptr inbounds i8, i8* %0, i64 136
  %58 = bitcast i8* %57 to i64*
  %59 = load i64, i64* %56, align 8
  store i64 %59, i64* %58, align 8
  %60 = getelementptr inbounds i8, i8* %0, i64 144
  %61 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %62 = bitcast %"class.std::__1::basic_string"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %68, label %66

66:                                               ; preds = %55
  %67 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %67, i64 24, i1 false) #13
  br label %74

68:                                               ; preds = %55
  %69 = bitcast i8* %60 to %"class.std::__1::basic_string"*
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %69, i8* %71, i64 %73) #13
  br label %74

74:                                               ; preds = %68, %66
  %75 = getelementptr inbounds i8, i8* %0, i64 168
  %76 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 5
  %77 = bitcast i8* %76 to i64*
  %78 = bitcast i8* %75 to i64*
  %79 = load i64, i64* %77, align 8
  store i64 %79, i64* %78, align 8
  store i8 1, i8* %30, align 8
  br label %80

80:                                               ; preds = %25, %74
  ret %"struct.blink::OriginTrialTokenResult"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink22OriginTrialTokenResultELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %47

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::OriginTrialTokenResult"*, %"struct.blink::OriginTrialTokenResult"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %45, label %14

14:                                               ; preds = %4, %41
  %15 = phi %"struct.blink::OriginTrialTokenResult"* [ %43, %41 ], [ %6, %4 ]
  %16 = phi %"struct.blink::OriginTrialTokenResult"* [ %42, %41 ], [ null, %4 ]
  %17 = bitcast %"struct.blink::OriginTrialTokenResult"* %16 to i8*
  %18 = tail call %"struct.blink::OriginTrialTokenResult"* @_ZN3WTF15ConstructTraitsIN5blink22OriginTrialTokenResultENS_12VectorTraitsIS2_EENS_18PartitionAllocatorEE9ConstructIJS2_EEEPS2_PvDpOT_(i8* %17, %"struct.blink::OriginTrialTokenResult"* dereferenceable(176) %15) #13
  %19 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !3
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5blink10TrialTokenD1Ev(%"class.blink::TrialToken"* %23) #13
  store i8 0, i8* %19, align 8
  br label %24

24:                                               ; preds = %22, %14
  %25 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %15, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #13
  br label %41

41:                                               ; preds = %40, %37, %24
  %42 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %16, i64 1
  %43 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %15, i64 1
  %44 = icmp eq %"struct.blink::OriginTrialTokenResult"* %43, %10
  br i1 %44, label %45, label %14

45:                                               ; preds = %41, %4
  %46 = bitcast %"struct.blink::OriginTrialTokenResult"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %46) #13
  br label %103

47:                                               ; preds = %2
  %48 = zext i32 %1 to i64
  %49 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22OriginTrialTokenResultEEEmm(i64 %48) #13
  %50 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %49, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22OriginTrialTokenResultEEEPKcv, i64 0, i64 0)) #13
  %51 = udiv i64 %49, 176
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %54 = load %"struct.blink::OriginTrialTokenResult"*, %"struct.blink::OriginTrialTokenResult"** %53, align 8
  %55 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %54, i64 %57
  %59 = icmp eq i32 %56, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %47
  %61 = bitcast %"struct.blink::OriginTrialTokenResult"* %54 to i8*
  br label %98

62:                                               ; preds = %47
  %63 = bitcast i8* %50 to %"struct.blink::OriginTrialTokenResult"*
  br label %64

64:                                               ; preds = %62, %91
  %65 = phi %"struct.blink::OriginTrialTokenResult"* [ %93, %91 ], [ %54, %62 ]
  %66 = phi %"struct.blink::OriginTrialTokenResult"* [ %92, %91 ], [ %63, %62 ]
  %67 = bitcast %"struct.blink::OriginTrialTokenResult"* %66 to i8*
  %68 = tail call %"struct.blink::OriginTrialTokenResult"* @_ZN3WTF15ConstructTraitsIN5blink22OriginTrialTokenResultENS_12VectorTraitsIS2_EENS_18PartitionAllocatorEE9ConstructIJS2_EEEPS2_PvDpOT_(i8* %67, %"struct.blink::OriginTrialTokenResult"* dereferenceable(176) %65) #13
  %69 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %70 = load i8, i8* %69, align 8, !range !3
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %74, label %72

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5blink10TrialTokenD1Ev(%"class.blink::TrialToken"* %73) #13
  store i8 0, i8* %69, align 8
  br label %74

74:                                               ; preds = %72, %64
  %75 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %65, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #13
  br label %91

91:                                               ; preds = %90, %87, %74
  %92 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %66, i64 1
  %93 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %65, i64 1
  %94 = icmp eq %"struct.blink::OriginTrialTokenResult"* %93, %58
  br i1 %94, label %95, label %64

95:                                               ; preds = %91
  %96 = bitcast %"class.WTF::Vector"* %0 to i8**
  %97 = load i8*, i8** %96, align 8
  br label %98

98:                                               ; preds = %60, %95
  %99 = phi i8* [ %97, %95 ], [ %61, %60 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %99) #13
  %100 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %52, i64* %100 monotonic, align 8
  %101 = trunc i64 %51 to i32
  %102 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %101, i32* %102, align 8
  br label %103

103:                                              ; preds = %98, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22OriginTrialTokenResultEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 12189696
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 12189696) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.15, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = mul i64 %0, 176
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5blink10TrialToken12feature_nameEv: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink10TrialToken12feature_nameEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK5blink10TrialToken12feature_nameEv: argument 0"}
!10 = distinct !{!10, !"_ZNK5blink10TrialToken12feature_nameEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK5blink10TrialToken12feature_nameEv: argument 0"}
!13 = distinct !{!13, !"_ZNK5blink10TrialToken12feature_nameEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN4absl13make_optionalIRKN5blink10TrialTokenEEENS_8optionalINSt3__15decayIT_E4typeEEEOS8_: argument 0"}
!16 = distinct !{!16, !"_ZN4absl13make_optionalIRKN5blink10TrialTokenEEENS_8optionalINSt3__15decayIT_E4typeEEEOS8_"}
!17 = !{i32 24, i32 33}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.isvectorized", i32 1}
!20 = distinct !{!20, !21}
!21 = !{!"llvm.loop.unroll.disable"}
!22 = distinct !{!22, !23, !19}
!23 = !{!"llvm.loop.unroll.runtime.disable"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINS_6StringEEENS1_IN5blink17OriginTrialResultEEEE10EmptyValueEv: argument 0"}
!26 = distinct !{!26, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINS_6StringEEENS1_IN5blink17OriginTrialResultEEEE10EmptyValueEv"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINS_6StringEEENS1_IN5blink17OriginTrialResultEEEE10EmptyValueEv: argument 0"}
!29 = distinct !{!29, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINS_6StringEEENS1_IN5blink17OriginTrialResultEEEE10EmptyValueEv"}
