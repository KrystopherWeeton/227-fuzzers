; ModuleID = '../../third_party/icu/source/i18n/ulocdata.cpp'
source_filename = "../../third_party/icu/source/i18n/ulocdata.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::MaybeStackArray" = type <{ i8*, i32, i8, [40 x i8], [3 x i8] }>
%struct.ULocaleData = type { i8, %struct.UResourceBundle*, %struct.UResourceBundle* }
%struct.UResourceBundle = type { i8*, %struct.UResourceDataEntry*, i8*, %struct.UResourceDataEntry*, i8*, %struct.ResourceData, [64 x i8], i32, i32, i8, i8, i32, i32, i32, i32 }
%struct.UResourceDataEntry = type { i8*, i8*, %struct.UResourceDataEntry*, %struct.UResourceDataEntry*, %struct.UResourceDataEntry*, %struct.ResourceData, [3 x i8], i32, i32 }
%struct.ResourceData = type { %struct.UDataMemory*, i32*, i16*, i8*, i32, i32, i16*, i32, i32, i8, i8, i8, i8 }
%struct.UDataMemory = type opaque
%struct.USet = type opaque

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_ = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_ = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode = comdat any

@.str = private unnamed_addr constant [14 x i8] c"icudt69l-lang\00", align 1
@_ZZ26ulocdata_getExemplarSet_69E16exemplarSetTypes = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i32 0, i32 0)], align 16
@.str.1 = private unnamed_addr constant [19 x i8] c"ExemplarCharacters\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"AuxExemplarCharacters\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"ExemplarCharactersIndex\00", align 1
@.str.4 = private unnamed_addr constant [30 x i8] c"ExemplarCharactersPunctuation\00", align 1
@_ZZ24ulocdata_getDelimiter_69E13delimiterKeys = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8, i32 0, i32 0)], align 16
@.str.5 = private unnamed_addr constant [15 x i8] c"quotationStart\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"quotationEnd\00", align 1
@.str.7 = private unnamed_addr constant [24 x i8] c"alternateQuotationStart\00", align 1
@.str.8 = private unnamed_addr constant [22 x i8] c"alternateQuotationEnd\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"delimiters\00", align 1
@.str.10 = private unnamed_addr constant [18 x i8] c"MeasurementSystem\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"PaperSize\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"supplementalData\00", align 1
@.str.13 = private unnamed_addr constant [12 x i8] c"cldrVersion\00", align 1
@.str.14 = private unnamed_addr constant [21 x i8] c"localeDisplayPattern\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"pattern\00", align 1
@_ZZ30ulocdata_getLocaleSeparator_69E4sub0 = internal constant [4 x i16] [i16 123, i16 48, i16 125, i16 0], align 2
@_ZZ30ulocdata_getLocaleSeparator_69E4sub1 = internal constant [4 x i16] [i16 123, i16 49, i16 125, i16 0], align 2
@.str.16 = private unnamed_addr constant [10 x i8] c"separator\00", align 1
@.str.17 = private unnamed_addr constant [16 x i8] c"measurementData\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"001\00", align 1

@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ei10UErrorCode = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, i32, i32), void (%"class.icu_69::MaybeStackArray"*, i32, i32)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode
@_ZN6icu_6915MaybeStackArrayIcLi40EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1EOS1_ = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %3, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode(%"class.icu_69::MaybeStackArray"*, i32, i32) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode) align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %5, i8** %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %7, align 4
  %8 = icmp slt i32 %2, 1
  %9 = icmp sgt i32 %1, 40
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %21

11:                                               ; preds = %3
  %12 = sext i32 %1 to i64
  %13 = tail call noalias i8* @uprv_malloc_69(i64 %12) #7
  %14 = icmp eq i8* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = load i8, i8* %7, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  %19 = load i8*, i8** %4, align 8
  tail call void @uprv_free_69(i8* %19) #8
  br label %20

20:                                               ; preds = %18, %15
  store i8* %13, i8** %4, align 8
  store i32 %1, i32* %6, align 8
  store i8 1, i8* %7, align 4
  br label %21

21:                                               ; preds = %3, %11, %20
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii(%"class.icu_69::MaybeStackArray"*, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %31

5:                                                ; preds = %3
  %6 = sext i32 %1 to i64
  %7 = tail call noalias i8* @uprv_malloc_69(i64 %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %5
  %10 = icmp sgt i32 %2, 0
  br i1 %10, label %11, label %21

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp slt i32 %13, %2
  %15 = select i1 %14, i32 %13, i32 %2
  %16 = icmp sgt i32 %15, %1
  %17 = select i1 %16, i32 %1, i32 %15
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = sext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %7, i8* align 1 %19, i64 %20, i1 false)
  br label %21

21:                                               ; preds = %11, %9
  %22 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %23 = load i8, i8* %22, align 4
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @uprv_free_69(i8* %27) #8
  br label %28

28:                                               ; preds = %21, %25
  %29 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %7, i8** %29, align 8
  %30 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %1, i32* %30, align 8
  store i8 1, i8* %22, align 4
  br label %31

31:                                               ; preds = %3, %28, %5
  %32 = phi i8* [ null, %5 ], [ %7, %28 ], [ null, %3 ]
  ret i8* %32
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #8
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #8
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_) align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %4 = bitcast %"class.icu_69::MaybeStackArray"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.icu_69::MaybeStackArray"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %12 = load i8, i8* %11, align 4
  store i8 %12, i8* %10, align 4
  %13 = load i8*, i8** %3, align 8
  %14 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %15 = icmp eq i8* %13, %14
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %18, i8** %17, align 8
  %19 = load i32, i32* %8, align 8
  %20 = sext i32 %19 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %13, i64 %20, i1 false)
  br label %22

21:                                               ; preds = %2
  store i8* %14, i8** %3, align 8
  store i32 40, i32* %8, align 8
  store i8 0, i8* %11, align 4
  br label %22

22:                                               ; preds = %21, %16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %2, i8** %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden dereferenceable(56) %"class.icu_69::MaybeStackArray"* @_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @uprv_free_69(i8* %8) #8
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %11, i32* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %14 = load i8, i8* %13, align 4
  store i8 %14, i8* %3, align 4
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %18 = icmp eq i8* %16, %17
  br i1 %18, label %19, label %24

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = load i32, i32* %10, align 8
  %23 = sext i32 %22 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %16, i64 %23, i1 false)
  br label %26

24:                                               ; preds = %9
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %16, i8** %25, align 8
  store i8* %17, i8** %15, align 8
  store i32 40, i32* %10, align 8
  store i8 0, i8* %13, align 4
  br label %26

26:                                               ; preds = %24, %19
  ret %"class.icu_69::MaybeStackArray"* %0
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i8, i8* %3, i64 %6
  ret i8* %7
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZN6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci(%"class.icu_69::MaybeStackArray"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ne i8* %1, null
  %5 = icmp sgt i32 %2, 0
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %17

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @uprv_free_69(i8* %13) #8
  br label %14

14:                                               ; preds = %7, %11
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %1, i8** %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %2, i32* %16, align 8
  store i8 0, i8* %8, align 4
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi(%"class.icu_69::MaybeStackArray"*, i32, i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  br label %23

10:                                               ; preds = %3
  %11 = icmp slt i32 %1, 1
  br i1 %11, label %29, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %14, %1
  %16 = select i1 %15, i32 %14, i32 %1
  %17 = sext i32 %16 to i64
  %18 = tail call noalias i8* @uprv_malloc_69(i64 %17) #7
  %19 = icmp eq i8* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %18, i8* align 1 %22, i64 %17, i1 false)
  br label %23

23:                                               ; preds = %20, %7
  %24 = phi i32 [ %1, %7 ], [ %16, %20 ]
  %25 = phi i8* [ %9, %7 ], [ %18, %20 ]
  store i32 %24, i32* %2, align 4
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %27 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %26, i8** %27, align 8
  %28 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %28, align 8
  store i8 0, i8* %4, align 4
  br label %29

29:                                               ; preds = %12, %10, %23
  %30 = phi i8* [ %25, %23 ], [ null, %10 ], [ null, %12 ]
  ret i8* %30
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %27

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  %11 = sext i32 %8 to i64
  %12 = tail call noalias i8* @uprv_malloc_69(i64 %11) #7
  %13 = icmp eq i8* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %16 = load i8, i8* %15, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @uprv_free_69(i8* %20) #8
  br label %22

21:                                               ; preds = %10, %6
  store i32 7, i32* %2, align 4
  br label %27

22:                                               ; preds = %18, %14
  %23 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %12, i8** %23, align 8
  %24 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %8, i32* %24, align 8
  store i8 1, i8* %15, align 4
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 %26, i64 %11, i1 false)
  br label %27

27:                                               ; preds = %3, %21, %22
  ret void
}

declare void @uprv_free_69(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ULocaleData* @ulocdata_open_69(i8*, i32*) local_unnamed_addr #0 {
  %3 = load i32, i32* %1, align 4
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %5, label %20

5:                                                ; preds = %2
  %6 = tail call noalias i8* @uprv_malloc_69(i64 24) #7
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %5
  store i32 7, i32* %1, align 4
  br label %20

9:                                                ; preds = %5
  %10 = bitcast i8* %6 to %struct.ULocaleData*
  %11 = getelementptr inbounds i8, i8* %6, i64 16
  %12 = bitcast i8* %11 to %struct.UResourceBundle**
  store %struct.UResourceBundle* null, %struct.UResourceBundle** %12, align 8
  store i8 0, i8* %6, align 8
  %13 = tail call %struct.UResourceBundle* @ures_open_69(i8* null, i8* %0, i32* %1) #8
  %14 = getelementptr inbounds i8, i8* %6, i64 8
  %15 = bitcast i8* %14 to %struct.UResourceBundle**
  store %struct.UResourceBundle* %13, %struct.UResourceBundle** %15, align 8
  %16 = tail call %struct.UResourceBundle* @ures_open_69(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* %0, i32* %1) #8
  store %struct.UResourceBundle* %16, %struct.UResourceBundle** %12, align 8
  %17 = load i32, i32* %1, align 4
  %18 = icmp slt i32 %17, 1
  br i1 %18, label %20, label %19

19:                                               ; preds = %9
  tail call void @uprv_free_69(i8* nonnull %6) #8
  br label %20

20:                                               ; preds = %9, %2, %19, %8
  %21 = phi %struct.ULocaleData* [ null, %8 ], [ null, %19 ], [ null, %2 ], [ %10, %9 ]
  ret %struct.ULocaleData* %21
}

declare %struct.UResourceBundle* @ures_open_69(i8*, i8*, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @ulocdata_close_69(%struct.ULocaleData*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.ULocaleData* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.ULocaleData, %struct.ULocaleData* %0, i64 0, i32 2
  %5 = load %struct.UResourceBundle*, %struct.UResourceBundle** %4, align 8
  tail call void @ures_close_69(%struct.UResourceBundle* %5) #8
  %6 = getelementptr inbounds %struct.ULocaleData, %struct.ULocaleData* %0, i64 0, i32 1
  %7 = load %struct.UResourceBundle*, %struct.UResourceBundle** %6, align 8
  tail call void @ures_close_69(%struct.UResourceBundle* %7) #8
  %8 = getelementptr inbounds %struct.ULocaleData, %struct.ULocaleData* %0, i64 0, i32 0
  tail call void @uprv_free_69(i8* %8) #8
  br label %9

9:                                                ; preds = %1, %3
  ret void
}

declare void @ures_close_69(%struct.UResourceBundle*) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @ulocdata_setNoSubstitute_69(%struct.ULocaleData* nocapture, i8 signext) local_unnamed_addr #5 {
  %3 = getelementptr inbounds %struct.ULocaleData, %struct.ULocaleData* %0, i64 0, i32 0
  store i8 %1, i8* %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i8 @ulocdata_getNoSubstitute_69(%struct.ULocaleData* nocapture readonly) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.ULocaleData, %struct.ULocaleData* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8
  ret i8 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.USet* @ulocdata_getExemplarSet_69(%struct.ULocaleData* nocapture readonly, %struct.USet*, i32, i32, i32*) local_unnamed_addr #0 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #8
  store i32 0, i32* %6, align 4
  %9 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #8
  store i32 0, i32* %7, align 4
  %10 = load i32, i32* %4, align 4
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %12, label %40

12:                                               ; preds = %5
  %13 = getelementptr inbounds %struct.ULocaleData, %struct.ULocaleData* %0, i64 0, i32 1
  %14 = load %struct.UResourceBundle*, %struct.UResourceBundle** %13, align 8
  %15 = zext i32 %3 to i64
  %16 = getelementptr inbounds [4 x i8*], [4 x i8*]* @_ZZ26ulocdata_getExemplarSet_69E16exemplarSetTypes, i64 0, i64 %15
  %17 = load i8*, i8** %16, align 8
  %18 = call i16* @ures_getStringByKey_69(%struct.UResourceBundle* %14, i8* %17, i32* nonnull %6, i32* nonnull %7) #8
  %19 = load i32, i32* %7, align 4
  switch i32 %19, label %27 [
    i32 -127, label %20
    i32 0, label %25
  ]

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.ULocaleData, %struct.ULocaleData* %0, i64 0, i32 0
  %22 = load i8, i8* %21, align 8
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %20
  store i32 2, i32* %7, align 4
  br label %27

25:                                               ; preds = %12
  %26 = load i32, i32* %4, align 4
  br label %29

27:                                               ; preds = %12, %20, %24
  %28 = phi i32 [ 2, %24 ], [ -127, %20 ], [ %19, %12 ]
  store i32 %28, i32* %4, align 4
  br label %29

29:                                               ; preds = %25, %27
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  %31 = icmp slt i32 %30, 1
  br i1 %31, label %32, label %40

32:                                               ; preds = %29
  %33 = icmp eq %struct.USet* %1, null
  %34 = load i32, i32* %6, align 4
  %35 = or i32 %2, 1
  br i1 %33, label %38, label %36

36:                                               ; preds = %32
  %37 = call i32 @uset_applyPattern_69(%struct.USet* nonnull %1, i16* %18, i32 %34, i32 %35, i32* %4) #8
  br label %40

38:                                               ; preds = %32
  %39 = call %struct.USet* @uset_openPatternOptions_69(i16* %18, i32 %34, i32 %35, i32* %4) #8
  br label %40

40:                                               ; preds = %36, %38, %29, %5
  %41 = phi %struct.USet* [ null, %5 ], [ null, %29 ], [ %1, %36 ], [ %39, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #8
  ret %struct.USet* %41
}

declare i16* @ures_getStringByKey_69(%struct.UResourceBundle*, i8*, i32*, i32*) local_unnamed_addr #4

declare i32 @uset_applyPattern_69(%struct.USet*, i16*, i32, i32, i32*) local_unnamed_addr #4

declare %struct.USet* @uset_openPatternOptions_69(i16*, i32, i32, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ulocdata_getDelimiter_69(%struct.ULocaleData* nocapture readonly, i32, i16*, i32, i32* nocapture) local_unnamed_addr #0 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #8
  store i32 0, i32* %6, align 4
  %9 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #8
  store i32 0, i32* %7, align 4
  %10 = load i32, i32* %4, align 4
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %12, label %51

12:                                               ; preds = %5
  %13 = getelementptr inbounds %struct.ULocaleData, %struct.ULocaleData* %0, i64 0, i32 1
  %14 = load %struct.UResourceBundle*, %struct.UResourceBundle** %13, align 8
  %15 = call %struct.UResourceBundle* @ures_getByKey_69(%struct.UResourceBundle* %14, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), %struct.UResourceBundle* null, i32* nonnull %7) #8
  %16 = load i32, i32* %7, align 4
  switch i32 %16, label %24 [
    i32 -127, label %17
    i32 0, label %22
  ]

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.ULocaleData, %struct.ULocaleData* %0, i64 0, i32 0
  %19 = load i8, i8* %18, align 8
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %17
  store i32 2, i32* %7, align 4
  br label %24

22:                                               ; preds = %12
  %23 = load i32, i32* %4, align 4
  br label %26

24:                                               ; preds = %12, %17, %21
  %25 = phi i32 [ 2, %21 ], [ -127, %17 ], [ %16, %12 ]
  store i32 %25, i32* %4, align 4
  br label %26

26:                                               ; preds = %22, %24
  %27 = phi i32 [ %23, %22 ], [ %25, %24 ]
  %28 = icmp slt i32 %27, 1
  br i1 %28, label %30, label %29

29:                                               ; preds = %26
  call void @ures_close_69(%struct.UResourceBundle* %15) #8
  br label %51

30:                                               ; preds = %26
  %31 = zext i32 %1 to i64
  %32 = getelementptr inbounds [4 x i8*], [4 x i8*]* @_ZZ24ulocdata_getDelimiter_69E13delimiterKeys, i64 0, i64 %31
  %33 = load i8*, i8** %32, align 8
  %34 = call i16* @ures_getStringByKeyWithFallback_69(%struct.UResourceBundle* %15, i8* %33, i32* nonnull %6, i32* nonnull %7) #8
  call void @ures_close_69(%struct.UResourceBundle* %15) #8
  %35 = load i32, i32* %7, align 4
  switch i32 %35, label %43 [
    i32 -127, label %36
    i32 0, label %41
  ]

36:                                               ; preds = %30
  %37 = getelementptr inbounds %struct.ULocaleData, %struct.ULocaleData* %0, i64 0, i32 0
  %38 = load i8, i8* %37, align 8
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %36
  store i32 2, i32* %7, align 4
  br label %43

41:                                               ; preds = %30
  %42 = load i32, i32* %4, align 4
  br label %45

43:                                               ; preds = %30, %36, %40
  %44 = phi i32 [ 2, %40 ], [ -127, %36 ], [ %35, %30 ]
  store i32 %44, i32* %4, align 4
  br label %45

45:                                               ; preds = %41, %43
  %46 = phi i32 [ %42, %41 ], [ %44, %43 ]
  %47 = icmp slt i32 %46, 1
  br i1 %47, label %48, label %51

48:                                               ; preds = %45
  %49 = call i16* @u_strncpy_69(i16* %2, i16* %34, i32 %3) #8
  %50 = load i32, i32* %6, align 4
  br label %51

51:                                               ; preds = %45, %5, %48, %29
  %52 = phi i32 [ 0, %29 ], [ %50, %48 ], [ 0, %5 ], [ 0, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #8
  ret i32 %52
}

declare %struct.UResourceBundle* @ures_getByKey_69(%struct.UResourceBundle*, i8*, %struct.UResourceBundle*, i32*) local_unnamed_addr #4

declare i16* @ures_getStringByKeyWithFallback_69(%struct.UResourceBundle*, i8*, i32*, i32*) local_unnamed_addr #4

declare i16* @u_strncpy_69(i16*, i16*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ulocdata_getMeasurementSystem_69(i8*, i32*) local_unnamed_addr #0 {
  %3 = icmp eq i32* %1, null
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = load i32, i32* %1, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %10

7:                                                ; preds = %4
  %8 = tail call fastcc %struct.UResourceBundle* @_ZL30measurementTypeBundleForLocalePKcS0_P10UErrorCode(i8* %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i32* nonnull %1)
  %9 = tail call i32 @ures_getInt_69(%struct.UResourceBundle* %8, i32* nonnull %1) #8
  tail call void @ures_close_69(%struct.UResourceBundle* %8) #8
  br label %10

10:                                               ; preds = %2, %4, %7
  %11 = phi i32 [ %9, %7 ], [ 3, %4 ], [ 3, %2 ]
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.UResourceBundle* @_ZL30measurementTypeBundleForLocalePKcS0_P10UErrorCode(i8*, i8*, i32*) unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #8
  store i32 -1431655766, i32* %4, align 4
  %6 = call i32 @ulocimp_getRegionForSupplementalData_69(i8* %0, i8 signext 1, i8* nonnull %5, i32 4, i32* %2) #8
  %7 = call %struct.UResourceBundle* @ures_openDirect_69(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i32* %2) #8
  %8 = call %struct.UResourceBundle* @ures_getByKey_69(%struct.UResourceBundle* %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.17, i64 0, i64 0), %struct.UResourceBundle* %7, i32* %2) #8
  %9 = icmp eq %struct.UResourceBundle* %7, null
  br i1 %9, label %30, label %10

10:                                               ; preds = %3
  %11 = call %struct.UResourceBundle* @ures_getByKey_69(%struct.UResourceBundle* nonnull %7, i8* nonnull %5, %struct.UResourceBundle* null, i32* %2) #8
  %12 = load i32, i32* %2, align 4
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = call %struct.UResourceBundle* @ures_getByKey_69(%struct.UResourceBundle* %11, i8* %1, %struct.UResourceBundle* null, i32* %2) #8
  %16 = load i32, i32* %2, align 4
  br label %17

17:                                               ; preds = %10, %14
  %18 = phi i32 [ %12, %10 ], [ %16, %14 ]
  %19 = phi %struct.UResourceBundle* [ null, %10 ], [ %15, %14 ]
  %20 = icmp eq i32 %18, 2
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  store i32 0, i32* %2, align 4
  %22 = icmp eq %struct.UResourceBundle* %11, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %21
  call void @ures_close_69(%struct.UResourceBundle* nonnull %11) #8
  br label %24

24:                                               ; preds = %21, %23
  %25 = call %struct.UResourceBundle* @ures_getByKey_69(%struct.UResourceBundle* nonnull %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), %struct.UResourceBundle* null, i32* %2) #8
  %26 = call %struct.UResourceBundle* @ures_getByKey_69(%struct.UResourceBundle* %25, i8* %1, %struct.UResourceBundle* null, i32* %2) #8
  br label %27

27:                                               ; preds = %24, %17
  %28 = phi %struct.UResourceBundle* [ %26, %24 ], [ %19, %17 ]
  %29 = phi %struct.UResourceBundle* [ %25, %24 ], [ %11, %17 ]
  call void @ures_close_69(%struct.UResourceBundle* %29) #8
  br label %30

30:                                               ; preds = %3, %27
  %31 = phi %struct.UResourceBundle* [ %28, %27 ], [ null, %3 ]
  call void @ures_close_69(%struct.UResourceBundle* %7) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #8
  ret %struct.UResourceBundle* %31
}

declare i32 @ures_getInt_69(%struct.UResourceBundle*, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @ulocdata_getPaperSize_69(i8*, i32* nocapture, i32* nocapture, i32*) local_unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8
  store i32 0, i32* %5, align 4
  %7 = icmp eq i32* %3, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = load i32, i32* %3, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %25

11:                                               ; preds = %8
  %12 = tail call fastcc %struct.UResourceBundle* @_ZL30measurementTypeBundleForLocalePKcS0_P10UErrorCode(i8* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i32* nonnull %3)
  %13 = call i32* @ures_getIntVector_69(%struct.UResourceBundle* %12, i32* nonnull %5, i32* nonnull %3) #8
  %14 = load i32, i32* %3, align 4
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %24, label %16

16:                                               ; preds = %11
  %17 = load i32, i32* %5, align 4
  %18 = icmp slt i32 %17, 2
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  store i32 5, i32* %3, align 4
  br label %24

20:                                               ; preds = %16
  %21 = load i32, i32* %13, align 4
  store i32 %21, i32* %1, align 4
  %22 = getelementptr inbounds i32, i32* %13, i64 1
  %23 = load i32, i32* %22, align 4
  store i32 %23, i32* %2, align 4
  br label %24

24:                                               ; preds = %11, %19, %20
  call void @ures_close_69(%struct.UResourceBundle* %12) #8
  br label %25

25:                                               ; preds = %4, %8, %24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8
  ret void
}

declare i32* @ures_getIntVector_69(%struct.UResourceBundle*, i32*, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @ulocdata_getCLDRVersion_69(i8*, i32*) local_unnamed_addr #0 {
  %3 = tail call %struct.UResourceBundle* @ures_openDirect_69(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i32* %1) #8
  tail call void @ures_getVersionByKey_69(%struct.UResourceBundle* %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13, i64 0, i64 0), i8* %0, i32* %1) #8
  tail call void @ures_close_69(%struct.UResourceBundle* %3) #8
  ret void
}

declare %struct.UResourceBundle* @ures_openDirect_69(i8*, i8*, i32*) local_unnamed_addr #4

declare void @ures_getVersionByKey_69(%struct.UResourceBundle*, i8*, i8*, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ulocdata_getLocaleDisplayPattern_69(%struct.ULocaleData* nocapture readonly, i16*, i32, i32* nocapture) local_unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #8
  store i32 0, i32* %5, align 4
  %8 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #8
  store i32 0, i32* %6, align 4
  %9 = load i32, i32* %3, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %47

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.ULocaleData, %struct.ULocaleData* %0, i64 0, i32 2
  %13 = load %struct.UResourceBundle*, %struct.UResourceBundle** %12, align 8
  %14 = call %struct.UResourceBundle* @ures_getByKey_69(%struct.UResourceBundle* %13, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i64 0, i64 0), %struct.UResourceBundle* null, i32* nonnull %6) #8
  %15 = load i32, i32* %6, align 4
  switch i32 %15, label %23 [
    i32 -127, label %16
    i32 0, label %21
  ]

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.ULocaleData, %struct.ULocaleData* %0, i64 0, i32 0
  %18 = load i8, i8* %17, align 8
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  store i32 2, i32* %6, align 4
  br label %23

21:                                               ; preds = %11
  %22 = load i32, i32* %3, align 4
  br label %25

23:                                               ; preds = %11, %16, %20
  %24 = phi i32 [ 2, %20 ], [ -127, %16 ], [ %15, %11 ]
  store i32 %24, i32* %3, align 4
  br label %25

25:                                               ; preds = %21, %23
  %26 = phi i32 [ %22, %21 ], [ %24, %23 ]
  %27 = icmp slt i32 %26, 1
  br i1 %27, label %29, label %28

28:                                               ; preds = %25
  call void @ures_close_69(%struct.UResourceBundle* %14) #8
  br label %47

29:                                               ; preds = %25
  %30 = call i16* @ures_getStringByKey_69(%struct.UResourceBundle* %14, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0), i32* nonnull %5, i32* nonnull %6) #8
  call void @ures_close_69(%struct.UResourceBundle* %14) #8
  %31 = load i32, i32* %6, align 4
  switch i32 %31, label %39 [
    i32 -127, label %32
    i32 0, label %37
  ]

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.ULocaleData, %struct.ULocaleData* %0, i64 0, i32 0
  %34 = load i8, i8* %33, align 8
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  store i32 2, i32* %6, align 4
  br label %39

37:                                               ; preds = %29
  %38 = load i32, i32* %3, align 4
  br label %41

39:                                               ; preds = %29, %32, %36
  %40 = phi i32 [ 2, %36 ], [ -127, %32 ], [ %31, %29 ]
  store i32 %40, i32* %3, align 4
  br label %41

41:                                               ; preds = %37, %39
  %42 = phi i32 [ %38, %37 ], [ %40, %39 ]
  %43 = icmp slt i32 %42, 1
  br i1 %43, label %44, label %47

44:                                               ; preds = %41
  %45 = call i16* @u_strncpy_69(i16* %1, i16* %30, i32 %2) #8
  %46 = load i32, i32* %5, align 4
  br label %47

47:                                               ; preds = %41, %4, %44, %28
  %48 = phi i32 [ 0, %28 ], [ %46, %44 ], [ 0, %4 ], [ 0, %41 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #8
  ret i32 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ulocdata_getLocaleSeparator_69(%struct.ULocaleData* nocapture readonly, i16*, i32, i32* nocapture) local_unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #8
  store i32 0, i32* %5, align 4
  %8 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #8
  store i32 0, i32* %6, align 4
  %9 = load i32, i32* %3, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %69

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.ULocaleData, %struct.ULocaleData* %0, i64 0, i32 2
  %13 = load %struct.UResourceBundle*, %struct.UResourceBundle** %12, align 8
  %14 = call %struct.UResourceBundle* @ures_getByKey_69(%struct.UResourceBundle* %13, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i64 0, i64 0), %struct.UResourceBundle* null, i32* nonnull %6) #8
  %15 = load i32, i32* %6, align 4
  switch i32 %15, label %23 [
    i32 -127, label %16
    i32 0, label %21
  ]

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.ULocaleData, %struct.ULocaleData* %0, i64 0, i32 0
  %18 = load i8, i8* %17, align 8
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  store i32 2, i32* %6, align 4
  br label %23

21:                                               ; preds = %11
  %22 = load i32, i32* %3, align 4
  br label %25

23:                                               ; preds = %11, %16, %20
  %24 = phi i32 [ 2, %20 ], [ -127, %16 ], [ %15, %11 ]
  store i32 %24, i32* %3, align 4
  br label %25

25:                                               ; preds = %21, %23
  %26 = phi i32 [ %22, %21 ], [ %24, %23 ]
  %27 = icmp slt i32 %26, 1
  br i1 %27, label %29, label %28

28:                                               ; preds = %25
  call void @ures_close_69(%struct.UResourceBundle* %14) #8
  br label %69

29:                                               ; preds = %25
  %30 = call i16* @ures_getStringByKey_69(%struct.UResourceBundle* %14, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i64 0, i64 0), i32* nonnull %5, i32* nonnull %6) #8
  call void @ures_close_69(%struct.UResourceBundle* %14) #8
  %31 = load i32, i32* %6, align 4
  switch i32 %31, label %39 [
    i32 -127, label %32
    i32 0, label %37
  ]

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.ULocaleData, %struct.ULocaleData* %0, i64 0, i32 0
  %34 = load i8, i8* %33, align 8
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  store i32 2, i32* %6, align 4
  br label %39

37:                                               ; preds = %29
  %38 = load i32, i32* %3, align 4
  br label %41

39:                                               ; preds = %29, %32, %36
  %40 = phi i32 [ 2, %36 ], [ -127, %32 ], [ %31, %29 ]
  store i32 %40, i32* %3, align 4
  br label %41

41:                                               ; preds = %37, %39
  %42 = phi i32 [ %38, %37 ], [ %40, %39 ]
  %43 = icmp slt i32 %42, 1
  br i1 %43, label %44, label %69

44:                                               ; preds = %41
  %45 = call i16* @u_strstr_69(i16* %30, i16* getelementptr inbounds ([4 x i16], [4 x i16]* @_ZZ30ulocdata_getLocaleSeparator_69E4sub0, i64 0, i64 0)) #8
  %46 = call i16* @u_strstr_69(i16* %30, i16* getelementptr inbounds ([4 x i16], [4 x i16]* @_ZZ30ulocdata_getLocaleSeparator_69E4sub1, i64 0, i64 0)) #8
  %47 = icmp eq i16* %45, null
  %48 = icmp eq i16* %46, null
  %49 = or i1 %47, %48
  %50 = icmp ugt i16* %45, %46
  %51 = or i1 %50, %49
  br i1 %51, label %65, label %52

52:                                               ; preds = %44
  %53 = getelementptr inbounds i16, i16* %45, i64 3
  %54 = ptrtoint i16* %46 to i64
  %55 = ptrtoint i16* %53 to i64
  %56 = sub i64 %54, %55
  %57 = lshr exact i64 %56, 1
  %58 = trunc i64 %57 to i32
  store i32 %58, i32* %5, align 4
  %59 = icmp slt i32 %58, %2
  br i1 %59, label %60, label %65

60:                                               ; preds = %52
  %61 = call i16* @u_strncpy_69(i16* %1, i16* %53, i32 %58) #8
  %62 = load i32, i32* %5, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i16, i16* %1, i64 %63
  store i16 0, i16* %64, align 2
  br label %69

65:                                               ; preds = %44, %52
  %66 = phi i16* [ %53, %52 ], [ %30, %44 ]
  %67 = call i16* @u_strncpy_69(i16* %1, i16* %66, i32 %2) #8
  %68 = load i32, i32* %5, align 4
  br label %69

69:                                               ; preds = %41, %4, %65, %60, %28
  %70 = phi i32 [ 0, %28 ], [ %62, %60 ], [ %68, %65 ], [ 0, %4 ], [ 0, %41 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #8
  ret i32 %70
}

declare i16* @u_strstr_69(i16*, i16*) local_unnamed_addr #4

declare i32 @ulocimp_getRegionForSupplementalData_69(i8*, i8 signext, i8*, i32, i32*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind allocsize(0) }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
