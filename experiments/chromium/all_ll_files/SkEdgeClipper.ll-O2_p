; ModuleID = '../../third_party/skia/src/core/SkEdgeClipper.cpp'
source_filename = "../../third_party/skia/src/core/SkEdgeClipper.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkEdgeClipper = type <{ %struct.SkPoint*, i32*, i8, [3 x i8], [54 x %struct.SkPoint], [18 x i32], [4 x i8] }>
%struct.SkPoint = type { float, float }
%struct.SkRect = type { float, float, float, float }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.1 = type { i8*, i32, i32 }
%class.SkTDArray.2 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.8 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.8 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.9", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%struct.SkConic = type { [3 x %struct.SkPoint], float }
%class.SkAutoConicToQuads = type <{ %class.SkAutoSTMalloc, i32, [4 x i8] }>
%class.SkAutoSTMalloc = type { %struct.SkPoint*, %union.anon }
%union.anon = type { [34 x i32] }
%class.SkPathEdgeIter = type <{ i8*, i8*, %struct.SkPoint*, %struct.SkPoint*, float*, [2 x %struct.SkPoint], i8, i8, [6 x i8] }>

@__const._ZN13SkEdgeClipper8ClipPathERK6SkPathRK6SkRectbPFvPS_bPvES7_.clipper = private unnamed_addr constant %class.SkEdgeClipper <{ %struct.SkPoint* inttoptr (i64 -6148914691236517206 to %struct.SkPoint*), i32* inttoptr (i64 -6148914691236517206 to i32*), i8 -86, [3 x i8] c"\AA\AA\AA", [54 x %struct.SkPoint] [%struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }], [18 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766], [4 x i8] c"\AA\AA\AA\AA" }>, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13SkEdgeClipper8clipLineE7SkPointS0_RK6SkRect(%class.SkEdgeClipper*, <2 x float>, <2 x float>, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = alloca [4 x %struct.SkPoint], align 16
  %6 = alloca [2 x %struct.SkPoint], align 16
  %7 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 4, i64 0
  %8 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 0
  store %struct.SkPoint* %7, %struct.SkPoint** %8, align 8
  %9 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 5, i64 0
  %10 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 1
  store i32* %9, i32** %10, align 8
  %11 = bitcast [4 x %struct.SkPoint]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #7
  %12 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 0
  %13 = bitcast [2 x %struct.SkPoint]* %6 to i8*
  %14 = bitcast [4 x %struct.SkPoint]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -1, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #7
  %15 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %6, i64 0, i64 0
  %16 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %6, i64 0, i64 1
  %17 = bitcast [2 x %struct.SkPoint]* %6 to <2 x float>*
  store <2 x float> %1, <2 x float>* %17, align 16
  %18 = bitcast %struct.SkPoint* %16 to <2 x float>*
  store <2 x float> %2, <2 x float>* %18, align 8
  %19 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 2
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp ne i8 %20, 0
  %22 = call i32 @_ZN13SkLineClipper8ClipLineEPK7SkPointRK6SkRectPS0_b(%struct.SkPoint* nonnull %15, %struct.SkRect* dereferenceable(16) %3, %struct.SkPoint* nonnull %12, i1 zeroext %21) #7
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %24, label %50

24:                                               ; preds = %4
  %25 = bitcast %class.SkEdgeClipper* %0 to i64**
  %26 = zext i32 %22 to i64
  %27 = and i64 %26, 1
  %28 = icmp eq i32 %22, 1
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub nsw i64 %26, %27
  br label %54

31:                                               ; preds = %54, %24
  %32 = phi i64 [ 0, %24 ], [ %75, %54 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %50, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 %32
  %36 = bitcast %struct.SkPoint* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = add nuw nsw i64 %32, 1
  %39 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 %38
  %40 = bitcast %struct.SkPoint* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = load i32*, i32** %10, align 8
  %43 = getelementptr inbounds i32, i32* %42, i64 1
  store i32* %43, i32** %10, align 8
  store i32 1, i32* %42, align 4
  %44 = load i64*, i64** %25, align 8
  store i64 %37, i64* %44, align 4
  %45 = load %struct.SkPoint*, %struct.SkPoint** %8, align 8
  %46 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %45, i64 1
  %47 = bitcast %struct.SkPoint* %46 to i64*
  store i64 %41, i64* %47, align 4
  %48 = load %struct.SkPoint*, %struct.SkPoint** %8, align 8
  %49 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %48, i64 2
  store %struct.SkPoint* %49, %struct.SkPoint** %8, align 8
  br label %50

50:                                               ; preds = %34, %31, %4
  %51 = load i32*, i32** %10, align 8
  store i32 6, i32* %51, align 4
  store %struct.SkPoint* %7, %struct.SkPoint** %8, align 8
  store i32* %9, i32** %10, align 8
  %52 = load i32, i32* %9, align 4
  %53 = icmp ne i32 %52, 6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #7
  ret i1 %53

54:                                               ; preds = %54, %29
  %55 = phi i64 [ 0, %29 ], [ %75, %54 ]
  %56 = phi i64 [ %30, %29 ], [ %87, %54 ]
  %57 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 %55
  %58 = bitcast %struct.SkPoint* %57 to i64*
  %59 = load i64, i64* %58, align 16
  %60 = or i64 %55, 1
  %61 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 %60
  %62 = bitcast %struct.SkPoint* %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = load i32*, i32** %10, align 8
  %65 = getelementptr inbounds i32, i32* %64, i64 1
  store i32* %65, i32** %10, align 8
  store i32 1, i32* %64, align 4
  %66 = load i64*, i64** %25, align 8
  store i64 %59, i64* %66, align 4
  %67 = load %struct.SkPoint*, %struct.SkPoint** %8, align 8
  %68 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %67, i64 1
  %69 = bitcast %struct.SkPoint* %68 to i64*
  store i64 %63, i64* %69, align 4
  %70 = load %struct.SkPoint*, %struct.SkPoint** %8, align 8
  %71 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %70, i64 2
  store %struct.SkPoint* %71, %struct.SkPoint** %8, align 8
  %72 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 %60
  %73 = bitcast %struct.SkPoint* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = add nuw nsw i64 %55, 2
  %76 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 %75
  %77 = bitcast %struct.SkPoint* %76 to i64*
  %78 = load i64, i64* %77, align 16
  %79 = load i32*, i32** %10, align 8
  %80 = getelementptr inbounds i32, i32* %79, i64 1
  store i32* %80, i32** %10, align 8
  store i32 1, i32* %79, align 4
  %81 = load i64*, i64** %25, align 8
  store i64 %74, i64* %81, align 4
  %82 = load %struct.SkPoint*, %struct.SkPoint** %8, align 8
  %83 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %82, i64 1
  %84 = bitcast %struct.SkPoint* %83 to i64*
  store i64 %78, i64* %84, align 4
  %85 = load %struct.SkPoint*, %struct.SkPoint** %8, align 8
  %86 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %85, i64 2
  store %struct.SkPoint* %86, %struct.SkPoint** %8, align 8
  %87 = add i64 %56, -2
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %31, label %54
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @_ZN13SkLineClipper8ClipLineEPK7SkPointRK6SkRectPS0_b(%struct.SkPoint*, %struct.SkRect* dereferenceable(16), %struct.SkPoint*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN13SkEdgeClipper10appendLineE7SkPointS0_(%class.SkEdgeClipper* nocapture, <2 x float>, <2 x float>) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 1
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds i32, i32* %5, i64 1
  store i32* %6, i32** %4, align 8
  store i32 1, i32* %5, align 4
  %7 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 0
  %8 = bitcast %class.SkEdgeClipper* %0 to <2 x float>**
  %9 = load <2 x float>*, <2 x float>** %8, align 8
  store <2 x float> %1, <2 x float>* %9, align 4
  %10 = load %struct.SkPoint*, %struct.SkPoint** %7, align 8
  %11 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %10, i64 1
  %12 = bitcast %struct.SkPoint* %11 to <2 x float>*
  store <2 x float> %2, <2 x float>* %12, align 4
  %13 = load %struct.SkPoint*, %struct.SkPoint** %7, align 8
  %14 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %13, i64 2
  store %struct.SkPoint* %14, %struct.SkPoint** %7, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkEdgeClipper12clipMonoQuadEPK7SkPointRK6SkRect(%class.SkEdgeClipper*, %struct.SkPoint* nocapture readonly, %struct.SkRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #4 align 2 {
  %4 = alloca [5 x %struct.SkPoint], align 16
  %5 = alloca [2 x float], align 4
  %6 = alloca [3 x %struct.SkPoint], align 16
  %7 = alloca [5 x %struct.SkPoint], align 16
  %8 = bitcast [3 x %struct.SkPoint]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #7
  %9 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %6, i64 0, i64 0
  %10 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %6, i64 0, i64 0, i32 0
  %11 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %6, i64 0, i64 0, i32 1
  %12 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %6, i64 0, i64 1
  %13 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %12, i64 0, i32 0
  %14 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %6, i64 0, i64 1, i32 1
  %15 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %6, i64 0, i64 2
  %16 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %15, i64 0, i32 0
  %17 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %6, i64 0, i64 2, i32 1
  %18 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %19 = bitcast [3 x %struct.SkPoint]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 -1, i64 24, i1 false)
  %20 = load float, float* %18, align 4
  %21 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2, i32 1
  %22 = load float, float* %21, align 4
  %23 = fcmp ogt float %20, %22
  br i1 %23, label %24, label %36

24:                                               ; preds = %3
  %25 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1
  %26 = bitcast %struct.SkPoint* %25 to <2 x i64>*
  %27 = load <2 x i64>, <2 x i64>* %26, align 4
  %28 = shufflevector <2 x i64> %27, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %29 = bitcast [3 x %struct.SkPoint]* %6 to <2 x i64>*
  store <2 x i64> %28, <2 x i64>* %29, align 16
  %30 = bitcast %struct.SkPoint* %1 to i64*
  %31 = bitcast %struct.SkPoint* %15 to i64*
  %32 = load i64, i64* %30, align 4
  store i64 %32, i64* %31, align 16
  %33 = lshr i64 %32, 32
  %34 = trunc i64 %33 to i32
  %35 = bitcast i32 %34 to float
  br label %40

36:                                               ; preds = %3
  %37 = bitcast %struct.SkPoint* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %8, i8* align 4 %37, i64 24, i1 false) #7
  %38 = load float, float* %17, align 4
  %39 = bitcast float %38 to i32
  br label %40

40:                                               ; preds = %24, %36
  %41 = phi i32 [ %39, %36 ], [ %34, %24 ]
  %42 = phi float [ %38, %36 ], [ %35, %24 ]
  %43 = phi i1 [ false, %36 ], [ true, %24 ]
  %44 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 1
  %45 = load float, float* %44, align 4
  %46 = fcmp ugt float %42, %45
  br i1 %46, label %47, label %450

47:                                               ; preds = %40
  %48 = load float, float* %11, align 4
  %49 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 3
  %50 = load float, float* %49, align 4
  %51 = fcmp ult float %48, %50
  br i1 %51, label %52, label %450

52:                                               ; preds = %47
  %53 = bitcast [5 x %struct.SkPoint]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %53) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %53, i8 -1, i64 40, i1 false) #7
  %54 = fcmp olt float %48, %45
  br i1 %54, label %55, label %101

55:                                               ; preds = %52
  %56 = load float, float* %14, align 4
  %57 = fsub float %48, %56
  %58 = fsub float %57, %56
  %59 = fadd float %42, %58
  %60 = fsub float %56, %48
  %61 = fmul float %60, 2.000000e+00
  %62 = fsub float %48, %45
  %63 = bitcast [2 x float]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #7
  %64 = getelementptr inbounds [2 x float], [2 x float]* %5, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %64, align 4
  %65 = getelementptr inbounds [2 x float], [2 x float]* %5, i64 0, i64 1
  store float 0xFFFFFFFFE0000000, float* %65, align 4
  %66 = call i32 @_Z19SkFindUnitQuadRootsfffPf(float %59, float %61, float %62, float* nonnull %64) #7
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %72

68:                                               ; preds = %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #7
  %69 = load float, float* %11, align 4
  %70 = load float, float* %44, align 4
  %71 = fcmp olt float %69, %70
  br i1 %71, label %96, label %97

72:                                               ; preds = %55
  %73 = load float, float* %64, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #7
  %74 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %4, i64 0, i64 0
  call void @_Z12SkChopQuadAtPK7SkPointPS_f(%struct.SkPoint* nonnull %9, %struct.SkPoint* nonnull %74, float %73) #7
  %75 = bitcast float* %44 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %4, i64 0, i64 2
  %78 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %4, i64 0, i64 2, i32 1
  %79 = bitcast float* %78 to i32*
  store i32 %76, i32* %79, align 4
  %80 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %4, i64 0, i64 3, i32 1
  %81 = bitcast i32 %76 to float
  %82 = load float, float* %80, align 4
  %83 = fcmp olt float %82, %81
  br i1 %83, label %84, label %86

84:                                               ; preds = %72
  %85 = bitcast float* %80 to i32*
  store i32 %76, i32* %85, align 4
  br label %86

86:                                               ; preds = %84, %72
  %87 = bitcast %struct.SkPoint* %77 to <2 x i64>*
  %88 = load <2 x i64>, <2 x i64>* %87, align 16
  %89 = bitcast [3 x %struct.SkPoint]* %6 to <2 x i64>*
  store <2 x i64> %88, <2 x i64>* %89, align 16
  %90 = extractelement <2 x i64> %88, i32 0
  %91 = lshr i64 %90, 32
  %92 = trunc i64 %91 to i32
  %93 = bitcast i32 %92 to float
  %94 = load float, float* %17, align 4
  %95 = bitcast float %94 to i32
  br label %101

96:                                               ; preds = %68
  store float %70, float* %11, align 4
  br label %97

97:                                               ; preds = %96, %68
  %98 = phi float [ %69, %68 ], [ %70, %96 ]
  %99 = load float, float* %14, align 4
  %100 = fcmp olt float %99, %70
  br i1 %100, label %152, label %153

101:                                              ; preds = %157, %153, %86, %52
  %102 = phi i32 [ %95, %86 ], [ %41, %52 ], [ %158, %157 ], [ %156, %153 ]
  %103 = phi float [ %94, %86 ], [ %42, %52 ], [ %70, %157 ], [ %154, %153 ]
  %104 = phi float [ %93, %86 ], [ %48, %52 ], [ %98, %157 ], [ %98, %153 ]
  %105 = load float, float* %49, align 4
  %106 = fcmp ogt float %103, %105
  br i1 %106, label %107, label %159

107:                                              ; preds = %101
  %108 = load float, float* %14, align 4
  %109 = fsub float %104, %108
  %110 = fsub float %109, %108
  %111 = fadd float %103, %110
  %112 = fsub float %108, %104
  %113 = fmul float %112, 2.000000e+00
  %114 = fsub float %104, %105
  %115 = bitcast [2 x float]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #7
  %116 = getelementptr inbounds [2 x float], [2 x float]* %5, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %116, align 4
  %117 = getelementptr inbounds [2 x float], [2 x float]* %5, i64 0, i64 1
  store float 0xFFFFFFFFE0000000, float* %117, align 4
  %118 = call i32 @_Z19SkFindUnitQuadRootsfffPf(float %111, float %113, float %114, float* nonnull %116) #7
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %124

120:                                              ; preds = %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #7
  %121 = load float, float* %11, align 4
  %122 = load float, float* %49, align 4
  %123 = fcmp ogt float %121, %122
  br i1 %123, label %141, label %142

124:                                              ; preds = %107
  %125 = load float, float* %116, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #7
  %126 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %4, i64 0, i64 0
  call void @_Z12SkChopQuadAtPK7SkPointPS_f(%struct.SkPoint* nonnull %9, %struct.SkPoint* nonnull %126, float %125) #7
  %127 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %4, i64 0, i64 1
  %128 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %4, i64 0, i64 1, i32 1
  %129 = load float, float* %49, align 4
  %130 = load float, float* %128, align 4
  %131 = fcmp ogt float %130, %129
  br i1 %131, label %132, label %133

132:                                              ; preds = %124
  store float %129, float* %128, align 4
  br label %133

133:                                              ; preds = %132, %124
  %134 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %4, i64 0, i64 2, i32 1
  store float %129, float* %134, align 4
  %135 = bitcast %struct.SkPoint* %127 to <2 x i64>*
  %136 = load <2 x i64>, <2 x i64>* %135, align 8
  %137 = bitcast %struct.SkPoint* %12 to <2 x i64>*
  store <2 x i64> %136, <2 x i64>* %137, align 8
  %138 = extractelement <2 x i64> %136, i32 1
  %139 = lshr i64 %138, 32
  %140 = trunc i64 %139 to i32
  br label %159

141:                                              ; preds = %120
  store float %122, float* %11, align 4
  br label %142

142:                                              ; preds = %141, %120
  %143 = load float, float* %14, align 4
  %144 = fcmp ogt float %143, %122
  br i1 %144, label %145, label %146

145:                                              ; preds = %142
  store float %122, float* %14, align 4
  br label %146

146:                                              ; preds = %145, %142
  %147 = load float, float* %17, align 4
  %148 = fcmp ogt float %147, %122
  %149 = bitcast float %147 to i32
  br i1 %148, label %150, label %159

150:                                              ; preds = %146
  store float %122, float* %17, align 4
  %151 = bitcast float %122 to i32
  br label %159

152:                                              ; preds = %97
  store float %70, float* %14, align 4
  br label %153

153:                                              ; preds = %152, %97
  %154 = load float, float* %17, align 4
  %155 = fcmp olt float %154, %70
  %156 = bitcast float %154 to i32
  br i1 %155, label %157, label %101

157:                                              ; preds = %153
  store float %70, float* %17, align 4
  %158 = bitcast float %70 to i32
  br label %101

159:                                              ; preds = %101, %133, %146, %150
  %160 = phi i32 [ %102, %101 ], [ %140, %133 ], [ %149, %146 ], [ %151, %150 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %53) #7
  %161 = load float, float* %10, align 16
  %162 = load float, float* %16, align 16
  %163 = fcmp ogt float %161, %162
  br i1 %163, label %164, label %175

164:                                              ; preds = %159
  %165 = bitcast float* %11 to i32*
  %166 = load i32, i32* %165, align 4
  %167 = bitcast %struct.SkPoint* %15 to i64*
  %168 = bitcast [3 x %struct.SkPoint]* %6 to i64*
  %169 = load i64, i64* %167, align 16
  store i64 %169, i64* %168, align 16
  %170 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %15, i64 0, i32 0
  store float %161, float* %170, align 16
  %171 = bitcast float* %17 to i32*
  store i32 %166, i32* %171, align 4
  %172 = xor i1 %43, true
  %173 = trunc i64 %169 to i32
  %174 = bitcast i32 %173 to float
  br label %175

175:                                              ; preds = %164, %159
  %176 = phi float [ %161, %164 ], [ %162, %159 ]
  %177 = phi float [ %174, %164 ], [ %161, %159 ]
  %178 = phi i32 [ %166, %164 ], [ %160, %159 ]
  %179 = phi i1 [ %172, %164 ], [ %43, %159 ]
  %180 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 0
  %181 = load float, float* %180, align 4
  %182 = fcmp ugt float %176, %181
  br i1 %182, label %202, label %183

183:                                              ; preds = %175
  %184 = bitcast float* %11 to i32*
  %185 = load i32, i32* %184, align 4
  %186 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 1
  %187 = load i32*, i32** %186, align 8
  %188 = getelementptr inbounds i32, i32* %187, i64 1
  store i32* %188, i32** %186, align 8
  store i32 1, i32* %187, align 4
  %189 = select i1 %179, i32 %178, i32 %185
  %190 = select i1 %179, i32 %185, i32 %178
  %191 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 0
  %192 = load %struct.SkPoint*, %struct.SkPoint** %191, align 8
  %193 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %192, i64 0, i32 0
  store float %181, float* %193, align 4
  %194 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %192, i64 0, i32 1
  %195 = bitcast float* %194 to i32*
  store i32 %189, i32* %195, align 4
  %196 = load %struct.SkPoint*, %struct.SkPoint** %191, align 8
  %197 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %196, i64 1, i32 0
  store float %181, float* %197, align 4
  %198 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %196, i64 1, i32 1
  %199 = bitcast float* %198 to i32*
  store i32 %190, i32* %199, align 4
  %200 = load %struct.SkPoint*, %struct.SkPoint** %191, align 8
  %201 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %200, i64 2
  store %struct.SkPoint* %201, %struct.SkPoint** %191, align 8
  br label %450

202:                                              ; preds = %175
  %203 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 2
  %204 = load float, float* %203, align 4
  %205 = fcmp ult float %177, %204
  br i1 %205, label %229, label %206

206:                                              ; preds = %202
  %207 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 2
  %208 = load i8, i8* %207, align 8, !range !2
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %210, label %450

210:                                              ; preds = %206
  %211 = bitcast float* %11 to i32*
  %212 = load i32, i32* %211, align 4
  %213 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 1
  %214 = load i32*, i32** %213, align 8
  %215 = getelementptr inbounds i32, i32* %214, i64 1
  store i32* %215, i32** %213, align 8
  store i32 1, i32* %214, align 4
  %216 = select i1 %179, i32 %178, i32 %212
  %217 = select i1 %179, i32 %212, i32 %178
  %218 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 0
  %219 = load %struct.SkPoint*, %struct.SkPoint** %218, align 8
  %220 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %219, i64 0, i32 0
  store float %204, float* %220, align 4
  %221 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %219, i64 0, i32 1
  %222 = bitcast float* %221 to i32*
  store i32 %216, i32* %222, align 4
  %223 = load %struct.SkPoint*, %struct.SkPoint** %218, align 8
  %224 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %223, i64 1, i32 0
  store float %204, float* %224, align 4
  %225 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %223, i64 1, i32 1
  %226 = bitcast float* %225 to i32*
  store i32 %217, i32* %226, align 4
  %227 = load %struct.SkPoint*, %struct.SkPoint** %218, align 8
  %228 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %227, i64 2
  store %struct.SkPoint* %228, %struct.SkPoint** %218, align 8
  br label %450

229:                                              ; preds = %202
  %230 = bitcast [5 x %struct.SkPoint]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %230) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %230, i8 -1, i64 40, i1 false)
  %231 = fcmp olt float %177, %181
  br i1 %231, label %232, label %315

232:                                              ; preds = %229
  %233 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %6, i64 0, i64 1, i32 0
  %234 = load float, float* %233, align 8
  %235 = fsub float %177, %234
  %236 = fsub float %235, %234
  %237 = fadd float %176, %236
  %238 = fsub float %234, %177
  %239 = fmul float %238, 2.000000e+00
  %240 = fsub float %177, %181
  %241 = bitcast [2 x float]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %241) #7
  %242 = getelementptr inbounds [2 x float], [2 x float]* %5, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %242, align 4
  %243 = getelementptr inbounds [2 x float], [2 x float]* %5, i64 0, i64 1
  store float 0xFFFFFFFFE0000000, float* %243, align 4
  %244 = call i32 @_Z19SkFindUnitQuadRootsfffPf(float %237, float %239, float %240, float* nonnull %242) #7
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %293, label %246

246:                                              ; preds = %232
  %247 = load float, float* %242, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %241) #7
  %248 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %7, i64 0, i64 0
  call void @_Z12SkChopQuadAtPK7SkPointPS_f(%struct.SkPoint* nonnull %9, %struct.SkPoint* nonnull %248, float %247) #7
  %249 = bitcast %struct.SkRect* %2 to i32*
  %250 = load i32, i32* %249, align 4
  %251 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %7, i64 0, i64 0, i32 1
  %252 = bitcast float* %251 to i32*
  %253 = load i32, i32* %252, align 4
  %254 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %7, i64 0, i64 2
  %255 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %7, i64 0, i64 2, i32 1
  %256 = bitcast float* %255 to i32*
  %257 = load i32, i32* %256, align 4
  %258 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 1
  %259 = load i32*, i32** %258, align 8
  %260 = getelementptr inbounds i32, i32* %259, i64 1
  store i32* %260, i32** %258, align 8
  store i32 1, i32* %259, align 4
  %261 = select i1 %179, i32 %257, i32 %253
  %262 = select i1 %179, i32 %253, i32 %257
  %263 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 0
  %264 = load %struct.SkPoint*, %struct.SkPoint** %263, align 8
  %265 = bitcast %struct.SkPoint* %264 to i32*
  store i32 %250, i32* %265, align 4
  %266 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %264, i64 0, i32 1
  %267 = bitcast float* %266 to i32*
  store i32 %261, i32* %267, align 4
  %268 = load %struct.SkPoint*, %struct.SkPoint** %263, align 8
  %269 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %268, i64 1, i32 0
  %270 = bitcast float* %269 to i32*
  store i32 %250, i32* %270, align 4
  %271 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %268, i64 1, i32 1
  %272 = bitcast float* %271 to i32*
  store i32 %262, i32* %272, align 4
  %273 = load %struct.SkPoint*, %struct.SkPoint** %263, align 8
  %274 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %273, i64 2
  store %struct.SkPoint* %274, %struct.SkPoint** %263, align 8
  %275 = load i32, i32* %249, align 4
  %276 = bitcast %struct.SkPoint* %254 to i32*
  store i32 %275, i32* %276, align 16
  %277 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %7, i64 0, i64 3
  %278 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %277, i64 0, i32 0
  %279 = bitcast i32 %275 to float
  %280 = load float, float* %278, align 8
  %281 = fcmp olt float %280, %279
  br i1 %281, label %282, label %284

282:                                              ; preds = %246
  %283 = bitcast %struct.SkPoint* %277 to i32*
  store i32 %275, i32* %283, align 8
  br label %284

284:                                              ; preds = %246, %282
  %285 = bitcast %struct.SkPoint* %254 to <2 x i64>*
  %286 = load <2 x i64>, <2 x i64>* %285, align 16
  %287 = bitcast [3 x %struct.SkPoint]* %6 to <2 x i64>*
  store <2 x i64> %286, <2 x i64>* %287, align 16
  %288 = load float, float* %16, align 16
  %289 = load float, float* %203, align 4
  %290 = extractelement <2 x i64> %286, i32 0
  %291 = trunc i64 %290 to i32
  %292 = bitcast i32 %291 to float
  br label %315

293:                                              ; preds = %232
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %241) #7
  %294 = bitcast %struct.SkRect* %2 to i32*
  %295 = load i32, i32* %294, align 4
  %296 = bitcast float* %11 to i32*
  %297 = load i32, i32* %296, align 4
  %298 = bitcast float* %17 to i32*
  %299 = load i32, i32* %298, align 4
  %300 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 1
  %301 = load i32*, i32** %300, align 8
  %302 = getelementptr inbounds i32, i32* %301, i64 1
  store i32* %302, i32** %300, align 8
  store i32 1, i32* %301, align 4
  %303 = select i1 %179, i32 %299, i32 %297
  %304 = select i1 %179, i32 %297, i32 %299
  %305 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 0
  %306 = load %struct.SkPoint*, %struct.SkPoint** %305, align 8
  %307 = bitcast %struct.SkPoint* %306 to i32*
  store i32 %295, i32* %307, align 4
  %308 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %306, i64 0, i32 1
  %309 = bitcast float* %308 to i32*
  store i32 %303, i32* %309, align 4
  %310 = load %struct.SkPoint*, %struct.SkPoint** %305, align 8
  %311 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %310, i64 1, i32 0
  %312 = bitcast float* %311 to i32*
  store i32 %295, i32* %312, align 4
  %313 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %310, i64 1, i32 1
  %314 = bitcast float* %313 to i32*
  store i32 %304, i32* %314, align 4
  br label %445

315:                                              ; preds = %284, %229
  %316 = phi float [ %288, %284 ], [ %176, %229 ]
  %317 = phi float [ %292, %284 ], [ %177, %229 ]
  %318 = phi float [ %289, %284 ], [ %204, %229 ]
  %319 = fcmp ogt float %316, %318
  br i1 %319, label %320, label %422

320:                                              ; preds = %315
  %321 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %6, i64 0, i64 1, i32 0
  %322 = load float, float* %321, align 8
  %323 = fsub float %317, %322
  %324 = fsub float %323, %322
  %325 = fadd float %316, %324
  %326 = fsub float %322, %317
  %327 = fmul float %326, 2.000000e+00
  %328 = fsub float %317, %318
  %329 = bitcast [2 x float]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %329) #7
  %330 = getelementptr inbounds [2 x float], [2 x float]* %5, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %330, align 4
  %331 = getelementptr inbounds [2 x float], [2 x float]* %5, i64 0, i64 1
  store float 0xFFFFFFFFE0000000, float* %331, align 4
  %332 = call i32 @_Z19SkFindUnitQuadRootsfffPf(float %325, float %327, float %328, float* nonnull %330) #7
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %392, label %334

334:                                              ; preds = %320
  %335 = load float, float* %330, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %329) #7
  %336 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %7, i64 0, i64 0
  call void @_Z12SkChopQuadAtPK7SkPointPS_f(%struct.SkPoint* nonnull %9, %struct.SkPoint* nonnull %336, float %335) #7
  %337 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %7, i64 0, i64 1, i32 0
  %338 = load float, float* %203, align 4
  %339 = load float, float* %337, align 8
  %340 = fcmp ogt float %339, %338
  br i1 %340, label %341, label %342

341:                                              ; preds = %334
  store float %338, float* %337, align 8
  br label %342

342:                                              ; preds = %334, %341
  %343 = bitcast float* %203 to i32*
  %344 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %7, i64 0, i64 2
  %345 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %344, i64 0, i32 0
  store float %338, float* %345, align 16
  %346 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 1
  %347 = load i32*, i32** %346, align 8
  %348 = getelementptr inbounds i32, i32* %347, i64 1
  store i32* %348, i32** %346, align 8
  store i32 2, i32* %347, align 4
  %349 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 0
  %350 = bitcast %class.SkEdgeClipper* %0 to i64**
  %351 = load i64*, i64** %350, align 8
  %352 = bitcast [5 x %struct.SkPoint]* %7 to i64*
  %353 = bitcast %struct.SkPoint* %344 to i64*
  %354 = bitcast %struct.SkPoint* %344 to i64*
  %355 = bitcast [5 x %struct.SkPoint]* %7 to i64*
  %356 = select i1 %179, i64* %354, i64* %352
  %357 = select i1 %179, i64* %355, i64* %353
  %358 = load i64, i64* %356, align 16
  store i64 %358, i64* %351, align 4
  %359 = load %struct.SkPoint*, %struct.SkPoint** %349, align 8
  %360 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %359, i64 2
  %361 = bitcast %struct.SkPoint* %360 to i64*
  %362 = load i64, i64* %357, align 16
  store i64 %362, i64* %361, align 4
  %363 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %7, i64 0, i64 1
  %364 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 0
  %365 = load %struct.SkPoint*, %struct.SkPoint** %364, align 8
  %366 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %365, i64 1
  %367 = bitcast %struct.SkPoint* %363 to i64*
  %368 = bitcast %struct.SkPoint* %366 to i64*
  %369 = load i64, i64* %367, align 8
  store i64 %369, i64* %368, align 4
  %370 = load %struct.SkPoint*, %struct.SkPoint** %364, align 8
  %371 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %370, i64 3
  store %struct.SkPoint* %371, %struct.SkPoint** %364, align 8
  %372 = load i32, i32* %343, align 4
  %373 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %7, i64 0, i64 2, i32 1
  %374 = bitcast float* %373 to i32*
  %375 = load i32, i32* %374, align 4
  %376 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %7, i64 0, i64 4, i32 1
  %377 = bitcast float* %376 to i32*
  %378 = load i32, i32* %377, align 4
  %379 = load i32*, i32** %346, align 8
  %380 = getelementptr inbounds i32, i32* %379, i64 1
  store i32* %380, i32** %346, align 8
  store i32 1, i32* %379, align 4
  %381 = select i1 %179, i32 %378, i32 %375
  %382 = select i1 %179, i32 %375, i32 %378
  %383 = load %struct.SkPoint*, %struct.SkPoint** %364, align 8
  %384 = bitcast %struct.SkPoint* %383 to i32*
  store i32 %372, i32* %384, align 4
  %385 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %383, i64 0, i32 1
  %386 = bitcast float* %385 to i32*
  store i32 %381, i32* %386, align 4
  %387 = load %struct.SkPoint*, %struct.SkPoint** %364, align 8
  %388 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %387, i64 1, i32 0
  %389 = bitcast float* %388 to i32*
  store i32 %372, i32* %389, align 4
  %390 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %387, i64 1, i32 1
  %391 = bitcast float* %390 to i32*
  store i32 %382, i32* %391, align 4
  br label %445

392:                                              ; preds = %320
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %329) #7
  %393 = load float, float* %203, align 4
  %394 = load float, float* %13, align 8
  %395 = fcmp olt float %393, %394
  %396 = select i1 %395, float %393, float %394
  store float %396, float* %13, align 8
  %397 = load float, float* %16, align 16
  %398 = fcmp olt float %393, %397
  %399 = select i1 %398, float %393, float %397
  store float %399, float* %16, align 16
  %400 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 1
  %401 = load i32*, i32** %400, align 8
  %402 = getelementptr inbounds i32, i32* %401, i64 1
  store i32* %402, i32** %400, align 8
  store i32 2, i32* %401, align 4
  %403 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 0
  %404 = bitcast %class.SkEdgeClipper* %0 to i64**
  %405 = load i64*, i64** %404, align 8
  %406 = bitcast [3 x %struct.SkPoint]* %6 to i64*
  %407 = bitcast %struct.SkPoint* %15 to i64*
  %408 = bitcast %struct.SkPoint* %15 to i64*
  %409 = bitcast [3 x %struct.SkPoint]* %6 to i64*
  %410 = select i1 %179, i64* %408, i64* %406
  %411 = select i1 %179, i64* %409, i64* %407
  %412 = load i64, i64* %410, align 16
  store i64 %412, i64* %405, align 4
  %413 = load %struct.SkPoint*, %struct.SkPoint** %403, align 8
  %414 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %413, i64 2
  %415 = bitcast %struct.SkPoint* %414 to i64*
  %416 = load i64, i64* %411, align 16
  store i64 %416, i64* %415, align 4
  %417 = load %struct.SkPoint*, %struct.SkPoint** %403, align 8
  %418 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %417, i64 1
  %419 = bitcast %struct.SkPoint* %12 to i64*
  %420 = bitcast %struct.SkPoint* %418 to i64*
  %421 = load i64, i64* %419, align 8
  store i64 %421, i64* %420, align 4
  br label %445

422:                                              ; preds = %315
  %423 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 1
  %424 = load i32*, i32** %423, align 8
  %425 = getelementptr inbounds i32, i32* %424, i64 1
  store i32* %425, i32** %423, align 8
  store i32 2, i32* %424, align 4
  %426 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 0
  %427 = bitcast %class.SkEdgeClipper* %0 to i64**
  %428 = load i64*, i64** %427, align 8
  %429 = bitcast [3 x %struct.SkPoint]* %6 to i64*
  %430 = bitcast %struct.SkPoint* %15 to i64*
  %431 = bitcast %struct.SkPoint* %15 to i64*
  %432 = bitcast [3 x %struct.SkPoint]* %6 to i64*
  %433 = select i1 %179, i64* %431, i64* %429
  %434 = select i1 %179, i64* %432, i64* %430
  %435 = load i64, i64* %433, align 16
  store i64 %435, i64* %428, align 4
  %436 = load %struct.SkPoint*, %struct.SkPoint** %426, align 8
  %437 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %436, i64 2
  %438 = bitcast %struct.SkPoint* %437 to i64*
  %439 = load i64, i64* %434, align 16
  store i64 %439, i64* %438, align 4
  %440 = load %struct.SkPoint*, %struct.SkPoint** %426, align 8
  %441 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %440, i64 1
  %442 = bitcast %struct.SkPoint* %12 to i64*
  %443 = bitcast %struct.SkPoint* %441 to i64*
  %444 = load i64, i64* %442, align 8
  store i64 %444, i64* %443, align 4
  br label %445

445:                                              ; preds = %422, %392, %342, %293
  %446 = phi %struct.SkPoint** [ %426, %422 ], [ %403, %392 ], [ %364, %342 ], [ %305, %293 ]
  %447 = phi i64 [ 3, %422 ], [ 3, %392 ], [ 2, %342 ], [ 2, %293 ]
  %448 = load %struct.SkPoint*, %struct.SkPoint** %446, align 8
  %449 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %448, i64 %447
  store %struct.SkPoint* %449, %struct.SkPoint** %446, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %230) #7
  br label %450

450:                                              ; preds = %206, %210, %40, %47, %445, %183
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN13SkEdgeClipper11appendVLineEfffb(%class.SkEdgeClipper* nocapture, float, float, float, i1 zeroext) local_unnamed_addr #5 align 2 {
  %6 = bitcast float %2 to i32
  %7 = bitcast float %3 to i32
  %8 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 1
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds i32, i32* %9, i64 1
  store i32* %10, i32** %8, align 8
  store i32 1, i32* %9, align 4
  %11 = select i1 %4, i32 %7, i32 %6
  %12 = select i1 %4, i32 %6, i32 %7
  %13 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 0
  %14 = load %struct.SkPoint*, %struct.SkPoint** %13, align 8
  %15 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %14, i64 0, i32 0
  store float %1, float* %15, align 4
  %16 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %14, i64 0, i32 1
  %17 = bitcast float* %16 to i32*
  store i32 %11, i32* %17, align 4
  %18 = load %struct.SkPoint*, %struct.SkPoint** %13, align 8
  %19 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %18, i64 1, i32 0
  store float %1, float* %19, align 4
  %20 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %18, i64 1, i32 1
  %21 = bitcast float* %20 to i32*
  store i32 %12, i32* %21, align 4
  %22 = load %struct.SkPoint*, %struct.SkPoint** %13, align 8
  %23 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %22, i64 2
  store %struct.SkPoint* %23, %struct.SkPoint** %13, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_Z12SkChopQuadAtPK7SkPointPS_f(%struct.SkPoint*, %struct.SkPoint*, float) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN13SkEdgeClipper10appendQuadEPK7SkPointb(%class.SkEdgeClipper* nocapture, %struct.SkPoint* nocapture readonly, i1 zeroext) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 1
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds i32, i32* %5, i64 1
  store i32* %6, i32** %4, align 8
  store i32 2, i32* %5, align 4
  br i1 %2, label %7, label %13

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2
  %9 = bitcast %class.SkEdgeClipper* %0 to i64**
  %10 = load i64*, i64** %9, align 8
  %11 = bitcast %struct.SkPoint* %8 to i64*
  %12 = load i64, i64* %11, align 4
  store i64 %12, i64* %10, align 4
  br label %19

13:                                               ; preds = %3
  %14 = bitcast %class.SkEdgeClipper* %0 to i64**
  %15 = load i64*, i64** %14, align 8
  %16 = bitcast %struct.SkPoint* %1 to i64*
  %17 = load i64, i64* %16, align 4
  store i64 %17, i64* %15, align 4
  %18 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2
  br label %19

19:                                               ; preds = %13, %7
  %20 = phi %struct.SkPoint* [ %18, %13 ], [ %1, %7 ]
  %21 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 0
  %22 = load %struct.SkPoint*, %struct.SkPoint** %21, align 8
  %23 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %22, i64 2
  %24 = bitcast %struct.SkPoint* %20 to i64*
  %25 = bitcast %struct.SkPoint* %23 to i64*
  %26 = load i64, i64* %24, align 4
  store i64 %26, i64* %25, align 4
  %27 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1
  %28 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 0
  %29 = load %struct.SkPoint*, %struct.SkPoint** %28, align 8
  %30 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %29, i64 1
  %31 = bitcast %struct.SkPoint* %27 to i64*
  %32 = bitcast %struct.SkPoint* %30 to i64*
  %33 = load i64, i64* %31, align 4
  store i64 %33, i64* %32, align 4
  %34 = load %struct.SkPoint*, %struct.SkPoint** %28, align 8
  %35 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %34, i64 3
  store %struct.SkPoint* %35, %struct.SkPoint** %28, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13SkEdgeClipper8clipQuadEPK7SkPointRK6SkRect(%class.SkEdgeClipper*, %struct.SkPoint*, %struct.SkRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #4 align 2 {
  %4 = alloca %struct.SkRect, align 4
  %5 = alloca [5 x %struct.SkPoint], align 16
  %6 = alloca [5 x %struct.SkPoint], align 16
  %7 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 4, i64 0
  %8 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 0
  store %struct.SkPoint* %7, %struct.SkPoint** %8, align 8
  %9 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 5, i64 0
  %10 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 1
  store i32* %9, i32** %10, align 8
  %11 = bitcast %struct.SkRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #7
  %12 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 1
  %13 = bitcast %struct.SkRect* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -1, i64 16, i1 false)
  %14 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* nonnull %4, %struct.SkPoint* %1, i32 3) #7
  %15 = load float, float* %12, align 4
  %16 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 3
  %17 = load float, float* %16, align 4
  %18 = fcmp ult float %15, %17
  br i1 %18, label %19, label %54

19:                                               ; preds = %3
  %20 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 3
  %21 = load float, float* %20, align 4
  %22 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 1
  %23 = load float, float* %22, align 4
  %24 = fcmp ugt float %21, %23
  br i1 %24, label %25, label %54

25:                                               ; preds = %19
  %26 = bitcast [5 x %struct.SkPoint]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %26) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %26, i8 -1, i64 40, i1 false)
  %27 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %5, i64 0, i64 0
  %28 = call i32 @_Z20SkChopQuadAtYExtremaPK7SkPointPS_(%struct.SkPoint* %1, %struct.SkPoint* nonnull %27) #7
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = bitcast [5 x %struct.SkPoint]* %6 to i8*
  %32 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %6, i64 0, i64 0
  %33 = add nuw i32 %28, 1
  %34 = zext i32 %33 to i64
  br label %36

35:                                               ; preds = %45, %25
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %26) #7
  br label %54

36:                                               ; preds = %45, %30
  %37 = phi i64 [ %46, %45 ], [ 0, %30 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %31) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %31, i8 -1, i64 40, i1 false)
  %38 = shl nuw nsw i64 %37, 1
  %39 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %5, i64 0, i64 %38
  %40 = call i32 @_Z20SkChopQuadAtXExtremaPK7SkPointPS_(%struct.SkPoint* %39, %struct.SkPoint* nonnull %32) #7
  %41 = icmp slt i32 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %36
  %43 = add nuw i32 %40, 1
  %44 = zext i32 %43 to i64
  br label %48

45:                                               ; preds = %48, %36
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %31) #7
  %46 = add nuw nsw i64 %37, 1
  %47 = icmp eq i64 %46, %34
  br i1 %47, label %35, label %36

48:                                               ; preds = %48, %42
  %49 = phi i64 [ 0, %42 ], [ %52, %48 ]
  %50 = shl nuw nsw i64 %49, 1
  %51 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %6, i64 0, i64 %50
  call void @_ZN13SkEdgeClipper12clipMonoQuadEPK7SkPointRK6SkRect(%class.SkEdgeClipper* %0, %struct.SkPoint* %51, %struct.SkRect* dereferenceable(16) %2)
  %52 = add nuw nsw i64 %49, 1
  %53 = icmp eq i64 %52, %44
  br i1 %53, label %45, label %48

54:                                               ; preds = %19, %3, %35
  %55 = load i32*, i32** %10, align 8
  store i32 6, i32* %55, align 4
  store %struct.SkPoint* %7, %struct.SkPoint** %8, align 8
  store i32* %9, i32** %10, align 8
  %56 = load i32, i32* %9, align 4
  %57 = icmp ne i32 %56, 6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #7
  ret i1 %57
}

declare i32 @_Z20SkChopQuadAtYExtremaPK7SkPointPS_(%struct.SkPoint*, %struct.SkPoint*) local_unnamed_addr #2

declare i32 @_Z20SkChopQuadAtXExtremaPK7SkPointPS_(%struct.SkPoint*, %struct.SkPoint*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkEdgeClipper13clipMonoCubicEPK7SkPointRK6SkRect(%class.SkEdgeClipper* nocapture, %struct.SkPoint* nocapture readonly, %struct.SkRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #4 align 2 {
  %4 = alloca [7 x %struct.SkPoint], align 16
  %5 = alloca [4 x %struct.SkPoint], align 16
  %6 = alloca [7 x %struct.SkPoint], align 16
  %7 = alloca [4 x %struct.SkPoint], align 16
  %8 = alloca [7 x %struct.SkPoint], align 16
  %9 = alloca [7 x %struct.SkPoint], align 16
  %10 = bitcast [4 x %struct.SkPoint]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #7
  %11 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 0
  %12 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 0, i32 0
  %13 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 0, i32 1
  %14 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 1
  %15 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 1, i32 1
  %16 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 2
  %17 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 2, i32 1
  %18 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 3
  %19 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %18, i64 0, i32 0
  %20 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 3, i32 1
  %21 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %22 = bitcast [4 x %struct.SkPoint]* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %22, i8 -1, i64 32, i1 false)
  %23 = load float, float* %21, align 4
  %24 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 3, i32 1
  %25 = load float, float* %24, align 4
  %26 = fcmp ogt float %23, %25
  br i1 %26, label %27, label %43

27:                                               ; preds = %3
  %28 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2
  %29 = bitcast %struct.SkPoint* %28 to <2 x i64>*
  %30 = load <2 x i64>, <2 x i64>* %29, align 4
  %31 = shufflevector <2 x i64> %30, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %32 = bitcast [4 x %struct.SkPoint]* %7 to <2 x i64>*
  store <2 x i64> %31, <2 x i64>* %32, align 16
  %33 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1
  %34 = bitcast %struct.SkPoint* %33 to i64*
  %35 = bitcast %struct.SkPoint* %16 to i64*
  %36 = load i64, i64* %34, align 4
  store i64 %36, i64* %35, align 16
  %37 = bitcast %struct.SkPoint* %1 to i64*
  %38 = bitcast %struct.SkPoint* %18 to i64*
  %39 = load i64, i64* %37, align 4
  store i64 %39, i64* %38, align 8
  %40 = lshr i64 %39, 32
  %41 = trunc i64 %40 to i32
  %42 = bitcast i32 %41 to float
  br label %47

43:                                               ; preds = %3
  %44 = bitcast %struct.SkPoint* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %10, i8* align 4 %44, i64 32, i1 false) #7
  %45 = load float, float* %20, align 4
  %46 = bitcast float %45 to i32
  br label %47

47:                                               ; preds = %27, %43
  %48 = phi i32 [ %46, %43 ], [ %41, %27 ]
  %49 = phi float [ %45, %43 ], [ %42, %27 ]
  %50 = phi i1 [ false, %43 ], [ true, %27 ]
  %51 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 1
  %52 = load float, float* %51, align 4
  %53 = fcmp ugt float %49, %52
  br i1 %53, label %54, label %598

54:                                               ; preds = %47
  %55 = load float, float* %13, align 4
  %56 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 3
  %57 = load float, float* %56, align 4
  %58 = fcmp ult float %55, %57
  br i1 %58, label %59, label %598

59:                                               ; preds = %54
  %60 = fcmp olt float %55, %52
  br i1 %60, label %61, label %196

61:                                               ; preds = %59
  %62 = bitcast [7 x %struct.SkPoint]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %62) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %62, i8 -1, i64 56, i1 false) #7
  %63 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %4, i64 0, i64 0
  %64 = call zeroext i1 @_Z18SkChopMonoCubicAtYP7SkPointfS0_(%struct.SkPoint* nonnull %11, float %52, %struct.SkPoint* nonnull %63) #7
  br i1 %64, label %108, label %65

65:                                               ; preds = %61
  %66 = load float, float* %13, align 4
  %67 = getelementptr inbounds float, float* %13, i64 6
  %68 = load float, float* %67, align 4
  %69 = getelementptr inbounds float, float* %13, i64 2
  %70 = load float, float* %69, align 4
  %71 = getelementptr inbounds float, float* %13, i64 4
  %72 = load float, float* %71, align 4
  %73 = fsub float %70, %72
  %74 = fmul float %73, 3.000000e+00
  %75 = fadd float %68, %74
  %76 = fsub float %75, %66
  %77 = fsub float %72, %70
  %78 = fsub float %77, %70
  %79 = fadd float %66, %78
  %80 = fmul float %79, 3.000000e+00
  %81 = fsub float %70, %66
  %82 = fmul float %81, 3.000000e+00
  %83 = fsub float %52, %66
  br label %84

84:                                               ; preds = %104, %65
  %85 = phi float [ 5.000000e-01, %65 ], [ %102, %104 ]
  %86 = phi float [ 0.000000e+00, %65 ], [ %97, %104 ]
  %87 = phi float [ 2.500000e-01, %65 ], [ %105, %104 ]
  %88 = phi float [ 0x47EFFFFFE0000000, %65 ], [ %98, %104 ]
  %89 = fmul float %76, %85
  %90 = fadd float %80, %89
  %91 = fmul float %85, %90
  %92 = fadd float %82, %91
  %93 = fmul float %85, %92
  %94 = fsub float %93, %83
  %95 = call float @llvm.fabs.f32(float %94) #7
  %96 = fcmp ogt float %88, %95
  %97 = select i1 %96, float %85, float %86
  %98 = select i1 %96, float %95, float %88
  %99 = fcmp olt float %93, %83
  %100 = fsub float -0.000000e+00, %87
  %101 = select i1 %99, float %87, float %100
  %102 = fadd float %85, %101
  %103 = fcmp ogt float %98, 2.500000e-01
  br i1 %103, label %104, label %107

104:                                              ; preds = %84
  %105 = fmul float %87, 5.000000e-01
  %106 = fcmp une float %85, %102
  br i1 %106, label %84, label %107

107:                                              ; preds = %104, %84
  call void @_Z13SkChopCubicAtPK7SkPointPS_f(%struct.SkPoint* nonnull %11, %struct.SkPoint* nonnull %63, float %97) #7
  br label %108

108:                                              ; preds = %107, %61
  %109 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %4, i64 0, i64 3
  %110 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %4, i64 0, i64 3, i32 1
  %111 = load float, float* %110, align 4
  %112 = load float, float* %51, align 4
  %113 = fcmp olt float %111, %112
  %114 = bitcast float %112 to i32
  br i1 %113, label %115, label %176

115:                                              ; preds = %108
  %116 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %4, i64 0, i64 4, i32 1
  %117 = load float, float* %116, align 4
  %118 = fcmp olt float %117, %112
  br i1 %118, label %119, label %176

119:                                              ; preds = %115
  %120 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %4, i64 0, i64 5, i32 1
  %121 = load float, float* %120, align 4
  %122 = fcmp olt float %121, %112
  br i1 %122, label %123, label %176

123:                                              ; preds = %119
  %124 = bitcast [4 x %struct.SkPoint]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %124) #7
  %125 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 0
  %126 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 0, i32 1
  %127 = bitcast %struct.SkPoint* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %124, i8* align 8 %127, i64 32, i1 false) #7
  %128 = call zeroext i1 @_Z18SkChopMonoCubicAtYP7SkPointfS0_(%struct.SkPoint* nonnull %125, float %112, %struct.SkPoint* nonnull %63) #7
  br i1 %128, label %172, label %129

129:                                              ; preds = %123
  %130 = load float, float* %126, align 4
  %131 = getelementptr inbounds float, float* %126, i64 6
  %132 = load float, float* %131, align 4
  %133 = getelementptr inbounds float, float* %126, i64 2
  %134 = load float, float* %133, align 4
  %135 = getelementptr inbounds float, float* %126, i64 4
  %136 = load float, float* %135, align 4
  %137 = fsub float %134, %136
  %138 = fmul float %137, 3.000000e+00
  %139 = fadd float %132, %138
  %140 = fsub float %139, %130
  %141 = fsub float %136, %134
  %142 = fsub float %141, %134
  %143 = fadd float %130, %142
  %144 = fmul float %143, 3.000000e+00
  %145 = fsub float %134, %130
  %146 = fmul float %145, 3.000000e+00
  %147 = fsub float %112, %130
  br label %148

148:                                              ; preds = %168, %129
  %149 = phi float [ 5.000000e-01, %129 ], [ %166, %168 ]
  %150 = phi float [ 0.000000e+00, %129 ], [ %161, %168 ]
  %151 = phi float [ 2.500000e-01, %129 ], [ %169, %168 ]
  %152 = phi float [ 0x47EFFFFFE0000000, %129 ], [ %162, %168 ]
  %153 = fmul float %140, %149
  %154 = fadd float %144, %153
  %155 = fmul float %149, %154
  %156 = fadd float %146, %155
  %157 = fmul float %149, %156
  %158 = fsub float %157, %147
  %159 = call float @llvm.fabs.f32(float %158) #7
  %160 = fcmp ogt float %152, %159
  %161 = select i1 %160, float %149, float %150
  %162 = select i1 %160, float %159, float %152
  %163 = fcmp olt float %157, %147
  %164 = fsub float -0.000000e+00, %151
  %165 = select i1 %163, float %151, float %164
  %166 = fadd float %149, %165
  %167 = fcmp ogt float %162, 2.500000e-01
  br i1 %167, label %168, label %171

168:                                              ; preds = %148
  %169 = fmul float %151, 5.000000e-01
  %170 = fcmp une float %149, %166
  br i1 %170, label %148, label %171

171:                                              ; preds = %168, %148
  call void @_Z13SkChopCubicAtPK7SkPointPS_f(%struct.SkPoint* nonnull %125, %struct.SkPoint* nonnull %63, float %161) #7
  br label %172

172:                                              ; preds = %171, %123
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %124) #7
  %173 = bitcast float* %51 to i32*
  %174 = load i32, i32* %173, align 4
  %175 = bitcast i32 %174 to float
  br label %176

176:                                              ; preds = %172, %119, %115, %108
  %177 = phi float [ %175, %172 ], [ %112, %119 ], [ %112, %115 ], [ %112, %108 ]
  %178 = phi i32 [ %174, %172 ], [ %114, %119 ], [ %114, %115 ], [ %114, %108 ]
  store float %177, float* %110, align 4
  %179 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %4, i64 0, i64 4, i32 1
  %180 = bitcast i32 %178 to float
  %181 = load float, float* %179, align 4
  %182 = fcmp olt float %181, %180
  br i1 %182, label %183, label %185

183:                                              ; preds = %176
  %184 = bitcast float* %179 to i32*
  store i32 %178, i32* %184, align 4
  br label %185

185:                                              ; preds = %183, %176
  %186 = bitcast %struct.SkPoint* %109 to <2 x i64>*
  %187 = load <2 x i64>, <2 x i64>* %186, align 8
  %188 = bitcast [4 x %struct.SkPoint]* %7 to <2 x i64>*
  store <2 x i64> %187, <2 x i64>* %188, align 16
  %189 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %4, i64 0, i64 5
  %190 = bitcast %struct.SkPoint* %189 to i64*
  %191 = bitcast %struct.SkPoint* %16 to i64*
  %192 = load i64, i64* %190, align 8
  store i64 %192, i64* %191, align 16
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %62) #7
  %193 = load float, float* %20, align 4
  %194 = load float, float* %56, align 4
  %195 = bitcast float %193 to i32
  br label %196

196:                                              ; preds = %185, %59
  %197 = phi i32 [ %195, %185 ], [ %48, %59 ]
  %198 = phi float [ %194, %185 ], [ %57, %59 ]
  %199 = phi float [ %193, %185 ], [ %49, %59 ]
  %200 = fcmp ogt float %199, %198
  br i1 %200, label %203, label %201

201:                                              ; preds = %196
  %202 = load float, float* %19, align 8
  br label %274

203:                                              ; preds = %196
  %204 = bitcast [7 x %struct.SkPoint]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %204) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %204, i8 -1, i64 56, i1 false) #7
  %205 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %6, i64 0, i64 0
  %206 = call zeroext i1 @_Z18SkChopMonoCubicAtYP7SkPointfS0_(%struct.SkPoint* nonnull %11, float %198, %struct.SkPoint* nonnull %205) #7
  br i1 %206, label %250, label %207

207:                                              ; preds = %203
  %208 = load float, float* %13, align 4
  %209 = getelementptr inbounds float, float* %13, i64 6
  %210 = load float, float* %209, align 4
  %211 = getelementptr inbounds float, float* %13, i64 2
  %212 = load float, float* %211, align 4
  %213 = getelementptr inbounds float, float* %13, i64 4
  %214 = load float, float* %213, align 4
  %215 = fsub float %212, %214
  %216 = fmul float %215, 3.000000e+00
  %217 = fadd float %210, %216
  %218 = fsub float %217, %208
  %219 = fsub float %214, %212
  %220 = fsub float %219, %212
  %221 = fadd float %208, %220
  %222 = fmul float %221, 3.000000e+00
  %223 = fsub float %212, %208
  %224 = fmul float %223, 3.000000e+00
  %225 = fsub float %198, %208
  br label %226

226:                                              ; preds = %246, %207
  %227 = phi float [ 5.000000e-01, %207 ], [ %244, %246 ]
  %228 = phi float [ 0.000000e+00, %207 ], [ %239, %246 ]
  %229 = phi float [ 2.500000e-01, %207 ], [ %247, %246 ]
  %230 = phi float [ 0x47EFFFFFE0000000, %207 ], [ %240, %246 ]
  %231 = fmul float %218, %227
  %232 = fadd float %222, %231
  %233 = fmul float %227, %232
  %234 = fadd float %224, %233
  %235 = fmul float %227, %234
  %236 = fsub float %235, %225
  %237 = call float @llvm.fabs.f32(float %236) #7
  %238 = fcmp ogt float %230, %237
  %239 = select i1 %238, float %227, float %228
  %240 = select i1 %238, float %237, float %230
  %241 = fcmp olt float %235, %225
  %242 = fsub float -0.000000e+00, %229
  %243 = select i1 %241, float %229, float %242
  %244 = fadd float %227, %243
  %245 = fcmp ogt float %240, 2.500000e-01
  br i1 %245, label %246, label %249

246:                                              ; preds = %226
  %247 = fmul float %229, 5.000000e-01
  %248 = fcmp une float %227, %244
  br i1 %248, label %226, label %249

249:                                              ; preds = %246, %226
  call void @_Z13SkChopCubicAtPK7SkPointPS_f(%struct.SkPoint* nonnull %11, %struct.SkPoint* nonnull %205, float %239) #7
  br label %250

250:                                              ; preds = %249, %203
  %251 = bitcast float* %56 to i32*
  %252 = load i32, i32* %251, align 4
  %253 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %6, i64 0, i64 3
  %254 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %6, i64 0, i64 3, i32 1
  %255 = bitcast float* %254 to i32*
  store i32 %252, i32* %255, align 4
  %256 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %6, i64 0, i64 2, i32 1
  %257 = bitcast i32 %252 to float
  %258 = load float, float* %256, align 4
  %259 = fcmp ogt float %258, %257
  br i1 %259, label %260, label %262

260:                                              ; preds = %250
  %261 = bitcast float* %256 to i32*
  store i32 %252, i32* %261, align 4
  br label %262

262:                                              ; preds = %260, %250
  %263 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %6, i64 0, i64 1
  %264 = bitcast %struct.SkPoint* %263 to <2 x i64>*
  %265 = load <2 x i64>, <2 x i64>* %264, align 8
  %266 = bitcast %struct.SkPoint* %14 to <2 x i64>*
  store <2 x i64> %265, <2 x i64>* %266, align 8
  %267 = bitcast %struct.SkPoint* %253 to i64*
  %268 = bitcast %struct.SkPoint* %18 to i64*
  %269 = load i64, i64* %267, align 8
  store i64 %269, i64* %268, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %204) #7
  %270 = trunc i64 %269 to i32
  %271 = bitcast i32 %270 to float
  %272 = lshr i64 %269, 32
  %273 = trunc i64 %272 to i32
  br label %274

274:                                              ; preds = %201, %262
  %275 = phi float [ %202, %201 ], [ %271, %262 ]
  %276 = phi i32 [ %197, %201 ], [ %273, %262 ]
  %277 = load float, float* %12, align 16
  %278 = fcmp ogt float %277, %275
  br i1 %278, label %279, label %299

279:                                              ; preds = %274
  %280 = bitcast float* %13 to i32*
  %281 = load i32, i32* %280, align 4
  %282 = bitcast %struct.SkPoint* %18 to i64*
  %283 = bitcast [4 x %struct.SkPoint]* %7 to i64*
  %284 = load i64, i64* %282, align 8
  store i64 %284, i64* %283, align 16
  %285 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %18, i64 0, i32 0
  store float %277, float* %285, align 8
  %286 = bitcast float* %20 to i32*
  store i32 %281, i32* %286, align 4
  %287 = bitcast %struct.SkPoint* %14 to i32*
  %288 = load i32, i32* %287, align 8
  %289 = bitcast float* %15 to i32*
  %290 = load i32, i32* %289, align 4
  %291 = bitcast %struct.SkPoint* %16 to i64*
  %292 = bitcast %struct.SkPoint* %14 to i64*
  %293 = load i64, i64* %291, align 16
  store i64 %293, i64* %292, align 8
  %294 = bitcast %struct.SkPoint* %16 to i32*
  store i32 %288, i32* %294, align 16
  %295 = bitcast float* %17 to i32*
  store i32 %290, i32* %295, align 4
  %296 = xor i1 %50, true
  %297 = trunc i64 %284 to i32
  %298 = bitcast i32 %297 to float
  br label %299

299:                                              ; preds = %279, %274
  %300 = phi float [ %277, %279 ], [ %275, %274 ]
  %301 = phi i32 [ %281, %279 ], [ %276, %274 ]
  %302 = phi float [ %298, %279 ], [ %277, %274 ]
  %303 = phi i1 [ %296, %279 ], [ %50, %274 ]
  %304 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 0
  %305 = load float, float* %304, align 4
  %306 = fcmp ugt float %300, %305
  br i1 %306, label %326, label %307

307:                                              ; preds = %299
  %308 = bitcast float* %13 to i32*
  %309 = load i32, i32* %308, align 4
  %310 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 1
  %311 = load i32*, i32** %310, align 8
  %312 = getelementptr inbounds i32, i32* %311, i64 1
  store i32* %312, i32** %310, align 8
  store i32 1, i32* %311, align 4
  %313 = select i1 %303, i32 %301, i32 %309
  %314 = select i1 %303, i32 %309, i32 %301
  %315 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 0
  %316 = load %struct.SkPoint*, %struct.SkPoint** %315, align 8
  %317 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %316, i64 0, i32 0
  store float %305, float* %317, align 4
  %318 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %316, i64 0, i32 1
  %319 = bitcast float* %318 to i32*
  store i32 %313, i32* %319, align 4
  %320 = load %struct.SkPoint*, %struct.SkPoint** %315, align 8
  %321 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %320, i64 1, i32 0
  store float %305, float* %321, align 4
  %322 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %320, i64 1, i32 1
  %323 = bitcast float* %322 to i32*
  store i32 %314, i32* %323, align 4
  %324 = load %struct.SkPoint*, %struct.SkPoint** %315, align 8
  %325 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %324, i64 2
  store %struct.SkPoint* %325, %struct.SkPoint** %315, align 8
  br label %598

326:                                              ; preds = %299
  %327 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 2
  %328 = load float, float* %327, align 4
  %329 = fcmp ult float %302, %328
  br i1 %329, label %353, label %330

330:                                              ; preds = %326
  %331 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 2
  %332 = load i8, i8* %331, align 8, !range !2
  %333 = icmp eq i8 %332, 0
  br i1 %333, label %334, label %598

334:                                              ; preds = %330
  %335 = bitcast float* %13 to i32*
  %336 = load i32, i32* %335, align 4
  %337 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 1
  %338 = load i32*, i32** %337, align 8
  %339 = getelementptr inbounds i32, i32* %338, i64 1
  store i32* %339, i32** %337, align 8
  store i32 1, i32* %338, align 4
  %340 = select i1 %303, i32 %301, i32 %336
  %341 = select i1 %303, i32 %336, i32 %301
  %342 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 0
  %343 = load %struct.SkPoint*, %struct.SkPoint** %342, align 8
  %344 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %343, i64 0, i32 0
  store float %328, float* %344, align 4
  %345 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %343, i64 0, i32 1
  %346 = bitcast float* %345 to i32*
  store i32 %340, i32* %346, align 4
  %347 = load %struct.SkPoint*, %struct.SkPoint** %342, align 8
  %348 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %347, i64 1, i32 0
  store float %328, float* %348, align 4
  %349 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %347, i64 1, i32 1
  %350 = bitcast float* %349 to i32*
  store i32 %341, i32* %350, align 4
  %351 = load %struct.SkPoint*, %struct.SkPoint** %342, align 8
  %352 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %351, i64 2
  store %struct.SkPoint* %352, %struct.SkPoint** %342, align 8
  br label %598

353:                                              ; preds = %326
  %354 = fcmp olt float %302, %305
  br i1 %354, label %355, label %448

355:                                              ; preds = %353
  %356 = bitcast [7 x %struct.SkPoint]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %356) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %356, i8 -1, i64 56, i1 false)
  %357 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %8, i64 0, i64 0
  %358 = call zeroext i1 @_Z18SkChopMonoCubicAtXP7SkPointfS0_(%struct.SkPoint* nonnull %11, float %305, %struct.SkPoint* nonnull %357) #7
  br i1 %358, label %402, label %359

359:                                              ; preds = %355
  %360 = load float, float* %12, align 16
  %361 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 3, i32 0
  %362 = load float, float* %361, align 8
  %363 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 1, i32 0
  %364 = load float, float* %363, align 8
  %365 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 2, i32 0
  %366 = load float, float* %365, align 16
  %367 = fsub float %364, %366
  %368 = fmul float %367, 3.000000e+00
  %369 = fadd float %362, %368
  %370 = fsub float %369, %360
  %371 = fsub float %366, %364
  %372 = fsub float %371, %364
  %373 = fadd float %360, %372
  %374 = fmul float %373, 3.000000e+00
  %375 = fsub float %364, %360
  %376 = fmul float %375, 3.000000e+00
  %377 = fsub float %305, %360
  br label %378

378:                                              ; preds = %398, %359
  %379 = phi float [ 5.000000e-01, %359 ], [ %396, %398 ]
  %380 = phi float [ 0.000000e+00, %359 ], [ %391, %398 ]
  %381 = phi float [ 2.500000e-01, %359 ], [ %399, %398 ]
  %382 = phi float [ 0x47EFFFFFE0000000, %359 ], [ %392, %398 ]
  %383 = fmul float %370, %379
  %384 = fadd float %374, %383
  %385 = fmul float %379, %384
  %386 = fadd float %376, %385
  %387 = fmul float %379, %386
  %388 = fsub float %387, %377
  %389 = call float @llvm.fabs.f32(float %388) #7
  %390 = fcmp ogt float %382, %389
  %391 = select i1 %390, float %379, float %380
  %392 = select i1 %390, float %389, float %382
  %393 = fcmp olt float %387, %377
  %394 = fsub float -0.000000e+00, %381
  %395 = select i1 %393, float %381, float %394
  %396 = fadd float %379, %395
  %397 = fcmp ogt float %392, 2.500000e-01
  br i1 %397, label %398, label %401

398:                                              ; preds = %378
  %399 = fmul float %381, 5.000000e-01
  %400 = fcmp une float %379, %396
  br i1 %400, label %378, label %401

401:                                              ; preds = %398, %378
  call void @_Z13SkChopCubicAtPK7SkPointPS_f(%struct.SkPoint* nonnull %11, %struct.SkPoint* nonnull %357, float %391) #7
  br label %402

402:                                              ; preds = %355, %401
  %403 = bitcast %struct.SkRect* %2 to i32*
  %404 = load i32, i32* %403, align 4
  %405 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %8, i64 0, i64 0, i32 1
  %406 = bitcast float* %405 to i32*
  %407 = load i32, i32* %406, align 4
  %408 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %8, i64 0, i64 3
  %409 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %8, i64 0, i64 3, i32 1
  %410 = bitcast float* %409 to i32*
  %411 = load i32, i32* %410, align 4
  %412 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 1
  %413 = load i32*, i32** %412, align 8
  %414 = getelementptr inbounds i32, i32* %413, i64 1
  store i32* %414, i32** %412, align 8
  store i32 1, i32* %413, align 4
  %415 = select i1 %303, i32 %411, i32 %407
  %416 = select i1 %303, i32 %407, i32 %411
  %417 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 0
  %418 = load %struct.SkPoint*, %struct.SkPoint** %417, align 8
  %419 = bitcast %struct.SkPoint* %418 to i32*
  store i32 %404, i32* %419, align 4
  %420 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %418, i64 0, i32 1
  %421 = bitcast float* %420 to i32*
  store i32 %415, i32* %421, align 4
  %422 = load %struct.SkPoint*, %struct.SkPoint** %417, align 8
  %423 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %422, i64 1, i32 0
  %424 = bitcast float* %423 to i32*
  store i32 %404, i32* %424, align 4
  %425 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %422, i64 1, i32 1
  %426 = bitcast float* %425 to i32*
  store i32 %416, i32* %426, align 4
  %427 = load %struct.SkPoint*, %struct.SkPoint** %417, align 8
  %428 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %427, i64 2
  store %struct.SkPoint* %428, %struct.SkPoint** %417, align 8
  %429 = load i32, i32* %403, align 4
  %430 = bitcast %struct.SkPoint* %408 to i32*
  store i32 %429, i32* %430, align 8
  %431 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %8, i64 0, i64 4
  %432 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %431, i64 0, i32 0
  %433 = bitcast i32 %429 to float
  %434 = load float, float* %432, align 16
  %435 = fcmp olt float %434, %433
  br i1 %435, label %436, label %438

436:                                              ; preds = %402
  %437 = bitcast %struct.SkPoint* %431 to i32*
  store i32 %429, i32* %437, align 16
  br label %438

438:                                              ; preds = %402, %436
  %439 = bitcast %struct.SkPoint* %408 to <2 x i64>*
  %440 = load <2 x i64>, <2 x i64>* %439, align 8
  %441 = bitcast [4 x %struct.SkPoint]* %7 to <2 x i64>*
  store <2 x i64> %440, <2 x i64>* %441, align 16
  %442 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %8, i64 0, i64 5
  %443 = bitcast %struct.SkPoint* %442 to i64*
  %444 = bitcast %struct.SkPoint* %16 to i64*
  %445 = load i64, i64* %443, align 8
  store i64 %445, i64* %444, align 16
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %356) #7
  %446 = load float, float* %19, align 8
  %447 = load float, float* %327, align 4
  br label %448

448:                                              ; preds = %438, %353
  %449 = phi float [ %447, %438 ], [ %328, %353 ]
  %450 = phi float [ %446, %438 ], [ %300, %353 ]
  %451 = fcmp ogt float %450, %449
  br i1 %451, label %452, label %566

452:                                              ; preds = %448
  %453 = bitcast [7 x %struct.SkPoint]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %453) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %453, i8 -1, i64 56, i1 false)
  %454 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %9, i64 0, i64 0
  %455 = call zeroext i1 @_Z18SkChopMonoCubicAtXP7SkPointfS0_(%struct.SkPoint* nonnull %11, float %449, %struct.SkPoint* nonnull %454) #7
  br i1 %455, label %499, label %456

456:                                              ; preds = %452
  %457 = load float, float* %12, align 16
  %458 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 3, i32 0
  %459 = load float, float* %458, align 8
  %460 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 1, i32 0
  %461 = load float, float* %460, align 8
  %462 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 2, i32 0
  %463 = load float, float* %462, align 16
  %464 = fsub float %461, %463
  %465 = fmul float %464, 3.000000e+00
  %466 = fadd float %459, %465
  %467 = fsub float %466, %457
  %468 = fsub float %463, %461
  %469 = fsub float %468, %461
  %470 = fadd float %457, %469
  %471 = fmul float %470, 3.000000e+00
  %472 = fsub float %461, %457
  %473 = fmul float %472, 3.000000e+00
  %474 = fsub float %449, %457
  br label %475

475:                                              ; preds = %495, %456
  %476 = phi float [ 5.000000e-01, %456 ], [ %493, %495 ]
  %477 = phi float [ 0.000000e+00, %456 ], [ %488, %495 ]
  %478 = phi float [ 2.500000e-01, %456 ], [ %496, %495 ]
  %479 = phi float [ 0x47EFFFFFE0000000, %456 ], [ %489, %495 ]
  %480 = fmul float %467, %476
  %481 = fadd float %471, %480
  %482 = fmul float %476, %481
  %483 = fadd float %473, %482
  %484 = fmul float %476, %483
  %485 = fsub float %484, %474
  %486 = call float @llvm.fabs.f32(float %485) #7
  %487 = fcmp ogt float %479, %486
  %488 = select i1 %487, float %476, float %477
  %489 = select i1 %487, float %486, float %479
  %490 = fcmp olt float %484, %474
  %491 = fsub float -0.000000e+00, %478
  %492 = select i1 %490, float %478, float %491
  %493 = fadd float %476, %492
  %494 = fcmp ogt float %489, 2.500000e-01
  br i1 %494, label %495, label %498

495:                                              ; preds = %475
  %496 = fmul float %478, 5.000000e-01
  %497 = fcmp une float %476, %493
  br i1 %497, label %475, label %498

498:                                              ; preds = %495, %475
  call void @_Z13SkChopCubicAtPK7SkPointPS_f(%struct.SkPoint* nonnull %11, %struct.SkPoint* nonnull %454, float %488) #7
  br label %499

499:                                              ; preds = %452, %498
  %500 = bitcast float* %327 to i32*
  %501 = load i32, i32* %500, align 4
  %502 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %9, i64 0, i64 3
  %503 = bitcast %struct.SkPoint* %502 to i32*
  store i32 %501, i32* %503, align 8
  %504 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %9, i64 0, i64 2, i32 0
  %505 = bitcast i32 %501 to float
  %506 = load float, float* %504, align 16
  %507 = fcmp ogt float %506, %505
  br i1 %507, label %508, label %510

508:                                              ; preds = %499
  %509 = bitcast float* %504 to i32*
  store i32 %501, i32* %509, align 16
  br label %510

510:                                              ; preds = %499, %508
  %511 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 1
  %512 = load i32*, i32** %511, align 8
  %513 = getelementptr inbounds i32, i32* %512, i64 1
  store i32* %513, i32** %511, align 8
  store i32 4, i32* %512, align 4
  br i1 %303, label %514, label %537

514:                                              ; preds = %510
  %515 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 0
  %516 = bitcast %class.SkEdgeClipper* %0 to i64**
  %517 = load i64*, i64** %516, align 8
  %518 = bitcast %struct.SkPoint* %502 to i64*
  %519 = load i64, i64* %518, align 8
  store i64 %519, i64* %517, align 4
  %520 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %9, i64 0, i64 2
  %521 = load %struct.SkPoint*, %struct.SkPoint** %515, align 8
  %522 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %521, i64 1
  %523 = bitcast %struct.SkPoint* %520 to i64*
  %524 = bitcast %struct.SkPoint* %522 to i64*
  %525 = load i64, i64* %523, align 16
  store i64 %525, i64* %524, align 4
  %526 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %9, i64 0, i64 1
  %527 = load %struct.SkPoint*, %struct.SkPoint** %515, align 8
  %528 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %527, i64 2
  %529 = bitcast %struct.SkPoint* %526 to i64*
  %530 = bitcast %struct.SkPoint* %528 to i64*
  %531 = load i64, i64* %529, align 8
  store i64 %531, i64* %530, align 4
  %532 = load %struct.SkPoint*, %struct.SkPoint** %515, align 8
  %533 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %532, i64 3
  %534 = bitcast [7 x %struct.SkPoint]* %9 to i64*
  %535 = bitcast %struct.SkPoint* %533 to i64*
  %536 = load i64, i64* %534, align 16
  store i64 %536, i64* %535, align 4
  br label %540

537:                                              ; preds = %510
  %538 = bitcast %class.SkEdgeClipper* %0 to i8**
  %539 = load i8*, i8** %538, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %539, i8* nonnull align 16 %453, i64 32, i1 false) #7
  br label %540

540:                                              ; preds = %514, %537
  %541 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 0
  %542 = load %struct.SkPoint*, %struct.SkPoint** %541, align 8
  %543 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %542, i64 4
  store %struct.SkPoint* %543, %struct.SkPoint** %541, align 8
  %544 = load i32, i32* %500, align 4
  %545 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %9, i64 0, i64 3, i32 1
  %546 = bitcast float* %545 to i32*
  %547 = load i32, i32* %546, align 4
  %548 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %9, i64 0, i64 6, i32 1
  %549 = bitcast float* %548 to i32*
  %550 = load i32, i32* %549, align 4
  %551 = load i32*, i32** %511, align 8
  %552 = getelementptr inbounds i32, i32* %551, i64 1
  store i32* %552, i32** %511, align 8
  store i32 1, i32* %551, align 4
  %553 = select i1 %303, i32 %550, i32 %547
  %554 = select i1 %303, i32 %547, i32 %550
  %555 = load %struct.SkPoint*, %struct.SkPoint** %541, align 8
  %556 = bitcast %struct.SkPoint* %555 to i32*
  store i32 %544, i32* %556, align 4
  %557 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %555, i64 0, i32 1
  %558 = bitcast float* %557 to i32*
  store i32 %553, i32* %558, align 4
  %559 = load %struct.SkPoint*, %struct.SkPoint** %541, align 8
  %560 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %559, i64 1, i32 0
  %561 = bitcast float* %560 to i32*
  store i32 %544, i32* %561, align 4
  %562 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %559, i64 1, i32 1
  %563 = bitcast float* %562 to i32*
  store i32 %554, i32* %563, align 4
  %564 = load %struct.SkPoint*, %struct.SkPoint** %541, align 8
  %565 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %564, i64 2
  store %struct.SkPoint* %565, %struct.SkPoint** %541, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %453) #7
  br label %598

566:                                              ; preds = %448
  %567 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 1
  %568 = load i32*, i32** %567, align 8
  %569 = getelementptr inbounds i32, i32* %568, i64 1
  store i32* %569, i32** %567, align 8
  store i32 4, i32* %568, align 4
  br i1 %303, label %570, label %591

570:                                              ; preds = %566
  %571 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 0
  %572 = bitcast %class.SkEdgeClipper* %0 to i64**
  %573 = load i64*, i64** %572, align 8
  %574 = bitcast %struct.SkPoint* %18 to i64*
  %575 = load i64, i64* %574, align 8
  store i64 %575, i64* %573, align 4
  %576 = load %struct.SkPoint*, %struct.SkPoint** %571, align 8
  %577 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %576, i64 1
  %578 = bitcast %struct.SkPoint* %16 to i64*
  %579 = bitcast %struct.SkPoint* %577 to i64*
  %580 = load i64, i64* %578, align 16
  store i64 %580, i64* %579, align 4
  %581 = load %struct.SkPoint*, %struct.SkPoint** %571, align 8
  %582 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %581, i64 2
  %583 = bitcast %struct.SkPoint* %14 to i64*
  %584 = bitcast %struct.SkPoint* %582 to i64*
  %585 = load i64, i64* %583, align 8
  store i64 %585, i64* %584, align 4
  %586 = load %struct.SkPoint*, %struct.SkPoint** %571, align 8
  %587 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %586, i64 3
  %588 = bitcast [4 x %struct.SkPoint]* %7 to i64*
  %589 = bitcast %struct.SkPoint* %587 to i64*
  %590 = load i64, i64* %588, align 16
  store i64 %590, i64* %589, align 4
  br label %594

591:                                              ; preds = %566
  %592 = bitcast %class.SkEdgeClipper* %0 to i8**
  %593 = load i8*, i8** %592, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %593, i8* nonnull align 16 %10, i64 32, i1 false) #7
  br label %594

594:                                              ; preds = %570, %591
  %595 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 0
  %596 = load %struct.SkPoint*, %struct.SkPoint** %595, align 8
  %597 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %596, i64 4
  store %struct.SkPoint* %597, %struct.SkPoint** %595, align 8
  br label %598

598:                                              ; preds = %330, %540, %594, %334, %47, %54, %307
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkEdgeClipper11appendCubicEPK7SkPointb(%class.SkEdgeClipper* nocapture, %struct.SkPoint* nocapture readonly, i1 zeroext) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 1
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds i32, i32* %5, i64 1
  store i32* %6, i32** %4, align 8
  store i32 4, i32* %5, align 4
  br i1 %2, label %7, label %31

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 0
  %9 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 3
  %10 = bitcast %class.SkEdgeClipper* %0 to i64**
  %11 = load i64*, i64** %10, align 8
  %12 = bitcast %struct.SkPoint* %9 to i64*
  %13 = load i64, i64* %12, align 4
  store i64 %13, i64* %11, align 4
  %14 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2
  %15 = load %struct.SkPoint*, %struct.SkPoint** %8, align 8
  %16 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %15, i64 1
  %17 = bitcast %struct.SkPoint* %14 to i64*
  %18 = bitcast %struct.SkPoint* %16 to i64*
  %19 = load i64, i64* %17, align 4
  store i64 %19, i64* %18, align 4
  %20 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1
  %21 = load %struct.SkPoint*, %struct.SkPoint** %8, align 8
  %22 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %21, i64 2
  %23 = bitcast %struct.SkPoint* %20 to i64*
  %24 = bitcast %struct.SkPoint* %22 to i64*
  %25 = load i64, i64* %23, align 4
  store i64 %25, i64* %24, align 4
  %26 = load %struct.SkPoint*, %struct.SkPoint** %8, align 8
  %27 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %26, i64 3
  %28 = bitcast %struct.SkPoint* %1 to i64*
  %29 = bitcast %struct.SkPoint* %27 to i64*
  %30 = load i64, i64* %28, align 4
  store i64 %30, i64* %29, align 4
  br label %35

31:                                               ; preds = %3
  %32 = bitcast %class.SkEdgeClipper* %0 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast %struct.SkPoint* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* align 4 %34, i64 32, i1 false)
  br label %35

35:                                               ; preds = %7, %31
  %36 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 0
  %37 = load %struct.SkPoint*, %struct.SkPoint** %36, align 8
  %38 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %37, i64 4
  store %struct.SkPoint* %38, %struct.SkPoint** %36, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13SkEdgeClipper9clipCubicEPK7SkPointRK6SkRect(%class.SkEdgeClipper*, %struct.SkPoint*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca [4 x %struct.SkPoint], align 16
  %5 = alloca [2 x %struct.SkPoint], align 16
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = alloca [10 x %struct.SkPoint], align 16
  %8 = alloca [10 x %struct.SkPoint], align 16
  %9 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 4, i64 0
  %10 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 0
  store %struct.SkPoint* %9, %struct.SkPoint** %10, align 8
  %11 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 5, i64 0
  %12 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 1
  store i32* %11, i32** %12, align 8
  %13 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13)
  %14 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRect*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -1, i64 16, i1 false) #7
  %15 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* nonnull %14, %struct.SkPoint* %1, i32 4) #7
  %16 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  %17 = load <2 x float>, <2 x float>* %16, align 8
  %18 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  %19 = load <2 x float>, <2 x float>* %18, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13)
  %20 = extractelement <2 x float> %19, i32 1
  %21 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 1
  %22 = load float, float* %21, align 4
  %23 = fcmp ogt float %20, %22
  br i1 %23, label %24, label %152

24:                                               ; preds = %3
  %25 = extractelement <2 x float> %17, i32 1
  %26 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 3
  %27 = load float, float* %26, align 4
  %28 = fcmp olt float %25, %27
  br i1 %28, label %29, label %152

29:                                               ; preds = %24
  %30 = extractelement <2 x float> %17, i32 0
  %31 = fcmp olt float %30, 0xC150000000000000
  %32 = fcmp olt float %25, 0xC150000000000000
  %33 = or i1 %31, %32
  %34 = extractelement <2 x float> %19, i32 0
  %35 = fcmp ogt float %34, 0x4150000000000000
  %36 = or i1 %33, %35
  %37 = fcmp ogt float %20, 0x4150000000000000
  %38 = or i1 %37, %36
  br i1 %38, label %39, label %121

39:                                               ; preds = %29
  %40 = bitcast %struct.SkPoint* %1 to i64*
  %41 = load i64, i64* %40, align 4
  %42 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 3
  %43 = bitcast %struct.SkPoint* %42 to i64*
  %44 = load i64, i64* %43, align 4
  store %struct.SkPoint* %9, %struct.SkPoint** %10, align 8
  store i32* %11, i32** %12, align 8
  %45 = bitcast [4 x %struct.SkPoint]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %45) #7
  %46 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %4, i64 0, i64 0
  %47 = bitcast [2 x %struct.SkPoint]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %45, i8 -1, i64 32, i1 false) #7
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #7
  %48 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %5, i64 0, i64 0
  %49 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %5, i64 0, i64 1
  %50 = bitcast [2 x %struct.SkPoint]* %5 to i64*
  store i64 %41, i64* %50, align 16
  %51 = bitcast %struct.SkPoint* %49 to i64*
  store i64 %44, i64* %51, align 8
  %52 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 2
  %53 = load i8, i8* %52, align 8, !range !2
  %54 = icmp ne i8 %53, 0
  %55 = call i32 @_ZN13SkLineClipper8ClipLineEPK7SkPointRK6SkRectPS0_b(%struct.SkPoint* nonnull %48, %struct.SkRect* dereferenceable(16) %2, %struct.SkPoint* nonnull %46, i1 zeroext %54) #7
  %56 = icmp sgt i32 %55, 0
  br i1 %56, label %57, label %118

57:                                               ; preds = %39
  %58 = bitcast %class.SkEdgeClipper* %0 to i64**
  %59 = zext i32 %55 to i64
  %60 = and i64 %59, 1
  %61 = icmp eq i32 %55, 1
  br i1 %61, label %99, label %62

62:                                               ; preds = %57
  %63 = sub nsw i64 %59, %60
  br label %64

64:                                               ; preds = %64, %62
  %65 = phi i64 [ 0, %62 ], [ %85, %64 ]
  %66 = phi i64 [ %63, %62 ], [ %97, %64 ]
  %67 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %4, i64 0, i64 %65
  %68 = bitcast %struct.SkPoint* %67 to i64*
  %69 = load i64, i64* %68, align 16
  %70 = or i64 %65, 1
  %71 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %4, i64 0, i64 %70
  %72 = bitcast %struct.SkPoint* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = load i32*, i32** %12, align 8
  %75 = getelementptr inbounds i32, i32* %74, i64 1
  store i32* %75, i32** %12, align 8
  store i32 1, i32* %74, align 4
  %76 = load i64*, i64** %58, align 8
  store i64 %69, i64* %76, align 4
  %77 = load %struct.SkPoint*, %struct.SkPoint** %10, align 8
  %78 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %77, i64 1
  %79 = bitcast %struct.SkPoint* %78 to i64*
  store i64 %73, i64* %79, align 4
  %80 = load %struct.SkPoint*, %struct.SkPoint** %10, align 8
  %81 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %80, i64 2
  store %struct.SkPoint* %81, %struct.SkPoint** %10, align 8
  %82 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %4, i64 0, i64 %70
  %83 = bitcast %struct.SkPoint* %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = add nuw nsw i64 %65, 2
  %86 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %4, i64 0, i64 %85
  %87 = bitcast %struct.SkPoint* %86 to i64*
  %88 = load i64, i64* %87, align 16
  %89 = load i32*, i32** %12, align 8
  %90 = getelementptr inbounds i32, i32* %89, i64 1
  store i32* %90, i32** %12, align 8
  store i32 1, i32* %89, align 4
  %91 = load i64*, i64** %58, align 8
  store i64 %84, i64* %91, align 4
  %92 = load %struct.SkPoint*, %struct.SkPoint** %10, align 8
  %93 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %92, i64 1
  %94 = bitcast %struct.SkPoint* %93 to i64*
  store i64 %88, i64* %94, align 4
  %95 = load %struct.SkPoint*, %struct.SkPoint** %10, align 8
  %96 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %95, i64 2
  store %struct.SkPoint* %96, %struct.SkPoint** %10, align 8
  %97 = add i64 %66, -2
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %64

99:                                               ; preds = %64, %57
  %100 = phi i64 [ 0, %57 ], [ %85, %64 ]
  %101 = icmp eq i64 %60, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %4, i64 0, i64 %100
  %104 = bitcast %struct.SkPoint* %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = add nuw nsw i64 %100, 1
  %107 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %4, i64 0, i64 %106
  %108 = bitcast %struct.SkPoint* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = load i32*, i32** %12, align 8
  %111 = getelementptr inbounds i32, i32* %110, i64 1
  store i32* %111, i32** %12, align 8
  store i32 1, i32* %110, align 4
  %112 = load i64*, i64** %58, align 8
  store i64 %105, i64* %112, align 4
  %113 = load %struct.SkPoint*, %struct.SkPoint** %10, align 8
  %114 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %113, i64 1
  %115 = bitcast %struct.SkPoint* %114 to i64*
  store i64 %109, i64* %115, align 4
  %116 = load %struct.SkPoint*, %struct.SkPoint** %10, align 8
  %117 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %116, i64 2
  store %struct.SkPoint* %117, %struct.SkPoint** %10, align 8
  br label %118

118:                                              ; preds = %102, %99, %39
  %119 = load i32*, i32** %12, align 8
  store i32 6, i32* %119, align 4
  store %struct.SkPoint* %9, %struct.SkPoint** %10, align 8
  store i32* %11, i32** %12, align 8
  %120 = load i32, i32* %11, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %45) #7
  br label %155

121:                                              ; preds = %29
  %122 = bitcast [10 x %struct.SkPoint]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %122) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %122, i8 -1, i64 80, i1 false)
  %123 = getelementptr inbounds [10 x %struct.SkPoint], [10 x %struct.SkPoint]* %7, i64 0, i64 0
  %124 = call i32 @_Z21SkChopCubicAtYExtremaPK7SkPointPS_(%struct.SkPoint* %1, %struct.SkPoint* nonnull %123) #7
  %125 = icmp slt i32 %124, 0
  br i1 %125, label %131, label %126

126:                                              ; preds = %121
  %127 = bitcast [10 x %struct.SkPoint]* %8 to i8*
  %128 = getelementptr inbounds [10 x %struct.SkPoint], [10 x %struct.SkPoint]* %8, i64 0, i64 0
  %129 = add nuw i32 %124, 1
  %130 = zext i32 %129 to i64
  br label %132

131:                                              ; preds = %142, %121
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %122) #7
  br label %152

132:                                              ; preds = %142, %126
  %133 = phi i64 [ %143, %142 ], [ 0, %126 ]
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %127) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %127, i8 -1, i64 80, i1 false)
  %134 = mul i64 %133, 3
  %135 = and i64 %134, 4294967295
  %136 = getelementptr inbounds [10 x %struct.SkPoint], [10 x %struct.SkPoint]* %7, i64 0, i64 %135
  %137 = call i32 @_Z21SkChopCubicAtXExtremaPK7SkPointPS_(%struct.SkPoint* %136, %struct.SkPoint* nonnull %128) #7
  %138 = icmp slt i32 %137, 0
  br i1 %138, label %142, label %139

139:                                              ; preds = %132
  %140 = add nuw i32 %137, 1
  %141 = zext i32 %140 to i64
  br label %145

142:                                              ; preds = %145, %132
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %127) #7
  %143 = add nuw nsw i64 %133, 1
  %144 = icmp eq i64 %143, %130
  br i1 %144, label %131, label %132

145:                                              ; preds = %145, %139
  %146 = phi i64 [ 0, %139 ], [ %150, %145 ]
  %147 = mul i64 %146, 3
  %148 = and i64 %147, 4294967295
  %149 = getelementptr inbounds [10 x %struct.SkPoint], [10 x %struct.SkPoint]* %8, i64 0, i64 %148
  call void @_ZN13SkEdgeClipper13clipMonoCubicEPK7SkPointRK6SkRect(%class.SkEdgeClipper* %0, %struct.SkPoint* %149, %struct.SkRect* dereferenceable(16) %2)
  %150 = add nuw nsw i64 %146, 1
  %151 = icmp eq i64 %150, %141
  br i1 %151, label %142, label %145

152:                                              ; preds = %131, %24, %3
  %153 = load i32*, i32** %12, align 8
  store i32 6, i32* %153, align 4
  store %struct.SkPoint* %9, %struct.SkPoint** %10, align 8
  store i32* %11, i32** %12, align 8
  %154 = load i32, i32* %11, align 4
  br label %155

155:                                              ; preds = %152, %118
  %156 = phi i32 [ %120, %118 ], [ %154, %152 ]
  %157 = icmp ne i32 %156, 6
  ret i1 %157
}

declare i32 @_Z21SkChopCubicAtYExtremaPK7SkPointPS_(%struct.SkPoint*, %struct.SkPoint*) local_unnamed_addr #2

declare i32 @_Z21SkChopCubicAtXExtremaPK7SkPointPS_(%struct.SkPoint*, %struct.SkPoint*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13SkEdgeClipper4nextEP7SkPoint(%class.SkEdgeClipper* nocapture, %struct.SkPoint* nocapture) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 1
  %4 = load i32*, i32** %3, align 8
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %25 [
    i32 1, label %6
    i32 2, label %10
    i32 4, label %14
  ]

6:                                                ; preds = %2
  %7 = bitcast %struct.SkPoint* %1 to i8*
  %8 = bitcast %class.SkEdgeClipper* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %9, i64 16, i1 false)
  br label %18

10:                                               ; preds = %2
  %11 = bitcast %struct.SkPoint* %1 to i8*
  %12 = bitcast %class.SkEdgeClipper* %0 to i8**
  %13 = load i8*, i8** %12, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %13, i64 24, i1 false)
  br label %18

14:                                               ; preds = %2
  %15 = bitcast %struct.SkPoint* %1 to i8*
  %16 = bitcast %class.SkEdgeClipper* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %17, i64 32, i1 false)
  br label %18

18:                                               ; preds = %6, %10, %14
  %19 = phi i64 [ 4, %14 ], [ 3, %10 ], [ 2, %6 ]
  %20 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %0, i64 0, i32 0
  %21 = load %struct.SkPoint*, %struct.SkPoint** %20, align 8
  %22 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %21, i64 %19
  store %struct.SkPoint* %22, %struct.SkPoint** %20, align 8
  %23 = load i32*, i32** %3, align 8
  %24 = getelementptr inbounds i32, i32* %23, i64 1
  store i32* %24, i32** %3, align 8
  br label %25

25:                                               ; preds = %18, %2
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkEdgeClipper8ClipPathERK6SkPathRK6SkRectbPFvPS_bPvES7_(%class.SkPath* dereferenceable(16), %struct.SkRect* dereferenceable(16), i1 zeroext, void (%class.SkEdgeClipper*, i1, i8*)* nocapture, i8*) local_unnamed_addr #0 align 2 {
  %6 = alloca %struct.SkConic, align 4
  %7 = alloca [4 x %struct.SkPoint], align 16
  %8 = alloca <2 x i64>, align 16
  %9 = alloca %class.SkAutoConicToQuads, align 8
  %10 = alloca %class.SkPathEdgeIter, align 8
  %11 = alloca %class.SkEdgeClipper, align 8
  %12 = bitcast %class.SkAutoConicToQuads* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %12) #7
  %13 = getelementptr inbounds %class.SkAutoConicToQuads, %class.SkAutoConicToQuads* %9, i64 0, i32 0, i32 1
  %14 = bitcast %union.anon* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 144, i1 false)
  %15 = getelementptr inbounds %class.SkAutoConicToQuads, %class.SkAutoConicToQuads* %9, i64 0, i32 0, i32 1
  %16 = bitcast %class.SkAutoConicToQuads* %9 to %union.anon**
  store %union.anon* %15, %union.anon** %16, align 8
  %17 = getelementptr inbounds %class.SkAutoConicToQuads, %class.SkAutoConicToQuads* %9, i64 0, i32 1
  store i32 0, i32* %17, align 8
  %18 = bitcast %class.SkPathEdgeIter* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %18) #7
  %19 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %10, i64 0, i32 0
  %20 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %10, i64 0, i32 1
  %21 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %10, i64 0, i32 2
  %22 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %10, i64 0, i32 3
  %23 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %10, i64 0, i32 4
  %24 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %10, i64 0, i32 5, i64 0, i32 0
  %25 = bitcast %class.SkPathEdgeIter* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 40, i1 false)
  %26 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %10, i64 0, i32 6
  %27 = bitcast float* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 -1, i64 16, i1 false)
  %28 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %10, i64 0, i32 7
  %29 = bitcast i8* %26 to i64*
  store i64 -6148914691236517206, i64* %29, align 8
  call void @_ZN14SkPathEdgeIterC1ERK6SkPath(%class.SkPathEdgeIter* nonnull %10, %class.SkPath* dereferenceable(16) %0) #7
  %30 = bitcast %class.SkEdgeClipper* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 528, i8* nonnull %30) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* align 8 bitcast (%class.SkEdgeClipper* @__const._ZN13SkEdgeClipper8ClipPathERK6SkPathRK6SkRectbPFvPS_bPvES7_.clipper to i8*), i64 528, i1 false)
  %31 = zext i1 %2 to i8
  %32 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %11, i64 0, i32 2
  store i8 %31, i8* %32, align 8
  %33 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %10, i64 0, i32 5
  %34 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %33, i64 0, i64 0
  %35 = bitcast [2 x %struct.SkPoint]* %33 to i64*
  %36 = bitcast %struct.SkPoint** %22 to i64**
  %37 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %10, i64 0, i32 5, i64 1
  %38 = bitcast %struct.SkPoint* %37 to i64*
  %39 = bitcast float** %23 to i32**
  %40 = bitcast %struct.SkConic* %6 to i8*
  %41 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %6, i64 0, i32 1
  %42 = bitcast float* %41 to i32*
  %43 = getelementptr inbounds %class.SkAutoConicToQuads, %class.SkAutoConicToQuads* %9, i64 0, i32 0, i32 0
  %44 = bitcast %union.anon* %15 to %struct.SkPoint*
  %45 = bitcast %class.SkAutoConicToQuads* %9 to i8**
  %46 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %11, i64 0, i32 4, i64 0
  %47 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %11, i64 0, i32 0
  %48 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %11, i64 0, i32 5, i64 0
  %49 = getelementptr inbounds %class.SkEdgeClipper, %class.SkEdgeClipper* %11, i64 0, i32 1
  %50 = bitcast [4 x %struct.SkPoint]* %7 to i8*
  %51 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 0
  %52 = bitcast <2 x i64>* %8 to i8*
  %53 = bitcast <2 x i64>* %8 to %struct.SkPoint*
  %54 = bitcast %class.SkEdgeClipper* %11 to i64**
  br label %55

55:                                               ; preds = %224, %5
  %56 = load i8*, i8** %19, align 8
  %57 = load i8*, i8** %20, align 8
  %58 = icmp eq i8* %56, %57
  br i1 %58, label %59, label %69

59:                                               ; preds = %55
  %60 = load i8, i8* %26, align 8, !range !2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %243, label %62

62:                                               ; preds = %59
  %63 = load %struct.SkPoint*, %struct.SkPoint** %21, align 8
  %64 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %63, i64 -1
  %65 = bitcast %struct.SkPoint* %64 to i64*
  %66 = load i64, i64* %65, align 4
  store i64 %66, i64* %35, align 8
  %67 = load i64*, i64** %36, align 8
  %68 = load i64, i64* %67, align 4
  store i64 %68, i64* %38, align 8
  store i8 0, i8* %26, align 8
  store i8 1, i8* %28, align 1
  br label %119

69:                                               ; preds = %55, %117
  %70 = phi i8* [ %71, %117 ], [ %56, %55 ]
  %71 = getelementptr inbounds i8, i8* %70, i64 1
  store i8* %71, i8** %19, align 8
  %72 = load i8, i8* %70, align 1
  switch i8 %72, label %96 [
    i8 0, label %73
    i8 5, label %86
  ]

73:                                               ; preds = %69
  %74 = load i8, i8* %26, align 8, !range !2
  %75 = icmp eq i8 %74, 0
  %76 = load %struct.SkPoint*, %struct.SkPoint** %21, align 8
  br i1 %75, label %84, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %76, i64 -1
  %79 = bitcast %struct.SkPoint* %78 to i64*
  %80 = load i64, i64* %79, align 4
  store i64 %80, i64* %35, align 8
  %81 = load i64*, i64** %36, align 8
  %82 = load i64, i64* %81, align 4
  store i64 %82, i64* %38, align 8
  store i8 0, i8* %26, align 8
  store i8 1, i8* %28, align 1
  %83 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %76, i64 1
  store %struct.SkPoint* %83, %struct.SkPoint** %21, align 8
  store %struct.SkPoint* %76, %struct.SkPoint** %22, align 8
  br label %119

84:                                               ; preds = %73
  %85 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %76, i64 1
  store %struct.SkPoint* %85, %struct.SkPoint** %21, align 8
  store %struct.SkPoint* %76, %struct.SkPoint** %22, align 8
  store i8 1, i8* %28, align 1
  br label %117

86:                                               ; preds = %69
  %87 = load i8, i8* %26, align 8, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %117, label %89

89:                                               ; preds = %86
  %90 = load %struct.SkPoint*, %struct.SkPoint** %21, align 8
  %91 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %90, i64 -1
  %92 = bitcast %struct.SkPoint* %91 to i64*
  %93 = load i64, i64* %92, align 4
  store i64 %93, i64* %35, align 8
  %94 = load i64*, i64** %36, align 8
  %95 = load i64, i64* %94, align 4
  store i64 %95, i64* %38, align 8
  store i8 0, i8* %26, align 8
  store i8 1, i8* %28, align 1
  br label %119

96:                                               ; preds = %69
  %97 = zext i8 %72 to i32
  %98 = add nuw nsw i32 %97, 2
  %99 = lshr i32 %98, 1
  %100 = add nuw nsw i32 %97, 255
  %101 = and i32 %100, %97
  %102 = lshr exact i32 %101, 1
  store i8 1, i8* %26, align 8
  %103 = load %struct.SkPoint*, %struct.SkPoint** %21, align 8
  %104 = zext i32 %99 to i64
  %105 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %103, i64 %104
  store %struct.SkPoint* %105, %struct.SkPoint** %21, align 8
  %106 = load float*, float** %23, align 8
  %107 = zext i32 %102 to i64
  %108 = getelementptr inbounds float, float* %106, i64 %107
  store float* %108, float** %23, align 8
  %109 = load i8, i8* %28, align 1, !range !2
  store i8 0, i8* %28, align 1
  %110 = xor i32 %99, -1
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %105, i64 %111
  %113 = zext i8 %72 to i64
  %114 = zext i8 %109 to i64
  %115 = shl nuw nsw i64 %114, 32
  %116 = or i64 %115, %113
  br label %119

117:                                              ; preds = %86, %84
  %118 = icmp eq i8* %71, %57
  br i1 %118, label %243, label %69

119:                                              ; preds = %62, %77, %89, %96
  %120 = phi %struct.SkPoint* [ %34, %62 ], [ %34, %77 ], [ %34, %89 ], [ %112, %96 ]
  %121 = phi i64 [ 1, %62 ], [ 1, %77 ], [ 1, %89 ], [ %116, %96 ]
  %122 = icmp eq %struct.SkPoint* %120, null
  br i1 %122, label %243, label %123

123:                                              ; preds = %119
  %124 = trunc i64 %121 to i32
  switch i32 %124, label %224 [
    i32 1, label %125
    i32 2, label %196
    i32 3, label %201
    i32 4, label %238
  ]

125:                                              ; preds = %123
  %126 = bitcast %struct.SkPoint* %120 to <2 x i64>*
  %127 = load <2 x i64>, <2 x i64>* %126, align 4
  store %struct.SkPoint* %46, %struct.SkPoint** %47, align 8
  store i32* %48, i32** %49, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %50) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %50, i8 -1, i64 32, i1 false) #7
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #7
  store <2 x i64> %127, <2 x i64>* %8, align 16
  %128 = load i8, i8* %32, align 8, !range !2
  %129 = icmp ne i8 %128, 0
  %130 = call i32 @_ZN13SkLineClipper8ClipLineEPK7SkPointRK6SkRectPS0_b(%struct.SkPoint* nonnull %53, %struct.SkRect* dereferenceable(16) %1, %struct.SkPoint* nonnull %51, i1 zeroext %129) #7
  %131 = icmp sgt i32 %130, 0
  br i1 %131, label %132, label %189

132:                                              ; preds = %125
  %133 = zext i32 %130 to i64
  %134 = and i64 %133, 1
  %135 = icmp eq i32 %130, 1
  br i1 %135, label %171, label %136

136:                                              ; preds = %132
  %137 = sub nsw i64 %133, %134
  br label %138

138:                                              ; preds = %138, %136
  %139 = phi i64 [ 0, %136 ], [ %158, %138 ]
  %140 = phi i64 [ %137, %136 ], [ %169, %138 ]
  %141 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 %139
  %142 = bitcast %struct.SkPoint* %141 to i64*
  %143 = load i64, i64* %142, align 16
  %144 = or i64 %139, 1
  %145 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 %144
  %146 = bitcast %struct.SkPoint* %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = load i32*, i32** %49, align 8
  %149 = getelementptr inbounds i32, i32* %148, i64 1
  store i32* %149, i32** %49, align 8
  store i32 1, i32* %148, align 4
  %150 = load i64*, i64** %54, align 8
  store i64 %143, i64* %150, align 4
  %151 = load %struct.SkPoint*, %struct.SkPoint** %47, align 8
  %152 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %151, i64 1
  %153 = bitcast %struct.SkPoint* %152 to i64*
  store i64 %147, i64* %153, align 4
  %154 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %151, i64 2
  store %struct.SkPoint* %154, %struct.SkPoint** %47, align 8
  %155 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 %144
  %156 = bitcast %struct.SkPoint* %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = add nuw nsw i64 %139, 2
  %159 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 %158
  %160 = bitcast %struct.SkPoint* %159 to i64*
  %161 = load i64, i64* %160, align 16
  %162 = load i32*, i32** %49, align 8
  %163 = getelementptr inbounds i32, i32* %162, i64 1
  store i32* %163, i32** %49, align 8
  store i32 1, i32* %162, align 4
  %164 = load i64*, i64** %54, align 8
  store i64 %157, i64* %164, align 4
  %165 = load %struct.SkPoint*, %struct.SkPoint** %47, align 8
  %166 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %165, i64 1
  %167 = bitcast %struct.SkPoint* %166 to i64*
  store i64 %161, i64* %167, align 4
  %168 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %165, i64 2
  store %struct.SkPoint* %168, %struct.SkPoint** %47, align 8
  %169 = add i64 %140, -2
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %138

171:                                              ; preds = %138, %132
  %172 = phi i64 [ 0, %132 ], [ %158, %138 ]
  %173 = icmp eq i64 %134, 0
  br i1 %173, label %189, label %174

174:                                              ; preds = %171
  %175 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 %172
  %176 = bitcast %struct.SkPoint* %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = add nuw nsw i64 %172, 1
  %179 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 %178
  %180 = bitcast %struct.SkPoint* %179 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = load i32*, i32** %49, align 8
  %183 = getelementptr inbounds i32, i32* %182, i64 1
  store i32* %183, i32** %49, align 8
  store i32 1, i32* %182, align 4
  %184 = load i64*, i64** %54, align 8
  store i64 %177, i64* %184, align 4
  %185 = load %struct.SkPoint*, %struct.SkPoint** %47, align 8
  %186 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %185, i64 1
  %187 = bitcast %struct.SkPoint* %186 to i64*
  store i64 %181, i64* %187, align 4
  %188 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %185, i64 2
  store %struct.SkPoint* %188, %struct.SkPoint** %47, align 8
  br label %189

189:                                              ; preds = %174, %171, %125
  %190 = load i32*, i32** %49, align 8
  store i32 6, i32* %190, align 4
  store %struct.SkPoint* %46, %struct.SkPoint** %47, align 8
  store i32* %48, i32** %49, align 8
  %191 = load i32, i32* %48, align 4
  %192 = icmp eq i32 %191, 6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %50) #7
  br i1 %192, label %224, label %193

193:                                              ; preds = %189
  %194 = and i64 %121, 1095216660480
  %195 = icmp ne i64 %194, 0
  call void %3(%class.SkEdgeClipper* nonnull %11, i1 zeroext %195, i8* %4) #7
  br label %224

196:                                              ; preds = %123
  %197 = call zeroext i1 @_ZN13SkEdgeClipper8clipQuadEPK7SkPointRK6SkRect(%class.SkEdgeClipper* nonnull %11, %struct.SkPoint* nonnull %120, %struct.SkRect* dereferenceable(16) %1)
  br i1 %197, label %198, label %224

198:                                              ; preds = %196
  %199 = and i64 %121, 1095216660480
  %200 = icmp ne i64 %199, 0
  call void %3(%class.SkEdgeClipper* nonnull %11, i1 zeroext %200, i8* %4) #7
  br label %224

201:                                              ; preds = %123
  %202 = load i32*, i32** %39, align 8
  %203 = load i32, i32* %202, align 4
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %40) #7
  %204 = bitcast %struct.SkPoint* %120 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %40, i8* nonnull align 4 %204, i64 24, i1 false) #7
  store i32 %203, i32* %42, align 4
  %205 = call i32 @_ZNK7SkConic15computeQuadPOW2Ef(%struct.SkConic* nonnull %6, float 2.500000e-01) #7
  %206 = shl i32 1, %205
  store i32 %206, i32* %17, align 8
  %207 = shl nsw i32 %206, 1
  %208 = or i32 %207, 1
  %209 = sext i32 %208 to i64
  %210 = load %struct.SkPoint*, %struct.SkPoint** %43, align 8
  %211 = icmp eq %struct.SkPoint* %210, %44
  br i1 %211, label %214, label %212

212:                                              ; preds = %201
  %213 = bitcast %struct.SkPoint* %210 to i8*
  call void @_Z7sk_freePv(i8* %213) #7
  br label %214

214:                                              ; preds = %212, %201
  %215 = icmp ugt i32 %208, 17
  br i1 %215, label %216, label %219

216:                                              ; preds = %214
  %217 = call i8* @_Z15sk_malloc_throwmm(i64 %209, i64 8) #7
  store i8* %217, i8** %45, align 8
  %218 = bitcast i8* %217 to %struct.SkPoint*
  br label %220

219:                                              ; preds = %214
  store %union.anon* %15, %union.anon** %16, align 8
  br label %220

220:                                              ; preds = %216, %219
  %221 = phi %struct.SkPoint* [ %44, %219 ], [ %218, %216 ]
  %222 = call i32 @_ZNK7SkConic17chopIntoQuadsPOW2EP7SkPointi(%struct.SkConic* nonnull %6, %struct.SkPoint* %221, i32 %205) #7
  store i32 %222, i32* %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %40) #7
  %223 = icmp sgt i32 %222, 0
  br i1 %223, label %225, label %224

224:                                              ; preds = %233, %220, %189, %123, %193, %198, %196, %240, %238
  br label %55

225:                                              ; preds = %220
  %226 = and i64 %121, 1095216660480
  %227 = icmp ne i64 %226, 0
  br label %228

228:                                              ; preds = %225, %233
  %229 = phi i32 [ 0, %225 ], [ %235, %233 ]
  %230 = phi %struct.SkPoint* [ %221, %225 ], [ %234, %233 ]
  %231 = call zeroext i1 @_ZN13SkEdgeClipper8clipQuadEPK7SkPointRK6SkRect(%class.SkEdgeClipper* nonnull %11, %struct.SkPoint* %230, %struct.SkRect* dereferenceable(16) %1)
  br i1 %231, label %232, label %233

232:                                              ; preds = %228
  call void %3(%class.SkEdgeClipper* nonnull %11, i1 zeroext %227, i8* %4) #7
  br label %233

233:                                              ; preds = %232, %228
  %234 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %230, i64 2
  %235 = add nuw nsw i32 %229, 1
  %236 = load i32, i32* %17, align 8
  %237 = icmp slt i32 %235, %236
  br i1 %237, label %228, label %224

238:                                              ; preds = %123
  %239 = call zeroext i1 @_ZN13SkEdgeClipper9clipCubicEPK7SkPointRK6SkRect(%class.SkEdgeClipper* nonnull %11, %struct.SkPoint* nonnull %120, %struct.SkRect* dereferenceable(16) %1)
  br i1 %239, label %240, label %224

240:                                              ; preds = %238
  %241 = and i64 %121, 1095216660480
  %242 = icmp ne i64 %241, 0
  call void %3(%class.SkEdgeClipper* nonnull %11, i1 zeroext %242, i8* %4) #7
  br label %224

243:                                              ; preds = %119, %59, %117
  call void @llvm.lifetime.end.p0i8(i64 528, i8* nonnull %30) #7
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %18) #7
  %244 = load %struct.SkPoint*, %struct.SkPoint** %43, align 8
  %245 = icmp eq %struct.SkPoint* %244, %44
  br i1 %245, label %248, label %246

246:                                              ; preds = %243
  %247 = bitcast %struct.SkPoint* %244 to i8*
  call void @_Z7sk_freePv(i8* %247) #7
  br label %248

248:                                              ; preds = %243, %246
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %12) #7
  ret void
}

declare void @_ZN14SkPathEdgeIterC1ERK6SkPath(%class.SkPathEdgeIter*, %class.SkPath* dereferenceable(16)) unnamed_addr #2

declare i32 @_Z19SkFindUnitQuadRootsfffPf(float, float, float, float*) local_unnamed_addr #2

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #2

declare zeroext i1 @_Z18SkChopMonoCubicAtYP7SkPointfS0_(%struct.SkPoint*, float, %struct.SkPoint*) local_unnamed_addr #2

declare void @_Z13SkChopCubicAtPK7SkPointPS_f(%struct.SkPoint*, %struct.SkPoint*, float) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #6

declare zeroext i1 @_Z18SkChopMonoCubicAtXP7SkPointfS0_(%struct.SkPoint*, float, %struct.SkPoint*) local_unnamed_addr #2

declare i32 @_ZNK7SkConic15computeQuadPOW2Ef(%struct.SkConic*, float) local_unnamed_addr #2

declare i32 @_ZNK7SkConic17chopIntoQuadsPOW2EP7SkPointi(%struct.SkConic*, %struct.SkPoint*, i32) local_unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
