; ModuleID = '../../third_party/blink/renderer/platform/fonts/shaping/harfbuzz_face.cc'
source_filename = "../../third_party/blink/renderer/platform/fonts/shaping/harfbuzz_face.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HarfBuzzFace" = type { %"class.WTF::RefCounted", %"class.blink::FontPlatformData"*, i64, %struct.hb_font_t*, %"struct.blink::HarfBuzzFontData"* }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%struct.hb_font_t = type opaque
%"struct.blink::HarfBuzzFontData" = type { %class.SkFont, float, float, float, i32, i32, %class.scoped_refptr.7, %class.scoped_refptr.22 }
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%class.scoped_refptr.7 = type { %"class.blink::OpenTypeVerticalData"* }
%"class.blink::OpenTypeVerticalData" = type <{ %"class.WTF::RefCounted.8", [4 x i8], %"class.WTF::HashMap", %"class.WTF::Vector", %"class.WTF::Vector", %"class.WTF::Vector.12", i16, [6 x i8], %"class.WTF::HashMap.17", float, float, i32, [4 x i8] }>
%"class.WTF::RefCounted.8" = type { %"class.base::RefCounted.9" }
%"class.base::RefCounted.9" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i16, i16 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i16*, i32, i32 }
%"class.WTF::Vector.12" = type { %"class.WTF::VectorBuffer.13" }
%"class.WTF::VectorBuffer.13" = type { %"class.WTF::VectorBufferBase.14" }
%"class.WTF::VectorBufferBase.14" = type { i16*, i32, i32 }
%"class.WTF::HashMap.17" = type { %"class.WTF::HashTable.18" }
%"class.WTF::HashTable.18" = type <{ %"struct.WTF::KeyValuePair.21"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.21" = type { i16, i16 }
%class.scoped_refptr.22 = type { %"class.blink::UnicodeRangeSet"* }
%"class.blink::UnicodeRangeSet" = type { %"class.WTF::RefCounted.23", %"class.WTF::Vector.25" }
%"class.WTF::RefCounted.23" = type { %"class.base::RefCounted.24" }
%"class.base::RefCounted.24" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.25" = type { %"class.WTF::VectorBuffer.26" }
%"class.WTF::VectorBuffer.26" = type { %"class.WTF::VectorBufferBase.27" }
%"class.WTF::VectorBufferBase.27" = type { %"struct.blink::UnicodeRange"*, i32, i32 }
%"struct.blink::UnicodeRange" = type { i32, i32 }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr, i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFontCache" = type { %"class.WTF::HashMap.41" }
%"class.WTF::HashMap.41" = type { %"class.WTF::HashTable.42" }
%"class.WTF::HashTable.42" = type <{ %"struct.WTF::KeyValuePair.30"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.30" = type { i64, %class.scoped_refptr.31 }
%class.scoped_refptr.31 = type { %"class.blink::HbFontCacheEntry"* }
%"class.blink::HbFontCacheEntry" = type { %"class.WTF::RefCounted.32", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.37" }
%"class.WTF::RefCounted.32" = type { %"class.base::RefCounted.33" }
%"class.base::RefCounted.33" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %struct.hb_font_t* }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.blink::HarfBuzzFontData"* }
%struct.hb_face_t = type opaque
%"struct.SkFontArguments::VariationPosition::Coordinate" = type { i32, float }
%struct.hb_variation_t = type { i32, float }
%"class.blink::FontGlobalContext" = type { %"class.blink::FontCache", %"class.std::__1::unique_ptr.286", %struct.hb_font_funcs_t*, %struct.hb_font_funcs_t*, %"class.std::__1::unique_ptr.292", %"class.WTF::LruCache", %"class.WTF::LruCache" }
%"class.blink::FontCache" = type <{ i8, [3 x i8], i32, %class.sk_sp.75, i16, i8, [5 x i8], %"class.blink::Persistent", %"class.WTF::HashMap.259", %"class.WTF::HashMap.264", %"class.blink::FontDataCache", %"class.blink::Persistent.284", float, [4 x i8] }>
%class.sk_sp.75 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::HeapHashSet"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashSet" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.76", i32, [4 x i8], %"class.std::__1::unique_ptr.214", %"class.std::__1::unique_ptr.214", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.230", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.248", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.255", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.120", %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.134", %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.194", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.112" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.112" = type { %"struct.std::__1::__atomic_base.113" }
%"struct.std::__1::__atomic_base.113" = type { %"struct.std::__1::__atomic_base.114" }
%"struct.std::__1::__atomic_base.114" = type { %"struct.std::__1::__cxx_atomic_impl.115" }
%"struct.std::__1::__cxx_atomic_impl.115" = type { %"struct.std::__1::__cxx_atomic_base_impl.116" }
%"struct.std::__1::__cxx_atomic_base_impl.116" = type { i64 }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.blink::Worklist.123"* }
%"class.blink::Worklist.123" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.112" }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::Worklist.130"* }
%"class.blink::Worklist.130" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.112" }
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.blink::Worklist.137"* }
%"class.blink::Worklist.137" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.112" }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.blink::Worklist.144"* }
%"class.blink::Worklist.144" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.112" }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::Worklist.151"* }
%"class.blink::Worklist.151" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.112" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::Worklist.158"* }
%"class.blink::Worklist.158" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.112" }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::Worklist.165"* }
%"class.blink::Worklist.165" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.112" }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.172", %"class.std::__1::__compressed_pair.181", %"class.std::__1::__compressed_pair.186", %"class.std::__1::__compressed_pair.188", [4 x i8] }>
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174", %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { i64 }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { float }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.197", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.206" }
%"class.WTF::Vector.206" = type { %"class.WTF::VectorBuffer.207" }
%"class.WTF::VectorBuffer.207" = type { %"class.WTF::VectorBufferBase.208" }
%"class.WTF::VectorBufferBase.208" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.222" }
%"class.WTF::VectorBuffer.222" = type { %"class.WTF::VectorBufferBase.223" }
%"class.WTF::VectorBufferBase.223" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.236" }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.123"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.130"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.137"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.144"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.151"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.303" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.254 }
%class.scoped_refptr.254 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.255" = type { %"struct.std::__1::__atomic_base.256" }
%"struct.std::__1::__atomic_base.256" = type { %"struct.std::__1::__cxx_atomic_impl.257" }
%"struct.std::__1::__cxx_atomic_impl.257" = type { %"struct.std::__1::__cxx_atomic_base_impl.258" }
%"struct.std::__1::__cxx_atomic_base_impl.258" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.WTF::HashMap.259" = type { %"class.WTF::HashTable.260" }
%"class.WTF::HashTable.260" = type <{ %"struct.WTF::KeyValuePair.263"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.263" = type opaque
%"class.WTF::HashMap.264" = type { %"class.WTF::HashTable.265" }
%"class.WTF::HashTable.265" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::FontDataCache" = type { %"class.WTF::HashMap.269", %"class.WTF::LinkedHashSet" }
%"class.WTF::HashMap.269" = type { %"class.WTF::HashTable.270" }
%"class.WTF::HashTable.270" = type <{ %"struct.WTF::KeyValuePair.273"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.273" = type opaque
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.274", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.274" = type { %"class.WTF::HashTable.275" }
%"class.WTF::HashTable.275" = type <{ %"struct.WTF::KeyValuePair.278"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.278" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.279", i32, i32 }
%"class.WTF::Vector.279" = type { %"class.WTF::VectorBuffer.280" }
%"class.WTF::VectorBuffer.280" = type { %"class.WTF::VectorBufferBase.281" }
%"class.WTF::VectorBufferBase.281" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::Persistent.284" = type { %"class.blink::PersistentBase.285" }
%"class.blink::PersistentBase.285" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.blink::HarfBuzzFontCache"* }
%struct.hb_font_funcs_t = type opaque
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.blink::FontUniqueNameLookup"* }
%"class.blink::FontUniqueNameLookup" = type opaque
%"class.WTF::LruCache" = type { %"class.WTF::HashMap.298", %"class.WTF::DoublyLinkedList", i64 }
%"class.WTF::HashMap.298" = type { %"class.WTF::HashTable.299" }
%"class.WTF::HashTable.299" = type <{ %"struct.WTF::KeyValuePair.302"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.302" = type opaque
%"class.WTF::DoublyLinkedList" = type { %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* }
%"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey" = type opaque
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%class.SkStreamAsset = type { %class.SkStreamSeekable }
%class.SkStreamSeekable = type { %class.SkStreamRewindable }
%class.SkStreamRewindable = type { %class.SkStream }
%class.SkStream = type { i32 (...)** }
%struct.hb_blob_t = type opaque
%struct.hb_set_t = type opaque
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.315, %class.scoped_refptr.323, %class.scoped_refptr.333, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.339 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.314 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.308 }
%class.scoped_refptr.308 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.309" }
%"struct.std::__1::atomic.309" = type { %"struct.std::__1::__atomic_base.310" }
%"struct.std::__1::__atomic_base.310" = type { %"struct.std::__1::__atomic_base.311" }
%"struct.std::__1::__atomic_base.311" = type { %"struct.std::__1::__cxx_atomic_impl.312" }
%"struct.std::__1::__cxx_atomic_impl.312" = type { %"struct.std::__1::__cxx_atomic_base_impl.313" }
%"struct.std::__1::__cxx_atomic_base_impl.313" = type { i32 }
%class.scoped_refptr.314 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.340", [4 x i8] }>
%"class.WTF::RefCounted.340" = type { %"class.base::RefCounted.341" }
%"class.base::RefCounted.341" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.315 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.321", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.316" }
%"class.WTF::Vector.316" = type { %"class.WTF::VectorBuffer.317" }
%"class.WTF::VectorBuffer.317" = type { %"class.WTF::VectorBufferBase.318" }
%"class.WTF::VectorBufferBase.318" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.321" = type { %"class.base::RefCounted.322" }
%"class.base::RefCounted.322" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.323 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.324", %"class.WTF::RefCounted.331", [4 x i8] }>
%"class.blink::FontSettings.324" = type { %"class.WTF::Vector.325" }
%"class.WTF::Vector.325" = type { %"class.WTF::VectorBuffer.326" }
%"class.WTF::VectorBuffer.326" = type { %"class.WTF::VectorBufferBase.327" }
%"class.WTF::VectorBufferBase.327" = type { %"class.blink::FontTagValuePair.328"*, i32, i32 }
%"class.blink::FontTagValuePair.328" = type { i32, float }
%"class.WTF::RefCounted.331" = type { %"class.base::RefCounted.332" }
%"class.base::RefCounted.332" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.333 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.334", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.336, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.334" = type { %"class.base::RefCounted.335" }
%"class.base::RefCounted.335" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.336 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.337", [4 x i8] }>
%"class.WTF::RefCounted.337" = type { %"class.base::RefCounted.338" }
%"class.base::RefCounted.338" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.339 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%"class.logging::CheckOpResult" = type { i8* }
%struct.hb_glyph_extents_t = type { i32, i32, i32, i32 }

$_ZN5blink16HarfBuzzFontData29UpdateFallbackMetricsAndScaleERKNS_16FontPlatformDataENS_12HarfBuzzFace23VerticalLayoutCallbacksE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN15SkFontArguments17VariationPosition10CoordinateEEEmm = comdat any

$_ZN5blink16HarfBuzzFontData12VerticalDataEv = comdat any

$_ZN13scoped_refptrIN5blink20OpenTypeVerticalDataEED2Ev = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairIm13scoped_refptrIN5blink16HbFontCacheEntryEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_S9_SG_EERmDnEENS_18HashTableAddResultISH_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairIm13scoped_refptrIN5blink16HbFontCacheEntryEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairIm13scoped_refptrIN5blink16HbFontCacheEntryEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSI_ = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairIm13scoped_refptrIN5blink16HbFontCacheEntryEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKm = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairIm13scoped_refptrIN5blink16HbFontCacheEntryEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS_18PartitionAllocatorEE4findERKm = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairIm13scoped_refptrIN5blink16HbFontCacheEntryEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS_18PartitionAllocatorEE5eraseEPKS6_ = comdat any

@.str = private unnamed_addr constant [73 x i8] c"../../third_party/blink/renderer/platform/fonts/shaping/harfbuzz_face.cc\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"typeface\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16HarfBuzzFontDataEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HarfBuzzFontData]\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN15SkFontArguments17VariationPosition10CoordinateEEEPKcv = private unnamed_addr constant [94 x i8] c"const char *WTF::GetStringWithTypeName() [T = SkFontArguments::VariationPosition::Coordinate]\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"hb_font_data\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.8 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIm13scoped_refptrIN5blink16HbFontCacheEntryEEEEEEPKcv = private unnamed_addr constant [121 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<unsigned long, scoped_refptr<blink::HbFontCacheEntry> >]\00", align 1

@_ZN5blink12HarfBuzzFaceC1EPNS_16FontPlatformDataEm = hidden unnamed_addr alias void (%"class.blink::HarfBuzzFace"*, %"class.blink::FontPlatformData"*, i64), void (%"class.blink::HarfBuzzFace"*, %"class.blink::FontPlatformData"*, i64)* @_ZN5blink12HarfBuzzFaceC2EPNS_16FontPlatformDataEm
@_ZN5blink12HarfBuzzFaceD1Ev = hidden unnamed_addr alias void (%"class.blink::HarfBuzzFace"*), void (%"class.blink::HarfBuzzFace"*)* @_ZN5blink12HarfBuzzFaceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12HarfBuzzFaceC2EPNS_16FontPlatformDataEm(%"class.blink::HarfBuzzFace"*, %"class.blink::FontPlatformData"*, i64) unnamed_addr #0 align 2 {
  %4 = alloca i8*, align 8
  %5 = getelementptr inbounds %"class.blink::HarfBuzzFace", %"class.blink::HarfBuzzFace"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds %"class.blink::HarfBuzzFace", %"class.blink::HarfBuzzFace"* %0, i64 0, i32 1
  store %"class.blink::FontPlatformData"* %1, %"class.blink::FontPlatformData"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::HarfBuzzFace", %"class.blink::HarfBuzzFace"* %0, i64 0, i32 2
  store i64 %2, i64* %7, align 8
  %8 = tail call %"class.blink::HarfBuzzFontCache"* @_ZN5blink17FontGlobalContext20GetHarfBuzzFontCacheEv() #7
  %9 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7
  store i8* null, i8** %4, align 8
  %10 = getelementptr inbounds %"class.blink::HarfBuzzFontCache", %"class.blink::HarfBuzzFontCache"* %8, i64 0, i32 0, i32 0
  %11 = call { %"struct.WTF::KeyValuePair.30"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairIm13scoped_refptrIN5blink16HbFontCacheEntryEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_S9_SG_EERmDnEENS_18HashTableAddResultISH_S6_EEOT0_OT1_(%"class.WTF::HashTable.42"* %10, i64* dereferenceable(8) %7, i8** nonnull dereferenceable(8) %4) #7
  %12 = extractvalue { %"struct.WTF::KeyValuePair.30"*, i8 } %11, 0
  %13 = extractvalue { %"struct.WTF::KeyValuePair.30"*, i8 } %11, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7
  %14 = and i8 %13, 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %76, label %16

16:                                               ; preds = %3
  %17 = call %struct.hb_face_t* @_ZN5blink12HarfBuzzFace10CreateFaceEv(%"class.blink::HarfBuzzFace"* %0)
  %18 = call %class.SkTypeface* @_ZNK5blink16FontPlatformData8TypefaceEv(%"class.blink::FontPlatformData"* %1) #7
  %19 = call %struct.hb_font_t* @hb_font_create(%struct.hb_face_t* %17) #7
  call void @hb_ot_font_set_funcs(%struct.hb_font_t* %19) #7
  %20 = call i32 @_ZNK10SkTypeface26getVariationDesignPositionEPN15SkFontArguments17VariationPosition10CoordinateEi(%class.SkTypeface* %18, %"struct.SkFontArguments::VariationPosition::Coordinate"* null, i32 0) #7
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %41

22:                                               ; preds = %16
  %23 = icmp ugt i32 %20, 4
  %24 = select i1 %23, i32 %20, i32 4
  %25 = zext i32 %24 to i64
  %26 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN15SkFontArguments17VariationPosition10CoordinateEEEmm(i64 %25) #7
  %27 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %26, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN15SkFontArguments17VariationPosition10CoordinateEEEPKcv, i64 0, i64 0)) #7
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast i8* %27 to %"struct.SkFontArguments::VariationPosition::Coordinate"*
  %30 = zext i32 %20 to i64
  %31 = getelementptr inbounds %"struct.SkFontArguments::VariationPosition::Coordinate", %"struct.SkFontArguments::VariationPosition::Coordinate"* %29, i64 %30
  %32 = ptrtoint %"struct.SkFontArguments::VariationPosition::Coordinate"* %31 to i64
  %33 = sub i64 %32, %28
  call void @llvm.memset.p0i8.i64(i8* align 4 %27, i8 0, i64 %33, i1 false) #7
  %34 = call i32 @_ZNK10SkTypeface26getVariationDesignPositionEPN15SkFontArguments17VariationPosition10CoordinateEi(%class.SkTypeface* %18, %"struct.SkFontArguments::VariationPosition::Coordinate"* %29, i32 %20) #7
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %22
  %37 = bitcast i8* %27 to %struct.hb_variation_t*
  call void @hb_font_set_variations(%struct.hb_font_t* %19, %struct.hb_variation_t* %37, i32 %20) #7
  br label %38

38:                                               ; preds = %36, %22
  %39 = icmp eq i8* %27, null
  br i1 %39, label %41, label %40, !prof !2

40:                                               ; preds = %38
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %27) #7
  br label %41

41:                                               ; preds = %40, %38, %16
  %42 = call %struct.hb_font_t* @hb_font_create_sub_font(%struct.hb_font_t* %19) #7
  %43 = call %"class.blink::HbFontCacheEntry"* @_ZN5blink16HbFontCacheEntry6CreateEP9hb_font_t(%struct.hb_font_t* %42) #7
  %44 = call %"class.blink::FontGlobalContext"* @_ZN5blink17FontGlobalContext3GetENS_14CreateIfNeededE(i32 1) #7
  %45 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %44, i64 0, i32 2
  %46 = load %struct.hb_font_funcs_t*, %struct.hb_font_funcs_t** %45, align 8
  %47 = icmp eq %struct.hb_font_funcs_t* %46, null
  br i1 %47, label %48, label %52

48:                                               ; preds = %41
  %49 = call %struct.hb_font_funcs_t* @hb_font_funcs_create() #7
  call void @hb_font_funcs_set_glyph_h_advance_func(%struct.hb_font_funcs_t* %49, i32 (%struct.hb_font_t*, i8*, i32, i8*)* nonnull @_ZN5blinkL33HarfBuzzGetGlyphHorizontalAdvanceEP9hb_font_tPvjS2_, i8* null, void (i8*)* null) #7
  call void @hb_font_funcs_set_glyph_h_advances_func(%struct.hb_font_funcs_t* %49, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)* nonnull @_ZN5blinkL34HarfBuzzGetGlyphHorizontalAdvancesEP9hb_font_tPvjPKjjPijS2_, i8* null, void (i8*)* null) #7
  call void @hb_font_funcs_set_variation_glyph_func(%struct.hb_font_funcs_t* %49, i32 (%struct.hb_font_t*, i8*, i32, i32, i32*, i8*)* nonnull @_ZN5blinkL16HarfBuzzGetGlyphEP9hb_font_tPvjjPjS2_, i8* null, void (i8*)* null) #7
  call void @hb_font_funcs_set_nominal_glyph_func(%struct.hb_font_funcs_t* %49, i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)* nonnull @_ZN5blinkL23HarfBuzzGetNominalGlyphEP9hb_font_tPvjPjS2_, i8* null, void (i8*)* null) #7
  call void @hb_font_funcs_set_glyph_v_advance_func(%struct.hb_font_funcs_t* %49, i32 (%struct.hb_font_t*, i8*, i32, i8*)* nonnull @_ZN5blinkL31HarfBuzzGetGlyphVerticalAdvanceEP9hb_font_tPvjS2_, i8* null, void (i8*)* null) #7
  call void @hb_font_funcs_set_glyph_v_origin_func(%struct.hb_font_funcs_t* %49, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32*, i8*)* nonnull @_ZN5blinkL30HarfBuzzGetGlyphVerticalOriginEP9hb_font_tPvjPiS3_S2_, i8* null, void (i8*)* null) #7
  call void @hb_font_funcs_set_glyph_extents_func(%struct.hb_font_funcs_t* %49, i32 (%struct.hb_font_t*, i8*, i32, %struct.hb_glyph_extents_t*, i8*)* nonnull @_ZN5blinkL23HarfBuzzGetGlyphExtentsEP9hb_font_tPvjP18hb_glyph_extents_tS2_, i8* null, void (i8*)* null) #7
  call void @hb_font_funcs_make_immutable(%struct.hb_font_funcs_t* %49) #7
  %50 = call %"class.blink::FontGlobalContext"* @_ZN5blink17FontGlobalContext3GetENS_14CreateIfNeededE(i32 1) #7
  %51 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %50, i64 0, i32 2
  store %struct.hb_font_funcs_t* %49, %struct.hb_font_funcs_t** %51, align 8
  br label %52

52:                                               ; preds = %48, %41
  %53 = phi %struct.hb_font_funcs_t* [ %46, %41 ], [ %49, %48 ]
  %54 = getelementptr inbounds %"class.blink::HbFontCacheEntry", %"class.blink::HbFontCacheEntry"* %43, i64 0, i32 2, i32 0, i32 0, i32 0
  %55 = bitcast %"struct.blink::HarfBuzzFontData"** %54 to i8**
  %56 = load i8*, i8** %55, align 8
  call void @hb_font_set_funcs(%struct.hb_font_t* %42, %struct.hb_font_funcs_t* %53, i8* %56, void (i8*)* null) #7
  %57 = icmp eq %struct.hb_font_t* %19, null
  br i1 %57, label %59, label %58

58:                                               ; preds = %52
  call void @hb_font_destroy(%struct.hb_font_t* nonnull %19) #7
  br label %59

59:                                               ; preds = %52, %58
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %12, i64 0, i32 1
  %61 = ptrtoint %"class.blink::HbFontCacheEntry"* %43 to i64
  %62 = bitcast %class.scoped_refptr.31* %60 to i64*
  %63 = getelementptr inbounds %class.scoped_refptr.31, %class.scoped_refptr.31* %60, i64 0, i32 0
  %64 = load %"class.blink::HbFontCacheEntry"*, %"class.blink::HbFontCacheEntry"** %63, align 8
  store i64 %61, i64* %62, align 8
  %65 = icmp eq %"class.blink::HbFontCacheEntry"* %64, null
  br i1 %65, label %73, label %66

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.blink::HbFontCacheEntry", %"class.blink::HbFontCacheEntry"* %64, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %67) #7
  %68 = getelementptr inbounds %"class.blink::HbFontCacheEntry", %"class.blink::HbFontCacheEntry"* %64, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %66
  call void @_ZN5blink16HbFontCacheEntryD1Ev(%"class.blink::HbFontCacheEntry"* nonnull %64) #7
  %72 = bitcast %"class.blink::HbFontCacheEntry"* %64 to i8*
  call void @free(i8* %72) #7
  br label %73

73:                                               ; preds = %59, %66, %71
  %74 = icmp eq %struct.hb_face_t* %17, null
  br i1 %74, label %76, label %75

75:                                               ; preds = %73
  call void @hb_face_destroy(%struct.hb_face_t* nonnull %17) #7
  br label %76

76:                                               ; preds = %75, %73, %3
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %12, i64 0, i32 1, i32 0
  %78 = load %"class.blink::HbFontCacheEntry"*, %"class.blink::HbFontCacheEntry"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::HbFontCacheEntry", %"class.blink::HbFontCacheEntry"* %78, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %79) #7
  %80 = load %"class.blink::HbFontCacheEntry"*, %"class.blink::HbFontCacheEntry"** %77, align 8
  %81 = getelementptr inbounds %"class.blink::HbFontCacheEntry", %"class.blink::HbFontCacheEntry"* %80, i64 0, i32 1, i32 0, i32 0, i32 0
  %82 = bitcast %struct.hb_font_t** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %"class.blink::HarfBuzzFace", %"class.blink::HarfBuzzFace"* %0, i64 0, i32 3
  %85 = bitcast %struct.hb_font_t** %84 to i64*
  store i64 %83, i64* %85, align 8
  %86 = load %"class.blink::HbFontCacheEntry"*, %"class.blink::HbFontCacheEntry"** %77, align 8
  %87 = getelementptr inbounds %"class.blink::HbFontCacheEntry", %"class.blink::HbFontCacheEntry"* %86, i64 0, i32 2, i32 0, i32 0, i32 0
  %88 = bitcast %"struct.blink::HarfBuzzFontData"** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds %"class.blink::HarfBuzzFace", %"class.blink::HarfBuzzFace"* %0, i64 0, i32 4
  %91 = bitcast %"struct.blink::HarfBuzzFontData"** %90 to i64*
  store i64 %89, i64* %91, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::HarfBuzzFontCache"* @_ZN5blink17FontGlobalContext20GetHarfBuzzFontCacheEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.hb_face_t* @_ZN5blink12HarfBuzzFace10CreateFaceEv(%"class.blink::HarfBuzzFace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.blink::HarfBuzzFace", %"class.blink::HarfBuzzFace"* %0, i64 0, i32 1
  %5 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %4, align 8
  %6 = tail call %class.SkTypeface* @_ZNK5blink16FontPlatformData8TypefaceEv(%"class.blink::FontPlatformData"* %5) #7
  %7 = icmp eq %class.SkTypeface* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str, i64 0, i64 0), i32 371, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)) #7
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7
  br label %11

11:                                               ; preds = %1, %8
  %12 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #7
  store i32 0, i32* %3, align 4
  %13 = call %class.SkStreamAsset* @_ZNK10SkTypeface10openStreamEPi(%class.SkTypeface* %6, i32* nonnull %3) #7
  %14 = icmp eq %class.SkStreamAsset* %13, null
  br i1 %14, label %45, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkStreamAsset, %class.SkStreamAsset* %13, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %class.SkStreamAsset* %13 to i8* (%class.SkStream*)***
  %18 = load i8* (%class.SkStream*)**, i8* (%class.SkStream*)*** %17, align 8
  %19 = getelementptr inbounds i8* (%class.SkStream*)*, i8* (%class.SkStream*)** %18, i64 12
  %20 = load i8* (%class.SkStream*)*, i8* (%class.SkStream*)** %19, align 8
  %21 = call i8* %20(%class.SkStream* %16) #7
  %22 = icmp eq i8* %21, null
  br i1 %22, label %45, label %23

23:                                               ; preds = %15
  %24 = load i8* (%class.SkStream*)**, i8* (%class.SkStream*)*** %17, align 8
  %25 = getelementptr inbounds i8* (%class.SkStream*)*, i8* (%class.SkStream*)** %24, i64 12
  %26 = load i8* (%class.SkStream*)*, i8* (%class.SkStream*)** %25, align 8
  %27 = call i8* %26(%class.SkStream* %16) #7
  %28 = bitcast %class.SkStreamAsset* %13 to i64 (%class.SkStreamAsset*)***
  %29 = load i64 (%class.SkStreamAsset*)**, i64 (%class.SkStreamAsset*)*** %28, align 8
  %30 = getelementptr inbounds i64 (%class.SkStreamAsset*)*, i64 (%class.SkStreamAsset*)** %29, i64 11
  %31 = load i64 (%class.SkStreamAsset*)*, i64 (%class.SkStreamAsset*)** %30, align 8
  %32 = call i64 %31(%class.SkStreamAsset* nonnull %13) #7
  %33 = icmp ult i64 %32, 4294967296
  br i1 %33, label %35, label %34, !prof !2

34:                                               ; preds = %23
  call void @llvm.trap() #7
  unreachable

35:                                               ; preds = %23
  %36 = trunc i64 %32 to i32
  %37 = bitcast %class.SkStreamAsset* %13 to i8*
  %38 = call %struct.hb_blob_t* @hb_blob_create(i8* %27, i32 %36, i32 1, i8* nonnull %37, void (i8*)* nonnull @_ZN5blinkL20DeleteTypefaceStreamEPv) #7
  %39 = load i32, i32* %3, align 4
  %40 = call %struct.hb_face_t* @hb_face_create(%struct.hb_blob_t* %38, i32 %39) #7
  %41 = icmp eq %struct.hb_blob_t* %38, null
  br i1 %41, label %43, label %42

42:                                               ; preds = %35
  call void @hb_blob_destroy(%struct.hb_blob_t* nonnull %38) #7
  br label %43

43:                                               ; preds = %42, %35
  %44 = icmp eq %struct.hb_face_t* %40, null
  br i1 %44, label %45, label %57

45:                                               ; preds = %11, %15, %43
  %46 = phi %class.SkStreamAsset* [ null, %43 ], [ %13, %15 ], [ null, %11 ]
  %47 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %4, align 8
  %48 = call %class.SkTypeface* @_ZNK5blink16FontPlatformData8TypefaceEv(%"class.blink::FontPlatformData"* %47) #7
  %49 = bitcast %class.SkTypeface* %48 to i8*
  %50 = call %struct.hb_face_t* @hb_face_create_for_tables(%struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)* nonnull @_ZN5blinkL20HarfBuzzSkiaGetTableEP9hb_face_tjPv, i8* %49, void (i8*)* null) #7
  %51 = icmp eq %class.SkStreamAsset* %46, null
  br i1 %51, label %57, label %52

52:                                               ; preds = %45
  %53 = bitcast %class.SkStreamAsset* %46 to void (%class.SkStreamAsset*)***
  %54 = load void (%class.SkStreamAsset*)**, void (%class.SkStreamAsset*)*** %53, align 8
  %55 = getelementptr inbounds void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %54, i64 1
  %56 = load void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %55, align 8
  call void %56(%class.SkStreamAsset* nonnull %46) #7
  br label %57

57:                                               ; preds = %43, %45, %52
  %58 = phi %struct.hb_face_t* [ %50, %45 ], [ %50, %52 ], [ %40, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #7
  ret %struct.hb_face_t* %58
}

declare %class.SkTypeface* @_ZNK5blink16FontPlatformData8TypefaceEv(%"class.blink::FontPlatformData"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12HarfBuzzFaceD2Ev(%"class.blink::HarfBuzzFace"*) unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::HarfBuzzFontCache"* @_ZN5blink17FontGlobalContext20GetHarfBuzzFontCacheEv() #7
  %3 = getelementptr inbounds %"class.blink::HarfBuzzFace", %"class.blink::HarfBuzzFace"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.blink::HarfBuzzFontCache", %"class.blink::HarfBuzzFontCache"* %2, i64 0, i32 0, i32 0
  %5 = tail call { %"struct.WTF::KeyValuePair.30"*, %"struct.WTF::KeyValuePair.30"* } @_ZN3WTF9HashTableImNS_12KeyValuePairIm13scoped_refptrIN5blink16HbFontCacheEntryEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS_18PartitionAllocatorEE4findERKm(%"class.WTF::HashTable.42"* %4, i64* dereferenceable(8) %3) #7
  %6 = extractvalue { %"struct.WTF::KeyValuePair.30"*, %"struct.WTF::KeyValuePair.30"* } %5, 0
  %7 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %6, i64 0, i32 1, i32 0
  %8 = load %"class.blink::HbFontCacheEntry"*, %"class.blink::HbFontCacheEntry"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::HbFontCacheEntry", %"class.blink::HbFontCacheEntry"* %8, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %9) #7
  %10 = getelementptr inbounds %"class.blink::HbFontCacheEntry", %"class.blink::HbFontCacheEntry"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp ne i32 %11, 0
  %13 = icmp eq %"class.blink::HbFontCacheEntry"* %8, null
  %14 = or i1 %13, %12
  br i1 %14, label %17, label %15

15:                                               ; preds = %1
  tail call void @_ZN5blink16HbFontCacheEntryD1Ev(%"class.blink::HbFontCacheEntry"* nonnull %8) #7
  %16 = bitcast %"class.blink::HbFontCacheEntry"* %8 to i8*
  tail call void @free(i8* %16) #7
  br label %17

17:                                               ; preds = %1, %15
  %18 = load %"class.blink::HbFontCacheEntry"*, %"class.blink::HbFontCacheEntry"** %7, align 8
  %19 = getelementptr inbounds %"class.blink::HbFontCacheEntry", %"class.blink::HbFontCacheEntry"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %33

22:                                               ; preds = %17
  %23 = tail call { %"struct.WTF::KeyValuePair.30"*, %"struct.WTF::KeyValuePair.30"* } @_ZN3WTF9HashTableImNS_12KeyValuePairIm13scoped_refptrIN5blink16HbFontCacheEntryEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS_18PartitionAllocatorEE4findERKm(%"class.WTF::HashTable.42"* %4, i64* dereferenceable(8) %3) #7
  %24 = extractvalue { %"struct.WTF::KeyValuePair.30"*, %"struct.WTF::KeyValuePair.30"* } %23, 0
  %25 = getelementptr inbounds %"class.blink::HarfBuzzFontCache", %"class.blink::HarfBuzzFontCache"* %2, i64 0, i32 0, i32 0, i32 0
  %26 = load %"struct.WTF::KeyValuePair.30"*, %"struct.WTF::KeyValuePair.30"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::HarfBuzzFontCache", %"class.blink::HarfBuzzFontCache"* %2, i64 0, i32 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %26, i64 %29
  %31 = icmp eq %"struct.WTF::KeyValuePair.30"* %30, %24
  br i1 %31, label %33, label %32

32:                                               ; preds = %22
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairIm13scoped_refptrIN5blink16HbFontCacheEntryEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS_18PartitionAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable.42"* %4, %"struct.WTF::KeyValuePair.30"* %24) #7
  br label %33

33:                                               ; preds = %32, %22, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12HarfBuzzFace28HasSpaceInLigaturesOrKerningEj(%"class.blink::HarfBuzzFace"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #7
  store i32 -1, i32* %3, align 4
  %5 = tail call %struct.hb_set_t* @hb_set_create() #7
  %6 = and i32 %1, 1
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %8, label %40

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::HarfBuzzFace", %"class.blink::HarfBuzzFace"* %0, i64 0, i32 4
  %10 = load %"struct.blink::HarfBuzzFontData"*, %"struct.blink::HarfBuzzFontData"** %9, align 8
  %11 = getelementptr inbounds %"struct.blink::HarfBuzzFontData", %"struct.blink::HarfBuzzFontData"* %10, i64 0, i32 4
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %40

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::HarfBuzzFace", %"class.blink::HarfBuzzFace"* %0, i64 0, i32 3
  %16 = load %struct.hb_font_t*, %struct.hb_font_t** %15, align 8
  %17 = call i32 @hb_font_get_nominal_glyph(%struct.hb_font_t* %16, i32 32, i32* nonnull %3) #7
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %96, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::HarfBuzzFace", %"class.blink::HarfBuzzFace"* %0, i64 0, i32 3
  %21 = load %struct.hb_font_t*, %struct.hb_font_t** %20, align 8
  %22 = call %struct.hb_face_t* @hb_font_get_face(%struct.hb_font_t* %21) #7
  %23 = call i32 @hb_ot_layout_has_positioning(%struct.hb_face_t* %22) #7
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %36, label %25

25:                                               ; preds = %19
  %26 = load i32, i32* %3, align 4
  %27 = call i32 @hb_ot_layout_table_get_lookup_count(%struct.hb_face_t* %22, i32 1196445523) #7
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %36, label %31

29:                                               ; preds = %31
  %30 = icmp eq i32 %35, %27
  br i1 %30, label %36, label %31

31:                                               ; preds = %25, %29
  %32 = phi i32 [ %35, %29 ], [ 0, %25 ]
  call void @hb_ot_layout_lookup_collect_glyphs(%struct.hb_face_t* %22, i32 1196445523, i32 %32, %struct.hb_set_t* %5, %struct.hb_set_t* %5, %struct.hb_set_t* %5, %struct.hb_set_t* null) #7
  %33 = call i32 @hb_set_has(%struct.hb_set_t* %5, i32 %26) #7
  %34 = icmp eq i32 %33, 0
  %35 = add nuw i32 %32, 1
  br i1 %34, label %29, label %36

36:                                               ; preds = %29, %31, %25, %19
  %37 = phi i32 [ 2, %19 ], [ 2, %25 ], [ 2, %29 ], [ 1, %31 ]
  %38 = load %"struct.blink::HarfBuzzFontData"*, %"struct.blink::HarfBuzzFontData"** %9, align 8
  %39 = getelementptr inbounds %"struct.blink::HarfBuzzFontData", %"struct.blink::HarfBuzzFontData"* %38, i64 0, i32 4
  store i32 %37, i32* %39, align 4
  br label %40

40:                                               ; preds = %36, %8, %2
  call void @hb_set_clear(%struct.hb_set_t* %5) #7
  %41 = and i32 %1, 2
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %78

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.blink::HarfBuzzFace", %"class.blink::HarfBuzzFace"* %0, i64 0, i32 4
  %45 = load %"struct.blink::HarfBuzzFontData"*, %"struct.blink::HarfBuzzFontData"** %44, align 8
  %46 = getelementptr inbounds %"struct.blink::HarfBuzzFontData", %"struct.blink::HarfBuzzFontData"* %45, i64 0, i32 5
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %78

49:                                               ; preds = %43
  %50 = load i32, i32* %3, align 4
  %51 = icmp eq i32 %50, -1
  br i1 %51, label %52, label %57

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.blink::HarfBuzzFace", %"class.blink::HarfBuzzFace"* %0, i64 0, i32 3
  %54 = load %struct.hb_font_t*, %struct.hb_font_t** %53, align 8
  %55 = call i32 @hb_font_get_nominal_glyph(%struct.hb_font_t* %54, i32 32, i32* nonnull %3) #7
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %96, label %57

57:                                               ; preds = %52, %49
  %58 = getelementptr inbounds %"class.blink::HarfBuzzFace", %"class.blink::HarfBuzzFace"* %0, i64 0, i32 3
  %59 = load %struct.hb_font_t*, %struct.hb_font_t** %58, align 8
  %60 = call %struct.hb_face_t* @hb_font_get_face(%struct.hb_font_t* %59) #7
  %61 = call i32 @hb_ot_layout_has_substitution(%struct.hb_face_t* %60) #7
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %74, label %63

63:                                               ; preds = %57
  %64 = load i32, i32* %3, align 4
  %65 = call i32 @hb_ot_layout_table_get_lookup_count(%struct.hb_face_t* %60, i32 1196643650) #7
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %74, label %69

67:                                               ; preds = %69
  %68 = icmp eq i32 %73, %65
  br i1 %68, label %74, label %69

69:                                               ; preds = %63, %67
  %70 = phi i32 [ %73, %67 ], [ 0, %63 ]
  call void @hb_ot_layout_lookup_collect_glyphs(%struct.hb_face_t* %60, i32 1196643650, i32 %70, %struct.hb_set_t* %5, %struct.hb_set_t* %5, %struct.hb_set_t* %5, %struct.hb_set_t* null) #7
  %71 = call i32 @hb_set_has(%struct.hb_set_t* %5, i32 %64) #7
  %72 = icmp eq i32 %71, 0
  %73 = add nuw i32 %70, 1
  br i1 %72, label %67, label %74

74:                                               ; preds = %67, %69, %63, %57
  %75 = phi i32 [ 2, %57 ], [ 2, %63 ], [ 2, %67 ], [ 1, %69 ]
  %76 = load %"struct.blink::HarfBuzzFontData"*, %"struct.blink::HarfBuzzFontData"** %44, align 8
  %77 = getelementptr inbounds %"struct.blink::HarfBuzzFontData", %"struct.blink::HarfBuzzFontData"* %76, i64 0, i32 5
  store i32 %75, i32* %77, align 8
  br label %78

78:                                               ; preds = %74, %43, %40
  br i1 %7, label %79, label %87

79:                                               ; preds = %78
  %80 = getelementptr inbounds %"class.blink::HarfBuzzFace", %"class.blink::HarfBuzzFace"* %0, i64 0, i32 4
  %81 = load %"struct.blink::HarfBuzzFontData"*, %"struct.blink::HarfBuzzFontData"** %80, align 8
  %82 = getelementptr inbounds %"struct.blink::HarfBuzzFontData", %"struct.blink::HarfBuzzFontData"* %81, i64 0, i32 4
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, 1
  %85 = xor i1 %42, true
  %86 = or i1 %84, %85
  br i1 %86, label %96, label %91

87:                                               ; preds = %78
  br i1 %42, label %88, label %96

88:                                               ; preds = %87
  %89 = getelementptr inbounds %"class.blink::HarfBuzzFace", %"class.blink::HarfBuzzFace"* %0, i64 0, i32 4
  %90 = load %"struct.blink::HarfBuzzFontData"*, %"struct.blink::HarfBuzzFontData"** %89, align 8
  br label %91

91:                                               ; preds = %88, %79
  %92 = phi %"struct.blink::HarfBuzzFontData"* [ %90, %88 ], [ %81, %79 ]
  %93 = getelementptr inbounds %"struct.blink::HarfBuzzFontData", %"struct.blink::HarfBuzzFontData"* %92, i64 0, i32 5
  %94 = load i32, i32* %93, align 8
  %95 = icmp eq i32 %94, 1
  br label %96

96:                                               ; preds = %14, %52, %91, %87, %79
  %97 = phi i1 [ false, %14 ], [ false, %52 ], [ %84, %79 ], [ false, %87 ], [ %95, %91 ]
  %98 = icmp eq %struct.hb_set_t* %5, null
  br i1 %98, label %100, label %99

99:                                               ; preds = %96
  call void @hb_set_destroy(%struct.hb_set_t* nonnull %5) #7
  br label %100

100:                                              ; preds = %96, %99
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #7
  ret i1 %97
}

declare %struct.hb_set_t* @hb_set_create() local_unnamed_addr #2

declare %struct.hb_face_t* @hb_font_get_face(%struct.hb_font_t*) local_unnamed_addr #2

declare i32 @hb_ot_layout_has_positioning(%struct.hb_face_t*) local_unnamed_addr #2

declare void @hb_set_clear(%struct.hb_set_t*) local_unnamed_addr #2

declare i32 @hb_ot_layout_has_substitution(%struct.hb_face_t*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink12HarfBuzzFace23UnitsPerEmFromHeadTableEv(%"class.blink::HarfBuzzFace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HarfBuzzFace", %"class.blink::HarfBuzzFace"* %0, i64 0, i32 3
  %3 = load %struct.hb_font_t*, %struct.hb_font_t** %2, align 8
  %4 = tail call %struct.hb_face_t* @hb_font_get_face(%struct.hb_font_t* %3) #7
  %5 = tail call i32 @hb_face_get_upem(%struct.hb_face_t* %4) #7
  ret i32 %5
}

declare i32 @hb_face_get_upem(%struct.hb_face_t*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink12HarfBuzzFace22ShouldSubpixelPositionEv(%"class.blink::HarfBuzzFace"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::HarfBuzzFace", %"class.blink::HarfBuzzFace"* %0, i64 0, i32 4
  %3 = load %"struct.blink::HarfBuzzFontData"*, %"struct.blink::HarfBuzzFontData"** %2, align 8
  %4 = getelementptr inbounds %"struct.blink::HarfBuzzFontData", %"struct.blink::HarfBuzzFontData"* %3, i64 0, i32 0, i32 4
  %5 = load i8, i8* %4, align 4
  %6 = and i8 %5, 4
  %7 = icmp ne i8 %6, 0
  ret i1 %7
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare %class.SkStreamAsset* @_ZNK10SkTypeface10openStreamEPi(%class.SkTypeface*, i32*) local_unnamed_addr #2

declare %struct.hb_blob_t* @hb_blob_create(i8*, i32, i32, i8*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blinkL20DeleteTypefaceStreamEPv(i8*) #0 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = bitcast i8* %0 to %class.SkStreamAsset*
  %5 = bitcast i8* %0 to void (%class.SkStreamAsset*)***
  %6 = load void (%class.SkStreamAsset*)**, void (%class.SkStreamAsset*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %6, i64 1
  %8 = load void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %7, align 8
  tail call void %8(%class.SkStreamAsset* nonnull %4) #7
  br label %9

9:                                                ; preds = %3, %1
  ret void
}

declare %struct.hb_face_t* @hb_face_create(%struct.hb_blob_t*, i32) local_unnamed_addr #2

declare %struct.hb_face_t* @hb_face_create_for_tables(%struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)*, i8*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal %struct.hb_blob_t* @_ZN5blinkL20HarfBuzzSkiaGetTableEP9hb_face_tjPv(%struct.hb_face_t* nocapture readnone, i32, i8*) #0 {
  %4 = bitcast i8* %2 to %class.SkTypeface*
  %5 = tail call i64 @_ZNK10SkTypeface12getTableSizeEj(%class.SkTypeface* %4, i32 %1) #7
  %6 = icmp ult i64 %5, 4294967296
  br i1 %6, label %8, label %7, !prof !2

7:                                                ; preds = %3
  tail call void @llvm.trap() #7
  unreachable

8:                                                ; preds = %3
  %9 = trunc i64 %5 to i32
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %21, label %11

11:                                               ; preds = %8
  %12 = and i64 %5, 4294967295
  %13 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 %12, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16HarfBuzzFontDataEEEPKcv, i64 0, i64 0)) #7
  %14 = icmp eq i8* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = tail call i64 @_ZNK10SkTypeface12getTableDataEjmmPv(%class.SkTypeface* %4, i32 %1, i64 0, i64 %12, i8* nonnull %13) #7
  %17 = icmp eq i64 %16, %12
  br i1 %17, label %19, label %18

18:                                               ; preds = %15
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %13) #7
  br label %21

19:                                               ; preds = %15
  %20 = tail call %struct.hb_blob_t* @hb_blob_create(i8* nonnull %13, i32 %9, i32 2, i8* nonnull %13, void (i8*)* nonnull @_ZN3WTF10Partitions8FastFreeEPv) #7
  br label %21

21:                                               ; preds = %11, %19, %18, %8
  %22 = phi %struct.hb_blob_t* [ null, %8 ], [ null, %11 ], [ null, %18 ], [ %20, %19 ]
  ret %struct.hb_blob_t* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.hb_font_t* @_ZNK5blink12HarfBuzzFace13GetScaledFontE13scoped_refptrINS_15UnicodeRangeSetEENS0_23VerticalLayoutCallbacksE(%"class.blink::HarfBuzzFace"* nocapture readonly, %"class.blink::UnicodeRangeSet"*, i32) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.blink::UnicodeRangeSet"* %1 to i64
  %5 = getelementptr inbounds %"class.blink::HarfBuzzFace", %"class.blink::HarfBuzzFace"* %0, i64 0, i32 4
  %6 = load %"struct.blink::HarfBuzzFontData"*, %"struct.blink::HarfBuzzFontData"** %5, align 8
  %7 = getelementptr inbounds %"struct.blink::HarfBuzzFontData", %"struct.blink::HarfBuzzFontData"* %6, i64 0, i32 7
  %8 = bitcast %class.scoped_refptr.22* %7 to i64*
  %9 = getelementptr inbounds %class.scoped_refptr.22, %class.scoped_refptr.22* %7, i64 0, i32 0
  %10 = load %"class.blink::UnicodeRangeSet"*, %"class.blink::UnicodeRangeSet"** %9, align 8
  store i64 %4, i64* %8, align 8
  %11 = icmp eq %"class.blink::UnicodeRangeSet"* %10, null
  br i1 %11, label %32, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::UnicodeRangeSet", %"class.blink::UnicodeRangeSet"* %10, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::UnicodeRangeSet", %"class.blink::UnicodeRangeSet"* %10, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %14) #7
  %15 = getelementptr inbounds %"class.blink::UnicodeRangeSet", %"class.blink::UnicodeRangeSet"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %32

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.base::RefCounted.24", %"class.base::RefCounted.24"* %13, i64 2
  %20 = bitcast %"class.base::RefCounted.24"* %19 to %"struct.blink::UnicodeRange"**
  %21 = load %"struct.blink::UnicodeRange"*, %"struct.blink::UnicodeRange"** %20, align 8
  %22 = icmp eq %"struct.blink::UnicodeRange"* %21, null
  %23 = bitcast %"struct.blink::UnicodeRange"* %21 to i8*
  br i1 %22, label %30, label %24, !prof !2

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.base::RefCounted.24", %"class.base::RefCounted.24"* %13, i64 5, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %29, label %28, !prof !3

28:                                               ; preds = %24
  store i32 0, i32* %25, align 4
  br label %29

29:                                               ; preds = %28, %24
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %23) #7
  br label %30

30:                                               ; preds = %29, %18
  %31 = bitcast %"class.blink::UnicodeRangeSet"* %10 to i8*
  tail call void @free(i8* %31) #7
  br label %32

32:                                               ; preds = %30, %12, %3
  %33 = load %"struct.blink::HarfBuzzFontData"*, %"struct.blink::HarfBuzzFontData"** %5, align 8
  %34 = getelementptr inbounds %"class.blink::HarfBuzzFace", %"class.blink::HarfBuzzFace"* %0, i64 0, i32 1
  %35 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %34, align 8
  tail call void @_ZN5blink16HarfBuzzFontData29UpdateFallbackMetricsAndScaleERKNS_16FontPlatformDataENS_12HarfBuzzFace23VerticalLayoutCallbacksE(%"struct.blink::HarfBuzzFontData"* %33, %"class.blink::FontPlatformData"* dereferenceable(72) %35, i32 %2)
  %36 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %34, align 8
  %37 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %36, i64 0, i32 2
  %38 = load float, float* %37, align 8
  %39 = tail call i32 @_ZN5blink28SkiaScalarToHarfBuzzPositionEf(float %38) #7
  %40 = getelementptr inbounds %"class.blink::HarfBuzzFace", %"class.blink::HarfBuzzFace"* %0, i64 0, i32 3
  %41 = load %struct.hb_font_t*, %struct.hb_font_t** %40, align 8
  tail call void @hb_font_set_scale(%struct.hb_font_t* %41, i32 %39, i32 %39) #7
  %42 = load %struct.hb_font_t*, %struct.hb_font_t** %40, align 8
  %43 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %34, align 8
  %44 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %43, i64 0, i32 2
  %45 = load float, float* %44, align 8
  tail call void @hb_font_set_ptem(%struct.hb_font_t* %42, float %45) #7
  %46 = load %struct.hb_font_t*, %struct.hb_font_t** %40, align 8
  ret %struct.hb_font_t* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16HarfBuzzFontData29UpdateFallbackMetricsAndScaleERKNS_16FontPlatformDataENS_12HarfBuzzFace23VerticalLayoutCallbacksE(%"struct.blink::HarfBuzzFontData"*, %"class.blink::FontPlatformData"* dereferenceable(72), i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca float, align 4
  %5 = alloca float, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %class.SkFont, align 8
  %9 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #7
  store float 0.000000e+00, float* %4, align 4
  %10 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #7
  store float 0.000000e+00, float* %5, align 4
  %11 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #7
  store i32 0, i32* %6, align 4
  %12 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #7
  store i32 0, i32* %7, align 4
  %13 = bitcast %class.SkFont* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #7
  call void @_ZN6SkFontC1Ev(%class.SkFont* nonnull %8) #7
  %14 = getelementptr inbounds %"struct.blink::HarfBuzzFontData", %"struct.blink::HarfBuzzFontData"* %0, i64 0, i32 0
  %15 = getelementptr inbounds %class.SkFont, %class.SkFont* %8, i64 0, i32 0, i32 0
  %16 = bitcast %class.SkFont* %8 to i64*
  %17 = load i64, i64* %16, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %15, align 8
  %18 = getelementptr inbounds %"struct.blink::HarfBuzzFontData", %"struct.blink::HarfBuzzFontData"* %0, i64 0, i32 0, i32 0, i32 0
  %19 = load %class.SkTypeface*, %class.SkTypeface** %18, align 8
  %20 = bitcast %"struct.blink::HarfBuzzFontData"* %0 to i64*
  store i64 %17, i64* %20, align 8
  %21 = icmp eq %class.SkTypeface* %19, null
  br i1 %21, label %32, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 -1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %32

26:                                               ; preds = %22
  %27 = bitcast %class.SkTypeface* %19 to %class.SkRefCntBase*
  %28 = bitcast %class.SkTypeface* %19 to void (%class.SkRefCntBase*)***
  %29 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %28, align 8
  %30 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %29, i64 2
  %31 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %30, align 8
  call void %31(%class.SkRefCntBase* nonnull %27) #7
  br label %32

32:                                               ; preds = %3, %22, %26
  %33 = getelementptr inbounds %"struct.blink::HarfBuzzFontData", %"struct.blink::HarfBuzzFontData"* %0, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds %class.SkFont, %class.SkFont* %8, i64 0, i32 1
  %35 = bitcast float* %33 to i8*
  %36 = bitcast float* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 15, i1 false) #7
  %37 = load %class.SkTypeface*, %class.SkTypeface** %15, align 8
  %38 = icmp eq %class.SkTypeface* %37, null
  br i1 %38, label %49, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %37, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 -1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %49

43:                                               ; preds = %39
  %44 = bitcast %class.SkTypeface* %37 to %class.SkRefCntBase*
  %45 = bitcast %class.SkTypeface* %37 to void (%class.SkRefCntBase*)***
  %46 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %45, align 8
  %47 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %46, i64 2
  %48 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %47, align 8
  call void %48(%class.SkRefCntBase* nonnull %44) #7
  br label %49

49:                                               ; preds = %32, %39, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #7
  call void @_ZNK5blink16FontPlatformData11SetupSkFontEP6SkFontfPKNS_15FontDescriptionE(%"class.blink::FontPlatformData"* %1, %class.SkFont* %14, float 1.000000e+00, %"class.blink::FontDescription"* null) #7
  %50 = icmp eq i32 %2, 0
  br i1 %50, label %51, label %74, !prof !3

51:                                               ; preds = %49
  call void @_ZN5blink11FontMetrics22AscentDescentWithHacksERfS1_RjS2_RKNS_16FontPlatformDataERK6SkFontbN4absl8optionalIfEESB_(float* nonnull dereferenceable(4) %4, float* nonnull dereferenceable(4) %5, i32* nonnull dereferenceable(4) %6, i32* nonnull dereferenceable(4) %7, %"class.blink::FontPlatformData"* dereferenceable(72) %1, %class.SkFont* dereferenceable(24) %14, i1 zeroext false, i64 0, i64 0) #7
  %52 = bitcast float* %4 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"struct.blink::HarfBuzzFontData", %"struct.blink::HarfBuzzFontData"* %0, i64 0, i32 2
  %55 = bitcast float* %54 to i32*
  store i32 %53, i32* %55, align 4
  %56 = bitcast i32 %53 to float
  %57 = call i64 @lroundf(float %56) #7
  %58 = load float, float* %5, align 4
  %59 = call i64 @lroundf(float %58) #7
  %60 = add nsw i64 %59, %57
  %61 = sitofp i64 %60 to float
  %62 = getelementptr inbounds %"struct.blink::HarfBuzzFontData", %"struct.blink::HarfBuzzFontData"* %0, i64 0, i32 3
  store float %61, float* %62, align 8
  %63 = call %"class.blink::HarfBuzzFace"* @_ZNK5blink16FontPlatformData15GetHarfBuzzFaceEv(%"class.blink::FontPlatformData"* %1) #7
  %64 = getelementptr inbounds %"class.blink::HarfBuzzFace", %"class.blink::HarfBuzzFace"* %63, i64 0, i32 3
  %65 = load %struct.hb_font_t*, %struct.hb_font_t** %64, align 8
  %66 = call %struct.hb_face_t* @hb_font_get_face(%struct.hb_font_t* %65) #7
  %67 = call i32 @hb_face_get_upem(%struct.hb_face_t* %66) #7
  %68 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 2
  %69 = load float, float* %68, align 8
  %70 = icmp eq i32 %67, 0
  %71 = select i1 %70, i32 1, i32 %67
  %72 = sitofp i32 %71 to float
  %73 = fdiv float %69, %72
  br label %77

74:                                               ; preds = %49
  %75 = getelementptr inbounds %"struct.blink::HarfBuzzFontData", %"struct.blink::HarfBuzzFontData"* %0, i64 0, i32 2
  store float 0x41F0000000000000, float* %75, align 4
  %76 = getelementptr inbounds %"struct.blink::HarfBuzzFontData", %"struct.blink::HarfBuzzFontData"* %0, i64 0, i32 3
  store float 0x41F0000000000000, float* %76, align 8
  br label %77

77:                                               ; preds = %74, %51
  %78 = phi float [ 0x41F0000000000000, %74 ], [ %73, %51 ]
  %79 = getelementptr inbounds %"struct.blink::HarfBuzzFontData", %"struct.blink::HarfBuzzFontData"* %0, i64 0, i32 1
  store float %78, float* %79, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #7
  ret void
}

declare i32 @_ZN5blink28SkiaScalarToHarfBuzzPositionEf(float) local_unnamed_addr #2

declare void @hb_font_set_scale(%struct.hb_font_t*, i32, i32) local_unnamed_addr #2

declare void @hb_font_set_ptem(%struct.hb_font_t*, float) local_unnamed_addr #2

declare i32 @hb_font_get_nominal_glyph(%struct.hb_font_t*, i32, i32*) local_unnamed_addr #2

declare i32 @hb_ot_layout_table_get_lookup_count(%struct.hb_face_t*, i32) local_unnamed_addr #2

declare void @hb_ot_layout_lookup_collect_glyphs(%struct.hb_face_t*, i32, i32, %struct.hb_set_t*, %struct.hb_set_t*, %struct.hb_set_t*, %struct.hb_set_t*) local_unnamed_addr #2

declare i32 @hb_set_has(%struct.hb_set_t*, i32) local_unnamed_addr #2

declare i64 @_ZNK10SkTypeface12getTableSizeEj(%class.SkTypeface*, i32) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i64 @_ZNK10SkTypeface12getTableDataEjmmPv(%class.SkTypeface*, i32, i64, i64, i8*) local_unnamed_addr #2

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) #2

declare %struct.hb_font_t* @hb_font_create(%struct.hb_face_t*) local_unnamed_addr #2

declare void @hb_ot_font_set_funcs(%struct.hb_font_t*) local_unnamed_addr #2

declare i32 @_ZNK10SkTypeface26getVariationDesignPositionEPN15SkFontArguments17VariationPosition10CoordinateEi(%class.SkTypeface*, %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32) local_unnamed_addr #2

declare void @hb_font_set_variations(%struct.hb_font_t*, %struct.hb_variation_t*, i32) local_unnamed_addr #2

declare %struct.hb_font_t* @hb_font_create_sub_font(%struct.hb_font_t*) local_unnamed_addr #2

declare %"class.blink::HbFontCacheEntry"* @_ZN5blink16HbFontCacheEntry6CreateEP9hb_font_t(%struct.hb_font_t*) local_unnamed_addr #2

declare void @hb_font_set_funcs(%struct.hb_font_t*, %struct.hb_font_funcs_t*, i8*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN15SkFontArguments17VariationPosition10CoordinateEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.blink::FontGlobalContext"* @_ZN5blink17FontGlobalContext3GetENS_14CreateIfNeededE(i32) local_unnamed_addr #2

declare %struct.hb_font_funcs_t* @hb_font_funcs_create() local_unnamed_addr #2

declare void @hb_font_funcs_set_glyph_h_advance_func(%struct.hb_font_funcs_t*, i32 (%struct.hb_font_t*, i8*, i32, i8*)*, i8*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5blinkL33HarfBuzzGetGlyphHorizontalAdvanceEP9hb_font_tPvjS2_(%struct.hb_font_t* nocapture readnone, i8*, i32, i8* nocapture readnone) #0 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #7
  store i32 0, i32* %5, align 4
  %7 = bitcast i8* %1 to %class.SkFont*
  call void @_ZN5blink30SkFontGetGlyphWidthForHarfBuzzERK6SkFontjPi(%class.SkFont* dereferenceable(24) %7, i32 %2, i32* nonnull %5) #7
  %8 = load i32, i32* %5, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #7
  ret i32 %8
}

declare void @hb_font_funcs_set_glyph_h_advances_func(%struct.hb_font_funcs_t*, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, i8*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blinkL34HarfBuzzGetGlyphHorizontalAdvancesEP9hb_font_tPvjPKjjPijS2_(%struct.hb_font_t* nocapture readnone, i8*, i32, i32*, i32, i32*, i32, i8* nocapture readnone) #0 {
  %9 = bitcast i8* %1 to %class.SkFont*
  tail call void @_ZN5blink30SkFontGetGlyphWidthForHarfBuzzERK6SkFontjPKjjPij(%class.SkFont* dereferenceable(24) %9, i32 %2, i32* %3, i32 %4, i32* %5, i32 %6) #7
  ret void
}

declare void @hb_font_funcs_set_variation_glyph_func(%struct.hb_font_funcs_t*, i32 (%struct.hb_font_t*, i8*, i32, i32, i32*, i8*)*, i8*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5blinkL16HarfBuzzGetGlyphEP9hb_font_tPvjjPjS2_(%struct.hb_font_t*, i8* readonly, i32, i32, i32*, i8* nocapture readnone) #0 {
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = icmp eq i8* %1, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %6
  %10 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str, i64 0, i64 0), i32 124, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0)) #7
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #7
  br label %12

12:                                               ; preds = %6, %9
  %13 = getelementptr inbounds i8, i8* %1, i64 56
  %14 = bitcast i8* %13 to %"class.blink::UnicodeRangeSet"**
  %15 = load %"class.blink::UnicodeRangeSet"*, %"class.blink::UnicodeRangeSet"** %14, align 8
  %16 = icmp eq %"class.blink::UnicodeRangeSet"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = call zeroext i1 @_ZNK5blink15UnicodeRangeSet8ContainsEi(%"class.blink::UnicodeRangeSet"* nonnull %15, i32 %2) #7
  br i1 %18, label %19, label %22

19:                                               ; preds = %12, %17
  %20 = call %struct.hb_font_t* @hb_font_get_parent(%struct.hb_font_t* %0) #7
  %21 = call i32 @hb_font_get_glyph(%struct.hb_font_t* %20, i32 %2, i32 %3, i32* %4) #7
  br label %22

22:                                               ; preds = %17, %19
  %23 = phi i32 [ %21, %19 ], [ 0, %17 ]
  ret i32 %23
}

declare void @hb_font_funcs_set_nominal_glyph_func(%struct.hb_font_funcs_t*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)*, i8*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5blinkL23HarfBuzzGetNominalGlyphEP9hb_font_tPvjPjS2_(%struct.hb_font_t*, i8* readonly, i32, i32*, i8* nocapture readnone) #0 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = icmp eq i8* %1, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %5
  %9 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str, i64 0, i64 0), i32 124, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0)) #7
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7
  br label %11

11:                                               ; preds = %8, %5
  %12 = getelementptr inbounds i8, i8* %1, i64 56
  %13 = bitcast i8* %12 to %"class.blink::UnicodeRangeSet"**
  %14 = load %"class.blink::UnicodeRangeSet"*, %"class.blink::UnicodeRangeSet"** %13, align 8
  %15 = icmp eq %"class.blink::UnicodeRangeSet"* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %11
  %17 = call zeroext i1 @_ZNK5blink15UnicodeRangeSet8ContainsEi(%"class.blink::UnicodeRangeSet"* nonnull %14, i32 %2) #7
  br i1 %17, label %18, label %21

18:                                               ; preds = %16, %11
  %19 = call %struct.hb_font_t* @hb_font_get_parent(%struct.hb_font_t* %0) #7
  %20 = call i32 @hb_font_get_glyph(%struct.hb_font_t* %19, i32 %2, i32 0, i32* %3) #7
  br label %21

21:                                               ; preds = %16, %18
  %22 = phi i32 [ %20, %18 ], [ 0, %16 ]
  ret i32 %22
}

declare void @hb_font_funcs_set_glyph_v_advance_func(%struct.hb_font_funcs_t*, i32 (%struct.hb_font_t*, i8*, i32, i8*)*, i8*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5blinkL31HarfBuzzGetGlyphVerticalAdvanceEP9hb_font_tPvjS2_(%struct.hb_font_t* nocapture readnone, i8*, i32, i8* nocapture readnone) #0 {
  %5 = alloca %class.scoped_refptr.7, align 8
  %6 = bitcast i8* %1 to %"struct.blink::HarfBuzzFontData"*
  %7 = bitcast %class.scoped_refptr.7* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #7
  %8 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %5, i64 0, i32 0
  %9 = tail call %"class.blink::OpenTypeVerticalData"* @_ZN5blink16HarfBuzzFontData12VerticalDataEv(%"struct.blink::HarfBuzzFontData"* %6)
  store %"class.blink::OpenTypeVerticalData"* %9, %"class.blink::OpenTypeVerticalData"** %8, align 8
  %10 = icmp eq %"class.blink::OpenTypeVerticalData"* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = getelementptr inbounds i8, i8* %1, i64 32
  %13 = bitcast i8* %12 to float*
  %14 = load float, float* %13, align 8
  br label %19

15:                                               ; preds = %4
  %16 = trunc i32 %2 to i16
  %17 = tail call float @_ZNK5blink20OpenTypeVerticalData13AdvanceHeightEt(%"class.blink::OpenTypeVerticalData"* nonnull %9, i16 zeroext %16) #7
  %18 = fsub float -0.000000e+00, %17
  br label %19

19:                                               ; preds = %15, %11
  %20 = phi float [ %18, %15 ], [ %14, %11 ]
  %21 = tail call i32 @_ZN5blink28SkiaScalarToHarfBuzzPositionEf(float %20) #7
  call void @_ZN13scoped_refptrIN5blink20OpenTypeVerticalDataEED2Ev(%class.scoped_refptr.7* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #7
  ret i32 %21
}

declare void @hb_font_funcs_set_glyph_v_origin_func(%struct.hb_font_funcs_t*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32*, i8*)*, i8*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5blinkL30HarfBuzzGetGlyphVerticalOriginEP9hb_font_tPvjPiS3_S2_(%struct.hb_font_t* nocapture readnone, i8*, i32, i32* nocapture, i32* nocapture, i8* nocapture readnone) #0 {
  %7 = alloca %class.scoped_refptr.7, align 8
  %8 = alloca i64, align 8
  %9 = alloca i16, align 2
  %10 = bitcast i8* %1 to %"struct.blink::HarfBuzzFontData"*
  %11 = bitcast %class.scoped_refptr.7* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #7
  %12 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %7, i64 0, i32 0
  %13 = tail call %"class.blink::OpenTypeVerticalData"* @_ZN5blink16HarfBuzzFontData12VerticalDataEv(%"struct.blink::HarfBuzzFontData"* %10)
  store %"class.blink::OpenTypeVerticalData"* %13, %"class.blink::OpenTypeVerticalData"** %12, align 8
  %14 = icmp eq %"class.blink::OpenTypeVerticalData"* %13, null
  br i1 %14, label %29, label %15

15:                                               ; preds = %6
  %16 = bitcast i64* %8 to [2 x float]*
  %17 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  store i64 0, i64* %8, align 8
  %18 = bitcast i16* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %18) #7
  %19 = trunc i32 %2 to i16
  store i16 %19, i16* %9, align 2
  %20 = bitcast i8* %1 to %class.SkFont*
  %21 = bitcast i64* %8 to float*
  call void @_ZNK5blink20OpenTypeVerticalData32GetVerticalTranslationsForGlyphsERK6SkFontPKtmPf(%"class.blink::OpenTypeVerticalData"* nonnull %13, %class.SkFont* dereferenceable(24) %20, i16* nonnull %9, i64 1, float* nonnull %21) #7
  %22 = load float, float* %21, align 8
  %23 = fsub float -0.000000e+00, %22
  %24 = call i32 @_ZN5blink28SkiaScalarToHarfBuzzPositionEf(float %23) #7
  store i32 %24, i32* %3, align 4
  %25 = getelementptr inbounds [2 x float], [2 x float]* %16, i64 0, i64 1
  %26 = load float, float* %25, align 4
  %27 = fsub float -0.000000e+00, %26
  %28 = call i32 @_ZN5blink28SkiaScalarToHarfBuzzPositionEf(float %27) #7
  store i32 %28, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %18) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %29

29:                                               ; preds = %6, %15
  %30 = phi i32 [ 1, %15 ], [ 0, %6 ]
  call void @_ZN13scoped_refptrIN5blink20OpenTypeVerticalDataEED2Ev(%class.scoped_refptr.7* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #7
  ret i32 %30
}

declare void @hb_font_funcs_set_glyph_extents_func(%struct.hb_font_funcs_t*, i32 (%struct.hb_font_t*, i8*, i32, %struct.hb_glyph_extents_t*, i8*)*, i8*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5blinkL23HarfBuzzGetGlyphExtentsEP9hb_font_tPvjP18hb_glyph_extents_tS2_(%struct.hb_font_t* nocapture readnone, i8*, i32, %struct.hb_glyph_extents_t*, i8* nocapture readnone) #0 {
  %6 = bitcast i8* %1 to %class.SkFont*
  tail call void @_ZN5blink32SkFontGetGlyphExtentsForHarfBuzzERK6SkFontjP18hb_glyph_extents_t(%class.SkFont* dereferenceable(24) %6, i32 %2, %struct.hb_glyph_extents_t* %3) #7
  ret i32 1
}

declare void @hb_font_funcs_make_immutable(%struct.hb_font_funcs_t*) local_unnamed_addr #2

declare void @_ZN5blink30SkFontGetGlyphWidthForHarfBuzzERK6SkFontjPi(%class.SkFont* dereferenceable(24), i32, i32*) local_unnamed_addr #2

declare void @_ZN5blink30SkFontGetGlyphWidthForHarfBuzzERK6SkFontjPKjjPij(%class.SkFont* dereferenceable(24), i32, i32*, i32, i32*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink15UnicodeRangeSet8ContainsEi(%"class.blink::UnicodeRangeSet"*, i32) local_unnamed_addr #2

declare i32 @hb_font_get_glyph(%struct.hb_font_t*, i32, i32, i32*) local_unnamed_addr #2

declare %struct.hb_font_t* @hb_font_get_parent(%struct.hb_font_t*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::OpenTypeVerticalData"* @_ZN5blink16HarfBuzzFontData12VerticalDataEv(%"struct.blink::HarfBuzzFontData"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.scoped_refptr.7, align 8
  %3 = alloca %class.sk_sp, align 8
  %4 = getelementptr inbounds %"struct.blink::HarfBuzzFontData", %"struct.blink::HarfBuzzFontData"* %0, i64 0, i32 6
  %5 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %4, i64 0, i32 0
  %6 = load %"class.blink::OpenTypeVerticalData"*, %"class.blink::OpenTypeVerticalData"** %5, align 8
  %7 = icmp eq %"class.blink::OpenTypeVerticalData"* %6, null
  br i1 %7, label %8, label %52

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"struct.blink::HarfBuzzFontData", %"struct.blink::HarfBuzzFontData"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %class.SkTypeface*, %class.SkTypeface** %9, align 8, !noalias !4
  %11 = icmp eq %class.SkTypeface* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 1 monotonic, !noalias !4
  br label %15

15:                                               ; preds = %8, %12
  %16 = bitcast %class.sk_sp* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  %17 = tail call noalias i8* @malloc(i64 128) #7
  %18 = bitcast i8* %17 to %"class.blink::OpenTypeVerticalData"*
  %19 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  br i1 %11, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 1 monotonic
  br label %23

23:                                               ; preds = %20, %15
  store %class.SkTypeface* %10, %class.SkTypeface** %19, align 8
  call void @_ZN5blink20OpenTypeVerticalDataC1E5sk_spI10SkTypefaceE(%"class.blink::OpenTypeVerticalData"* %18, %class.sk_sp* nonnull %3) #7
  %24 = load %class.SkTypeface*, %class.SkTypeface** %19, align 8
  %25 = icmp eq %class.SkTypeface* %24, null
  br i1 %25, label %36, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw add i32* %27, i32 -1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %36

30:                                               ; preds = %26
  %31 = bitcast %class.SkTypeface* %24 to %class.SkRefCntBase*
  %32 = bitcast %class.SkTypeface* %24 to void (%class.SkRefCntBase*)***
  %33 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %32, align 8
  %34 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %33, i64 2
  %35 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %34, align 8
  call void %35(%class.SkRefCntBase* nonnull %31) #7
  br label %36

36:                                               ; preds = %23, %26, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  %37 = bitcast %class.scoped_refptr.7* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = bitcast %class.scoped_refptr.7* %4 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %class.scoped_refptr.7* %2 to i64*
  %41 = ptrtoint i8* %17 to i64
  store i64 %41, i64* %38, align 8
  store i64 %39, i64* %40, align 8
  call void @_ZN13scoped_refptrIN5blink20OpenTypeVerticalDataEED2Ev(%class.scoped_refptr.7* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  br i1 %11, label %52, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 -1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %52

46:                                               ; preds = %42
  %47 = bitcast %class.SkTypeface* %10 to %class.SkRefCntBase*
  %48 = bitcast %class.SkTypeface* %10 to void (%class.SkRefCntBase*)***
  %49 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %48, align 8
  %50 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, i64 2
  %51 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %50, align 8
  call void %51(%class.SkRefCntBase* nonnull %47) #7
  br label %52

52:                                               ; preds = %1, %46, %42, %36
  %53 = load %"class.blink::OpenTypeVerticalData"*, %"class.blink::OpenTypeVerticalData"** %5, align 8
  %54 = getelementptr inbounds %"struct.blink::HarfBuzzFontData", %"struct.blink::HarfBuzzFontData"* %0, i64 0, i32 1
  %55 = load float, float* %54, align 8
  %56 = getelementptr inbounds %"struct.blink::HarfBuzzFontData", %"struct.blink::HarfBuzzFontData"* %0, i64 0, i32 2
  %57 = load float, float* %56, align 4
  %58 = getelementptr inbounds %"struct.blink::HarfBuzzFontData", %"struct.blink::HarfBuzzFontData"* %0, i64 0, i32 3
  %59 = load float, float* %58, align 8
  %60 = fptosi float %59 to i32
  call void @_ZN5blink20OpenTypeVerticalData26SetScaleAndFallbackMetricsEffi(%"class.blink::OpenTypeVerticalData"* %53, float %55, float %57, i32 %60) #7
  %61 = load %"class.blink::OpenTypeVerticalData"*, %"class.blink::OpenTypeVerticalData"** %5, align 8
  %62 = icmp eq %"class.blink::OpenTypeVerticalData"* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %52
  %64 = getelementptr inbounds %"class.blink::OpenTypeVerticalData", %"class.blink::OpenTypeVerticalData"* %61, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %64) #7
  br label %65

65:                                               ; preds = %52, %63
  ret %"class.blink::OpenTypeVerticalData"* %61
}

declare float @_ZNK5blink20OpenTypeVerticalData13AdvanceHeightEt(%"class.blink::OpenTypeVerticalData"*, i16 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIN5blink20OpenTypeVerticalDataEED2Ev(%class.scoped_refptr.7*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %0, i64 0, i32 0
  %3 = load %"class.blink::OpenTypeVerticalData"*, %"class.blink::OpenTypeVerticalData"** %2, align 8
  %4 = icmp eq %"class.blink::OpenTypeVerticalData"* %3, null
  br i1 %4, label %57, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::OpenTypeVerticalData", %"class.blink::OpenTypeVerticalData"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #7
  %7 = getelementptr inbounds %"class.blink::OpenTypeVerticalData", %"class.blink::OpenTypeVerticalData"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %57

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::OpenTypeVerticalData", %"class.blink::OpenTypeVerticalData"* %3, i64 0, i32 8, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair.21"*, %"struct.WTF::KeyValuePair.21"** %11, align 8
  %13 = icmp eq %"struct.WTF::KeyValuePair.21"* %12, null
  br i1 %13, label %16, label %14, !prof !2

14:                                               ; preds = %10
  %15 = bitcast %"struct.WTF::KeyValuePair.21"* %12 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %15) #7
  store %"struct.WTF::KeyValuePair.21"* null, %"struct.WTF::KeyValuePair.21"** %11, align 8
  br label %16

16:                                               ; preds = %14, %10
  %17 = getelementptr inbounds %"class.blink::OpenTypeVerticalData", %"class.blink::OpenTypeVerticalData"* %3, i64 0, i32 5, i32 0, i32 0, i32 0
  %18 = load i16*, i16** %17, align 8
  %19 = icmp eq i16* %18, null
  %20 = bitcast i16* %18 to i8*
  br i1 %19, label %27, label %21, !prof !2

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::OpenTypeVerticalData", %"class.blink::OpenTypeVerticalData"* %3, i64 0, i32 5, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25, !prof !3

25:                                               ; preds = %21
  store i32 0, i32* %22, align 4
  br label %26

26:                                               ; preds = %25, %21
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %20) #7
  store i16* null, i16** %17, align 8
  br label %27

27:                                               ; preds = %26, %16
  %28 = getelementptr inbounds %"class.blink::OpenTypeVerticalData", %"class.blink::OpenTypeVerticalData"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %29 = load i16*, i16** %28, align 8
  %30 = icmp eq i16* %29, null
  %31 = bitcast i16* %29 to i8*
  br i1 %30, label %38, label %32, !prof !2

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::OpenTypeVerticalData", %"class.blink::OpenTypeVerticalData"* %3, i64 0, i32 4, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %37, label %36, !prof !3

36:                                               ; preds = %32
  store i32 0, i32* %33, align 4
  br label %37

37:                                               ; preds = %36, %32
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %31) #7
  store i16* null, i16** %28, align 8
  br label %38

38:                                               ; preds = %37, %27
  %39 = getelementptr inbounds %"class.blink::OpenTypeVerticalData", %"class.blink::OpenTypeVerticalData"* %3, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load i16*, i16** %39, align 8
  %41 = icmp eq i16* %40, null
  %42 = bitcast i16* %40 to i8*
  br i1 %41, label %49, label %43, !prof !2

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::OpenTypeVerticalData", %"class.blink::OpenTypeVerticalData"* %3, i64 0, i32 3, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %48, label %47, !prof !3

47:                                               ; preds = %43
  store i32 0, i32* %44, align 4
  br label %48

48:                                               ; preds = %47, %43
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %42) #7
  store i16* null, i16** %39, align 8
  br label %49

49:                                               ; preds = %48, %38
  %50 = getelementptr inbounds %"class.blink::OpenTypeVerticalData", %"class.blink::OpenTypeVerticalData"* %3, i64 0, i32 2, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %50, align 8
  %52 = icmp eq %"struct.WTF::KeyValuePair"* %51, null
  br i1 %52, label %55, label %53, !prof !2

53:                                               ; preds = %49
  %54 = bitcast %"struct.WTF::KeyValuePair"* %51 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %54) #7
  br label %55

55:                                               ; preds = %49, %53
  %56 = bitcast %"class.blink::OpenTypeVerticalData"* %3 to i8*
  tail call void @free(i8* %56) #7
  br label %57

57:                                               ; preds = %5, %55, %1
  ret void
}

declare void @_ZN5blink20OpenTypeVerticalData26SetScaleAndFallbackMetricsEffi(%"class.blink::OpenTypeVerticalData"*, float, float, i32) local_unnamed_addr #2

declare void @_ZN5blink20OpenTypeVerticalDataC1E5sk_spI10SkTypefaceE(%"class.blink::OpenTypeVerticalData"*, %class.sk_sp*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare void @_ZNK5blink20OpenTypeVerticalData32GetVerticalTranslationsForGlyphsERK6SkFontPKtmPf(%"class.blink::OpenTypeVerticalData"*, %class.SkFont* dereferenceable(24), i16*, i64, float*) local_unnamed_addr #2

declare void @_ZN5blink32SkFontGetGlyphExtentsForHarfBuzzERK6SkFontjP18hb_glyph_extents_t(%class.SkFont* dereferenceable(24), i32, %struct.hb_glyph_extents_t*) local_unnamed_addr #2

declare void @hb_font_destroy(%struct.hb_font_t*) local_unnamed_addr #2

declare void @_ZN6SkFontC1Ev(%class.SkFont*) unnamed_addr #2

declare void @_ZNK5blink16FontPlatformData11SetupSkFontEP6SkFontfPKNS_15FontDescriptionE(%"class.blink::FontPlatformData"*, %class.SkFont*, float, %"class.blink::FontDescription"*) local_unnamed_addr #2

declare void @_ZN5blink11FontMetrics22AscentDescentWithHacksERfS1_RjS2_RKNS_16FontPlatformDataERK6SkFontbN4absl8optionalIfEESB_(float* dereferenceable(4), float* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), %"class.blink::FontPlatformData"* dereferenceable(72), %class.SkFont* dereferenceable(24), i1 zeroext, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare i64 @lroundf(float) local_unnamed_addr #4

declare %"class.blink::HarfBuzzFace"* @_ZNK5blink16FontPlatformData15GetHarfBuzzFaceEv(%"class.blink::FontPlatformData"*) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.30"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairIm13scoped_refptrIN5blink16HbFontCacheEntryEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_S9_SG_EERmDnEENS_18HashTableAddResultISH_S6_EEOT0_OT1_(%"class.WTF::HashTable.42"*, i64* dereferenceable(8), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.30"*, %"struct.WTF::KeyValuePair.30"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.30"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.30"* @_ZN3WTF9HashTableImNS_12KeyValuePairIm13scoped_refptrIN5blink16HbFontCacheEntryEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.42"* %0, %"struct.WTF::KeyValuePair.30"* null)
  %9 = load %"struct.WTF::KeyValuePair.30"*, %"struct.WTF::KeyValuePair.30"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.30"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %1, align 8
  %17 = shl i64 %16, 32
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 22
  %21 = xor i64 %20, %19
  %22 = shl i64 %21, 13
  %23 = xor i64 %22, -1
  %24 = add i64 %21, %23
  %25 = lshr i64 %24, 8
  %26 = xor i64 %25, %24
  %27 = mul i64 %26, 9
  %28 = lshr i64 %27, 15
  %29 = xor i64 %28, %27
  %30 = shl i64 %29, 27
  %31 = xor i64 %30, -1
  %32 = add i64 %29, %31
  %33 = lshr i64 %32, 31
  %34 = xor i64 %33, %32
  %35 = trunc i64 %34 to i32
  %36 = and i32 %14, %35
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %11, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %38, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, -1
  br i1 %41, label %86, label %42

42:                                               ; preds = %10
  %43 = xor i32 %35, -1
  %44 = lshr i32 %35, 23
  %45 = add i32 %44, %43
  %46 = shl i32 %45, 12
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 7
  %49 = xor i32 %48, %47
  %50 = shl i32 %49, 2
  %51 = xor i32 %50, %49
  %52 = lshr i32 %51, 20
  %53 = xor i32 %52, %51
  %54 = or i32 %53, 1
  %55 = zext i32 %54 to i64
  br label %56

56:                                               ; preds = %42, %63
  %57 = phi i64 [ %40, %42 ], [ %72, %63 ]
  %58 = phi %"struct.WTF::KeyValuePair.30"* [ %38, %42 ], [ %70, %63 ]
  %59 = phi %"struct.WTF::KeyValuePair.30"* [ null, %42 ], [ %65, %63 ]
  %60 = phi i64 [ %37, %42 ], [ %69, %63 ]
  %61 = phi i64 [ 0, %42 ], [ %67, %63 ]
  %62 = icmp eq i64 %57, %16
  br i1 %62, label %114, label %63

63:                                               ; preds = %56
  %64 = icmp eq i64 %57, -2
  %65 = select i1 %64, %"struct.WTF::KeyValuePair.30"* %58, %"struct.WTF::KeyValuePair.30"* %59
  %66 = icmp eq i64 %61, 0
  %67 = select i1 %66, i64 %55, i64 %61
  %68 = add i64 %67, %60
  %69 = and i64 %68, %15
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %11, i64 %69
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %70, i64 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %72, -1
  br i1 %73, label %74, label %56

74:                                               ; preds = %63
  %75 = icmp eq %"struct.WTF::KeyValuePair.30"* %65, null
  br i1 %75, label %86, label %76

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %65, i64 0, i32 0
  store i64 -1, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %65, i64 0, i32 1, i32 0
  store %"class.blink::HbFontCacheEntry"* null, %"class.blink::HbFontCacheEntry"** %78, align 8
  %79 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %0, i64 0, i32 3
  %80 = load i32, i32* %79, align 8
  %81 = add i32 %80, 2147483647
  %82 = and i32 %81, 2147483647
  %83 = and i32 %80, -2147483648
  %84 = or i32 %82, %83
  store i32 %84, i32* %79, align 8
  %85 = load i64, i64* %1, align 8
  br label %86

86:                                               ; preds = %10, %74, %76
  %87 = phi i64 [ %85, %76 ], [ %16, %74 ], [ %16, %10 ]
  %88 = phi %"struct.WTF::KeyValuePair.30"* [ %65, %76 ], [ %70, %74 ], [ %38, %10 ]
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %88, i64 0, i32 0
  store i64 %87, i64* %89, align 8
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %88, i64 0, i32 1
  %91 = bitcast %class.scoped_refptr.31* %90 to i64*
  %92 = getelementptr inbounds %class.scoped_refptr.31, %class.scoped_refptr.31* %90, i64 0, i32 0
  %93 = load %"class.blink::HbFontCacheEntry"*, %"class.blink::HbFontCacheEntry"** %92, align 8
  store i64 0, i64* %91, align 8
  %94 = icmp eq %"class.blink::HbFontCacheEntry"* %93, null
  br i1 %94, label %102, label %95

95:                                               ; preds = %86
  %96 = getelementptr inbounds %"class.blink::HbFontCacheEntry", %"class.blink::HbFontCacheEntry"* %93, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %96) #7
  %97 = getelementptr inbounds %"class.blink::HbFontCacheEntry", %"class.blink::HbFontCacheEntry"* %93, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %95
  tail call void @_ZN5blink16HbFontCacheEntryD1Ev(%"class.blink::HbFontCacheEntry"* nonnull %93) #7
  %101 = bitcast %"class.blink::HbFontCacheEntry"* %93 to i8*
  tail call void @free(i8* %101) #7
  br label %102

102:                                              ; preds = %86, %95, %100
  %103 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %0, i64 0, i32 2
  %104 = load i32, i32* %103, align 4
  %105 = add i32 %104, 1
  store i32 %105, i32* %103, align 4
  %106 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %0, i64 0, i32 3
  %107 = load i32, i32* %106, align 8
  %108 = add i32 %107, %105
  %109 = shl i32 %108, 1
  %110 = load i32, i32* %12, align 8
  %111 = icmp ult i32 %109, %110
  br i1 %111, label %114, label %112

112:                                              ; preds = %102
  %113 = tail call %"struct.WTF::KeyValuePair.30"* @_ZN3WTF9HashTableImNS_12KeyValuePairIm13scoped_refptrIN5blink16HbFontCacheEntryEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.42"* %0, %"struct.WTF::KeyValuePair.30"* %88)
  br label %114

114:                                              ; preds = %56, %102, %112
  %115 = phi i8 [ 1, %102 ], [ 1, %112 ], [ 0, %56 ]
  %116 = phi %"struct.WTF::KeyValuePair.30"* [ %88, %102 ], [ %113, %112 ], [ %58, %56 ]
  %117 = insertvalue { %"struct.WTF::KeyValuePair.30"*, i8 } undef, %"struct.WTF::KeyValuePair.30"* %116, 0
  %118 = insertvalue { %"struct.WTF::KeyValuePair.30"*, i8 } %117, i8 %115, 1
  ret { %"struct.WTF::KeyValuePair.30"*, i8 } %118
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.30"* @_ZN3WTF9HashTableImNS_12KeyValuePairIm13scoped_refptrIN5blink16HbFontCacheEntryEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.42"*, %"struct.WTF::KeyValuePair.30"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #7
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #7
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %22, i8* %23) #7
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #7
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #7
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([121 x i8], [121 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIm13scoped_refptrIN5blink16HbFontCacheEntryEEEEEEPKcv, i64 0, i64 0)) #7
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.30"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %60, label %38

38:                                               ; preds = %31
  %39 = and i64 %33, 1
  %40 = icmp eq i32 %32, 1
  br i1 %40, label %54, label %41

41:                                               ; preds = %38
  %42 = sub nsw i64 %33, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %51, %43 ]
  %45 = phi i64 [ %42, %41 ], [ %52, %43 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %36, i64 %44, i32 0
  store i64 -1, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %36, i64 %44, i32 1, i32 0
  store %"class.blink::HbFontCacheEntry"* null, %"class.blink::HbFontCacheEntry"** %47, align 8
  %48 = or i64 %44, 1
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %36, i64 %48, i32 0
  store i64 -1, i64* %49, align 8
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %36, i64 %48, i32 1, i32 0
  store %"class.blink::HbFontCacheEntry"* null, %"class.blink::HbFontCacheEntry"** %50, align 8
  %51 = add nuw nsw i64 %44, 2
  %52 = add i64 %45, -2
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %43

54:                                               ; preds = %43, %38
  %55 = phi i64 [ 0, %38 ], [ %51, %43 ]
  %56 = icmp eq i64 %39, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %36, i64 %55, i32 0
  store i64 -1, i64* %58, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %36, i64 %55, i32 1, i32 0
  store %"class.blink::HbFontCacheEntry"* null, %"class.blink::HbFontCacheEntry"** %59, align 8
  br label %60

60:                                               ; preds = %57, %54, %31
  %61 = call %"struct.WTF::KeyValuePair.30"* @_ZN3WTF9HashTableImNS_12KeyValuePairIm13scoped_refptrIN5blink16HbFontCacheEntryEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSI_(%"class.WTF::HashTable.42"* %0, %"struct.WTF::KeyValuePair.30"* %36, i32 %32, %"struct.WTF::KeyValuePair.30"* %1) #7
  ret %"struct.WTF::KeyValuePair.30"* %61
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.30"* @_ZN3WTF9HashTableImNS_12KeyValuePairIm13scoped_refptrIN5blink16HbFontCacheEntryEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSI_(%"class.WTF::HashTable.42"*, %"struct.WTF::KeyValuePair.30"*, i32, %"struct.WTF::KeyValuePair.30"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.42", align 8
  %6 = bitcast %"class.WTF::HashTable.42"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.42"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.30"* %1, %"struct.WTF::KeyValuePair.30"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.30"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.42"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.42"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.30"*, %"struct.WTF::KeyValuePair.30"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.30"* %22 to i64
  br label %66

24:                                               ; preds = %104
  %25 = bitcast %"class.WTF::HashTable.42"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.42"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %105, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.30"* [ null, %16 ], [ %108, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %106, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.30"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %62, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %60, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %57, %39
  %42 = phi i64 [ 0, %39 ], [ %58, %57 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %35, i64 %42, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %44, -2
  br i1 %45, label %57, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %35, i64 %42, i32 1, i32 0
  %48 = load %"class.blink::HbFontCacheEntry"*, %"class.blink::HbFontCacheEntry"** %47, align 8
  %49 = icmp eq %"class.blink::HbFontCacheEntry"* %48, null
  br i1 %49, label %57, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.blink::HbFontCacheEntry", %"class.blink::HbFontCacheEntry"* %48, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %51) #7
  %52 = getelementptr inbounds %"class.blink::HbFontCacheEntry", %"class.blink::HbFontCacheEntry"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %50
  call void @_ZN5blink16HbFontCacheEntryD1Ev(%"class.blink::HbFontCacheEntry"* nonnull %48) #7
  %56 = bitcast %"class.blink::HbFontCacheEntry"* %48 to i8*
  call void @free(i8* %56) #7
  br label %57

57:                                               ; preds = %55, %50, %46, %41
  %58 = add nuw nsw i64 %42, 1
  %59 = icmp eq i64 %58, %40
  br i1 %59, label %60, label %41

60:                                               ; preds = %57, %37
  %61 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %61) #7
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %62

62:                                               ; preds = %28, %60
  %63 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %0, i64 0, i32 3
  %64 = load i32, i32* %63, align 8
  %65 = and i32 %64, -2147483648
  store i32 %65, i32* %63, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #7
  ret %"struct.WTF::KeyValuePair.30"* %33

66:                                               ; preds = %21, %104
  %67 = phi i64 [ %105, %104 ], [ %23, %21 ]
  %68 = phi i32 [ %106, %104 ], [ %13, %21 ]
  %69 = phi %"struct.WTF::KeyValuePair.30"* [ %107, %104 ], [ %22, %21 ]
  %70 = phi %"struct.WTF::KeyValuePair.30"* [ %108, %104 ], [ null, %21 ]
  %71 = phi i32 [ %109, %104 ], [ 0, %21 ]
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %69, i64 %72, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = icmp ugt i64 %74, -3
  br i1 %75, label %104, label %76

76:                                               ; preds = %66
  %77 = call { %"struct.WTF::KeyValuePair.30"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairIm13scoped_refptrIN5blink16HbFontCacheEntryEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKm(%"class.WTF::HashTable.42"* nonnull %5, i64* dereferenceable(8) %73) #7
  %78 = extractvalue { %"struct.WTF::KeyValuePair.30"*, i8 } %77, 0
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %78, i64 0, i32 1, i32 0
  %80 = load %"class.blink::HbFontCacheEntry"*, %"class.blink::HbFontCacheEntry"** %79, align 8
  %81 = icmp eq %"class.blink::HbFontCacheEntry"* %80, null
  br i1 %81, label %89, label %82

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.blink::HbFontCacheEntry", %"class.blink::HbFontCacheEntry"* %80, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %83) #7
  %84 = getelementptr inbounds %"class.blink::HbFontCacheEntry", %"class.blink::HbFontCacheEntry"* %80, i64 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %82
  call void @_ZN5blink16HbFontCacheEntryD1Ev(%"class.blink::HbFontCacheEntry"* nonnull %80) #7
  %88 = bitcast %"class.blink::HbFontCacheEntry"* %80 to i8*
  call void @free(i8* %88) #7
  br label %89

89:                                               ; preds = %76, %82, %87
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %78, i64 0, i32 0
  %91 = load i64, i64* %73, align 8
  store i64 %91, i64* %90, align 8
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %78, i64 0, i32 1
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %69, i64 %72, i32 1
  %94 = getelementptr inbounds %class.scoped_refptr.31, %class.scoped_refptr.31* %93, i64 0, i32 0
  %95 = bitcast %class.scoped_refptr.31* %93 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %class.scoped_refptr.31* %92 to i64*
  store i64 %96, i64* %97, align 8
  store %"class.blink::HbFontCacheEntry"* null, %"class.blink::HbFontCacheEntry"** %94, align 8
  %98 = load %"struct.WTF::KeyValuePair.30"*, %"struct.WTF::KeyValuePair.30"** %15, align 8
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %98, i64 %72
  %100 = icmp eq %"struct.WTF::KeyValuePair.30"* %99, %3
  %101 = select i1 %100, %"struct.WTF::KeyValuePair.30"* %78, %"struct.WTF::KeyValuePair.30"* %70
  %102 = load i32, i32* %12, align 8
  %103 = ptrtoint %"struct.WTF::KeyValuePair.30"* %98 to i64
  br label %104

104:                                              ; preds = %66, %89
  %105 = phi i64 [ %67, %66 ], [ %103, %89 ]
  %106 = phi i32 [ %68, %66 ], [ %102, %89 ]
  %107 = phi %"struct.WTF::KeyValuePair.30"* [ %69, %66 ], [ %98, %89 ]
  %108 = phi %"struct.WTF::KeyValuePair.30"* [ %70, %66 ], [ %101, %89 ]
  %109 = add i32 %71, 1
  %110 = icmp eq i32 %109, %106
  br i1 %110, label %24, label %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.30"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairIm13scoped_refptrIN5blink16HbFontCacheEntryEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKm(%"class.WTF::HashTable.42"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.30"*, %"struct.WTF::KeyValuePair.30"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = load i64, i64* %1, align 8
  %10 = shl i64 %9, 32
  %11 = xor i64 %10, -1
  %12 = add i64 %9, %11
  %13 = lshr i64 %12, 22
  %14 = xor i64 %13, %12
  %15 = shl i64 %14, 13
  %16 = xor i64 %15, -1
  %17 = add i64 %14, %16
  %18 = lshr i64 %17, 8
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, 9
  %21 = lshr i64 %20, 15
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 27
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 31
  %27 = xor i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i32 %7, %28
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %4, i64 %30
  %32 = ptrtoint %"struct.WTF::KeyValuePair.30"* %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %31, i64 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, -1
  br i1 %35, label %53, label %36

36:                                               ; preds = %2
  %37 = xor i32 %28, -1
  %38 = lshr i32 %28, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %59

50:                                               ; preds = %66
  %51 = ptrtoint %"struct.WTF::KeyValuePair.30"* %73 to i64
  %52 = inttoptr i64 %68 to %"struct.WTF::KeyValuePair.30"*
  br label %53

53:                                               ; preds = %50, %2
  %54 = phi i64 [ %51, %50 ], [ %32, %2 ]
  %55 = phi %"struct.WTF::KeyValuePair.30"* [ %52, %50 ], [ null, %2 ]
  %56 = icmp eq %"struct.WTF::KeyValuePair.30"* %55, null
  %57 = ptrtoint %"struct.WTF::KeyValuePair.30"* %55 to i64
  %58 = select i1 %56, i64 %54, i64 %57
  br label %78

59:                                               ; preds = %66, %36
  %60 = phi i64 [ 0, %36 ], [ %68, %66 ]
  %61 = phi i64 [ %34, %36 ], [ %76, %66 ]
  %62 = phi i64 [ %32, %36 ], [ %74, %66 ]
  %63 = phi i64 [ %30, %36 ], [ %72, %66 ]
  %64 = phi i64 [ 0, %36 ], [ %70, %66 ]
  %65 = icmp eq i64 %61, %9
  br i1 %65, label %78, label %66

66:                                               ; preds = %59
  %67 = icmp eq i64 %61, -2
  %68 = select i1 %67, i64 %62, i64 %60
  %69 = icmp eq i64 %64, 0
  %70 = select i1 %69, i64 %49, i64 %64
  %71 = add i64 %70, %63
  %72 = and i64 %71, %8
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %4, i64 %72
  %74 = ptrtoint %"struct.WTF::KeyValuePair.30"* %73 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %73, i64 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %76, -1
  br i1 %77, label %50, label %59

78:                                               ; preds = %59, %53
  %79 = phi i64 [ %58, %53 ], [ %62, %59 ]
  %80 = phi i8 [ 0, %53 ], [ 1, %59 ]
  %81 = inttoptr i64 %79 to %"struct.WTF::KeyValuePair.30"*
  %82 = insertvalue { %"struct.WTF::KeyValuePair.30"*, i8 } undef, %"struct.WTF::KeyValuePair.30"* %81, 0
  %83 = insertvalue { %"struct.WTF::KeyValuePair.30"*, i8 } %82, i8 %80, 1
  ret { %"struct.WTF::KeyValuePair.30"*, i8 } %83
}

declare void @hb_face_destroy(%struct.hb_face_t*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.30"*, %"struct.WTF::KeyValuePair.30"* } @_ZN3WTF9HashTableImNS_12KeyValuePairIm13scoped_refptrIN5blink16HbFontCacheEntryEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS_18PartitionAllocatorEE4findERKm(%"class.WTF::HashTable.42"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.30"*, %"struct.WTF::KeyValuePair.30"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.30"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %68, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %1, align 8
  %12 = shl i64 %11, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %11, %13
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %9, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %4, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %33, i64 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %11
  br i1 %36, label %65, label %37

37:                                               ; preds = %8
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %56, %37
  %52 = phi i64 [ %35, %37 ], [ %63, %56 ]
  %53 = phi i64 [ %32, %37 ], [ %60, %56 ]
  %54 = phi i64 [ 0, %37 ], [ %58, %56 ]
  %55 = icmp eq i64 %52, -1
  br i1 %55, label %68, label %56

56:                                               ; preds = %51
  %57 = icmp eq i64 %54, 0
  %58 = select i1 %57, i64 %50, i64 %54
  %59 = add i64 %58, %53
  %60 = and i64 %59, %10
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %4, i64 %60
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %61, i64 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, %11
  br i1 %64, label %65, label %51

65:                                               ; preds = %56, %8
  %66 = phi %"struct.WTF::KeyValuePair.30"* [ %33, %8 ], [ %61, %56 ]
  %67 = icmp eq %"struct.WTF::KeyValuePair.30"* %66, null
  br i1 %67, label %68, label %71

68:                                               ; preds = %51, %65, %2
  %69 = zext i32 %7 to i64
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %4, i64 %69
  br label %74

71:                                               ; preds = %65
  %72 = zext i32 %7 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %4, i64 %72
  br label %74

74:                                               ; preds = %68, %71
  %75 = phi %"struct.WTF::KeyValuePair.30"* [ %66, %71 ], [ %70, %68 ]
  %76 = phi %"struct.WTF::KeyValuePair.30"* [ %73, %71 ], [ %70, %68 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.30"*, %"struct.WTF::KeyValuePair.30"* } undef, %"struct.WTF::KeyValuePair.30"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.30"*, %"struct.WTF::KeyValuePair.30"* } %77, %"struct.WTF::KeyValuePair.30"* %76, 1
  ret { %"struct.WTF::KeyValuePair.30"*, %"struct.WTF::KeyValuePair.30"* } %78
}

; Function Attrs: nounwind
declare void @_ZN5blink16HbFontCacheEntryD1Ev(%"class.blink::HbFontCacheEntry"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableImNS_12KeyValuePairIm13scoped_refptrIN5blink16HbFontCacheEntryEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS_18PartitionAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable.42"*, %"struct.WTF::KeyValuePair.30"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %1, i64 0, i32 1, i32 0
  %4 = load %"class.blink::HbFontCacheEntry"*, %"class.blink::HbFontCacheEntry"** %3, align 8
  %5 = icmp eq %"class.blink::HbFontCacheEntry"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::HbFontCacheEntry", %"class.blink::HbFontCacheEntry"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #7
  %8 = getelementptr inbounds %"class.blink::HbFontCacheEntry", %"class.blink::HbFontCacheEntry"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  tail call void @_ZN5blink16HbFontCacheEntryD1Ev(%"class.blink::HbFontCacheEntry"* nonnull %4) #7
  %12 = bitcast %"class.blink::HbFontCacheEntry"* %4 to i8*
  tail call void @free(i8* %12) #7
  br label %13

13:                                               ; preds = %2, %6, %11
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %1, i64 0, i32 0
  store i64 -2, i64* %14, align 8
  %15 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %0, i64 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = add i32 %16, 1
  %18 = and i32 %17, 2147483647
  %19 = and i32 %16, -2147483648
  %20 = or i32 %18, %19
  store i32 %20, i32* %15, align 8
  %21 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = add i32 %22, -1
  store i32 %23, i32* %21, align 4
  %24 = mul i32 %23, 6
  %25 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %0, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ult i32 %24, %26
  %28 = icmp ugt i32 %26, 8
  %29 = and i1 %27, %28
  br i1 %29, label %30, label %61

30:                                               ; preds = %13
  %31 = lshr i32 %26, 1
  %32 = zext i32 %31 to i64
  %33 = shl nuw nsw i64 %32, 4
  %34 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %33, i8* getelementptr inbounds ([121 x i8], [121 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIm13scoped_refptrIN5blink16HbFontCacheEntryEEEEEEPKcv, i64 0, i64 0)) #7
  %35 = bitcast i8* %34 to %"struct.WTF::KeyValuePair.30"*
  %36 = icmp eq i32 %31, 0
  br i1 %36, label %59, label %37

37:                                               ; preds = %30
  %38 = and i64 %32, 1
  %39 = icmp eq i32 %31, 1
  br i1 %39, label %53, label %40

40:                                               ; preds = %37
  %41 = sub nsw i64 %32, %38
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi i64 [ 0, %40 ], [ %50, %42 ]
  %44 = phi i64 [ %41, %40 ], [ %51, %42 ]
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %35, i64 %43, i32 0
  store i64 -1, i64* %45, align 8
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %35, i64 %43, i32 1, i32 0
  store %"class.blink::HbFontCacheEntry"* null, %"class.blink::HbFontCacheEntry"** %46, align 8
  %47 = or i64 %43, 1
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %35, i64 %47, i32 0
  store i64 -1, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %35, i64 %47, i32 1, i32 0
  store %"class.blink::HbFontCacheEntry"* null, %"class.blink::HbFontCacheEntry"** %49, align 8
  %50 = add nuw nsw i64 %43, 2
  %51 = add i64 %44, -2
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %42

53:                                               ; preds = %42, %37
  %54 = phi i64 [ 0, %37 ], [ %50, %42 ]
  %55 = icmp eq i64 %38, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %35, i64 %54, i32 0
  store i64 -1, i64* %57, align 8
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %35, i64 %54, i32 1, i32 0
  store %"class.blink::HbFontCacheEntry"* null, %"class.blink::HbFontCacheEntry"** %58, align 8
  br label %59

59:                                               ; preds = %56, %53, %30
  %60 = tail call %"struct.WTF::KeyValuePair.30"* @_ZN3WTF9HashTableImNS_12KeyValuePairIm13scoped_refptrIN5blink16HbFontCacheEntryEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSI_(%"class.WTF::HashTable.42"* %0, %"struct.WTF::KeyValuePair.30"* %35, i32 %31, %"struct.WTF::KeyValuePair.30"* null) #7
  br label %61

61:                                               ; preds = %59, %13
  ret void
}

declare void @hb_set_destroy(%struct.hb_set_t*) local_unnamed_addr #2

declare void @hb_blob_destroy(%struct.hb_blob_t*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK6SkFont11refTypefaceEv: argument 0"}
!6 = distinct !{!6, !"_ZNK6SkFont11refTypefaceEv"}
