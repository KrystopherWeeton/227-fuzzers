; ModuleID = '../../third_party/libaom/source/libaom/aom/src/aom_integer.c'
source_filename = "../../third_party/libaom/source/libaom/aom/src/aom_integer.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @aom_uleb_size_in_bytes(i64) local_unnamed_addr #0 {
  br label %2

2:                                                ; preds = %2, %1
  %3 = phi i64 [ %0, %1 ], [ %6, %2 ]
  %4 = phi i64 [ 0, %1 ], [ %5, %2 ]
  %5 = add nuw nsw i64 %4, 1
  %6 = lshr i64 %3, 7
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %2

8:                                                ; preds = %2
  ret i64 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @aom_uleb_decode(i8* readonly, i64, i64*, i64*) local_unnamed_addr #1 {
  %5 = icmp ne i8* %0, null
  %6 = icmp ne i64* %2, null
  %7 = and i1 %5, %6
  br i1 %7, label %8, label %28

8:                                                ; preds = %4
  store i64 0, i64* %2, align 8
  %9 = icmp eq i64 %1, 0
  br i1 %9, label %28, label %10

10:                                               ; preds = %8
  %11 = load i8, i8* %0, align 1
  %12 = and i8 %11, 127
  %13 = zext i8 %12 to i64
  store i64 %13, i64* %2, align 8
  %14 = load i8, i8* %0, align 1
  %15 = icmp sgt i8 %14, -1
  br i1 %15, label %16, label %22

16:                                               ; preds = %96, %85, %74, %63, %52, %41, %30, %10
  %17 = phi i64 [ 1, %10 ], [ 2, %30 ], [ 3, %41 ], [ 4, %52 ], [ 5, %63 ], [ 6, %74 ], [ 7, %85 ], [ 8, %96 ]
  %18 = phi i64 [ %13, %10 ], [ %36, %30 ], [ %47, %41 ], [ %58, %52 ], [ %69, %63 ], [ %80, %74 ], [ %91, %85 ], [ %102, %96 ]
  %19 = icmp eq i64* %3, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %16
  store i64 %17, i64* %3, align 8
  %21 = load i64, i64* %2, align 8
  br label %24

22:                                               ; preds = %10
  %23 = icmp ugt i64 %1, 1
  br i1 %23, label %30, label %28

24:                                               ; preds = %16, %20
  %25 = phi i64 [ %18, %16 ], [ %21, %20 ]
  %26 = icmp ugt i64 %25, 4294967295
  %27 = sext i1 %26 to i32
  br label %28

28:                                               ; preds = %96, %22, %39, %50, %61, %72, %83, %94, %8, %4, %24
  %29 = phi i32 [ %27, %24 ], [ -1, %4 ], [ -1, %8 ], [ -1, %94 ], [ -1, %83 ], [ -1, %72 ], [ -1, %61 ], [ -1, %50 ], [ -1, %39 ], [ -1, %22 ], [ -1, %96 ]
  ret i32 %29

30:                                               ; preds = %22
  %31 = getelementptr inbounds i8, i8* %0, i64 1
  %32 = load i8, i8* %31, align 1
  %33 = and i8 %32, 127
  %34 = zext i8 %33 to i64
  %35 = shl nuw nsw i64 %34, 7
  %36 = or i64 %35, %13
  store i64 %36, i64* %2, align 8
  %37 = load i8, i8* %31, align 1
  %38 = icmp sgt i8 %37, -1
  br i1 %38, label %16, label %39

39:                                               ; preds = %30
  %40 = icmp ugt i64 %1, 2
  br i1 %40, label %41, label %28

41:                                               ; preds = %39
  %42 = getelementptr inbounds i8, i8* %0, i64 2
  %43 = load i8, i8* %42, align 1
  %44 = and i8 %43, 127
  %45 = zext i8 %44 to i64
  %46 = shl nuw nsw i64 %45, 14
  %47 = or i64 %46, %36
  store i64 %47, i64* %2, align 8
  %48 = load i8, i8* %42, align 1
  %49 = icmp sgt i8 %48, -1
  br i1 %49, label %16, label %50

50:                                               ; preds = %41
  %51 = icmp ugt i64 %1, 3
  br i1 %51, label %52, label %28

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %0, i64 3
  %54 = load i8, i8* %53, align 1
  %55 = and i8 %54, 127
  %56 = zext i8 %55 to i64
  %57 = shl nuw nsw i64 %56, 21
  %58 = or i64 %57, %47
  store i64 %58, i64* %2, align 8
  %59 = load i8, i8* %53, align 1
  %60 = icmp sgt i8 %59, -1
  br i1 %60, label %16, label %61

61:                                               ; preds = %52
  %62 = icmp ugt i64 %1, 4
  br i1 %62, label %63, label %28

63:                                               ; preds = %61
  %64 = getelementptr inbounds i8, i8* %0, i64 4
  %65 = load i8, i8* %64, align 1
  %66 = and i8 %65, 127
  %67 = zext i8 %66 to i64
  %68 = shl nuw nsw i64 %67, 28
  %69 = or i64 %68, %58
  store i64 %69, i64* %2, align 8
  %70 = load i8, i8* %64, align 1
  %71 = icmp sgt i8 %70, -1
  br i1 %71, label %16, label %72

72:                                               ; preds = %63
  %73 = icmp ugt i64 %1, 5
  br i1 %73, label %74, label %28

74:                                               ; preds = %72
  %75 = getelementptr inbounds i8, i8* %0, i64 5
  %76 = load i8, i8* %75, align 1
  %77 = and i8 %76, 127
  %78 = zext i8 %77 to i64
  %79 = shl nuw nsw i64 %78, 35
  %80 = or i64 %79, %69
  store i64 %80, i64* %2, align 8
  %81 = load i8, i8* %75, align 1
  %82 = icmp sgt i8 %81, -1
  br i1 %82, label %16, label %83

83:                                               ; preds = %74
  %84 = icmp ugt i64 %1, 6
  br i1 %84, label %85, label %28

85:                                               ; preds = %83
  %86 = getelementptr inbounds i8, i8* %0, i64 6
  %87 = load i8, i8* %86, align 1
  %88 = and i8 %87, 127
  %89 = zext i8 %88 to i64
  %90 = shl nuw nsw i64 %89, 42
  %91 = or i64 %90, %80
  store i64 %91, i64* %2, align 8
  %92 = load i8, i8* %86, align 1
  %93 = icmp sgt i8 %92, -1
  br i1 %93, label %16, label %94

94:                                               ; preds = %85
  %95 = icmp ugt i64 %1, 7
  br i1 %95, label %96, label %28

96:                                               ; preds = %94
  %97 = getelementptr inbounds i8, i8* %0, i64 7
  %98 = load i8, i8* %97, align 1
  %99 = and i8 %98, 127
  %100 = zext i8 %99 to i64
  %101 = shl nuw nsw i64 %100, 49
  %102 = or i64 %101, %91
  store i64 %102, i64* %2, align 8
  %103 = load i8, i8* %97, align 1
  %104 = icmp sgt i8 %103, -1
  br i1 %104, label %16, label %28
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @aom_uleb_encode(i64, i64, i8*, i64*) local_unnamed_addr #2 {
  br label %5

5:                                                ; preds = %5, %4
  %6 = phi i64 [ %0, %4 ], [ %9, %5 ]
  %7 = phi i64 [ 0, %4 ], [ %8, %5 ]
  %8 = add nuw nsw i64 %7, 1
  %9 = lshr i64 %6, 7
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = icmp ugt i64 %0, 4294967295
  %13 = icmp ugt i64 %7, 7
  %14 = or i1 %12, %13
  br i1 %14, label %60, label %15

15:                                               ; preds = %11
  %16 = icmp ult i64 %7, %1
  %17 = icmp ne i8* %2, null
  %18 = and i1 %17, %16
  %19 = icmp ne i64* %3, null
  %20 = and i1 %19, %18
  br i1 %20, label %21, label %60

21:                                               ; preds = %15
  %22 = and i64 %8, 1
  %23 = icmp eq i64 %7, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %21
  %25 = sub nuw nsw i64 %8, %22
  br label %38

26:                                               ; preds = %38, %21
  %27 = phi i64 [ 0, %21 ], [ %57, %38 ]
  %28 = phi i64 [ %0, %21 ], [ %52, %38 ]
  %29 = icmp eq i64 %22, 0
  br i1 %29, label %37, label %30

30:                                               ; preds = %26
  %31 = trunc i64 %28 to i8
  %32 = and i8 %31, 127
  %33 = icmp ult i64 %28, 128
  %34 = or i8 %31, -128
  %35 = select i1 %33, i8 %32, i8 %34
  %36 = getelementptr inbounds i8, i8* %2, i64 %27
  store i8 %35, i8* %36, align 1
  br label %37

37:                                               ; preds = %26, %30
  store i64 %8, i64* %3, align 8
  br label %60

38:                                               ; preds = %38, %24
  %39 = phi i64 [ 0, %24 ], [ %57, %38 ]
  %40 = phi i64 [ %0, %24 ], [ %52, %38 ]
  %41 = phi i64 [ %25, %24 ], [ %58, %38 ]
  %42 = trunc i64 %40 to i8
  %43 = and i8 %42, 127
  %44 = lshr i64 %40, 7
  %45 = icmp eq i64 %44, 0
  %46 = or i8 %42, -128
  %47 = select i1 %45, i8 %43, i8 %46
  %48 = getelementptr inbounds i8, i8* %2, i64 %39
  store i8 %47, i8* %48, align 1
  %49 = or i64 %39, 1
  %50 = trunc i64 %44 to i8
  %51 = and i8 %50, 127
  %52 = lshr i64 %40, 14
  %53 = icmp eq i64 %52, 0
  %54 = or i8 %50, -128
  %55 = select i1 %53, i8 %51, i8 %54
  %56 = getelementptr inbounds i8, i8* %2, i64 %49
  store i8 %55, i8* %56, align 1
  %57 = add nuw nsw i64 %39, 2
  %58 = add i64 %41, -2
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %26, label %38

60:                                               ; preds = %11, %15, %37
  %61 = phi i32 [ 0, %37 ], [ -1, %15 ], [ -1, %11 ]
  ret i32 %61
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @aom_uleb_encode_fixed_size(i64, i64, i64, i8*, i64*) local_unnamed_addr #2 {
  %6 = icmp ult i64 %0, 4294967296
  %7 = icmp ne i8* %3, null
  %8 = and i1 %6, %7
  %9 = icmp ne i64* %4, null
  %10 = and i1 %8, %9
  br i1 %10, label %11, label %61

11:                                               ; preds = %5
  %12 = icmp ult i64 %1, %2
  %13 = icmp ugt i64 %2, 8
  %14 = or i1 %12, %13
  br i1 %14, label %61, label %15

15:                                               ; preds = %11
  %16 = mul i64 %2, 7
  %17 = lshr i64 %0, %16
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %61

19:                                               ; preds = %15
  %20 = icmp eq i64 %2, 0
  br i1 %20, label %38, label %21

21:                                               ; preds = %19
  %22 = add nsw i64 %2, -1
  %23 = and i64 %2, 1
  %24 = icmp eq i64 %2, 1
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = sub i64 %2, %23
  br label %39

27:                                               ; preds = %39, %21
  %28 = phi i64 [ 0, %21 ], [ %58, %39 ]
  %29 = phi i64 [ %0, %21 ], [ %53, %39 ]
  %30 = icmp eq i64 %23, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %27
  %32 = trunc i64 %29 to i8
  %33 = and i8 %32, 127
  %34 = icmp ult i64 %28, %22
  %35 = or i8 %32, -128
  %36 = select i1 %34, i8 %35, i8 %33
  %37 = getelementptr inbounds i8, i8* %3, i64 %28
  store i8 %36, i8* %37, align 1
  br label %38

38:                                               ; preds = %31, %27, %19
  store i64 %2, i64* %4, align 8
  br label %61

39:                                               ; preds = %39, %25
  %40 = phi i64 [ 0, %25 ], [ %58, %39 ]
  %41 = phi i64 [ %0, %25 ], [ %53, %39 ]
  %42 = phi i64 [ %26, %25 ], [ %59, %39 ]
  %43 = trunc i64 %41 to i8
  %44 = and i8 %43, 127
  %45 = lshr i64 %41, 7
  %46 = icmp ult i64 %40, %22
  %47 = or i8 %43, -128
  %48 = select i1 %46, i8 %47, i8 %44
  %49 = getelementptr inbounds i8, i8* %3, i64 %40
  store i8 %48, i8* %49, align 1
  %50 = or i64 %40, 1
  %51 = trunc i64 %45 to i8
  %52 = and i8 %51, 127
  %53 = lshr i64 %41, 14
  %54 = icmp ult i64 %50, %22
  %55 = or i8 %51, -128
  %56 = select i1 %54, i8 %55, i8 %52
  %57 = getelementptr inbounds i8, i8* %3, i64 %50
  store i8 %56, i8* %57, align 1
  %58 = add nuw i64 %40, 2
  %59 = add i64 %42, -2
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %27, label %39

61:                                               ; preds = %38, %15, %11, %5
  %62 = phi i32 [ -1, %5 ], [ -1, %11 ], [ 0, %38 ], [ -1, %15 ]
  ret i32 %62
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
