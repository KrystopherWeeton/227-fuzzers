; ModuleID = '../../third_party/pdfium/core/fpdfapi/render/cpdf_imagecacheentry.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/render/cpdf_imagecacheentry.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_ImageCacheEntry = type { i32, i32, i32, %"class.fxcrt::UnownedPtr", %"class.fxcrt::RetainPtr.143", %"class.fxcrt::RetainPtr.147", %"class.fxcrt::RetainPtr.147", %"class.fxcrt::RetainPtr.147", %"class.fxcrt::RetainPtr.147" }
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_Document* }
%"class.fxcrt::RetainPtr.143" = type { %"class.std::__1::unique_ptr.144" }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %class.CPDF_Image* }
%class.CPDF_Image = type { %"class.fxcrt::Retainable", i32, i32, i32, i8, i8, i8, %"class.fxcrt::UnownedPtr", %"class.fxcrt::RetainPtr.147", %"class.fxcrt::RetainPtr.147", %"class.fxcrt::RetainPtr.163", %"class.fxcrt::RetainPtr.179" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::RetainPtr.163" = type { %"class.std::__1::unique_ptr.164" }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %class.CPDF_Stream* }
%class.CPDF_Stream = type { %class.CPDF_Object, i8, i32, %"class.fxcrt::RetainPtr.33", %"class.std::__1::unique_ptr.167", %"class.fxcrt::RetainPtr.171" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::RetainPtr.33" = type { %"class.std::__1::unique_ptr.34" }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map.37" }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.482" }
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.493", %"class.std::__1::__compressed_pair.498", %"class.std::__1::__compressed_pair.500", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.488" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.488" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { float }
%"class.std::__1::map.37" = type { %"class.std::__1::__tree.38" }
%"class.std::__1::__tree.38" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { i8* }
%"class.fxcrt::RetainPtr.171" = type { %"class.std::__1::unique_ptr.172" }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type { %class.IFX_StreamWithSize, %"class.fxcrt::Retainable" }
%class.IFX_StreamWithSize = type { i32 (...)** }
%"class.fxcrt::RetainPtr.179" = type { %"class.std::__1::unique_ptr.180" }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %class.CPDF_Dictionary* }
%"class.fxcrt::RetainPtr.147" = type { %"class.std::__1::unique_ptr.148" }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %class.CFX_DIBBase* }
%class.CFX_DIBBase = type { %"class.fxcrt::Retainable", i16, i32, i32, i32, %"class.fxcrt::RetainPtr.151", %"class.std::__1::vector.157" }
%"class.fxcrt::RetainPtr.151" = type { %"class.std::__1::unique_ptr.152" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type { %class.CFX_DIBBase, %"class.fxcrt::MaybeOwned" }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.167", %"class.fxcrt::UnownedPtr.187" }
%"class.fxcrt::UnownedPtr.187" = type { i8* }
%"class.std::__1::vector.157" = type { %"class.std::__1::__vector_base.158" }
%"class.std::__1::__vector_base.158" = type { i32*, i32*, %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { i32* }
%class.CPDF_Document = type { %"class.CPDF_Parser::ParsedObjectsHolder", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.16", %"class.fxcrt::RetainPtr.33", %"class.fxcrt::RetainPtr.33", %"class.std::__1::vector", i8, i8, i32, i32, %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.123", %"class.std::__1::vector.129", %"class.CPDF_Document::StockFontClearer", %"class.std::__1::unique_ptr.137" }
%"class.CPDF_Parser::ParsedObjectsHolder" = type { %class.CPDF_IndirectObjectHolder }
%class.CPDF_IndirectObjectHolder = type { i32 (...)**, i32, %"class.std::__1::map", %"class.fxcrt::WeakPtr" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.4" }
%"class.std::__1::__tree.4" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %class.CPDF_Parser* }
%class.CPDF_Parser = type <{ %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.23", %"class.fxcrt::UnownedPtr.29", i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.30", i64, %"class.fxcrt::RetainPtr.62", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.74", %"class.std::__1::map.80", %"class.std::__1::set.89", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %class.CPDF_SyntaxParser* }
%class.CPDF_SyntaxParser = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.fxcrt::UnownedPtr.29" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %class.CPDF_CrossRefTable* }
%class.CPDF_CrossRefTable = type { %"class.fxcrt::RetainPtr.33", %"class.std::__1::map.50" }
%"class.std::__1::map.50" = type { %"class.std::__1::__tree.51" }
%"class.std::__1::__tree.51" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.fxcrt::RetainPtr.62" = type { %"class.std::__1::unique_ptr.63" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %class.CPDF_SecurityHandler* }
%class.CPDF_SecurityHandler = type opaque
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.68" }
%"class.fxcrt::RetainPtr.68" = type { %"class.std::__1::unique_ptr.69" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %class.CPDF_LinearizedHeader* }
%class.CPDF_LinearizedHeader = type opaque
%"class.std::__1::map.80" = type { %"class.std::__1::__tree.81" }
%"class.std::__1::__tree.81" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.82", %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.89" = type { %"class.std::__1::__tree.90" }
%"class.std::__1::__tree.90" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.91", %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.100" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.CPDF_Document::RenderDataIface"* }
%"class.CPDF_Document::RenderDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.CPDF_Document::PageDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %class.JBig2_DocumentContext* }
%class.JBig2_DocumentContext = type opaque
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.CPDF_Document::LinkListIface"* }
%"class.CPDF_Document::LinkListIface" = type { i32 (...)** }
%"class.std::__1::vector.129" = type { %"class.std::__1::__vector_base.130" }
%"class.std::__1::__vector_base.130" = type { i32*, i32*, %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"class.CPDF_Document::StockFontClearer" = type { %"class.fxcrt::UnownedPtr.136" }
%"class.fxcrt::UnownedPtr.136" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.CPDF_Document::Extension"* }
%"class.CPDF_Document::Extension" = type { i32 (...)** }
%class.CPDF_RenderStatus = type <{ %class.CPDF_RenderOptions, %"class.fxcrt::RetainPtr.179", %"class.fxcrt::RetainPtr.179", %"class.std::__1::vector.205", %"class.fxcrt::UnownedPtr.213", %"class.fxcrt::UnownedPtr.310", %class.CFX_Matrix, %class.CPDF_ClipPath, %"class.fxcrt::UnownedPtr.333", %"class.fxcrt::UnownedPtr.333", %class.CPDF_GraphicStates, %"class.std::__1::unique_ptr.432", %"class.fxcrt::UnownedPtr.438", %class.CPDF_Transparency, i8, i8, i8, i8, i8, i8, i32, i32, i32, [4 x i8] }>
%class.CPDF_RenderOptions = type { i8, i8, %"struct.CPDF_RenderOptions::Options", %"struct.CPDF_RenderOptions::ColorScheme", %"class.fxcrt::RetainPtr.188" }
%"struct.CPDF_RenderOptions::Options" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.CPDF_RenderOptions::ColorScheme" = type { i32, i32, i32, i32 }
%"class.fxcrt::RetainPtr.188" = type { %"class.std::__1::unique_ptr.189" }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %class.CPDF_OCContext* }
%class.CPDF_OCContext = type { %"class.fxcrt::Retainable", %"class.fxcrt::UnownedPtr", i32, %"class.std::__1::map.192" }
%"class.std::__1::map.192" = type { %"class.std::__1::__tree.193" }
%"class.std::__1::__tree.193" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.194", %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.205" = type { %"class.std::__1::__vector_base.206" }
%"class.std::__1::__vector_base.206" = type { %"class.fxcrt::UnownedPtr.207"*, %"class.fxcrt::UnownedPtr.207"*, %"class.std::__1::__compressed_pair.208" }
%"class.fxcrt::UnownedPtr.207" = type opaque
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.fxcrt::UnownedPtr.207"* }
%"class.fxcrt::UnownedPtr.213" = type { %class.CPDF_RenderContext* }
%class.CPDF_RenderContext = type { %"class.fxcrt::UnownedPtr", %"class.fxcrt::RetainPtr.33", %"class.fxcrt::UnownedPtr.214", %"class.std::__1::vector.302" }
%"class.fxcrt::UnownedPtr.214" = type { %class.CPDF_PageRenderCache* }
%class.CPDF_PageRenderCache = type <{ %"class.CPDF_Page::RenderCacheIface", %"class.fxcrt::UnownedPtr.215", %"class.std::__1::map.283", %"class.fxcrt::MaybeOwned.294", i32, i32, i8, [7 x i8] }>
%"class.CPDF_Page::RenderCacheIface" = type { i32 (...)** }
%"class.fxcrt::UnownedPtr.215" = type { %class.CPDF_Page* }
%class.CPDF_Page = type { %class.IPDF_Page, %class.CPDF_PageObjectHolder, %class.CFX_STemplate, %class.CFX_Matrix, %"class.fxcrt::UnownedPtr", %"class.std::__1::unique_ptr.271", %"class.std::__1::unique_ptr.277", %"class.fxcrt::ObservedPtr" }
%class.IPDF_Page = type { %"class.fxcrt::Retainable" }
%class.CPDF_PageObjectHolder = type { i32 (...)**, %"class.fxcrt::RetainPtr.33", %"class.fxcrt::RetainPtr.33", %"class.std::__1::map.216", %"class.std::__1::map.227", %class.CFX_FloatRect, %class.CPDF_Transparency, i8, i8, %"class.fxcrt::RetainPtr.33", %"class.fxcrt::UnownedPtr", %"class.std::__1::vector.238", %"class.std::__1::unique_ptr.245", %"class.std::__1::deque", %class.CFX_Matrix, %"class.std::__1::set.261" }
%"class.std::__1::map.216" = type { %"class.std::__1::__tree.217" }
%"class.std::__1::__tree.217" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.227" = type { %"class.std::__1::__tree.228" }
%"class.std::__1::__tree.228" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.229", %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%class.CFX_FloatRect = type { float, float, float, float }
%"class.std::__1::vector.238" = type { %"class.std::__1::__vector_base.239" }
%"class.std::__1::__vector_base.239" = type { %class.CFX_FloatRect*, %class.CFX_FloatRect*, %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %class.CFX_FloatRect* }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %class.CPDF_ContentParser* }
%class.CPDF_ContentParser = type opaque
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.257" }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::unique_ptr.251"**, %"class.std::__1::unique_ptr.251"**, %"class.std::__1::unique_ptr.251"**, %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %class.CPDF_PageObject* }
%class.CPDF_PageObject = type { %class.CPDF_GraphicStates, %class.CFX_FloatRect, %class.CPDF_ContentMarks, i8, i32 }
%class.CPDF_ContentMarks = type { %"class.fxcrt::RetainPtr.418" }
%"class.fxcrt::RetainPtr.418" = type { %"class.std::__1::unique_ptr.419" }
%"class.std::__1::unique_ptr.419" = type { %"class.std::__1::__compressed_pair.420" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"class.CPDF_ContentMarks::MarkData"* }
%"class.CPDF_ContentMarks::MarkData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector.422" }
%"class.std::__1::vector.422" = type { %"class.std::__1::__vector_base.423" }
%"class.std::__1::__vector_base.423" = type { %"class.fxcrt::RetainPtr.424"*, %"class.fxcrt::RetainPtr.424"*, %"class.std::__1::__compressed_pair.425" }
%"class.fxcrt::RetainPtr.424" = type opaque
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"class.fxcrt::RetainPtr.424"* }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.std::__1::unique_ptr.251"** }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.261" = type { %"class.std::__1::__tree.262" }
%"class.std::__1::__tree.262" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.263", %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%class.CFX_STemplate = type { float, float }
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.CPDF_Page::RenderCacheIface"* }
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.CPDF_Page::RenderContextIface"* }
%"class.CPDF_Page::RenderContextIface" = type { i32 (...)** }
%"class.fxcrt::ObservedPtr" = type { %"class.fxcrt::Observable::ObserverIface", %"class.CPDF_Page::View"* }
%"class.fxcrt::Observable::ObserverIface" = type { i32 (...)** }
%"class.CPDF_Page::View" = type { %"class.fxcrt::Observable" }
%"class.std::__1::map.283" = type { %"class.std::__1::__tree.284" }
%"class.std::__1::__tree.284" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.285", %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.fxcrt::MaybeOwned.294" = type { %"class.std::__1::unique_ptr.295", %"class.fxcrt::UnownedPtr.301" }
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %class.CPDF_ImageCacheEntry* }
%"class.fxcrt::UnownedPtr.301" = type { %class.CPDF_ImageCacheEntry* }
%"class.std::__1::vector.302" = type { %"class.std::__1::__vector_base.303" }
%"class.std::__1::__vector_base.303" = type { %"class.CPDF_RenderContext::Layer"*, %"class.CPDF_RenderContext::Layer"*, %"class.std::__1::__compressed_pair.305" }
%"class.CPDF_RenderContext::Layer" = type { %"class.fxcrt::UnownedPtr.304", %class.CFX_Matrix }
%"class.fxcrt::UnownedPtr.304" = type { %class.CPDF_PageObjectHolder* }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.CPDF_RenderContext::Layer"* }
%"class.fxcrt::UnownedPtr.310" = type { %class.CFX_RenderDevice* }
%class.CFX_RenderDevice = type opaque
%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CPDF_ClipPath = type { %"class.fxcrt::SharedCopyOnWrite" }
%"class.fxcrt::SharedCopyOnWrite" = type { %"class.fxcrt::RetainPtr.311" }
%"class.fxcrt::RetainPtr.311" = type { %"class.std::__1::unique_ptr.312" }
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.CPDF_ClipPath::PathData"* }
%"class.CPDF_ClipPath::PathData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector.315", %"class.std::__1::vector.323" }
%"class.std::__1::vector.315" = type { %"class.std::__1::__vector_base.316" }
%"class.std::__1::__vector_base.316" = type { %"struct.std::__1::pair.317"*, %"struct.std::__1::pair.317"*, %"class.std::__1::__compressed_pair.318" }
%"struct.std::__1::pair.317" = type opaque
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"struct.std::__1::pair.317"* }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"class.std::__1::unique_ptr.325"*, %"class.std::__1::unique_ptr.325"*, %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::unique_ptr.325" = type opaque
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.std::__1::unique_ptr.325"* }
%"class.fxcrt::UnownedPtr.333" = type { %class.CPDF_PageObject* }
%class.CPDF_GraphicStates = type { i32 (...)**, %class.CPDF_ClipPath, %class.CFX_GraphState, %class.CPDF_ColorState, %class.CPDF_TextState, %class.CPDF_GeneralState }
%class.CFX_GraphState = type { %"class.fxcrt::SharedCopyOnWrite.334" }
%"class.fxcrt::SharedCopyOnWrite.334" = type { %"class.fxcrt::RetainPtr.335" }
%"class.fxcrt::RetainPtr.335" = type { %"class.std::__1::unique_ptr.336" }
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %class.CFX_RetainableGraphStateData* }
%class.CFX_RetainableGraphStateData = type { %"class.fxcrt::Retainable", %class.CFX_GraphStateData }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.339" }
%"class.std::__1::vector.339" = type { %"class.std::__1::__vector_base.340" }
%"class.std::__1::__vector_base.340" = type { float*, float*, %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { float* }
%class.CPDF_ColorState = type { %"class.fxcrt::SharedCopyOnWrite.348" }
%"class.fxcrt::SharedCopyOnWrite.348" = type { %"class.fxcrt::RetainPtr.349" }
%"class.fxcrt::RetainPtr.349" = type { %"class.std::__1::unique_ptr.350" }
%"class.std::__1::unique_ptr.350" = type { %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"class.CPDF_ColorState::ColorData"* }
%"class.CPDF_ColorState::ColorData" = type { %"class.fxcrt::Retainable", i32, i32, %class.CPDF_Color, %class.CPDF_Color }
%class.CPDF_Color = type { %"class.std::__1::vector.339", %"class.std::__1::unique_ptr.353", %"class.fxcrt::RetainPtr.371" }
%"class.std::__1::unique_ptr.353" = type { %"class.std::__1::__compressed_pair.354" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %class.PatternValue* }
%class.PatternValue = type { %"class.fxcrt::RetainPtr.356", %"struct.std::__1::array" }
%"class.fxcrt::RetainPtr.356" = type { %"class.std::__1::unique_ptr.357" }
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %class.CPDF_Pattern* }
%class.CPDF_Pattern = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr", %"class.fxcrt::RetainPtr.360", %class.CFX_Matrix, %class.CFX_Matrix }
%"class.fxcrt::RetainPtr.360" = type { %"class.std::__1::unique_ptr.361" }
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %class.CPDF_Object* }
%"struct.std::__1::array" = type { [16 x float] }
%"class.fxcrt::RetainPtr.371" = type { %"class.std::__1::unique_ptr.372" }
%"class.std::__1::unique_ptr.372" = type { %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %class.CPDF_ColorSpace* }
%class.CPDF_ColorSpace = type <{ %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr.375", %"class.fxcrt::RetainPtr.376", i32, i32, i32, [4 x i8] }>
%"class.fxcrt::UnownedPtr.375" = type { %class.CPDF_Document* }
%"class.fxcrt::RetainPtr.376" = type { %"class.std::__1::unique_ptr.377" }
%"class.std::__1::unique_ptr.377" = type { %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %class.CPDF_Array* }
%class.CPDF_Array = type opaque
%class.CPDF_TextState = type { %"class.fxcrt::SharedCopyOnWrite.386" }
%"class.fxcrt::SharedCopyOnWrite.386" = type { %"class.fxcrt::RetainPtr.387" }
%"class.fxcrt::RetainPtr.387" = type { %"class.std::__1::unique_ptr.388" }
%"class.std::__1::unique_ptr.388" = type { %"class.std::__1::__compressed_pair.389" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"class.CPDF_TextState::TextData"* }
%"class.CPDF_TextState::TextData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::RetainPtr.391", %"class.fxcrt::UnownedPtr.375", float, float, float, i32, [4 x float], [4 x float] }
%"class.fxcrt::RetainPtr.391" = type { %"class.std::__1::unique_ptr.392" }
%"class.std::__1::unique_ptr.392" = type { %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.394" }
%"struct.std::__1::__compressed_pair_elem.394" = type { %class.CPDF_Font* }
%class.CPDF_Font = type opaque
%class.CPDF_GeneralState = type { %"class.fxcrt::SharedCopyOnWrite.399" }
%"class.fxcrt::SharedCopyOnWrite.399" = type { %"class.fxcrt::RetainPtr.400" }
%"class.fxcrt::RetainPtr.400" = type { %"class.std::__1::unique_ptr.401" }
%"class.std::__1::unique_ptr.401" = type { %"class.std::__1::__compressed_pair.402" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"class.CPDF_GeneralState::StateData"* }
%"class.CPDF_GeneralState::StateData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::ByteString", i32, %"class.fxcrt::RetainPtr.360", %class.CFX_Matrix, float, float, %"class.fxcrt::RetainPtr.404", %"class.fxcrt::RetainPtr.410", %class.CFX_Matrix, i32, i8, i8, i8, i8, i8, i32, %"class.fxcrt::RetainPtr.404", %"class.fxcrt::RetainPtr.404", %"class.fxcrt::RetainPtr.404", float, float }
%"class.fxcrt::RetainPtr.410" = type { %"class.std::__1::unique_ptr.411" }
%"class.std::__1::unique_ptr.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %class.CPDF_TransferFunc* }
%class.CPDF_TransferFunc = type opaque
%"class.fxcrt::RetainPtr.404" = type { %"class.std::__1::unique_ptr.405" }
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %class.CPDF_Object* }
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %class.CPDF_ImageRenderer* }
%class.CPDF_ImageRenderer = type opaque
%"class.fxcrt::UnownedPtr.438" = type { %class.CPDF_Type3Char* }
%class.CPDF_Type3Char = type opaque
%class.CPDF_Transparency = type { i8, i8 }
%class.CPDF_DIB = type { %class.CFX_DIBBase, %"class.fxcrt::UnownedPtr", %"class.fxcrt::RetainPtr.445", %"class.fxcrt::RetainPtr.179", %"class.fxcrt::RetainPtr.451", %"class.fxcrt::RetainPtr.371", i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.457", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.167", %"class.fxcrt::RetainPtr.151", %"class.fxcrt::RetainPtr.439", %"class.fxcrt::RetainPtr.451", %"class.std::__1::unique_ptr.464", %"struct.CPDF_DIB::JpxSMaskInlineData", %"class.std::__1::unique_ptr.476" }
%"class.fxcrt::RetainPtr.445" = type { %"class.std::__1::unique_ptr.446" }
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %class.CPDF_Stream* }
%"class.std::__1::vector.457" = type { %"class.std::__1::__vector_base.458" }
%"class.std::__1::__vector_base.458" = type { %struct.DIB_COMP_DATA*, %struct.DIB_COMP_DATA*, %"class.std::__1::__compressed_pair.459" }
%struct.DIB_COMP_DATA = type { float, float, i32, i32 }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %struct.DIB_COMP_DATA* }
%"class.fxcrt::RetainPtr.439" = type { %"class.std::__1::unique_ptr.440" }
%"class.std::__1::unique_ptr.440" = type { %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.442" = type { %class.CPDF_DIB* }
%"class.fxcrt::RetainPtr.451" = type { %"class.std::__1::unique_ptr.452" }
%"class.std::__1::unique_ptr.452" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %class.CPDF_StreamAcc* }
%class.CPDF_StreamAcc = type opaque
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.fxcodec::ScanlineDecoder"* }
%"class.fxcodec::ScanlineDecoder" = type opaque
%"struct.CPDF_DIB::JpxSMaskInlineData" = type { i32, i32, %"class.std::__1::vector.470" }
%"class.std::__1::vector.470" = type { %"class.std::__1::__vector_base.471" }
%"class.std::__1::__vector_base.471" = type { i8*, i8*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"class.std::__1::unique_ptr.476" = type { %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.fxcodec::Jbig2Context"* }
%"class.fxcodec::Jbig2Context" = type opaque
%struct.FX_RECT = type { i32, i32, i32, i32 }
%class.PauseIndicatorIface = type opaque

@_ZN20CPDF_ImageCacheEntryC1EP13CPDF_DocumentRKN5fxcrt9RetainPtrI10CPDF_ImageEE = hidden unnamed_addr alias void (%class.CPDF_ImageCacheEntry*, %class.CPDF_Document*, %"class.fxcrt::RetainPtr.143"*), void (%class.CPDF_ImageCacheEntry*, %class.CPDF_Document*, %"class.fxcrt::RetainPtr.143"*)* @_ZN20CPDF_ImageCacheEntryC2EP13CPDF_DocumentRKN5fxcrt9RetainPtrI10CPDF_ImageEE
@_ZN20CPDF_ImageCacheEntryD1Ev = hidden unnamed_addr alias void (%class.CPDF_ImageCacheEntry*), void (%class.CPDF_ImageCacheEntry*)* @_ZN20CPDF_ImageCacheEntryD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN20CPDF_ImageCacheEntryC2EP13CPDF_DocumentRKN5fxcrt9RetainPtrI10CPDF_ImageEE(%class.CPDF_ImageCacheEntry* nocapture, %class.CPDF_Document*, %"class.fxcrt::RetainPtr.143"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 0
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 1
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 2
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 3, i32 0
  store %class.CPDF_Document* %1, %class.CPDF_Document** %7, align 8
  %8 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.fxcrt::RetainPtr.143", %"class.fxcrt::RetainPtr.143"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %class.CPDF_Image*, %class.CPDF_Image** %9, align 8
  %11 = ptrtoint %class.CPDF_Image* %10 to i64
  %12 = bitcast %"class.fxcrt::RetainPtr.143"* %8 to i64*
  store i64 %11, i64* %12, align 8
  %13 = icmp eq %class.CPDF_Image* %10, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %10, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = add nsw i64 %16, 1
  store i64 %17, i64* %15, align 8
  br label %18

18:                                               ; preds = %3, %14
  %19 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 5
  %20 = bitcast %"class.fxcrt::RetainPtr.147"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CPDF_ImageCacheEntryD2Ev(%class.CPDF_ImageCacheEntry* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %2, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %2, align 8
  %4 = icmp eq %class.CFX_DIBBase* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %3, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add nsw i64 %7, -1
  store i64 %8, i64* %6, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %3, i64 0, i32 0
  %12 = bitcast %class.CFX_DIBBase* %3 to void (%"class.fxcrt::Retainable"*)***
  %13 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %13, i64 1
  %15 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, align 8
  tail call void %15(%"class.fxcrt::Retainable"* nonnull %11) #5
  br label %16

16:                                               ; preds = %1, %5, %10
  %17 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %18 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %17, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %17, align 8
  %19 = icmp eq %class.CFX_DIBBase* %18, null
  br i1 %19, label %31, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %18, i64 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = add nsw i64 %22, -1
  store i64 %23, i64* %21, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %31

25:                                               ; preds = %20
  %26 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %18, i64 0, i32 0
  %27 = bitcast %class.CFX_DIBBase* %18 to void (%"class.fxcrt::Retainable"*)***
  %28 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %28, i64 1
  %30 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %29, align 8
  tail call void %30(%"class.fxcrt::Retainable"* nonnull %26) #5
  br label %31

31:                                               ; preds = %16, %20, %25
  %32 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %33 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %32, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %32, align 8
  %34 = icmp eq %class.CFX_DIBBase* %33, null
  br i1 %34, label %46, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %33, i64 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = add nsw i64 %37, -1
  store i64 %38, i64* %36, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %46

40:                                               ; preds = %35
  %41 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %33, i64 0, i32 0
  %42 = bitcast %class.CFX_DIBBase* %33 to void (%"class.fxcrt::Retainable"*)***
  %43 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %43, i64 1
  %45 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %44, align 8
  tail call void %45(%"class.fxcrt::Retainable"* nonnull %41) #5
  br label %46

46:                                               ; preds = %31, %35, %40
  %47 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %48 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %47, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %47, align 8
  %49 = icmp eq %class.CFX_DIBBase* %48, null
  br i1 %49, label %61, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %48, i64 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = add nsw i64 %52, -1
  store i64 %53, i64* %51, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %61

55:                                               ; preds = %50
  %56 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %48, i64 0, i32 0
  %57 = bitcast %class.CFX_DIBBase* %48 to void (%"class.fxcrt::Retainable"*)***
  %58 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %58, i64 1
  %60 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %59, align 8
  tail call void %60(%"class.fxcrt::Retainable"* nonnull %56) #5
  br label %61

61:                                               ; preds = %46, %50, %55
  %62 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %63 = load %class.CPDF_Image*, %class.CPDF_Image** %62, align 8
  store %class.CPDF_Image* null, %class.CPDF_Image** %62, align 8
  %64 = icmp eq %class.CPDF_Image* %63, null
  br i1 %64, label %76, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %63, i64 0, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = add nsw i64 %67, -1
  store i64 %68, i64* %66, align 8
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %76

70:                                               ; preds = %65
  %71 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %63, i64 0, i32 0
  %72 = bitcast %class.CPDF_Image* %63 to void (%"class.fxcrt::Retainable"*)***
  %73 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %73, i64 1
  %75 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %74, align 8
  tail call void %75(%"class.fxcrt::Retainable"* nonnull %71) #5
  br label %76

76:                                               ; preds = %61, %65, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CPDF_ImageCacheEntry5ResetEv(%class.CPDF_ImageCacheEntry* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %2, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %2, align 8
  %4 = icmp eq %class.CFX_DIBBase* %3, null
  br i1 %4, label %37, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %3, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add nsw i64 %7, -1
  store i64 %8, i64* %6, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %3, i64 0, i32 0
  %12 = bitcast %class.CFX_DIBBase* %3 to void (%"class.fxcrt::Retainable"*)***
  %13 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %13, i64 1
  %15 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, align 8
  tail call void %15(%"class.fxcrt::Retainable"* nonnull %11) #5
  br label %16

16:                                               ; preds = %5, %10
  %17 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %2, align 8
  %18 = icmp eq %class.CFX_DIBBase* %17, null
  br i1 %18, label %37, label %19

19:                                               ; preds = %16
  %20 = bitcast %class.CFX_DIBBase* %17 to i8* (%class.CFX_DIBBase*)***
  %21 = load i8* (%class.CFX_DIBBase*)**, i8* (%class.CFX_DIBBase*)*** %20, align 8
  %22 = getelementptr inbounds i8* (%class.CFX_DIBBase*)*, i8* (%class.CFX_DIBBase*)** %21, i64 2
  %23 = load i8* (%class.CFX_DIBBase*)*, i8* (%class.CFX_DIBBase*)** %22, align 8
  %24 = tail call i8* %23(%class.CFX_DIBBase* nonnull %17) #5
  %25 = icmp eq i8* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %19
  %27 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %2, align 8
  %28 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %27, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %27, i64 0, i32 4
  %31 = load i32, i32* %30, align 4
  %32 = mul i32 %31, %29
  %33 = tail call i64 @_ZNK11CFX_DIBBase22GetRequiredPaletteSizeEv(%class.CFX_DIBBase* %27) #5
  %34 = trunc i64 %33 to i32
  %35 = shl i32 %34, 2
  %36 = add i32 %35, %32
  br label %37

37:                                               ; preds = %1, %26, %19, %16
  %38 = phi i32 [ %36, %26 ], [ 0, %19 ], [ 0, %16 ], [ 0, %1 ]
  %39 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %40 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %39, align 8
  %41 = icmp eq %class.CFX_DIBBase* %40, null
  br i1 %41, label %60, label %42

42:                                               ; preds = %37
  %43 = bitcast %class.CFX_DIBBase* %40 to i8* (%class.CFX_DIBBase*)***
  %44 = load i8* (%class.CFX_DIBBase*)**, i8* (%class.CFX_DIBBase*)*** %43, align 8
  %45 = getelementptr inbounds i8* (%class.CFX_DIBBase*)*, i8* (%class.CFX_DIBBase*)** %44, i64 2
  %46 = load i8* (%class.CFX_DIBBase*)*, i8* (%class.CFX_DIBBase*)** %45, align 8
  %47 = tail call i8* %46(%class.CFX_DIBBase* nonnull %40) #5
  %48 = icmp eq i8* %47, null
  br i1 %48, label %60, label %49

49:                                               ; preds = %42
  %50 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %39, align 8
  %51 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %50, i64 0, i32 3
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %50, i64 0, i32 4
  %54 = load i32, i32* %53, align 4
  %55 = mul i32 %54, %52
  %56 = tail call i64 @_ZNK11CFX_DIBBase22GetRequiredPaletteSizeEv(%class.CFX_DIBBase* %50) #5
  %57 = trunc i64 %56 to i32
  %58 = shl i32 %57, 2
  %59 = add i32 %58, %55
  br label %60

60:                                               ; preds = %37, %42, %49
  %61 = phi i32 [ %59, %49 ], [ 0, %42 ], [ 0, %37 ]
  %62 = add i32 %61, %38
  %63 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 2
  store i32 %62, i32* %63, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CPDF_ImageCacheEntry8CalcSizeEv(%class.CPDF_ImageCacheEntry* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %2, align 8
  %4 = icmp eq %class.CFX_DIBBase* %3, null
  br i1 %4, label %23, label %5

5:                                                ; preds = %1
  %6 = bitcast %class.CFX_DIBBase* %3 to i8* (%class.CFX_DIBBase*)***
  %7 = load i8* (%class.CFX_DIBBase*)**, i8* (%class.CFX_DIBBase*)*** %6, align 8
  %8 = getelementptr inbounds i8* (%class.CFX_DIBBase*)*, i8* (%class.CFX_DIBBase*)** %7, i64 2
  %9 = load i8* (%class.CFX_DIBBase*)*, i8* (%class.CFX_DIBBase*)** %8, align 8
  %10 = tail call i8* %9(%class.CFX_DIBBase* nonnull %3) #5
  %11 = icmp eq i8* %10, null
  br i1 %11, label %23, label %12

12:                                               ; preds = %5
  %13 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %2, align 8
  %14 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %13, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %13, i64 0, i32 4
  %17 = load i32, i32* %16, align 4
  %18 = mul i32 %17, %15
  %19 = tail call i64 @_ZNK11CFX_DIBBase22GetRequiredPaletteSizeEv(%class.CFX_DIBBase* %13) #5
  %20 = trunc i64 %19 to i32
  %21 = shl i32 %20, 2
  %22 = add i32 %21, %18
  br label %23

23:                                               ; preds = %1, %5, %12
  %24 = phi i32 [ %22, %12 ], [ 0, %5 ], [ 0, %1 ]
  %25 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %26 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %25, align 8
  %27 = icmp eq %class.CFX_DIBBase* %26, null
  br i1 %27, label %46, label %28

28:                                               ; preds = %23
  %29 = bitcast %class.CFX_DIBBase* %26 to i8* (%class.CFX_DIBBase*)***
  %30 = load i8* (%class.CFX_DIBBase*)**, i8* (%class.CFX_DIBBase*)*** %29, align 8
  %31 = getelementptr inbounds i8* (%class.CFX_DIBBase*)*, i8* (%class.CFX_DIBBase*)** %30, i64 2
  %32 = load i8* (%class.CFX_DIBBase*)*, i8* (%class.CFX_DIBBase*)** %31, align 8
  %33 = tail call i8* %32(%class.CFX_DIBBase* nonnull %26) #5
  %34 = icmp eq i8* %33, null
  br i1 %34, label %46, label %35

35:                                               ; preds = %28
  %36 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %25, align 8
  %37 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %36, i64 0, i32 3
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %36, i64 0, i32 4
  %40 = load i32, i32* %39, align 4
  %41 = mul i32 %40, %38
  %42 = tail call i64 @_ZNK11CFX_DIBBase22GetRequiredPaletteSizeEv(%class.CFX_DIBBase* %36) #5
  %43 = trunc i64 %42 to i32
  %44 = shl i32 %43, 2
  %45 = add i32 %44, %41
  br label %46

46:                                               ; preds = %23, %28, %35
  %47 = phi i32 [ %45, %35 ], [ 0, %28 ], [ 0, %23 ]
  %48 = add i32 %47, %24
  %49 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 2
  store i32 %48, i32* %49, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN20CPDF_ImageCacheEntry12DetachBitmapEv(%"class.fxcrt::RetainPtr.147"* noalias nocapture sret, %class.CPDF_ImageCacheEntry* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %1, i64 0, i32 5
  %4 = bitcast %"class.fxcrt::RetainPtr.147"* %0 to i64*
  %5 = bitcast %"class.fxcrt::RetainPtr.147"* %3 to i64*
  %6 = load i64, i64* %5, align 8
  store i64 %6, i64* %4, align 8
  store i64 0, i64* %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN20CPDF_ImageCacheEntry10DetachMaskEv(%"class.fxcrt::RetainPtr.147"* noalias nocapture sret, %class.CPDF_ImageCacheEntry* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %1, i64 0, i32 6
  %4 = bitcast %"class.fxcrt::RetainPtr.147"* %0 to i64*
  %5 = bitcast %"class.fxcrt::RetainPtr.147"* %3 to i64*
  %6 = load i64, i64* %5, align 8
  store i64 %6, i64* %4, align 8
  store i64 0, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN20CPDF_ImageCacheEntry20StartGetCachedBitmapEPK15CPDF_DictionaryPK17CPDF_RenderStatusb(%class.CPDF_ImageCacheEntry* nocapture, %class.CPDF_Dictionary*, %class.CPDF_RenderStatus* nocapture readonly, i1 zeroext) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %6 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %5, align 8
  %7 = icmp eq %class.CFX_DIBBase* %6, null
  br i1 %7, label %56, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %10 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %9, align 8
  %11 = icmp eq %class.CFX_DIBBase* %10, %6
  br i1 %11, label %29, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %6, i64 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = add nsw i64 %14, 1
  store i64 %15, i64* %13, align 8
  %16 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %9, align 8
  store %class.CFX_DIBBase* %6, %class.CFX_DIBBase** %9, align 8
  %17 = icmp eq %class.CFX_DIBBase* %16, null
  br i1 %17, label %29, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %16, i64 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = add nsw i64 %20, -1
  store i64 %21, i64* %19, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %18
  %24 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %16, i64 0, i32 0
  %25 = bitcast %class.CFX_DIBBase* %16 to void (%"class.fxcrt::Retainable"*)***
  %26 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %26, i64 1
  %28 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %27, align 8
  tail call void %28(%"class.fxcrt::Retainable"* nonnull %24) #5
  br label %29

29:                                               ; preds = %8, %12, %18, %23
  %30 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %31 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %30, align 8
  %32 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %33 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %32, align 8
  %34 = icmp eq %class.CFX_DIBBase* %31, %33
  br i1 %34, label %140, label %35

35:                                               ; preds = %29
  %36 = icmp eq %class.CFX_DIBBase* %33, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %33, i64 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = add nsw i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %30, align 8
  br label %42

42:                                               ; preds = %37, %35
  %43 = phi %class.CFX_DIBBase* [ %41, %37 ], [ %31, %35 ]
  store %class.CFX_DIBBase* %33, %class.CFX_DIBBase** %30, align 8
  %44 = icmp eq %class.CFX_DIBBase* %43, null
  br i1 %44, label %140, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %43, i64 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %47, -1
  store i64 %48, i64* %46, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %140

50:                                               ; preds = %45
  %51 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %43, i64 0, i32 0
  %52 = bitcast %class.CFX_DIBBase* %43 to void (%"class.fxcrt::Retainable"*)***
  %53 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %53, i64 1
  %55 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %54, align 8
  tail call void %55(%"class.fxcrt::Retainable"* nonnull %51) #5
  br label %140

56:                                               ; preds = %4
  %57 = tail call i8* @_Znwm(i64 248) #6, !noalias !2
  %58 = bitcast i8* %57 to %class.CPDF_DIB*
  tail call void @_ZN8CPDF_DIBC1Ev(%class.CPDF_DIB* nonnull %58) #5, !noalias !2
  %59 = ptrtoint i8* %57 to i64
  %60 = getelementptr inbounds i8, i8* %57, i64 8
  %61 = bitcast i8* %60 to i64*
  %62 = load i64, i64* %61, align 8, !noalias !2
  %63 = add nsw i64 %62, 2
  store i64 %63, i64* %61, align 8
  %64 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 5
  %65 = getelementptr inbounds %"class.fxcrt::RetainPtr.147", %"class.fxcrt::RetainPtr.147"* %64, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %65, align 8
  %67 = bitcast %"class.fxcrt::RetainPtr.147"* %64 to i64*
  store i64 %59, i64* %67, align 8
  %68 = icmp eq %class.CFX_DIBBase* %66, null
  br i1 %68, label %80, label %69

69:                                               ; preds = %56
  %70 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %66, i64 0, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = add nsw i64 %71, -1
  store i64 %72, i64* %70, align 8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %80

74:                                               ; preds = %69
  %75 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %66, i64 0, i32 0
  %76 = bitcast %class.CFX_DIBBase* %66 to void (%"class.fxcrt::Retainable"*)***
  %77 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %77, i64 1
  %79 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %78, align 8
  tail call void %79(%"class.fxcrt::Retainable"* nonnull %75) #5
  br label %80

80:                                               ; preds = %56, %69, %74
  %81 = load i64, i64* %61, align 8
  %82 = add nsw i64 %81, -1
  store i64 %82, i64* %61, align 8
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %90

84:                                               ; preds = %80
  %85 = bitcast i8* %57 to %"class.fxcrt::Retainable"*
  %86 = bitcast i8* %57 to void (%"class.fxcrt::Retainable"*)***
  %87 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %87, i64 1
  %89 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %88, align 8
  tail call void %89(%"class.fxcrt::Retainable"* nonnull %85) #5
  br label %90

90:                                               ; preds = %80, %84
  %91 = bitcast %"class.fxcrt::RetainPtr.147"* %64 to %class.CPDF_DIB**
  %92 = load %class.CPDF_DIB*, %class.CPDF_DIB** %91, align 8, !noalias !5
  %93 = icmp eq %class.CPDF_DIB* %92, null
  br i1 %93, label %98, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %92, i64 0, i32 0, i32 0, i32 1
  %96 = load i64, i64* %95, align 8, !noalias !5
  %97 = add nsw i64 %96, 1
  store i64 %97, i64* %95, align 8, !noalias !5
  br label %98

98:                                               ; preds = %90, %94
  %99 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 3, i32 0
  %100 = load %class.CPDF_Document*, %class.CPDF_Document** %99, align 8
  %101 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %102 = load %class.CPDF_Image*, %class.CPDF_Image** %101, align 8
  %103 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %102, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %104 = load %class.CPDF_Stream*, %class.CPDF_Stream** %103, align 8
  %105 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %106 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %105, align 8
  %107 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %2, i64 0, i32 20
  %108 = load i32, i32* %107, align 8
  %109 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %2, i64 0, i32 18
  %110 = load i8, i8* %109, align 2, !range !8
  %111 = icmp ne i8 %110, 0
  %112 = tail call zeroext i8 @_ZN8CPDF_DIB16StartLoadDIBBaseEP13CPDF_DocumentPK11CPDF_StreambPK15CPDF_DictionaryS7_bN15CPDF_ColorSpace6FamilyEb(%class.CPDF_DIB* %92, %class.CPDF_Document* %100, %class.CPDF_Stream* %104, i1 zeroext true, %class.CPDF_Dictionary* %106, %class.CPDF_Dictionary* %1, i1 zeroext %3, i32 %108, i1 zeroext %111) #5
  br i1 %93, label %124, label %113

113:                                              ; preds = %98
  %114 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %92, i64 0, i32 0, i32 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = add nsw i64 %115, -1
  store i64 %116, i64* %114, align 8
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %124

118:                                              ; preds = %113
  %119 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %92, i64 0, i32 0, i32 0
  %120 = bitcast %class.CPDF_DIB* %92 to void (%"class.fxcrt::Retainable"*)***
  %121 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %121, i64 1
  %123 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %122, align 8
  tail call void %123(%"class.fxcrt::Retainable"* nonnull %119) #5
  br label %124

124:                                              ; preds = %98, %113, %118
  switch i8 %112, label %126 [
    i8 2, label %140
    i8 1, label %125
  ]

125:                                              ; preds = %124
  tail call void @_ZN20CPDF_ImageCacheEntry23ContinueGetCachedBitmapEPK17CPDF_RenderStatus(%class.CPDF_ImageCacheEntry* %0, %class.CPDF_RenderStatus* %2)
  br label %140

126:                                              ; preds = %124
  %127 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %65, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %65, align 8
  %128 = icmp eq %class.CFX_DIBBase* %127, null
  br i1 %128, label %140, label %129

129:                                              ; preds = %126
  %130 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %127, i64 0, i32 0, i32 1
  %131 = load i64, i64* %130, align 8
  %132 = add nsw i64 %131, -1
  store i64 %132, i64* %130, align 8
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %140

134:                                              ; preds = %129
  %135 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %127, i64 0, i32 0
  %136 = bitcast %class.CFX_DIBBase* %127 to void (%"class.fxcrt::Retainable"*)***
  %137 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %136, align 8
  %138 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %137, i64 1
  %139 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %138, align 8
  tail call void %139(%"class.fxcrt::Retainable"* nonnull %135) #5
  br label %140

140:                                              ; preds = %134, %129, %126, %50, %45, %42, %29, %124, %125
  %141 = phi i8 [ %112, %124 ], [ 0, %125 ], [ 1, %29 ], [ 1, %42 ], [ 1, %45 ], [ 1, %50 ], [ 0, %126 ], [ 0, %129 ], [ 0, %134 ]
  ret i8 %141
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i8 @_ZN8CPDF_DIB16StartLoadDIBBaseEP13CPDF_DocumentPK11CPDF_StreambPK15CPDF_DictionaryS7_bN15CPDF_ColorSpace6FamilyEb(%class.CPDF_DIB*, %class.CPDF_Document*, %class.CPDF_Stream*, i1 zeroext, %class.CPDF_Dictionary*, %class.CPDF_Dictionary*, i1 zeroext, i32, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CPDF_ImageCacheEntry23ContinueGetCachedBitmapEPK17CPDF_RenderStatus(%class.CPDF_ImageCacheEntry* nocapture, %class.CPDF_RenderStatus* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.fxcrt::RetainPtr.439", align 8
  %4 = alloca %"class.fxcrt::RetainPtr.151", align 8
  %5 = alloca %"class.fxcrt::RetainPtr.151", align 8
  %6 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 5
  %7 = bitcast %"class.fxcrt::RetainPtr.147"* %6 to %class.CPDF_DIB**
  %8 = load %class.CPDF_DIB*, %class.CPDF_DIB** %7, align 8, !noalias !9
  %9 = icmp eq %class.CPDF_DIB* %8, null
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = load i32, i32* inttoptr (i64 124 to i32*), align 4
  %12 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 1
  store i32 %11, i32* %12, align 4
  br label %29

13:                                               ; preds = %2
  %14 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %8, i64 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !noalias !9
  %16 = add nsw i64 %15, 1
  store i64 %16, i64* %14, align 8, !noalias !9
  %17 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %8, i64 0, i32 11
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 1
  store i32 %18, i32* %19, align 4
  %20 = load i64, i64* %14, align 8
  %21 = add nsw i64 %20, -1
  store i64 %21, i64* %14, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %13
  %24 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %8, i64 0, i32 0, i32 0
  %25 = bitcast %class.CPDF_DIB* %8 to void (%"class.fxcrt::Retainable"*)***
  %26 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %26, i64 1
  %28 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %27, align 8
  tail call void %28(%"class.fxcrt::Retainable"* nonnull %24) #5
  br label %29

29:                                               ; preds = %10, %13, %23
  %30 = bitcast %"class.fxcrt::RetainPtr.439"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #5
  %31 = load %class.CPDF_DIB*, %class.CPDF_DIB** %7, align 8, !noalias !12
  %32 = icmp eq %class.CPDF_DIB* %31, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %31, i64 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8, !noalias !12
  %36 = add nsw i64 %35, 1
  store i64 %36, i64* %34, align 8, !noalias !12
  br label %37

37:                                               ; preds = %29, %33
  call void @_ZN8CPDF_DIB10DetachMaskEv(%"class.fxcrt::RetainPtr.439"* nonnull sret %3, %class.CPDF_DIB* %31) #5
  %38 = getelementptr inbounds %"class.fxcrt::RetainPtr.439", %"class.fxcrt::RetainPtr.439"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %class.CPDF_DIB*, %class.CPDF_DIB** %38, align 8
  %40 = ptrtoint %class.CPDF_DIB* %39 to i64
  %41 = icmp eq %class.CPDF_DIB* %39, null
  br i1 %41, label %46, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %39, i64 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = add nsw i64 %44, 1
  store i64 %45, i64* %43, align 8
  br label %46

46:                                               ; preds = %37, %42
  %47 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 6
  %48 = getelementptr inbounds %"class.fxcrt::RetainPtr.147", %"class.fxcrt::RetainPtr.147"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %48, align 8
  %50 = bitcast %"class.fxcrt::RetainPtr.147"* %47 to i64*
  store i64 %40, i64* %50, align 8
  %51 = icmp eq %class.CFX_DIBBase* %49, null
  br i1 %51, label %64, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %49, i64 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = add nsw i64 %54, -1
  store i64 %55, i64* %53, align 8
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %64

57:                                               ; preds = %52
  %58 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %49, i64 0, i32 0
  %59 = bitcast %class.CFX_DIBBase* %49 to void (%"class.fxcrt::Retainable"*)***
  %60 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %60, i64 1
  %62 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %61, align 8
  call void %62(%"class.fxcrt::Retainable"* nonnull %58) #5
  %63 = load %class.CPDF_DIB*, %class.CPDF_DIB** %38, align 8
  br label %64

64:                                               ; preds = %57, %52, %46
  %65 = phi %class.CPDF_DIB* [ %63, %57 ], [ %39, %52 ], [ %39, %46 ]
  store %class.CPDF_DIB* null, %class.CPDF_DIB** %38, align 8
  %66 = icmp eq %class.CPDF_DIB* %65, null
  br i1 %66, label %78, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %65, i64 0, i32 0, i32 0, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = add nsw i64 %69, -1
  store i64 %70, i64* %68, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %78

72:                                               ; preds = %67
  %73 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %65, i64 0, i32 0, i32 0
  %74 = bitcast %class.CPDF_DIB* %65 to void (%"class.fxcrt::Retainable"*)***
  %75 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %75, i64 1
  %77 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %76, align 8
  call void %77(%"class.fxcrt::Retainable"* nonnull %73) #5
  br label %78

78:                                               ; preds = %64, %67, %72
  br i1 %32, label %90, label %79

79:                                               ; preds = %78
  %80 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %31, i64 0, i32 0, i32 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = add nsw i64 %81, -1
  store i64 %82, i64* %80, align 8
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %90

84:                                               ; preds = %79
  %85 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %31, i64 0, i32 0, i32 0
  %86 = bitcast %class.CPDF_DIB* %31 to void (%"class.fxcrt::Retainable"*)***
  %87 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %87, i64 1
  %89 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %88, align 8
  call void %89(%"class.fxcrt::Retainable"* nonnull %85) #5
  br label %90

90:                                               ; preds = %78, %79, %84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #5
  %91 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %1, i64 0, i32 4, i32 0
  %92 = load %class.CPDF_RenderContext*, %class.CPDF_RenderContext** %91, align 8
  %93 = getelementptr inbounds %class.CPDF_RenderContext, %class.CPDF_RenderContext* %92, i64 0, i32 2, i32 0
  %94 = load %class.CPDF_PageRenderCache*, %class.CPDF_PageRenderCache** %93, align 8
  %95 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %94, i64 0, i32 4
  %96 = load i32, i32* %95, align 8
  %97 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 0
  store i32 %96, i32* %97, align 8
  %98 = getelementptr inbounds %"class.fxcrt::RetainPtr.147", %"class.fxcrt::RetainPtr.147"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %98, align 8
  %100 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %99, i64 0, i32 4
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %99, i64 0, i32 3
  %103 = load i32, i32* %102, align 8
  %104 = mul i32 %103, %101
  %105 = icmp ult i32 %104, 60000000
  br i1 %105, label %106, label %162

106:                                              ; preds = %90
  %107 = bitcast %"class.fxcrt::RetainPtr.151"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #5
  call void @_ZNK11CFX_DIBBase5CloneEPK7FX_RECT(%"class.fxcrt::RetainPtr.151"* nonnull sret %4, %class.CFX_DIBBase* %99, %struct.FX_RECT* null) #5
  %108 = getelementptr inbounds %"class.fxcrt::RetainPtr.151", %"class.fxcrt::RetainPtr.151"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %109 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %108, align 8
  %110 = ptrtoint %class.CFX_DIBitmap* %109 to i64
  %111 = icmp eq %class.CFX_DIBitmap* %109, null
  br i1 %111, label %116, label %112

112:                                              ; preds = %106
  %113 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %109, i64 0, i32 0, i32 0, i32 1
  %114 = load i64, i64* %113, align 8
  %115 = add nsw i64 %114, 1
  store i64 %115, i64* %113, align 8
  br label %116

116:                                              ; preds = %106, %112
  %117 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 7
  %118 = getelementptr inbounds %"class.fxcrt::RetainPtr.147", %"class.fxcrt::RetainPtr.147"* %117, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %118, align 8
  %120 = bitcast %"class.fxcrt::RetainPtr.147"* %117 to i64*
  store i64 %110, i64* %120, align 8
  %121 = icmp eq %class.CFX_DIBBase* %119, null
  br i1 %121, label %134, label %122

122:                                              ; preds = %116
  %123 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %119, i64 0, i32 0, i32 1
  %124 = load i64, i64* %123, align 8
  %125 = add nsw i64 %124, -1
  store i64 %125, i64* %123, align 8
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %127, label %134

127:                                              ; preds = %122
  %128 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %119, i64 0, i32 0
  %129 = bitcast %class.CFX_DIBBase* %119 to void (%"class.fxcrt::Retainable"*)***
  %130 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %129, align 8
  %131 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %130, i64 1
  %132 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %131, align 8
  call void %132(%"class.fxcrt::Retainable"* nonnull %128) #5
  %133 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %108, align 8
  br label %134

134:                                              ; preds = %127, %122, %116
  %135 = phi %class.CFX_DIBitmap* [ %133, %127 ], [ %109, %122 ], [ %109, %116 ]
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %108, align 8
  %136 = icmp eq %class.CFX_DIBitmap* %135, null
  br i1 %136, label %148, label %137

137:                                              ; preds = %134
  %138 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %135, i64 0, i32 0, i32 0, i32 1
  %139 = load i64, i64* %138, align 8
  %140 = add nsw i64 %139, -1
  store i64 %140, i64* %138, align 8
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %148

142:                                              ; preds = %137
  %143 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %135, i64 0, i32 0, i32 0
  %144 = bitcast %class.CFX_DIBitmap* %135 to void (%"class.fxcrt::Retainable"*)***
  %145 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %144, align 8
  %146 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %145, i64 1
  %147 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %146, align 8
  call void %147(%"class.fxcrt::Retainable"* nonnull %143) #5
  br label %148

148:                                              ; preds = %134, %137, %142
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #5
  %149 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %98, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %98, align 8
  %150 = icmp eq %class.CFX_DIBBase* %149, null
  br i1 %150, label %187, label %151

151:                                              ; preds = %148
  %152 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %149, i64 0, i32 0, i32 1
  %153 = load i64, i64* %152, align 8
  %154 = add nsw i64 %153, -1
  store i64 %154, i64* %152, align 8
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %187

156:                                              ; preds = %151
  %157 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %149, i64 0, i32 0
  %158 = bitcast %class.CFX_DIBBase* %149 to void (%"class.fxcrt::Retainable"*)***
  %159 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %158, align 8
  %160 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %159, i64 1
  %161 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %160, align 8
  call void %161(%"class.fxcrt::Retainable"* nonnull %157) #5
  br label %187

162:                                              ; preds = %90
  %163 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %164 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %163, align 8
  %165 = icmp eq %class.CFX_DIBBase* %164, %99
  br i1 %165, label %187, label %166

166:                                              ; preds = %162
  %167 = icmp eq %class.CFX_DIBBase* %99, null
  br i1 %167, label %173, label %168

168:                                              ; preds = %166
  %169 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %99, i64 0, i32 0, i32 1
  %170 = load i64, i64* %169, align 8
  %171 = add nsw i64 %170, 1
  store i64 %171, i64* %169, align 8
  %172 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %163, align 8
  br label %173

173:                                              ; preds = %168, %166
  %174 = phi %class.CFX_DIBBase* [ %172, %168 ], [ %164, %166 ]
  store %class.CFX_DIBBase* %99, %class.CFX_DIBBase** %163, align 8
  %175 = icmp eq %class.CFX_DIBBase* %174, null
  br i1 %175, label %187, label %176

176:                                              ; preds = %173
  %177 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %174, i64 0, i32 0, i32 1
  %178 = load i64, i64* %177, align 8
  %179 = add nsw i64 %178, -1
  store i64 %179, i64* %177, align 8
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %187

181:                                              ; preds = %176
  %182 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %174, i64 0, i32 0
  %183 = bitcast %class.CFX_DIBBase* %174 to void (%"class.fxcrt::Retainable"*)***
  %184 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %183, align 8
  %185 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %184, i64 1
  %186 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %185, align 8
  call void %186(%"class.fxcrt::Retainable"* nonnull %182) #5
  br label %187

187:                                              ; preds = %181, %176, %173, %162, %156, %151, %148
  %188 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %48, align 8
  %189 = icmp eq %class.CFX_DIBBase* %188, null
  br i1 %189, label %246, label %190

190:                                              ; preds = %187
  %191 = bitcast %"class.fxcrt::RetainPtr.151"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %191) #5
  call void @_ZNK11CFX_DIBBase5CloneEPK7FX_RECT(%"class.fxcrt::RetainPtr.151"* nonnull sret %5, %class.CFX_DIBBase* nonnull %188, %struct.FX_RECT* null) #5
  %192 = getelementptr inbounds %"class.fxcrt::RetainPtr.151", %"class.fxcrt::RetainPtr.151"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %193 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %192, align 8
  %194 = ptrtoint %class.CFX_DIBitmap* %193 to i64
  %195 = icmp eq %class.CFX_DIBitmap* %193, null
  br i1 %195, label %200, label %196

196:                                              ; preds = %190
  %197 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %193, i64 0, i32 0, i32 0, i32 1
  %198 = load i64, i64* %197, align 8
  %199 = add nsw i64 %198, 1
  store i64 %199, i64* %197, align 8
  br label %200

200:                                              ; preds = %190, %196
  %201 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 8
  %202 = getelementptr inbounds %"class.fxcrt::RetainPtr.147", %"class.fxcrt::RetainPtr.147"* %201, i64 0, i32 0, i32 0, i32 0, i32 0
  %203 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %202, align 8
  %204 = bitcast %"class.fxcrt::RetainPtr.147"* %201 to i64*
  store i64 %194, i64* %204, align 8
  %205 = icmp eq %class.CFX_DIBBase* %203, null
  br i1 %205, label %218, label %206

206:                                              ; preds = %200
  %207 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %203, i64 0, i32 0, i32 1
  %208 = load i64, i64* %207, align 8
  %209 = add nsw i64 %208, -1
  store i64 %209, i64* %207, align 8
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %211, label %218

211:                                              ; preds = %206
  %212 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %203, i64 0, i32 0
  %213 = bitcast %class.CFX_DIBBase* %203 to void (%"class.fxcrt::Retainable"*)***
  %214 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %213, align 8
  %215 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %214, i64 1
  %216 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %215, align 8
  call void %216(%"class.fxcrt::Retainable"* nonnull %212) #5
  %217 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %192, align 8
  br label %218

218:                                              ; preds = %211, %206, %200
  %219 = phi %class.CFX_DIBitmap* [ %217, %211 ], [ %193, %206 ], [ %193, %200 ]
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %192, align 8
  %220 = icmp eq %class.CFX_DIBitmap* %219, null
  br i1 %220, label %232, label %221

221:                                              ; preds = %218
  %222 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %219, i64 0, i32 0, i32 0, i32 1
  %223 = load i64, i64* %222, align 8
  %224 = add nsw i64 %223, -1
  store i64 %224, i64* %222, align 8
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %232

226:                                              ; preds = %221
  %227 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %219, i64 0, i32 0, i32 0
  %228 = bitcast %class.CFX_DIBitmap* %219 to void (%"class.fxcrt::Retainable"*)***
  %229 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %228, align 8
  %230 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %229, i64 1
  %231 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %230, align 8
  call void %231(%"class.fxcrt::Retainable"* nonnull %227) #5
  br label %232

232:                                              ; preds = %218, %221, %226
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %191) #5
  %233 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %48, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %48, align 8
  %234 = icmp eq %class.CFX_DIBBase* %233, null
  br i1 %234, label %246, label %235

235:                                              ; preds = %232
  %236 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %233, i64 0, i32 0, i32 1
  %237 = load i64, i64* %236, align 8
  %238 = add nsw i64 %237, -1
  store i64 %238, i64* %236, align 8
  %239 = icmp eq i64 %238, 0
  br i1 %239, label %240, label %246

240:                                              ; preds = %235
  %241 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %233, i64 0, i32 0
  %242 = bitcast %class.CFX_DIBBase* %233 to void (%"class.fxcrt::Retainable"*)***
  %243 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %242, align 8
  %244 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %243, i64 1
  %245 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %244, align 8
  call void %245(%"class.fxcrt::Retainable"* nonnull %241) #5
  br label %246

246:                                              ; preds = %187, %240, %235, %232
  %247 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %98, align 8
  %248 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %249 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %248, align 8
  %250 = icmp eq %class.CFX_DIBBase* %247, %249
  br i1 %250, label %272, label %251

251:                                              ; preds = %246
  %252 = icmp eq %class.CFX_DIBBase* %249, null
  br i1 %252, label %258, label %253

253:                                              ; preds = %251
  %254 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %249, i64 0, i32 0, i32 1
  %255 = load i64, i64* %254, align 8
  %256 = add nsw i64 %255, 1
  store i64 %256, i64* %254, align 8
  %257 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %98, align 8
  br label %258

258:                                              ; preds = %253, %251
  %259 = phi %class.CFX_DIBBase* [ %257, %253 ], [ %247, %251 ]
  store %class.CFX_DIBBase* %249, %class.CFX_DIBBase** %98, align 8
  %260 = icmp eq %class.CFX_DIBBase* %259, null
  br i1 %260, label %272, label %261

261:                                              ; preds = %258
  %262 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %259, i64 0, i32 0, i32 1
  %263 = load i64, i64* %262, align 8
  %264 = add nsw i64 %263, -1
  store i64 %264, i64* %262, align 8
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %266, label %272

266:                                              ; preds = %261
  %267 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %259, i64 0, i32 0
  %268 = bitcast %class.CFX_DIBBase* %259 to void (%"class.fxcrt::Retainable"*)***
  %269 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %268, align 8
  %270 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %269, i64 1
  %271 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %270, align 8
  call void %271(%"class.fxcrt::Retainable"* nonnull %267) #5
  br label %272

272:                                              ; preds = %246, %258, %261, %266
  %273 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %48, align 8
  %274 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %275 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %274, align 8
  %276 = icmp eq %class.CFX_DIBBase* %273, %275
  br i1 %276, label %298, label %277

277:                                              ; preds = %272
  %278 = icmp eq %class.CFX_DIBBase* %275, null
  br i1 %278, label %284, label %279

279:                                              ; preds = %277
  %280 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %275, i64 0, i32 0, i32 1
  %281 = load i64, i64* %280, align 8
  %282 = add nsw i64 %281, 1
  store i64 %282, i64* %280, align 8
  %283 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %48, align 8
  br label %284

284:                                              ; preds = %279, %277
  %285 = phi %class.CFX_DIBBase* [ %283, %279 ], [ %273, %277 ]
  store %class.CFX_DIBBase* %275, %class.CFX_DIBBase** %48, align 8
  %286 = icmp eq %class.CFX_DIBBase* %285, null
  br i1 %286, label %298, label %287

287:                                              ; preds = %284
  %288 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %285, i64 0, i32 0, i32 1
  %289 = load i64, i64* %288, align 8
  %290 = add nsw i64 %289, -1
  store i64 %290, i64* %288, align 8
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %298

292:                                              ; preds = %287
  %293 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %285, i64 0, i32 0
  %294 = bitcast %class.CFX_DIBBase* %285 to void (%"class.fxcrt::Retainable"*)***
  %295 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %294, align 8
  %296 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %295, i64 1
  %297 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %296, align 8
  call void %297(%"class.fxcrt::Retainable"* nonnull %293) #5
  br label %298

298:                                              ; preds = %272, %284, %287, %292
  %299 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %248, align 8
  %300 = icmp eq %class.CFX_DIBBase* %299, null
  br i1 %300, label %319, label %301

301:                                              ; preds = %298
  %302 = bitcast %class.CFX_DIBBase* %299 to i8* (%class.CFX_DIBBase*)***
  %303 = load i8* (%class.CFX_DIBBase*)**, i8* (%class.CFX_DIBBase*)*** %302, align 8
  %304 = getelementptr inbounds i8* (%class.CFX_DIBBase*)*, i8* (%class.CFX_DIBBase*)** %303, i64 2
  %305 = load i8* (%class.CFX_DIBBase*)*, i8* (%class.CFX_DIBBase*)** %304, align 8
  %306 = call i8* %305(%class.CFX_DIBBase* nonnull %299) #5
  %307 = icmp eq i8* %306, null
  br i1 %307, label %319, label %308

308:                                              ; preds = %301
  %309 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %248, align 8
  %310 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %309, i64 0, i32 3
  %311 = load i32, i32* %310, align 8
  %312 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %309, i64 0, i32 4
  %313 = load i32, i32* %312, align 4
  %314 = mul i32 %313, %311
  %315 = call i64 @_ZNK11CFX_DIBBase22GetRequiredPaletteSizeEv(%class.CFX_DIBBase* %309) #5
  %316 = trunc i64 %315 to i32
  %317 = shl i32 %316, 2
  %318 = add i32 %317, %314
  br label %319

319:                                              ; preds = %308, %301, %298
  %320 = phi i32 [ %318, %308 ], [ 0, %301 ], [ 0, %298 ]
  %321 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %274, align 8
  %322 = icmp eq %class.CFX_DIBBase* %321, null
  br i1 %322, label %341, label %323

323:                                              ; preds = %319
  %324 = bitcast %class.CFX_DIBBase* %321 to i8* (%class.CFX_DIBBase*)***
  %325 = load i8* (%class.CFX_DIBBase*)**, i8* (%class.CFX_DIBBase*)*** %324, align 8
  %326 = getelementptr inbounds i8* (%class.CFX_DIBBase*)*, i8* (%class.CFX_DIBBase*)** %325, i64 2
  %327 = load i8* (%class.CFX_DIBBase*)*, i8* (%class.CFX_DIBBase*)** %326, align 8
  %328 = call i8* %327(%class.CFX_DIBBase* nonnull %321) #5
  %329 = icmp eq i8* %328, null
  br i1 %329, label %341, label %330

330:                                              ; preds = %323
  %331 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %274, align 8
  %332 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %331, i64 0, i32 3
  %333 = load i32, i32* %332, align 8
  %334 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %331, i64 0, i32 4
  %335 = load i32, i32* %334, align 4
  %336 = mul i32 %335, %333
  %337 = call i64 @_ZNK11CFX_DIBBase22GetRequiredPaletteSizeEv(%class.CFX_DIBBase* %331) #5
  %338 = trunc i64 %337 to i32
  %339 = shl i32 %338, 2
  %340 = add i32 %339, %336
  br label %341

341:                                              ; preds = %319, %323, %330
  %342 = phi i32 [ %340, %330 ], [ 0, %323 ], [ 0, %319 ]
  %343 = add i32 %342, %320
  %344 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 2
  store i32 %343, i32* %344, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20CPDF_ImageCacheEntry8ContinueEP19PauseIndicatorIfaceP17CPDF_RenderStatus(%class.CPDF_ImageCacheEntry* nocapture, %class.PauseIndicatorIface*, %class.CPDF_RenderStatus* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %0, i64 0, i32 5
  %5 = bitcast %"class.fxcrt::RetainPtr.147"* %4 to %class.CPDF_DIB**
  %6 = load %class.CPDF_DIB*, %class.CPDF_DIB** %5, align 8, !noalias !15
  %7 = icmp eq %class.CPDF_DIB* %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = tail call zeroext i8 @_ZN8CPDF_DIB19ContinueLoadDIBBaseEP19PauseIndicatorIface(%class.CPDF_DIB* null, %class.PauseIndicatorIface* %1) #5
  br label %24

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %6, i64 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8, !noalias !15
  %13 = add nsw i64 %12, 1
  store i64 %13, i64* %11, align 8, !noalias !15
  %14 = tail call zeroext i8 @_ZN8CPDF_DIB19ContinueLoadDIBBaseEP19PauseIndicatorIface(%class.CPDF_DIB* nonnull %6, %class.PauseIndicatorIface* %1) #5
  %15 = load i64, i64* %11, align 8
  %16 = add nsw i64 %15, -1
  store i64 %16, i64* %11, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %24

18:                                               ; preds = %10
  %19 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %6, i64 0, i32 0, i32 0
  %20 = bitcast %class.CPDF_DIB* %6 to void (%"class.fxcrt::Retainable"*)***
  %21 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %21, i64 1
  %23 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %22, align 8
  tail call void %23(%"class.fxcrt::Retainable"* nonnull %19) #5
  br label %24

24:                                               ; preds = %8, %10, %18
  %25 = phi i8 [ %9, %8 ], [ %14, %10 ], [ %14, %18 ]
  switch i8 %25, label %27 [
    i8 2, label %42
    i8 1, label %26
  ]

26:                                               ; preds = %24
  tail call void @_ZN20CPDF_ImageCacheEntry23ContinueGetCachedBitmapEPK17CPDF_RenderStatus(%class.CPDF_ImageCacheEntry* %0, %class.CPDF_RenderStatus* %2)
  br label %42

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.fxcrt::RetainPtr.147", %"class.fxcrt::RetainPtr.147"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %28, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %28, align 8
  %30 = icmp eq %class.CFX_DIBBase* %29, null
  br i1 %30, label %42, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %29, i64 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = add nsw i64 %33, -1
  store i64 %34, i64* %32, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %42

36:                                               ; preds = %31
  %37 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %29, i64 0, i32 0
  %38 = bitcast %class.CFX_DIBBase* %29 to void (%"class.fxcrt::Retainable"*)***
  %39 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %39, i64 1
  %41 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %40, align 8
  tail call void %41(%"class.fxcrt::Retainable"* nonnull %37) #5
  br label %42

42:                                               ; preds = %36, %31, %27, %26, %24
  %43 = phi i1 [ true, %24 ], [ false, %26 ], [ false, %27 ], [ false, %31 ], [ false, %36 ]
  ret i1 %43
}

declare zeroext i8 @_ZN8CPDF_DIB19ContinueLoadDIBBaseEP19PauseIndicatorIface(%class.CPDF_DIB*, %class.PauseIndicatorIface*) local_unnamed_addr #3

declare void @_ZN8CPDF_DIB10DetachMaskEv(%"class.fxcrt::RetainPtr.439"* sret, %class.CPDF_DIB*) local_unnamed_addr #3

declare void @_ZNK11CFX_DIBBase5CloneEPK7FX_RECT(%"class.fxcrt::RetainPtr.151"* sret, %class.CFX_DIBBase*, %struct.FX_RECT*) local_unnamed_addr #3

declare i64 @_ZNK11CFX_DIBBase22GetRequiredPaletteSizeEv(%class.CFX_DIBBase*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN8CPDF_DIBC1Ev(%class.CPDF_DIB*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6pdfium10MakeRetainI8CPDF_DIBJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!4 = distinct !{!4, !"_ZN6pdfium10MakeRetainI8CPDF_DIBJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5fxcrt9RetainPtrI11CFX_DIBBaseE2AsI8CPDF_DIBEENS0_IT_EEv: argument 0"}
!7 = distinct !{!7, !"_ZNK5fxcrt9RetainPtrI11CFX_DIBBaseE2AsI8CPDF_DIBEENS0_IT_EEv"}
!8 = !{i8 0, i8 2}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK5fxcrt9RetainPtrI11CFX_DIBBaseE2AsI8CPDF_DIBEENS0_IT_EEv: argument 0"}
!11 = distinct !{!11, !"_ZNK5fxcrt9RetainPtrI11CFX_DIBBaseE2AsI8CPDF_DIBEENS0_IT_EEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK5fxcrt9RetainPtrI11CFX_DIBBaseE2AsI8CPDF_DIBEENS0_IT_EEv: argument 0"}
!14 = distinct !{!14, !"_ZNK5fxcrt9RetainPtrI11CFX_DIBBaseE2AsI8CPDF_DIBEENS0_IT_EEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK5fxcrt9RetainPtrI11CFX_DIBBaseE2AsI8CPDF_DIBEENS0_IT_EEv: argument 0"}
!17 = distinct !{!17, !"_ZNK5fxcrt9RetainPtrI11CFX_DIBBaseE2AsI8CPDF_DIBEENS0_IT_EEv"}
