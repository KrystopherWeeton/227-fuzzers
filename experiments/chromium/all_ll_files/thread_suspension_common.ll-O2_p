; ModuleID = '../../native_client/src/trusted/service_runtime/thread_suspension_common.c'
source_filename = "../../native_client/src/trusted/service_runtime/thread_suspension_common.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%struct.NaClApp = type { i8, i64, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.NaClMutex, %struct.NaClCondVar, [151 x %struct.NaClSyscallTableEntry], %struct.NaClResourceNaClApp, i32, i32, %struct.NaClVmmap, %struct.NaClIntervalMultiset*, %struct.NaClDescEffector*, i32, i32, %struct.NaClDesc*, %struct.NaClMutex, i8*, %struct.NaClDynamicRegion*, i32, i32, i32, i32, i64, i32, i32, i32, %struct.NaClCPUFeaturesAbstract*, %struct.NaClValidationCache*, i32, i32, i32, i32, i32, i64, %struct.NaClMutex, %struct.DynArray, i32, %struct.NaClFastMutex, %struct.DynArray, %struct.NaClDebugCallbacks*, %struct.NaClDesc*, %struct.NaClDesc*, %struct.NaClMutex, i32, i32, i32, i32, i32, i32, i32, %struct.NaClValidatorInterface* }
%struct.NaClCondVar = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%struct.NaClSyscallTableEntry = type { i32 (%struct.NaClAppThread*)* }
%struct.NaClAppThread = type { %struct.NaClThreadContext, %struct.NaClMutex, %struct.NaClApp*, i32, i32, %struct.NaClThread, %struct.NaClMutex, i32, %struct.NaClAppThreadSuspendedRegisters*, i32, i64, i8*, i32, i32, i32, %struct.NaClListNode, i32, %struct.NaClCondVar }
%struct.NaClThreadContext = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, i16, i16, i64, i32, i32 }
%struct.NaClThread = type { i64 }
%struct.NaClAppThreadSuspendedRegisters = type opaque
%struct.NaClListNode = type { %struct.NaClListNode*, %struct.NaClListNode* }
%struct.NaClResourceNaClApp = type { %struct.NaClResource, %struct.NaClApp* }
%struct.NaClResource = type { %struct.NaClResourceSchemes*, i64 }
%struct.NaClResourceSchemes = type { i8*, i32, %struct.NaClDesc* (%struct.NaClResource*, i8*, i32, i32, i32)* }
%struct.NaClVmmap = type { %struct.NaClVmmapEntry**, i64, i64, i32 }
%struct.NaClVmmapEntry = type { i64, i64, i32, i32, i32, %struct.NaClDesc*, i64, i64 }
%struct.NaClIntervalMultiset = type { %struct.NaClIntervalMultisetVtbl* }
%struct.NaClIntervalMultisetVtbl = type { void (%struct.NaClIntervalMultiset*)*, void (%struct.NaClIntervalMultiset*, i32, i32)*, void (%struct.NaClIntervalMultiset*, i32, i32)*, i32 (%struct.NaClIntervalMultiset*, i32, i32)* }
%struct.NaClDescEffector = type opaque
%struct.NaClDynamicRegion = type opaque
%struct.NaClCPUFeaturesAbstract = type opaque
%struct.NaClValidationCache = type opaque
%struct.NaClFastMutex = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.DynArray = type { i64, i8**, i64, i32*, i64 }
%struct.NaClDebugCallbacks = type { void (%struct.NaClAppThread*)*, void (%struct.NaClAppThread*)*, void ()* }
%struct.NaClDesc = type opaque
%struct.NaClMutex = type { %union.pthread_mutex_t, i32 }
%struct.NaClValidatorInterface = type { i32, i32, i32, i32 (i64, i8*, i64, i32, i32, i32, %struct.NaClCPUFeaturesAbstract*, %struct.NaClValidationMetadata*, %struct.NaClValidationCache*)*, i32 (i64, i8*, i8*, i64, %struct.NaClCPUFeaturesAbstract*, i32 (i8*, i8*, i8)*)*, i32 (i64, i8*, i8*, i64, %struct.NaClCPUFeaturesAbstract*)*, i64, void (%struct.NaClCPUFeaturesAbstract*)*, void (%struct.NaClCPUFeaturesAbstract*)*, i32 (i64, i64, i8*, i64, %struct.NaClCPUFeaturesAbstract*)* }
%struct.NaClValidationMetadata = type opaque
%struct.NaClSignalContext = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [119 x i8] c"NaClAppThreadSetSuspendedRegisters: Registers not modified (thread suspended during trusted/untrusted context switch)\0A\00", align 1
@.str.1 = private unnamed_addr constant [94 x i8] c"NaClAppThreadSetSuspendedRegisters: Registers not modified (thread suspended inside syscall)\0A\00", align 1
@.str.2 = private unnamed_addr constant [81 x i8] c"NaClFaultedThreadQueueEnable: Failed to allocate pipe for faulted thread events\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClUntrustedThreadsSuspendAll(%struct.NaClApp*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 48
  tail call void @NaClXMutexLock(%struct.NaClMutex* %3) #4
  %4 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 49, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %17, label %7

7:                                                ; preds = %2, %13
  %8 = phi i64 [ %14, %13 ], [ 0, %2 ]
  %9 = trunc i64 %8 to i32
  %10 = tail call %struct.NaClAppThread* @NaClGetThreadMu(%struct.NaClApp* %0, i32 %9) #4
  %11 = icmp eq %struct.NaClAppThread* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %7
  tail call void @NaClUntrustedThreadSuspend(%struct.NaClAppThread* nonnull %10, i32 %1) #4
  br label %13

13:                                               ; preds = %7, %12
  %14 = add nuw i64 %8, 1
  %15 = load i64, i64* %4, align 8
  %16 = icmp ult i64 %14, %15
  br i1 %16, label %7, label %17

17:                                               ; preds = %13, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @NaClXMutexLock(%struct.NaClMutex*) local_unnamed_addr #2

declare %struct.NaClAppThread* @NaClGetThreadMu(%struct.NaClApp*, i32) local_unnamed_addr #2

declare void @NaClUntrustedThreadSuspend(%struct.NaClAppThread*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClUntrustedThreadsResumeAll(%struct.NaClApp*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 49, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1, %11
  %6 = phi i64 [ %12, %11 ], [ 0, %1 ]
  %7 = trunc i64 %6 to i32
  %8 = tail call %struct.NaClAppThread* @NaClGetThreadMu(%struct.NaClApp* %0, i32 %7) #4
  %9 = icmp eq %struct.NaClAppThread* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %5
  tail call void @NaClUntrustedThreadResume(%struct.NaClAppThread* nonnull %8) #4
  br label %11

11:                                               ; preds = %5, %10
  %12 = add nuw i64 %6, 1
  %13 = load i64, i64* %2, align 8
  %14 = icmp ult i64 %12, %13
  br i1 %14, label %5, label %15

15:                                               ; preds = %11, %1
  %16 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 48
  tail call void @NaClXMutexUnlock(%struct.NaClMutex* %16) #4
  ret void
}

declare void @NaClUntrustedThreadResume(%struct.NaClAppThread*) local_unnamed_addr #2

declare void @NaClXMutexUnlock(%struct.NaClMutex*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClAppThreadGetSuspendedRegisters(%struct.NaClAppThread*, %struct.NaClSignalContext*) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 7
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  tail call void @NaClAppThreadGetSuspendedRegistersInternal(%struct.NaClAppThread* %0, %struct.NaClSignalContext* %1) #4
  %9 = tail call i32 @NaClSignalContextIsUntrusted(%struct.NaClAppThread* %0, %struct.NaClSignalContext* %1) #4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %8
  %12 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #4
  store i32 -1431655766, i32* %3, align 4
  call void @NaClGetRegistersForContextSwitch(%struct.NaClAppThread* %0, %struct.NaClSignalContext* %1, i32* nonnull %3) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #4
  br label %15

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 0
  tail call void @NaClThreadContextToSignalContext(%struct.NaClThreadContext* %14, %struct.NaClSignalContext* %1) #4
  br label %15

15:                                               ; preds = %8, %11, %13
  ret void
}

declare void @NaClAppThreadGetSuspendedRegistersInternal(%struct.NaClAppThread*, %struct.NaClSignalContext*) local_unnamed_addr #2

declare i32 @NaClSignalContextIsUntrusted(%struct.NaClAppThread*, %struct.NaClSignalContext*) local_unnamed_addr #2

declare void @NaClGetRegistersForContextSwitch(%struct.NaClAppThread*, %struct.NaClSignalContext*, i32*) local_unnamed_addr #2

declare void @NaClThreadContextToSignalContext(%struct.NaClThreadContext*, %struct.NaClSignalContext*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClAppThreadIsSuspendedInSyscall(%struct.NaClAppThread*) local_unnamed_addr #0 {
  %2 = alloca %struct.NaClSignalContext, align 8
  %3 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 7
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %struct.NaClSignalContext* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 168, i1 false)
  call void @NaClAppThreadGetSuspendedRegistersInternal(%struct.NaClAppThread* %0, %struct.NaClSignalContext* nonnull %2) #4
  %9 = call i32 @NaClSignalContextIsUntrusted(%struct.NaClAppThread* %0, %struct.NaClSignalContext* nonnull %2) #4
  %10 = icmp eq i32 %9, 0
  %11 = zext i1 %10 to i32
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %8) #4
  br label %12

12:                                               ; preds = %1, %7
  %13 = phi i32 [ %11, %7 ], [ 1, %1 ]
  ret i32 %13
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClAppThreadSetSuspendedRegisters(%struct.NaClAppThread*, %struct.NaClSignalContext*) local_unnamed_addr #0 {
  %3 = alloca %struct.NaClSignalContext, align 8
  %4 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 7
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = bitcast %struct.NaClSignalContext* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %9) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 168, i1 false)
  call void @NaClAppThreadGetSuspendedRegistersInternal(%struct.NaClAppThread* %0, %struct.NaClSignalContext* nonnull %3) #4
  %10 = call i32 @NaClSignalContextIsUntrusted(%struct.NaClAppThread* %0, %struct.NaClSignalContext* nonnull %3) #4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  call void @NaClAppThreadSetSuspendedRegistersInternal(%struct.NaClAppThread* %0, %struct.NaClSignalContext* %1) #4
  br label %14

13:                                               ; preds = %8
  call void (i32, i8*, ...) @NaClLog(i32 -2, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @.str, i64 0, i64 0)) #4
  br label %14

14:                                               ; preds = %13, %12
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %9) #4
  br label %16

15:                                               ; preds = %2
  tail call void (i32, i8*, ...) @NaClLog(i32 -2, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.1, i64 0, i64 0)) #4
  br label %16

16:                                               ; preds = %15, %14
  ret void
}

declare void @NaClAppThreadSetSuspendedRegistersInternal(%struct.NaClAppThread*, %struct.NaClSignalContext*) local_unnamed_addr #2

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClFaultedThreadQueueEnable(%struct.NaClApp* nocapture) local_unnamed_addr #0 {
  %2 = alloca [2 x i32], align 4
  %3 = bitcast [2 x i32]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #4
  %4 = getelementptr inbounds [2 x i32], [2 x i32]* %2, i64 0, i64 0
  store i32 -1431655766, i32* %4, align 4
  %5 = getelementptr inbounds [2 x i32], [2 x i32]* %2, i64 0, i64 1
  store i32 -1431655766, i32* %5, align 4
  %6 = call i32 @pipe2(i32* nonnull %4, i32 524288) #4
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.2, i64 0, i64 0)) #4
  br label %9

9:                                                ; preds = %8, %1
  %10 = load i32, i32* %4, align 4
  %11 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 61
  store i32 %10, i32* %11, align 8
  %12 = load i32, i32* %5, align 4
  %13 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 62
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 59
  store i32 1, i32* %14, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #4
  ret i32 1
}

; Function Attrs: nounwind
declare i32 @pipe2(i32*, i32) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
