; ModuleID = '../../third_party/blink/renderer/core/page/spatial_navigation.cc'
source_filename = "../../third_party/blink/renderer/core/page/spatial_navigation.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::FocusCandidate" = type <{ %"class.blink::Node"*, %"class.blink::Node"*, %"struct.blink::PhysicalRect", i8, [7 x i8] }>
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1459", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1464", %"class.blink::Member.1471", %"class.std::__1::unique_ptr.1473", %"class.blink::Member.1479", i8, i8, %"class.WTF::String", %"class.blink::Member.1481", i8, [7 x i8], %"class.blink::HeapHashMap.1483", %"class.blink::HeapObserverSet", %"class.blink::Member.1497", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1499", i32, i8, i8, %"class.blink::WeakMember.1501", %"class.blink::Member.1502" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1526", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1593", i32, i8, [3 x i8], %"class.blink::HeapVector.1595", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1603", %"class.blink::Member.1605", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1614", %"class.blink::Member.1737", %"class.blink::Member.1739", i8, [7 x i8] }>
%"class.blink::Supplementable.1526" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1527" }
%"class.blink::HeapHashMap.1527" = type { %"class.WTF::HashMap.1530" }
%"class.WTF::HashMap.1530" = type { %"class.WTF::HashTable.1531" }
%"class.WTF::HashTable.1531" = type <{ %"struct.WTF::KeyValuePair.1533"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1533" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1542" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1534" }
%"class.blink::HeapObserverSet.1534" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1535" }
%"class.blink::HeapHashSet.1535" = type { %"class.WTF::HashSet.1538" }
%"class.WTF::HashSet.1538" = type { %"class.WTF::HashTable.1539" }
%"class.WTF::HashTable.1539" = type <{ %"class.blink::WeakMember.1541"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1541" = type opaque
%"class.blink::Supplementable.1542" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1543" }
%"class.blink::HeapHashMap.1543" = type { %"class.WTF::HashMap.1546" }
%"class.WTF::HashMap.1546" = type { %"class.WTF::HashTable.1547" }
%"class.WTF::HashTable.1547" = type <{ %"struct.WTF::KeyValuePair.1549"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1549" = type { i8*, %"class.blink::Member.3140" }
%"class.blink::Member.3140" = type { %"class.blink::MemberBase.3141" }
%"class.blink::MemberBase.3141" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3142" }
%"class.blink::Member.3142" = type { %"class.blink::MemberBase.3143" }
%"class.blink::MemberBase.3143" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1550, %"class.std::__1::unique_ptr.1559", %"class.std::__1::unique_ptr.1559", %"class.std::__1::unique_ptr.1583", %"class.std::__1::unique_ptr.1583", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1589", i32, i32 }
%class.scoped_refptr.1550 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1551", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1553", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1558 }
%"class.WTF::RefCounted.1551" = type { %"class.base::RefCounted.1552" }
%"class.base::RefCounted.1552" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1553" = type { %"class.absl::optional_internal::optional_data.1554" }
%"class.absl::optional_internal::optional_data.1554" = type { %"class.absl::optional_internal::optional_data_base.1555" }
%"class.absl::optional_internal::optional_data_base.1555" = type { %"class.absl::optional_internal::optional_data_dtor_base.1556" }
%"class.absl::optional_internal::optional_data_dtor_base.1556" = type { i8, %union.anon.1557 }
%union.anon.1557 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1558 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1559" = type { %"class.std::__1::__compressed_pair.1560" }
%"class.std::__1::__compressed_pair.1560" = type { %"struct.std::__1::__compressed_pair_elem.1561" }
%"struct.std::__1::__compressed_pair_elem.1561" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1570", %"class.std::__1::map.1579"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1553" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1562", %"class.std::__1::__compressed_pair.1567" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1562" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"struct.std::__1::__compressed_pair_elem.1563" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1567" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::map.1570" = type { %"class.std::__1::__tree.1571" }
%"class.std::__1::__tree.1571" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1572", %"class.std::__1::__compressed_pair.1576" }
%"class.std::__1::__compressed_pair.1572" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"class.std::__1::__compressed_pair.1576" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1579" = type opaque
%"class.std::__1::unique_ptr.1583" = type { %"class.std::__1::__compressed_pair.1584" }
%"class.std::__1::__compressed_pair.1584" = type { %"struct.std::__1::__compressed_pair_elem.1585" }
%"struct.std::__1::__compressed_pair_elem.1585" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1589" = type { %"class.WTF::HashTable.1590" }
%"class.WTF::HashTable.1590" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1593" = type { %"class.blink::MemberBase.1594" }
%"class.blink::MemberBase.1594" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1595" = type { %"class.WTF::Vector.1598" }
%"class.WTF::Vector.1598" = type { %"class.WTF::VectorBuffer.1599" }
%"class.WTF::VectorBuffer.1599" = type { %"class.WTF::VectorBufferBase.1600" }
%"class.WTF::VectorBufferBase.1600" = type { %"class.blink::Member.1601"*, i32, i32 }
%"class.blink::Member.1601" = type opaque
%"class.blink::Member.1603" = type { %"class.blink::MemberBase.1604" }
%"class.blink::MemberBase.1604" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1605" = type { %"class.blink::MemberBase.1606" }
%"class.blink::MemberBase.1606" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1607", i32, i32 }
%"class.blink::HeapHashMap.1607" = type { %"class.WTF::HashMap.1610" }
%"class.WTF::HashMap.1610" = type { %"class.WTF::HashTable.1611" }
%"class.WTF::HashTable.1611" = type <{ %"struct.WTF::KeyValuePair.1613"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1613" = type opaque
%"class.std::__1::unique_ptr.1614" = type { %"class.std::__1::__compressed_pair.1615" }
%"class.std::__1::__compressed_pair.1615" = type { %"struct.std::__1::__compressed_pair_elem.1616" }
%"struct.std::__1::__compressed_pair_elem.1616" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1617" }
%"class.std::__1::unique_ptr.1617" = type { %"class.std::__1::__compressed_pair.1618" }
%"class.std::__1::__compressed_pair.1618" = type { %"struct.std::__1::__compressed_pair_elem.1619" }
%"struct.std::__1::__compressed_pair_elem.1619" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1620" }
%"class.WTF::Vector.1620" = type { %"class.WTF::VectorBuffer.1621" }
%"class.WTF::VectorBuffer.1621" = type { %"class.WTF::VectorBufferBase.1622" }
%"class.WTF::VectorBufferBase.1622" = type { %"class.mojo::StructPtr.1623"*, i32, i32 }
%"class.mojo::StructPtr.1623" = type { %"class.std::__1::unique_ptr.1624" }
%"class.std::__1::unique_ptr.1624" = type { %"class.std::__1::__compressed_pair.1625" }
%"class.std::__1::__compressed_pair.1625" = type { %"struct.std::__1::__compressed_pair_elem.1626" }
%"struct.std::__1::__compressed_pair_elem.1626" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1627", %"class.WTF::HashMap.1634", %"class.WTF::HashMap.1639", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.630", i32, %"class.mojo::StructPtr.1644", %"class.WTF::Vector.630" }
%"class.mojo::StructPtr.1627" = type { %"class.std::__1::unique_ptr.1628" }
%"class.std::__1::unique_ptr.1628" = type { %"class.std::__1::__compressed_pair.1629" }
%"class.std::__1::__compressed_pair.1629" = type { %"struct.std::__1::__compressed_pair_elem.1630" }
%"struct.std::__1::__compressed_pair_elem.1630" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1634" = type { %"class.WTF::HashTable.1635" }
%"class.WTF::HashTable.1635" = type <{ %"struct.WTF::KeyValuePair.1638"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1638" = type opaque
%"class.WTF::HashMap.1639" = type { %"class.WTF::HashTable.1640" }
%"class.WTF::HashTable.1640" = type <{ %"struct.WTF::KeyValuePair.1643"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1643" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1644" = type { %"class.std::__1::unique_ptr.1645" }
%"class.std::__1::unique_ptr.1645" = type { %"class.std::__1::__compressed_pair.1646" }
%"class.std::__1::__compressed_pair.1646" = type { %"struct.std::__1::__compressed_pair_elem.1647" }
%"struct.std::__1::__compressed_pair_elem.1647" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.630", i8, i8, [6 x i8] }>
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1728" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1659", i32 }>
%"class.std::__1::unique_ptr.1659" = type { %"class.std::__1::__compressed_pair.1660" }
%"class.std::__1::__compressed_pair.1660" = type { %"struct.std::__1::__compressed_pair_elem.1661" }
%"struct.std::__1::__compressed_pair_elem.1661" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1662", %"class.absl::optional.1663", %"class.absl::optional.1668", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1681", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1703", %"class.std::__1::map.1714", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1723", i8, %class.scoped_refptr.1673, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1724" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1662" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1663" = type { %"class.absl::optional_internal::optional_data.1664" }
%"class.absl::optional_internal::optional_data.1664" = type { %"class.absl::optional_internal::optional_data_base.1665" }
%"class.absl::optional_internal::optional_data_base.1665" = type { %"class.absl::optional_internal::optional_data_dtor_base.1666" }
%"class.absl::optional_internal::optional_data_dtor_base.1666" = type { i8, %union.anon.1667 }
%union.anon.1667 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1668" = type { %"class.absl::optional_internal::optional_data.1669" }
%"class.absl::optional_internal::optional_data.1669" = type { %"class.absl::optional_internal::optional_data_base.1670" }
%"class.absl::optional_internal::optional_data_base.1670" = type { %"class.absl::optional_internal::optional_data_dtor_base.1671" }
%"class.absl::optional_internal::optional_data_dtor_base.1671" = type { i8, %union.anon.1672 }
%union.anon.1672 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1673, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1674" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1674" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1679 }
%class.scoped_refptr.1679 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1741", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1673, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1741" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1680 }
%class.scoped_refptr.1680 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1681" = type { %"class.std::__1::__compressed_pair.1682" }
%"class.std::__1::__compressed_pair.1682" = type { %"struct.std::__1::__compressed_pair_elem.1683" }
%"struct.std::__1::__compressed_pair_elem.1683" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1684", %class.scoped_refptr.1685 }
%"class.base::RepeatingCallback.1684" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1685 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1686", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1686" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1690", %"class.std::__1::unique_ptr.1696", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1702" }
%"class.std::__1::unique_ptr.1690" = type { %"class.std::__1::__compressed_pair.1691" }
%"class.std::__1::__compressed_pair.1691" = type { %"struct.std::__1::__compressed_pair_elem.1692" }
%"struct.std::__1::__compressed_pair_elem.1692" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1696" = type { %"class.std::__1::__compressed_pair.1697" }
%"class.std::__1::__compressed_pair.1697" = type { %"struct.std::__1::__compressed_pair_elem.1698" }
%"struct.std::__1::__compressed_pair_elem.1698" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1702" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1703" = type { %"class.std::__1::__tree.1704" }
%"class.std::__1::__tree.1704" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1705", %"class.std::__1::__compressed_pair.1709" }
%"class.std::__1::__compressed_pair.1705" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"class.std::__1::__compressed_pair.1709" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1714" = type { %"class.std::__1::__tree.1715" }
%"class.std::__1::__tree.1715" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1716", %"class.std::__1::__compressed_pair.1720" }
%"class.std::__1::__compressed_pair.1716" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"class.std::__1::__compressed_pair.1720" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::OnceCallback.1723" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1673 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1724" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1728" = type { %"class.std::__1::__compressed_pair.1729" }
%"class.std::__1::__compressed_pair.1729" = type { %"struct.std::__1::__compressed_pair_elem.1730" }
%"struct.std::__1::__compressed_pair_elem.1730" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1737" = type { %"class.blink::MemberBase.1738" }
%"class.blink::MemberBase.1738" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1739" = type { %"class.blink::MemberBase.1740" }
%"class.blink::MemberBase.1740" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1742", i64 }
%"class.std::__1::vector.1742" = type { %"class.std::__1::__vector_base.1743" }
%"class.std::__1::__vector_base.1743" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1744" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1744" = type { %"struct.std::__1::__compressed_pair_elem.1745" }
%"struct.std::__1::__compressed_pair_elem.1745" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1517", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1517" = type { %"class.WTF::Vector.1520" }
%"class.WTF::Vector.1520" = type { %"class.WTF::VectorBuffer.1521" }
%"class.WTF::VectorBuffer.1521" = type { %"class.WTF::VectorBufferBase.1522" }
%"class.WTF::VectorBufferBase.1522" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1749", [4 x i8] }>
%"class.WTF::RefCounted.1749" = type { %"class.base::RefCounted.1750" }
%"class.base::RefCounted.1750" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.3207" }
%"class.WTF::Vector.3207" = type { %"class.WTF::VectorBuffer.3208" }
%"class.WTF::VectorBuffer.3208" = type { %"class.WTF::VectorBufferBase.3209" }
%"class.WTF::VectorBufferBase.3209" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.3212", %"class.absl::optional.3212", %"class.absl::optional.3212" }
%"class.absl::optional.3212" = type { %"class.absl::optional_internal::optional_data.3213" }
%"class.absl::optional_internal::optional_data.3213" = type { %"class.absl::optional_internal::optional_data_base.3214" }
%"class.absl::optional_internal::optional_data_base.3214" = type { %"class.absl::optional_internal::optional_data_dtor_base.3215" }
%"class.absl::optional_internal::optional_data_dtor_base.3215" = type { i8, %union.anon.3216 }
%union.anon.3216 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3217 }
%class.scoped_refptr.3217 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.3218", %"class.WTF::Vector.630", %"class.WTF::Vector.3220", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.3218" = type { %"class.base::RefCounted.3219" }
%"class.base::RefCounted.3219" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3220" = type { %"class.WTF::VectorBuffer.3221" }
%"class.WTF::VectorBuffer.3221" = type { %"class.WTF::VectorBufferBase.3222" }
%"class.WTF::VectorBufferBase.3222" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.3223 }
%union.anon.3223 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.3227" }
%"class.WTF::VectorBuffer.3227" = type { %"class.WTF::VectorBufferBase.3228", [32 x i8] }
%"class.WTF::VectorBufferBase.3228" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3231 }
%class.scoped_refptr.3231 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.3241" }
%"class.blink::Member.3241" = type { %"class.blink::MemberBase.3242" }
%"class.blink::MemberBase.3242" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.3237" }
%"class.blink::MemberBase.3237" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.3238" }
%"class.blink::MemberBase.3238" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.3239" }
%"class.blink::MemberBase.3239" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.3240" }
%"class.blink::MemberBase.3240" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.3232", %"class.WTF::Vector.3232" }
%"class.WTF::Vector.3232" = type { %"class.WTF::VectorBuffer.3233" }
%"class.WTF::VectorBuffer.3233" = type { %"class.WTF::VectorBufferBase.3234" }
%"class.WTF::VectorBufferBase.3234" = type { %class.scoped_refptr.3231*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type { %"class.blink::LayoutBlockFlow", %"class.blink::UntracedMember.1852", %"class.blink::LayoutUnit", %"class.blink::LayoutState"*, %"class.std::__1::unique_ptr.2072", %"class.std::__1::unique_ptr.2078", %"class.std::__1::unique_ptr.2084", %class.scoped_refptr.1848, %"class.blink::LayoutQuote"*, i32, i32, i8, i32, i32, %"class.blink::Persistent.2090", i32, i32, %"struct.blink::PhysicalRect" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1811", %"class.std::__1::unique_ptr.1821" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1767, %"class.WTF::Vector.1768", %"class.std::__1::unique_ptr.1773", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1794, %"class.blink::Persistent.1795" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type { %"class.blink::DisplayItemClient.base", [6 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.2988", %"class.blink::Persistent.2994", %"class.std::__1::unique_ptr.2996", %"class.blink::CullRect", %"class.std::__1::unique_ptr.3012" }
%"class.std::__1::unique_ptr.2988" = type { %"class.std::__1::__compressed_pair.2989" }
%"class.std::__1::__compressed_pair.2989" = type { %"struct.std::__1::__compressed_pair_elem.2990" }
%"struct.std::__1::__compressed_pair_elem.2990" = type { %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* }
%"struct.blink::PaintLayer::AncestorDependentCompositingInputs" = type { %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::LayoutBoxModelObject"* }
%"class.blink::Persistent.2994" = type { %"class.blink::PersistentBase.2995" }
%"class.blink::PersistentBase.2995" = type { %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.2838", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.2851" }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.2109", %"class.blink::Member.2111", %"class.blink::Member.2113", %"class.blink::Member.2115", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.2109" = type { %"class.blink::MemberBase.2110" }
%"class.blink::MemberBase.2110" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2111" = type { %"class.blink::MemberBase.2112" }
%"class.blink::MemberBase.2112" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2113" = type { %"class.blink::MemberBase.2114" }
%"class.blink::MemberBase.2114" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2115" = type { %"class.blink::MemberBase.2116" }
%"class.blink::MemberBase.2116" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.2748", %"class.blink::Member.1901", %"class.blink::Member.1901", i8, [7 x i8] }>
%"class.blink::Member.2748" = type { %"class.blink::MemberBase.2749" }
%"class.blink::MemberBase.2749" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::Member.1901" = type { %"class.blink::MemberBase.1902" }
%"class.blink::MemberBase.1902" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2107", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2117", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.2107" = type { %"class.blink::MemberBase.2108" }
%"class.blink::MemberBase.2108" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.2117" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2118", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.2118" = type { %"class.blink::MemberBase.1902" }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.2107", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.2838" = type { %"class.std::__1::__compressed_pair.2839" }
%"class.std::__1::__compressed_pair.2839" = type { %"struct.std::__1::__compressed_pair_elem.2840" }
%"struct.std::__1::__compressed_pair_elem.2840" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.2841", %"class.absl::optional.798", i8, i8, %"class.WTF::Vector.1963" }
%"class.WTF::HashMap.2841" = type { %"class.WTF::HashTable.2842" }
%"class.WTF::HashTable.2842" = type <{ %"struct.WTF::KeyValuePair.2845"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2845" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.WTF::Vector.1963" = type { %"class.WTF::VectorBuffer.1964" }
%"class.WTF::VectorBuffer.1964" = type { %"class.WTF::VectorBufferBase.1965" }
%"class.WTF::VectorBufferBase.1965" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2849" }
%"class.blink::Member.2849" = type { %"class.blink::MemberBase.2850" }
%"class.blink::MemberBase.2850" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2849" }
%"class.absl::optional.2851" = type { %"class.absl::optional_internal::optional_data.2852" }
%"class.absl::optional_internal::optional_data.2852" = type { %"class.absl::optional_internal::optional_data_base.2853" }
%"class.absl::optional_internal::optional_data_base.2853" = type { %"class.absl::optional_internal::optional_data_dtor_base.2854" }
%"class.absl::optional_internal::optional_data_dtor_base.2854" = type { i8, %union.anon.2855 }
%union.anon.2855 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.std::__1::unique_ptr.2996" = type { %"class.std::__1::__compressed_pair.2997" }
%"class.std::__1::__compressed_pair.2997" = type { %"struct.std::__1::__compressed_pair_elem.2998" }
%"struct.std::__1::__compressed_pair_elem.2998" = type { %"class.blink::PaintLayerStackingNode"* }
%"class.blink::PaintLayerStackingNode" = type <{ %"class.blink::PaintLayer"*, %"class.WTF::Vector.2999", %"class.WTF::Vector.2999", %"class.WTF::HashMap.3004", %"class.WTF::Vector.2999", i8, [7 x i8] }>
%"class.WTF::HashMap.3004" = type { %"class.WTF::HashTable.3005" }
%"class.WTF::HashTable.3005" = type <{ %"struct.WTF::KeyValuePair.3008"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3008" = type { %"class.blink::PaintLayer"*, %"class.WTF::Vector.2999" }
%"class.WTF::Vector.2999" = type { %"class.WTF::VectorBuffer.3000" }
%"class.WTF::VectorBuffer.3000" = type { %"class.WTF::VectorBufferBase.3001" }
%"class.WTF::VectorBufferBase.3001" = type { %"class.blink::PaintLayer"**, i32, i32 }
%"class.std::__1::unique_ptr.3012" = type { %"class.std::__1::__compressed_pair.3013" }
%"class.std::__1::__compressed_pair.3013" = type { %"struct.std::__1::__compressed_pair_elem.3014" }
%"struct.std::__1::__compressed_pair_elem.3014" = type { %"struct.blink::PaintLayerRareData"* }
%"struct.blink::PaintLayerRareData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.3015", %"class.blink::PaintLayer"*, i64, i64, i64, i32, %"class.std::__1::unique_ptr.3021", %"class.blink::CompositedLayerMapping"*, %"class.blink::Persistent.3027", %"struct.blink::PhysicalOffset" }
%"class.std::__1::unique_ptr.3015" = type { %"class.std::__1::__compressed_pair.3016" }
%"class.std::__1::__compressed_pair.3016" = type { %"struct.std::__1::__compressed_pair_elem.3017" }
%"struct.std::__1::__compressed_pair_elem.3017" = type { %"class.blink::TransformationMatrix"* }
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.std::__1::unique_ptr.3021" = type { %"class.std::__1::__compressed_pair.3022" }
%"class.std::__1::__compressed_pair.3022" = type { %"struct.std::__1::__compressed_pair_elem.3023" }
%"struct.std::__1::__compressed_pair_elem.3023" = type { %"class.blink::CompositedLayerMapping"* }
%"class.blink::CompositedLayerMapping" = type opaque
%"class.blink::Persistent.3027" = type { %"class.blink::PersistentBase.3028" }
%"class.blink::PersistentBase.3028" = type { %"class.blink::PaintLayerResourceInfo"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerResourceInfo" = type { %"class.blink::SVGResourceClient", %"class.blink::PaintLayer"*, %"class.blink::FloatRect" }
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1767 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1768" = type { %"class.WTF::VectorBuffer.1769" }
%"class.WTF::VectorBuffer.1769" = type { %"class.WTF::VectorBufferBase.1770", [8 x i8] }
%"class.WTF::VectorBufferBase.1770" = type { %class.scoped_refptr.1767*, i32, i32 }
%"class.std::__1::unique_ptr.1773" = type { %"class.std::__1::__compressed_pair.1774" }
%"class.std::__1::__compressed_pair.1774" = type { %"struct.std::__1::__compressed_pair_elem.1775" }
%"struct.std::__1::__compressed_pair_elem.1775" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1776", %"class.absl::optional.1781", %"class.absl::optional.1786" }
%"class.absl::optional.1776" = type { %"class.absl::optional_internal::optional_data.1777" }
%"class.absl::optional_internal::optional_data.1777" = type { %"class.absl::optional_internal::optional_data_base.1778" }
%"class.absl::optional_internal::optional_data_base.1778" = type { %"class.absl::optional_internal::optional_data_dtor_base.1779" }
%"class.absl::optional_internal::optional_data_dtor_base.1779" = type { i8, %union.anon.1780 }
%union.anon.1780 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1781" = type { %"class.absl::optional_internal::optional_data.1782" }
%"class.absl::optional_internal::optional_data.1782" = type { %"class.absl::optional_internal::optional_data_base.1783" }
%"class.absl::optional_internal::optional_data_base.1783" = type { %"class.absl::optional_internal::optional_data_dtor_base.1784" }
%"class.absl::optional_internal::optional_data_dtor_base.1784" = type { i8, [3 x i8], %union.anon.1785 }
%union.anon.1785 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1786" = type { %"class.absl::optional_internal::optional_data.1787" }
%"class.absl::optional_internal::optional_data.1787" = type { %"class.absl::optional_internal::optional_data_base.1788" }
%"class.absl::optional_internal::optional_data_base.1788" = type { %"class.absl::optional_internal::optional_data_dtor_base.1789" }
%"class.absl::optional_internal::optional_data_dtor_base.1789" = type { i8, %union.anon.1790 }
%union.anon.1790 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1794 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1751", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1751" = type { %"class.std::__1::__compressed_pair.1752" }
%"class.std::__1::__compressed_pair.1752" = type { %"struct.std::__1::__compressed_pair_elem.1753" }
%"struct.std::__1::__compressed_pair_elem.1753" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1754", %"class.absl::optional.1759" }
%"class.absl::optional.1754" = type { %"class.absl::optional_internal::optional_data.1755" }
%"class.absl::optional_internal::optional_data.1755" = type { %"class.absl::optional_internal::optional_data_base.1756" }
%"class.absl::optional_internal::optional_data_base.1756" = type { %"class.absl::optional_internal::optional_data_dtor_base.1757" }
%"class.absl::optional_internal::optional_data_dtor_base.1757" = type { i8, %union.anon.1758 }
%union.anon.1758 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1759" = type { %"class.absl::optional_internal::optional_data.1760" }
%"class.absl::optional_internal::optional_data.1760" = type { %"class.absl::optional_internal::optional_data_base.1761" }
%"class.absl::optional_internal::optional_data_base.1761" = type { %"class.absl::optional_internal::optional_data_dtor_base.1762" }
%"class.absl::optional_internal::optional_data_dtor_base.1762" = type { i8, %union.anon.1763 }
%union.anon.1763 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1795" = type { %"class.blink::PersistentBase.1796" }
%"class.blink::PersistentBase.1796" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1799", %"struct.blink::PhysicalRect", %"class.blink::Member.1809" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1799" = type { %"class.std::__1::__compressed_pair.1800" }
%"class.std::__1::__compressed_pair.1800" = type { %"struct.std::__1::__compressed_pair_elem.1801" }
%"struct.std::__1::__compressed_pair_elem.1801" = type { %"class.WTF::HashSet.1802"* }
%"class.WTF::HashSet.1802" = type { %"class.WTF::HashTable.1803" }
%"class.WTF::HashTable.1803" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1809" = type { %"class.blink::MemberBase.1810" }
%"class.blink::MemberBase.1810" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1811" = type { %"class.blink::PersistentBase.1812" }
%"class.blink::PersistentBase.1812" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1815", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1815" = type { %"class.std::__1::__compressed_pair.1816" }
%"class.std::__1::__compressed_pair.1816" = type { %"struct.std::__1::__compressed_pair_elem.1817" }
%"struct.std::__1::__compressed_pair_elem.1817" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type opaque
%"class.std::__1::unique_ptr.1821" = type { %"class.std::__1::__compressed_pair.1822" }
%"class.std::__1::__compressed_pair.1822" = type { %"struct.std::__1::__compressed_pair_elem.1823" }
%"struct.std::__1::__compressed_pair_elem.1823" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1824", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1824" = type { %"class.WTF::HashTable.1827", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1827" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1830", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1830" = type { %"class.std::__1::__compressed_pair.1831" }
%"class.std::__1::__compressed_pair.1831" = type { %"struct.std::__1::__compressed_pair_elem.1832" }
%"struct.std::__1::__compressed_pair_elem.1832" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1833, %"class.std::__1::unique_ptr.1834", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1751", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1833 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.2856", i16, %class.scoped_refptr.1833 }
%"class.WTF::ThreadSafeRefCounted.2856" = type { %"class.base::RefCountedThreadSafe.2857" }
%"class.base::RefCountedThreadSafe.2857" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1834" = type { %"class.std::__1::__compressed_pair.1835" }
%"class.std::__1::__compressed_pair.1835" = type { %"struct.std::__1::__compressed_pair_elem.1836" }
%"struct.std::__1::__compressed_pair_elem.1836" = type { %"class.WTF::Vector.1837"* }
%"class.WTF::Vector.1837" = type { %"class.WTF::VectorBuffer.1838" }
%"class.WTF::VectorBuffer.1838" = type { %"class.WTF::VectorBufferBase.1839" }
%"class.WTF::VectorBufferBase.1839" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1848, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::UntracedMember.1852" = type { %"class.blink::MemberBase.1853" }
%"class.blink::MemberBase.1853" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1856", %"class.blink::Member.1861", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1863", i8, i32, %"class.blink::Color", %"class.absl::optional.1866", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1871", %"class.blink::Member.1873", %"class.blink::Member.1873", %"class.std::__1::unique_ptr.1876", i32, [4 x i8], %"class.WTF::HashSet.1879", %"class.blink::Member.1886", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1888", %"class.blink::HeapHashSet.1895", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1903", i8, %"class.blink::Member.1909", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1921", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1935", i8, %"class.std::__1::unique_ptr.1941", %"class.std::__1::unique_ptr.2022", %"class.WTF::Vector.2028", i32, %class.scoped_refptr.2033, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2034", %"class.blink::Member.2036", %"class.blink::Member.2038", %"class.blink::HeapHashSet.2040", %"class.blink::HeapHashSet.2047", %"class.std::__1::unique_ptr.2054", %"class.std::__1::unique_ptr.2061", %"class.WTF::Vector.906" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.WTF::HashSet.1856" = type { %"class.WTF::HashTable.1857" }
%"class.WTF::HashTable.1857" = type <{ %class.scoped_refptr.1860*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1860 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1861" = type { %"class.blink::MemberBase.1862" }
%"class.blink::MemberBase.1862" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2290", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2298", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2312", %"class.blink::FrameLoader", %"class.blink::Member.2333", %"class.blink::Member.343", %"class.blink::Member.2334", %"class.blink::Member.2336", %"class.blink::Member.2352", %"class.blink::Member.2354", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2356", %class.scoped_refptr.2580, %"class.blink::Member.2581", %"class.blink::Member.2583", %"class.blink::Member.2585", %"class.blink::Member.2587", %"class.blink::Member.2589", %"class.blink::Member.2593", %"class.blink::Member.2595", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2599", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2605", %"class.std::__1::unique_ptr.2606", %"class.absl::optional.2278", i32, [4 x i8], %"class.std::__1::unique_ptr.2612", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2620", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2625", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2630", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2633", %"class.blink::Member.2635", %"class.blink::Member.2637", %"class.blink::Member.2639", %"class.mojo::StructPtr.2642", %"class.blink::Member.2651", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2653", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.2123", %"class.blink::Member.2125", %"class.blink::Member.2127", i8, i32, i8, i32, %"class.blink::Member.2260", %"class.blink::Member.2150", %"class.blink::FrameLifecycle", %"class.blink::Member.2121", %"class.blink::Member.2121", %"class.blink::Member.2121", %"class.blink::Member.2121", %"class.blink::Member.2121", %"class.blink::Member.2121", %"class.blink::Member.1861", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.2271", i8, %"class.base::UnguessableToken", %"class.absl::optional.2273", %"class.absl::optional.2278", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.2121", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.2123" = type { %"class.blink::MemberBase.2124" }
%"class.blink::MemberBase.2124" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.2860", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.2121", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.2886", %"class.blink::Member.2890", %"class.blink::Member.2892", %"class.blink::Member.2894", %"class.blink::Member.2896", %"class.blink::Member.2898", %"class.blink::Member.2900", %"class.blink::Member.2902", %"class.blink::HeapObserverSet.2904", %"class.blink::Member.2912", %"class.blink::Member.2914", %"class.blink::Member.2916", %"class.blink::Member.2918", %"class.blink::Member.2920", %"class.blink::Member.2922", %"class.blink::Member.2928", %"class.blink::Member.2930", %"class.blink::Member.2932", %"class.blink::Member.2934", %"class.blink::Member.2936", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.2961", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.2968", %"class.blink::Member.2123", %"class.blink::Member.2123", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.2976", %"class.std::__1::unique_ptr.2982", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.2860" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2861" }
%"class.blink::HeapHashMap.2861" = type { %"class.WTF::HashMap.2864" }
%"class.WTF::HashMap.2864" = type { %"class.WTF::HashTable.2865" }
%"class.WTF::HashTable.2865" = type <{ %"struct.WTF::KeyValuePair.2867"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2867" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.2868" }
%"class.std::__1::unique_ptr.2868" = type { %"class.std::__1::__compressed_pair.2869" }
%"class.std::__1::__compressed_pair.2869" = type { %"struct.std::__1::__compressed_pair_elem.2870" }
%"struct.std::__1::__compressed_pair_elem.2870" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type <{ %"class.blink::SettingsDelegate"*, %"class.blink::GenericFontFamilySettings", double, i32, [4 x i8], double, i32, i32, i32, i32, i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", i32, i32, double, i32, i32, i32, i32, i32, %"class.blink::IntSize", [4 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], double, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", [14 x i8], [2 x i8] }>
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.2871", %"class.WTF::HashMap.2871", %"class.WTF::HashMap.2871", %"class.WTF::HashMap.2871", %"class.WTF::HashMap.2871", %"class.WTF::HashMap.2871", %"class.WTF::HashMap.2871", %"class.std::__1::unique_ptr.2876" }
%"class.WTF::HashMap.2871" = type { %"class.WTF::HashTable.2872" }
%"class.WTF::HashTable.2872" = type <{ %"struct.WTF::KeyValuePair.2875"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2875" = type opaque
%"class.std::__1::unique_ptr.2876" = type { %"class.std::__1::__compressed_pair.2877" }
%"class.std::__1::__compressed_pair.2877" = type { %"struct.std::__1::__compressed_pair_elem.2878" }
%"struct.std::__1::__compressed_pair_elem.2878" = type { %"class.WTF::Vector.2879"* }
%"class.WTF::Vector.2879" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.2886" = type { %"class.blink::MemberBase.2887" }
%"class.blink::MemberBase.2887" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.2123", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.blink::Member.2890" = type { %"class.blink::MemberBase.2891" }
%"class.blink::MemberBase.2891" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.2892" = type { %"class.blink::MemberBase.2893" }
%"class.blink::MemberBase.2893" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type opaque
%"class.blink::Member.2894" = type { %"class.blink::MemberBase.2895" }
%"class.blink::MemberBase.2895" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.2896" = type { %"class.blink::MemberBase.2897" }
%"class.blink::MemberBase.2897" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.2898" = type { %"class.blink::MemberBase.2899" }
%"class.blink::MemberBase.2899" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.2900" = type { %"class.blink::MemberBase.2901" }
%"class.blink::MemberBase.2901" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.2902" = type { %"class.blink::MemberBase.2903" }
%"class.blink::MemberBase.2903" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.2904" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2905" }
%"class.blink::HeapHashSet.2905" = type { %"class.WTF::HashSet.2908" }
%"class.WTF::HashSet.2908" = type { %"class.WTF::HashTable.2909" }
%"class.WTF::HashTable.2909" = type <{ %"class.blink::WeakMember.2911"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2911" = type opaque
%"class.blink::Member.2912" = type { %"class.blink::MemberBase.2913" }
%"class.blink::MemberBase.2913" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.2914" = type { %"class.blink::MemberBase.2915" }
%"class.blink::MemberBase.2915" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.2916" = type { %"class.blink::MemberBase.2917" }
%"class.blink::MemberBase.2917" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.2918" = type { %"class.blink::MemberBase.2919" }
%"class.blink::MemberBase.2919" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.2920" = type { %"class.blink::MemberBase.2921" }
%"class.blink::MemberBase.2921" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.2922" = type { %"class.blink::MemberBase.2923" }
%"class.blink::MemberBase.2923" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type <{ %"class.blink::ScrollableArea", %"class.blink::Member.2123", %class.scoped_refptr.2926, %class.scoped_refptr.2927, %class.scoped_refptr.2927, %"class.blink::PropertyTreeStateOrAlias", %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.809, %class.scoped_refptr.809, %"class.blink::FloatSize", float, i8, [3 x i8], %"class.blink::IntSize", float, float, i8, [7 x i8], %"struct.cc::ElementId", %"struct.cc::ElementId", i8, [7 x i8] }>
%class.scoped_refptr.2926 = type { %"class.cc::Layer"* }
%"class.cc::Layer" = type opaque
%class.scoped_refptr.2927 = type { %"class.cc::ScrollbarLayerBase"* }
%"class.cc::ScrollbarLayerBase" = type opaque
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Member.2928" = type { %"class.blink::MemberBase.2929" }
%"class.blink::MemberBase.2929" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.2930" = type { %"class.blink::MemberBase.2931" }
%"class.blink::MemberBase.2931" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.2932" = type { %"class.blink::MemberBase.2933" }
%"class.blink::MemberBase.2933" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.2934" = type { %"class.blink::MemberBase.2935" }
%"class.blink::MemberBase.2935" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.2936" = type { %"class.blink::MemberBase.2937" }
%"class.blink::MemberBase.2937" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.2938" }
%"class.WTF::Deque.2938" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2941" }
%"class.WTF::VectorBuffer.2941" = type { %"class.WTF::VectorBufferBase.2942" }
%"class.WTF::VectorBufferBase.2942" = type { %"class.std::__1::unique_ptr.2943"*, i32, i32 }
%"class.std::__1::unique_ptr.2943" = type { %"class.std::__1::__compressed_pair.2944" }
%"class.std::__1::__compressed_pair.2944" = type { %"struct.std::__1::__compressed_pair_elem.2945" }
%"struct.std::__1::__compressed_pair_elem.2945" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.2949", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2949" = type { %"class.std::__1::__bitset.2950" }
%"class.std::__1::__bitset.2950" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.2951" }
%"class.absl::optional.2951" = type { %"class.absl::optional_internal::optional_data.2952" }
%"class.absl::optional_internal::optional_data.2952" = type { %"class.absl::optional_internal::optional_data_base.2953" }
%"class.absl::optional_internal::optional_data_base.2953" = type { %"class.absl::optional_internal::optional_data_dtor_base.2954" }
%"class.absl::optional_internal::optional_data_dtor_base.2954" = type { i8, %union.anon.2955 }
%union.anon.2955 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.2956", i64, %"class.absl::optional.1663", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.2956" = type { %"class.absl::optional_internal::optional_data.2957" }
%"class.absl::optional_internal::optional_data.2957" = type { %"class.absl::optional_internal::optional_data_base.2958" }
%"class.absl::optional_internal::optional_data_base.2958" = type { %"class.absl::optional_internal::optional_data_dtor_base.2959" }
%"class.absl::optional_internal::optional_data_dtor_base.2959" = type { i8, %union.anon.2960 }
%union.anon.2960 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.2961" = type { %"class.std::__1::unique_ptr.2962" }
%"class.std::__1::unique_ptr.2962" = type { %"class.std::__1::__compressed_pair.2963" }
%"class.std::__1::__compressed_pair.2963" = type { %"struct.std::__1::__compressed_pair_elem.2964" }
%"struct.std::__1::__compressed_pair_elem.2964" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.2968" = type { %"class.WTF::HashSet.2971" }
%"class.WTF::HashSet.2971" = type { %"class.WTF::HashTable.2972" }
%"class.WTF::HashTable.2972" = type <{ %"class.blink::WeakMember.2974"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2974" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.2975" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.2975" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.2976" = type { %"class.std::__1::__compressed_pair.2977" }
%"class.std::__1::__compressed_pair.2977" = type { %"struct.std::__1::__compressed_pair_elem.2978" }
%"struct.std::__1::__compressed_pair_elem.2978" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2982" = type { %"class.std::__1::__compressed_pair.2983" }
%"class.std::__1::__compressed_pair.2983" = type { %"struct.std::__1::__compressed_pair_elem.2984" }
%"struct.std::__1::__compressed_pair_elem.2984" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::Member.2125" = type { %"class.blink::MemberBase.2126" }
%"class.blink::MemberBase.2126" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.2127" = type { %"class.blink::MemberBase.2128" }
%"class.blink::MemberBase.2128" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.2121", %"class.blink::Member.2150", %"class.blink::Member.2152", %"class.blink::Member.2154", i8, %"class.WTF::Vector.2156" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.2143" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.2131" }
%"class.blink::HeapVector.2131" = type { %"class.WTF::Vector.2134" }
%"class.WTF::Vector.2134" = type { %"class.WTF::VectorBuffer.2135" }
%"class.WTF::VectorBuffer.2135" = type { %"class.WTF::VectorBufferBase.2136", [32 x i8] }
%"class.WTF::VectorBufferBase.2136" = type { %"struct.std::__1::pair.2137"*, i32, i32 }
%"struct.std::__1::pair.2137" = type { %"class.WTF::AtomicString", %"class.blink::Member.2138" }
%"class.blink::Member.2138" = type { %"class.blink::MemberBase.2139" }
%"class.blink::MemberBase.2139" = type { %"class.blink::HeapVector.2140"* }
%"class.blink::HeapVector.2140" = type opaque
%"class.std::__1::unique_ptr.2143" = type { %"class.std::__1::__compressed_pair.2144" }
%"class.std::__1::__compressed_pair.2144" = type { %"struct.std::__1::__compressed_pair_elem.2145" }
%"struct.std::__1::__compressed_pair_elem.2145" = type { %"class.WTF::Vector.2146"* }
%"class.WTF::Vector.2146" = type opaque
%"class.blink::Member.2152" = type { %"class.blink::MemberBase.2153" }
%"class.blink::MemberBase.2153" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.2154" = type { %"class.blink::MemberBase.2155" }
%"class.blink::MemberBase.2155" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.2156" = type { %"class.WTF::VectorBuffer.2157" }
%"class.WTF::VectorBuffer.2157" = type { %"class.WTF::VectorBufferBase.2158" }
%"class.WTF::VectorBufferBase.2158" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2252" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.2159, %"class.std::__1::unique_ptr.1659", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.1673, i32 }>
%class.scoped_refptr.2159 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1673, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.2218", %"class.absl::optional.2223", %"class.absl::optional.2176", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.2243", i8, [7 x i8], %class.scoped_refptr.1673, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1686" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1673, %"class.std::__1::unique_ptr.2160", %"class.absl::optional.2170", %"struct.std::__1::atomic.238", i8, i8, i8, i8, i32, i32, %"class.absl::optional.2176", %"class.std::__1::unique_ptr.2181", i8, i64, %class.scoped_refptr.2215, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.2216", %"class.base::WeakPtrFactory.2217" }
%"class.std::__1::unique_ptr.2160" = type { %"class.std::__1::__compressed_pair.2161" }
%"class.std::__1::__compressed_pair.2161" = type { %"struct.std::__1::__compressed_pair_elem.2162" }
%"struct.std::__1::__compressed_pair_elem.2162" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1673, i8, %"class.mojo::ScopedHandleBase.2163", %class.scoped_refptr.2164, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2165", i8*, %"class.base::WeakPtrFactory.2166" }
%"class.mojo::ScopedHandleBase.2163" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.2164 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.2165" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.2166" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2170" = type { %"class.absl::optional_internal::optional_data.2171" }
%"class.absl::optional_internal::optional_data.2171" = type { %"class.absl::optional_internal::optional_data_base.2172" }
%"class.absl::optional_internal::optional_data_base.2172" = type { %"class.absl::optional_internal::optional_data_dtor_base.2173" }
%"class.absl::optional_internal::optional_data_dtor_base.2173" = type { i8, %union.anon.2174 }
%union.anon.2174 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.2175", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.2175" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.2181" = type { %"class.std::__1::__compressed_pair.2182" }
%"class.std::__1::__compressed_pair.2182" = type { %"struct.std::__1::__compressed_pair_elem.2183" }
%"struct.std::__1::__compressed_pair_elem.2183" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2184", i8, i64, %class.scoped_refptr.2185, %class.scoped_refptr.2210 }
%"class.base::RepeatingCallback.2184" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.2185 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.2186", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.2188", %"class.std::__1::map.2199", i8, [7 x i8] }>
%"class.base::RefCounted.2186" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.2187 }
%class.scoped_refptr.2187 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.2188" = type { %"class.std::__1::__tree.2189" }
%"class.std::__1::__tree.2189" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2190", %"class.std::__1::__compressed_pair.2194" }
%"class.std::__1::__compressed_pair.2190" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"class.std::__1::__compressed_pair.2194" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.2199" = type { %"class.std::__1::__tree.2200" }
%"class.std::__1::__tree.2200" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2201", %"class.std::__1::__compressed_pair.2205" }
%"class.std::__1::__compressed_pair.2201" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"class.std::__1::__compressed_pair.2205" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%class.scoped_refptr.2210 = type { %"class.base::RefCountedData.2211"* }
%"class.base::RefCountedData.2211" = type opaque
%class.scoped_refptr.2215 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.2216" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.2217" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2218" = type { %"class.absl::optional_internal::optional_data.2219" }
%"class.absl::optional_internal::optional_data.2219" = type { %"class.absl::optional_internal::optional_data_base.2220" }
%"class.absl::optional_internal::optional_data_base.2220" = type { %"class.absl::optional_internal::optional_data_dtor_base.2221" }
%"class.absl::optional_internal::optional_data_dtor_base.2221" = type { i8, %union.anon.2222 }
%union.anon.2222 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.2223" = type { %"class.absl::optional_internal::optional_data.2224" }
%"class.absl::optional_internal::optional_data.2224" = type { %"class.absl::optional_internal::optional_data_base.2225" }
%"class.absl::optional_internal::optional_data_base.2225" = type { %"class.absl::optional_internal::optional_data_dtor_base.2226" }
%"class.absl::optional_internal::optional_data_dtor_base.2226" = type { i8, [7 x i8], %union.anon.2227 }
%union.anon.2227 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.2176" = type { %"class.absl::optional_internal::optional_data.2177" }
%"class.absl::optional_internal::optional_data.2177" = type { %"class.absl::optional_internal::optional_data_base.2178" }
%"class.absl::optional_internal::optional_data_base.2178" = type { %"class.absl::optional_internal::optional_data_dtor_base.2179" }
%"class.absl::optional_internal::optional_data_dtor_base.2179" = type { i8, %union.anon.2180 }
%union.anon.2180 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.2228 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.2228 = type { %"class.std::__1::map.2231" }
%"class.std::__1::map.2231" = type { %"class.std::__1::__tree.2232" }
%"class.std::__1::__tree.2232" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2233", %"class.std::__1::__compressed_pair.2237" }
%"class.std::__1::__compressed_pair.2233" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"class.std::__1::__compressed_pair.2237" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2242"*, i64 }
%"class.std::__1::unique_ptr.2242" = type opaque
%"class.std::__1::map.2243" = type { %"class.std::__1::__tree.2244" }
%"class.std::__1::__tree.2244" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2245", %"class.std::__1::__compressed_pair.2249" }
%"class.std::__1::__compressed_pair.2245" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"class.std::__1::__compressed_pair.2249" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2252" = type { %"class.std::__1::__compressed_pair.2253" }
%"class.std::__1::__compressed_pair.2253" = type { %"struct.std::__1::__compressed_pair_elem.2254" }
%"struct.std::__1::__compressed_pair_elem.2254" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.2260" = type { %"class.blink::MemberBase.2261" }
%"class.blink::MemberBase.2261" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.2150" = type { %"class.blink::MemberBase.2151" }
%"class.blink::MemberBase.2151" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.2121" = type { %"class.blink::MemberBase.2122" }
%"class.blink::MemberBase.2122" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.2121", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.2262" }
%"class.base::internal::flat_tree.2262" = type { %"class.std::__1::vector.2263" }
%"class.std::__1::vector.2263" = type { %"class.std::__1::__vector_base.2264" }
%"class.std::__1::__vector_base.2264" = type { %"struct.std::__1::pair.2265"*, %"struct.std::__1::pair.2265"*, %"class.std::__1::__compressed_pair.2266" }
%"struct.std::__1::pair.2265" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.2266" = type { %"struct.std::__1::__compressed_pair_elem.2267" }
%"struct.std::__1::__compressed_pair_elem.2267" = type { %"struct.std::__1::pair.2265"* }
%"class.blink::Member.2271" = type { %"class.blink::MemberBase.2272" }
%"class.blink::MemberBase.2272" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.2273" = type { %"class.absl::optional_internal::optional_data.2274" }
%"class.absl::optional_internal::optional_data.2274" = type { %"class.absl::optional_internal::optional_data_base.2275" }
%"class.absl::optional_internal::optional_data_base.2275" = type { %"class.absl::optional_internal::optional_data_dtor_base.2276" }
%"class.absl::optional_internal::optional_data_dtor_base.2276" = type { i8, %union.anon.2277 }
%union.anon.2277 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.2283" }
%"class.blink::HeapHashSet.2283" = type { %"class.WTF::HashSet.2286" }
%"class.WTF::HashSet.2286" = type { %"class.WTF::HashTable.2287" }
%"class.WTF::HashTable.2287" = type <{ %"class.blink::WeakMember.2289"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2289" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2290" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2291" }
%"class.blink::HeapHashMap.2291" = type { %"class.WTF::HashMap.2294" }
%"class.WTF::HashMap.2294" = type { %"class.WTF::HashTable.2295" }
%"class.WTF::HashTable.2295" = type <{ %"struct.WTF::KeyValuePair.2297"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2297" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2298" = type { %"class.std::__1::__compressed_pair.2299" }
%"class.std::__1::__compressed_pair.2299" = type { %"struct.std::__1::__compressed_pair_elem.2300" }
%"struct.std::__1::__compressed_pair_elem.2300" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.2301", %"class.base::WeakPtrFactory.2306" }
%"class.WTF::HashMap.2301" = type { %"class.WTF::HashTable.2302" }
%"class.WTF::HashTable.2302" = type <{ %"struct.WTF::KeyValuePair.2305"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2305" = type opaque
%"class.base::WeakPtrFactory.2306" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2310" }
%"class.blink::Member.2310" = type { %"class.blink::MemberBase.2311" }
%"class.blink::MemberBase.2311" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.3146" }
%"class.blink::WeakMember.3146" = type { %"class.blink::MemberBase.3147" }
%"class.blink::MemberBase.3147" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.3148", i64, %"class.std::__1::map.3149", i8*, i64, %"class.base::WeakPtrFactory.3158" }
%"class.base::RepeatingCallback.3148" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.3149" = type { %"class.std::__1::__tree.3150" }
%"class.std::__1::__tree.3150" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3151", %"class.std::__1::__compressed_pair.3155" }
%"class.std::__1::__compressed_pair.3151" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"class.std::__1::__compressed_pair.3155" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::WeakPtrFactory.3158" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2312" = type { %"class.WTF::HashSet.2315" }
%"class.WTF::HashSet.2315" = type { %"class.WTF::HashTable.2316" }
%"class.WTF::HashTable.2316" = type <{ %"class.blink::WeakMember.2318"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2318" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1861", %"class.blink::Member.2319", %"class.blink::Member.2321", %"class.std::__1::unique_ptr.2323", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.2329" }
%"class.blink::Member.2319" = type { %"class.blink::MemberBase.2320" }
%"class.blink::MemberBase.2320" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.2321" = type { %"class.blink::MemberBase.2322" }
%"class.blink::MemberBase.2322" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.2323" = type { %"class.std::__1::__compressed_pair.2324" }
%"class.std::__1::__compressed_pair.2324" = type { %"struct.std::__1::__compressed_pair_elem.2325" }
%"struct.std::__1::__compressed_pair_elem.2325" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.2329" = type { %"class.WTF::HashTable.2330" }
%"class.WTF::HashTable.2330" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2333" = type { %"class.blink::MemberBase.1865" }
%"class.blink::MemberBase.1865" = type { %"class.blink::LocalFrameView"* }
%"class.blink::Member.2334" = type { %"class.blink::MemberBase.2335" }
%"class.blink::MemberBase.2335" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.2336" = type { %"class.blink::MemberBase.2337" }
%"class.blink::MemberBase.2337" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.1861", %"class.blink::Member.2340", %"class.blink::Member.2342", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.2344", %"class.blink::Member.2350" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.966" }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::Member.2340" = type { %"class.blink::MemberBase.2341" }
%"class.blink::MemberBase.2341" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.2342" = type { %"class.blink::MemberBase.2343" }
%"class.blink::MemberBase.2343" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.2344" = type { %"class.std::__1::__compressed_pair.2345" }
%"class.std::__1::__compressed_pair.2345" = type { %"struct.std::__1::__compressed_pair_elem.2346" }
%"struct.std::__1::__compressed_pair_elem.2346" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.2350" = type { %"class.blink::MemberBase.2351" }
%"class.blink::MemberBase.2351" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.2352" = type { %"class.blink::MemberBase.2353" }
%"class.blink::MemberBase.2353" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type { %"class.blink::Member.1861", %"class.blink::Member.2732", %"class.blink::HeapTaskRunnerTimer.2734", %"class.blink::HeapTaskRunnerTimer.2734", %"class.blink::Member.343", %"class.blink::Member.343", i8, %"class.blink::Member.1861", %"class.blink::Member.1901", %"class.blink::Member.318", i8, %"class.blink::Member.2736", %"class.blink::Member.2738", %"class.blink::Member.2740", %"class.blink::Member.2762", %"class.blink::Member.2766", %"class.blink::Member.2770", %"class.blink::Member.2774", %"class.blink::Member.2827", double, %"class.blink::HeapTaskRunnerTimer.2734", %"class.absl::optional.2829", %"class.blink::Member.343", i8, %"struct.blink::TouchAdjustmentResult" }
%"class.blink::Member.2732" = type { %"class.blink::MemberBase.2733" }
%"class.blink::MemberBase.2733" = type { %"class.blink::SelectionController"* }
%"class.blink::SelectionController" = type opaque
%"class.blink::Member.2736" = type { %"class.blink::MemberBase.2737" }
%"class.blink::MemberBase.2737" = type { %"class.blink::HTMLFrameSetElement"* }
%"class.blink::HTMLFrameSetElement" = type opaque
%"class.blink::Member.2738" = type { %"class.blink::MemberBase.2739" }
%"class.blink::MemberBase.2739" = type { %"class.blink::EventHandlerRegistry"* }
%"class.blink::EventHandlerRegistry" = type opaque
%"class.blink::Member.2740" = type { %"class.blink::MemberBase.2741" }
%"class.blink::MemberBase.2741" = type { %"class.blink::ScrollManager"* }
%"class.blink::ScrollManager" = type { %"class.cc::SnapFlingClient", %"class.blink::Member.1861", %"class.WTF::Deque.2744", %"class.blink::Member.318", i8, %"class.blink::Member.318", %"class.blink::FloatSize", i8, i8, i8, %"class.blink::Member.1901", %"class.blink::Member.2748", %"class.std::__1::unique_ptr.2750", %"class.blink::LayoutSize" }
%"class.cc::SnapFlingClient" = type { i32 (...)** }
%"class.WTF::Deque.2744" = type { %"class.WTF::Deque<int, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<int, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2747" }
%"class.WTF::VectorBuffer.2747" = type { %"class.WTF::VectorBufferBase.1991" }
%"class.WTF::VectorBufferBase.1991" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.2750" = type { %"class.std::__1::__compressed_pair.2751" }
%"class.std::__1::__compressed_pair.2751" = type { %"struct.std::__1::__compressed_pair_elem.2752" }
%"struct.std::__1::__compressed_pair_elem.2752" = type { %"class.cc::SnapFlingController"* }
%"class.cc::SnapFlingController" = type { %"class.cc::SnapFlingClient"*, i32, %"class.std::__1::unique_ptr.2753" }
%"class.std::__1::unique_ptr.2753" = type { %"class.std::__1::__compressed_pair.2754" }
%"class.std::__1::__compressed_pair.2754" = type { %"struct.std::__1::__compressed_pair_elem.2755" }
%"struct.std::__1::__compressed_pair_elem.2755" = type { %"class.cc::SnapFlingCurve"* }
%"class.cc::SnapFlingCurve" = type opaque
%"class.blink::Member.2762" = type { %"class.blink::MemberBase.2763" }
%"class.blink::MemberBase.2763" = type { %"class.blink::MouseEventManager"* }
%"class.blink::MouseEventManager" = type <{ %"class.blink::SynchronousMutationObserver", %"class.blink::Member.1861", %"class.blink::Member.2740", %"class.blink::Member.343", %"class.blink::FloatPoint", %"class.blink::FloatPoint", i8, [7 x i8], %"class.blink::Member.318", i32, [4 x i8], %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::IntPoint", %"class.base::TimeTicks", %"class.blink::WebMouseEvent", %"struct.blink::PhysicalOffset", i8, [7 x i8] }>
%"class.blink::WebMouseEvent" = type <{ %"class.blink::WebInputEvent", %"class.blink::WebPointerProperties", i32, i32, [4 x i8] }>
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.blink::WebPointerProperties" = type { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.blink::Member.2766" = type { %"class.blink::MemberBase.2767" }
%"class.blink::MemberBase.2767" = type { %"class.blink::MouseWheelEventManager"* }
%"class.blink::MouseWheelEventManager" = type { %"class.blink::Member.1861", %"class.blink::Member.318", %"class.blink::Member.2740" }
%"class.blink::Member.2770" = type { %"class.blink::MemberBase.2771" }
%"class.blink::MemberBase.2771" = type { %"class.blink::KeyboardEventManager"* }
%"class.blink::KeyboardEventManager" = type { %"class.blink::Member.1861", %"class.blink::Member.2740" }
%"class.blink::Member.2774" = type { %"class.blink::MemberBase.2775" }
%"class.blink::MemberBase.2775" = type { %"class.blink::PointerEventManager"* }
%"class.blink::PointerEventManager" = type { %"class.blink::Member.1861", [5 x i8], i8, %"class.WTF::Deque.2778", %"class.blink::HeapHashMap.2782", %"class.blink::HeapHashMap.2789", %"class.blink::HeapHashMap.2789", %"class.blink::PointerEventFactory", %"class.blink::Member.2811", %"class.blink::Member.2762", i32, i8, i8, %"class.blink::Member.2827" }
%"class.WTF::Deque.2778" = type { %"class.WTF::Deque<unsigned int, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<unsigned int, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2781" }
%"class.WTF::VectorBuffer.2781" = type { %"class.WTF::VectorBufferBase.1071" }
%"class.blink::HeapHashMap.2782" = type { %"class.WTF::HashMap.2785" }
%"class.WTF::HashMap.2785" = type { %"class.WTF::HashTable.2786" }
%"class.WTF::HashTable.2786" = type <{ %"struct.WTF::KeyValuePair.2788"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2788" = type opaque
%"class.blink::HeapHashMap.2789" = type { %"class.WTF::HashMap.2792" }
%"class.WTF::HashMap.2792" = type { %"class.WTF::HashTable.2793" }
%"class.WTF::HashTable.2793" = type <{ %"struct.WTF::KeyValuePair.2795"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2795" = type opaque
%"class.blink::PointerEventFactory" = type { i32, [4 x i8], %"class.WTF::HashMap.2796", %"class.WTF::HashMap.2801", [5 x i32], [5 x i32], %"class.WTF::HashMap.2806", %"class.WTF::HashMap.2806" }
%"class.WTF::HashMap.2796" = type { %"class.WTF::HashTable.2797" }
%"class.WTF::HashTable.2797" = type <{ %"struct.WTF::KeyValuePair.2800"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2800" = type opaque
%"class.WTF::HashMap.2801" = type { %"class.WTF::HashTable.2802" }
%"class.WTF::HashTable.2802" = type <{ %"struct.WTF::KeyValuePair.2805"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2805" = type opaque
%"class.WTF::HashMap.2806" = type { %"class.WTF::HashTable.2807" }
%"class.WTF::HashTable.2807" = type <{ %"struct.WTF::KeyValuePair.2810"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2810" = type opaque
%"class.blink::Member.2811" = type { %"class.blink::MemberBase.2812" }
%"class.blink::MemberBase.2812" = type { %"class.blink::TouchEventManager"* }
%"class.blink::TouchEventManager" = type { %"class.blink::Member.1861", %"class.blink::HeapHashMap.2815", %"class.blink::Member.326", i8, %"class.blink::WebTouchEvent", i32, i8, %"class.absl::optional.2822" }
%"class.blink::HeapHashMap.2815" = type { %"class.WTF::HashMap.2818" }
%"class.WTF::HashMap.2818" = type { %"class.WTF::HashTable.2819" }
%"class.WTF::HashTable.2819" = type <{ %"struct.WTF::KeyValuePair.2821"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2821" = type opaque
%"class.blink::WebTouchEvent" = type { %"class.blink::WebInputEvent", i32, [16 x %"class.blink::WebTouchPoint"], i32, i8, i8, i8, i32 }
%"class.blink::WebTouchPoint" = type { %"class.blink::WebPointerProperties", i32, float, float, float }
%"class.absl::optional.2822" = type { %"class.absl::optional_internal::optional_data.2823" }
%"class.absl::optional_internal::optional_data.2823" = type { %"class.absl::optional_internal::optional_data_base.2824" }
%"class.absl::optional_internal::optional_data_base.2824" = type { %"class.absl::optional_internal::optional_data_dtor_base.2825" }
%"class.absl::optional_internal::optional_data_dtor_base.2825" = type { i8, %union.anon.2826 }
%union.anon.2826 = type { i32 }
%"class.blink::Member.2827" = type { %"class.blink::MemberBase.2828" }
%"class.blink::MemberBase.2828" = type { %"class.blink::GestureManager"* }
%"class.blink::GestureManager" = type { %"class.blink::Member.1861", %"class.blink::Member.2740", %"class.blink::Member.2762", %"class.blink::Member.2774", i8, i8, %"class.gfx::PointF", i32, %"class.blink::Member.2732" }
%"class.blink::HeapTaskRunnerTimer.2734" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2735", { i64, i64 } }
%"class.blink::WeakMember.2735" = type { %"class.blink::MemberBase.2353" }
%"class.absl::optional.2829" = type { %"class.absl::optional_internal::optional_data.2830" }
%"class.absl::optional_internal::optional_data.2830" = type { %"class.absl::optional_internal::optional_data_base.2831" }
%"class.absl::optional_internal::optional_data_base.2831" = type { %"class.absl::optional_internal::optional_data_dtor_base.2832" }
%"class.absl::optional_internal::optional_data_dtor_base.2832" = type { i8, %union.anon.2833 }
%union.anon.2833 = type { %"class.base::TimeTicks" }
%"struct.blink::TouchAdjustmentResult" = type { i32, %"class.blink::FloatPoint" }
%"class.blink::Member.2354" = type { %"class.blink::MemberBase.2355" }
%"class.blink::MemberBase.2355" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2356" = type { %"class.blink::MemberBase.2357" }
%"class.blink::MemberBase.2357" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet.2360", %"class.blink::HeapListHashSet.2371", %"class.blink::HeapListHashSet.2382", %"class.blink::HeapListHashSet.2393", %"class.blink::HeapListHashSet.2404", %"class.blink::HeapListHashSet.2415", %"class.blink::HeapListHashSet.2426", %"class.blink::HeapListHashSet.2437", %"class.blink::HeapListHashSet.2448", %"class.blink::HeapListHashSet.2459", %"class.blink::HeapListHashSet.2470", %"class.blink::HeapListHashSet.2481", %"class.blink::HeapListHashSet.2492", %"class.blink::HeapListHashSet.2503", %"class.blink::HeapListHashSet.2514", %"class.blink::HeapListHashSet.2525", %"class.blink::HeapListHashSet.2536", %"class.blink::HeapListHashSet.2547", %"class.blink::HeapListHashSet.2558", %"class.blink::HeapListHashSet.2569" }
%"class.blink::HeapListHashSet.2360" = type { %"class.WTF::ListHashSet.base.2370", [7 x i8] }
%"class.WTF::ListHashSet.base.2370" = type <{ %"class.WTF::HashTable.2365", %"class.blink::Member.2367", %"class.blink::Member.2367", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2365" = type <{ %"class.blink::Member.2367"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2367" = type { %"class.blink::MemberBase.2368" }
%"class.blink::MemberBase.2368" = type { %"class.blink::HeapListHashSetNode.2369"* }
%"class.blink::HeapListHashSetNode.2369" = type { %"class.blink::Member.2583", %"class.blink::Member.2367", %"class.blink::Member.2367" }
%"class.blink::HeapListHashSet.2371" = type { %"class.WTF::ListHashSet.base.2381", [7 x i8] }
%"class.WTF::ListHashSet.base.2381" = type <{ %"class.WTF::HashTable.2376", %"class.blink::Member.2378", %"class.blink::Member.2378", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2376" = type <{ %"class.blink::Member.2378"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2378" = type { %"class.blink::MemberBase.2379" }
%"class.blink::MemberBase.2379" = type { %"class.blink::HeapListHashSetNode.2380"* }
%"class.blink::HeapListHashSetNode.2380" = type { %"class.blink::Member.2726", %"class.blink::Member.2378", %"class.blink::Member.2378" }
%"class.blink::Member.2726" = type { %"class.blink::MemberBase.2727" }
%"class.blink::MemberBase.2727" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.2382" = type { %"class.WTF::ListHashSet.base.2392", [7 x i8] }
%"class.WTF::ListHashSet.base.2392" = type <{ %"class.WTF::HashTable.2387", %"class.blink::Member.2389", %"class.blink::Member.2389", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2387" = type <{ %"class.blink::Member.2389"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2389" = type { %"class.blink::MemberBase.2390" }
%"class.blink::MemberBase.2390" = type { %"class.blink::HeapListHashSetNode.2391"* }
%"class.blink::HeapListHashSetNode.2391" = type { %"class.blink::Member.2722", %"class.blink::Member.2389", %"class.blink::Member.2389" }
%"class.blink::Member.2722" = type { %"class.blink::MemberBase.2723" }
%"class.blink::MemberBase.2723" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2393" = type { %"class.WTF::ListHashSet.base.2403", [7 x i8] }
%"class.WTF::ListHashSet.base.2403" = type <{ %"class.WTF::HashTable.2398", %"class.blink::Member.2400", %"class.blink::Member.2400", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2398" = type <{ %"class.blink::Member.2400"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2400" = type { %"class.blink::MemberBase.2401" }
%"class.blink::MemberBase.2401" = type { %"class.blink::HeapListHashSetNode.2402"* }
%"class.blink::HeapListHashSetNode.2402" = type { %"class.blink::Member.2718", %"class.blink::Member.2400", %"class.blink::Member.2400" }
%"class.blink::Member.2718" = type { %"class.blink::MemberBase.2719" }
%"class.blink::MemberBase.2719" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2404" = type { %"class.WTF::ListHashSet.base.2414", [7 x i8] }
%"class.WTF::ListHashSet.base.2414" = type <{ %"class.WTF::HashTable.2409", %"class.blink::Member.2411", %"class.blink::Member.2411", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2409" = type <{ %"class.blink::Member.2411"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2411" = type { %"class.blink::MemberBase.2412" }
%"class.blink::MemberBase.2412" = type { %"class.blink::HeapListHashSetNode.2413"* }
%"class.blink::HeapListHashSetNode.2413" = type { %"class.blink::Member.2714", %"class.blink::Member.2411", %"class.blink::Member.2411" }
%"class.blink::Member.2714" = type { %"class.blink::MemberBase.2715" }
%"class.blink::MemberBase.2715" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2415" = type { %"class.WTF::ListHashSet.base.2425", [7 x i8] }
%"class.WTF::ListHashSet.base.2425" = type <{ %"class.WTF::HashTable.2420", %"class.blink::Member.2422", %"class.blink::Member.2422", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2420" = type <{ %"class.blink::Member.2422"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2422" = type { %"class.blink::MemberBase.2423" }
%"class.blink::MemberBase.2423" = type { %"class.blink::HeapListHashSetNode.2424"* }
%"class.blink::HeapListHashSetNode.2424" = type { %"class.blink::Member.2710", %"class.blink::Member.2422", %"class.blink::Member.2422" }
%"class.blink::Member.2710" = type { %"class.blink::MemberBase.2711" }
%"class.blink::MemberBase.2711" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.2426" = type { %"class.WTF::ListHashSet.base.2436", [7 x i8] }
%"class.WTF::ListHashSet.base.2436" = type <{ %"class.WTF::HashTable.2431", %"class.blink::Member.2433", %"class.blink::Member.2433", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2431" = type <{ %"class.blink::Member.2433"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2433" = type { %"class.blink::MemberBase.2434" }
%"class.blink::MemberBase.2434" = type { %"class.blink::HeapListHashSetNode.2435"* }
%"class.blink::HeapListHashSetNode.2435" = type { %"class.blink::Member.2706", %"class.blink::Member.2433", %"class.blink::Member.2433" }
%"class.blink::Member.2706" = type { %"class.blink::MemberBase.2707" }
%"class.blink::MemberBase.2707" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.2437" = type { %"class.WTF::ListHashSet.base.2447", [7 x i8] }
%"class.WTF::ListHashSet.base.2447" = type <{ %"class.WTF::HashTable.2442", %"class.blink::Member.2444", %"class.blink::Member.2444", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2442" = type <{ %"class.blink::Member.2444"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2444" = type { %"class.blink::MemberBase.2445" }
%"class.blink::MemberBase.2445" = type { %"class.blink::HeapListHashSetNode.2446"* }
%"class.blink::HeapListHashSetNode.2446" = type { %"class.blink::Member.2702", %"class.blink::Member.2444", %"class.blink::Member.2444" }
%"class.blink::Member.2702" = type { %"class.blink::MemberBase.2703" }
%"class.blink::MemberBase.2703" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.2448" = type { %"class.WTF::ListHashSet.base.2458", [7 x i8] }
%"class.WTF::ListHashSet.base.2458" = type <{ %"class.WTF::HashTable.2453", %"class.blink::Member.2455", %"class.blink::Member.2455", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2453" = type <{ %"class.blink::Member.2455"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2455" = type { %"class.blink::MemberBase.2456" }
%"class.blink::MemberBase.2456" = type { %"class.blink::HeapListHashSetNode.2457"* }
%"class.blink::HeapListHashSetNode.2457" = type { %"class.blink::Member.2698", %"class.blink::Member.2455", %"class.blink::Member.2455" }
%"class.blink::Member.2698" = type { %"class.blink::MemberBase.2699" }
%"class.blink::MemberBase.2699" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.2459" = type { %"class.WTF::ListHashSet.base.2469", [7 x i8] }
%"class.WTF::ListHashSet.base.2469" = type <{ %"class.WTF::HashTable.2464", %"class.blink::Member.2466", %"class.blink::Member.2466", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2464" = type <{ %"class.blink::Member.2466"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2466" = type { %"class.blink::MemberBase.2467" }
%"class.blink::MemberBase.2467" = type { %"class.blink::HeapListHashSetNode.2468"* }
%"class.blink::HeapListHashSetNode.2468" = type { %"class.blink::Member.2694", %"class.blink::Member.2466", %"class.blink::Member.2466" }
%"class.blink::Member.2694" = type { %"class.blink::MemberBase.2695" }
%"class.blink::MemberBase.2695" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2470" = type { %"class.WTF::ListHashSet.base.2480", [7 x i8] }
%"class.WTF::ListHashSet.base.2480" = type <{ %"class.WTF::HashTable.2475", %"class.blink::Member.2477", %"class.blink::Member.2477", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2475" = type <{ %"class.blink::Member.2477"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2477" = type { %"class.blink::MemberBase.2478" }
%"class.blink::MemberBase.2478" = type { %"class.blink::HeapListHashSetNode.2479"* }
%"class.blink::HeapListHashSetNode.2479" = type { %"class.blink::Member.2587", %"class.blink::Member.2477", %"class.blink::Member.2477" }
%"class.blink::HeapListHashSet.2481" = type { %"class.WTF::ListHashSet.base.2491", [7 x i8] }
%"class.WTF::ListHashSet.base.2491" = type <{ %"class.WTF::HashTable.2486", %"class.blink::Member.2488", %"class.blink::Member.2488", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2486" = type <{ %"class.blink::Member.2488"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2488" = type { %"class.blink::MemberBase.2489" }
%"class.blink::MemberBase.2489" = type { %"class.blink::HeapListHashSetNode.2490"* }
%"class.blink::HeapListHashSetNode.2490" = type { %"class.blink::Member.2688", %"class.blink::Member.2488", %"class.blink::Member.2488" }
%"class.blink::Member.2688" = type { %"class.blink::MemberBase.2689" }
%"class.blink::MemberBase.2689" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2492" = type { %"class.WTF::ListHashSet.base.2502", [7 x i8] }
%"class.WTF::ListHashSet.base.2502" = type <{ %"class.WTF::HashTable.2497", %"class.blink::Member.2499", %"class.blink::Member.2499", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2497" = type <{ %"class.blink::Member.2499"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2499" = type { %"class.blink::MemberBase.2500" }
%"class.blink::MemberBase.2500" = type { %"class.blink::HeapListHashSetNode.2501"* }
%"class.blink::HeapListHashSetNode.2501" = type { %"class.blink::Member.2684", %"class.blink::Member.2499", %"class.blink::Member.2499" }
%"class.blink::Member.2684" = type { %"class.blink::MemberBase.2685" }
%"class.blink::MemberBase.2685" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2503" = type { %"class.WTF::ListHashSet.base.2513", [7 x i8] }
%"class.WTF::ListHashSet.base.2513" = type <{ %"class.WTF::HashTable.2508", %"class.blink::Member.2510", %"class.blink::Member.2510", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2508" = type <{ %"class.blink::Member.2510"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2510" = type { %"class.blink::MemberBase.2511" }
%"class.blink::MemberBase.2511" = type { %"class.blink::HeapListHashSetNode.2512"* }
%"class.blink::HeapListHashSetNode.2512" = type { %"class.blink::Member.2680", %"class.blink::Member.2510", %"class.blink::Member.2510" }
%"class.blink::Member.2680" = type { %"class.blink::MemberBase.2681" }
%"class.blink::MemberBase.2681" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2514" = type { %"class.WTF::ListHashSet.base.2524", [7 x i8] }
%"class.WTF::ListHashSet.base.2524" = type <{ %"class.WTF::HashTable.2519", %"class.blink::Member.2521", %"class.blink::Member.2521", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2519" = type <{ %"class.blink::Member.2521"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2521" = type { %"class.blink::MemberBase.2522" }
%"class.blink::MemberBase.2522" = type { %"class.blink::HeapListHashSetNode.2523"* }
%"class.blink::HeapListHashSetNode.2523" = type { %"class.blink::Member.2676", %"class.blink::Member.2521", %"class.blink::Member.2521" }
%"class.blink::Member.2676" = type { %"class.blink::MemberBase.2677" }
%"class.blink::MemberBase.2677" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2525" = type { %"class.WTF::ListHashSet.base.2535", [7 x i8] }
%"class.WTF::ListHashSet.base.2535" = type <{ %"class.WTF::HashTable.2530", %"class.blink::Member.2532", %"class.blink::Member.2532", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2530" = type <{ %"class.blink::Member.2532"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2532" = type { %"class.blink::MemberBase.2533" }
%"class.blink::MemberBase.2533" = type { %"class.blink::HeapListHashSetNode.2534"* }
%"class.blink::HeapListHashSetNode.2534" = type { %"class.blink::Member.2672", %"class.blink::Member.2532", %"class.blink::Member.2532" }
%"class.blink::Member.2672" = type { %"class.blink::MemberBase.2673" }
%"class.blink::MemberBase.2673" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2536" = type { %"class.WTF::ListHashSet.base.2546", [7 x i8] }
%"class.WTF::ListHashSet.base.2546" = type <{ %"class.WTF::HashTable.2541", %"class.blink::Member.2543", %"class.blink::Member.2543", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2541" = type <{ %"class.blink::Member.2543"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2543" = type { %"class.blink::MemberBase.2544" }
%"class.blink::MemberBase.2544" = type { %"class.blink::HeapListHashSetNode.2545"* }
%"class.blink::HeapListHashSetNode.2545" = type { %"class.blink::Member.2668", %"class.blink::Member.2543", %"class.blink::Member.2543" }
%"class.blink::Member.2668" = type { %"class.blink::MemberBase.2669" }
%"class.blink::MemberBase.2669" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2547" = type { %"class.WTF::ListHashSet.base.2557", [7 x i8] }
%"class.WTF::ListHashSet.base.2557" = type <{ %"class.WTF::HashTable.2552", %"class.blink::Member.2554", %"class.blink::Member.2554", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2552" = type <{ %"class.blink::Member.2554"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2554" = type { %"class.blink::MemberBase.2555" }
%"class.blink::MemberBase.2555" = type { %"class.blink::HeapListHashSetNode.2556"* }
%"class.blink::HeapListHashSetNode.2556" = type { %"class.blink::Member.2664", %"class.blink::Member.2554", %"class.blink::Member.2554" }
%"class.blink::Member.2664" = type { %"class.blink::MemberBase.2665" }
%"class.blink::MemberBase.2665" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2558" = type { %"class.WTF::ListHashSet.base.2568", [7 x i8] }
%"class.WTF::ListHashSet.base.2568" = type <{ %"class.WTF::HashTable.2563", %"class.blink::Member.2565", %"class.blink::Member.2565", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2563" = type <{ %"class.blink::Member.2565"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2565" = type { %"class.blink::MemberBase.2566" }
%"class.blink::MemberBase.2566" = type { %"class.blink::HeapListHashSetNode.2567"* }
%"class.blink::HeapListHashSetNode.2567" = type { %"class.blink::Member.2589", %"class.blink::Member.2565", %"class.blink::Member.2565" }
%"class.blink::HeapListHashSet.2569" = type { %"class.WTF::ListHashSet.base.2579", [7 x i8] }
%"class.WTF::ListHashSet.base.2579" = type <{ %"class.WTF::HashTable.2574", %"class.blink::Member.2576", %"class.blink::Member.2576", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2574" = type <{ %"class.blink::Member.2576"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2576" = type { %"class.blink::MemberBase.2577" }
%"class.blink::MemberBase.2577" = type { %"class.blink::HeapListHashSetNode.2578"* }
%"class.blink::HeapListHashSetNode.2578" = type { %"class.blink::Member.2581", %"class.blink::Member.2576", %"class.blink::Member.2576" }
%class.scoped_refptr.2580 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2581" = type { %"class.blink::MemberBase.2582" }
%"class.blink::MemberBase.2582" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2583" = type { %"class.blink::MemberBase.2584" }
%"class.blink::MemberBase.2584" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.2585" = type { %"class.blink::MemberBase.2586" }
%"class.blink::MemberBase.2586" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2587" = type { %"class.blink::MemberBase.2588" }
%"class.blink::MemberBase.2588" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2589" = type { %"class.blink::MemberBase.2590" }
%"class.blink::MemberBase.2590" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2593" = type { %"class.blink::MemberBase.2594" }
%"class.blink::MemberBase.2594" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2595" = type { %"class.blink::MemberBase.2596" }
%"class.blink::MemberBase.2596" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2597" }
%"class.blink::Member.2597" = type { %"class.blink::MemberBase.2598" }
%"class.blink::MemberBase.2598" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.3161" }
%"class.mojo::Remote.3161" = type { %"class.mojo::internal::InterfacePtrState.3162" }
%"class.mojo::internal::InterfacePtrState.3162" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3163" }
%"class.std::__1::unique_ptr.3163" = type { %"class.std::__1::__compressed_pair.3164" }
%"class.std::__1::__compressed_pair.3164" = type { %"struct.std::__1::__compressed_pair_elem.3165" }
%"struct.std::__1::__compressed_pair_elem.3165" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2599" = type { %"class.std::__1::__compressed_pair.2600" }
%"class.std::__1::__compressed_pair.2600" = type { %"struct.std::__1::__compressed_pair_elem.2601" }
%"struct.std::__1::__compressed_pair_elem.2601" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2605" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2606" = type { %"class.std::__1::__compressed_pair.2607" }
%"class.std::__1::__compressed_pair.2607" = type { %"struct.std::__1::__compressed_pair_elem.2608" }
%"struct.std::__1::__compressed_pair_elem.2608" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.2278" = type { %"class.absl::optional_internal::optional_data.2279" }
%"class.absl::optional_internal::optional_data.2279" = type { %"class.absl::optional_internal::optional_data_base.2280" }
%"class.absl::optional_internal::optional_data_base.2280" = type { %"class.absl::optional_internal::optional_data_dtor_base.2281" }
%"class.absl::optional_internal::optional_data_dtor_base.2281" = type { i8, %union.anon.2282 }
%union.anon.2282 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2612" = type { %"class.std::__1::__compressed_pair.2613" }
%"class.std::__1::__compressed_pair.2613" = type { %"struct.std::__1::__compressed_pair_elem.2614" }
%"struct.std::__1::__compressed_pair_elem.2614" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2618" }
%"class.blink::Member.2618" = type { %"class.blink::MemberBase.2619" }
%"class.blink::MemberBase.2619" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3171" }
%"class.mojo::AssociatedRemote.3171" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3172" }
%"class.mojo::internal::AssociatedInterfacePtrState.3172" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3173" }
%"class.std::__1::unique_ptr.3173" = type { %"class.std::__1::__compressed_pair.3174" }
%"class.std::__1::__compressed_pair.3174" = type { %"struct.std::__1::__compressed_pair_elem.3175" }
%"struct.std::__1::__compressed_pair_elem.3175" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2620" = type { %"class.blink::Member.2621" }
%"class.blink::Member.2621" = type { %"class.blink::MemberBase.2622" }
%"class.blink::MemberBase.2622" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3181" }
%"class.mojo::AssociatedRemote.3181" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3182" }
%"class.mojo::internal::AssociatedInterfacePtrState.3182" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3183" }
%"class.std::__1::unique_ptr.3183" = type { %"class.std::__1::__compressed_pair.3184" }
%"class.std::__1::__compressed_pair.3184" = type { %"struct.std::__1::__compressed_pair_elem.3185" }
%"struct.std::__1::__compressed_pair_elem.3185" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2623" }
%"class.blink::Member.2623" = type { %"class.blink::MemberBase.2624" }
%"class.blink::MemberBase.2624" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3191", %"class.blink::Member.1861", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3191" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.3192" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1659" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.3192" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2625" = type { %"class.blink::Member.2626" }
%"class.blink::Member.2626" = type { %"class.blink::MemberBase.2627" }
%"class.blink::MemberBase.2627" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3195", %"class.blink::Member.1861", %"class.mojo::AssociatedReceiver.3196" }
%"class.blink::ThreadState::PrefinalizerRegistration.3195" = type { i8 }
%"class.mojo::AssociatedReceiver.3196" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.3197" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.3197" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2628" }
%"class.blink::Member.2628" = type { %"class.blink::MemberBase.2629" }
%"class.blink::MemberBase.2629" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3200", %"class.blink::Member.1861", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3200" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.2159, %"class.std::__1::unique_ptr.1659", %"class.base::WeakPtrFactory.3201" }
%"class.base::WeakPtrFactory.3201" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2630" = type { %"class.blink::Member.2631" }
%"class.blink::Member.2631" = type { %"class.blink::MemberBase.2632" }
%"class.blink::MemberBase.2632" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3204", %"class.blink::Member.1861", %"class.mojo::AssociatedReceiver.3205" }
%"class.blink::ThreadState::PrefinalizerRegistration.3204" = type { i8 }
%"class.mojo::AssociatedReceiver.3205" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3206" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3206" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2633" = type { %"class.blink::MemberBase.2634" }
%"class.blink::MemberBase.2634" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2635" = type { %"class.blink::MemberBase.2636" }
%"class.blink::MemberBase.2636" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2637" = type { %"class.blink::MemberBase.2638" }
%"class.blink::MemberBase.2638" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2639" = type { %"class.blink::MemberBase.2640" }
%"class.blink::MemberBase.2640" = type { %"class.blink::HeapHashMap.2641"* }
%"class.blink::HeapHashMap.2641" = type opaque
%"class.mojo::StructPtr.2642" = type { %"class.std::__1::unique_ptr.2643" }
%"class.std::__1::unique_ptr.2643" = type { %"class.std::__1::__compressed_pair.2644" }
%"class.std::__1::__compressed_pair.2644" = type { %"struct.std::__1::__compressed_pair_elem.2645" }
%"struct.std::__1::__compressed_pair_elem.2645" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2646", %"class.mojo::InlinedStructPtr.2647" }
%"class.mojo::InlinedStructPtr.2646" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2647" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2651" = type { %"class.blink::MemberBase.2652" }
%"class.blink::MemberBase.2652" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.absl::optional.2653" = type { %"class.absl::optional_internal::optional_data.2654" }
%"class.absl::optional_internal::optional_data.2654" = type { %"class.absl::optional_internal::optional_data_base.2655" }
%"class.absl::optional_internal::optional_data_base.2655" = type { %"class.absl::optional_internal::optional_data_dtor_base.2656" }
%"class.absl::optional_internal::optional_data_dtor_base.2656" = type { i8, %union.anon.2657 }
%union.anon.2657 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1863" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1864", { i64, i64 } }
%"class.blink::WeakMember.1864" = type { %"class.blink::MemberBase.1865" }
%"class.absl::optional.1866" = type { %"class.absl::optional_internal::optional_data.1867" }
%"class.absl::optional_internal::optional_data.1867" = type { %"class.absl::optional_internal::optional_data_base.1868" }
%"class.absl::optional_internal::optional_data_base.1868" = type { %"class.absl::optional_internal::optional_data_dtor_base.1869" }
%"class.absl::optional_internal::optional_data_dtor_base.1869" = type { i8, %union.anon.1870 }
%union.anon.1870 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1871" = type { %"class.blink::MemberBase.1872" }
%"class.blink::MemberBase.1872" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1873" = type { %"class.blink::MemberBase.1874" }
%"class.blink::MemberBase.1874" = type { %"class.blink::HeapHashSet.1875"* }
%"class.blink::HeapHashSet.1875" = type opaque
%"class.std::__1::unique_ptr.1876" = type { %"class.std::__1::__compressed_pair.1877" }
%"class.std::__1::__compressed_pair.1877" = type { %"struct.std::__1::__compressed_pair_elem.1878" }
%"struct.std::__1::__compressed_pair_elem.1878" = type { %"class.WTF::HashSet.1879"* }
%"class.WTF::HashSet.1879" = type { %"class.WTF::HashTable.1880" }
%"class.WTF::HashTable.1880" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1886" = type { %"class.blink::MemberBase.1887" }
%"class.blink::MemberBase.1887" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1888" = type { %"class.WTF::HashSet.1891" }
%"class.WTF::HashSet.1891" = type { %"class.WTF::HashTable.1892" }
%"class.WTF::HashTable.1892" = type <{ %"class.blink::Member.1894"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1894" = type opaque
%"class.blink::HeapHashSet.1895" = type { %"class.WTF::HashSet.1898" }
%"class.WTF::HashSet.1898" = type { %"class.WTF::HashTable.1899" }
%"class.WTF::HashTable.1899" = type <{ %"class.blink::Member.1901"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1903" = type { %"class.std::__1::__compressed_pair.1904" }
%"class.std::__1::__compressed_pair.1904" = type { %"struct.std::__1::__compressed_pair_elem.1905" }
%"struct.std::__1::__compressed_pair_elem.1905" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1909" = type { %"class.blink::MemberBase.1910" }
%"class.blink::MemberBase.1910" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1913", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1913" = type { %"class.WTF::HashTable.1914" }
%"class.WTF::HashTable.1914" = type <{ %"struct.WTF::KeyValuePair.1916"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1916" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1917", i32, i32 }
%"class.WTF::Vector.1917" = type { %"class.WTF::VectorBuffer.1918" }
%"class.WTF::VectorBuffer.1918" = type { %"class.WTF::VectorBufferBase.1919" }
%"class.WTF::VectorBufferBase.1919" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1921" = type { %"class.WTF::LinkedHashSet.1924" }
%"class.WTF::LinkedHashSet.1924" = type { %"class.WTF::HashMap.1925", %"class.WTF::VectorBackedLinkedList.1929" }
%"class.WTF::HashMap.1925" = type { %"class.WTF::HashTable.1926" }
%"class.WTF::HashTable.1926" = type <{ %"struct.WTF::KeyValuePair.1928"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1928" = type opaque
%"class.WTF::VectorBackedLinkedList.1929" = type { %"class.WTF::Vector.1930", i32, i32 }
%"class.WTF::Vector.1930" = type { %"class.WTF::VectorBuffer.1931" }
%"class.WTF::VectorBuffer.1931" = type { %"class.WTF::VectorBufferBase.1932" }
%"class.WTF::VectorBufferBase.1932" = type { %"class.WTF::VectorBackedLinkedListNode.1933"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1933" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1935" = type { %"class.std::__1::__compressed_pair.1936" }
%"class.std::__1::__compressed_pair.1936" = type { %"struct.std::__1::__compressed_pair_elem.1937" }
%"struct.std::__1::__compressed_pair_elem.1937" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1941" = type { %"class.std::__1::__compressed_pair.1942" }
%"class.std::__1::__compressed_pair.1942" = type { %"struct.std::__1::__compressed_pair_elem.1943" }
%"struct.std::__1::__compressed_pair_elem.1943" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1944, %class.scoped_refptr.1944, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1999", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2004", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1944 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1945", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1952" }
%"class.WTF::RefCounted.1945" = type { %"class.base::RefCounted.1946" }
%"class.base::RefCounted.1946" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1947", i32, [4 x i8] }>
%"class.WTF::Vector.1947" = type { %"class.WTF::VectorBuffer.1948" }
%"class.WTF::VectorBuffer.1948" = type { %"class.WTF::VectorBufferBase.1949" }
%"class.WTF::VectorBufferBase.1949" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1952" = type { %"class.WTF::VectorBuffer.1953" }
%"class.WTF::VectorBuffer.1953" = type { %"class.WTF::VectorBufferBase.1954" }
%"class.WTF::VectorBufferBase.1954" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1955", %"class.std::__1::unique_ptr.1971", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1955" = type { %"class.std::__1::__compressed_pair.1956" }
%"class.std::__1::__compressed_pair.1956" = type { %"struct.std::__1::__compressed_pair_elem.1957" }
%"struct.std::__1::__compressed_pair_elem.1957" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1958", %"class.WTF::Vector.1963", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1958" = type { %"class.WTF::VectorBuffer.1959" }
%"class.WTF::VectorBuffer.1959" = type { %"class.WTF::VectorBufferBase.1960" }
%"class.WTF::VectorBufferBase.1960" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.std::__1::unique_ptr.1971" = type { %"class.std::__1::__compressed_pair.1972" }
%"class.std::__1::__compressed_pair.1972" = type { %"struct.std::__1::__compressed_pair_elem.1973" }
%"struct.std::__1::__compressed_pair_elem.1973" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1974", %"class.absl::optional.1974" }
%"class.absl::optional.1974" = type { %"class.absl::optional_internal::optional_data.1975" }
%"class.absl::optional_internal::optional_data.1975" = type { %"class.absl::optional_internal::optional_data_base.1976" }
%"class.absl::optional_internal::optional_data_base.1976" = type { %"class.absl::optional_internal::optional_data_dtor_base.1977" }
%"class.absl::optional_internal::optional_data_dtor_base.1977" = type { i8, [3 x i8], %union.anon.1978 }
%union.anon.1978 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1952"*, %"class.absl::optional.1984", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1984" = type { %"class.absl::optional_internal::optional_data.1985" }
%"class.absl::optional_internal::optional_data.1985" = type { %"class.absl::optional_internal::optional_data_base.1986" }
%"class.absl::optional_internal::optional_data_base.1986" = type { %"class.absl::optional_internal::optional_data_dtor_base.1987" }
%"class.absl::optional_internal::optional_data_dtor_base.1987" = type { i8, %union.anon.1988 }
%union.anon.1988 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1989", %"class.WTF::Vector.1994" }
%"class.WTF::Vector.1989" = type { %"class.WTF::VectorBuffer.1990" }
%"class.WTF::VectorBuffer.1990" = type { %"class.WTF::VectorBufferBase.1991", [128 x i8] }
%"class.WTF::Vector.1994" = type { %"class.WTF::VectorBuffer.1995" }
%"class.WTF::VectorBuffer.1995" = type { %"class.WTF::VectorBufferBase.1996", [128 x i8] }
%"class.WTF::VectorBufferBase.1996" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1999" = type { %"class.WTF::VectorBuffer.2000" }
%"class.WTF::VectorBuffer.2000" = type { %"class.WTF::VectorBufferBase.2001" }
%"class.WTF::VectorBufferBase.2001" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2004" = type { %"class.WTF::HashTable.2005" }
%"class.WTF::HashTable.2005" = type <{ %"struct.WTF::KeyValuePair.2008"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2008" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2009", %"class.WTF::Vector.2014" }
%"class.WTF::HashMap.2009" = type { %"class.WTF::HashTable.2010" }
%"class.WTF::HashTable.2010" = type <{ %"struct.WTF::KeyValuePair.2013"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2013" = type opaque
%"class.WTF::Vector.2014" = type { %"class.WTF::VectorBuffer.2015" }
%"class.WTF::VectorBuffer.2015" = type { %"class.WTF::VectorBufferBase.2016" }
%"class.WTF::VectorBufferBase.2016" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2022" = type { %"class.std::__1::__compressed_pair.2023" }
%"class.std::__1::__compressed_pair.2023" = type { %"struct.std::__1::__compressed_pair_elem.2024" }
%"struct.std::__1::__compressed_pair_elem.2024" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2028" = type { %"class.WTF::VectorBuffer.2029" }
%"class.WTF::VectorBuffer.2029" = type { %"class.WTF::VectorBufferBase.2030" }
%"class.WTF::VectorBufferBase.2030" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2033 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2034" = type { %"class.blink::MemberBase.2035" }
%"class.blink::MemberBase.2035" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2036" = type { %"class.blink::MemberBase.2037" }
%"class.blink::MemberBase.2037" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2038" = type { %"class.blink::MemberBase.2039" }
%"class.blink::MemberBase.2039" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2040" = type { %"class.WTF::HashSet.2043" }
%"class.WTF::HashSet.2043" = type { %"class.WTF::HashTable.2044" }
%"class.WTF::HashTable.2044" = type <{ %"class.blink::WeakMember.2046"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2046" = type opaque
%"class.blink::HeapHashSet.2047" = type { %"class.WTF::HashSet.2050" }
%"class.WTF::HashSet.2050" = type { %"class.WTF::HashTable.2051" }
%"class.WTF::HashTable.2051" = type <{ %"class.blink::WeakMember.2053"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2053" = type opaque
%"class.std::__1::unique_ptr.2054" = type { %"class.std::__1::__compressed_pair.2055" }
%"class.std::__1::__compressed_pair.2055" = type { %"struct.std::__1::__compressed_pair_elem.2056" }
%"struct.std::__1::__compressed_pair_elem.2056" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2057" }
%"class.base::time_internal::TimeBase.2057" = type { i64 }
%"class.std::__1::unique_ptr.2061" = type { %"class.std::__1::__compressed_pair.2062" }
%"class.std::__1::__compressed_pair.2062" = type { %"struct.std::__1::__compressed_pair_elem.2063" }
%"struct.std::__1::__compressed_pair_elem.2063" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2064", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2064" = type { %"class.absl::optional_internal::optional_data.2065" }
%"class.absl::optional_internal::optional_data.2065" = type { %"class.absl::optional_internal::optional_data_base.2066" }
%"class.absl::optional_internal::optional_data_base.2066" = type { %"class.absl::optional_internal::optional_data_dtor_base.2067" }
%"class.absl::optional_internal::optional_data_dtor_base.2067" = type { i8, %union.anon.2068 }
%union.anon.2068 = type { %"class.base::Time" }
%"class.blink::LayoutState" = type { i8, %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutState"*, %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::AtomicString", %"class.blink::LayoutObject"* }
%"class.blink::LayoutFlowThread" = type opaque
%"class.std::__1::unique_ptr.2072" = type { %"class.std::__1::__compressed_pair.2073" }
%"class.std::__1::__compressed_pair.2073" = type { %"struct.std::__1::__compressed_pair_elem.2074" }
%"struct.std::__1::__compressed_pair_elem.2074" = type { %"class.blink::ViewFragmentationContext"* }
%"class.blink::ViewFragmentationContext" = type opaque
%"class.std::__1::unique_ptr.2078" = type { %"class.std::__1::__compressed_pair.2079" }
%"class.std::__1::__compressed_pair.2079" = type { %"struct.std::__1::__compressed_pair_elem.2080" }
%"struct.std::__1::__compressed_pair_elem.2080" = type { %"class.blink::NamedPagesMapper"* }
%"class.blink::NamedPagesMapper" = type opaque
%"class.std::__1::unique_ptr.2084" = type { %"class.std::__1::__compressed_pair.2085" }
%"class.std::__1::__compressed_pair.2085" = type { %"struct.std::__1::__compressed_pair_elem.2086" }
%"struct.std::__1::__compressed_pair_elem.2086" = type { %"class.blink::PaintLayerCompositor"* }
%"class.blink::PaintLayerCompositor" = type opaque
%class.scoped_refptr.1848 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.blink::LayoutQuote" = type opaque
%"class.blink::Persistent.2090" = type { %"class.blink::PersistentBase.2091" }
%"class.blink::PersistentBase.2091" = type { %"class.blink::HitTestCache"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HitTestCache" = type { i32, %"class.blink::HeapVector.2094", i64 }
%"class.blink::HeapVector.2094" = type { %"class.WTF::Vector.2097" }
%"class.WTF::Vector.2097" = type { %"class.WTF::VectorBuffer.2098" }
%"class.WTF::VectorBuffer.2098" = type { %"class.WTF::VectorBufferBase.2099", [368 x i8] }
%"class.WTF::VectorBufferBase.2099" = type { %"struct.blink::HitTestCacheEntry"*, i32, i32 }
%"struct.blink::HitTestCacheEntry" = type { %"class.blink::HitTestLocation", %"class.blink::HitTestResult" }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.1901", i8, %"class.blink::Member.2100", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.2100" = type { %"class.blink::MemberBase.2101" }
%"class.blink::MemberBase.2101" = type { %"class.blink::HeapLinkedHashSet.2102"* }
%"class.blink::HeapLinkedHashSet.2102" = type { %"class.WTF::LinkedHashSet.3036" }
%"class.WTF::LinkedHashSet.3036" = type { %"class.WTF::HashMap.3037", %"class.WTF::VectorBackedLinkedList.3041" }
%"class.WTF::HashMap.3037" = type { %"class.WTF::HashTable.3038" }
%"class.WTF::HashTable.3038" = type <{ %"struct.WTF::KeyValuePair.3040"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3040" = type <{ %"class.blink::Member.318", i32, [4 x i8] }>
%"class.WTF::VectorBackedLinkedList.3041" = type { %"class.WTF::Vector.3042", i32, i32 }
%"class.WTF::Vector.3042" = type { %"class.WTF::VectorBuffer.3043" }
%"class.WTF::VectorBuffer.3043" = type { %"class.WTF::VectorBufferBase.3044" }
%"class.WTF::VectorBufferBase.3044" = type { %"class.WTF::VectorBackedLinkedListNode.3045"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.3045" = type { i32, i32, %"class.blink::Member.318" }
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type <{ %"class.blink::Member.1457", %"class.blink::Member.1457", i32, i8, [3 x i8] }>
%"class.blink::Member.1457" = type { %"class.blink::MemberBase.1458" }
%"class.blink::MemberBase.1458" = type { %"class.blink::IntersectionObserver"* }
%"class.blink::IntersectionObserver" = type opaque
%"class.WTF::Vector.1459" = type { %"class.WTF::VectorBuffer.1460" }
%"class.WTF::VectorBuffer.1460" = type { %"class.WTF::VectorBufferBase.1461" }
%"class.WTF::VectorBufferBase.1461" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1464" = type { %"class.WTF::HashMap.1467" }
%"class.WTF::HashMap.1467" = type { %"class.WTF::HashTable.1468" }
%"class.WTF::HashTable.1468" = type <{ %"struct.WTF::KeyValuePair.1470"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1470" = type opaque
%"class.blink::Member.1471" = type { %"class.blink::MemberBase.1472" }
%"class.blink::MemberBase.1472" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1473" = type { %"class.std::__1::__compressed_pair.1474" }
%"class.std::__1::__compressed_pair.1474" = type { %"struct.std::__1::__compressed_pair_elem.1475" }
%"struct.std::__1::__compressed_pair_elem.1475" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1479" = type { %"class.blink::MemberBase.1480" }
%"class.blink::MemberBase.1480" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1481" = type { %"class.blink::MemberBase.1482" }
%"class.blink::MemberBase.1482" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1483" = type { %"class.WTF::HashMap.1486" }
%"class.WTF::HashMap.1486" = type { %"class.WTF::HashTable.1487" }
%"class.WTF::HashTable.1487" = type <{ %"struct.WTF::KeyValuePair.1489"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1489" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1490" }
%"class.blink::HeapHashSet.1490" = type { %"class.WTF::HashSet.1493" }
%"class.WTF::HashSet.1493" = type { %"class.WTF::HashTable.1494" }
%"class.WTF::HashTable.1494" = type <{ %"class.blink::WeakMember.1496"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1496" = type opaque
%"class.blink::Member.1497" = type { %"class.blink::MemberBase.1498" }
%"class.blink::MemberBase.1498" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1499" = type { %"class.blink::MemberBase.1500" }
%"class.blink::MemberBase.1500" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1506", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1513", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1506" = type { %"class.WTF::HashSet.1509" }
%"class.WTF::HashSet.1509" = type { %"class.WTF::HashTable.1510" }
%"class.WTF::HashTable.1510" = type <{ %"class.blink::Member.1512"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1512" = type opaque
%"class.blink::HeapTaskRunnerTimer.1513" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1514", { i64, i64 } }
%"class.blink::WeakMember.1514" = type { %"class.blink::MemberBase.1500" }
%"class.blink::WeakMember.1501" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.1502" = type { %"class.blink::MemberBase.1503" }
%"class.blink::MemberBase.1503" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::HTMLAreaElement" = type <{ %"class.blink::HTMLAnchorElement", %"class.std::__1::unique_ptr.666", %"class.WTF::Vector.567", i32, [4 x i8] }>
%"class.blink::HTMLAnchorElement" = type { %"class.blink::HTMLElement", %"class.blink::DOMURLUtils.base", i32, i64, %"class.blink::Member.3047" }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::DOMURLUtils.base" = type <{ %"class.blink::DOMURLUtilsReadOnly", i8 }>
%"class.blink::DOMURLUtilsReadOnly" = type { i32 (...)** }
%"class.blink::Member.3047" = type { %"class.blink::MemberBase.3048" }
%"class.blink::MemberBase.3048" = type { %"class.blink::RelList"* }
%"class.blink::RelList" = type { %"class.blink::DOMTokenList.base", [7 x i8] }
%"class.blink::DOMTokenList.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::SpaceSplitString", %"class.blink::Member.343", %"class.blink::QualifiedName", i8 }>
%"class.blink::HTMLImageElement" = type { %"class.blink::HTMLElement", %"class.blink::ImageElementBase", %"class.blink::ActiveScriptWrappable", %"class.blink::FormAssociated", %"class.blink::Member.3049", %"class.blink::Member.3105", %"class.blink::Member.3107", %"class.WTF::AtomicString", float, %"class.blink::Member.3109", i8, i8, i32, %"class.std::__1::unique_ptr.3111" }
%"class.blink::ImageElementBase" = type { %"class.blink::CanvasImageSource", %"class.blink::ImageBitmapSource", i32, i32 }
%"class.blink::CanvasImageSource" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::Member.3049" = type { %"class.blink::MemberBase.3050" }
%"class.blink::MemberBase.3050" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type { %"class.blink::ImageLoader" }
%"class.blink::ImageLoader" = type { %"class.blink::ImageResourceObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3053", %"class.blink::Member.343", %"class.blink::Member.3054", %"class.blink::Member.3054", %"class.WTF::String", i32, %"class.WTF::AtomicString", %"class.base::WeakPtr.3090", %"class.std::__1::unique_ptr.3091", %"class.std::__1::unique_ptr.3091", %"class.blink::TaskHandle", %"class.blink::TaskHandle", i8, i32, %"class.blink::HeapVector.3097" }
%"class.blink::ThreadState::PrefinalizerRegistration.3053" = type { i8 }
%"class.blink::Member.3054" = type { %"class.blink::MemberBase.3055" }
%"class.blink::MemberBase.3055" = type { %"class.blink::ImageResourceContent"* }
%"class.blink::ImageResourceContent" = type { %"class.blink::ImageObserver", i8, i8, i8, i32, %"class.blink::Member.3058", float, i8, %class.scoped_refptr.3060, %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.3058" = type { %"class.blink::MemberBase.3059" }
%"class.blink::MemberBase.3059" = type { %"class.blink::ImageResourceInfo"* }
%"class.blink::ImageResourceInfo" = type { %"class.blink::GarbageCollectedMixin" }
%class.scoped_refptr.3060 = type { %"class.blink::Image"* }
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.3061", i8, %class.scoped_refptr.3063, %"class.blink::WeakPersistent.3077", i32, i8, %"class.std::__1::unique_ptr.3079" }
%"class.WTF::ThreadSafeRefCounted.3061" = type { %"class.base::RefCountedThreadSafe.3062" }
%"class.base::RefCountedThreadSafe.3062" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.3063 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.3064", i64, %"class.WTF::Vector.3066", %"class.WTF::Vector.3071" }
%"class.WTF::RefCounted.3064" = type { %"class.base::RefCounted.3065" }
%"class.base::RefCounted.3065" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3066" = type { %"class.WTF::VectorBuffer.3067" }
%"class.WTF::VectorBuffer.3067" = type { %"class.WTF::VectorBufferBase.3068" }
%"class.WTF::VectorBufferBase.3068" = type { i8*, i32, i32 }
%"class.WTF::Vector.3071" = type { %"class.WTF::VectorBuffer.3072" }
%"class.WTF::VectorBuffer.3072" = type { %"class.WTF::VectorBufferBase.3073" }
%"class.WTF::VectorBufferBase.3073" = type { %"class.std::__1::unique_ptr.3074"*, i32, i32 }
%"class.std::__1::unique_ptr.3074" = type opaque
%"class.blink::WeakPersistent.3077" = type { %"class.blink::PersistentBase.3078" }
%"class.blink::PersistentBase.3078" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.std::__1::unique_ptr.3079" = type { %"class.std::__1::__compressed_pair.3080" }
%"class.std::__1::__compressed_pair.3080" = type { %"struct.std::__1::__compressed_pair_elem.3081" }
%"struct.std::__1::__compressed_pair_elem.3081" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.3085" }
%"class.WTF::HashMap.3085" = type { %"class.WTF::HashTable.3086" }
%"class.WTF::HashTable.3086" = type <{ %"struct.WTF::KeyValuePair.3089"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3089" = type <{ %"class.blink::ImageResourceObserver"*, i32, [4 x i8] }>
%"class.base::WeakPtr.3090" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.3091" = type { %"class.std::__1::__compressed_pair.3092" }
%"class.std::__1::__compressed_pair.3092" = type { %"struct.std::__1::__compressed_pair_elem.3093" }
%"struct.std::__1::__compressed_pair_elem.3093" = type { %"class.blink::IncrementLoadEventDelayCount"* }
%"class.blink::IncrementLoadEventDelayCount" = type opaque
%"class.blink::HeapVector.3097" = type { %"class.WTF::Vector.3100" }
%"class.WTF::Vector.3100" = type { %"class.WTF::VectorBuffer.3101" }
%"class.WTF::VectorBuffer.3101" = type { %"class.WTF::VectorBufferBase.3102" }
%"class.WTF::VectorBufferBase.3102" = type { %"class.blink::Member.3103"*, i32, i32 }
%"class.blink::Member.3103" = type opaque
%"class.blink::Member.3105" = type { %"class.blink::MemberBase.3106" }
%"class.blink::MemberBase.3106" = type { %"class.blink::HTMLImageElement::ViewportChangeListener"* }
%"class.blink::HTMLImageElement::ViewportChangeListener" = type opaque
%"class.blink::Member.3107" = type { %"class.blink::MemberBase.3108" }
%"class.blink::MemberBase.3108" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.3109" = type { %"class.blink::MemberBase.3110" }
%"class.blink::MemberBase.3110" = type { %"class.blink::HTMLSourceElement"* }
%"class.blink::HTMLSourceElement" = type opaque
%"class.std::__1::unique_ptr.3111" = type { %"class.std::__1::__compressed_pair.3112" }
%"class.std::__1::__compressed_pair.3112" = type { %"struct.std::__1::__compressed_pair_elem.3113" }
%"struct.std::__1::__compressed_pair_elem.3113" = type { %"struct.blink::LazyLoadImageObserver::VisibleLoadTimeMetrics"* }
%"struct.blink::LazyLoadImageObserver::VisibleLoadTimeMetrics" = type { i8, i8, %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.3244", %"class.blink::Member.3246", %"class.blink::Member.3248", %"class.blink::Member.3267", %"class.blink::Member.3269" }
%"class.blink::Member.3244" = type { %"class.blink::MemberBase.3245" }
%"class.blink::MemberBase.3245" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.3246" = type { %"class.blink::MemberBase.3247" }
%"class.blink::MemberBase.3247" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.3248" = type { %"class.blink::MemberBase.3249" }
%"class.blink::MemberBase.3249" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.3252", %"class.blink::HeapHashSet.3261" }
%"class.blink::HeapVector.3252" = type { %"class.WTF::Vector.3255" }
%"class.WTF::Vector.3255" = type { %"class.WTF::VectorBuffer.3256" }
%"class.WTF::VectorBuffer.3256" = type { %"class.WTF::VectorBufferBase.3257" }
%"class.WTF::VectorBufferBase.3257" = type { %"class.blink::Member.3258"*, i32, i32 }
%"class.blink::Member.3258" = type { %"class.blink::MemberBase.3259" }
%"class.blink::MemberBase.3259" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.3261" = type { %"class.WTF::HashSet.3264" }
%"class.WTF::HashSet.3264" = type { %"class.WTF::HashTable.3265" }
%"class.WTF::HashTable.3265" = type <{ %"class.blink::Member.3258"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3267" = type { %"class.blink::MemberBase.3268" }
%"class.blink::MemberBase.3268" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.3269" = type { %"class.blink::MemberBase.3270" }
%"class.blink::MemberBase.3270" = type { %"class.blink::HeapHashSet.3271"* }
%"class.blink::HeapHashSet.3271" = type opaque
%"class.WTF::Vector.3117" = type { %"class.WTF::VectorBuffer.3118" }
%"class.WTF::VectorBuffer.3118" = type { %"class.WTF::VectorBufferBase.3119" }
%"class.WTF::VectorBufferBase.3119" = type { %"class.blink::FloatQuad"*, i32, i32 }
%"class.blink::HTMLFrameOwnerElement" = type <{ %"class.blink::HTMLElement", %"class.blink::FrameOwner", %"class.blink::Member.2121", %"class.blink::Member.3122", %"struct.blink::FramePolicy", %"class.blink::Member.3138", i8, i8, [6 x i8] }>
%"class.blink::Member.3122" = type { %"class.blink::MemberBase.3123" }
%"class.blink::MemberBase.3123" = type { %"class.blink::EmbeddedContentView"* }
%"class.blink::EmbeddedContentView" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8, [5 x i8] }>
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.3124", %"class.base::flat_map", i8, [7 x i8] }>
%"class.std::__1::vector.3124" = type { %"class.std::__1::__vector_base.3125" }
%"class.std::__1::__vector_base.3125" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.3133" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.3126", i8, i8, [6 x i8] }>
%"class.std::__1::vector.3126" = type { %"class.std::__1::__vector_base.3127" }
%"class.std::__1::__vector_base.3127" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.3128" }
%"class.std::__1::__compressed_pair.3128" = type { %"struct.std::__1::__compressed_pair_elem.3129" }
%"struct.std::__1::__compressed_pair_elem.3129" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.3133" = type { %"struct.std::__1::__compressed_pair_elem.3134" }
%"struct.std::__1::__compressed_pair_elem.3134" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.3138" = type { %"class.blink::MemberBase.3139" }
%"class.blink::MemberBase.3139" = type { %"class.blink::LazyLoadFrameObserver"* }
%"class.blink::LazyLoadFrameObserver" = type opaque
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink12PhysicalRect13ContractEdgesENS_10LayoutUnitES1_S1_S1_ = comdat any

$_ZN5blink20FirstVisibleFragmentINSt3__116reverse_iteratorIPNS_9FloatQuadEEEEENS_12PhysicalRectERKS6_T_S9_ = comdat any

$_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj = comdat any

@__const._ZN5blink12IsUnobscuredERKNS_14FocusCandidateE.location = private unnamed_addr constant %"class.blink::HitTestLocation" <{ %"struct.blink::PhysicalOffset" { %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 } }, %"struct.blink::PhysicalRect" { %"struct.blink::PhysicalOffset" { %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 } }, %"struct.blink::PhysicalSize" { %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 } } }, %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.blink::FloatQuad" { %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA" }>, align 4
@_ZN5blink10html_names8kAreaTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1

@_ZN5blink14FocusCandidateC1EPNS_4NodeENS_26SpatialNavigationDirectionE = hidden unnamed_addr alias void (%"struct.blink::FocusCandidate"*, %"class.blink::Node"*, i32), void (%"struct.blink::FocusCandidate"*, %"class.blink::Node"*, i32)* @_ZN5blink14FocusCandidateC2EPNS_4NodeENS_26SpatialNavigationDirectionE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FocusCandidateC2EPNS_4NodeENS_26SpatialNavigationDirectionE(%"struct.blink::FocusCandidate"* nocapture, %"class.blink::Node"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.blink::FocusCandidate", %"struct.blink::FocusCandidate"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"struct.blink::FocusCandidate", %"struct.blink::FocusCandidate"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.blink::FocusCandidate", %"struct.blink::FocusCandidate"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.blink::FocusCandidate", %"struct.blink::FocusCandidate"* %0, i64 0, i32 3
  %8 = bitcast %"struct.blink::FocusCandidate"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false)
  store i8 1, i8* %7, align 8
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 48
  %12 = icmp ne i32 %11, 0
  %13 = icmp eq %"class.blink::Node"* %1, null
  %14 = or i1 %13, %12
  br i1 %14, label %57, label %15

15:                                               ; preds = %3
  %16 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kAreaTagE, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 2
  %20 = bitcast %"class.blink::Member.318"* %19 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %21 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %23, %25
  %27 = bitcast %"class.blink::Node"* %1 to %"class.blink::HTMLAreaElement"*
  br i1 %26, label %28, label %57

28:                                               ; preds = %15
  %29 = tail call %"class.blink::HTMLImageElement"* @_ZNK5blink15HTMLAreaElement12ImageElementEv(%"class.blink::HTMLAreaElement"* nonnull %27) #10
  %30 = icmp eq %"class.blink::HTMLImageElement"* %29, null
  br i1 %30, label %107, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %29, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %36, label %42, label %38

38:                                               ; preds = %31
  %39 = bitcast %"class.blink::NodeData"** %37 to %"class.blink::NodeRareData"**
  %40 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %40, i64 0, i32 1, i32 0, i32 0
  br label %44

42:                                               ; preds = %31
  %43 = bitcast %"class.blink::NodeData"** %37 to %"class.blink::NodeRenderingData"**
  br label %44

44:                                               ; preds = %38, %42
  %45 = phi %"class.blink::NodeRenderingData"** [ %41, %38 ], [ %43, %42 ]
  %46 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %46, i64 0, i32 1
  %48 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %47, align 8
  %49 = icmp eq %"class.blink::LayoutObject"* %48, null
  br i1 %49, label %107, label %50

50:                                               ; preds = %44
  store %"class.blink::Node"* %32, %"class.blink::Node"** %4, align 8
  %51 = tail call { i64, i64 } @_ZN5blink23StartEdgeForAreaElementERKNS_15HTMLAreaElementENS_26SpatialNavigationDirectionE(%"class.blink::HTMLAreaElement"* nonnull dereferenceable(168) %27, i32 %2)
  %52 = extractvalue { i64, i64 } %51, 0
  %53 = extractvalue { i64, i64 } %51, 1
  %54 = bitcast %"struct.blink::PhysicalRect"* %6 to i64*
  store i64 %52, i64* %54, align 8
  %55 = getelementptr inbounds %"struct.blink::FocusCandidate", %"struct.blink::FocusCandidate"* %0, i64 0, i32 2, i32 1
  %56 = bitcast %"struct.blink::PhysicalSize"* %55 to i64*
  store i64 %53, i64* %56, align 8
  br label %97

57:                                               ; preds = %15, %3
  %58 = and i32 %10, 1
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 6, i32 0, i32 0
  br i1 %59, label %65, label %61

61:                                               ; preds = %57
  %62 = bitcast %"class.blink::NodeData"** %60 to %"class.blink::NodeRareData"**
  %63 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %63, i64 0, i32 1, i32 0, i32 0
  br label %67

65:                                               ; preds = %57
  %66 = bitcast %"class.blink::NodeData"** %60 to %"class.blink::NodeRenderingData"**
  br label %67

67:                                               ; preds = %61, %65
  %68 = phi %"class.blink::NodeRenderingData"** [ %64, %61 ], [ %66, %65 ]
  %69 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %69, i64 0, i32 1
  %71 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %70, align 8
  %72 = icmp eq %"class.blink::LayoutObject"* %71, null
  br i1 %72, label %107, label %73

73:                                               ; preds = %67
  store %"class.blink::Node"* %1, %"class.blink::Node"** %4, align 8
  %74 = tail call { i64, i64 } @_ZN5blink19NodeRectInRootFrameEPKNS_4NodeE(%"class.blink::Node"* %1)
  %75 = extractvalue { i64, i64 } %74, 0
  %76 = extractvalue { i64, i64 } %74, 1
  %77 = bitcast %"struct.blink::PhysicalRect"* %6 to i64*
  store i64 %75, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.blink::FocusCandidate", %"struct.blink::FocusCandidate"* %0, i64 0, i32 2, i32 1
  %79 = bitcast %"struct.blink::PhysicalSize"* %78 to i64*
  store i64 %76, i64* %79, align 8
  %80 = load i32, i32* %9, align 8
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %87, label %83

83:                                               ; preds = %73
  %84 = bitcast %"class.blink::NodeData"** %60 to %"class.blink::NodeRareData"**
  %85 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %85, i64 0, i32 1, i32 0, i32 0
  br label %89

87:                                               ; preds = %73
  %88 = bitcast %"class.blink::NodeData"** %60 to %"class.blink::NodeRenderingData"**
  br label %89

89:                                               ; preds = %83, %87
  %90 = phi %"class.blink::NodeRenderingData"** [ %86, %83 ], [ %88, %87 ]
  %91 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %91, i64 0, i32 1
  %93 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %92, align 8
  %94 = tail call { i64, i64 } @_ZN5blink24ShrinkInlineBoxToLineBoxERKNS_12LayoutObjectENS_12PhysicalRectEi(%"class.blink::LayoutObject"* dereferenceable(88) %93, i64 %75, i64 %76, i32 -1)
  %95 = extractvalue { i64, i64 } %94, 0
  %96 = extractvalue { i64, i64 } %94, 1
  store i64 %95, i64* %77, align 8
  store i64 %96, i64* %79, align 8
  br label %97

97:                                               ; preds = %50, %89
  store %"class.blink::Node"* %1, %"class.blink::Node"** %5, align 8
  %98 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %99 = tail call { <2 x float>, <2 x float> } @_ZN5blink14RectInViewportERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %98) #10
  %100 = extractvalue { <2 x float>, <2 x float> } %99, 1
  %101 = extractelement <2 x float> %100, i32 0
  %102 = fcmp ole float %101, 0.000000e+00
  %103 = extractelement <2 x float> %100, i32 1
  %104 = fcmp ole float %103, 0.000000e+00
  %105 = or i1 %104, %102
  %106 = zext i1 %105 to i8
  store i8 %106, i8* %7, align 8
  br label %107

107:                                              ; preds = %28, %44, %67, %97
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::HTMLImageElement"* @_ZNK5blink15HTMLAreaElement12ImageElementEv(%"class.blink::HTMLAreaElement"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5blink23StartEdgeForAreaElementERKNS_15HTMLAreaElementENS_26SpatialNavigationDirectionE(%"class.blink::HTMLAreaElement"* dereferenceable(168), i32) local_unnamed_addr #0 {
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"struct.blink::PhysicalRect"*
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"struct.blink::PhysicalRect"*
  %7 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.blink::HTMLAreaElement", %"class.blink::HTMLAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %9, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::Document"*, %"class.blink::Document"** %10, align 8
  %12 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %11) #10
  %13 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %12, i64 0, i32 11, i32 0, i32 0
  %14 = load %"class.blink::LocalFrameView"*, %"class.blink::LocalFrameView"** %13, align 8
  %15 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #10
  %16 = tail call %"class.blink::HTMLImageElement"* @_ZNK5blink15HTMLAreaElement12ImageElementEv(%"class.blink::HTMLAreaElement"* %0) #10
  %17 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %20, label %26, label %22

22:                                               ; preds = %2
  %23 = bitcast %"class.blink::NodeData"** %21 to %"class.blink::NodeRareData"**
  %24 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %24, i64 0, i32 1, i32 0, i32 0
  br label %28

26:                                               ; preds = %2
  %27 = bitcast %"class.blink::NodeData"** %21 to %"class.blink::NodeRenderingData"**
  br label %28

28:                                               ; preds = %22, %26
  %29 = phi %"class.blink::NodeRenderingData"** [ %25, %22 ], [ %27, %26 ]
  %30 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %30, i64 0, i32 1
  %32 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %31, align 8
  %33 = tail call { i64, i64 } @_ZNK5blink15HTMLAreaElement19ComputeAbsoluteRectEPKNS_12LayoutObjectE(%"class.blink::HTMLAreaElement"* %0, %"class.blink::LayoutObject"* %32) #10
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %35 = extractvalue { i64, i64 } %33, 0
  store i64 %35, i64* %34, align 8
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %37 = extractvalue { i64, i64 } %33, 1
  store i64 %37, i64* %36, align 8
  %38 = call { i64, i64 } @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_12PhysicalRectE(%"class.blink::LocalFrameView"* %14, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %6) #10
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %40 = extractvalue { i64, i64 } %38, 0
  store i64 %40, i64* %39, align 8
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %42 = extractvalue { i64, i64 } %38, 1
  store i64 %42, i64* %41, align 8
  %43 = call { i64, i64 } @_ZN5blink12OppositeEdgeENS_26SpatialNavigationDirectionERKNS_12PhysicalRectENS_10LayoutUnitE(i32 %1, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %4, i32 128)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  ret { i64, i64 } %43
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5blink19NodeRectInRootFrameEPKNS_4NodeE(%"class.blink::Node"* nocapture readonly) local_unnamed_addr #0 {
  %2 = alloca { i64, i64 }, align 8
  %3 = bitcast { i64, i64 }* %2 to %"struct.blink::PhysicalRect"*
  %4 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %7, label %13, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRareData"**
  %11 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %11, i64 0, i32 1, i32 0, i32 0
  br label %15

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRenderingData"**
  br label %15

15:                                               ; preds = %9, %13
  %16 = phi %"class.blink::NodeRenderingData"** [ %12, %9 ], [ %14, %13 ]
  %17 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %17, i64 0, i32 1
  %19 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %18, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %21 = bitcast %"class.blink::LayoutObject"* %19 to { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)***
  %22 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false)
  %23 = load { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)**, { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)*** %21, align 8
  %24 = getelementptr inbounds { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)*, { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)** %23, i64 68
  %25 = load { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)*, { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)** %24, align 8
  %26 = tail call { <2 x float>, <2 x float> } %25(%"class.blink::LayoutObject"* %19) #10
  %27 = extractvalue { <2 x float>, <2 x float> } %26, 0
  %28 = extractvalue { <2 x float>, <2 x float> } %26, 1
  %29 = extractelement <2 x float> %27, i32 0
  %30 = fmul float %29, 6.400000e+01
  %31 = tail call float @llvm.floor.f32(float %30) #10
  %32 = fcmp ult float %31, 0xC1E0000000000000
  %33 = fcmp ugt float %31, 0x41DFFFFFE0000000
  %34 = fcmp ogt float %31, 0xC1E0000000000000
  %35 = select i1 %34, float %31, float 0xC1E0000000000000
  %36 = fptosi float %35 to i32
  %37 = select i1 %32, i32 0, i32 2147483647
  %38 = select i1 %33, i32 %37, i32 %36
  %39 = extractelement <2 x float> %27, i32 1
  %40 = fmul float %39, 6.400000e+01
  %41 = tail call float @llvm.floor.f32(float %40) #10
  %42 = fcmp ult float %41, 0xC1E0000000000000
  %43 = fcmp ugt float %41, 0x41DFFFFFE0000000
  %44 = fcmp ogt float %41, 0xC1E0000000000000
  %45 = select i1 %44, float %41, float 0xC1E0000000000000
  %46 = fptosi float %45 to i32
  %47 = select i1 %42, i32 0, i32 2147483647
  %48 = select i1 %43, i32 %47, i32 %46
  %49 = extractelement <2 x float> %28, i32 0
  %50 = fadd float %29, %49
  %51 = fmul float %50, 6.400000e+01
  %52 = tail call float @llvm.ceil.f32(float %51) #10
  %53 = fcmp ult float %52, 0xC1E0000000000000
  %54 = fcmp ugt float %52, 0x41DFFFFFE0000000
  %55 = fcmp ogt float %52, 0xC1E0000000000000
  %56 = select i1 %55, float %52, float 0xC1E0000000000000
  %57 = fptosi float %56 to i32
  %58 = select i1 %53, i32 0, i32 2147483647
  %59 = select i1 %54, i32 %58, i32 %57
  %60 = icmp sgt i32 %38, -1
  %61 = select i1 %60, i32 -2147483648, i32 2147483647
  %62 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %59, i32 %38) #10
  %63 = extractvalue { i32, i1 } %62, 1
  %64 = extractvalue { i32, i1 } %62, 0
  %65 = select i1 %63, i32 %61, i32 %64, !prof !2
  %66 = extractelement <2 x float> %28, i32 1
  %67 = fadd float %39, %66
  %68 = fmul float %67, 6.400000e+01
  %69 = tail call float @llvm.ceil.f32(float %68) #10
  %70 = fcmp ult float %69, 0xC1E0000000000000
  %71 = fcmp ugt float %69, 0x41DFFFFFE0000000
  %72 = fcmp ogt float %69, 0xC1E0000000000000
  %73 = select i1 %72, float %69, float 0xC1E0000000000000
  %74 = fptosi float %73 to i32
  %75 = select i1 %70, i32 0, i32 2147483647
  %76 = select i1 %71, i32 %75, i32 %74
  %77 = icmp sgt i32 %48, -1
  %78 = select i1 %77, i32 -2147483648, i32 2147483647
  %79 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %76, i32 %48) #10
  %80 = extractvalue { i32, i1 } %79, 1
  %81 = extractvalue { i32, i1 } %79, 0
  %82 = select i1 %80, i32 %78, i32 %81, !prof !2
  %83 = zext i32 %48 to i64
  %84 = shl nuw i64 %83, 32
  %85 = zext i32 %38 to i64
  %86 = or i64 %84, %85
  %87 = zext i32 %82 to i64
  %88 = shl nuw i64 %87, 32
  %89 = zext i32 %65 to i64
  %90 = or i64 %88, %89
  %91 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  store i64 %86, i64* %91, align 8
  store i64 %90, i64* %20, align 8
  %92 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %19, i64 0, i32 5, i32 0
  %93 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %93, i64 0, i32 0, i32 7, i32 0, i32 0
  %95 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %95, i64 0, i32 27
  %97 = load i16, i16* %96, align 8
  %98 = icmp ult i16 %97, 8192
  br i1 %98, label %102, label %99

99:                                               ; preds = %15
  %100 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %95, i64 0, i32 26, i32 0
  %101 = load i32, i32* %100, align 4
  br label %102

102:                                              ; preds = %15, %99
  %103 = phi i32 [ %101, %99 ], [ 0, %15 ]
  %104 = and i16 %97, 3584
  %105 = icmp eq i16 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %95, i64 0, i32 25, i32 0
  %108 = load i32, i32* %107, align 4
  br label %109

109:                                              ; preds = %102, %106
  %110 = phi i32 [ %108, %106 ], [ 0, %102 ]
  %111 = and i16 %97, 14
  %112 = icmp eq i16 %111, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %95, i64 0, i32 23, i32 0
  %115 = load i32, i32* %114, align 4
  br label %116

116:                                              ; preds = %109, %113
  %117 = phi i32 [ %115, %113 ], [ 0, %109 ]
  %118 = and i16 %97, 224
  %119 = icmp eq i16 %118, 0
  br i1 %119, label %123, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %95, i64 0, i32 24, i32 0
  %122 = load i32, i32* %121, align 4
  br label %123

123:                                              ; preds = %116, %120
  %124 = phi i32 [ %122, %120 ], [ 0, %116 ]
  call void @_ZN5blink12PhysicalRect13ContractEdgesENS_10LayoutUnitES1_S1_S1_(%"struct.blink::PhysicalRect"* nonnull %3, i32 %103, i32 %110, i32 %117, i32 %124)
  %125 = call zeroext i1 @_ZNK5blink12LayoutObject30MapToVisualRectInAncestorSpaceEPKNS_20LayoutBoxModelObjectERNS_12PhysicalRectENS_15VisualRectFlagsE(%"class.blink::LayoutObject"* %19, %"class.blink::LayoutBoxModelObject"* null, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %3, i32 0) #10
  %126 = load i64, i64* %91, align 8
  %127 = insertvalue { i64, i64 } undef, i64 %126, 0
  %128 = load i64, i64* %20, align 8
  %129 = insertvalue { i64, i64 } %127, i64 %128, 1
  ret { i64, i64 } %129
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5blink24ShrinkInlineBoxToLineBoxERKNS_12LayoutObjectENS_12PhysicalRectEi(%"class.blink::LayoutObject"* dereferenceable(88), i64, i64, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.WTF::Vector.3117", align 8
  %6 = trunc i64 %2 to i32
  %7 = lshr i64 %2, 32
  %8 = trunc i64 %7 to i32
  %9 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %10 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %9 to i96*
  %11 = load i96, i96* %10, align 4
  %12 = and i96 %11, 134217728
  %13 = icmp eq i96 %12, 0
  br i1 %13, label %174, label %14

14:                                               ; preds = %4
  %15 = bitcast %"class.blink::LayoutObject"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %16 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %16, i64 92
  %18 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::LayoutObject"* %0, i32 39) #10
  br i1 %19, label %174, label %20

20:                                               ; preds = %14
  %21 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %15, align 8
  %22 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %21, i64 92
  %23 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.blink::LayoutObject"* %0, i32 1) #10
  br i1 %24, label %174, label %25

25:                                               ; preds = %20
  %26 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %15, align 8
  %27 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %26, i64 92
  %28 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.blink::LayoutObject"* %0, i32 23) #10
  br i1 %29, label %174, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 5, i32 0
  %32 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %31, align 8
  %33 = tail call i32 @_ZNK5blink13ComputedStyle25ComputedLineHeightAsFixedEv(%"class.blink::ComputedStyle"* %32) #10
  %34 = load i96, i96* %10, align 4
  %35 = trunc i96 %34 to i32
  %36 = icmp slt i32 %35, 0
  %37 = select i1 %36, i32 %8, i32 %6
  %38 = icmp slt i32 %33, %37
  br i1 %38, label %39, label %174

39:                                               ; preds = %30
  %40 = bitcast %"class.blink::LayoutObject"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %41 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %40, align 8
  %42 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %41, i64 26
  %43 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %42, align 8
  %44 = tail call zeroext i1 %43(%"class.blink::LayoutObject"* %0) #10
  br i1 %44, label %45, label %87

45:                                               ; preds = %39
  %46 = bitcast %"class.blink::LayoutObject"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %47 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %46, align 8
  %48 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %47, i64 13
  %49 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %48, align 8
  %50 = tail call %"class.blink::LayoutObjectChildList"* %49(%"class.blink::LayoutObject"* %0) #10
  %51 = icmp eq %"class.blink::LayoutObjectChildList"* %50, null
  br i1 %51, label %87, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %50, i64 0, i32 0
  %54 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %53, align 8
  %55 = icmp eq %"class.blink::LayoutObject"* %54, null
  br i1 %55, label %87, label %56

56:                                               ; preds = %52, %82
  %57 = phi i32 [ %83, %82 ], [ 0, %52 ]
  %58 = phi %"class.blink::LayoutObject"* [ %85, %82 ], [ %54, %52 ]
  %59 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %58, i64 0, i32 4
  %60 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %59 to i96*
  %61 = load i96, i96* %60, align 4
  %62 = and i96 %61, 113336795588871485128704
  %63 = icmp ne i96 %62, 75557863725914323419136
  %64 = and i96 %61, 1073741824
  %65 = icmp ne i96 %64, 0
  %66 = and i1 %63, %65
  br i1 %66, label %67, label %82

67:                                               ; preds = %56
  %68 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %58, i64 0, i32 5, i32 0
  %69 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %69, i64 0, i32 0, i32 9
  %71 = bitcast [20 x i8]* %70 to i160*
  %72 = load i160, i160* %71, align 8
  %73 = and i160 %72, 15211807202738752817960438464512
  %74 = icmp eq i160 %73, 0
  %75 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %58, i64 1, i32 4, i32 0, i64 8
  %76 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %58, i64 1, i32 4, i32 0, i64 4
  %77 = select i1 %74, i8* %75, i8* %76
  %78 = bitcast i8* %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = icmp slt i32 %79, %57
  %81 = select i1 %80, i32 %57, i32 %79
  br label %82

82:                                               ; preds = %67, %56
  %83 = phi i32 [ %57, %56 ], [ %81, %67 ]
  %84 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %58, i64 0, i32 9
  %85 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %84, align 8
  %86 = icmp eq %"class.blink::LayoutObject"* %85, null
  br i1 %86, label %87, label %56

87:                                               ; preds = %82, %39, %45, %52
  %88 = phi i32 [ 0, %52 ], [ 0, %39 ], [ 0, %45 ], [ %83, %82 ]
  %89 = icmp slt i32 %88, %33
  %90 = select i1 %89, i32 %33, i32 %88
  %91 = icmp slt i32 %90, %37
  br i1 %91, label %92, label %174

92:                                               ; preds = %87
  %93 = icmp eq i32 %3, -1
  br i1 %93, label %94, label %139

94:                                               ; preds = %92
  %95 = load i96, i96* %10, align 4
  %96 = and i96 %95, 1207959552
  %97 = icmp eq i96 %96, 134217728
  br i1 %97, label %98, label %146

98:                                               ; preds = %94
  %99 = bitcast %"class.WTF::Vector.3117"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %99) #10
  %100 = getelementptr inbounds %"class.WTF::Vector.3117", %"class.WTF::Vector.3117"* %5, i64 0, i32 0, i32 0, i32 0
  %101 = getelementptr inbounds %"class.WTF::Vector.3117", %"class.WTF::Vector.3117"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %99, i8 0, i64 16, i1 false) #10
  %102 = bitcast %"class.blink::LayoutObject"* %0 to void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)***
  %103 = load void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)**, void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)*** %102, align 8
  %104 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)*, void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)** %103, i64 67
  %105 = load void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)*, void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)** %104, align 8
  call void %105(%"class.blink::LayoutObject"* %0, %"class.WTF::Vector.3117"* nonnull dereferenceable(16) %5, i32 0) #10
  %106 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %100, align 8
  %107 = load i32, i32* %101, align 4
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %106, i64 %108
  %110 = icmp eq i32 %107, 0
  br i1 %110, label %128, label %113

111:                                              ; preds = %113
  %112 = icmp eq %"class.blink::FloatQuad"* %122, %109
  br i1 %112, label %123, label %113

113:                                              ; preds = %98, %111
  %114 = phi %"class.blink::FloatQuad"* [ %122, %111 ], [ %106, %98 ]
  %115 = call { <2 x float>, <2 x float> } @_ZNK5blink9FloatQuad11BoundingBoxEv(%"class.blink::FloatQuad"* %114) #10
  %116 = extractvalue { <2 x float>, <2 x float> } %115, 1
  %117 = extractelement <2 x float> %116, i32 0
  %118 = fcmp ugt float %117, 0.000000e+00
  %119 = extractelement <2 x float> %116, i32 1
  %120 = fcmp ugt float %119, 0.000000e+00
  %121 = and i1 %118, %120
  %122 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %114, i64 1
  br i1 %121, label %111, label %125

123:                                              ; preds = %111
  %124 = load i32, i32* %101, align 4
  br label %125

125:                                              ; preds = %113, %123
  %126 = phi i32 [ %124, %123 ], [ 1, %113 ]
  %127 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %100, align 8
  br label %128

128:                                              ; preds = %125, %98
  %129 = phi %"class.blink::FloatQuad"* [ %127, %125 ], [ %106, %98 ]
  %130 = phi i32 [ %126, %125 ], [ 0, %98 ]
  %131 = icmp eq %"class.blink::FloatQuad"* %129, null
  %132 = bitcast %"class.blink::FloatQuad"* %129 to i8*
  br i1 %131, label %138, label %133, !prof !3

133:                                              ; preds = %128
  %134 = load i32, i32* %101, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %137, label %136, !prof !2

136:                                              ; preds = %133
  store i32 0, i32* %101, align 4
  br label %137

137:                                              ; preds = %136, %133
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %132) #10
  store %"class.blink::FloatQuad"* null, %"class.blink::FloatQuad"** %100, align 8
  br label %138

138:                                              ; preds = %137, %128
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %99) #10
  br label %139

139:                                              ; preds = %138, %92
  %140 = phi i32 [ %3, %92 ], [ %130, %138 ]
  %141 = icmp sgt i32 %140, 33554431
  br i1 %141, label %146, label %142

142:                                              ; preds = %139
  %143 = icmp slt i32 %140, -33554432
  %144 = shl i32 %140, 6
  %145 = select i1 %143, i32 -2147483648, i32 %144
  br label %146

146:                                              ; preds = %142, %94, %139
  %147 = phi i32 [ 2147483647, %139 ], [ 64, %94 ], [ %145, %142 ]
  %148 = sext i32 %90 to i64
  %149 = sext i32 %147 to i64
  %150 = mul nsw i64 %149, %148
  %151 = sdiv i64 %150, 64
  %152 = ashr i64 %151, 32
  %153 = trunc i64 %152 to i32
  %154 = trunc i64 %151 to i32
  %155 = ashr i32 %154, 31
  %156 = icmp eq i32 %155, %153
  br i1 %156, label %161, label %157

157:                                              ; preds = %146
  %158 = xor i32 %147, %90
  %159 = lshr i32 %158, 31
  %160 = add nuw i32 %159, 2147483647
  br label %161

161:                                              ; preds = %146, %157
  %162 = phi i32 [ %154, %146 ], [ %160, %157 ]
  %163 = icmp slt i32 %162, %37
  br i1 %163, label %164, label %174

164:                                              ; preds = %161
  %165 = load i96, i96* %10, align 4
  %166 = trunc i96 %165 to i32
  %167 = icmp slt i32 %166, 0
  %168 = select i1 %167, i32 %6, i32 %162
  %169 = select i1 %167, i32 %162, i32 %8
  %170 = zext i32 %169 to i64
  %171 = shl nuw i64 %170, 32
  %172 = zext i32 %168 to i64
  %173 = or i64 %171, %172
  br label %174

174:                                              ; preds = %164, %30, %87, %161, %14, %25, %20, %4
  %175 = phi i64 [ %2, %4 ], [ %2, %20 ], [ %2, %25 ], [ %2, %14 ], [ %173, %164 ], [ %2, %30 ], [ %2, %87 ], [ %2, %161 ]
  %176 = insertvalue { i64, i64 } undef, i64 %1, 0
  %177 = insertvalue { i64, i64 } %176, i64 %175, 1
  ret { i64, i64 } %177
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11IsOffscreenEPKNS_4NodeE(%"class.blink::Node"* nocapture readonly) local_unnamed_addr #0 {
  %2 = tail call { <2 x float>, <2 x float> } @_ZN5blink14RectInViewportERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %0)
  %3 = extractvalue { <2 x float>, <2 x float> } %2, 1
  %4 = extractelement <2 x float> %3, i32 0
  %5 = fcmp ole float %4, 0.000000e+00
  %6 = extractelement <2 x float> %3, i32 1
  %7 = fcmp ole float %6, 0.000000e+00
  %8 = or i1 %7, %5
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink26IsSpatialNavigationEnabledEPKNS_10LocalFrameE(%"class.blink::LocalFrame"*) local_unnamed_addr #0 {
  %2 = icmp eq %"class.blink::LocalFrame"* %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %0, i64 0, i32 0
  %5 = tail call %"class.blink::Settings"* @_ZNK5blink5Frame11GetSettingsEv(%"class.blink::Frame"* %4) #10
  %6 = icmp eq %"class.blink::Settings"* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Settings"* @_ZNK5blink5Frame11GetSettingsEv(%"class.blink::Frame"* %4) #10
  %9 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %8, i64 0, i32 71
  %10 = bitcast [14 x i8]* %9 to i112*
  %11 = load i112, i112* %10, align 8
  %12 = and i112 %11, 9671406556917033397649408
  %13 = icmp ne i112 %12, 0
  br label %14

14:                                               ; preds = %3, %1, %7
  %15 = phi i1 [ false, %3 ], [ false, %1 ], [ %13, %7 ]
  ret i1 %15
}

declare %"class.blink::Settings"* @_ZNK5blink5Frame11GetSettingsEv(%"class.blink::Frame"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink9LineBoxesERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #0 {
  %2 = alloca %"class.WTF::Vector.3117", align 8
  %3 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 1207959552
  %7 = icmp eq i96 %6, 134217728
  br i1 %7, label %8, label %49

8:                                                ; preds = %1
  %9 = bitcast %"class.WTF::Vector.3117"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.WTF::Vector.3117", %"class.WTF::Vector.3117"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector.3117", %"class.WTF::Vector.3117"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #10
  %12 = bitcast %"class.blink::LayoutObject"* %0 to void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)***
  %13 = load void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)**, void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)*, void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)** %13, i64 67
  %15 = load void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)*, void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)** %14, align 8
  call void %15(%"class.blink::LayoutObject"* %0, %"class.WTF::Vector.3117"* nonnull dereferenceable(16) %2, i32 0) #10
  %16 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %10, align 8
  %17 = load i32, i32* %11, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %16, i64 %18
  %20 = icmp eq i32 %17, 0
  br i1 %20, label %38, label %23

21:                                               ; preds = %23
  %22 = icmp eq %"class.blink::FloatQuad"* %32, %19
  br i1 %22, label %33, label %23

23:                                               ; preds = %8, %21
  %24 = phi %"class.blink::FloatQuad"* [ %32, %21 ], [ %16, %8 ]
  %25 = call { <2 x float>, <2 x float> } @_ZNK5blink9FloatQuad11BoundingBoxEv(%"class.blink::FloatQuad"* %24) #10
  %26 = extractvalue { <2 x float>, <2 x float> } %25, 1
  %27 = extractelement <2 x float> %26, i32 0
  %28 = fcmp ugt float %27, 0.000000e+00
  %29 = extractelement <2 x float> %26, i32 1
  %30 = fcmp ugt float %29, 0.000000e+00
  %31 = and i1 %28, %30
  %32 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %24, i64 1
  br i1 %31, label %21, label %35

33:                                               ; preds = %21
  %34 = load i32, i32* %11, align 4
  br label %35

35:                                               ; preds = %23, %33
  %36 = phi i32 [ %34, %33 ], [ 1, %23 ]
  %37 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %10, align 8
  br label %38

38:                                               ; preds = %35, %8
  %39 = phi %"class.blink::FloatQuad"* [ %37, %35 ], [ %16, %8 ]
  %40 = phi i32 [ %36, %35 ], [ 0, %8 ]
  %41 = icmp eq %"class.blink::FloatQuad"* %39, null
  %42 = bitcast %"class.blink::FloatQuad"* %39 to i8*
  br i1 %41, label %48, label %43, !prof !3

43:                                               ; preds = %38
  %44 = load i32, i32* %11, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %47, label %46, !prof !2

46:                                               ; preds = %43
  store i32 0, i32* %11, align 4
  br label %47

47:                                               ; preds = %46, %43
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %42) #10
  store %"class.blink::FloatQuad"* null, %"class.blink::FloatQuad"** %10, align 8
  br label %48

48:                                               ; preds = %38, %47
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  br label %49

49:                                               ; preds = %1, %48
  %50 = phi i32 [ %40, %48 ], [ 1, %1 ]
  ret i32 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink18IsFragmentedInlineERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #0 {
  %2 = alloca %"class.WTF::Vector.3117", align 8
  %3 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 1207959552
  %7 = icmp eq i96 %6, 134217728
  br i1 %7, label %8, label %49

8:                                                ; preds = %1
  %9 = bitcast %"class.WTF::Vector.3117"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.WTF::Vector.3117", %"class.WTF::Vector.3117"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector.3117", %"class.WTF::Vector.3117"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #10
  %12 = bitcast %"class.blink::LayoutObject"* %0 to void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)***
  %13 = load void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)**, void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)*, void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)** %13, i64 67
  %15 = load void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)*, void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)** %14, align 8
  call void %15(%"class.blink::LayoutObject"* %0, %"class.WTF::Vector.3117"* nonnull dereferenceable(16) %2, i32 0) #10
  %16 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %10, align 8
  %17 = load i32, i32* %11, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %16, i64 %18
  %20 = icmp eq i32 %17, 0
  br i1 %20, label %38, label %23

21:                                               ; preds = %23
  %22 = icmp eq %"class.blink::FloatQuad"* %32, %19
  br i1 %22, label %33, label %23

23:                                               ; preds = %8, %21
  %24 = phi %"class.blink::FloatQuad"* [ %32, %21 ], [ %16, %8 ]
  %25 = call { <2 x float>, <2 x float> } @_ZNK5blink9FloatQuad11BoundingBoxEv(%"class.blink::FloatQuad"* %24) #10
  %26 = extractvalue { <2 x float>, <2 x float> } %25, 1
  %27 = extractelement <2 x float> %26, i32 0
  %28 = fcmp ugt float %27, 0.000000e+00
  %29 = extractelement <2 x float> %26, i32 1
  %30 = fcmp ugt float %29, 0.000000e+00
  %31 = and i1 %28, %30
  %32 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %24, i64 1
  br i1 %31, label %21, label %35

33:                                               ; preds = %21
  %34 = load i32, i32* %11, align 4
  br label %35

35:                                               ; preds = %23, %33
  %36 = phi i32 [ %34, %33 ], [ 1, %23 ]
  %37 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %10, align 8
  br label %38

38:                                               ; preds = %35, %8
  %39 = phi %"class.blink::FloatQuad"* [ %37, %35 ], [ %16, %8 ]
  %40 = phi i32 [ %36, %35 ], [ 0, %8 ]
  %41 = icmp eq %"class.blink::FloatQuad"* %39, null
  %42 = bitcast %"class.blink::FloatQuad"* %39 to i8*
  br i1 %41, label %48, label %43, !prof !3

43:                                               ; preds = %38
  %44 = load i32, i32* %11, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %47, label %46, !prof !2

46:                                               ; preds = %43
  store i32 0, i32* %11, align 4
  br label %47

47:                                               ; preds = %46, %43
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %42) #10
  store %"class.blink::FloatQuad"* null, %"class.blink::FloatQuad"** %10, align 8
  br label %48

48:                                               ; preds = %47, %38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  br label %49

49:                                               ; preds = %1, %48
  %50 = phi i32 [ %40, %48 ], [ 1, %1 ]
  %51 = icmp sgt i32 %50, 1
  ret i1 %51
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN5blink14RectInViewportERKNS_4NodeE(%"class.blink::Node"* nocapture readonly dereferenceable(64)) local_unnamed_addr #0 {
  %2 = alloca { <2 x float>, <2 x float> }, align 8
  %3 = bitcast { <2 x float>, <2 x float> }* %2 to %"class.blink::FloatRect"*
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %4 to %"class.blink::FloatRect"*
  %6 = alloca %"class.blink::FloatRect", align 4
  %7 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  %11 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %10) #10
  %12 = icmp eq %"class.blink::LocalFrameView"* %11, null
  br i1 %12, label %93, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  %19 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRareData"**
  %20 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %20, i64 0, i32 1, i32 0, i32 0
  %22 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRenderingData"**
  %23 = select i1 %17, %"class.blink::NodeRenderingData"** %22, %"class.blink::NodeRenderingData"** %21
  %24 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %24, i64 0, i32 1
  %26 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %25, align 8
  %27 = icmp eq %"class.blink::LayoutObject"* %26, null
  br i1 %27, label %93, label %28

28:                                               ; preds = %13
  %29 = tail call { i64, i64 } @_ZN5blink19NodeRectInRootFrameEPKNS_4NodeE(%"class.blink::Node"* %0)
  %30 = extractvalue { i64, i64 } %29, 0
  %31 = trunc i64 %30 to i32
  %32 = lshr i64 %30, 32
  %33 = trunc i64 %32 to i32
  %34 = extractvalue { i64, i64 } %29, 1
  %35 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %26, i64 0, i32 6, i32 0, i32 0
  %36 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  %37 = icmp eq %"class.blink::Node"* %36, null
  br i1 %37, label %38, label %45

38:                                               ; preds = %28, %38
  %39 = phi %"class.blink::LayoutObject"* [ %41, %38 ], [ %26, %28 ]
  %40 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %39, i64 0, i32 7
  %41 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %41, i64 0, i32 6, i32 0, i32 0
  %43 = load %"class.blink::Node"*, %"class.blink::Node"** %42, align 8
  %44 = icmp eq %"class.blink::Node"* %43, null
  br i1 %44, label %38, label %45

45:                                               ; preds = %38, %28
  %46 = phi %"class.blink::Node"* [ %36, %28 ], [ %43, %38 ]
  %47 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %46, i64 0, i32 3, i32 0, i32 0
  %48 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %48, i64 0, i32 2, i32 0, i32 0
  %50 = load %"class.blink::Document"*, %"class.blink::Document"** %49, align 8
  %51 = tail call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %50) #10
  %52 = tail call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %51) #10
  %53 = bitcast { <2 x float>, <2 x float> }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #10
  %54 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #10
  %55 = sitofp i32 %31 to float
  %56 = fmul float %55, 1.562500e-02
  %57 = sitofp i32 %33 to float
  %58 = fmul float %57, 1.562500e-02
  %59 = trunc i64 %34 to i32
  %60 = sitofp i32 %59 to float
  %61 = fmul float %60, 1.562500e-02
  %62 = lshr i64 %34, 32
  %63 = trunc i64 %62 to i32
  %64 = sitofp i32 %63 to float
  %65 = fmul float %64, 1.562500e-02
  %66 = insertelement <2 x float> undef, float %56, i32 0
  %67 = insertelement <2 x float> %66, float %58, i32 1
  %68 = insertelement <2 x float> undef, float %61, i32 0
  %69 = insertelement <2 x float> %68, float %65, i32 1
  %70 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> %67, <2 x float>* %70, align 8
  %71 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %69, <2 x float>* %71, align 8
  %72 = call { <2 x float>, <2 x float> } @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_9FloatRectE(%"class.blink::VisualViewport"* %52, %"class.blink::FloatRect"* nonnull dereferenceable(16) %5) #10
  %73 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 0
  %74 = extractvalue { <2 x float>, <2 x float> } %72, 0
  store <2 x float> %74, <2 x float>* %73, align 8
  %75 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1
  %76 = extractvalue { <2 x float>, <2 x float> } %72, 1
  store <2 x float> %76, <2 x float>* %75, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #10
  %77 = bitcast %"class.blink::FloatRect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #10
  %78 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %6, i64 0, i32 0, i32 1
  %79 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %6, i64 0, i32 1, i32 0
  %80 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %6, i64 0, i32 1, i32 1
  %81 = getelementptr inbounds %"class.blink::VisualViewport", %"class.blink::VisualViewport"* %52, i64 0, i32 17
  %82 = bitcast %"class.blink::IntSize"* %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = trunc i64 %83 to i32
  %85 = lshr i64 %83, 32
  %86 = trunc i64 %85 to i32
  %87 = sitofp i32 %84 to float
  %88 = sitofp i32 %86 to float
  %89 = bitcast %"class.blink::FloatRect"* %6 to i32*
  store i32 0, i32* %89, align 4
  %90 = bitcast float* %78 to i32*
  store i32 0, i32* %90, align 4
  store float %87, float* %79, align 4
  store float %88, float* %80, align 4
  call void @_ZN5blink9FloatRect9IntersectERKS0_(%"class.blink::FloatRect"* nonnull %3, %"class.blink::FloatRect"* nonnull dereferenceable(16) %6) #10
  %91 = load <2 x float>, <2 x float>* %73, align 8
  %92 = load <2 x float>, <2 x float>* %75, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #10
  br label %93

93:                                               ; preds = %13, %1, %45
  %94 = phi <2 x float> [ %91, %45 ], [ zeroinitializer, %1 ], [ zeroinitializer, %13 ]
  %95 = phi <2 x float> [ %92, %45 ], [ zeroinitializer, %1 ], [ zeroinitializer, %13 ]
  %96 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %94, 0
  %97 = insertvalue { <2 x float>, <2 x float> } %96, <2 x float> %95, 1
  ret { <2 x float>, <2 x float> } %97
}

declare %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"*) local_unnamed_addr #2

declare dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"*) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_9FloatRectE(%"class.blink::VisualViewport"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink9FloatRect9IntersectERKS0_(%"class.blink::FloatRect"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ScrollableArea"* @_ZN5blink17ScrollableAreaForEPKNS_4NodeE(%"class.blink::Node"* readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %5, i64 0, i32 0, i32 0
  %7 = icmp eq %"class.blink::Node"* %6, %0
  br i1 %7, label %8, label %13

8:                                                ; preds = %1
  %9 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %5) #10
  %10 = icmp eq %"class.blink::LocalFrameView"* %9, null
  br i1 %10, label %41, label %11

11:                                               ; preds = %8
  %12 = tail call %"class.blink::ScrollableArea"* @_ZN5blink14LocalFrameView17GetScrollableAreaEv(%"class.blink::LocalFrameView"* nonnull %9) #10
  br label %41

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %17, label %23, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRareData"**
  %21 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %21, i64 0, i32 1, i32 0, i32 0
  br label %25

23:                                               ; preds = %13
  %24 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRenderingData"**
  br label %25

25:                                               ; preds = %19, %23
  %26 = phi %"class.blink::NodeRenderingData"** [ %22, %19 ], [ %24, %23 ]
  %27 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %27, i64 0, i32 1
  %29 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %28, align 8
  %30 = icmp eq %"class.blink::LayoutObject"* %29, null
  br i1 %30, label %41, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %29, i64 0, i32 4
  %33 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %32 to i96*
  %34 = load i96, i96* %33, align 4
  %35 = and i96 %34, 67108864
  %36 = icmp eq i96 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %31
  %38 = bitcast %"class.blink::LayoutObject"* %29 to %"class.blink::LayoutBoxModelObject"*
  %39 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* nonnull %38) #10
  %40 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %39, i64 0, i32 0
  br label %41

41:                                               ; preds = %31, %37, %25, %11, %8
  %42 = phi %"class.blink::ScrollableArea"* [ %12, %11 ], [ null, %8 ], [ %40, %37 ], [ null, %25 ], [ null, %31 ]
  ret %"class.blink::ScrollableArea"* %42
}

declare %"class.blink::ScrollableArea"* @_ZN5blink14LocalFrameView17GetScrollableAreaEv(%"class.blink::LocalFrameView"*) local_unnamed_addr #2

declare %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12IsUnobscuredERKNS_14FocusCandidateE(%"struct.blink::FocusCandidate"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 {
  %2 = alloca <2 x i64>, align 16
  %3 = alloca %"struct.blink::PhysicalRect", align 4
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %"struct.blink::PhysicalRect"*
  %6 = alloca %"class.blink::HitTestLocation", align 4
  %7 = alloca %"class.blink::HitTestResult", align 8
  %8 = getelementptr inbounds %"struct.blink::FocusCandidate", %"struct.blink::FocusCandidate"* %0, i64 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %11, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::Document"*, %"class.blink::Document"** %12, align 8
  %14 = tail call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %13) #10
  %15 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %14, i64 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::Frame"*, %"class.blink::Frame"** %15, align 8
  %17 = icmp eq %"class.blink::Frame"* %16, null
  br i1 %17, label %150, label %18

18:                                               ; preds = %1
  %19 = bitcast %"class.blink::Frame"* %16 to i1 (%"class.blink::Frame"*)***
  %20 = load i1 (%"class.blink::Frame"*)**, i1 (%"class.blink::Frame"*)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.blink::Frame"*)*, i1 (%"class.blink::Frame"*)** %20, i64 3
  %22 = load i1 (%"class.blink::Frame"*)*, i1 (%"class.blink::Frame"*)** %21, align 8
  %23 = tail call zeroext i1 %22(%"class.blink::Frame"* nonnull %16) #10
  br i1 %23, label %24, label %150

24:                                               ; preds = %18
  %25 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %26 = bitcast %"class.blink::Node"* %25 to i1 (%"class.blink::Node"*)***
  %27 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %26, align 8
  %28 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %27, i64 37
  %29 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %28, align 8
  %30 = tail call zeroext i1 %29(%"class.blink::Node"* %25) #10
  br i1 %30, label %150, label %31

31:                                               ; preds = %24
  %32 = bitcast %"struct.blink::PhysicalRect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #10
  %33 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"struct.blink::PhysicalRect"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %34, i8 -86, i64 16, i1 false)
  %35 = tail call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* nonnull %16) #10
  %36 = tail call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %35) #10
  %37 = bitcast %"class.blink::VisualViewport"* %36 to { i64, i64 } (%"class.blink::VisualViewport"*, i32)***
  %38 = load { i64, i64 } (%"class.blink::VisualViewport"*, i32)**, { i64, i64 } (%"class.blink::VisualViewport"*, i32)*** %37, align 8
  %39 = getelementptr inbounds { i64, i64 } (%"class.blink::VisualViewport"*, i32)*, { i64, i64 } (%"class.blink::VisualViewport"*, i32)** %38, i64 52
  %40 = load { i64, i64 } (%"class.blink::VisualViewport"*, i32)*, { i64, i64 } (%"class.blink::VisualViewport"*, i32)** %39, align 8
  %41 = tail call { i64, i64 } %40(%"class.blink::VisualViewport"* %36, i32 0) #10
  %42 = extractvalue { i64, i64 } %41, 0
  %43 = extractvalue { i64, i64 } %41, 1
  %44 = trunc i64 %42 to i32
  %45 = lshr i64 %42, 32
  %46 = trunc i64 %45 to i32
  %47 = icmp sgt i32 %44, 33554431
  br i1 %47, label %52, label %48

48:                                               ; preds = %31
  %49 = icmp slt i32 %44, -33554432
  %50 = shl i32 %44, 6
  %51 = select i1 %49, i32 -2147483648, i32 %50
  br label %52

52:                                               ; preds = %48, %31
  %53 = phi i32 [ 2147483647, %31 ], [ %51, %48 ]
  store i32 %53, i32* %33, align 4
  %54 = icmp sgt i32 %46, 33554431
  br i1 %54, label %60, label %55

55:                                               ; preds = %52
  %56 = icmp slt i32 %46, -33554432
  br i1 %56, label %60, label %57

57:                                               ; preds = %55
  %58 = shl nuw nsw i64 %45, 6
  %59 = trunc i64 %58 to i32
  br label %60

60:                                               ; preds = %55, %52, %57
  %61 = phi i32 [ %59, %57 ], [ 2147483647, %52 ], [ -2147483648, %55 ]
  %62 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 0, i32 1, i32 0
  store i32 %61, i32* %62, align 4
  %63 = trunc i64 %43 to i32
  %64 = lshr i64 %43, 32
  %65 = trunc i64 %64 to i32
  %66 = icmp sgt i32 %63, 33554431
  br i1 %66, label %71, label %67

67:                                               ; preds = %60
  %68 = icmp slt i32 %63, -33554432
  %69 = shl i32 %63, 6
  %70 = select i1 %68, i32 -2147483648, i32 %69
  br label %71

71:                                               ; preds = %67, %60
  %72 = phi i32 [ 2147483647, %60 ], [ %70, %67 ]
  %73 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 1, i32 0, i32 0
  store i32 %72, i32* %73, align 4
  %74 = icmp sgt i32 %65, 33554431
  br i1 %74, label %80, label %75

75:                                               ; preds = %71
  %76 = icmp slt i32 %65, -33554432
  br i1 %76, label %80, label %77

77:                                               ; preds = %75
  %78 = shl nuw nsw i64 %64, 6
  %79 = trunc i64 %78 to i32
  br label %80

80:                                               ; preds = %75, %71, %77
  %81 = phi i32 [ %79, %77 ], [ 2147483647, %71 ], [ -2147483648, %75 ]
  %82 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 1, i32 1, i32 0
  store i32 %81, i32* %82, align 4
  %83 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #10
  %84 = getelementptr inbounds %"struct.blink::FocusCandidate", %"struct.blink::FocusCandidate"* %0, i64 0, i32 2
  %85 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %85)
  %86 = bitcast <2 x i64>* %2 to %"struct.blink::PhysicalRect"*
  %87 = bitcast %"struct.blink::PhysicalRect"* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %85, i8* align 4 %87, i64 16, i1 false) #10
  call void @_ZN5blink12PhysicalRect9IntersectERKS0_(%"struct.blink::PhysicalRect"* nonnull %86, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %3) #10
  %88 = load <2 x i64>, <2 x i64>* %2, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85)
  store <2 x i64> %88, <2 x i64>* %4, align 16
  %89 = extractelement <2 x i64> %88, i32 1
  %90 = trunc i64 %89 to i32
  %91 = icmp eq i32 %90, 0
  %92 = icmp ult i64 %89, 4294967296
  %93 = or i1 %91, %92
  br i1 %93, label %148, label %94

94:                                               ; preds = %80
  %95 = bitcast %"class.blink::HitTestLocation"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %95) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %95, i8* align 4 bitcast (%"class.blink::HitTestLocation"* @__const._ZN5blink12IsUnobscuredERKNS_14FocusCandidateE.location to i8*), i64 72, i1 false)
  call void @_ZN5blink15HitTestLocationC1ERKNS_12PhysicalRectE(%"class.blink::HitTestLocation"* nonnull %6, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %5) #10
  %96 = bitcast %"class.blink::HitTestResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %96) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %96, i8 -86, i64 112, i1 false)
  %97 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %16, i64 1, i32 25, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %98 = bitcast i64* %97 to %"class.blink::EventHandler"**
  %99 = load %"class.blink::EventHandler"*, %"class.blink::EventHandler"** %98, align 8
  call void @_ZN5blink12EventHandler23HitTestResultAtLocationERKNS_15HitTestLocationEjPKNS_12LayoutObjectEb(%"class.blink::HitTestResult"* nonnull sret %7, %"class.blink::EventHandler"* %99, %"class.blink::HitTestLocation"* nonnull dereferenceable(72) %6, i32 37122, %"class.blink::LayoutObject"* null, i1 zeroext false) #10
  %100 = call dereferenceable(48) %"class.blink::HeapLinkedHashSet.2102"* @_ZNK5blink13HitTestResult19ListBasedTestResultEv(%"class.blink::HitTestResult"* nonnull %7) #10
  %101 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.2102", %"class.blink::HeapLinkedHashSet.2102"* %100, i64 0, i32 0, i32 1, i32 0
  %102 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3045"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3042"* %101, i32 0) #10, !noalias !4
  %103 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3045", %"class.WTF::VectorBackedLinkedListNode.3045"* %102, i64 0, i32 0
  %104 = load i32, i32* %103, align 8, !noalias !4
  %105 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3045"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3042"* %101, i32 %104) #10, !noalias !4
  %106 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3045"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3042"* %101, i32 0) #10, !noalias !7
  %107 = icmp eq %"class.WTF::VectorBackedLinkedListNode.3045"* %105, %106
  br i1 %107, label %146, label %108

108:                                              ; preds = %94, %140
  %109 = phi %"class.WTF::VectorBackedLinkedListNode.3045"* [ %143, %140 ], [ %105, %94 ]
  %110 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %111 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3045", %"class.WTF::VectorBackedLinkedListNode.3045"* %109, i64 0, i32 2, i32 0, i32 0
  %112 = load %"class.blink::Node"*, %"class.blink::Node"** %111, align 8
  %113 = call zeroext i1 @_ZNK5blink4Node29ContainsIncludingHostElementsERKS0_(%"class.blink::Node"* %110, %"class.blink::Node"* dereferenceable(64) %112) #10
  br i1 %113, label %146, label %114

114:                                              ; preds = %108
  %115 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %116 = icmp eq %"class.blink::Node"* %115, null
  br i1 %116, label %140, label %117

117:                                              ; preds = %114
  %118 = bitcast %"class.blink::Node"* %115 to i1 (%"class.blink::Node"*)***
  %119 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %118, align 8
  %120 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %119, i64 42
  %121 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %120, align 8
  %122 = call zeroext i1 %121(%"class.blink::Node"* nonnull %115) #10
  br i1 %122, label %123, label %140

123:                                              ; preds = %117
  %124 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %125 = icmp eq %"class.blink::Node"* %124, null
  br i1 %125, label %134, label %126

126:                                              ; preds = %123
  %127 = bitcast %"class.blink::Node"* %124 to i1 (%"class.blink::Node"*)***
  %128 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %127, align 8
  %129 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %128, i64 42
  %130 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %129, align 8
  %131 = call zeroext i1 %130(%"class.blink::Node"* nonnull %124) #10
  %132 = bitcast %"class.blink::Node"* %124 to %"class.blink::HTMLFrameOwnerElement"*
  %133 = select i1 %131, %"class.blink::HTMLFrameOwnerElement"* %132, %"class.blink::HTMLFrameOwnerElement"* null
  br label %134

134:                                              ; preds = %123, %126
  %135 = phi %"class.blink::HTMLFrameOwnerElement"* [ %133, %126 ], [ null, %123 ]
  %136 = call %"class.blink::Document"* @_ZNK5blink21HTMLFrameOwnerElement15contentDocumentEv(%"class.blink::HTMLFrameOwnerElement"* %135) #10
  %137 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %136, i64 0, i32 0, i32 0
  %138 = load %"class.blink::Node"*, %"class.blink::Node"** %111, align 8
  %139 = call zeroext i1 @_ZNK5blink4Node29ContainsIncludingHostElementsERKS0_(%"class.blink::Node"* %137, %"class.blink::Node"* dereferenceable(64) %138) #10
  br i1 %139, label %146, label %140

140:                                              ; preds = %117, %114, %134
  %141 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3045", %"class.WTF::VectorBackedLinkedListNode.3045"* %109, i64 0, i32 0
  %142 = load i32, i32* %141, align 8
  %143 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3045"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3042"* %101, i32 %142) #10
  %144 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3045"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3042"* %101, i32 0) #10, !noalias !7
  %145 = icmp eq %"class.WTF::VectorBackedLinkedListNode.3045"* %143, %144
  br i1 %145, label %146, label %108

146:                                              ; preds = %108, %134, %140, %94
  %147 = phi i1 [ false, %94 ], [ true, %108 ], [ true, %134 ], [ false, %140 ]
  call void @_ZN5blink13HitTestResultD1Ev(%"class.blink::HitTestResult"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %96) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %95) #10
  br label %148

148:                                              ; preds = %80, %146
  %149 = phi i1 [ %147, %146 ], [ false, %80 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #10
  br label %150

150:                                              ; preds = %18, %1, %24, %148
  %151 = phi i1 [ %149, %148 ], [ true, %24 ], [ false, %18 ], [ false, %1 ]
  ret i1 %151
}

declare %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"*) local_unnamed_addr #2

declare void @_ZN5blink15HitTestLocationC1ERKNS_12PhysicalRectE(%"class.blink::HitTestLocation"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN5blink12EventHandler23HitTestResultAtLocationERKNS_15HitTestLocationEjPKNS_12LayoutObjectEb(%"class.blink::HitTestResult"* sret, %"class.blink::EventHandler"*, %"class.blink::HitTestLocation"* dereferenceable(72), i32, %"class.blink::LayoutObject"*, i1 zeroext) local_unnamed_addr #2

declare dereferenceable(48) %"class.blink::HeapLinkedHashSet.2102"* @_ZNK5blink13HitTestResult19ListBasedTestResultEv(%"class.blink::HitTestResult"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node29ContainsIncludingHostElementsERKS0_(%"class.blink::Node"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLFrameOwnerElement"* @_ZN5blink17FrameOwnerElementERKNS_14FocusCandidateE(%"struct.blink::FocusCandidate"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"struct.blink::FocusCandidate", %"struct.blink::FocusCandidate"* %0, i64 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::Node"* %3 to i1 (%"class.blink::Node"*)***
  %7 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %7, i64 42
  %9 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::Node"* nonnull %3) #10
  %11 = bitcast %"class.blink::Node"* %3 to %"class.blink::HTMLFrameOwnerElement"*
  %12 = select i1 %10, %"class.blink::HTMLFrameOwnerElement"* %11, %"class.blink::HTMLFrameOwnerElement"* null
  br label %13

13:                                               ; preds = %1, %5
  %14 = phi %"class.blink::HTMLFrameOwnerElement"* [ %12, %5 ], [ null, %1 ]
  ret %"class.blink::HTMLFrameOwnerElement"* %14
}

declare %"class.blink::Document"* @_ZNK5blink21HTMLFrameOwnerElement15contentDocumentEv(%"class.blink::HTMLFrameOwnerElement"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink13HitTestResultD1Ev(%"class.blink::HitTestResult"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14HasRemoteFrameEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #0 {
  %2 = icmp eq %"class.blink::Node"* %0, null
  br i1 %2, label %20, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.blink::Node"* %0 to i1 (%"class.blink::Node"*)***
  %5 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %5, i64 42
  %7 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::Node"* nonnull %0) #10
  br i1 %8, label %9, label %20

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 5
  %11 = bitcast %"class.blink::Member.318"* %10 to %"class.blink::Frame"**
  %12 = load %"class.blink::Frame"*, %"class.blink::Frame"** %11, align 8
  %13 = icmp eq %"class.blink::Frame"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.blink::Frame"* %12 to i1 (%"class.blink::Frame"*)***
  %16 = load i1 (%"class.blink::Frame"*)**, i1 (%"class.blink::Frame"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::Frame"*)*, i1 (%"class.blink::Frame"*)** %16, i64 4
  %18 = load i1 (%"class.blink::Frame"*)*, i1 (%"class.blink::Frame"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::Frame"* nonnull %12) #10
  br label %20

20:                                               ; preds = %3, %1, %14, %9
  %21 = phi i1 [ false, %9 ], [ %19, %14 ], [ false, %3 ], [ false, %1 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17ScrollInDirectionEPNS_4NodeENS_26SpatialNavigationDirectionE(%"class.blink::Node"*, i32) local_unnamed_addr #0 {
  %3 = alloca %"class.blink::FloatSize", align 4
  %4 = tail call zeroext i1 @_ZN5blink20CanScrollInDirectionEPKNS_4NodeENS_26SpatialNavigationDirectionE(%"class.blink::Node"* %0, i32 %1)
  br i1 %4, label %5, label %67

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  %10 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %9) #10
  %11 = tail call i32 @_ZN5blink14ScrollableArea17PixelsPerLineStepEPNS_10LocalFrameE(%"class.blink::LocalFrame"* %10) #10
  switch i32 %1, label %67 [
    i32 4, label %12
    i32 2, label %17
    i32 1, label %14
    i32 3, label %16
  ]

12:                                               ; preds = %5
  %13 = sub nsw i32 0, %11
  br label %17

14:                                               ; preds = %5
  %15 = sub nsw i32 0, %11
  br label %17

16:                                               ; preds = %5
  br label %17

17:                                               ; preds = %5, %16, %14, %12
  %18 = phi i32 [ 0, %16 ], [ 0, %14 ], [ %13, %12 ], [ %11, %5 ]
  %19 = phi i32 [ %11, %16 ], [ %15, %14 ], [ 0, %12 ], [ 0, %5 ]
  %20 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %21 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %20, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::Document"*, %"class.blink::Document"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %22, i64 0, i32 0, i32 0
  %24 = icmp eq %"class.blink::Node"* %23, %0
  br i1 %24, label %25, label %30

25:                                               ; preds = %17
  %26 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %22) #10
  %27 = icmp eq %"class.blink::LocalFrameView"* %26, null
  br i1 %27, label %67, label %28

28:                                               ; preds = %25
  %29 = tail call %"class.blink::ScrollableArea"* @_ZN5blink14LocalFrameView17GetScrollableAreaEv(%"class.blink::LocalFrameView"* nonnull %26) #10
  br label %58

30:                                               ; preds = %17
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %34, label %40, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.blink::NodeData"** %35 to %"class.blink::NodeRareData"**
  %38 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %38, i64 0, i32 1, i32 0, i32 0
  br label %42

40:                                               ; preds = %30
  %41 = bitcast %"class.blink::NodeData"** %35 to %"class.blink::NodeRenderingData"**
  br label %42

42:                                               ; preds = %40, %36
  %43 = phi %"class.blink::NodeRenderingData"** [ %39, %36 ], [ %41, %40 ]
  %44 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %44, i64 0, i32 1
  %46 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %45, align 8
  %47 = icmp eq %"class.blink::LayoutObject"* %46, null
  br i1 %47, label %67, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %46, i64 0, i32 4
  %50 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %49 to i96*
  %51 = load i96, i96* %50, align 4
  %52 = and i96 %51, 67108864
  %53 = icmp eq i96 %52, 0
  br i1 %53, label %67, label %54

54:                                               ; preds = %48
  %55 = bitcast %"class.blink::LayoutObject"* %46 to %"class.blink::LayoutBoxModelObject"*
  %56 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* nonnull %55) #10
  %57 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %56, i64 0, i32 0
  br label %58

58:                                               ; preds = %28, %54
  %59 = phi %"class.blink::ScrollableArea"* [ %29, %28 ], [ %57, %54 ]
  %60 = icmp eq %"class.blink::ScrollableArea"* %59, null
  br i1 %60, label %67, label %61

61:                                               ; preds = %58
  %62 = bitcast %"class.blink::FloatSize"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #10
  %63 = sitofp i32 %18 to float
  %64 = sitofp i32 %19 to float
  %65 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %3, i64 0, i32 0
  store float %63, float* %65, align 4
  %66 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %3, i64 0, i32 1
  store float %64, float* %66, align 4
  call void @_ZN5blink14ScrollableArea8ScrollByERKNS_9FloatSizeENS_5mojom10ScrollTypeENS4_14ScrollBehaviorE(%"class.blink::ScrollableArea"* nonnull %59, %"class.blink::FloatSize"* nonnull dereferenceable(8) %3, i32 0, i32 1) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #10
  br label %67

67:                                               ; preds = %48, %42, %25, %5, %58, %61, %2
  %68 = phi i1 [ false, %2 ], [ false, %5 ], [ true, %61 ], [ false, %58 ], [ false, %25 ], [ false, %42 ], [ false, %48 ]
  ret i1 %68
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink20CanScrollInDirectionEPKNS_4NodeENS_26SpatialNavigationDirectionE(%"class.blink::Node"*, i32) local_unnamed_addr #4 {
  %3 = icmp eq %"class.blink::Node"* %0, null
  br i1 %3, label %242, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::Document"*, %"class.blink::Document"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %8, i64 0, i32 0, i32 0
  %10 = icmp eq %"class.blink::Node"* %9, %0
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = bitcast %"class.blink::Node"* %0 to %"class.blink::Document"*
  %13 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %12) #10
  %14 = tail call zeroext i1 @_ZN5blink20CanScrollInDirectionEPKNS_10LocalFrameENS_26SpatialNavigationDirectionE(%"class.blink::LocalFrame"* %13, i32 %1)
  br label %242

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %19, label %25, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.blink::NodeData"** %20 to %"class.blink::NodeRareData"**
  %23 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %23, i64 0, i32 1, i32 0, i32 0
  br label %27

25:                                               ; preds = %15
  %26 = bitcast %"class.blink::NodeData"** %20 to %"class.blink::NodeRenderingData"**
  br label %27

27:                                               ; preds = %25, %21
  %28 = phi %"class.blink::NodeRenderingData"** [ %24, %21 ], [ %26, %25 ]
  %29 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %29, i64 0, i32 1
  %31 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %30, align 8
  %32 = icmp eq %"class.blink::LayoutObject"* %31, null
  br i1 %32, label %242, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %31, i64 0, i32 4
  %35 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %34 to i96*
  %36 = load i96, i96* %35, align 4
  %37 = and i96 %36, 67108864
  %38 = icmp eq i96 %37, 0
  br i1 %38, label %242, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.blink::LayoutObject"* %31 to %"class.blink::LayoutBox"*
  %41 = tail call zeroext i1 @_ZNK5blink9LayoutBox33CanBeScrolledAndHasScrollableAreaEv(%"class.blink::LayoutBox"* nonnull %40) #10
  br i1 %41, label %42, label %242

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = and i32 %44, 12
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %242

47:                                               ; preds = %42
  %48 = bitcast %"class.blink::Node"* %0 to %"class.blink::Element"*
  %49 = bitcast %"class.blink::Node"* %0 to %"class.blink::LayoutBox"* (%"class.blink::Element"*)***
  %50 = load %"class.blink::LayoutBox"* (%"class.blink::Element"*)**, %"class.blink::LayoutBox"* (%"class.blink::Element"*)*** %49, align 8
  %51 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::Element"*)*, %"class.blink::LayoutBox"* (%"class.blink::Element"*)** %50, i64 75
  %52 = load %"class.blink::LayoutBox"* (%"class.blink::Element"*)*, %"class.blink::LayoutBox"* (%"class.blink::Element"*)** %51, align 8
  %53 = tail call %"class.blink::LayoutBox"* %52(%"class.blink::Element"* nonnull %48) #10
  %54 = icmp eq %"class.blink::LayoutBox"* %53, null
  br i1 %54, label %242, label %55

55:                                               ; preds = %47
  %56 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %53, i64 0, i32 0
  %57 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %56) #10
  %58 = icmp eq %"class.blink::PaintLayerScrollableArea"* %57, null
  br i1 %58, label %242, label %59

59:                                               ; preds = %55
  switch i32 %1, label %242 [
    i32 4, label %60
    i32 1, label %94
    i32 2, label %129
    i32 3, label %185
  ]

60:                                               ; preds = %59
  %61 = load i32, i32* %43, align 8
  %62 = and i32 %61, 1
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %63, label %69, label %65

65:                                               ; preds = %60
  %66 = bitcast %"class.blink::NodeData"** %64 to %"class.blink::NodeRareData"**
  %67 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %67, i64 0, i32 1, i32 0, i32 0
  br label %71

69:                                               ; preds = %60
  %70 = bitcast %"class.blink::NodeData"** %64 to %"class.blink::NodeRenderingData"**
  br label %71

71:                                               ; preds = %65, %69
  %72 = phi %"class.blink::NodeRenderingData"** [ %68, %65 ], [ %70, %69 ]
  %73 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %73, i64 0, i32 1
  %75 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %75, i64 0, i32 5, i32 0
  %77 = bitcast %"class.blink::ComputedStyle"** %76 to %"class.blink::ComputedStyleBase"**
  %78 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %78, i64 0, i32 9
  %80 = bitcast [20 x i8]* %79 to i160*
  %81 = load i160, i160* %80, align 8
  %82 = and i160 %81, 132226261520350065983488
  %83 = icmp eq i160 %82, 0
  br i1 %83, label %242, label %84

84:                                               ; preds = %71
  %85 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %57, i64 0, i32 3
  %86 = bitcast %"class.blink::IntPoint"* %85 to i64*
  %87 = load i64, i64* %86, align 4
  %88 = trunc i64 %87 to i32
  %89 = sitofp i32 %88 to float
  %90 = tail call <2 x float> @_ZNK5blink24PaintLayerScrollableArea15GetScrollOffsetEv(%"class.blink::PaintLayerScrollableArea"* nonnull %57) #10
  %91 = extractelement <2 x float> %90, i32 0
  %92 = fadd float %91, %89
  %93 = fcmp ogt float %92, 0.000000e+00
  br label %242

94:                                               ; preds = %59
  %95 = load i32, i32* %43, align 8
  %96 = and i32 %95, 1
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %97, label %103, label %99

99:                                               ; preds = %94
  %100 = bitcast %"class.blink::NodeData"** %98 to %"class.blink::NodeRareData"**
  %101 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %101, i64 0, i32 1, i32 0, i32 0
  br label %105

103:                                              ; preds = %94
  %104 = bitcast %"class.blink::NodeData"** %98 to %"class.blink::NodeRenderingData"**
  br label %105

105:                                              ; preds = %99, %103
  %106 = phi %"class.blink::NodeRenderingData"** [ %102, %99 ], [ %104, %103 ]
  %107 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %107, i64 0, i32 1
  %109 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %109, i64 0, i32 5, i32 0
  %111 = bitcast %"class.blink::ComputedStyle"** %110 to %"class.blink::ComputedStyleBase"**
  %112 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %112, i64 0, i32 9
  %114 = bitcast [20 x i8]* %113 to i160*
  %115 = load i160, i160* %114, align 8
  %116 = and i160 %115, 1057810092162800527867904
  %117 = icmp eq i160 %116, 0
  br i1 %117, label %242, label %118

118:                                              ; preds = %105
  %119 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %57, i64 0, i32 3
  %120 = bitcast %"class.blink::IntPoint"* %119 to i64*
  %121 = load i64, i64* %120, align 4
  %122 = lshr i64 %121, 32
  %123 = trunc i64 %122 to i32
  %124 = sitofp i32 %123 to float
  %125 = tail call <2 x float> @_ZNK5blink24PaintLayerScrollableArea15GetScrollOffsetEv(%"class.blink::PaintLayerScrollableArea"* nonnull %57) #10
  %126 = extractelement <2 x float> %125, i32 1
  %127 = fadd float %126, %124
  %128 = fcmp ogt float %127, 0.000000e+00
  br label %242

129:                                              ; preds = %59
  %130 = load i32, i32* %43, align 8
  %131 = and i32 %130, 1
  %132 = icmp eq i32 %131, 0
  %133 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %132, label %138, label %134

134:                                              ; preds = %129
  %135 = bitcast %"class.blink::NodeData"** %133 to %"class.blink::NodeRareData"**
  %136 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %135, align 8
  %137 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %136, i64 0, i32 1, i32 0, i32 0
  br label %140

138:                                              ; preds = %129
  %139 = bitcast %"class.blink::NodeData"** %133 to %"class.blink::NodeRenderingData"**
  br label %140

140:                                              ; preds = %134, %138
  %141 = phi %"class.blink::NodeRenderingData"** [ %137, %134 ], [ %139, %138 ]
  %142 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %141, align 8
  %143 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %142, i64 0, i32 1
  %144 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %144, i64 0, i32 5, i32 0
  %146 = bitcast %"class.blink::ComputedStyle"** %145 to %"class.blink::ComputedStyleBase"**
  %147 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %147, i64 0, i32 9
  %149 = bitcast [20 x i8]* %148 to i160*
  %150 = load i160, i160* %149, align 8
  %151 = and i160 %150, 132226261520350065983488
  %152 = icmp eq i160 %151, 0
  br i1 %152, label %242, label %153

153:                                              ; preds = %140
  %154 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %57, i64 0, i32 3
  %155 = bitcast %"class.blink::IntPoint"* %154 to i64*
  %156 = load i64, i64* %155, align 4
  %157 = trunc i64 %156 to i32
  %158 = sitofp i32 %157 to float
  %159 = tail call <2 x float> @_ZNK5blink24PaintLayerScrollableArea15GetScrollOffsetEv(%"class.blink::PaintLayerScrollableArea"* nonnull %57) #10
  %160 = extractelement <2 x float> %159, i32 0
  %161 = fadd float %160, %158
  %162 = fmul float %161, 6.400000e+01
  %163 = fcmp ult float %162, 0xC1E0000000000000
  %164 = fcmp ugt float %162, 0x41DFFFFFE0000000
  %165 = fcmp ogt float %162, 0xC1E0000000000000
  %166 = select i1 %165, float %162, float 0xC1E0000000000000
  %167 = fptosi float %166 to i32
  %168 = select i1 %163, i32 0, i32 2147483647
  %169 = select i1 %164, i32 %168, i32 %167
  %170 = tail call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* nonnull %0) #10
  %171 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %170) #10
  %172 = icmp slt i32 %171, 0
  %173 = select i1 %172, i32 -2147483648, i32 2147483647
  %174 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %169, i32 %171) #10
  %175 = extractvalue { i32, i1 } %174, 1
  %176 = extractvalue { i32, i1 } %174, 0
  %177 = select i1 %175, i32 %173, i32 %176, !prof !2
  %178 = tail call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* nonnull %0) #10
  %179 = bitcast %"class.blink::LayoutBox"* %178 to i32 (%"class.blink::LayoutBox"*)***
  %180 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %179, align 8
  %181 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %180, i64 152
  %182 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %181, align 8
  %183 = tail call i32 %182(%"class.blink::LayoutBox"* %178) #10
  %184 = icmp slt i32 %177, %183
  br label %242

185:                                              ; preds = %59
  %186 = load i32, i32* %43, align 8
  %187 = and i32 %186, 1
  %188 = icmp eq i32 %187, 0
  %189 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %188, label %194, label %190

190:                                              ; preds = %185
  %191 = bitcast %"class.blink::NodeData"** %189 to %"class.blink::NodeRareData"**
  %192 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %191, align 8
  %193 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %192, i64 0, i32 1, i32 0, i32 0
  br label %196

194:                                              ; preds = %185
  %195 = bitcast %"class.blink::NodeData"** %189 to %"class.blink::NodeRenderingData"**
  br label %196

196:                                              ; preds = %190, %194
  %197 = phi %"class.blink::NodeRenderingData"** [ %193, %190 ], [ %195, %194 ]
  %198 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %197, align 8
  %199 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %198, i64 0, i32 1
  %200 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %199, align 8
  %201 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %200, i64 0, i32 5, i32 0
  %202 = bitcast %"class.blink::ComputedStyle"** %201 to %"class.blink::ComputedStyleBase"**
  %203 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %202, align 8
  %204 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %203, i64 0, i32 9
  %205 = bitcast [20 x i8]* %204 to i160*
  %206 = load i160, i160* %205, align 8
  %207 = and i160 %206, 1057810092162800527867904
  %208 = icmp eq i160 %207, 0
  br i1 %208, label %242, label %209

209:                                              ; preds = %196
  %210 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %57, i64 0, i32 3
  %211 = bitcast %"class.blink::IntPoint"* %210 to i64*
  %212 = load i64, i64* %211, align 4
  %213 = lshr i64 %212, 32
  %214 = trunc i64 %213 to i32
  %215 = sitofp i32 %214 to float
  %216 = tail call <2 x float> @_ZNK5blink24PaintLayerScrollableArea15GetScrollOffsetEv(%"class.blink::PaintLayerScrollableArea"* nonnull %57) #10
  %217 = extractelement <2 x float> %216, i32 1
  %218 = fadd float %217, %215
  %219 = fmul float %218, 6.400000e+01
  %220 = fcmp ult float %219, 0xC1E0000000000000
  %221 = fcmp ugt float %219, 0x41DFFFFFE0000000
  %222 = fcmp ogt float %219, 0xC1E0000000000000
  %223 = select i1 %222, float %219, float 0xC1E0000000000000
  %224 = fptosi float %223 to i32
  %225 = select i1 %220, i32 0, i32 2147483647
  %226 = select i1 %221, i32 %225, i32 %224
  %227 = tail call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* nonnull %0) #10
  %228 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %227) #10
  %229 = icmp slt i32 %228, 0
  %230 = select i1 %229, i32 -2147483648, i32 2147483647
  %231 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %226, i32 %228) #10
  %232 = extractvalue { i32, i1 } %231, 1
  %233 = extractvalue { i32, i1 } %231, 0
  %234 = select i1 %232, i32 %230, i32 %233, !prof !2
  %235 = tail call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* nonnull %0) #10
  %236 = bitcast %"class.blink::LayoutBox"* %235 to i32 (%"class.blink::LayoutBox"*)***
  %237 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %236, align 8
  %238 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %237, i64 153
  %239 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %238, align 8
  %240 = tail call i32 %239(%"class.blink::LayoutBox"* %235) #10
  %241 = icmp slt i32 %234, %240
  br label %242

242:                                              ; preds = %42, %2, %33, %27, %209, %196, %153, %140, %118, %105, %84, %71, %11, %55, %59, %47, %39
  %243 = phi i1 [ %14, %11 ], [ false, %39 ], [ false, %42 ], [ false, %47 ], [ false, %55 ], [ false, %59 ], [ false, %71 ], [ %93, %84 ], [ false, %105 ], [ %128, %118 ], [ false, %140 ], [ %184, %153 ], [ false, %196 ], [ %241, %209 ], [ false, %27 ], [ false, %33 ], [ false, %2 ]
  ret i1 %243
}

declare i32 @_ZN5blink14ScrollableArea17PixelsPerLineStepEPNS_10LocalFrameE(%"class.blink::LocalFrame"*) local_unnamed_addr #2

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #2

declare void @_ZN5blink14ScrollableArea8ScrollByERKNS_9FloatSizeENS_5mojom10ScrollTypeENS4_14ScrollBehaviorE(%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"* dereferenceable(8), i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16IsScrollableNodeEPKNS_4NodeE(%"class.blink::Node"* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %"class.blink::Node"* %0, null
  br i1 %2, label %37, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %7, i64 0, i32 0, i32 0
  %9 = icmp eq %"class.blink::Node"* %8, %0
  br i1 %9, label %37, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %14, label %20, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.blink::NodeData"** %15 to %"class.blink::NodeRareData"**
  %18 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %18, i64 0, i32 1, i32 0, i32 0
  br label %22

20:                                               ; preds = %10
  %21 = bitcast %"class.blink::NodeData"** %15 to %"class.blink::NodeRenderingData"**
  br label %22

22:                                               ; preds = %16, %20
  %23 = phi %"class.blink::NodeRenderingData"** [ %19, %16 ], [ %21, %20 ]
  %24 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %24, i64 0, i32 1
  %26 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %25, align 8
  %27 = icmp eq %"class.blink::LayoutObject"* %26, null
  br i1 %27, label %37, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %26, i64 0, i32 4
  %30 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %29 to i96*
  %31 = load i96, i96* %30, align 4
  %32 = and i96 %31, 67108864
  %33 = icmp eq i96 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %28
  %35 = bitcast %"class.blink::LayoutObject"* %26 to %"class.blink::LayoutBox"*
  %36 = tail call zeroext i1 @_ZNK5blink9LayoutBox33CanBeScrolledAndHasScrollableAreaEv(%"class.blink::LayoutBox"* nonnull %35) #10
  br label %37

37:                                               ; preds = %1, %3, %28, %22, %34
  %38 = phi i1 [ %36, %34 ], [ false, %22 ], [ false, %28 ], [ false, %1 ], [ true, %3 ]
  ret i1 %38
}

declare zeroext i1 @_ZNK5blink9LayoutBox33CanBeScrolledAndHasScrollableAreaEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink26ScrollableAreaOrDocumentOfEPNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #0 {
  br label %2

2:                                                ; preds = %68, %1
  %3 = phi %"class.blink::Node"* [ %0, %1 ], [ %24, %68 ]
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %9, i64 0, i32 0, i32 0
  %11 = icmp eq %"class.blink::Node"* %10, %3
  br i1 %11, label %12, label %18

12:                                               ; preds = %5
  %13 = bitcast %"class.blink::Node"* %3 to %"class.blink::Document"*
  %14 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %13) #10
  %15 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %14, i64 0, i32 0
  %16 = tail call %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink5Frame20DeprecatedLocalOwnerEv(%"class.blink::Frame"* %15) #10
  %17 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %23

18:                                               ; preds = %5, %2
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.blink::Node"** %19 to %"class.blink::ContainerNode"**
  %21 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %21, i64 0, i32 0
  br label %23

23:                                               ; preds = %18, %12
  %24 = phi %"class.blink::Node"* [ %17, %12 ], [ %22, %18 ]
  %25 = icmp eq %"class.blink::Node"* %24, null
  br i1 %25, label %72, label %26

26:                                               ; preds = %23
  %27 = bitcast %"class.blink::Node"* %24 to i1 (%"class.blink::Node"*)***
  %28 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %28, i64 42
  %30 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::Node"* nonnull %24) #10
  br i1 %31, label %32, label %37

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %24, i64 1, i32 5
  %34 = bitcast %"class.blink::Member.318"* %33 to %"class.blink::Frame"**
  %35 = load %"class.blink::Frame"*, %"class.blink::Frame"** %34, align 8
  %36 = icmp eq %"class.blink::Frame"* %35, null
  br i1 %36, label %37, label %72

37:                                               ; preds = %32, %26
  %38 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %24, i64 0, i32 3, i32 0, i32 0
  %39 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %39, i64 0, i32 2, i32 0, i32 0
  %41 = load %"class.blink::Document"*, %"class.blink::Document"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %41, i64 0, i32 0, i32 0
  %43 = icmp eq %"class.blink::Node"* %42, %24
  br i1 %43, label %72, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %24, i64 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %24, i64 0, i32 6, i32 0, i32 0
  br i1 %48, label %54, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.blink::NodeData"** %49 to %"class.blink::NodeRareData"**
  %52 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %52, i64 0, i32 1, i32 0, i32 0
  br label %56

54:                                               ; preds = %44
  %55 = bitcast %"class.blink::NodeData"** %49 to %"class.blink::NodeRenderingData"**
  br label %56

56:                                               ; preds = %54, %50
  %57 = phi %"class.blink::NodeRenderingData"** [ %53, %50 ], [ %55, %54 ]
  %58 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %58, i64 0, i32 1
  %60 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %59, align 8
  %61 = icmp eq %"class.blink::LayoutObject"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 0, i32 4
  %64 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %63 to i96*
  %65 = load i96, i96* %64, align 4
  %66 = and i96 %65, 67108864
  %67 = icmp eq i96 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %62, %56, %69
  br label %2

69:                                               ; preds = %62
  %70 = bitcast %"class.blink::LayoutObject"* %60 to %"class.blink::LayoutBox"*
  %71 = tail call zeroext i1 @_ZNK5blink9LayoutBox33CanBeScrolledAndHasScrollableAreaEv(%"class.blink::LayoutBox"* nonnull %70) #10
  br i1 %71, label %72, label %68

72:                                               ; preds = %37, %32, %69, %23
  ret %"class.blink::Node"* %24
}

declare %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink5Frame20DeprecatedLocalOwnerEv(%"class.blink::Frame"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink26IsScrollableAreaOrDocumentEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #0 {
  %2 = icmp eq %"class.blink::Node"* %0, null
  br i1 %2, label %48, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.blink::Node"* %0 to i1 (%"class.blink::Node"*)***
  %5 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %5, i64 42
  %7 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::Node"* nonnull %0) #10
  br i1 %8, label %9, label %14

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 5
  %11 = bitcast %"class.blink::Member.318"* %10 to %"class.blink::Frame"**
  %12 = load %"class.blink::Frame"*, %"class.blink::Frame"** %11, align 8
  %13 = icmp eq %"class.blink::Frame"* %12, null
  br i1 %13, label %14, label %48

14:                                               ; preds = %3, %9
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %16, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::Document"*, %"class.blink::Document"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %18, i64 0, i32 0, i32 0
  %20 = icmp eq %"class.blink::Node"* %19, %0
  br i1 %20, label %48, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %25, label %31, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.blink::NodeData"** %26 to %"class.blink::NodeRareData"**
  %29 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %29, i64 0, i32 1, i32 0, i32 0
  br label %33

31:                                               ; preds = %21
  %32 = bitcast %"class.blink::NodeData"** %26 to %"class.blink::NodeRenderingData"**
  br label %33

33:                                               ; preds = %31, %27
  %34 = phi %"class.blink::NodeRenderingData"** [ %30, %27 ], [ %32, %31 ]
  %35 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %35, i64 0, i32 1
  %37 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %36, align 8
  %38 = icmp eq %"class.blink::LayoutObject"* %37, null
  br i1 %38, label %48, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %37, i64 0, i32 4
  %41 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %40 to i96*
  %42 = load i96, i96* %41, align 4
  %43 = and i96 %42, 67108864
  %44 = icmp eq i96 %43, 0
  br i1 %44, label %48, label %45

45:                                               ; preds = %39
  %46 = bitcast %"class.blink::LayoutObject"* %37 to %"class.blink::LayoutBox"*
  %47 = tail call zeroext i1 @_ZNK5blink9LayoutBox33CanBeScrolledAndHasScrollableAreaEv(%"class.blink::LayoutBox"* nonnull %46) #10
  br label %48

48:                                               ; preds = %45, %39, %33, %14, %9, %1
  %49 = phi i1 [ false, %1 ], [ true, %9 ], [ %47, %45 ], [ false, %33 ], [ false, %39 ], [ true, %14 ]
  ret i1 %49
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink20CanScrollInDirectionEPKNS_10LocalFrameENS_26SpatialNavigationDirectionE(%"class.blink::LocalFrame"*, i32) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %0, i64 0, i32 11, i32 0, i32 0
  %6 = load %"class.blink::LocalFrameView"*, %"class.blink::LocalFrameView"** %5, align 8
  %7 = icmp eq %"class.blink::LocalFrameView"* %6, null
  br i1 %7, label %120, label %8

8:                                                ; preds = %2
  %9 = tail call %"class.blink::LayoutView"* @_ZNK5blink10LocalFrame19ContentLayoutObjectEv(%"class.blink::LocalFrame"* %0) #10
  %10 = icmp eq %"class.blink::LayoutView"* %9, null
  br i1 %10, label %120, label %11

11:                                               ; preds = %8
  %12 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #10
  store i32 -1431655766, i32* %3, align 4
  %13 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #10
  store i32 -1431655766, i32* %4, align 4
  call void @_ZNK5blink10LayoutView23CalculateScrollbarModesERNS_5mojom13ScrollbarModeES3_(%"class.blink::LayoutView"* nonnull %9, i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %3) #10
  %14 = icmp eq i32 %1, 4
  %15 = icmp eq i32 %1, 2
  %16 = or i1 %14, %15
  %17 = load i32, i32* %4, align 4
  %18 = icmp eq i32 %17, 1
  %19 = and i1 %16, %18
  br i1 %19, label %118, label %20

20:                                               ; preds = %11
  %21 = or i32 %1, 2
  %22 = icmp eq i32 %21, 3
  %23 = load i32, i32* %3, align 4
  %24 = icmp eq i32 %23, 1
  %25 = and i1 %22, %24
  br i1 %25, label %118, label %26

26:                                               ; preds = %20
  %27 = load %"class.blink::LocalFrameView"*, %"class.blink::LocalFrameView"** %5, align 8
  %28 = call %"class.blink::ScrollableArea"* @_ZN5blink14LocalFrameView17GetScrollableAreaEv(%"class.blink::LocalFrameView"* %27) #10
  %29 = bitcast %"class.blink::ScrollableArea"* %28 to i64 (%"class.blink::ScrollableArea"*)***
  %30 = load i64 (%"class.blink::ScrollableArea"*)**, i64 (%"class.blink::ScrollableArea"*)*** %29, align 8
  %31 = getelementptr inbounds i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %30, i64 55
  %32 = load i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %31, align 8
  %33 = call i64 %32(%"class.blink::ScrollableArea"* %28) #10
  %34 = trunc i64 %33 to i32
  %35 = lshr i64 %33, 32
  %36 = trunc i64 %35 to i32
  %37 = icmp sgt i32 %34, 33554431
  br i1 %37, label %42, label %38

38:                                               ; preds = %26
  %39 = icmp slt i32 %34, -33554432
  %40 = shl i32 %34, 6
  %41 = select i1 %39, i32 -2147483648, i32 %40
  br label %42

42:                                               ; preds = %38, %26
  %43 = phi i32 [ 2147483647, %26 ], [ %41, %38 ]
  %44 = icmp sgt i32 %36, 33554431
  br i1 %44, label %50, label %45

45:                                               ; preds = %42
  %46 = icmp slt i32 %36, -33554432
  %47 = shl nuw nsw i64 %35, 6
  %48 = trunc i64 %47 to i32
  %49 = select i1 %46, i32 -2147483648, i32 %48
  br label %50

50:                                               ; preds = %45, %42
  %51 = phi i32 [ 2147483647, %42 ], [ %49, %45 ]
  %52 = load i64 (%"class.blink::ScrollableArea"*)**, i64 (%"class.blink::ScrollableArea"*)*** %29, align 8
  %53 = getelementptr inbounds i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %52, i64 46
  %54 = load i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %53, align 8
  %55 = call i64 %54(%"class.blink::ScrollableArea"* %28) #10
  %56 = trunc i64 %55 to i32
  %57 = lshr i64 %55, 32
  %58 = trunc i64 %57 to i32
  %59 = icmp sgt i32 %56, 33554431
  br i1 %59, label %64, label %60

60:                                               ; preds = %50
  %61 = icmp slt i32 %56, -33554432
  %62 = shl i32 %56, 6
  %63 = select i1 %61, i32 -2147483648, i32 %62
  br label %64

64:                                               ; preds = %60, %50
  %65 = phi i32 [ 2147483647, %50 ], [ %63, %60 ]
  %66 = icmp sgt i32 %58, 33554431
  br i1 %66, label %72, label %67

67:                                               ; preds = %64
  %68 = icmp slt i32 %58, -33554432
  %69 = shl nuw nsw i64 %57, 6
  %70 = trunc i64 %69 to i32
  %71 = select i1 %68, i32 -2147483648, i32 %70
  br label %72

72:                                               ; preds = %67, %64
  %73 = phi i32 [ 2147483647, %64 ], [ %71, %67 ]
  %74 = bitcast %"class.blink::ScrollableArea"* %28 to { i64, i64 } (%"class.blink::ScrollableArea"*, i32)***
  %75 = load { i64, i64 } (%"class.blink::ScrollableArea"*, i32)**, { i64, i64 } (%"class.blink::ScrollableArea"*, i32)*** %74, align 8
  %76 = getelementptr inbounds { i64, i64 } (%"class.blink::ScrollableArea"*, i32)*, { i64, i64 } (%"class.blink::ScrollableArea"*, i32)** %75, i64 52
  %77 = load { i64, i64 } (%"class.blink::ScrollableArea"*, i32)*, { i64, i64 } (%"class.blink::ScrollableArea"*, i32)** %76, align 8
  %78 = call { i64, i64 } %77(%"class.blink::ScrollableArea"* %28, i32 1) #10
  %79 = extractvalue { i64, i64 } %78, 1
  %80 = trunc i64 %79 to i32
  %81 = lshr i64 %79, 32
  %82 = trunc i64 %81 to i32
  %83 = icmp sgt i32 %80, 33554431
  br i1 %83, label %88, label %84

84:                                               ; preds = %72
  %85 = icmp slt i32 %80, -33554432
  %86 = shl i32 %80, 6
  %87 = select i1 %85, i32 -2147483648, i32 %86
  br label %88

88:                                               ; preds = %84, %72
  %89 = phi i32 [ 2147483647, %72 ], [ %87, %84 ]
  %90 = icmp sgt i32 %82, 33554431
  br i1 %90, label %96, label %91

91:                                               ; preds = %88
  %92 = icmp slt i32 %82, -33554432
  br i1 %92, label %96, label %93

93:                                               ; preds = %91
  %94 = shl nuw nsw i64 %81, 6
  %95 = trunc i64 %94 to i32
  br label %96

96:                                               ; preds = %91, %88, %93
  %97 = phi i32 [ %95, %93 ], [ 2147483647, %88 ], [ -2147483648, %91 ]
  switch i32 %1, label %118 [
    i32 4, label %98
    i32 1, label %100
    i32 2, label %102
    i32 3, label %110
  ]

98:                                               ; preds = %96
  %99 = icmp sgt i32 %65, 0
  br label %118

100:                                              ; preds = %96
  %101 = icmp sgt i32 %73, 0
  br label %118

102:                                              ; preds = %96
  %103 = icmp slt i32 %65, 0
  %104 = select i1 %103, i32 -2147483648, i32 2147483647
  %105 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %89, i32 %65) #10
  %106 = extractvalue { i32, i1 } %105, 1
  %107 = extractvalue { i32, i1 } %105, 0
  %108 = select i1 %106, i32 %104, i32 %107, !prof !2
  %109 = icmp slt i32 %108, %43
  br label %118

110:                                              ; preds = %96
  %111 = icmp slt i32 %73, 0
  %112 = select i1 %111, i32 -2147483648, i32 2147483647
  %113 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %97, i32 %73) #10
  %114 = extractvalue { i32, i1 } %113, 1
  %115 = extractvalue { i32, i1 } %113, 0
  %116 = select i1 %114, i32 %112, i32 %115, !prof !2
  %117 = icmp slt i32 %116, %51
  br label %118

118:                                              ; preds = %98, %100, %102, %110, %96, %20, %11
  %119 = phi i1 [ false, %11 ], [ false, %20 ], [ %117, %110 ], [ %109, %102 ], [ %101, %100 ], [ %99, %98 ], [ false, %96 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #10
  br label %120

120:                                              ; preds = %118, %8, %2
  %121 = phi i1 [ false, %2 ], [ %119, %118 ], [ false, %8 ]
  ret i1 %121
}

declare %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"*) local_unnamed_addr #2

declare i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

declare i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

declare %"class.blink::LayoutView"* @_ZNK5blink10LocalFrame19ContentLayoutObjectEv(%"class.blink::LocalFrame"*) local_unnamed_addr #2

declare void @_ZNK5blink10LayoutView23CalculateScrollbarModesERNS_5mojom13ScrollbarModeES3_(%"class.blink::LayoutView"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12PhysicalRect13ContractEdgesENS_10LayoutUnitES1_S1_S1_(%"struct.blink::PhysicalRect"*, i32, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = tail call i1 @llvm.is.constant.i32(i32 %1) #10
  br i1 %6, label %7, label %11

7:                                                ; preds = %5
  %8 = sub i32 0, %1
  %9 = icmp eq i32 %8, -2147483648
  %10 = select i1 %9, i32 2147483647, i32 %8
  br label %16

11:                                               ; preds = %5
  %12 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %1) #10
  %13 = extractvalue { i32, i1 } %12, 1
  %14 = extractvalue { i32, i1 } %12, 0
  %15 = select i1 %13, i32 2147483647, i32 %14
  br label %16

16:                                               ; preds = %7, %11
  %17 = phi i32 [ %10, %7 ], [ %15, %11 ]
  %18 = tail call i1 @llvm.is.constant.i32(i32 %2) #10
  br i1 %18, label %19, label %23

19:                                               ; preds = %16
  %20 = sub i32 0, %2
  %21 = icmp eq i32 %20, -2147483648
  %22 = select i1 %21, i32 2147483647, i32 %20
  br label %28

23:                                               ; preds = %16
  %24 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %2) #10
  %25 = extractvalue { i32, i1 } %24, 1
  %26 = extractvalue { i32, i1 } %24, 0
  %27 = select i1 %25, i32 2147483647, i32 %26
  br label %28

28:                                               ; preds = %19, %23
  %29 = phi i32 [ %22, %19 ], [ %27, %23 ]
  %30 = tail call i1 @llvm.is.constant.i32(i32 %3) #10
  br i1 %30, label %31, label %35

31:                                               ; preds = %28
  %32 = sub i32 0, %3
  %33 = icmp eq i32 %32, -2147483648
  %34 = select i1 %33, i32 2147483647, i32 %32
  br label %40

35:                                               ; preds = %28
  %36 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %3) #10
  %37 = extractvalue { i32, i1 } %36, 1
  %38 = extractvalue { i32, i1 } %36, 0
  %39 = select i1 %37, i32 2147483647, i32 %38
  br label %40

40:                                               ; preds = %31, %35
  %41 = phi i32 [ %34, %31 ], [ %39, %35 ]
  %42 = tail call i1 @llvm.is.constant.i32(i32 %4) #10
  br i1 %42, label %43, label %47

43:                                               ; preds = %40
  %44 = sub i32 0, %4
  %45 = icmp eq i32 %44, -2147483648
  %46 = select i1 %45, i32 2147483647, i32 %44
  br label %52

47:                                               ; preds = %40
  %48 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %4) #10
  %49 = extractvalue { i32, i1 } %48, 1
  %50 = extractvalue { i32, i1 } %48, 0
  %51 = select i1 %49, i32 2147483647, i32 %50
  br label %52

52:                                               ; preds = %43, %47
  %53 = phi i32 [ %46, %43 ], [ %51, %47 ]
  %54 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %0, i64 0, i32 0, i32 1, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp sgt i32 %17, -1
  %57 = select i1 %56, i32 -2147483648, i32 2147483647
  %58 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %55, i32 %17) #10
  %59 = extractvalue { i32, i1 } %58, 1
  %60 = extractvalue { i32, i1 } %58, 0
  %61 = select i1 %59, i32 %57, i32 %60, !prof !2
  store i32 %61, i32* %54, align 4
  %62 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %0, i64 0, i32 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp sgt i32 %53, -1
  %65 = select i1 %64, i32 -2147483648, i32 2147483647
  %66 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %63, i32 %53) #10
  %67 = extractvalue { i32, i1 } %66, 1
  %68 = extractvalue { i32, i1 } %66, 0
  %69 = select i1 %67, i32 %65, i32 %68, !prof !2
  store i32 %69, i32* %62, align 4
  %70 = icmp slt i32 %29, 0
  %71 = select i1 %70, i32 -2147483648, i32 2147483647
  %72 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %53, i32 %29) #10
  %73 = extractvalue { i32, i1 } %72, 1
  %74 = extractvalue { i32, i1 } %72, 0
  %75 = select i1 %73, i32 %71, i32 %74, !prof !2
  %76 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %0, i64 0, i32 1, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp slt i32 %75, 0
  %79 = select i1 %78, i32 -2147483648, i32 2147483647
  %80 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %77, i32 %75) #10
  %81 = extractvalue { i32, i1 } %80, 1
  %82 = extractvalue { i32, i1 } %80, 0
  %83 = select i1 %81, i32 %79, i32 %82, !prof !2
  store i32 %83, i32* %76, align 4
  %84 = icmp slt i32 %41, 0
  %85 = select i1 %84, i32 -2147483648, i32 2147483647
  %86 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %17, i32 %41) #10
  %87 = extractvalue { i32, i1 } %86, 1
  %88 = extractvalue { i32, i1 } %86, 0
  %89 = select i1 %87, i32 %85, i32 %88, !prof !2
  %90 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %0, i64 0, i32 1, i32 1, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = icmp slt i32 %89, 0
  %93 = select i1 %92, i32 -2147483648, i32 2147483647
  %94 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %91, i32 %89) #10
  %95 = extractvalue { i32, i1 } %94, 1
  %96 = extractvalue { i32, i1 } %94, 0
  %97 = select i1 %95, i32 %93, i32 %96, !prof !2
  store i32 %97, i32* %90, align 4
  ret void
}

declare zeroext i1 @_ZNK5blink12LayoutObject30MapToVisualRectInAncestorSpaceEPKNS_20LayoutBoxModelObjectERNS_12PhysicalRectENS_15VisualRectFlagsE(%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"struct.blink::PhysicalRect"* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30EntryAndExitPointsForDirectionENS_26SpatialNavigationDirectionERKNS_12PhysicalRectES3_RNS_11LayoutPointES5_(i32, %"struct.blink::PhysicalRect"* readonly dereferenceable(16), %"struct.blink::PhysicalRect"* readonly dereferenceable(16), %"class.blink::LayoutPoint"* nocapture dereferenceable(8), %"class.blink::LayoutPoint"* nocapture dereferenceable(8)) local_unnamed_addr #0 {
  switch i32 %0, label %344 [
    i32 4, label %6
    i32 1, label %25
    i32 2, label %44
    i32 3, label %70
  ]

6:                                                ; preds = %5
  %7 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %3, i64 0, i32 0, i32 0
  store i32 %8, i32* %9, align 4
  %10 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 1, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp slt i32 %13, 0
  %15 = select i1 %14, i32 -2147483648, i32 2147483647
  %16 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %11, i32 %13) #10
  %17 = extractvalue { i32, i1 } %16, 1
  %18 = extractvalue { i32, i1 } %16, 0
  %19 = select i1 %17, i32 %15, i32 %18, !prof !2
  %20 = load i32, i32* %7, align 4
  %21 = icmp slt i32 %19, %20
  %22 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %4, i64 0, i32 0, i32 0
  br i1 %21, label %23, label %24

23:                                               ; preds = %6
  store i32 %19, i32* %22, align 4
  br label %96

24:                                               ; preds = %6
  store i32 %20, i32* %22, align 4
  br label %96

25:                                               ; preds = %5
  %26 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 1, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %3, i64 0, i32 1, i32 0
  store i32 %27, i32* %28, align 4
  %29 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 0, i32 1, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 1, i32 1, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, 0
  %34 = select i1 %33, i32 -2147483648, i32 2147483647
  %35 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %30, i32 %32) #10
  %36 = extractvalue { i32, i1 } %35, 1
  %37 = extractvalue { i32, i1 } %35, 0
  %38 = select i1 %36, i32 %34, i32 %37, !prof !2
  %39 = load i32, i32* %26, align 4
  %40 = icmp slt i32 %38, %39
  %41 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %4, i64 0, i32 1, i32 0
  br i1 %40, label %42, label %43

42:                                               ; preds = %25
  store i32 %38, i32* %41, align 4
  br label %220

43:                                               ; preds = %25
  store i32 %39, i32* %41, align 4
  br label %220

44:                                               ; preds = %5
  %45 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp slt i32 %48, 0
  %50 = select i1 %49, i32 -2147483648, i32 2147483647
  %51 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %46, i32 %48) #10
  %52 = extractvalue { i32, i1 } %51, 1
  %53 = extractvalue { i32, i1 } %51, 0
  %54 = select i1 %52, i32 %50, i32 %53, !prof !2
  %55 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %3, i64 0, i32 0, i32 0
  store i32 %54, i32* %55, align 4
  %56 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = load i32, i32* %45, align 4
  %59 = load i32, i32* %47, align 4
  %60 = icmp slt i32 %59, 0
  %61 = select i1 %60, i32 -2147483648, i32 2147483647
  %62 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %58, i32 %59) #10
  %63 = extractvalue { i32, i1 } %62, 1
  %64 = extractvalue { i32, i1 } %62, 0
  %65 = select i1 %63, i32 %61, i32 %64, !prof !2
  %66 = icmp sgt i32 %57, %65
  %67 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %4, i64 0, i32 0, i32 0
  br i1 %66, label %68, label %69

68:                                               ; preds = %44
  store i32 %57, i32* %67, align 4
  br label %96

69:                                               ; preds = %44
  store i32 %65, i32* %67, align 4
  br label %96

70:                                               ; preds = %5
  %71 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 1, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 1, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = icmp slt i32 %74, 0
  %76 = select i1 %75, i32 -2147483648, i32 2147483647
  %77 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %72, i32 %74) #10
  %78 = extractvalue { i32, i1 } %77, 1
  %79 = extractvalue { i32, i1 } %77, 0
  %80 = select i1 %78, i32 %76, i32 %79, !prof !2
  %81 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %3, i64 0, i32 1, i32 0
  store i32 %80, i32* %81, align 4
  %82 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 0, i32 1, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = load i32, i32* %71, align 4
  %85 = load i32, i32* %73, align 4
  %86 = icmp slt i32 %85, 0
  %87 = select i1 %86, i32 -2147483648, i32 2147483647
  %88 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %84, i32 %85) #10
  %89 = extractvalue { i32, i1 } %88, 1
  %90 = extractvalue { i32, i1 } %88, 0
  %91 = select i1 %89, i32 %87, i32 %90, !prof !2
  %92 = icmp sgt i32 %83, %91
  %93 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %4, i64 0, i32 1, i32 0
  br i1 %92, label %94, label %95

94:                                               ; preds = %70
  store i32 %83, i32* %93, align 4
  br label %220

95:                                               ; preds = %70
  store i32 %91, i32* %93, align 4
  br label %220

96:                                               ; preds = %68, %69, %23, %24
  %97 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 1, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 0, i32 1, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 1, i32 1, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = icmp slt i32 %102, 0
  %104 = select i1 %103, i32 -2147483648, i32 2147483647
  %105 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %100, i32 %102) #10
  %106 = extractvalue { i32, i1 } %105, 1
  %107 = extractvalue { i32, i1 } %105, 0
  %108 = select i1 %106, i32 %104, i32 %107, !prof !2
  %109 = icmp slt i32 %98, %108
  br i1 %109, label %110, label %150

110:                                              ; preds = %96
  %111 = icmp slt i32 %98, %100
  %112 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 1, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %118

114:                                              ; preds = %110
  %115 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %98, i32 %113) #10
  %116 = extractvalue { i32, i1 } %115, 1
  %117 = extractvalue { i32, i1 } %115, 0
  br label %165

118:                                              ; preds = %110
  %119 = icmp slt i32 %113, 0
  %120 = select i1 %119, i32 -2147483648, i32 2147483647
  %121 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %98, i32 %113) #10
  %122 = extractvalue { i32, i1 } %121, 1
  %123 = extractvalue { i32, i1 } %121, 0
  %124 = select i1 %122, i32 %120, i32 %123, !prof !2
  %125 = icmp sgt i32 %124, %108
  br i1 %125, label %126, label %165

126:                                              ; preds = %118
  %127 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 0, i32 0, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 1, i32 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = icmp slt i32 %132, 0
  %134 = select i1 %133, i32 -2147483648, i32 2147483647
  %135 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %130, i32 %132) #10
  %136 = extractvalue { i32, i1 } %135, 1
  %137 = extractvalue { i32, i1 } %135, 0
  %138 = select i1 %136, i32 %134, i32 %137, !prof !2
  %139 = icmp slt i32 %128, %138
  br i1 %139, label %140, label %165

140:                                              ; preds = %126
  %141 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 0, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = icmp slt i32 %142, 0
  %144 = select i1 %143, i32 -2147483648, i32 2147483647
  %145 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %128, i32 %142) #10
  %146 = extractvalue { i32, i1 } %145, 1
  %147 = extractvalue { i32, i1 } %145, 0
  %148 = select i1 %146, i32 %144, i32 %147, !prof !2
  %149 = icmp sgt i32 %148, %130
  br i1 %149, label %150, label %165

150:                                              ; preds = %96, %140
  %151 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %3, i64 0, i32 1, i32 0
  store i32 %98, i32* %151, align 4
  %152 = load i32, i32* %99, align 4
  %153 = load i32, i32* %101, align 4
  %154 = icmp slt i32 %153, 0
  %155 = select i1 %154, i32 -2147483648, i32 2147483647
  %156 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %152, i32 %153) #10
  %157 = extractvalue { i32, i1 } %156, 1
  %158 = extractvalue { i32, i1 } %156, 0
  %159 = select i1 %157, i32 %155, i32 %158, !prof !2
  %160 = load i32, i32* %97, align 4
  %161 = icmp slt i32 %159, %160
  %162 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %4, i64 0, i32 1, i32 0
  br i1 %161, label %163, label %164

163:                                              ; preds = %150
  store i32 %159, i32* %162, align 4
  br label %344

164:                                              ; preds = %150
  store i32 %160, i32* %162, align 4
  br label %344

165:                                              ; preds = %114, %118, %126, %140
  %166 = phi i32 [ %117, %114 ], [ %123, %118 ], [ %123, %126 ], [ %123, %140 ]
  %167 = phi i1 [ %116, %114 ], [ %122, %118 ], [ %122, %126 ], [ %122, %140 ]
  %168 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 1, i32 0
  %169 = icmp slt i32 %113, 0
  %170 = select i1 %169, i32 -2147483648, i32 2147483647
  %171 = select i1 %167, i32 %170, i32 %166, !prof !2
  %172 = icmp slt i32 %100, %171
  br i1 %172, label %173, label %201

173:                                              ; preds = %165
  %174 = icmp sge i32 %100, %98
  %175 = icmp sgt i32 %108, %171
  %176 = and i1 %174, %175
  br i1 %176, label %177, label %216

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 0, i32 0, i32 0
  %179 = load i32, i32* %178, align 4
  %180 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 0, i32 0
  %181 = load i32, i32* %180, align 4
  %182 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 0, i32 0
  %183 = load i32, i32* %182, align 4
  %184 = icmp slt i32 %183, 0
  %185 = select i1 %184, i32 -2147483648, i32 2147483647
  %186 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %181, i32 %183) #10
  %187 = extractvalue { i32, i1 } %186, 1
  %188 = extractvalue { i32, i1 } %186, 0
  %189 = select i1 %187, i32 %185, i32 %188, !prof !2
  %190 = icmp slt i32 %179, %189
  br i1 %190, label %191, label %216

191:                                              ; preds = %177
  %192 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 1, i32 0, i32 0
  %193 = load i32, i32* %192, align 4
  %194 = icmp slt i32 %193, 0
  %195 = select i1 %194, i32 -2147483648, i32 2147483647
  %196 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %179, i32 %193) #10
  %197 = extractvalue { i32, i1 } %196, 1
  %198 = extractvalue { i32, i1 } %196, 0
  %199 = select i1 %197, i32 %195, i32 %198, !prof !2
  %200 = icmp sgt i32 %199, %181
  br i1 %200, label %201, label %216

201:                                              ; preds = %165, %191
  %202 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %3, i64 0, i32 1, i32 0
  store i32 %171, i32* %202, align 4
  %203 = load i32, i32* %99, align 4
  %204 = load i32, i32* %97, align 4
  %205 = load i32, i32* %168, align 4
  %206 = icmp slt i32 %205, 0
  %207 = select i1 %206, i32 -2147483648, i32 2147483647
  %208 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %204, i32 %205) #10
  %209 = extractvalue { i32, i1 } %208, 1
  %210 = extractvalue { i32, i1 } %208, 0
  %211 = select i1 %209, i32 %207, i32 %210, !prof !2
  %212 = icmp sgt i32 %203, %211
  %213 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %4, i64 0, i32 1, i32 0
  br i1 %212, label %214, label %215

214:                                              ; preds = %201
  store i32 %203, i32* %213, align 4
  br label %344

215:                                              ; preds = %201
  store i32 %211, i32* %213, align 4
  br label %344

216:                                              ; preds = %173, %177, %191
  %217 = select i1 %111, i32 %100, i32 %98
  %218 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %3, i64 0, i32 1, i32 0
  store i32 %217, i32* %218, align 4
  %219 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %4, i64 0, i32 1, i32 0
  store i32 %217, i32* %219, align 4
  br label %344

220:                                              ; preds = %43, %42, %95, %94
  %221 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 0, i32 0
  %222 = load i32, i32* %221, align 4
  %223 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 0, i32 0, i32 0
  %224 = load i32, i32* %223, align 4
  %225 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 1, i32 0, i32 0
  %226 = load i32, i32* %225, align 4
  %227 = icmp slt i32 %226, 0
  %228 = select i1 %227, i32 -2147483648, i32 2147483647
  %229 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %224, i32 %226) #10
  %230 = extractvalue { i32, i1 } %229, 1
  %231 = extractvalue { i32, i1 } %229, 0
  %232 = select i1 %230, i32 %228, i32 %231, !prof !2
  %233 = icmp slt i32 %222, %232
  br i1 %233, label %234, label %274

234:                                              ; preds = %220
  %235 = icmp slt i32 %222, %224
  %236 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 0, i32 0
  %237 = load i32, i32* %236, align 4
  br i1 %235, label %238, label %242

238:                                              ; preds = %234
  %239 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %222, i32 %237) #10
  %240 = extractvalue { i32, i1 } %239, 1
  %241 = extractvalue { i32, i1 } %239, 0
  br label %289

242:                                              ; preds = %234
  %243 = icmp slt i32 %237, 0
  %244 = select i1 %243, i32 -2147483648, i32 2147483647
  %245 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %222, i32 %237) #10
  %246 = extractvalue { i32, i1 } %245, 1
  %247 = extractvalue { i32, i1 } %245, 0
  %248 = select i1 %246, i32 %244, i32 %247, !prof !2
  %249 = icmp sgt i32 %248, %232
  br i1 %249, label %250, label %289

250:                                              ; preds = %242
  %251 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 1, i32 0
  %252 = load i32, i32* %251, align 4
  %253 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 0, i32 1, i32 0
  %254 = load i32, i32* %253, align 4
  %255 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 1, i32 1, i32 0
  %256 = load i32, i32* %255, align 4
  %257 = icmp slt i32 %256, 0
  %258 = select i1 %257, i32 -2147483648, i32 2147483647
  %259 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %254, i32 %256) #10
  %260 = extractvalue { i32, i1 } %259, 1
  %261 = extractvalue { i32, i1 } %259, 0
  %262 = select i1 %260, i32 %258, i32 %261, !prof !2
  %263 = icmp slt i32 %252, %262
  br i1 %263, label %264, label %289

264:                                              ; preds = %250
  %265 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 1, i32 0
  %266 = load i32, i32* %265, align 4
  %267 = icmp slt i32 %266, 0
  %268 = select i1 %267, i32 -2147483648, i32 2147483647
  %269 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %252, i32 %266) #10
  %270 = extractvalue { i32, i1 } %269, 1
  %271 = extractvalue { i32, i1 } %269, 0
  %272 = select i1 %270, i32 %268, i32 %271, !prof !2
  %273 = icmp sgt i32 %272, %254
  br i1 %273, label %274, label %289

274:                                              ; preds = %220, %264
  %275 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %3, i64 0, i32 0, i32 0
  store i32 %222, i32* %275, align 4
  %276 = load i32, i32* %223, align 4
  %277 = load i32, i32* %225, align 4
  %278 = icmp slt i32 %277, 0
  %279 = select i1 %278, i32 -2147483648, i32 2147483647
  %280 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %276, i32 %277) #10
  %281 = extractvalue { i32, i1 } %280, 1
  %282 = extractvalue { i32, i1 } %280, 0
  %283 = select i1 %281, i32 %279, i32 %282, !prof !2
  %284 = load i32, i32* %221, align 4
  %285 = icmp slt i32 %283, %284
  %286 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %4, i64 0, i32 0, i32 0
  br i1 %285, label %287, label %288

287:                                              ; preds = %274
  store i32 %283, i32* %286, align 4
  br label %344

288:                                              ; preds = %274
  store i32 %284, i32* %286, align 4
  br label %344

289:                                              ; preds = %238, %242, %250, %264
  %290 = phi i32 [ %241, %238 ], [ %247, %242 ], [ %247, %250 ], [ %247, %264 ]
  %291 = phi i1 [ %240, %238 ], [ %246, %242 ], [ %246, %250 ], [ %246, %264 ]
  %292 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 0, i32 0
  %293 = icmp slt i32 %237, 0
  %294 = select i1 %293, i32 -2147483648, i32 2147483647
  %295 = select i1 %291, i32 %294, i32 %290, !prof !2
  %296 = icmp slt i32 %224, %295
  br i1 %296, label %297, label %325

297:                                              ; preds = %289
  %298 = icmp sge i32 %224, %222
  %299 = icmp sgt i32 %232, %295
  %300 = and i1 %298, %299
  br i1 %300, label %301, label %340

301:                                              ; preds = %297
  %302 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 0, i32 1, i32 0
  %303 = load i32, i32* %302, align 4
  %304 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 1, i32 0
  %305 = load i32, i32* %304, align 4
  %306 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 1, i32 0
  %307 = load i32, i32* %306, align 4
  %308 = icmp slt i32 %307, 0
  %309 = select i1 %308, i32 -2147483648, i32 2147483647
  %310 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %305, i32 %307) #10
  %311 = extractvalue { i32, i1 } %310, 1
  %312 = extractvalue { i32, i1 } %310, 0
  %313 = select i1 %311, i32 %309, i32 %312, !prof !2
  %314 = icmp slt i32 %303, %313
  br i1 %314, label %315, label %340

315:                                              ; preds = %301
  %316 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 1, i32 1, i32 0
  %317 = load i32, i32* %316, align 4
  %318 = icmp slt i32 %317, 0
  %319 = select i1 %318, i32 -2147483648, i32 2147483647
  %320 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %303, i32 %317) #10
  %321 = extractvalue { i32, i1 } %320, 1
  %322 = extractvalue { i32, i1 } %320, 0
  %323 = select i1 %321, i32 %319, i32 %322, !prof !2
  %324 = icmp sgt i32 %323, %305
  br i1 %324, label %325, label %340

325:                                              ; preds = %289, %315
  %326 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %3, i64 0, i32 0, i32 0
  store i32 %295, i32* %326, align 4
  %327 = load i32, i32* %223, align 4
  %328 = load i32, i32* %221, align 4
  %329 = load i32, i32* %292, align 4
  %330 = icmp slt i32 %329, 0
  %331 = select i1 %330, i32 -2147483648, i32 2147483647
  %332 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %328, i32 %329) #10
  %333 = extractvalue { i32, i1 } %332, 1
  %334 = extractvalue { i32, i1 } %332, 0
  %335 = select i1 %333, i32 %331, i32 %334, !prof !2
  %336 = icmp sgt i32 %327, %335
  %337 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %4, i64 0, i32 0, i32 0
  br i1 %336, label %338, label %339

338:                                              ; preds = %325
  store i32 %327, i32* %337, align 4
  br label %344

339:                                              ; preds = %325
  store i32 %335, i32* %337, align 4
  br label %344

340:                                              ; preds = %297, %301, %315
  %341 = select i1 %235, i32 %224, i32 %222
  %342 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %3, i64 0, i32 0, i32 0
  store i32 %341, i32* %342, align 4
  %343 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %4, i64 0, i32 0, i32 0
  store i32 %341, i32* %343, align 4
  br label %344

344:                                              ; preds = %5, %288, %287, %338, %339, %340, %164, %163, %214, %215, %216
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZN5blink16ProjectedOverlapENS_26SpatialNavigationDirectionENS_12PhysicalRectES1_(i32, i64, i64, i64, i64) local_unnamed_addr #0 {
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"struct.blink::PhysicalRect"*
  %8 = alloca { i64, i64 }, align 8
  %9 = bitcast { i64, i64 }* %8 to %"struct.blink::PhysicalRect"*
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %1, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %2, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  store i64 %3, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  store i64 %4, i64* %13, align 8
  switch i32 %0, label %31 [
    i32 4, label %14
    i32 2, label %14
    i32 1, label %22
    i32 3, label %22
  ]

14:                                               ; preds = %5, %5
  %15 = trunc i64 %1 to i32
  %16 = bitcast i64* %11 to i32*
  store i32 64, i32* %16, align 8
  %17 = bitcast { i64, i64 }* %8 to i32*
  store i32 %15, i32* %17, align 8
  call void @_ZN5blink12PhysicalRect9IntersectERKS0_(%"struct.blink::PhysicalRect"* nonnull %7, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %9) #10
  %18 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %7, i64 0, i32 1, i32 1, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = sitofp i32 %19 to double
  %21 = fmul double %20, 1.562500e-02
  br label %31

22:                                               ; preds = %5, %5
  %23 = lshr i64 %1, 32
  %24 = trunc i64 %23 to i32
  %25 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %7, i64 0, i32 1, i32 1, i32 0
  store i32 64, i32* %25, align 4
  %26 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %9, i64 0, i32 0, i32 1, i32 0
  store i32 %24, i32* %26, align 4
  call void @_ZN5blink12PhysicalRect9IntersectERKS0_(%"struct.blink::PhysicalRect"* nonnull %7, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %9) #10
  %27 = bitcast i64* %11 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = sitofp i32 %28 to double
  %30 = fmul double %29, 1.562500e-02
  br label %31

31:                                               ; preds = %5, %22, %14
  %32 = phi double [ %30, %22 ], [ %21, %14 ], [ 0x7FEFFFFFFFFFFFFF, %5 ]
  ret double %32
}

declare void @_ZN5blink12PhysicalRect9IntersectERKS0_(%"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZN5blink9AlignmentENS_26SpatialNavigationDirectionENS_12PhysicalRectES1_(i32, i64, i64, i64, i64) local_unnamed_addr #0 {
  %6 = alloca { i64, i64 }, align 8
  %7 = alloca { i64, i64 }, align 8
  %8 = trunc i64 %2 to i32
  %9 = lshr i64 %2, 32
  %10 = trunc i64 %9 to i32
  %11 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11)
  %12 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12)
  %13 = bitcast { i64, i64 }* %6 to %"struct.blink::PhysicalRect"*
  %14 = bitcast { i64, i64 }* %7 to %"struct.blink::PhysicalRect"*
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %1, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %2, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  store i64 %3, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  store i64 %4, i64* %18, align 8
  switch i32 %0, label %36 [
    i32 4, label %19
    i32 2, label %19
    i32 1, label %27
    i32 3, label %27
  ]

19:                                               ; preds = %5, %5
  %20 = trunc i64 %1 to i32
  %21 = bitcast i64* %16 to i32*
  store i32 64, i32* %21, align 8
  %22 = bitcast { i64, i64 }* %7 to i32*
  store i32 %20, i32* %22, align 8
  call void @_ZN5blink12PhysicalRect9IntersectERKS0_(%"struct.blink::PhysicalRect"* nonnull %13, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %14) #10
  %23 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %13, i64 0, i32 1, i32 1, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = sitofp i32 %24 to double
  %26 = fmul double %25, 1.562500e-02
  br label %36

27:                                               ; preds = %5, %5
  %28 = lshr i64 %1, 32
  %29 = trunc i64 %28 to i32
  %30 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %13, i64 0, i32 1, i32 1, i32 0
  store i32 64, i32* %30, align 4
  %31 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %14, i64 0, i32 0, i32 1, i32 0
  store i32 %29, i32* %31, align 4
  call void @_ZN5blink12PhysicalRect9IntersectERKS0_(%"struct.blink::PhysicalRect"* nonnull %13, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %14) #10
  %32 = bitcast i64* %16 to i32*
  %33 = load i32, i32* %32, align 8
  %34 = sitofp i32 %33 to double
  %35 = fmul double %34, 1.562500e-02
  br label %36

36:                                               ; preds = %5, %19, %27
  %37 = phi double [ %35, %27 ], [ %26, %19 ], [ 0x7FEFFFFFFFFFFFFF, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12)
  switch i32 %0, label %48 [
    i32 4, label %38
    i32 2, label %38
    i32 1, label %43
    i32 3, label %43
  ]

38:                                               ; preds = %36, %36
  %39 = fmul double %37, 5.000000e+00
  %40 = sitofp i32 %10 to double
  %41 = fmul double %40, 1.562500e-02
  %42 = fdiv double %39, %41
  br label %48

43:                                               ; preds = %36, %36
  %44 = fmul double %37, 5.000000e+00
  %45 = sitofp i32 %8 to double
  %46 = fmul double %45, 1.562500e-02
  %47 = fdiv double %44, %46
  br label %48

48:                                               ; preds = %36, %43, %38
  %49 = phi double [ %47, %43 ], [ %42, %38 ], [ 0x7FEFFFFFFFFFFFFF, %36 ]
  ret double %49
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink40BothOnTopmostPaintLayerInStackingContextERKNS_14FocusCandidateES2_(%"struct.blink::FocusCandidate"* nocapture readonly dereferenceable(40), %"struct.blink::FocusCandidate"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.blink::FocusCandidate", %"struct.blink::FocusCandidate"* %0, i64 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %56, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 0, i32 6, i32 0, i32 0
  br i1 %10, label %16, label %12

12:                                               ; preds = %6
  %13 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRareData"**
  %14 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %14, i64 0, i32 1, i32 0, i32 0
  br label %18

16:                                               ; preds = %6
  %17 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRenderingData"**
  br label %18

18:                                               ; preds = %12, %16
  %19 = phi %"class.blink::NodeRenderingData"** [ %15, %12 ], [ %17, %16 ]
  %20 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %20, i64 0, i32 1
  %22 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %21, align 8
  %23 = tail call %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject13PaintingLayerEv(%"class.blink::LayoutObject"* %22) #10
  %24 = icmp eq %"class.blink::PaintLayer"* %23, null
  br i1 %24, label %56, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %23, i64 0, i32 1
  %27 = bitcast [6 x i8]* %26 to i48*
  %28 = load i48, i48* %27, align 1
  %29 = and i48 %28, 2
  %30 = icmp eq i48 %29, 0
  br i1 %30, label %31, label %56

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"struct.blink::FocusCandidate", %"struct.blink::FocusCandidate"* %1, i64 0, i32 0
  %33 = load %"class.blink::Node"*, %"class.blink::Node"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %33, i64 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %33, i64 0, i32 6, i32 0, i32 0
  br i1 %37, label %43, label %39

39:                                               ; preds = %31
  %40 = bitcast %"class.blink::NodeData"** %38 to %"class.blink::NodeRareData"**
  %41 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %41, i64 0, i32 1, i32 0, i32 0
  br label %45

43:                                               ; preds = %31
  %44 = bitcast %"class.blink::NodeData"** %38 to %"class.blink::NodeRenderingData"**
  br label %45

45:                                               ; preds = %39, %43
  %46 = phi %"class.blink::NodeRenderingData"** [ %42, %39 ], [ %44, %43 ]
  %47 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %47, i64 0, i32 1
  %49 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %48, align 8
  %50 = tail call %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject13PaintingLayerEv(%"class.blink::LayoutObject"* %49) #10
  %51 = icmp eq %"class.blink::PaintLayer"* %23, %50
  br i1 %51, label %52, label %56

52:                                               ; preds = %45
  %53 = load i48, i48* %27, align 1
  %54 = and i48 %53, 32
  %55 = icmp eq i48 %54, 0
  br label %56

56:                                               ; preds = %25, %18, %45, %52, %2
  %57 = phi i1 [ false, %2 ], [ false, %18 ], [ false, %25 ], [ %55, %52 ], [ false, %45 ]
  ret i1 %57
}

declare %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject13PaintingLayerEv(%"class.blink::LayoutObject"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZN5blink26ComputeDistanceDataForNodeENS_26SpatialNavigationDirectionERKNS_14FocusCandidateES3_(i32, %"struct.blink::FocusCandidate"* nocapture readonly dereferenceable(40), %"struct.blink::FocusCandidate"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 {
  %4 = alloca %"struct.blink::PhysicalRect", align 8
  %5 = alloca %"struct.blink::PhysicalRect", align 8
  %6 = alloca %"class.blink::LayoutPoint", align 4
  %7 = alloca %"class.blink::LayoutPoint", align 4
  %8 = bitcast %"struct.blink::PhysicalRect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 1, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 1, i32 1, i32 0
  %13 = getelementptr inbounds %"struct.blink::FocusCandidate", %"struct.blink::FocusCandidate"* %2, i64 0, i32 2
  %14 = bitcast %"struct.blink::PhysicalRect"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %14, i64 16, i1 false)
  %15 = bitcast %"struct.blink::PhysicalRect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 0, i32 1, i32 0
  %18 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 1, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 1, i32 1, i32 0
  %20 = getelementptr inbounds %"struct.blink::FocusCandidate", %"struct.blink::FocusCandidate"* %1, i64 0, i32 2
  %21 = bitcast %"struct.blink::PhysicalRect"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 %21, i64 16, i1 false)
  %22 = call zeroext i1 @_ZNK5blink12PhysicalRect8ContainsERKS0_(%"struct.blink::PhysicalRect"* nonnull %4, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %5) #10
  br i1 %22, label %440, label %23

23:                                               ; preds = %3
  %24 = call zeroext i1 @_ZNK5blink12PhysicalRect8ContainsERKS0_(%"struct.blink::PhysicalRect"* nonnull %5, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %4) #10
  br i1 %24, label %25, label %32

25:                                               ; preds = %23
  %26 = call { i64, i64 } @_ZN5blink12OppositeEdgeENS_26SpatialNavigationDirectionERKNS_12PhysicalRectENS_10LayoutUnitE(i32 %0, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %5, i32 0)
  %27 = extractvalue { i64, i64 } %26, 0
  %28 = extractvalue { i64, i64 } %26, 1
  %29 = bitcast %"struct.blink::PhysicalRect"* %5 to i64*
  store i64 %27, i64* %29, align 8
  %30 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 1
  %31 = bitcast %"struct.blink::PhysicalSize"* %30 to i64*
  store i64 %28, i64* %31, align 8
  br label %256

32:                                               ; preds = %23
  switch i32 %0, label %440 [
    i32 4, label %33
    i32 2, label %75
    i32 1, label %117
    i32 3, label %159
  ]

33:                                               ; preds = %32
  %34 = load i32, i32* %16, align 8
  %35 = load i32, i32* %9, align 8
  %36 = load i32, i32* %11, align 8
  %37 = icmp slt i32 %36, 0
  %38 = select i1 %37, i32 -2147483648, i32 2147483647
  %39 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %35, i32 %36) #10
  %40 = extractvalue { i32, i1 } %39, 1
  %41 = extractvalue { i32, i1 } %39, 0
  %42 = select i1 %40, i32 %38, i32 %41, !prof !2
  %43 = icmp slt i32 %34, %42
  br i1 %43, label %44, label %201

44:                                               ; preds = %33
  %45 = icmp slt i32 %34, %35
  br i1 %45, label %440, label %46

46:                                               ; preds = %44
  %47 = load i32, i32* %18, align 8
  %48 = icmp slt i32 %47, 0
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %34, i32 %47) #10
  %51 = extractvalue { i32, i1 } %50, 1
  %52 = extractvalue { i32, i1 } %50, 0
  %53 = select i1 %51, i32 %49, i32 %52, !prof !2
  %54 = icmp sgt i32 %53, %42
  br i1 %54, label %55, label %440

55:                                               ; preds = %46
  %56 = load i32, i32* %17, align 4
  %57 = load i32, i32* %10, align 4
  %58 = load i32, i32* %12, align 4
  %59 = icmp slt i32 %58, 0
  %60 = select i1 %59, i32 -2147483648, i32 2147483647
  %61 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %57, i32 %58) #10
  %62 = extractvalue { i32, i1 } %61, 1
  %63 = extractvalue { i32, i1 } %61, 0
  %64 = select i1 %62, i32 %60, i32 %63, !prof !2
  %65 = icmp slt i32 %56, %64
  br i1 %65, label %66, label %440

66:                                               ; preds = %55
  %67 = load i32, i32* %19, align 4
  %68 = icmp slt i32 %67, 0
  %69 = select i1 %68, i32 -2147483648, i32 2147483647
  %70 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %56, i32 %67) #10
  %71 = extractvalue { i32, i1 } %70, 1
  %72 = extractvalue { i32, i1 } %70, 0
  %73 = select i1 %71, i32 %69, i32 %72, !prof !2
  %74 = icmp sgt i32 %73, %57
  br i1 %74, label %201, label %440

75:                                               ; preds = %32
  %76 = load i32, i32* %9, align 8
  %77 = load i32, i32* %16, align 8
  %78 = load i32, i32* %18, align 8
  %79 = icmp slt i32 %78, 0
  %80 = select i1 %79, i32 -2147483648, i32 2147483647
  %81 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %77, i32 %78) #10
  %82 = extractvalue { i32, i1 } %81, 1
  %83 = extractvalue { i32, i1 } %81, 0
  %84 = select i1 %82, i32 %80, i32 %83, !prof !2
  %85 = icmp slt i32 %76, %84
  br i1 %85, label %86, label %201

86:                                               ; preds = %75
  %87 = icmp slt i32 %76, %77
  br i1 %87, label %440, label %88

88:                                               ; preds = %86
  %89 = load i32, i32* %11, align 8
  %90 = icmp slt i32 %89, 0
  %91 = select i1 %90, i32 -2147483648, i32 2147483647
  %92 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %76, i32 %89) #10
  %93 = extractvalue { i32, i1 } %92, 1
  %94 = extractvalue { i32, i1 } %92, 0
  %95 = select i1 %93, i32 %91, i32 %94, !prof !2
  %96 = icmp sgt i32 %95, %84
  br i1 %96, label %97, label %440

97:                                               ; preds = %88
  %98 = load i32, i32* %10, align 4
  %99 = load i32, i32* %17, align 4
  %100 = load i32, i32* %19, align 4
  %101 = icmp slt i32 %100, 0
  %102 = select i1 %101, i32 -2147483648, i32 2147483647
  %103 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %99, i32 %100) #10
  %104 = extractvalue { i32, i1 } %103, 1
  %105 = extractvalue { i32, i1 } %103, 0
  %106 = select i1 %104, i32 %102, i32 %105, !prof !2
  %107 = icmp slt i32 %98, %106
  br i1 %107, label %108, label %440

108:                                              ; preds = %97
  %109 = load i32, i32* %12, align 4
  %110 = icmp slt i32 %109, 0
  %111 = select i1 %110, i32 -2147483648, i32 2147483647
  %112 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %98, i32 %109) #10
  %113 = extractvalue { i32, i1 } %112, 1
  %114 = extractvalue { i32, i1 } %112, 0
  %115 = select i1 %113, i32 %111, i32 %114, !prof !2
  %116 = icmp sgt i32 %115, %99
  br i1 %116, label %201, label %440

117:                                              ; preds = %32
  %118 = load i32, i32* %17, align 4
  %119 = load i32, i32* %10, align 4
  %120 = load i32, i32* %12, align 4
  %121 = icmp slt i32 %120, 0
  %122 = select i1 %121, i32 -2147483648, i32 2147483647
  %123 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %119, i32 %120) #10
  %124 = extractvalue { i32, i1 } %123, 1
  %125 = extractvalue { i32, i1 } %123, 0
  %126 = select i1 %124, i32 %122, i32 %125, !prof !2
  %127 = icmp slt i32 %118, %126
  br i1 %127, label %128, label %201

128:                                              ; preds = %117
  %129 = icmp slt i32 %118, %119
  br i1 %129, label %440, label %130

130:                                              ; preds = %128
  %131 = load i32, i32* %19, align 4
  %132 = icmp slt i32 %131, 0
  %133 = select i1 %132, i32 -2147483648, i32 2147483647
  %134 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %118, i32 %131) #10
  %135 = extractvalue { i32, i1 } %134, 1
  %136 = extractvalue { i32, i1 } %134, 0
  %137 = select i1 %135, i32 %133, i32 %136, !prof !2
  %138 = icmp sgt i32 %137, %126
  br i1 %138, label %139, label %440

139:                                              ; preds = %130
  %140 = load i32, i32* %16, align 8
  %141 = load i32, i32* %9, align 8
  %142 = load i32, i32* %11, align 8
  %143 = icmp slt i32 %142, 0
  %144 = select i1 %143, i32 -2147483648, i32 2147483647
  %145 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %141, i32 %142) #10
  %146 = extractvalue { i32, i1 } %145, 1
  %147 = extractvalue { i32, i1 } %145, 0
  %148 = select i1 %146, i32 %144, i32 %147, !prof !2
  %149 = icmp slt i32 %140, %148
  br i1 %149, label %150, label %440

150:                                              ; preds = %139
  %151 = load i32, i32* %18, align 8
  %152 = icmp slt i32 %151, 0
  %153 = select i1 %152, i32 -2147483648, i32 2147483647
  %154 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %140, i32 %151) #10
  %155 = extractvalue { i32, i1 } %154, 1
  %156 = extractvalue { i32, i1 } %154, 0
  %157 = select i1 %155, i32 %153, i32 %156, !prof !2
  %158 = icmp sgt i32 %157, %141
  br i1 %158, label %201, label %440

159:                                              ; preds = %32
  %160 = load i32, i32* %10, align 4
  %161 = load i32, i32* %17, align 4
  %162 = load i32, i32* %19, align 4
  %163 = icmp slt i32 %162, 0
  %164 = select i1 %163, i32 -2147483648, i32 2147483647
  %165 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %161, i32 %162) #10
  %166 = extractvalue { i32, i1 } %165, 1
  %167 = extractvalue { i32, i1 } %165, 0
  %168 = select i1 %166, i32 %164, i32 %167, !prof !2
  %169 = icmp slt i32 %160, %168
  br i1 %169, label %170, label %201

170:                                              ; preds = %159
  %171 = icmp slt i32 %160, %161
  br i1 %171, label %440, label %172

172:                                              ; preds = %170
  %173 = load i32, i32* %12, align 4
  %174 = icmp slt i32 %173, 0
  %175 = select i1 %174, i32 -2147483648, i32 2147483647
  %176 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %160, i32 %173) #10
  %177 = extractvalue { i32, i1 } %176, 1
  %178 = extractvalue { i32, i1 } %176, 0
  %179 = select i1 %177, i32 %175, i32 %178, !prof !2
  %180 = icmp sgt i32 %179, %168
  br i1 %180, label %181, label %440

181:                                              ; preds = %172
  %182 = load i32, i32* %9, align 8
  %183 = load i32, i32* %16, align 8
  %184 = load i32, i32* %18, align 8
  %185 = icmp slt i32 %184, 0
  %186 = select i1 %185, i32 -2147483648, i32 2147483647
  %187 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %183, i32 %184) #10
  %188 = extractvalue { i32, i1 } %187, 1
  %189 = extractvalue { i32, i1 } %187, 0
  %190 = select i1 %188, i32 %186, i32 %189, !prof !2
  %191 = icmp slt i32 %182, %190
  br i1 %191, label %192, label %440

192:                                              ; preds = %181
  %193 = load i32, i32* %11, align 8
  %194 = icmp slt i32 %193, 0
  %195 = select i1 %194, i32 -2147483648, i32 2147483647
  %196 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %182, i32 %193) #10
  %197 = extractvalue { i32, i1 } %196, 1
  %198 = extractvalue { i32, i1 } %196, 0
  %199 = select i1 %197, i32 %195, i32 %198, !prof !2
  %200 = icmp sgt i32 %199, %183
  br i1 %200, label %201, label %440

201:                                              ; preds = %159, %117, %75, %33, %150, %108, %66, %192
  %202 = getelementptr inbounds %"struct.blink::FocusCandidate", %"struct.blink::FocusCandidate"* %1, i64 0, i32 0
  %203 = load %"class.blink::Node"*, %"class.blink::Node"** %202, align 8
  %204 = icmp eq %"class.blink::Node"* %203, null
  br i1 %204, label %256, label %205

205:                                              ; preds = %201
  %206 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %203, i64 0, i32 1
  %207 = load i32, i32* %206, align 8
  %208 = and i32 %207, 1
  %209 = icmp eq i32 %208, 0
  %210 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %203, i64 0, i32 6, i32 0, i32 0
  br i1 %209, label %215, label %211

211:                                              ; preds = %205
  %212 = bitcast %"class.blink::NodeData"** %210 to %"class.blink::NodeRareData"**
  %213 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %212, align 8
  %214 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %213, i64 0, i32 1, i32 0, i32 0
  br label %217

215:                                              ; preds = %205
  %216 = bitcast %"class.blink::NodeData"** %210 to %"class.blink::NodeRenderingData"**
  br label %217

217:                                              ; preds = %215, %211
  %218 = phi %"class.blink::NodeRenderingData"** [ %214, %211 ], [ %216, %215 ]
  %219 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %218, align 8
  %220 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %219, i64 0, i32 1
  %221 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %220, align 8
  %222 = call %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject13PaintingLayerEv(%"class.blink::LayoutObject"* %221) #10
  %223 = icmp eq %"class.blink::PaintLayer"* %222, null
  br i1 %223, label %256, label %224

224:                                              ; preds = %217
  %225 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %222, i64 0, i32 1
  %226 = bitcast [6 x i8]* %225 to i48*
  %227 = load i48, i48* %226, align 1
  %228 = and i48 %227, 2
  %229 = icmp eq i48 %228, 0
  br i1 %229, label %230, label %256

230:                                              ; preds = %224
  %231 = getelementptr inbounds %"struct.blink::FocusCandidate", %"struct.blink::FocusCandidate"* %2, i64 0, i32 0
  %232 = load %"class.blink::Node"*, %"class.blink::Node"** %231, align 8
  %233 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %232, i64 0, i32 1
  %234 = load i32, i32* %233, align 8
  %235 = and i32 %234, 1
  %236 = icmp eq i32 %235, 0
  %237 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %232, i64 0, i32 6, i32 0, i32 0
  br i1 %236, label %242, label %238

238:                                              ; preds = %230
  %239 = bitcast %"class.blink::NodeData"** %237 to %"class.blink::NodeRareData"**
  %240 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %239, align 8
  %241 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %240, i64 0, i32 1, i32 0, i32 0
  br label %244

242:                                              ; preds = %230
  %243 = bitcast %"class.blink::NodeData"** %237 to %"class.blink::NodeRenderingData"**
  br label %244

244:                                              ; preds = %242, %238
  %245 = phi %"class.blink::NodeRenderingData"** [ %241, %238 ], [ %243, %242 ]
  %246 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %245, align 8
  %247 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %246, i64 0, i32 1
  %248 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %247, align 8
  %249 = call %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject13PaintingLayerEv(%"class.blink::LayoutObject"* %248) #10
  %250 = icmp eq %"class.blink::PaintLayer"* %222, %249
  br i1 %250, label %251, label %256

251:                                              ; preds = %244
  %252 = load i48, i48* %226, align 1
  %253 = and i48 %252, 32
  %254 = icmp eq i48 %253, 0
  %255 = select i1 %254, double 0xC1D0000000000000, double 0.000000e+00
  br label %256

256:                                              ; preds = %251, %244, %224, %217, %201, %25
  %257 = phi double [ 0xC1E0000000000000, %25 ], [ 0.000000e+00, %201 ], [ 0.000000e+00, %217 ], [ 0.000000e+00, %224 ], [ 0.000000e+00, %244 ], [ %255, %251 ]
  %258 = bitcast %"class.blink::LayoutPoint"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %258) #10
  %259 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %6, i64 0, i32 0, i32 0
  %260 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %6, i64 0, i32 1, i32 0
  store i32 0, i32* %259, align 4
  store i32 0, i32* %260, align 4
  %261 = bitcast %"class.blink::LayoutPoint"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %261) #10
  %262 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %7, i64 0, i32 0, i32 0
  %263 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %7, i64 0, i32 1, i32 0
  store i32 0, i32* %262, align 4
  store i32 0, i32* %263, align 4
  call void @_ZN5blink30EntryAndExitPointsForDirectionENS_26SpatialNavigationDirectionERKNS_12PhysicalRectES3_RNS_11LayoutPointES5_(i32 %0, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %5, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %4, %"class.blink::LayoutPoint"* nonnull dereferenceable(8) %6, %"class.blink::LayoutPoint"* nonnull dereferenceable(8) %7)
  %264 = load i32, i32* %259, align 4
  %265 = load i32, i32* %262, align 4
  %266 = icmp sgt i32 %265, -1
  %267 = select i1 %266, i32 -2147483648, i32 2147483647
  %268 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %264, i32 %265) #10
  %269 = extractvalue { i32, i1 } %268, 1
  %270 = extractvalue { i32, i1 } %268, 0
  %271 = select i1 %269, i32 %267, i32 %270, !prof !2
  %272 = icmp slt i32 %271, 0
  %273 = sub nsw i32 0, %271
  %274 = select i1 %272, i32 %273, i32 %271
  %275 = load i32, i32* %260, align 4
  %276 = load i32, i32* %263, align 4
  %277 = icmp sgt i32 %276, -1
  %278 = select i1 %277, i32 -2147483648, i32 2147483647
  %279 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %275, i32 %276) #10
  %280 = extractvalue { i32, i1 } %279, 1
  %281 = extractvalue { i32, i1 } %279, 0
  %282 = select i1 %280, i32 %278, i32 %281, !prof !2
  %283 = icmp slt i32 %282, 0
  %284 = sub nsw i32 0, %282
  %285 = select i1 %283, i32 %284, i32 %282
  %286 = zext i32 %274 to i64
  %287 = mul nuw nsw i64 %286, %286
  %288 = lshr i64 %287, 6
  %289 = lshr i64 %287, 38
  %290 = trunc i64 %289 to i32
  %291 = trunc i64 %288 to i32
  %292 = ashr i32 %291, 31
  %293 = icmp eq i32 %292, %290
  %294 = select i1 %293, i32 %291, i32 2147483647
  %295 = zext i32 %285 to i64
  %296 = mul nuw nsw i64 %295, %295
  %297 = lshr i64 %296, 6
  %298 = lshr i64 %296, 38
  %299 = trunc i64 %298 to i32
  %300 = trunc i64 %297 to i32
  %301 = ashr i32 %300, 31
  %302 = icmp eq i32 %301, %299
  %303 = icmp slt i32 %300, 0
  %304 = select i1 %302, i32 %300, i32 2147483647
  %305 = and i1 %303, %302
  %306 = select i1 %305, i32 -2147483648, i32 2147483647
  %307 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %294, i32 %304) #10
  %308 = extractvalue { i32, i1 } %307, 1
  %309 = extractvalue { i32, i1 } %307, 0
  %310 = select i1 %308, i32 %306, i32 %309, !prof !2
  %311 = sitofp i32 %310 to double
  %312 = fmul double %311, 1.562500e-02
  %313 = call double @sqrt(double %312) #10
  %314 = fadd double %257, %313
  switch i32 %0, label %438 [
    i32 2, label %315
    i32 4, label %315
    i32 3, label %368
    i32 1, label %368
  ]

315:                                              ; preds = %256, %256
  %316 = load i32, i32* %17, align 4
  %317 = load i32, i32* %19, align 4
  %318 = icmp slt i32 %317, 0
  %319 = select i1 %318, i32 -2147483648, i32 2147483647
  %320 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %316, i32 %317) #10
  %321 = extractvalue { i32, i1 } %320, 1
  %322 = extractvalue { i32, i1 } %320, 0
  %323 = select i1 %321, i32 %319, i32 %322, !prof !2
  %324 = load i32, i32* %10, align 4
  %325 = icmp sgt i32 %323, %324
  br i1 %325, label %326, label %335

326:                                              ; preds = %315
  %327 = load i32, i32* %12, align 4
  %328 = icmp slt i32 %327, 0
  %329 = select i1 %328, i32 -2147483648, i32 2147483647
  %330 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %324, i32 %327) #10
  %331 = extractvalue { i32, i1 } %330, 1
  %332 = extractvalue { i32, i1 } %330, 0
  %333 = select i1 %331, i32 %329, i32 %332, !prof !2
  %334 = icmp slt i32 %316, %333
  br i1 %334, label %351, label %335

335:                                              ; preds = %315, %326
  %336 = sdiv i32 %317, 2
  %337 = sext i32 %336 to i64
  %338 = call i1 @llvm.is.constant.i64(i64 %337) #10
  br i1 %338, label %345, label %339

339:                                              ; preds = %335
  %340 = icmp slt i32 %317, -1
  %341 = select i1 %340, i32 -2147483648, i32 2147483647
  %342 = add nsw i64 %337, 2147483648
  %343 = icmp ult i64 %342, 4294967296
  %344 = select i1 %343, i32 %336, i32 %341, !prof !3
  br label %345

345:                                              ; preds = %335, %339
  %346 = phi i32 [ %344, %339 ], [ %336, %335 ]
  %347 = sdiv i32 %346, 64
  %348 = shl nsw i32 %347, 6
  %349 = icmp slt i32 %346, -63
  %350 = select i1 %349, i32 -2147483648, i32 2147483647
  br label %351

351:                                              ; preds = %345, %326
  %352 = phi i32 [ 0, %326 ], [ %348, %345 ]
  %353 = phi i32 [ 2147483647, %326 ], [ %350, %345 ]
  %354 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %285, i32 %352) #10
  %355 = extractvalue { i32, i1 } %354, 1
  %356 = extractvalue { i32, i1 } %354, 0
  %357 = select i1 %355, i32 %353, i32 %356, !prof !2
  %358 = sext i32 %357 to i64
  %359 = mul nsw i64 %358, 30
  %360 = ashr i64 %359, 32
  %361 = trunc i64 %360 to i32
  %362 = trunc i64 %359 to i32
  %363 = ashr i32 %362, 31
  %364 = icmp eq i32 %363, %361
  br i1 %364, label %417, label %365

365:                                              ; preds = %351
  %366 = lshr i32 %357, 31
  %367 = add nuw i32 %366, 2147483647
  br label %417

368:                                              ; preds = %256, %256
  %369 = load i32, i32* %16, align 8
  %370 = load i32, i32* %18, align 8
  %371 = icmp slt i32 %370, 0
  %372 = select i1 %371, i32 -2147483648, i32 2147483647
  %373 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %369, i32 %370) #10
  %374 = extractvalue { i32, i1 } %373, 1
  %375 = extractvalue { i32, i1 } %373, 0
  %376 = select i1 %374, i32 %372, i32 %375, !prof !2
  %377 = load i32, i32* %9, align 8
  %378 = icmp sgt i32 %376, %377
  br i1 %378, label %379, label %388

379:                                              ; preds = %368
  %380 = load i32, i32* %11, align 8
  %381 = icmp slt i32 %380, 0
  %382 = select i1 %381, i32 -2147483648, i32 2147483647
  %383 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %377, i32 %380) #10
  %384 = extractvalue { i32, i1 } %383, 1
  %385 = extractvalue { i32, i1 } %383, 0
  %386 = select i1 %384, i32 %382, i32 %385, !prof !2
  %387 = icmp slt i32 %369, %386
  br i1 %387, label %404, label %388

388:                                              ; preds = %368, %379
  %389 = sdiv i32 %370, 2
  %390 = sext i32 %389 to i64
  %391 = call i1 @llvm.is.constant.i64(i64 %390) #10
  br i1 %391, label %398, label %392

392:                                              ; preds = %388
  %393 = icmp slt i32 %370, -1
  %394 = select i1 %393, i32 -2147483648, i32 2147483647
  %395 = add nsw i64 %390, 2147483648
  %396 = icmp ult i64 %395, 4294967296
  %397 = select i1 %396, i32 %389, i32 %394, !prof !3
  br label %398

398:                                              ; preds = %388, %392
  %399 = phi i32 [ %397, %392 ], [ %389, %388 ]
  %400 = sdiv i32 %399, 64
  %401 = shl nsw i32 %400, 6
  %402 = icmp slt i32 %399, -63
  %403 = select i1 %402, i32 -2147483648, i32 2147483647
  br label %404

404:                                              ; preds = %398, %379
  %405 = phi i32 [ 0, %379 ], [ %401, %398 ]
  %406 = phi i32 [ 2147483647, %379 ], [ %403, %398 ]
  %407 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %274, i32 %405) #10
  %408 = extractvalue { i32, i1 } %407, 1
  %409 = extractvalue { i32, i1 } %407, 0
  %410 = select i1 %408, i32 %406, i32 %409, !prof !2
  %411 = shl i32 %410, 1
  %412 = xor i32 %411, %410
  %413 = icmp sgt i32 %412, -1
  br i1 %413, label %417, label %414

414:                                              ; preds = %404
  %415 = lshr i32 %410, 31
  %416 = add nuw i32 %415, 2147483647
  br label %417

417:                                              ; preds = %414, %404, %365, %351
  %418 = phi i32 [ %362, %351 ], [ %367, %365 ], [ %411, %404 ], [ %416, %414 ]
  %419 = phi i32 [ %274, %351 ], [ %274, %365 ], [ %285, %404 ], [ %285, %414 ]
  %420 = sitofp i32 %418 to double
  %421 = fmul double %420, 1.562500e-02
  %422 = sitofp i32 %419 to double
  %423 = fmul double %422, 1.562500e-02
  %424 = fadd double %421, %423
  %425 = fadd double %314, %424
  %426 = bitcast %"struct.blink::PhysicalRect"* %5 to i64*
  %427 = load i64, i64* %426, align 8
  %428 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 1
  %429 = bitcast %"struct.blink::PhysicalSize"* %428 to i64*
  %430 = load i64, i64* %429, align 8
  %431 = bitcast %"struct.blink::PhysicalRect"* %4 to i64*
  %432 = load i64, i64* %431, align 8
  %433 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 1
  %434 = bitcast %"struct.blink::PhysicalSize"* %433 to i64*
  %435 = load i64, i64* %434, align 8
  %436 = call double @_ZN5blink9AlignmentENS_26SpatialNavigationDirectionENS_12PhysicalRectES1_(i32 %0, i64 %427, i64 %430, i64 %432, i64 %435)
  %437 = fsub double %425, %436
  br label %438

438:                                              ; preds = %256, %417
  %439 = phi double [ %437, %417 ], [ 0x7FEFFFFFFFFFFFFF, %256 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %261) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %258) #10
  br label %440

440:                                              ; preds = %170, %172, %181, %128, %130, %139, %86, %88, %97, %44, %46, %55, %32, %150, %108, %66, %192, %3, %438
  %441 = phi double [ %439, %438 ], [ 0x7FEFFFFFFFFFFFFF, %3 ], [ 0x7FEFFFFFFFFFFFFF, %192 ], [ 0x7FEFFFFFFFFFFFFF, %66 ], [ 0x7FEFFFFFFFFFFFFF, %108 ], [ 0x7FEFFFFFFFFFFFFF, %150 ], [ 0x7FEFFFFFFFFFFFFF, %32 ], [ 0x7FEFFFFFFFFFFFFF, %55 ], [ 0x7FEFFFFFFFFFFFFF, %46 ], [ 0x7FEFFFFFFFFFFFFF, %44 ], [ 0x7FEFFFFFFFFFFFFF, %97 ], [ 0x7FEFFFFFFFFFFFFF, %88 ], [ 0x7FEFFFFFFFFFFFFF, %86 ], [ 0x7FEFFFFFFFFFFFFF, %139 ], [ 0x7FEFFFFFFFFFFFFF, %130 ], [ 0x7FEFFFFFFFFFFFFF, %128 ], [ 0x7FEFFFFFFFFFFFFF, %181 ], [ 0x7FEFFFFFFFFFFFFF, %172 ], [ 0x7FEFFFFFFFFFFFFF, %170 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #10
  ret double %441
}

declare zeroext i1 @_ZNK5blink12PhysicalRect8ContainsERKS0_(%"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5blink12OppositeEdgeENS_26SpatialNavigationDirectionERKNS_12PhysicalRectENS_10LayoutUnitE(i32, %"struct.blink::PhysicalRect"* nocapture readonly dereferenceable(16), i32) local_unnamed_addr #0 {
  %4 = bitcast %"struct.blink::PhysicalRect"* %1 to i64*
  %5 = load i64, i64* %4, align 4
  %6 = trunc i64 %5 to i32
  %7 = lshr i64 %5, 32
  %8 = trunc i64 %7 to i32
  %9 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1
  %10 = bitcast %"struct.blink::PhysicalSize"* %9 to i64*
  %11 = load i64, i64* %10, align 4
  switch i32 %0, label %73 [
    i32 4, label %12
    i32 2, label %33
    i32 3, label %41
    i32 1, label %50
  ]

12:                                               ; preds = %3
  %13 = trunc i64 %11 to i32
  %14 = icmp slt i32 %13, 0
  %15 = select i1 %14, i32 -2147483648, i32 2147483647
  %16 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %6, i32 %13) #10
  %17 = extractvalue { i32, i1 } %16, 1
  %18 = extractvalue { i32, i1 } %16, 0
  %19 = select i1 %17, i32 %15, i32 %18, !prof !2
  %20 = icmp sgt i32 %2, -1
  %21 = select i1 %20, i32 -2147483648, i32 2147483647
  %22 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %19, i32 %2) #10
  %23 = extractvalue { i32, i1 } %22, 1
  %24 = extractvalue { i32, i1 } %22, 0
  %25 = select i1 %23, i32 %21, i32 %24, !prof !2
  %26 = zext i32 %2 to i64
  %27 = and i64 %11, -4294967296
  %28 = or i64 %27, %26
  %29 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %25, i32 64) #10
  %30 = extractvalue { i32, i1 } %29, 1
  %31 = extractvalue { i32, i1 } %29, 0
  %32 = select i1 %30, i32 2147483647, i32 %31, !prof !2
  br label %73

33:                                               ; preds = %3
  %34 = zext i32 %2 to i64
  %35 = and i64 %11, -4294967296
  %36 = or i64 %35, %34
  %37 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %6, i32 -64)
  %38 = extractvalue { i32, i1 } %37, 1
  %39 = extractvalue { i32, i1 } %37, 0
  %40 = select i1 %38, i32 -2147483648, i32 %39, !prof !2
  br label %73

41:                                               ; preds = %3
  %42 = zext i32 %2 to i64
  %43 = shl nuw i64 %42, 32
  %44 = and i64 %11, 4294967295
  %45 = or i64 %44, %43
  %46 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %8, i32 -64)
  %47 = extractvalue { i32, i1 } %46, 1
  %48 = extractvalue { i32, i1 } %46, 0
  %49 = select i1 %47, i32 -2147483648, i32 %48, !prof !2
  br label %73

50:                                               ; preds = %3
  %51 = lshr i64 %11, 32
  %52 = trunc i64 %51 to i32
  %53 = icmp slt i32 %52, 0
  %54 = select i1 %53, i32 -2147483648, i32 2147483647
  %55 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %8, i32 %52) #10
  %56 = extractvalue { i32, i1 } %55, 1
  %57 = extractvalue { i32, i1 } %55, 0
  %58 = select i1 %56, i32 %54, i32 %57, !prof !2
  %59 = icmp sgt i32 %2, -1
  %60 = select i1 %59, i32 -2147483648, i32 2147483647
  %61 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %58, i32 %2) #10
  %62 = extractvalue { i32, i1 } %61, 1
  %63 = extractvalue { i32, i1 } %61, 0
  %64 = select i1 %62, i32 %60, i32 %63, !prof !2
  %65 = zext i32 %2 to i64
  %66 = shl nuw i64 %65, 32
  %67 = and i64 %11, 4294967295
  %68 = or i64 %67, %66
  %69 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %64, i32 64) #10
  %70 = extractvalue { i32, i1 } %69, 1
  %71 = extractvalue { i32, i1 } %69, 0
  %72 = select i1 %70, i32 2147483647, i32 %71, !prof !2
  br label %73

73:                                               ; preds = %3, %50, %41, %33, %12
  %74 = phi i64 [ %11, %3 ], [ %68, %50 ], [ %45, %41 ], [ %36, %33 ], [ %28, %12 ]
  %75 = phi i32 [ %6, %3 ], [ %6, %50 ], [ %6, %41 ], [ %40, %33 ], [ %32, %12 ]
  %76 = phi i32 [ %8, %3 ], [ %72, %50 ], [ %49, %41 ], [ %8, %33 ], [ %8, %12 ]
  %77 = zext i32 %76 to i64
  %78 = shl nuw i64 %77, 32
  %79 = zext i32 %75 to i64
  %80 = or i64 %78, %79
  %81 = insertvalue { i64, i64 } undef, i64 %80, 0
  %82 = insertvalue { i64, i64 } %81, i64 %74, 1
  ret { i64, i64 } %82
}

; Function Attrs: nofree nounwind
declare double @sqrt(double) local_unnamed_addr #5

declare { i64, i64 } @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_12PhysicalRectE(%"class.blink::LocalFrameView"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #2

declare { i64, i64 } @_ZNK5blink15HTMLAreaElement19ComputeAbsoluteRectEPKNS_12LayoutObjectE(%"class.blink::HTMLAreaElement"*, %"class.blink::LayoutObject"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5blink12RootViewportEPKNS_10LocalFrameE(%"class.blink::LocalFrame"*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %0, i64 0, i32 0
  %3 = tail call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %2) #10
  %4 = tail call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %3) #10
  %5 = tail call { <2 x float>, <2 x float> } @_ZNK5blink14VisualViewport11VisibleRectENS_23IncludeScrollbarsInRectE(%"class.blink::VisualViewport"* %4, i32 0) #10
  %6 = extractvalue { <2 x float>, <2 x float> } %5, 0
  %7 = extractvalue { <2 x float>, <2 x float> } %5, 1
  %8 = extractelement <2 x float> %6, i32 0
  %9 = fmul float %8, 6.400000e+01
  %10 = tail call float @llvm.floor.f32(float %9) #10
  %11 = fcmp ult float %10, 0xC1E0000000000000
  %12 = fcmp ugt float %10, 0x41DFFFFFE0000000
  %13 = fcmp ogt float %10, 0xC1E0000000000000
  %14 = select i1 %13, float %10, float 0xC1E0000000000000
  %15 = fptosi float %14 to i32
  %16 = select i1 %11, i32 0, i32 2147483647
  %17 = select i1 %12, i32 %16, i32 %15
  %18 = extractelement <2 x float> %6, i32 1
  %19 = fmul float %18, 6.400000e+01
  %20 = tail call float @llvm.floor.f32(float %19) #10
  %21 = fcmp ult float %20, 0xC1E0000000000000
  %22 = fcmp ugt float %20, 0x41DFFFFFE0000000
  %23 = fcmp ogt float %20, 0xC1E0000000000000
  %24 = select i1 %23, float %20, float 0xC1E0000000000000
  %25 = fptosi float %24 to i32
  %26 = select i1 %21, i32 0, i32 2147483647
  %27 = select i1 %22, i32 %26, i32 %25
  %28 = extractelement <2 x float> %7, i32 0
  %29 = fadd float %8, %28
  %30 = fmul float %29, 6.400000e+01
  %31 = tail call float @llvm.ceil.f32(float %30) #10
  %32 = fcmp ult float %31, 0xC1E0000000000000
  %33 = fcmp ugt float %31, 0x41DFFFFFE0000000
  %34 = fcmp ogt float %31, 0xC1E0000000000000
  %35 = select i1 %34, float %31, float 0xC1E0000000000000
  %36 = fptosi float %35 to i32
  %37 = select i1 %32, i32 0, i32 2147483647
  %38 = select i1 %33, i32 %37, i32 %36
  %39 = icmp sgt i32 %17, -1
  %40 = select i1 %39, i32 -2147483648, i32 2147483647
  %41 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %38, i32 %17) #10
  %42 = extractvalue { i32, i1 } %41, 1
  %43 = extractvalue { i32, i1 } %41, 0
  %44 = select i1 %42, i32 %40, i32 %43, !prof !2
  %45 = extractelement <2 x float> %7, i32 1
  %46 = fadd float %18, %45
  %47 = fmul float %46, 6.400000e+01
  %48 = tail call float @llvm.ceil.f32(float %47) #10
  %49 = fcmp ult float %48, 0xC1E0000000000000
  %50 = fcmp ugt float %48, 0x41DFFFFFE0000000
  %51 = fcmp ogt float %48, 0xC1E0000000000000
  %52 = select i1 %51, float %48, float 0xC1E0000000000000
  %53 = fptosi float %52 to i32
  %54 = select i1 %49, i32 0, i32 2147483647
  %55 = select i1 %50, i32 %54, i32 %53
  %56 = icmp sgt i32 %27, -1
  %57 = select i1 %56, i32 -2147483648, i32 2147483647
  %58 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %55, i32 %27) #10
  %59 = extractvalue { i32, i1 } %58, 1
  %60 = extractvalue { i32, i1 } %58, 0
  %61 = select i1 %59, i32 %57, i32 %60, !prof !2
  %62 = zext i32 %27 to i64
  %63 = shl nuw i64 %62, 32
  %64 = zext i32 %17 to i64
  %65 = or i64 %63, %64
  %66 = zext i32 %61 to i64
  %67 = shl nuw i64 %66, 32
  %68 = zext i32 %44 to i64
  %69 = or i64 %67, %68
  %70 = insertvalue { i64, i64 } undef, i64 %65, 0
  %71 = insertvalue { i64, i64 } %70, i64 %69, 1
  ret { i64, i64 } %71
}

declare { <2 x float>, <2 x float> } @_ZNK5blink14VisualViewport11VisibleRectENS_23IncludeScrollbarsInRectE(%"class.blink::VisualViewport"*, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink16GetLogicalHeightERKNS_12PhysicalRectERKNS_12LayoutObjectE(%"struct.blink::PhysicalRect"* nocapture readonly dereferenceable(16), %"class.blink::LayoutObject"* nocapture readonly dereferenceable(88)) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = trunc i96 %5 to i32
  %7 = icmp slt i32 %6, 0
  %8 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %0, i64 0, i32 1, i32 1, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = select i1 %7, i32 %9, i32 %11
  ret i32 %12
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink16SetLogicalHeightERNS_12PhysicalRectERKNS_12LayoutObjectENS_10LayoutUnitE(%"struct.blink::PhysicalRect"* nocapture dereferenceable(16), %"class.blink::LayoutObject"* nocapture readonly dereferenceable(88), i32) local_unnamed_addr #7 {
  %4 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = trunc i96 %6 to i32
  %8 = icmp slt i32 %7, 0
  %9 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %0, i64 0, i32 1, i32 1, i32 0
  %11 = select i1 %8, i32* %10, i32* %9
  store i32 %2, i32* %11, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink24TallestInlineAtomicChildERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #0 {
  %2 = bitcast %"class.blink::LayoutObject"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %3 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %3, i64 26
  %5 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::LayoutObject"* %0) #10
  br i1 %6, label %7, label %49

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::LayoutObject"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %9 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %9, i64 13
  %11 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %10, align 8
  %12 = tail call %"class.blink::LayoutObjectChildList"* %11(%"class.blink::LayoutObject"* %0) #10
  %13 = icmp eq %"class.blink::LayoutObjectChildList"* %12, null
  br i1 %13, label %49, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %12, i64 0, i32 0
  %16 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %15, align 8
  %17 = icmp eq %"class.blink::LayoutObject"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %14, %44
  %19 = phi i32 [ %45, %44 ], [ 0, %14 ]
  %20 = phi %"class.blink::LayoutObject"* [ %47, %44 ], [ %16, %14 ]
  %21 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 0, i32 4
  %22 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %21 to i96*
  %23 = load i96, i96* %22, align 4
  %24 = and i96 %23, 113336795588871485128704
  %25 = icmp ne i96 %24, 75557863725914323419136
  %26 = and i96 %23, 1073741824
  %27 = icmp ne i96 %26, 0
  %28 = and i1 %25, %27
  br i1 %28, label %29, label %44

29:                                               ; preds = %18
  %30 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 0, i32 5, i32 0
  %31 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %31, i64 0, i32 0, i32 9
  %33 = bitcast [20 x i8]* %32 to i160*
  %34 = load i160, i160* %33, align 8
  %35 = and i160 %34, 15211807202738752817960438464512
  %36 = icmp eq i160 %35, 0
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 1, i32 4, i32 0, i64 8
  %38 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 1, i32 4, i32 0, i64 4
  %39 = select i1 %36, i8* %37, i8* %38
  %40 = bitcast i8* %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = icmp slt i32 %41, %19
  %43 = select i1 %42, i32 %19, i32 %41
  br label %44

44:                                               ; preds = %18, %29
  %45 = phi i32 [ %19, %18 ], [ %43, %29 ]
  %46 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 0, i32 9
  %47 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %46, align 8
  %48 = icmp eq %"class.blink::LayoutObject"* %47, null
  br i1 %48, label %49, label %18

49:                                               ; preds = %44, %7, %14, %1
  %50 = phi i32 [ 0, %14 ], [ 0, %1 ], [ 0, %7 ], [ %45, %44 ]
  ret i32 %50
}

declare i32 @_ZNK5blink13ComputedStyle25ComputedLineHeightAsFixedEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5blink20SearchOriginFragmentERKNS_12PhysicalRectERKNS_12LayoutObjectENS_26SpatialNavigationDirectionE(%"struct.blink::PhysicalRect"* dereferenceable(16), %"class.blink::LayoutObject"* dereferenceable(88), i32) local_unnamed_addr #0 {
  %4 = alloca <4 x i32>, align 16
  %5 = bitcast <4 x i32>* %4 to { i64, i64 }*
  %6 = alloca %"class.WTF::Vector.3117", align 8
  %7 = bitcast %"class.WTF::Vector.3117"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::Vector.3117", %"class.WTF::Vector.3117"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::Vector.3117", %"class.WTF::Vector.3117"* %6, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #10
  %10 = bitcast %"class.blink::LayoutObject"* %1 to void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)***
  %11 = load void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)**, void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)*, void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)** %11, i64 67
  %13 = load void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)*, void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)** %12, align 8
  call void %13(%"class.blink::LayoutObject"* %1, %"class.WTF::Vector.3117"* nonnull dereferenceable(16) %6, i32 72) #10
  switch i32 %2, label %117 [
    i32 4, label %14
    i32 3, label %14
    i32 2, label %109
    i32 1, label %109
  ]

14:                                               ; preds = %3, %3
  %15 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %8, align 8
  %16 = load i32, i32* %9, align 4
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %15, i64 %17
  %19 = bitcast <4 x i32>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19)
  %20 = bitcast <4 x i32>* %4 to %"struct.blink::PhysicalRect"*
  %21 = icmp eq i32 %16, 0
  br i1 %21, label %102, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %24 = bitcast i64* %23 to i32*
  %25 = bitcast <4 x i32>* %4 to i64*
  %26 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %20, i64 0, i32 1, i32 1, i32 0
  br label %27

27:                                               ; preds = %99, %22
  %28 = phi %"class.blink::FloatQuad"* [ %15, %22 ], [ %100, %99 ]
  store <4 x i32> <i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766>, <4 x i32>* %4, align 16
  %29 = call { <2 x float>, <2 x float> } @_ZNK5blink9FloatQuad11BoundingBoxEv(%"class.blink::FloatQuad"* %28) #10
  %30 = extractvalue { <2 x float>, <2 x float> } %29, 0
  %31 = extractvalue { <2 x float>, <2 x float> } %29, 1
  %32 = extractelement <2 x float> %30, i32 0
  %33 = fmul float %32, 6.400000e+01
  %34 = call float @llvm.floor.f32(float %33) #10
  %35 = fcmp ult float %34, 0xC1E0000000000000
  %36 = fcmp ugt float %34, 0x41DFFFFFE0000000
  %37 = fcmp ogt float %34, 0xC1E0000000000000
  %38 = select i1 %37, float %34, float 0xC1E0000000000000
  %39 = fptosi float %38 to i32
  %40 = select i1 %35, i32 0, i32 2147483647
  %41 = select i1 %36, i32 %40, i32 %39
  %42 = extractelement <2 x float> %30, i32 1
  %43 = fmul float %42, 6.400000e+01
  %44 = call float @llvm.floor.f32(float %43) #10
  %45 = fcmp ult float %44, 0xC1E0000000000000
  %46 = fcmp ugt float %44, 0x41DFFFFFE0000000
  %47 = fcmp ogt float %44, 0xC1E0000000000000
  %48 = select i1 %47, float %44, float 0xC1E0000000000000
  %49 = fptosi float %48 to i32
  %50 = select i1 %45, i32 0, i32 2147483647
  %51 = select i1 %46, i32 %50, i32 %49
  %52 = extractelement <2 x float> %31, i32 0
  %53 = fadd float %32, %52
  %54 = fmul float %53, 6.400000e+01
  %55 = call float @llvm.ceil.f32(float %54) #10
  %56 = fcmp ult float %55, 0xC1E0000000000000
  %57 = fcmp ugt float %55, 0x41DFFFFFE0000000
  %58 = fcmp ogt float %55, 0xC1E0000000000000
  %59 = select i1 %58, float %55, float 0xC1E0000000000000
  %60 = fptosi float %59 to i32
  %61 = select i1 %56, i32 0, i32 2147483647
  %62 = select i1 %57, i32 %61, i32 %60
  %63 = icmp sgt i32 %41, -1
  %64 = select i1 %63, i32 -2147483648, i32 2147483647
  %65 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %62, i32 %41) #10
  %66 = extractvalue { i32, i1 } %65, 1
  %67 = extractvalue { i32, i1 } %65, 0
  %68 = select i1 %66, i32 %64, i32 %67, !prof !2
  %69 = extractelement <2 x float> %31, i32 1
  %70 = fadd float %42, %69
  %71 = fmul float %70, 6.400000e+01
  %72 = call float @llvm.ceil.f32(float %71) #10
  %73 = fcmp ult float %72, 0xC1E0000000000000
  %74 = fcmp ugt float %72, 0x41DFFFFFE0000000
  %75 = fcmp ogt float %72, 0xC1E0000000000000
  %76 = select i1 %75, float %72, float 0xC1E0000000000000
  %77 = fptosi float %76 to i32
  %78 = select i1 %73, i32 0, i32 2147483647
  %79 = select i1 %74, i32 %78, i32 %77
  %80 = icmp sgt i32 %51, -1
  %81 = select i1 %80, i32 -2147483648, i32 2147483647
  %82 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %79, i32 %51) #10
  %83 = extractvalue { i32, i1 } %82, 1
  %84 = extractvalue { i32, i1 } %82, 0
  %85 = select i1 %83, i32 %81, i32 %84, !prof !2
  %86 = zext i32 %51 to i64
  %87 = shl nuw i64 %86, 32
  %88 = zext i32 %41 to i64
  %89 = or i64 %87, %88
  %90 = zext i32 %85 to i64
  %91 = shl nuw i64 %90, 32
  %92 = zext i32 %68 to i64
  %93 = or i64 %91, %92
  store i64 %89, i64* %25, align 16
  store i64 %93, i64* %23, align 8
  call void @_ZN5blink12PhysicalRect9IntersectERKS0_(%"struct.blink::PhysicalRect"* nonnull %20, %"struct.blink::PhysicalRect"* dereferenceable(16) %0) #10
  %94 = load i32, i32* %24, align 8
  %95 = icmp eq i32 %94, 0
  %96 = load i32, i32* %26, align 4
  %97 = icmp eq i32 %96, 0
  %98 = or i1 %95, %97
  br i1 %98, label %99, label %104

99:                                               ; preds = %27
  %100 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %28, i64 1
  %101 = icmp eq %"class.blink::FloatQuad"* %100, %18
  br i1 %101, label %102, label %27

102:                                              ; preds = %99, %14
  %103 = bitcast %"struct.blink::PhysicalRect"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %19, i8* align 4 %103, i64 16, i1 false) #10
  br label %104

104:                                              ; preds = %27, %102
  %105 = bitcast <4 x i32>* %4 to i64*
  %106 = load i64, i64* %105, align 16
  %107 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %108 = load i64, i64* %107, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19)
  br label %123

109:                                              ; preds = %3, %3
  %110 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %8, align 8
  %111 = load i32, i32* %9, align 4
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %110, i64 %112
  %114 = call { i64, i64 } @_ZN5blink20FirstVisibleFragmentINSt3__116reverse_iteratorIPNS_9FloatQuadEEEEENS_12PhysicalRectERKS6_T_S9_(%"struct.blink::PhysicalRect"* dereferenceable(16) %0, %"class.blink::FloatQuad"* %113, %"class.blink::FloatQuad"* %113, %"class.blink::FloatQuad"* %110, %"class.blink::FloatQuad"* %110)
  %115 = extractvalue { i64, i64 } %114, 0
  %116 = extractvalue { i64, i64 } %114, 1
  br label %123

117:                                              ; preds = %3
  %118 = bitcast %"struct.blink::PhysicalRect"* %0 to i64*
  %119 = load i64, i64* %118, align 4
  %120 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %0, i64 0, i32 1
  %121 = bitcast %"struct.blink::PhysicalSize"* %120 to i64*
  %122 = load i64, i64* %121, align 4
  br label %123

123:                                              ; preds = %117, %109, %104
  %124 = phi i64 [ %119, %117 ], [ %115, %109 ], [ %106, %104 ]
  %125 = phi i64 [ %122, %117 ], [ %116, %109 ], [ %108, %104 ]
  %126 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %8, align 8
  %127 = icmp eq %"class.blink::FloatQuad"* %126, null
  %128 = bitcast %"class.blink::FloatQuad"* %126 to i8*
  br i1 %127, label %134, label %129, !prof !3

129:                                              ; preds = %123
  %130 = load i32, i32* %9, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %133, label %132, !prof !2

132:                                              ; preds = %129
  store i32 0, i32* %9, align 4
  br label %133

133:                                              ; preds = %132, %129
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %128) #10
  store %"class.blink::FloatQuad"* null, %"class.blink::FloatQuad"** %8, align 8
  br label %134

134:                                              ; preds = %123, %133
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  %135 = insertvalue { i64, i64 } undef, i64 %124, 0
  %136 = insertvalue { i64, i64 } %135, i64 %125, 1
  ret { i64, i64 } %136
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZN5blink20FirstVisibleFragmentINSt3__116reverse_iteratorIPNS_9FloatQuadEEEEENS_12PhysicalRectERKS6_T_S9_(%"struct.blink::PhysicalRect"* dereferenceable(16), %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"*) local_unnamed_addr #0 comdat {
  %6 = alloca <4 x i32>, align 16
  %7 = bitcast <4 x i32>* %6 to { i64, i64 }*
  %8 = bitcast <4 x i32>* %6 to %"struct.blink::PhysicalRect"*
  %9 = icmp eq %"class.blink::FloatQuad"* %2, %4
  br i1 %9, label %90, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %12 = bitcast i64* %11 to i32*
  %13 = bitcast <4 x i32>* %6 to i64*
  %14 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %8, i64 0, i32 1, i32 1, i32 0
  br label %15

15:                                               ; preds = %10, %88
  %16 = phi %"class.blink::FloatQuad"* [ %2, %10 ], [ %17, %88 ]
  store <4 x i32> <i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766>, <4 x i32>* %6, align 16
  %17 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %16, i64 -1
  %18 = call { <2 x float>, <2 x float> } @_ZNK5blink9FloatQuad11BoundingBoxEv(%"class.blink::FloatQuad"* %17) #10
  %19 = extractvalue { <2 x float>, <2 x float> } %18, 0
  %20 = extractvalue { <2 x float>, <2 x float> } %18, 1
  %21 = extractelement <2 x float> %19, i32 0
  %22 = fmul float %21, 6.400000e+01
  %23 = call float @llvm.floor.f32(float %22) #10
  %24 = fcmp ult float %23, 0xC1E0000000000000
  %25 = fcmp ugt float %23, 0x41DFFFFFE0000000
  %26 = fcmp ogt float %23, 0xC1E0000000000000
  %27 = select i1 %26, float %23, float 0xC1E0000000000000
  %28 = fptosi float %27 to i32
  %29 = select i1 %24, i32 0, i32 2147483647
  %30 = select i1 %25, i32 %29, i32 %28
  %31 = extractelement <2 x float> %19, i32 1
  %32 = fmul float %31, 6.400000e+01
  %33 = call float @llvm.floor.f32(float %32) #10
  %34 = fcmp ult float %33, 0xC1E0000000000000
  %35 = fcmp ugt float %33, 0x41DFFFFFE0000000
  %36 = fcmp ogt float %33, 0xC1E0000000000000
  %37 = select i1 %36, float %33, float 0xC1E0000000000000
  %38 = fptosi float %37 to i32
  %39 = select i1 %34, i32 0, i32 2147483647
  %40 = select i1 %35, i32 %39, i32 %38
  %41 = extractelement <2 x float> %20, i32 0
  %42 = fadd float %21, %41
  %43 = fmul float %42, 6.400000e+01
  %44 = call float @llvm.ceil.f32(float %43) #10
  %45 = fcmp ult float %44, 0xC1E0000000000000
  %46 = fcmp ugt float %44, 0x41DFFFFFE0000000
  %47 = fcmp ogt float %44, 0xC1E0000000000000
  %48 = select i1 %47, float %44, float 0xC1E0000000000000
  %49 = fptosi float %48 to i32
  %50 = select i1 %45, i32 0, i32 2147483647
  %51 = select i1 %46, i32 %50, i32 %49
  %52 = icmp sgt i32 %30, -1
  %53 = select i1 %52, i32 -2147483648, i32 2147483647
  %54 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %51, i32 %30) #10
  %55 = extractvalue { i32, i1 } %54, 1
  %56 = extractvalue { i32, i1 } %54, 0
  %57 = select i1 %55, i32 %53, i32 %56, !prof !2
  %58 = extractelement <2 x float> %20, i32 1
  %59 = fadd float %31, %58
  %60 = fmul float %59, 6.400000e+01
  %61 = call float @llvm.ceil.f32(float %60) #10
  %62 = fcmp ult float %61, 0xC1E0000000000000
  %63 = fcmp ugt float %61, 0x41DFFFFFE0000000
  %64 = fcmp ogt float %61, 0xC1E0000000000000
  %65 = select i1 %64, float %61, float 0xC1E0000000000000
  %66 = fptosi float %65 to i32
  %67 = select i1 %62, i32 0, i32 2147483647
  %68 = select i1 %63, i32 %67, i32 %66
  %69 = icmp sgt i32 %40, -1
  %70 = select i1 %69, i32 -2147483648, i32 2147483647
  %71 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %68, i32 %40) #10
  %72 = extractvalue { i32, i1 } %71, 1
  %73 = extractvalue { i32, i1 } %71, 0
  %74 = select i1 %72, i32 %70, i32 %73, !prof !2
  %75 = zext i32 %40 to i64
  %76 = shl nuw i64 %75, 32
  %77 = zext i32 %30 to i64
  %78 = or i64 %76, %77
  %79 = zext i32 %74 to i64
  %80 = shl nuw i64 %79, 32
  %81 = zext i32 %57 to i64
  %82 = or i64 %80, %81
  store i64 %78, i64* %13, align 16
  store i64 %82, i64* %11, align 8
  call void @_ZN5blink12PhysicalRect9IntersectERKS0_(%"struct.blink::PhysicalRect"* nonnull %8, %"struct.blink::PhysicalRect"* dereferenceable(16) %0) #10
  %83 = load i32, i32* %12, align 8
  %84 = icmp eq i32 %83, 0
  %85 = load i32, i32* %14, align 4
  %86 = icmp eq i32 %85, 0
  %87 = or i1 %84, %86
  br i1 %87, label %88, label %93

88:                                               ; preds = %15
  %89 = icmp eq %"class.blink::FloatQuad"* %17, %4
  br i1 %89, label %90, label %15

90:                                               ; preds = %88, %5
  %91 = bitcast <4 x i32>* %6 to i8*
  %92 = bitcast %"struct.blink::PhysicalRect"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %91, i8* align 4 %92, i64 16, i1 false)
  br label %93

93:                                               ; preds = %15, %90
  %94 = bitcast <4 x i32>* %6 to i64*
  %95 = load i64, i64* %94, align 16
  %96 = insertvalue { i64, i64 } undef, i64 %95, 0
  %97 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = insertvalue { i64, i64 } %96, i64 %98, 1
  ret { i64, i64 } %99
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5blink12SearchOriginERKNS_12PhysicalRectEPNS_4NodeENS_26SpatialNavigationDirectionE(%"struct.blink::PhysicalRect"* dereferenceable(16), %"class.blink::Node"*, i32) local_unnamed_addr #0 {
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to { i64, i64 }*
  %6 = alloca %"class.WTF::Vector.3117", align 8
  %7 = alloca { i64, i64 }, align 8
  %8 = alloca { i64, i64 }, align 8
  %9 = bitcast { i64, i64 }* %8 to %"struct.blink::PhysicalRect"*
  %10 = alloca <2 x i64>, align 16
  %11 = bitcast <2 x i64>* %10 to %"struct.blink::PhysicalRect"*
  %12 = icmp eq %"class.blink::Node"* %1, null
  br i1 %12, label %13, label %17

13:                                               ; preds = %3
  %14 = tail call { i64, i64 } @_ZN5blink12OppositeEdgeENS_26SpatialNavigationDirectionERKNS_12PhysicalRectENS_10LayoutUnitE(i32 %2, %"struct.blink::PhysicalRect"* dereferenceable(16) %0, i32 0)
  %15 = extractvalue { i64, i64 } %14, 0
  %16 = extractvalue { i64, i64 } %14, 1
  br label %175

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 48
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %38

22:                                               ; preds = %17
  %23 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kAreaTagE, align 8
  %24 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 2
  %27 = bitcast %"class.blink::Member.318"* %26 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %28 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %28, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %25, i64 0, i32 3, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %30, %32
  %34 = bitcast %"class.blink::Node"* %1 to %"class.blink::HTMLAreaElement"*
  br i1 %33, label %35, label %38

35:                                               ; preds = %22
  %36 = tail call %"class.blink::HTMLImageElement"* @_ZNK5blink15HTMLAreaElement12ImageElementEv(%"class.blink::HTMLAreaElement"* nonnull %34) #10
  %37 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %38

38:                                               ; preds = %17, %22, %35
  %39 = phi i1 [ true, %35 ], [ false, %22 ], [ false, %17 ]
  %40 = phi %"class.blink::HTMLAreaElement"* [ %34, %35 ], [ null, %22 ], [ null, %17 ]
  %41 = phi %"class.blink::Node"* [ %37, %35 ], [ %1, %22 ], [ %1, %17 ]
  %42 = tail call { <2 x float>, <2 x float> } @_ZN5blink14RectInViewportERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %41) #10
  %43 = extractvalue { <2 x float>, <2 x float> } %42, 1
  %44 = extractelement <2 x float> %43, i32 0
  %45 = fcmp ole float %44, 0.000000e+00
  %46 = extractelement <2 x float> %43, i32 1
  %47 = fcmp ole float %46, 0.000000e+00
  %48 = or i1 %47, %45
  br i1 %48, label %143, label %49

49:                                               ; preds = %38
  br i1 %39, label %50, label %54

50:                                               ; preds = %49
  %51 = tail call { i64, i64 } @_ZN5blink23StartEdgeForAreaElementERKNS_15HTMLAreaElementENS_26SpatialNavigationDirectionE(%"class.blink::HTMLAreaElement"* nonnull dereferenceable(168) %40, i32 %2)
  %52 = extractvalue { i64, i64 } %51, 0
  %53 = extractvalue { i64, i64 } %51, 1
  br label %175

54:                                               ; preds = %49
  %55 = tail call { i64, i64 } @_ZN5blink19NodeRectInRootFrameEPKNS_4NodeE(%"class.blink::Node"* %41)
  %56 = extractvalue { i64, i64 } %55, 0
  %57 = extractvalue { i64, i64 } %55, 1
  %58 = bitcast { i64, i64 }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #10
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  %60 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60)
  %61 = bitcast { i64, i64 }* %7 to %"struct.blink::PhysicalRect"*
  %62 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %63 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  store i64 %56, i64* %63, align 8
  store i64 %57, i64* %62, align 8
  call void @_ZN5blink12PhysicalRect9IntersectERKS0_(%"struct.blink::PhysicalRect"* nonnull %61, %"struct.blink::PhysicalRect"* dereferenceable(16) %0) #10
  %64 = load i64, i64* %63, align 8
  %65 = load i64, i64* %62, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60)
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  store i64 %64, i64* %66, align 8
  store i64 %65, i64* %59, align 8
  %67 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 1
  %68 = load i32, i32* %67, align 8
  %69 = and i32 %68, 1
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 6, i32 0, i32 0
  br i1 %70, label %76, label %72

72:                                               ; preds = %54
  %73 = bitcast %"class.blink::NodeData"** %71 to %"class.blink::NodeRareData"**
  %74 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %74, i64 0, i32 1, i32 0, i32 0
  br label %78

76:                                               ; preds = %54
  %77 = bitcast %"class.blink::NodeData"** %71 to %"class.blink::NodeRenderingData"**
  br label %78

78:                                               ; preds = %72, %76
  %79 = phi %"class.blink::NodeRenderingData"** [ %75, %72 ], [ %77, %76 ]
  %80 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %80, i64 0, i32 1
  %82 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %82, i64 0, i32 4
  %84 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %83 to i96*
  %85 = load i96, i96* %84, align 4
  %86 = and i96 %85, 1207959552
  %87 = icmp eq i96 %86, 134217728
  br i1 %87, label %88, label %137

88:                                               ; preds = %78
  %89 = bitcast %"class.WTF::Vector.3117"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %89) #10
  %90 = getelementptr inbounds %"class.WTF::Vector.3117", %"class.WTF::Vector.3117"* %6, i64 0, i32 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.WTF::Vector.3117", %"class.WTF::Vector.3117"* %6, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 0, i64 16, i1 false) #10
  %92 = bitcast %"class.blink::LayoutObject"* %82 to void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)***
  %93 = load void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)**, void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)*, void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)** %93, i64 67
  %95 = load void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)*, void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3117"*, i32)** %94, align 8
  call void %95(%"class.blink::LayoutObject"* %82, %"class.WTF::Vector.3117"* nonnull dereferenceable(16) %6, i32 0) #10
  %96 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %90, align 8
  %97 = load i32, i32* %91, align 4
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %96, i64 %98
  %100 = icmp eq i32 %97, 0
  br i1 %100, label %118, label %103

101:                                              ; preds = %103
  %102 = icmp eq %"class.blink::FloatQuad"* %112, %99
  br i1 %102, label %113, label %103

103:                                              ; preds = %88, %101
  %104 = phi %"class.blink::FloatQuad"* [ %112, %101 ], [ %96, %88 ]
  %105 = call { <2 x float>, <2 x float> } @_ZNK5blink9FloatQuad11BoundingBoxEv(%"class.blink::FloatQuad"* %104) #10
  %106 = extractvalue { <2 x float>, <2 x float> } %105, 1
  %107 = extractelement <2 x float> %106, i32 0
  %108 = fcmp ugt float %107, 0.000000e+00
  %109 = extractelement <2 x float> %106, i32 1
  %110 = fcmp ugt float %109, 0.000000e+00
  %111 = and i1 %108, %110
  %112 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %104, i64 1
  br i1 %111, label %101, label %115

113:                                              ; preds = %101
  %114 = load i32, i32* %91, align 4
  br label %115

115:                                              ; preds = %103, %113
  %116 = phi i32 [ %114, %113 ], [ 1, %103 ]
  %117 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %90, align 8
  br label %118

118:                                              ; preds = %115, %88
  %119 = phi %"class.blink::FloatQuad"* [ %117, %115 ], [ %96, %88 ]
  %120 = phi i32 [ %116, %115 ], [ 0, %88 ]
  %121 = icmp eq %"class.blink::FloatQuad"* %119, null
  %122 = bitcast %"class.blink::FloatQuad"* %119 to i8*
  br i1 %121, label %128, label %123, !prof !3

123:                                              ; preds = %118
  %124 = load i32, i32* %91, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %127, label %126, !prof !2

126:                                              ; preds = %123
  store i32 0, i32* %91, align 4
  br label %127

127:                                              ; preds = %126, %123
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %122) #10
  store %"class.blink::FloatQuad"* null, %"class.blink::FloatQuad"** %90, align 8
  br label %128

128:                                              ; preds = %118, %127
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %89) #10
  %129 = icmp sgt i32 %120, 1
  br i1 %129, label %133, label %130

130:                                              ; preds = %128
  %131 = load i64, i64* %66, align 8
  %132 = load i64, i64* %59, align 8
  br label %137

133:                                              ; preds = %128
  %134 = call { i64, i64 } @_ZN5blink20SearchOriginFragmentERKNS_12PhysicalRectERKNS_12LayoutObjectENS_26SpatialNavigationDirectionE(%"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %9, %"class.blink::LayoutObject"* dereferenceable(88) %82, i32 %2)
  %135 = extractvalue { i64, i64 } %134, 0
  %136 = extractvalue { i64, i64 } %134, 1
  store i64 %135, i64* %66, align 8
  store i64 %136, i64* %59, align 8
  br label %137

137:                                              ; preds = %130, %78, %133
  %138 = phi i64 [ %132, %130 ], [ %65, %78 ], [ %136, %133 ]
  %139 = phi i64 [ %131, %130 ], [ %64, %78 ], [ %135, %133 ]
  %140 = call { i64, i64 } @_ZN5blink24ShrinkInlineBoxToLineBoxERKNS_12LayoutObjectENS_12PhysicalRectEi(%"class.blink::LayoutObject"* dereferenceable(88) %82, i64 %139, i64 %138, i32 1)
  %141 = extractvalue { i64, i64 } %140, 0
  %142 = extractvalue { i64, i64 } %140, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #10
  br label %175

143:                                              ; preds = %38
  %144 = tail call %"class.blink::Node"* @_ZN5blink26ScrollableAreaOrDocumentOfEPNS_4NodeE(%"class.blink::Node"* %41)
  %145 = icmp eq %"class.blink::Node"* %144, null
  br i1 %145, label %171, label %146

146:                                              ; preds = %143, %168
  %147 = phi %"class.blink::Node"* [ %169, %168 ], [ %144, %143 ]
  %148 = tail call { <2 x float>, <2 x float> } @_ZN5blink14RectInViewportERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %147) #10
  %149 = extractvalue { <2 x float>, <2 x float> } %148, 1
  %150 = extractelement <2 x float> %149, i32 0
  %151 = fcmp ole float %150, 0.000000e+00
  %152 = extractelement <2 x float> %149, i32 1
  %153 = fcmp ole float %152, 0.000000e+00
  %154 = or i1 %153, %151
  br i1 %154, label %168, label %155

155:                                              ; preds = %146
  %156 = tail call { i64, i64 } @_ZN5blink19NodeRectInRootFrameEPKNS_4NodeE(%"class.blink::Node"* nonnull %147)
  %157 = extractvalue { i64, i64 } %156, 0
  %158 = extractvalue { i64, i64 } %156, 1
  %159 = bitcast <2 x i64>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %159) #10
  %160 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %160)
  %161 = bitcast <2 x i64>* %4 to %"struct.blink::PhysicalRect"*
  %162 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %163 = getelementptr inbounds <2 x i64>, <2 x i64>* %4, i64 0, i64 0
  store i64 %157, i64* %163, align 16
  store i64 %158, i64* %162, align 8
  call void @_ZN5blink12PhysicalRect9IntersectERKS0_(%"struct.blink::PhysicalRect"* nonnull %161, %"struct.blink::PhysicalRect"* dereferenceable(16) %0) #10
  %164 = load <2 x i64>, <2 x i64>* %4, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %160)
  store <2 x i64> %164, <2 x i64>* %10, align 16
  %165 = call { i64, i64 } @_ZN5blink12OppositeEdgeENS_26SpatialNavigationDirectionERKNS_12PhysicalRectENS_10LayoutUnitE(i32 %2, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %11, i32 0)
  %166 = extractvalue { i64, i64 } %165, 0
  %167 = extractvalue { i64, i64 } %165, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %159) #10
  br label %175

168:                                              ; preds = %146
  %169 = tail call %"class.blink::Node"* @_ZN5blink26ScrollableAreaOrDocumentOfEPNS_4NodeE(%"class.blink::Node"* nonnull %147)
  %170 = icmp eq %"class.blink::Node"* %169, null
  br i1 %170, label %171, label %146

171:                                              ; preds = %168, %143
  %172 = tail call { i64, i64 } @_ZN5blink12OppositeEdgeENS_26SpatialNavigationDirectionERKNS_12PhysicalRectENS_10LayoutUnitE(i32 %2, %"struct.blink::PhysicalRect"* dereferenceable(16) %0, i32 0)
  %173 = extractvalue { i64, i64 } %172, 0
  %174 = extractvalue { i64, i64 } %172, 1
  br label %175

175:                                              ; preds = %50, %137, %171, %155, %13
  %176 = phi i64 [ %15, %13 ], [ %52, %50 ], [ %141, %137 ], [ %166, %155 ], [ %173, %171 ]
  %177 = phi i64 [ %16, %13 ], [ %53, %50 ], [ %142, %137 ], [ %167, %155 ], [ %174, %171 ]
  %178 = insertvalue { i64, i64 } undef, i64 %176, 0
  %179 = insertvalue { i64, i64 } %178, i64 %177, 1
  ret { i64, i64 } %179
}

declare { <2 x float>, <2 x float> } @_ZNK5blink9FloatQuad11BoundingBoxEv(%"class.blink::FloatQuad"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare <2 x float> @_ZNK5blink24PaintLayerScrollableArea15GetScrollOffsetEv(%"class.blink::PaintLayerScrollableArea"*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #8

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i32(i32) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #8

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #8

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #8

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3045"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3042"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.3042", %"class.WTF::Vector.3042"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.3042", %"class.WTF::Vector.3042"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::VectorBackedLinkedListNode.3045"*, %"class.WTF::VectorBackedLinkedListNode.3045"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3045", %"class.WTF::VectorBackedLinkedListNode.3045"* %24, i64 %25
  ret %"class.WTF::VectorBackedLinkedListNode.3045"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind readnone }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE6rbeginEv: argument 0"}
!6 = distinct !{!6, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE6rbeginEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE4rendEv: argument 0"}
!9 = distinct !{!9, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE4rendEv"}
