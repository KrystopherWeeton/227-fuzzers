; ModuleID = '../../third_party/blink/renderer/core/html/parser/html_tokenizer.cc'
source_filename = "../../third_party/blink/renderer/core/html/parser/html_tokenizer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.13 }
%class.scoped_refptr.13 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::HTMLTokenizer" = type <{ i32, i8, i8, [2 x i8], %"class.blink::HTMLToken"*, i16, [6 x i8], %"class.blink::InputStreamPreprocessor", %class.LiteralBuffer.0, %class.LiteralBuffer.7, %class.LiteralBuffer.7, %"class.blink::HTMLParserOptions", [6 x i8] }>
%"class.blink::HTMLToken" = type { i32, %"class.blink::HTMLToken::Attribute::Range", i32, %class.LiteralBuffer, i16, i8, %"class.WTF::Vector", %"class.blink::HTMLToken::Attribute"*, %"class.std::__1::unique_ptr" }
%"class.blink::HTMLToken::Attribute::Range" = type { i32, i32 }
%class.LiteralBuffer = type { i16*, i16*, i16*, [256 x i16] }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [1920 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.blink::HTMLToken::Attribute"*, i32, i32 }
%"class.blink::HTMLToken::Attribute" = type { %class.LiteralBuffer.0, %class.LiteralBuffer.0, %"class.blink::HTMLToken::Attribute::Range", %"class.blink::HTMLToken::Attribute::Range" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::DoctypeData"* }
%"class.blink::DoctypeData" = type <{ i8, i8, [6 x i8], %"class.WTF::Vector.1", %"class.WTF::Vector.1", i8, [7 x i8] }>
%"class.WTF::Vector.1" = type { %"class.WTF::VectorBuffer.2" }
%"class.WTF::VectorBuffer.2" = type { %"class.WTF::VectorBufferBase.3" }
%"class.WTF::VectorBufferBase.3" = type { i16*, i32, i32 }
%"class.blink::InputStreamPreprocessor" = type <{ %"class.blink::HTMLTokenizer"*, i8, [7 x i8] }>
%class.LiteralBuffer.0 = type { i16*, i16*, i16*, [32 x i16] }
%class.LiteralBuffer.7 = type { i8*, i8*, i8*, [32 x i8] }
%"class.blink::HTMLParserOptions" = type { i8, i8 }
%"class.blink::SegmentedString" = type <{ %"class.blink::SegmentedSubstring", i32, i32, i32, [4 x i8], %"class.WTF::Deque", i8, i8, [6 x i8] }>
%"class.blink::SegmentedSubstring" = type { %union.anon, i8*, i8*, i8, i8, %"class.WTF::String" }
%union.anon = type { i8* }
%"class.WTF::Deque" = type { %"class.WTF::Deque<blink::SegmentedSubstring, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::SegmentedSubstring, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.11" }
%"class.WTF::VectorBuffer.11" = type { %"class.WTF::VectorBufferBase.12" }
%"class.WTF::VectorBufferBase.12" = type { %"class.blink::SegmentedSubstring"*, i32, i32 }
%"class.blink::DecodedHTMLEntity" = type { i32, [4 x i16] }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.26 }
%union.anon.26 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.14, i32, i8, i8, [2 x i8] }>
%union.anon.14 = type { %"class.WTF::Vector.15" }
%"class.WTF::Vector.15" = type { %"class.WTF::VectorBuffer.16" }
%"class.WTF::VectorBuffer.16" = type { %"class.WTF::VectorBufferBase.17", [16 x i8] }
%"class.WTF::VectorBufferBase.17" = type { i8*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::Vector.20" = type { %"class.WTF::VectorBuffer.21" }
%"class.WTF::VectorBuffer.21" = type { %"class.WTF::VectorBufferBase.3", [16 x i8] }

$_ZN5blink9HTMLToken11BeginEndTagERK13LiteralBufferIhLj32EE = comdat any

$_ZN5blink9HTMLToken13BeginStartTagEDs = comdat any

$_ZN5blink9HTMLToken11BeginEndTagEh = comdat any

$_ZN5blink13HTMLTokenizer15EmitAndResumeInERNS_15SegmentedStringENS0_5StateE = comdat any

$_ZN5blink13HTMLTokenizer19IsAppropriateEndTagEv = comdat any

$_ZN5blink9HTMLToken12BeginDOCTYPEEDs = comdat any

$_ZN3WTF6VectorIN5blink9HTMLToken9AttributeELj10ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9HTMLToken9AttributeEEEmm = comdat any

$_ZN3WTF20VectorTypeOperationsIN5blink9HTMLToken9AttributeENS_18PartitionAllocatorEE4MoveEPS3_S6_S6_b = comdat any

$_ZN3WTF12VectorBufferIN5blink9HTMLToken9AttributeELj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN13LiteralBufferIDsLj256EE4GrowEm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN13LiteralBufferIDsLj256EE4GrowEv = comdat any

$_ZN3WTF6VectorIN5blink9HTMLToken9AttributeELj10ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink9HTMLToken9AttributeELj10ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN13LiteralBufferIDsLj32EE4GrowEv = comdat any

$_ZN13LiteralBufferIDsLj32EE4GrowEm = comdat any

$_ZN5blink15SegmentedString15LookAheadInlineERKN3WTF6StringENS1_19TextCaseSensitivityE = comdat any

$_ZN5blink15SegmentedString17LookAheadSlowCaseERKN3WTF6StringENS1_19TextCaseSensitivityE = comdat any

$_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv = comdat any

$_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs = comdat any

$_ZN13LiteralBufferIhLj32EE4GrowEv = comdat any

$_ZN13LiteralBufferIhLj32EE4GrowEm = comdat any

@_ZN5blink10html_names10kScriptTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink20html_tokenizer_names9kDashDashE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink20html_tokenizer_names8kDoctypeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink20html_tokenizer_names6kCdataE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink20html_tokenizer_names7kPublicE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink20html_tokenizer_names7kSystemE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names12kTextareaTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTitleTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names13kPlaintextTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kStyleTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kIFrameTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kXmpTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kNoembedTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kNoframesTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kNoscriptTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9HTMLToken9AttributeEEEPKcv = private unnamed_addr constant [75 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HTMLToken::Attribute]\00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"LiteralBuffer\00", align 1
@_ZN5blinkL21character_scan_flags_E = internal unnamed_addr constant <{ [63 x i8], [65 x i8] }> <{ [63 x i8] c"\01\00\00\00\00\00\00\00\00\04\02\00\04\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\80\00\00\00\08\80\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\10@ ", [65 x i8] zeroinitializer }>, align 16
@.str.8 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.9 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"size() > index\00", align 1
@.str.13 = private unnamed_addr constant [67 x i8] c"../../third_party/blink/renderer/core/html/parser/literal_buffer.h\00", align 1

@_ZN5blink13HTMLTokenizerC1ERKNS_17HTMLParserOptionsE = hidden unnamed_addr alias void (%"class.blink::HTMLTokenizer"*, %"class.blink::HTMLParserOptions"*), void (%"class.blink::HTMLTokenizer"*, %"class.blink::HTMLParserOptions"*)* @_ZN5blink13HTMLTokenizerC2ERKNS_17HTMLParserOptionsE
@_ZN5blink13HTMLTokenizerD1Ev = hidden unnamed_addr alias void (%"class.blink::HTMLTokenizer"*), void (%"class.blink::HTMLTokenizer"*)* @_ZN5blink13HTMLTokenizerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink13HTMLTokenizerC2ERKNS_17HTMLParserOptionsE(%"class.blink::HTMLTokenizer"*, %"class.blink::HTMLParserOptions"* nocapture readonly dereferenceable(2)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 0
  store %"class.blink::HTMLTokenizer"* %0, %"class.blink::HTMLTokenizer"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 0
  %6 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 3, i64 0
  store i16* %6, i16** %5, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  store i16* %6, i16** %7, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 2
  %9 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 3, i64 32
  store i16* %9, i16** %8, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 0
  %11 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 3, i64 0
  store i8* %11, i8** %10, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  store i8* %11, i8** %12, align 8
  %13 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 2
  %14 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 3, i64 32
  store i8* %14, i8** %13, align 8
  %15 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 10, i32 0
  %16 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 10, i32 3, i64 0
  store i8* %16, i8** %15, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 10, i32 1
  store i8* %16, i8** %17, align 8
  %18 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 10, i32 2
  %19 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 10, i32 3, i64 32
  store i8* %19, i8** %18, align 8
  %20 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 11, i32 0
  %21 = bitcast %"class.blink::HTMLParserOptions"* %1 to i16*
  %22 = bitcast i8* %20 to i16*
  %23 = load i16, i16* %21, align 1
  store i16 %23, i16* %22, align 8
  %24 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 0
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 4
  store %"class.blink::HTMLToken"* null, %"class.blink::HTMLToken"** %25, align 8
  %26 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 1
  store i8 0, i8* %26, align 4
  %27 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 2
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 5
  store i16 0, i16* %28, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink13HTMLTokenizer5ResetEv(%"class.blink::HTMLTokenizer"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 4
  store %"class.blink::HTMLToken"* null, %"class.blink::HTMLToken"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 1
  store i8 0, i8* %4, align 4
  %5 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 5
  store i16 0, i16* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13HTMLTokenizerD2Ev(%"class.blink::HTMLTokenizer"* readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 10, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 10, i32 3, i64 0
  %5 = icmp eq i8* %3, %4
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %3) #11
  br label %7

7:                                                ; preds = %1, %6
  %8 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 3, i64 0
  %11 = icmp eq i8* %9, %10
  br i1 %11, label %13, label %12

12:                                               ; preds = %7
  tail call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %9) #11
  br label %13

13:                                               ; preds = %7, %12
  %14 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 3, i64 0
  %17 = icmp eq i16* %15, %16
  br i1 %17, label %20, label %18

18:                                               ; preds = %13
  %19 = bitcast i16* %15 to i8*
  tail call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %19) #11
  br label %20

20:                                               ; preds = %13, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13HTMLTokenizer9NextTokenERNS_15SegmentedStringERNS_9HTMLTokenE(%"class.blink::HTMLTokenizer"*, %"class.blink::SegmentedString"* dereferenceable(88), %"class.blink::HTMLToken"* dereferenceable(2512)) local_unnamed_addr #3 align 2 {
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  %6 = alloca i16, align 2
  %7 = alloca i16, align 2
  %8 = alloca i8, align 1
  %9 = alloca %"class.blink::DecodedHTMLEntity", align 4
  %10 = alloca i8, align 1
  %11 = alloca %"class.blink::DecodedHTMLEntity", align 4
  %12 = alloca i8, align 1
  %13 = alloca %"class.blink::DecodedHTMLEntity", align 4
  %14 = alloca i16, align 2
  %15 = alloca i8, align 1
  %16 = alloca %"class.blink::DecodedHTMLEntity", align 4
  %17 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 4
  store %"class.blink::HTMLToken"* %2, %"class.blink::HTMLToken"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 10
  %19 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 10, i32 1
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %class.LiteralBuffer.7* %18 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %21, %23
  br i1 %24, label %42, label %25

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  switch i32 %27, label %28 [
    i32 11, label %42
    i32 12, label %42
    i32 14, label %42
    i32 15, label %42
    i32 17, label %42
    i32 18, label %42
    i32 25, label %42
    i32 26, label %42
  ]

28:                                               ; preds = %25
  tail call void @_ZN5blink9HTMLToken11BeginEndTagERK13LiteralBufferIhLj32EE(%"class.blink::HTMLToken"* %2, %class.LiteralBuffer.7* dereferenceable(56) %18)
  %29 = load i64, i64* %22, align 8
  store i64 %29, i64* %20, align 8
  %30 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %31 = bitcast %class.LiteralBuffer.0* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  %34 = bitcast i16** %33 to i64*
  store i64 %32, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %36 = bitcast %class.LiteralBuffer.7* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %39 = bitcast i8** %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = load i32, i32* %26, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %14212, label %42

42:                                               ; preds = %25, %25, %25, %25, %25, %25, %25, %25, %28, %3
  %43 = bitcast i16* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %43) #11
  store i16 -21846, i16* %14, align 2
  %44 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 7
  %45 = load i8, i8* %44, align 1, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %68

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7
  %49 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 4
  %50 = load i8, i8* %49, align 1, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i16
  br label %61

57:                                               ; preds = %47
  %58 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %59 = load i16*, i16** %58, align 8
  %60 = load i16, i16* %59, align 2
  br label %61

61:                                               ; preds = %57, %52
  %62 = phi i16 [ %56, %52 ], [ %60, %57 ]
  store i16 %62, i16* %14, align 2
  %63 = icmp ugt i16 %62, 15
  br i1 %63, label %64, label %66

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %65, align 8
  br label %73

66:                                               ; preds = %61
  %67 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %67, label %73, label %68

68:                                               ; preds = %42, %66
  %69 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %70 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %69, i64 0, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 5
  br label %14210

73:                                               ; preds = %64, %66
  %74 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 0
  %75 = load i32, i32* %74, align 8
  switch i32 %75, label %14210 [
    i32 0, label %76
    i32 1, label %635
    i32 2, label %722
    i32 3, label %946
    i32 4, label %2974
    i32 5, label %1207
    i32 6, label %1405
    i32 7, label %1806
    i32 8, label %1937
    i32 9, label %2055
    i32 10, label %2223
    i32 11, label %2285
    i32 12, label %2383
    i32 13, label %2911
    i32 14, label %2985
    i32 15, label %3083
    i32 16, label %3611
    i32 17, label %3726
    i32 18, label %3824
    i32 19, label %4352
    i32 20, label %4409
    i32 21, label %4466
    i32 22, label %4640
    i32 23, label %4819
    i32 24, label %5049
    i32 25, label %5184
    i32 26, label %5282
    i32 27, label %5810
    i32 28, label %6072
    i32 29, label %6268
    i32 30, label %6464
    i32 31, label %6711
    i32 32, label %6773
    i32 33, label %7035
    i32 34, label %7788
    i32 35, label %7583
    i32 36, label %7802
    i32 37, label %8084
    i32 38, label %8286
    i32 39, label %8488
    i32 40, label %8710
    i32 41, label %8838
    i32 42, label %8952
    i32 43, label %8963
    i32 44, label %8966
    i32 45, label %9113
    i32 46, label %9305
    i32 47, label %9486
    i32 48, label %9683
    i32 49, label %9862
    i32 50, label %10057
    i32 51, label %10318
    i32 52, label %10590
    i32 53, label %10761
    i32 54, label %10958
    i32 55, label %11147
    i32 56, label %11373
    i32 57, label %11655
    i32 58, label %11883
    i32 59, label %12076
    i32 60, label %12269
    i32 61, label %12547
    i32 62, label %12771
    i32 63, label %13053
    i32 64, label %13281
    i32 65, label %13474
    i32 66, label %13667
    i32 67, label %13783
    i32 68, label %9284
    i32 69, label %14029
    i32 70, label %14086
  ]

76:                                               ; preds = %14163, %2008, %713, %1931, %2049, %2154, %7510, %8014, %8178, %8380, %8640, %8950, %8960, %73, %715, %2013, %14168
  %77 = load i16, i16* %14, align 2
  br label %78

78:                                               ; preds = %76, %13950, %7675, %7093, %6621, %6374, %6178, %4959, %4729, %4561
  %79 = phi i16 [ %77, %76 ], [ 0, %13950 ], [ 0, %7675 ], [ 0, %7093 ], [ 0, %6621 ], [ 0, %6374 ], [ 0, %6178 ], [ 0, %4959 ], [ 0, %4729 ], [ 0, %4561 ]
  switch i16 %79, label %224 [
    i16 38, label %80
    i16 60, label %114
    i16 0, label %153
  ]

80:                                               ; preds = %78
  store i32 1, i32* %74, align 8
  %81 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %84 = load i8*, i8** %83, align 8
  %85 = icmp ult i8* %82, %84
  br i1 %85, label %86, label %97, !prof !3

86:                                               ; preds = %80
  %87 = load i8, i8* %49, align 1, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %93, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds i8, i8* %82, i64 1
  store i8* %90, i8** %81, align 8
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i16
  br label %99

93:                                               ; preds = %86
  %94 = getelementptr inbounds i8, i8* %82, i64 2
  %95 = bitcast i8* %94 to i16*
  store i8* %94, i8** %81, align 8
  %96 = load i16, i16* %95, align 2
  br label %99

97:                                               ; preds = %80
  %98 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %99

99:                                               ; preds = %97, %93, %89
  %100 = phi i16 [ %98, %97 ], [ %92, %89 ], [ %96, %93 ]
  store i16 %100, i16* %14, align 2
  %101 = icmp ugt i16 %100, 15
  br i1 %101, label %102, label %104

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %103, align 8
  br label %635

104:                                              ; preds = %99
  %105 = load i8, i8* %44, align 1, !range !2
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %107, label %109

107:                                              ; preds = %104
  %108 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %108, label %635, label %109

109:                                              ; preds = %104, %107
  %110 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %111 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %110, i64 0, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = icmp eq i32 %112, 5
  br label %14210

114:                                              ; preds = %78
  %115 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %116 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %115, i64 0, i32 0
  %117 = load i32, i32* %116, align 8
  %118 = icmp eq i32 %117, 5
  br i1 %118, label %14210, label %119

119:                                              ; preds = %114
  store i32 7, i32* %74, align 8
  %120 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  %122 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %123 = load i8*, i8** %122, align 8
  %124 = icmp ult i8* %121, %123
  br i1 %124, label %125, label %136, !prof !3

125:                                              ; preds = %119
  %126 = load i8, i8* %49, align 1, !range !2
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %132, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds i8, i8* %121, i64 1
  store i8* %129, i8** %120, align 8
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i16
  br label %138

132:                                              ; preds = %125
  %133 = getelementptr inbounds i8, i8* %121, i64 2
  %134 = bitcast i8* %133 to i16*
  store i8* %133, i8** %120, align 8
  %135 = load i16, i16* %134, align 2
  br label %138

136:                                              ; preds = %119
  %137 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %138

138:                                              ; preds = %136, %132, %128
  %139 = phi i16 [ %137, %136 ], [ %131, %128 ], [ %135, %132 ]
  store i16 %139, i16* %14, align 2
  %140 = icmp ugt i16 %139, 15
  br i1 %140, label %141, label %143

141:                                              ; preds = %138
  %142 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %142, align 8
  br label %1808

143:                                              ; preds = %138
  %144 = load i8, i8* %44, align 1, !range !2
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %146, label %148

146:                                              ; preds = %143
  %147 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %147, label %1806, label %148

148:                                              ; preds = %143, %146
  %149 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %150 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %149, i64 0, i32 0
  %151 = load i32, i32* %150, align 8
  %152 = icmp eq i32 %151, 5
  br label %14210

153:                                              ; preds = %78
  %154 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %155 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %154, i64 0, i32 0
  %156 = load i32, i32* %155, align 8
  %157 = icmp eq i32 %156, 5
  br i1 %157, label %14210, label %158

158:                                              ; preds = %153
  store i32 0, i32* %74, align 8
  %159 = load i8, i8* %49, align 1, !range !2
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %167, label %161

161:                                              ; preds = %158
  %162 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %163 = load i8*, i8** %162, align 8
  %164 = load i8, i8* %163, align 1
  %165 = zext i8 %164 to i16
  %166 = ptrtoint i8* %163 to i64
  br label %173

167:                                              ; preds = %158
  %168 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %169 = load i16*, i16** %168, align 8
  %170 = load i16, i16* %169, align 2
  %171 = ptrtoint i16* %169 to i64
  %172 = bitcast i16* %169 to i8*
  br label %173

173:                                              ; preds = %167, %161
  %174 = phi i8* [ %163, %161 ], [ %172, %167 ]
  %175 = phi i64 [ %166, %161 ], [ %171, %167 ]
  %176 = phi i16 [ %165, %161 ], [ %170, %167 ]
  %177 = icmp eq i16 %176, 10
  br i1 %177, label %178, label %199

178:                                              ; preds = %173
  %179 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %180 = load i8, i8* %179, align 8, !range !2
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %199, label %182, !prof !4

182:                                              ; preds = %178
  %183 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %184 = load i32, i32* %183, align 8
  %185 = add nsw i32 %184, 1
  store i32 %185, i32* %183, align 8
  %186 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %187 = load i32, i32* %186, align 8
  %188 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %189 = bitcast i8** %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = sub i64 %175, %190
  %192 = trunc i64 %191 to i32
  %193 = xor i8 %159, 1
  %194 = zext i8 %193 to i32
  %195 = ashr i32 %192, %194
  %196 = add i32 %187, 1
  %197 = add i32 %196, %195
  %198 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %197, i32* %198, align 4
  br label %199

199:                                              ; preds = %182, %178, %173
  %200 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %201 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %202 = load i8*, i8** %201, align 8
  %203 = icmp ult i8* %174, %202
  br i1 %203, label %204, label %209, !prof !3

204:                                              ; preds = %199
  br i1 %160, label %207, label %205

205:                                              ; preds = %204
  %206 = getelementptr inbounds i8, i8* %174, i64 1
  store i8* %206, i8** %200, align 8
  br label %211

207:                                              ; preds = %204
  %208 = getelementptr inbounds i8, i8* %174, i64 2
  store i8* %208, i8** %200, align 8
  br label %211

209:                                              ; preds = %199
  %210 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %211

211:                                              ; preds = %209, %207, %205
  %212 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %213 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %212, i64 0, i32 0
  store i32 0, i32* %213, align 8
  %214 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %212, i64 0, i32 1, i32 0
  store i32 0, i32* %214, align 4
  %215 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %212, i64 0, i32 2
  store i32 0, i32* %215, align 4
  %216 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %212, i64 0, i32 3
  %217 = bitcast %class.LiteralBuffer* %216 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %212, i64 0, i32 3, i32 1
  %220 = bitcast i16** %219 to i64*
  store i64 %218, i64* %220, align 8
  %221 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %212, i64 0, i32 4
  store i16 0, i16* %221, align 8
  %222 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %223 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %222, i64 0, i32 0
  store i32 6, i32* %223, align 8
  br label %14210

224:                                              ; preds = %78
  %225 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %226 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %225, i64 0, i32 0
  store i32 5, i32* %226, align 8
  %227 = icmp eq i16 %79, 10
  br i1 %227, label %228, label %240

228:                                              ; preds = %224
  %229 = load i8, i8* %49, align 1, !range !2
  %230 = icmp eq i8 %229, 0
  br i1 %230, label %236, label %231

231:                                              ; preds = %228
  %232 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %233 = load i8*, i8** %232, align 8
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i16
  br label %240

236:                                              ; preds = %228
  %237 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %238 = load i16*, i16** %237, align 8
  %239 = load i16, i16* %238, align 2
  br label %240

240:                                              ; preds = %236, %231, %224
  %241 = phi i16 [ %79, %224 ], [ %235, %231 ], [ %239, %236 ]
  %242 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %243 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %244 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 6
  %245 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 0
  %246 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %247 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %248 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %249 = bitcast %"class.blink::SegmentedString"* %1 to i64*
  %250 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %251 = bitcast i8** %250 to i64*
  %252 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  %253 = bitcast %"class.blink::DecodedHTMLEntity"* %13 to i8*
  %254 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %13, i64 0, i32 0
  %255 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %13, i64 0, i32 1
  %256 = bitcast [4 x i16]* %255 to i64*
  %257 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  br label %258

258:                                              ; preds = %299, %240
  %259 = phi i16 [ %241, %240 ], [ %300, %299 ]
  %260 = icmp ult i16 %259, 128
  br i1 %260, label %261, label %267

261:                                              ; preds = %258
  %262 = zext i16 %259 to i64
  %263 = getelementptr inbounds [128 x i8], [128 x i8]* bitcast (<{ [63 x i8], [65 x i8] }>* @_ZN5blinkL21character_scan_flags_E to [128 x i8]*), i64 0, i64 %262
  %264 = load i8, i8* %263, align 1
  %265 = and i8 %264, 27
  %266 = icmp eq i8 %265, 0
  br i1 %266, label %267, label %301

267:                                              ; preds = %261, %258
  %268 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %269 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %268, i64 0, i32 3, i32 1
  %270 = load i16*, i16** %269, align 8
  %271 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %268, i64 0, i32 3, i32 2
  %272 = load i16*, i16** %271, align 8
  %273 = icmp eq i16* %270, %272
  br i1 %273, label %274, label %277, !prof !4

274:                                              ; preds = %267
  %275 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %268, i64 0, i32 3
  %276 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %275) #11
  store i16* %276, i16** %269, align 8
  br label %277

277:                                              ; preds = %274, %267
  %278 = phi i16* [ %276, %274 ], [ %270, %267 ]
  %279 = getelementptr inbounds i16, i16* %278, i64 1
  store i16* %279, i16** %269, align 8
  store i16 %259, i16* %278, align 2
  %280 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %268, i64 0, i32 4
  %281 = load i16, i16* %280, align 8
  %282 = or i16 %281, %259
  store i16 %282, i16* %280, align 8
  %283 = load i8*, i8** %242, align 8
  %284 = load i8*, i8** %243, align 8
  %285 = icmp ult i8* %283, %284
  br i1 %285, label %286, label %297, !prof !3

286:                                              ; preds = %277
  %287 = load i8, i8* %49, align 1, !range !2
  %288 = icmp eq i8 %287, 0
  br i1 %288, label %293, label %289

289:                                              ; preds = %286
  %290 = getelementptr inbounds i8, i8* %283, i64 1
  store i8* %290, i8** %242, align 8
  %291 = load i8, i8* %290, align 1
  %292 = zext i8 %291 to i16
  br label %299

293:                                              ; preds = %286
  %294 = getelementptr inbounds i8, i8* %283, i64 2
  %295 = bitcast i8* %294 to i16*
  store i8* %294, i8** %242, align 8
  %296 = load i16, i16* %295, align 2
  br label %299

297:                                              ; preds = %277
  %298 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %299

299:                                              ; preds = %571, %297, %293, %289, %542, %522, %517, %504, %500, %496, %467, %430, %426, %422, %377, %373, %301
  %300 = phi i16 [ %298, %297 ], [ %292, %289 ], [ %296, %293 ], [ %259, %301 ], [ %376, %373 ], [ %379, %377 ], [ %431, %430 ], [ %425, %422 ], [ %429, %426 ], [ %505, %504 ], [ %462, %467 ], [ %543, %542 ], [ -3, %522 ], [ -3, %517 ], [ %503, %500 ], [ %499, %496 ], [ %572, %571 ]
  br label %258

301:                                              ; preds = %261
  switch i16 %259, label %299 [
    i16 38, label %302
    i16 10, label %380
    i16 13, label %432
    i16 60, label %14210
    i16 0, label %508
  ]

302:                                              ; preds = %301
  store i32 1, i32* %74, align 8
  %303 = load i8*, i8** %242, align 8
  %304 = load i8*, i8** %243, align 8
  %305 = icmp ult i8* %303, %304
  br i1 %305, label %306, label %313, !prof !3

306:                                              ; preds = %302
  %307 = load i8, i8* %49, align 1, !range !2
  %308 = icmp eq i8 %307, 0
  br i1 %308, label %311, label %309

309:                                              ; preds = %306
  %310 = getelementptr inbounds i8, i8* %303, i64 1
  store i8* %310, i8** %242, align 8
  br label %315

311:                                              ; preds = %306
  %312 = getelementptr inbounds i8, i8* %303, i64 2
  store i8* %312, i8** %242, align 8
  br label %315

313:                                              ; preds = %302
  %314 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %315

315:                                              ; preds = %313, %311, %309
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #11
  store i8 0, i8* %12, align 1
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %253) #11
  store i64 -6148914691236517206, i64* %256, align 4
  store i32 0, i32* %254, align 4
  %316 = call zeroext i1 @_ZN5blink17ConsumeHTMLEntityERNS_15SegmentedStringERNS_17DecodedHTMLEntityERbDs(%"class.blink::SegmentedString"* dereferenceable(88) %1, %"class.blink::DecodedHTMLEntity"* nonnull dereferenceable(12) %13, i8* nonnull dereferenceable(1) %12, i16 zeroext 0) #11
  %317 = load i8, i8* %12, align 1, !range !2
  %318 = icmp eq i8 %317, 0
  br i1 %318, label %319, label %366

319:                                              ; preds = %315
  br i1 %316, label %320, label %323

320:                                              ; preds = %319
  %321 = load i32, i32* %254, align 4
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %367, label %341

323:                                              ; preds = %319
  %324 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %325 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %324, i64 0, i32 0
  store i32 5, i32* %325, align 8
  %326 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %327 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %326, i64 0, i32 3, i32 1
  %328 = load i16*, i16** %327, align 8
  %329 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %326, i64 0, i32 3, i32 2
  %330 = load i16*, i16** %329, align 8
  %331 = icmp eq i16* %328, %330
  br i1 %331, label %332, label %335, !prof !4

332:                                              ; preds = %323
  %333 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %326, i64 0, i32 3
  %334 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %333) #11
  store i16* %334, i16** %327, align 8
  br label %335

335:                                              ; preds = %332, %323
  %336 = phi i16* [ %334, %332 ], [ %328, %323 ]
  %337 = getelementptr inbounds i16, i16* %336, i64 1
  store i16* %337, i16** %327, align 8
  store i16 38, i16* %336, align 2
  %338 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %326, i64 0, i32 4
  %339 = load i16, i16* %338, align 8
  %340 = or i16 %339, 38
  store i16 %340, i16* %338, align 8
  br label %367

341:                                              ; preds = %320, %356
  %342 = phi i64 [ %362, %356 ], [ 0, %320 ]
  %343 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %13, i64 0, i32 1, i64 %342
  %344 = load i16, i16* %343, align 2
  %345 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %346 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %345, i64 0, i32 0
  store i32 5, i32* %346, align 8
  %347 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %348 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %347, i64 0, i32 3, i32 1
  %349 = load i16*, i16** %348, align 8
  %350 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %347, i64 0, i32 3, i32 2
  %351 = load i16*, i16** %350, align 8
  %352 = icmp eq i16* %349, %351
  br i1 %352, label %353, label %356, !prof !4

353:                                              ; preds = %341
  %354 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %347, i64 0, i32 3
  %355 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %354) #11
  store i16* %355, i16** %348, align 8
  br label %356

356:                                              ; preds = %353, %341
  %357 = phi i16* [ %355, %353 ], [ %349, %341 ]
  %358 = getelementptr inbounds i16, i16* %357, i64 1
  store i16* %358, i16** %348, align 8
  store i16 %344, i16* %357, align 2
  %359 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %347, i64 0, i32 4
  %360 = load i16, i16* %359, align 8
  %361 = or i16 %360, %344
  store i16 %361, i16* %359, align 8
  %362 = add nuw nsw i64 %342, 1
  %363 = load i32, i32* %254, align 4
  %364 = zext i32 %363 to i64
  %365 = icmp ult i64 %362, %364
  br i1 %365, label %341, label %367

366:                                              ; preds = %315
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %253) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #11
  br label %14210

367:                                              ; preds = %356, %335, %320
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %253) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #11
  store i32 0, i32* %74, align 8
  %368 = load i8, i8* %44, align 1, !range !2
  %369 = icmp eq i8 %368, 0
  br i1 %369, label %370, label %14210

370:                                              ; preds = %367
  %371 = load i8, i8* %49, align 1, !range !2
  %372 = icmp eq i8 %371, 0
  br i1 %372, label %377, label %373

373:                                              ; preds = %370
  %374 = load i8*, i8** %242, align 8
  %375 = load i8, i8* %374, align 1
  %376 = zext i8 %375 to i16
  br label %299

377:                                              ; preds = %370
  %378 = load i16*, i16** %257, align 8
  %379 = load i16, i16* %378, align 2
  br label %299

380:                                              ; preds = %301
  %381 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %382 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %381, i64 0, i32 3, i32 1
  %383 = load i16*, i16** %382, align 8
  %384 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %381, i64 0, i32 3, i32 2
  %385 = load i16*, i16** %384, align 8
  %386 = icmp eq i16* %383, %385
  br i1 %386, label %387, label %390, !prof !4

387:                                              ; preds = %380
  %388 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %381, i64 0, i32 3
  %389 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %388) #11
  store i16* %389, i16** %382, align 8
  br label %390

390:                                              ; preds = %387, %380
  %391 = phi i16* [ %389, %387 ], [ %383, %380 ]
  %392 = getelementptr inbounds i16, i16* %391, i64 1
  store i16* %392, i16** %382, align 8
  store i16 10, i16* %391, align 2
  %393 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %381, i64 0, i32 4
  %394 = load i16, i16* %393, align 8
  %395 = or i16 %394, 10
  store i16 %395, i16* %393, align 8
  %396 = load i8, i8* %246, align 8, !range !2
  %397 = icmp eq i8 %396, 0
  br i1 %397, label %398, label %400, !prof !4

398:                                              ; preds = %390
  %399 = load i8*, i8** %242, align 8
  br label %415

400:                                              ; preds = %390
  %401 = load i32, i32* %247, align 8
  %402 = add nsw i32 %401, 1
  store i32 %402, i32* %247, align 8
  %403 = load i32, i32* %248, align 8
  %404 = load i64, i64* %249, align 8
  %405 = load i64, i64* %251, align 8
  %406 = sub i64 %404, %405
  %407 = trunc i64 %406 to i32
  %408 = load i8, i8* %49, align 1, !range !2
  %409 = xor i8 %408, 1
  %410 = zext i8 %409 to i32
  %411 = ashr i32 %407, %410
  %412 = add i32 %403, 1
  %413 = add i32 %412, %411
  store i32 %413, i32* %252, align 4
  %414 = inttoptr i64 %404 to i8*
  br label %415

415:                                              ; preds = %400, %398
  %416 = phi i8* [ %399, %398 ], [ %414, %400 ]
  %417 = load i8*, i8** %243, align 8
  %418 = icmp ult i8* %416, %417
  br i1 %418, label %419, label %430, !prof !3

419:                                              ; preds = %415
  %420 = load i8, i8* %49, align 1, !range !2
  %421 = icmp eq i8 %420, 0
  br i1 %421, label %426, label %422

422:                                              ; preds = %419
  %423 = getelementptr inbounds i8, i8* %416, i64 1
  store i8* %423, i8** %242, align 8
  %424 = load i8, i8* %423, align 1
  %425 = zext i8 %424 to i16
  br label %299

426:                                              ; preds = %419
  %427 = getelementptr inbounds i8, i8* %416, i64 2
  %428 = bitcast i8* %427 to i16*
  store i8* %427, i8** %242, align 8
  %429 = load i16, i16* %428, align 2
  br label %299

430:                                              ; preds = %415
  %431 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %299

432:                                              ; preds = %301
  %433 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %434 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %433, i64 0, i32 3, i32 1
  %435 = load i16*, i16** %434, align 8
  %436 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %433, i64 0, i32 3, i32 2
  %437 = load i16*, i16** %436, align 8
  %438 = icmp eq i16* %435, %437
  br i1 %438, label %439, label %442, !prof !4

439:                                              ; preds = %432
  %440 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %433, i64 0, i32 3
  %441 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %440) #11
  store i16* %441, i16** %434, align 8
  br label %442

442:                                              ; preds = %439, %432
  %443 = phi i16* [ %441, %439 ], [ %435, %432 ]
  %444 = getelementptr inbounds i16, i16* %443, i64 1
  store i16* %444, i16** %434, align 8
  store i16 10, i16* %443, align 2
  %445 = load i8*, i8** %242, align 8
  %446 = load i8*, i8** %243, align 8
  %447 = icmp ult i8* %445, %446
  br i1 %447, label %448, label %459, !prof !3

448:                                              ; preds = %442
  %449 = load i8, i8* %49, align 1, !range !2
  %450 = icmp eq i8 %449, 0
  br i1 %450, label %455, label %451

451:                                              ; preds = %448
  %452 = getelementptr inbounds i8, i8* %445, i64 1
  store i8* %452, i8** %242, align 8
  %453 = load i8, i8* %452, align 1
  %454 = zext i8 %453 to i16
  br label %461

455:                                              ; preds = %448
  %456 = getelementptr inbounds i8, i8* %445, i64 2
  %457 = bitcast i8* %456 to i16*
  store i8* %456, i8** %242, align 8
  %458 = load i16, i16* %457, align 2
  br label %461

459:                                              ; preds = %442
  %460 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %461

461:                                              ; preds = %459, %455, %451
  %462 = phi i16 [ %460, %459 ], [ %454, %451 ], [ %458, %455 ]
  %463 = load i8, i8* %44, align 1, !range !2
  %464 = icmp eq i8 %463, 0
  br i1 %464, label %467, label %465

465:                                              ; preds = %461
  %466 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 1, i8* %466, align 8
  br label %14210

467:                                              ; preds = %461
  %468 = icmp eq i16 %462, 10
  br i1 %468, label %469, label %299

469:                                              ; preds = %467
  %470 = load i8, i8* %246, align 8, !range !2
  %471 = icmp eq i8 %470, 0
  br i1 %471, label %472, label %474, !prof !4

472:                                              ; preds = %469
  %473 = load i8*, i8** %242, align 8
  br label %489

474:                                              ; preds = %469
  %475 = load i32, i32* %247, align 8
  %476 = add nsw i32 %475, 1
  store i32 %476, i32* %247, align 8
  %477 = load i32, i32* %248, align 8
  %478 = load i64, i64* %249, align 8
  %479 = load i64, i64* %251, align 8
  %480 = sub i64 %478, %479
  %481 = trunc i64 %480 to i32
  %482 = load i8, i8* %49, align 1, !range !2
  %483 = xor i8 %482, 1
  %484 = zext i8 %483 to i32
  %485 = ashr i32 %481, %484
  %486 = add i32 %477, 1
  %487 = add i32 %486, %485
  store i32 %487, i32* %252, align 4
  %488 = inttoptr i64 %478 to i8*
  br label %489

489:                                              ; preds = %474, %472
  %490 = phi i8* [ %473, %472 ], [ %488, %474 ]
  %491 = load i8*, i8** %243, align 8
  %492 = icmp ult i8* %490, %491
  br i1 %492, label %493, label %504, !prof !3

493:                                              ; preds = %489
  %494 = load i8, i8* %49, align 1, !range !2
  %495 = icmp eq i8 %494, 0
  br i1 %495, label %500, label %496

496:                                              ; preds = %493
  %497 = getelementptr inbounds i8, i8* %490, i64 1
  store i8* %497, i8** %242, align 8
  %498 = load i8, i8* %497, align 1
  %499 = zext i8 %498 to i16
  br label %299

500:                                              ; preds = %493
  %501 = getelementptr inbounds i8, i8* %490, i64 2
  %502 = bitcast i8* %501 to i16*
  store i8* %501, i8** %242, align 8
  %503 = load i16, i16* %502, align 2
  br label %299

504:                                              ; preds = %489
  %505 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  %506 = load i8, i8* %44, align 1, !range !2
  %507 = icmp eq i8 %506, 0
  br i1 %507, label %299, label %14210

508:                                              ; preds = %301
  %509 = load i8, i8* %44, align 1, !range !2
  %510 = icmp eq i8 %509, 0
  br i1 %510, label %511, label %14210

511:                                              ; preds = %508
  %512 = load i8, i8* %244, align 8, !range !2
  %513 = icmp eq i8 %512, 0
  br i1 %513, label %517, label %514

514:                                              ; preds = %511
  %515 = call i32 @_ZNK5blink15SegmentedString6lengthEv(%"class.blink::SegmentedString"* %1) #11
  %516 = icmp eq i32 %515, 1
  br i1 %516, label %574, label %517

517:                                              ; preds = %514, %511
  %518 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %245, align 8
  %519 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %518, i64 0, i32 1
  %520 = load i8, i8* %519, align 4, !range !2
  %521 = icmp eq i8 %520, 0
  br i1 %521, label %522, label %299

522:                                              ; preds = %517
  %523 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %518, i64 0, i32 0
  %524 = load i32, i32* %523, align 8
  switch i32 %524, label %299 [
    i32 0, label %525
    i32 2, label %525
    i32 4, label %525
  ]

525:                                              ; preds = %522, %522, %522
  %526 = load i8*, i8** %242, align 8
  %527 = load i8*, i8** %243, align 8
  %528 = icmp ult i8* %526, %527
  br i1 %528, label %529, label %540, !prof !3

529:                                              ; preds = %525
  %530 = load i8, i8* %49, align 1, !range !2
  %531 = icmp eq i8 %530, 0
  br i1 %531, label %536, label %532

532:                                              ; preds = %529
  %533 = getelementptr inbounds i8, i8* %526, i64 1
  store i8* %533, i8** %242, align 8
  %534 = load i8, i8* %533, align 1
  %535 = zext i8 %534 to i16
  br label %542

536:                                              ; preds = %529
  %537 = getelementptr inbounds i8, i8* %526, i64 2
  %538 = bitcast i8* %537 to i16*
  store i8* %537, i8** %242, align 8
  %539 = load i16, i16* %538, align 2
  br label %542

540:                                              ; preds = %525
  %541 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %542

542:                                              ; preds = %540, %536, %532
  %543 = phi i16 [ %541, %540 ], [ %535, %532 ], [ %539, %536 ]
  %544 = icmp eq i16 %543, 0
  br i1 %544, label %545, label %299

545:                                              ; preds = %542, %571
  %546 = load i8, i8* %44, align 1, !range !2
  %547 = icmp eq i8 %546, 0
  br i1 %547, label %548, label %14210

548:                                              ; preds = %545
  %549 = load i8, i8* %244, align 8, !range !2
  %550 = icmp eq i8 %549, 0
  br i1 %550, label %554, label %551

551:                                              ; preds = %548
  %552 = call i32 @_ZNK5blink15SegmentedString6lengthEv(%"class.blink::SegmentedString"* %1) #11
  %553 = icmp eq i32 %552, 1
  br i1 %553, label %574, label %554

554:                                              ; preds = %551, %548
  %555 = load i8*, i8** %242, align 8
  %556 = load i8*, i8** %243, align 8
  %557 = icmp ult i8* %555, %556
  br i1 %557, label %558, label %569, !prof !3

558:                                              ; preds = %554
  %559 = load i8, i8* %49, align 1, !range !2
  %560 = icmp eq i8 %559, 0
  br i1 %560, label %565, label %561

561:                                              ; preds = %558
  %562 = getelementptr inbounds i8, i8* %555, i64 1
  store i8* %562, i8** %242, align 8
  %563 = load i8, i8* %562, align 1
  %564 = zext i8 %563 to i16
  br label %571

565:                                              ; preds = %558
  %566 = getelementptr inbounds i8, i8* %555, i64 2
  %567 = bitcast i8* %566 to i16*
  store i8* %566, i8** %242, align 8
  %568 = load i16, i16* %567, align 2
  br label %571

569:                                              ; preds = %554
  %570 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %571

571:                                              ; preds = %569, %565, %561
  %572 = phi i16 [ %570, %569 ], [ %564, %561 ], [ %568, %565 ]
  %573 = icmp eq i16 %572, 0
  br i1 %573, label %545, label %299

574:                                              ; preds = %514, %551
  %575 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %576 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %575, i64 0, i32 0
  %577 = load i32, i32* %576, align 8
  %578 = icmp eq i32 %577, 5
  br i1 %578, label %14210, label %579

579:                                              ; preds = %574
  store i32 0, i32* %74, align 8
  %580 = load i8, i8* %49, align 1, !range !2
  %581 = icmp eq i8 %580, 0
  br i1 %581, label %587, label %582

582:                                              ; preds = %579
  %583 = load i8*, i8** %242, align 8
  %584 = load i8, i8* %583, align 1
  %585 = zext i8 %584 to i16
  %586 = ptrtoint i8* %583 to i64
  br label %592

587:                                              ; preds = %579
  %588 = load i16*, i16** %257, align 8
  %589 = load i16, i16* %588, align 2
  %590 = ptrtoint i16* %588 to i64
  %591 = bitcast i16* %588 to i8*
  br label %592

592:                                              ; preds = %587, %582
  %593 = phi i8* [ %583, %582 ], [ %591, %587 ]
  %594 = phi i64 [ %586, %582 ], [ %590, %587 ]
  %595 = phi i16 [ %585, %582 ], [ %589, %587 ]
  %596 = icmp eq i16 %595, 10
  br i1 %596, label %597, label %612

597:                                              ; preds = %592
  %598 = load i8, i8* %246, align 8, !range !2
  %599 = icmp eq i8 %598, 0
  br i1 %599, label %612, label %600, !prof !4

600:                                              ; preds = %597
  %601 = load i32, i32* %247, align 8
  %602 = add nsw i32 %601, 1
  store i32 %602, i32* %247, align 8
  %603 = load i32, i32* %248, align 8
  %604 = load i64, i64* %251, align 8
  %605 = sub i64 %594, %604
  %606 = trunc i64 %605 to i32
  %607 = xor i8 %580, 1
  %608 = zext i8 %607 to i32
  %609 = ashr i32 %606, %608
  %610 = add i32 %603, 1
  %611 = add i32 %610, %609
  store i32 %611, i32* %252, align 4
  br label %612

612:                                              ; preds = %600, %597, %592
  %613 = load i8*, i8** %243, align 8
  %614 = icmp ult i8* %593, %613
  br i1 %614, label %615, label %620, !prof !3

615:                                              ; preds = %612
  br i1 %581, label %618, label %616

616:                                              ; preds = %615
  %617 = getelementptr inbounds i8, i8* %593, i64 1
  store i8* %617, i8** %242, align 8
  br label %622

618:                                              ; preds = %615
  %619 = getelementptr inbounds i8, i8* %593, i64 2
  store i8* %619, i8** %242, align 8
  br label %622

620:                                              ; preds = %612
  %621 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %622

622:                                              ; preds = %620, %618, %616
  %623 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %624 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %623, i64 0, i32 0
  store i32 0, i32* %624, align 8
  %625 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %623, i64 0, i32 1, i32 0
  store i32 0, i32* %625, align 4
  %626 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %623, i64 0, i32 2
  store i32 0, i32* %626, align 4
  %627 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %623, i64 0, i32 3
  %628 = bitcast %class.LiteralBuffer* %627 to i64*
  %629 = load i64, i64* %628, align 8
  %630 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %623, i64 0, i32 3, i32 1
  %631 = bitcast i16** %630 to i64*
  store i64 %629, i64* %631, align 8
  %632 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %623, i64 0, i32 4
  store i16 0, i16* %632, align 8
  %633 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %634 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %633, i64 0, i32 0
  store i32 6, i32* %634, align 8
  br label %14210

635:                                              ; preds = %102, %73, %107
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #11
  store i8 0, i8* %10, align 1
  %636 = bitcast %"class.blink::DecodedHTMLEntity"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %636) #11
  %637 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %11, i64 0, i32 0
  %638 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %11, i64 0, i32 1
  %639 = bitcast [4 x i16]* %638 to i64*
  store i64 -6148914691236517206, i64* %639, align 4
  store i32 0, i32* %637, align 4
  %640 = call zeroext i1 @_ZN5blink17ConsumeHTMLEntityERNS_15SegmentedStringERNS_17DecodedHTMLEntityERbDs(%"class.blink::SegmentedString"* dereferenceable(88) %1, %"class.blink::DecodedHTMLEntity"* nonnull dereferenceable(12) %11, i8* nonnull dereferenceable(1) %10, i16 zeroext 0) #11
  %641 = load i8, i8* %10, align 1, !range !2
  %642 = icmp eq i8 %641, 0
  br i1 %642, label %643, label %690

643:                                              ; preds = %635
  br i1 %640, label %644, label %647

644:                                              ; preds = %643
  %645 = load i32, i32* %637, align 4
  %646 = icmp eq i32 %645, 0
  br i1 %646, label %695, label %665

647:                                              ; preds = %643
  %648 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %649 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %648, i64 0, i32 0
  store i32 5, i32* %649, align 8
  %650 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %651 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %650, i64 0, i32 3, i32 1
  %652 = load i16*, i16** %651, align 8
  %653 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %650, i64 0, i32 3, i32 2
  %654 = load i16*, i16** %653, align 8
  %655 = icmp eq i16* %652, %654
  br i1 %655, label %656, label %659, !prof !4

656:                                              ; preds = %647
  %657 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %650, i64 0, i32 3
  %658 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %657) #11
  store i16* %658, i16** %651, align 8
  br label %659

659:                                              ; preds = %656, %647
  %660 = phi i16* [ %658, %656 ], [ %652, %647 ]
  %661 = getelementptr inbounds i16, i16* %660, i64 1
  store i16* %661, i16** %651, align 8
  store i16 38, i16* %660, align 2
  %662 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %650, i64 0, i32 4
  %663 = load i16, i16* %662, align 8
  %664 = or i16 %663, 38
  store i16 %664, i16* %662, align 8
  br label %695

665:                                              ; preds = %644, %680
  %666 = phi i64 [ %686, %680 ], [ 0, %644 ]
  %667 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %11, i64 0, i32 1, i64 %666
  %668 = load i16, i16* %667, align 2
  %669 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %670 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %669, i64 0, i32 0
  store i32 5, i32* %670, align 8
  %671 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %672 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %671, i64 0, i32 3, i32 1
  %673 = load i16*, i16** %672, align 8
  %674 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %671, i64 0, i32 3, i32 2
  %675 = load i16*, i16** %674, align 8
  %676 = icmp eq i16* %673, %675
  br i1 %676, label %677, label %680, !prof !4

677:                                              ; preds = %665
  %678 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %671, i64 0, i32 3
  %679 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %678) #11
  store i16* %679, i16** %672, align 8
  br label %680

680:                                              ; preds = %677, %665
  %681 = phi i16* [ %679, %677 ], [ %673, %665 ]
  %682 = getelementptr inbounds i16, i16* %681, i64 1
  store i16* %682, i16** %672, align 8
  store i16 %668, i16* %681, align 2
  %683 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %671, i64 0, i32 4
  %684 = load i16, i16* %683, align 8
  %685 = or i16 %684, %668
  store i16 %685, i16* %683, align 8
  %686 = add nuw nsw i64 %666, 1
  %687 = load i32, i32* %637, align 4
  %688 = zext i32 %687 to i64
  %689 = icmp ult i64 %686, %688
  br i1 %689, label %665, label %695

690:                                              ; preds = %635
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %636) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #11
  %691 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %692 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %691, i64 0, i32 0
  %693 = load i32, i32* %692, align 8
  %694 = icmp eq i32 %693, 5
  br label %14210

695:                                              ; preds = %680, %659, %644
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %636) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #11
  store i32 0, i32* %74, align 8
  %696 = load i8, i8* %44, align 1, !range !2
  %697 = icmp eq i8 %696, 0
  br i1 %697, label %698, label %717

698:                                              ; preds = %695
  %699 = load i8, i8* %49, align 1, !range !2
  %700 = icmp eq i8 %699, 0
  br i1 %700, label %706, label %701

701:                                              ; preds = %698
  %702 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %703 = load i8*, i8** %702, align 8
  %704 = load i8, i8* %703, align 1
  %705 = zext i8 %704 to i16
  br label %710

706:                                              ; preds = %698
  %707 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %708 = load i16*, i16** %707, align 8
  %709 = load i16, i16* %708, align 2
  br label %710

710:                                              ; preds = %706, %701
  %711 = phi i16 [ %705, %701 ], [ %709, %706 ]
  store i16 %711, i16* %14, align 2
  %712 = icmp ugt i16 %711, 15
  br i1 %712, label %713, label %715

713:                                              ; preds = %710
  %714 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %714, align 8
  br label %76

715:                                              ; preds = %710
  %716 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %716, label %76, label %717

717:                                              ; preds = %695, %715
  %718 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %719 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %718, i64 0, i32 0
  %720 = load i32, i32* %719, align 8
  %721 = icmp eq i32 %720, 5
  br label %14210

722:                                              ; preds = %1024, %1026, %73, %2906, %2377, %2279
  %723 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %724 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %725 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %726 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %727 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %728 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %729 = bitcast i8** %728 to i64*
  %730 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  %731 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %732 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  br label %733

733:                                              ; preds = %722, %815
  %734 = load i16, i16* %14, align 2
  br label %735

735:                                              ; preds = %811, %733
  %736 = phi i16 [ %734, %733 ], [ %809, %811 ]
  %737 = icmp ult i16 %736, 128
  br i1 %737, label %738, label %744

738:                                              ; preds = %735
  %739 = zext i16 %736 to i64
  %740 = getelementptr inbounds [128 x i8], [128 x i8]* bitcast (<{ [63 x i8], [65 x i8] }>* @_ZN5blinkL21character_scan_flags_E to [128 x i8]*), i64 0, i64 %739
  %741 = load i8, i8* %740, align 1
  %742 = and i8 %741, 25
  %743 = icmp eq i8 %742, 0
  br i1 %743, label %744, label %822

744:                                              ; preds = %738, %735
  %745 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %746 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %745, i64 0, i32 0
  store i32 5, i32* %746, align 8
  %747 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %748 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %747, i64 0, i32 3, i32 1
  %749 = load i16*, i16** %748, align 8
  %750 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %747, i64 0, i32 3, i32 2
  %751 = load i16*, i16** %750, align 8
  %752 = icmp eq i16* %749, %751
  br i1 %752, label %753, label %756, !prof !4

753:                                              ; preds = %744
  %754 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %747, i64 0, i32 3
  %755 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %754) #11
  store i16* %755, i16** %748, align 8
  br label %756

756:                                              ; preds = %744, %753
  %757 = phi i16* [ %755, %753 ], [ %749, %744 ]
  %758 = getelementptr inbounds i16, i16* %757, i64 1
  store i16* %758, i16** %748, align 8
  store i16 %736, i16* %757, align 2
  %759 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %747, i64 0, i32 4
  %760 = load i16, i16* %759, align 8
  %761 = or i16 %760, %736
  store i16 %761, i16* %759, align 8
  %762 = load i8, i8* %49, align 1, !range !2
  %763 = icmp eq i8 %762, 0
  br i1 %763, label %769, label %764

764:                                              ; preds = %756
  %765 = load i8*, i8** %723, align 8
  %766 = load i8, i8* %765, align 1
  %767 = zext i8 %766 to i16
  %768 = ptrtoint i8* %765 to i64
  br label %774

769:                                              ; preds = %756
  %770 = load i16*, i16** %724, align 8
  %771 = load i16, i16* %770, align 2
  %772 = ptrtoint i16* %770 to i64
  %773 = bitcast i16* %770 to i8*
  br label %774

774:                                              ; preds = %769, %764
  %775 = phi i8* [ %765, %764 ], [ %773, %769 ]
  %776 = phi i64 [ %768, %764 ], [ %772, %769 ]
  %777 = phi i16 [ %767, %764 ], [ %771, %769 ]
  %778 = icmp eq i16 %777, 10
  br i1 %778, label %779, label %794

779:                                              ; preds = %774
  %780 = load i8, i8* %725, align 8, !range !2
  %781 = icmp eq i8 %780, 0
  br i1 %781, label %794, label %782, !prof !4

782:                                              ; preds = %779
  %783 = load i32, i32* %726, align 8
  %784 = add nsw i32 %783, 1
  store i32 %784, i32* %726, align 8
  %785 = load i32, i32* %727, align 8
  %786 = load i64, i64* %729, align 8
  %787 = sub i64 %776, %786
  %788 = trunc i64 %787 to i32
  %789 = xor i8 %762, 1
  %790 = zext i8 %789 to i32
  %791 = ashr i32 %788, %790
  %792 = add i32 %785, 1
  %793 = add i32 %792, %791
  store i32 %793, i32* %730, align 4
  br label %794

794:                                              ; preds = %782, %779, %774
  %795 = load i8*, i8** %731, align 8
  %796 = icmp ult i8* %775, %795
  br i1 %796, label %797, label %806, !prof !3

797:                                              ; preds = %794
  br i1 %763, label %802, label %798

798:                                              ; preds = %797
  %799 = getelementptr inbounds i8, i8* %775, i64 1
  store i8* %799, i8** %723, align 8
  %800 = load i8, i8* %799, align 1
  %801 = zext i8 %800 to i16
  br label %808

802:                                              ; preds = %797
  %803 = getelementptr inbounds i8, i8* %775, i64 2
  %804 = bitcast i8* %803 to i16*
  store i8* %803, i8** %723, align 8
  %805 = load i16, i16* %804, align 2
  br label %808

806:                                              ; preds = %794
  %807 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %808

808:                                              ; preds = %806, %802, %798
  %809 = phi i16 [ %807, %806 ], [ %801, %798 ], [ %805, %802 ]
  store i16 %809, i16* %14, align 2
  %810 = icmp ugt i16 %809, 15
  br i1 %810, label %811, label %812

811:                                              ; preds = %808
  store i8 0, i8* %732, align 8
  br label %735

812:                                              ; preds = %808
  %813 = load i8, i8* %44, align 1, !range !2
  %814 = icmp eq i8 %813, 0
  br i1 %814, label %815, label %817

815:                                              ; preds = %812
  %816 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %816, label %733, label %817

817:                                              ; preds = %812, %815
  %818 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %819 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %818, i64 0, i32 0
  %820 = load i32, i32* %819, align 8
  %821 = icmp eq i32 %820, 5
  br label %14210

822:                                              ; preds = %738
  switch i16 %736, label %14210 [
    i16 38, label %823
    i16 60, label %854
    i16 0, label %885
  ]

823:                                              ; preds = %822
  store i32 3, i32* %74, align 8
  %824 = load i8*, i8** %723, align 8
  %825 = load i8*, i8** %731, align 8
  %826 = icmp ult i8* %824, %825
  br i1 %826, label %827, label %838, !prof !3

827:                                              ; preds = %823
  %828 = load i8, i8* %49, align 1, !range !2
  %829 = icmp eq i8 %828, 0
  br i1 %829, label %834, label %830

830:                                              ; preds = %827
  %831 = getelementptr inbounds i8, i8* %824, i64 1
  store i8* %831, i8** %723, align 8
  %832 = load i8, i8* %831, align 1
  %833 = zext i8 %832 to i16
  br label %840

834:                                              ; preds = %827
  %835 = getelementptr inbounds i8, i8* %824, i64 2
  %836 = bitcast i8* %835 to i16*
  store i8* %835, i8** %723, align 8
  %837 = load i16, i16* %836, align 2
  br label %840

838:                                              ; preds = %823
  %839 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %840

840:                                              ; preds = %838, %834, %830
  %841 = phi i16 [ %839, %838 ], [ %833, %830 ], [ %837, %834 ]
  store i16 %841, i16* %14, align 2
  %842 = icmp ugt i16 %841, 15
  br i1 %842, label %843, label %844

843:                                              ; preds = %840
  store i8 0, i8* %732, align 8
  br label %946

844:                                              ; preds = %840
  %845 = load i8, i8* %44, align 1, !range !2
  %846 = icmp eq i8 %845, 0
  br i1 %846, label %847, label %849

847:                                              ; preds = %844
  %848 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %848, label %946, label %849

849:                                              ; preds = %844, %847
  %850 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %851 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %850, i64 0, i32 0
  %852 = load i32, i32* %851, align 8
  %853 = icmp eq i32 %852, 5
  br label %14210

854:                                              ; preds = %822
  store i32 10, i32* %74, align 8
  %855 = load i8*, i8** %723, align 8
  %856 = load i8*, i8** %731, align 8
  %857 = icmp ult i8* %855, %856
  br i1 %857, label %858, label %869, !prof !3

858:                                              ; preds = %854
  %859 = load i8, i8* %49, align 1, !range !2
  %860 = icmp eq i8 %859, 0
  br i1 %860, label %865, label %861

861:                                              ; preds = %858
  %862 = getelementptr inbounds i8, i8* %855, i64 1
  store i8* %862, i8** %723, align 8
  %863 = load i8, i8* %862, align 1
  %864 = zext i8 %863 to i16
  br label %871

865:                                              ; preds = %858
  %866 = getelementptr inbounds i8, i8* %855, i64 2
  %867 = bitcast i8* %866 to i16*
  store i8* %866, i8** %723, align 8
  %868 = load i16, i16* %867, align 2
  br label %871

869:                                              ; preds = %854
  %870 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %871

871:                                              ; preds = %869, %865, %861
  %872 = phi i16 [ %870, %869 ], [ %864, %861 ], [ %868, %865 ]
  store i16 %872, i16* %14, align 2
  %873 = icmp ugt i16 %872, 15
  br i1 %873, label %874, label %875

874:                                              ; preds = %871
  store i8 0, i8* %732, align 8
  br label %2225

875:                                              ; preds = %871
  %876 = load i8, i8* %44, align 1, !range !2
  %877 = icmp eq i8 %876, 0
  br i1 %877, label %878, label %880

878:                                              ; preds = %875
  %879 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %879, label %2223, label %880

880:                                              ; preds = %875, %878
  %881 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %882 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %881, i64 0, i32 0
  %883 = load i32, i32* %882, align 8
  %884 = icmp eq i32 %883, 5
  br label %14210

885:                                              ; preds = %822
  %886 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %887 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %886, i64 0, i32 0
  %888 = load i32, i32* %887, align 8
  %889 = icmp eq i32 %888, 5
  br i1 %889, label %14210, label %890

890:                                              ; preds = %885
  store i32 0, i32* %74, align 8
  %891 = load i8, i8* %49, align 1, !range !2
  %892 = icmp eq i8 %891, 0
  br i1 %892, label %898, label %893

893:                                              ; preds = %890
  %894 = load i8*, i8** %723, align 8
  %895 = load i8, i8* %894, align 1
  %896 = zext i8 %895 to i16
  %897 = ptrtoint i8* %894 to i64
  br label %903

898:                                              ; preds = %890
  %899 = load i16*, i16** %724, align 8
  %900 = load i16, i16* %899, align 2
  %901 = ptrtoint i16* %899 to i64
  %902 = bitcast i16* %899 to i8*
  br label %903

903:                                              ; preds = %898, %893
  %904 = phi i8* [ %894, %893 ], [ %902, %898 ]
  %905 = phi i64 [ %897, %893 ], [ %901, %898 ]
  %906 = phi i16 [ %896, %893 ], [ %900, %898 ]
  %907 = icmp eq i16 %906, 10
  br i1 %907, label %908, label %923

908:                                              ; preds = %903
  %909 = load i8, i8* %725, align 8, !range !2
  %910 = icmp eq i8 %909, 0
  br i1 %910, label %923, label %911, !prof !4

911:                                              ; preds = %908
  %912 = load i32, i32* %726, align 8
  %913 = add nsw i32 %912, 1
  store i32 %913, i32* %726, align 8
  %914 = load i32, i32* %727, align 8
  %915 = load i64, i64* %729, align 8
  %916 = sub i64 %905, %915
  %917 = trunc i64 %916 to i32
  %918 = xor i8 %891, 1
  %919 = zext i8 %918 to i32
  %920 = ashr i32 %917, %919
  %921 = add i32 %914, 1
  %922 = add i32 %921, %920
  store i32 %922, i32* %730, align 4
  br label %923

923:                                              ; preds = %911, %908, %903
  %924 = load i8*, i8** %731, align 8
  %925 = icmp ult i8* %904, %924
  br i1 %925, label %926, label %931, !prof !3

926:                                              ; preds = %923
  br i1 %892, label %929, label %927

927:                                              ; preds = %926
  %928 = getelementptr inbounds i8, i8* %904, i64 1
  store i8* %928, i8** %723, align 8
  br label %933

929:                                              ; preds = %926
  %930 = getelementptr inbounds i8, i8* %904, i64 2
  store i8* %930, i8** %723, align 8
  br label %933

931:                                              ; preds = %923
  %932 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %933

933:                                              ; preds = %931, %929, %927
  %934 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %935 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %934, i64 0, i32 0
  store i32 0, i32* %935, align 8
  %936 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %934, i64 0, i32 1, i32 0
  store i32 0, i32* %936, align 4
  %937 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %934, i64 0, i32 2
  store i32 0, i32* %937, align 4
  %938 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %934, i64 0, i32 3
  %939 = bitcast %class.LiteralBuffer* %938 to i64*
  %940 = load i64, i64* %939, align 8
  %941 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %934, i64 0, i32 3, i32 1
  %942 = bitcast i16** %941 to i64*
  store i64 %940, i64* %942, align 8
  %943 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %934, i64 0, i32 4
  store i16 0, i16* %943, align 8
  %944 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %945 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %944, i64 0, i32 0
  store i32 6, i32* %945, align 8
  br label %14210

946:                                              ; preds = %843, %73, %847
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #11
  store i8 0, i8* %8, align 1
  %947 = bitcast %"class.blink::DecodedHTMLEntity"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %947) #11
  %948 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %9, i64 0, i32 0
  %949 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %9, i64 0, i32 1
  %950 = bitcast [4 x i16]* %949 to i64*
  store i64 -6148914691236517206, i64* %950, align 4
  store i32 0, i32* %948, align 4
  %951 = call zeroext i1 @_ZN5blink17ConsumeHTMLEntityERNS_15SegmentedStringERNS_17DecodedHTMLEntityERbDs(%"class.blink::SegmentedString"* dereferenceable(88) %1, %"class.blink::DecodedHTMLEntity"* nonnull dereferenceable(12) %9, i8* nonnull dereferenceable(1) %8, i16 zeroext 0) #11
  %952 = load i8, i8* %8, align 1, !range !2
  %953 = icmp eq i8 %952, 0
  br i1 %953, label %954, label %1001

954:                                              ; preds = %946
  br i1 %951, label %955, label %958

955:                                              ; preds = %954
  %956 = load i32, i32* %948, align 4
  %957 = icmp eq i32 %956, 0
  br i1 %957, label %1006, label %976

958:                                              ; preds = %954
  %959 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %960 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %959, i64 0, i32 0
  store i32 5, i32* %960, align 8
  %961 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %962 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %961, i64 0, i32 3, i32 1
  %963 = load i16*, i16** %962, align 8
  %964 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %961, i64 0, i32 3, i32 2
  %965 = load i16*, i16** %964, align 8
  %966 = icmp eq i16* %963, %965
  br i1 %966, label %967, label %970, !prof !4

967:                                              ; preds = %958
  %968 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %961, i64 0, i32 3
  %969 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %968) #11
  store i16* %969, i16** %962, align 8
  br label %970

970:                                              ; preds = %967, %958
  %971 = phi i16* [ %969, %967 ], [ %963, %958 ]
  %972 = getelementptr inbounds i16, i16* %971, i64 1
  store i16* %972, i16** %962, align 8
  store i16 38, i16* %971, align 2
  %973 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %961, i64 0, i32 4
  %974 = load i16, i16* %973, align 8
  %975 = or i16 %974, 38
  store i16 %975, i16* %973, align 8
  br label %1006

976:                                              ; preds = %955, %991
  %977 = phi i64 [ %997, %991 ], [ 0, %955 ]
  %978 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %9, i64 0, i32 1, i64 %977
  %979 = load i16, i16* %978, align 2
  %980 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %981 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %980, i64 0, i32 0
  store i32 5, i32* %981, align 8
  %982 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %983 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %982, i64 0, i32 3, i32 1
  %984 = load i16*, i16** %983, align 8
  %985 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %982, i64 0, i32 3, i32 2
  %986 = load i16*, i16** %985, align 8
  %987 = icmp eq i16* %984, %986
  br i1 %987, label %988, label %991, !prof !4

988:                                              ; preds = %976
  %989 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %982, i64 0, i32 3
  %990 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %989) #11
  store i16* %990, i16** %983, align 8
  br label %991

991:                                              ; preds = %988, %976
  %992 = phi i16* [ %990, %988 ], [ %984, %976 ]
  %993 = getelementptr inbounds i16, i16* %992, i64 1
  store i16* %993, i16** %983, align 8
  store i16 %979, i16* %992, align 2
  %994 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %982, i64 0, i32 4
  %995 = load i16, i16* %994, align 8
  %996 = or i16 %995, %979
  store i16 %996, i16* %994, align 8
  %997 = add nuw nsw i64 %977, 1
  %998 = load i32, i32* %948, align 4
  %999 = zext i32 %998 to i64
  %1000 = icmp ult i64 %997, %999
  br i1 %1000, label %976, label %1006

1001:                                             ; preds = %946
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %947) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #11
  %1002 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1003 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1002, i64 0, i32 0
  %1004 = load i32, i32* %1003, align 8
  %1005 = icmp eq i32 %1004, 5
  br label %14210

1006:                                             ; preds = %991, %970, %955
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %947) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #11
  store i32 2, i32* %74, align 8
  %1007 = load i8, i8* %44, align 1, !range !2
  %1008 = icmp eq i8 %1007, 0
  br i1 %1008, label %1009, label %1028

1009:                                             ; preds = %1006
  %1010 = load i8, i8* %49, align 1, !range !2
  %1011 = icmp eq i8 %1010, 0
  br i1 %1011, label %1017, label %1012

1012:                                             ; preds = %1009
  %1013 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %1014 = load i8*, i8** %1013, align 8
  %1015 = load i8, i8* %1014, align 1
  %1016 = zext i8 %1015 to i16
  br label %1021

1017:                                             ; preds = %1009
  %1018 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %1019 = load i16*, i16** %1018, align 8
  %1020 = load i16, i16* %1019, align 2
  br label %1021

1021:                                             ; preds = %1017, %1012
  %1022 = phi i16 [ %1016, %1012 ], [ %1020, %1017 ]
  store i16 %1022, i16* %14, align 2
  %1023 = icmp ugt i16 %1022, 15
  br i1 %1023, label %1024, label %1026

1024:                                             ; preds = %1021
  %1025 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %1025, align 8
  br label %722

1026:                                             ; preds = %1021
  %1027 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %1027, label %722, label %1028

1028:                                             ; preds = %1006, %1026
  %1029 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1030 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1029, i64 0, i32 0
  %1031 = load i32, i32* %1030, align 8
  %1032 = icmp eq i32 %1031, 5
  br label %14210

1033:                                             ; preds = %2974, %1200
  %1034 = load i16, i16* %14, align 2
  br label %1035

1035:                                             ; preds = %1196, %1033
  %1036 = phi i16 [ %1034, %1033 ], [ %1194, %1196 ]
  switch i16 %1036, label %1129 [
    i16 60, label %1037
    i16 0, label %1068
  ]

1037:                                             ; preds = %1035
  store i32 13, i32* %74, align 8
  %1038 = load i8*, i8** %2975, align 8
  %1039 = load i8*, i8** %2983, align 8
  %1040 = icmp ult i8* %1038, %1039
  br i1 %1040, label %1041, label %1052, !prof !3

1041:                                             ; preds = %1037
  %1042 = load i8, i8* %49, align 1, !range !2
  %1043 = icmp eq i8 %1042, 0
  br i1 %1043, label %1048, label %1044

1044:                                             ; preds = %1041
  %1045 = getelementptr inbounds i8, i8* %1038, i64 1
  store i8* %1045, i8** %2975, align 8
  %1046 = load i8, i8* %1045, align 1
  %1047 = zext i8 %1046 to i16
  br label %1054

1048:                                             ; preds = %1041
  %1049 = getelementptr inbounds i8, i8* %1038, i64 2
  %1050 = bitcast i8* %1049 to i16*
  store i8* %1049, i8** %2975, align 8
  %1051 = load i16, i16* %1050, align 2
  br label %1054

1052:                                             ; preds = %1037
  %1053 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %1054

1054:                                             ; preds = %1052, %1048, %1044
  %1055 = phi i16 [ %1053, %1052 ], [ %1047, %1044 ], [ %1051, %1048 ]
  store i16 %1055, i16* %14, align 2
  %1056 = icmp ugt i16 %1055, 15
  br i1 %1056, label %1057, label %1058

1057:                                             ; preds = %1054
  store i8 0, i8* %2984, align 8
  br label %2913

1058:                                             ; preds = %1054
  %1059 = load i8, i8* %44, align 1, !range !2
  %1060 = icmp eq i8 %1059, 0
  br i1 %1060, label %1061, label %1063

1061:                                             ; preds = %1058
  %1062 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %1062, label %2911, label %1063

1063:                                             ; preds = %1058, %1061
  %1064 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1065 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1064, i64 0, i32 0
  %1066 = load i32, i32* %1065, align 8
  %1067 = icmp eq i32 %1066, 5
  br label %14210

1068:                                             ; preds = %1035
  %1069 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1070 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1069, i64 0, i32 0
  %1071 = load i32, i32* %1070, align 8
  %1072 = icmp eq i32 %1071, 5
  br i1 %1072, label %14210, label %1073

1073:                                             ; preds = %1068
  store i32 0, i32* %74, align 8
  %1074 = load i8, i8* %49, align 1, !range !2
  %1075 = icmp eq i8 %1074, 0
  br i1 %1075, label %1081, label %1076

1076:                                             ; preds = %1073
  %1077 = load i8*, i8** %2975, align 8
  %1078 = load i8, i8* %1077, align 1
  %1079 = zext i8 %1078 to i16
  %1080 = ptrtoint i8* %1077 to i64
  br label %1086

1081:                                             ; preds = %1073
  %1082 = load i16*, i16** %2976, align 8
  %1083 = load i16, i16* %1082, align 2
  %1084 = ptrtoint i16* %1082 to i64
  %1085 = bitcast i16* %1082 to i8*
  br label %1086

1086:                                             ; preds = %1081, %1076
  %1087 = phi i8* [ %1077, %1076 ], [ %1085, %1081 ]
  %1088 = phi i64 [ %1080, %1076 ], [ %1084, %1081 ]
  %1089 = phi i16 [ %1079, %1076 ], [ %1083, %1081 ]
  %1090 = icmp eq i16 %1089, 10
  br i1 %1090, label %1091, label %1106

1091:                                             ; preds = %1086
  %1092 = load i8, i8* %2977, align 8, !range !2
  %1093 = icmp eq i8 %1092, 0
  br i1 %1093, label %1106, label %1094, !prof !4

1094:                                             ; preds = %1091
  %1095 = load i32, i32* %2978, align 8
  %1096 = add nsw i32 %1095, 1
  store i32 %1096, i32* %2978, align 8
  %1097 = load i32, i32* %2979, align 8
  %1098 = load i64, i64* %2981, align 8
  %1099 = sub i64 %1088, %1098
  %1100 = trunc i64 %1099 to i32
  %1101 = xor i8 %1074, 1
  %1102 = zext i8 %1101 to i32
  %1103 = ashr i32 %1100, %1102
  %1104 = add i32 %1097, 1
  %1105 = add i32 %1104, %1103
  store i32 %1105, i32* %2982, align 4
  br label %1106

1106:                                             ; preds = %1094, %1091, %1086
  %1107 = load i8*, i8** %2983, align 8
  %1108 = icmp ult i8* %1087, %1107
  br i1 %1108, label %1109, label %1114, !prof !3

1109:                                             ; preds = %1106
  br i1 %1075, label %1112, label %1110

1110:                                             ; preds = %1109
  %1111 = getelementptr inbounds i8, i8* %1087, i64 1
  store i8* %1111, i8** %2975, align 8
  br label %1116

1112:                                             ; preds = %1109
  %1113 = getelementptr inbounds i8, i8* %1087, i64 2
  store i8* %1113, i8** %2975, align 8
  br label %1116

1114:                                             ; preds = %1106
  %1115 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %1116

1116:                                             ; preds = %1114, %1112, %1110
  %1117 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1118 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1117, i64 0, i32 0
  store i32 0, i32* %1118, align 8
  %1119 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1117, i64 0, i32 1, i32 0
  store i32 0, i32* %1119, align 4
  %1120 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1117, i64 0, i32 2
  store i32 0, i32* %1120, align 4
  %1121 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1117, i64 0, i32 3
  %1122 = bitcast %class.LiteralBuffer* %1121 to i64*
  %1123 = load i64, i64* %1122, align 8
  %1124 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1117, i64 0, i32 3, i32 1
  %1125 = bitcast i16** %1124 to i64*
  store i64 %1123, i64* %1125, align 8
  %1126 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1117, i64 0, i32 4
  store i16 0, i16* %1126, align 8
  %1127 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1128 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1127, i64 0, i32 0
  store i32 6, i32* %1128, align 8
  br label %14210

1129:                                             ; preds = %1035
  %1130 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1131 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1130, i64 0, i32 0
  store i32 5, i32* %1131, align 8
  %1132 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1133 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1132, i64 0, i32 3, i32 1
  %1134 = load i16*, i16** %1133, align 8
  %1135 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1132, i64 0, i32 3, i32 2
  %1136 = load i16*, i16** %1135, align 8
  %1137 = icmp eq i16* %1134, %1136
  br i1 %1137, label %1138, label %1141, !prof !4

1138:                                             ; preds = %1129
  %1139 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1132, i64 0, i32 3
  %1140 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %1139) #11
  store i16* %1140, i16** %1133, align 8
  br label %1141

1141:                                             ; preds = %1129, %1138
  %1142 = phi i16* [ %1140, %1138 ], [ %1134, %1129 ]
  %1143 = getelementptr inbounds i16, i16* %1142, i64 1
  store i16* %1143, i16** %1133, align 8
  store i16 %1036, i16* %1142, align 2
  %1144 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1132, i64 0, i32 4
  %1145 = load i16, i16* %1144, align 8
  %1146 = or i16 %1145, %1036
  store i16 %1146, i16* %1144, align 8
  %1147 = load i8, i8* %49, align 1, !range !2
  %1148 = icmp eq i8 %1147, 0
  br i1 %1148, label %1154, label %1149

1149:                                             ; preds = %1141
  %1150 = load i8*, i8** %2975, align 8
  %1151 = load i8, i8* %1150, align 1
  %1152 = zext i8 %1151 to i16
  %1153 = ptrtoint i8* %1150 to i64
  br label %1159

1154:                                             ; preds = %1141
  %1155 = load i16*, i16** %2976, align 8
  %1156 = load i16, i16* %1155, align 2
  %1157 = ptrtoint i16* %1155 to i64
  %1158 = bitcast i16* %1155 to i8*
  br label %1159

1159:                                             ; preds = %1154, %1149
  %1160 = phi i8* [ %1150, %1149 ], [ %1158, %1154 ]
  %1161 = phi i64 [ %1153, %1149 ], [ %1157, %1154 ]
  %1162 = phi i16 [ %1152, %1149 ], [ %1156, %1154 ]
  %1163 = icmp eq i16 %1162, 10
  br i1 %1163, label %1164, label %1179

1164:                                             ; preds = %1159
  %1165 = load i8, i8* %2977, align 8, !range !2
  %1166 = icmp eq i8 %1165, 0
  br i1 %1166, label %1179, label %1167, !prof !4

1167:                                             ; preds = %1164
  %1168 = load i32, i32* %2978, align 8
  %1169 = add nsw i32 %1168, 1
  store i32 %1169, i32* %2978, align 8
  %1170 = load i32, i32* %2979, align 8
  %1171 = load i64, i64* %2981, align 8
  %1172 = sub i64 %1161, %1171
  %1173 = trunc i64 %1172 to i32
  %1174 = xor i8 %1147, 1
  %1175 = zext i8 %1174 to i32
  %1176 = ashr i32 %1173, %1175
  %1177 = add i32 %1170, 1
  %1178 = add i32 %1177, %1176
  store i32 %1178, i32* %2982, align 4
  br label %1179

1179:                                             ; preds = %1167, %1164, %1159
  %1180 = load i8*, i8** %2983, align 8
  %1181 = icmp ult i8* %1160, %1180
  br i1 %1181, label %1182, label %1191, !prof !3

1182:                                             ; preds = %1179
  br i1 %1148, label %1187, label %1183

1183:                                             ; preds = %1182
  %1184 = getelementptr inbounds i8, i8* %1160, i64 1
  store i8* %1184, i8** %2975, align 8
  %1185 = load i8, i8* %1184, align 1
  %1186 = zext i8 %1185 to i16
  br label %1193

1187:                                             ; preds = %1182
  %1188 = getelementptr inbounds i8, i8* %1160, i64 2
  %1189 = bitcast i8* %1188 to i16*
  store i8* %1188, i8** %2975, align 8
  %1190 = load i16, i16* %1189, align 2
  br label %1193

1191:                                             ; preds = %1179
  %1192 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %1193

1193:                                             ; preds = %1191, %1187, %1183
  %1194 = phi i16 [ %1192, %1191 ], [ %1186, %1183 ], [ %1190, %1187 ]
  store i16 %1194, i16* %14, align 2
  %1195 = icmp ugt i16 %1194, 15
  br i1 %1195, label %1196, label %1197

1196:                                             ; preds = %1193
  store i8 0, i8* %2984, align 8
  br label %1035

1197:                                             ; preds = %1193
  %1198 = load i8, i8* %44, align 1, !range !2
  %1199 = icmp eq i8 %1198, 0
  br i1 %1199, label %1200, label %1202

1200:                                             ; preds = %1197
  %1201 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %1201, label %1033, label %1202

1202:                                             ; preds = %1197, %1200
  %1203 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1204 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1203, i64 0, i32 0
  %1205 = load i32, i32* %1204, align 8
  %1206 = icmp eq i32 %1205, 5
  br label %14210

1207:                                             ; preds = %6609, %4947, %1393, %3725, %3818, %4347, %73, %1398, %4952, %6614
  %1208 = load i16, i16* %14, align 2
  br label %1209

1209:                                             ; preds = %1207, %4465, %4408
  %1210 = phi i16 [ %1208, %1207 ], [ %4412, %4465 ], [ %4355, %4408 ]
  switch i16 %1210, label %1316 [
    i16 60, label %1211
    i16 0, label %1245
  ]

1211:                                             ; preds = %1209
  store i32 16, i32* %74, align 8
  %1212 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %1213 = load i8*, i8** %1212, align 8
  %1214 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %1215 = load i8*, i8** %1214, align 8
  %1216 = icmp ult i8* %1213, %1215
  br i1 %1216, label %1217, label %1228, !prof !3

1217:                                             ; preds = %1211
  %1218 = load i8, i8* %49, align 1, !range !2
  %1219 = icmp eq i8 %1218, 0
  br i1 %1219, label %1224, label %1220

1220:                                             ; preds = %1217
  %1221 = getelementptr inbounds i8, i8* %1213, i64 1
  store i8* %1221, i8** %1212, align 8
  %1222 = load i8, i8* %1221, align 1
  %1223 = zext i8 %1222 to i16
  br label %1230

1224:                                             ; preds = %1217
  %1225 = getelementptr inbounds i8, i8* %1213, i64 2
  %1226 = bitcast i8* %1225 to i16*
  store i8* %1225, i8** %1212, align 8
  %1227 = load i16, i16* %1226, align 2
  br label %1230

1228:                                             ; preds = %1211
  %1229 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %1230

1230:                                             ; preds = %1228, %1224, %1220
  %1231 = phi i16 [ %1229, %1228 ], [ %1223, %1220 ], [ %1227, %1224 ]
  store i16 %1231, i16* %14, align 2
  %1232 = icmp ugt i16 %1231, 15
  br i1 %1232, label %1233, label %1235

1233:                                             ; preds = %1230
  %1234 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %1234, align 8
  br label %3613

1235:                                             ; preds = %1230
  %1236 = load i8, i8* %44, align 1, !range !2
  %1237 = icmp eq i8 %1236, 0
  br i1 %1237, label %1238, label %1240

1238:                                             ; preds = %1235
  %1239 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %1239, label %3611, label %1240

1240:                                             ; preds = %1235, %1238
  %1241 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1242 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1241, i64 0, i32 0
  %1243 = load i32, i32* %1242, align 8
  %1244 = icmp eq i32 %1243, 5
  br label %14210

1245:                                             ; preds = %1209
  %1246 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1247 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1246, i64 0, i32 0
  %1248 = load i32, i32* %1247, align 8
  %1249 = icmp eq i32 %1248, 5
  br i1 %1249, label %14210, label %1250

1250:                                             ; preds = %1245
  store i32 0, i32* %74, align 8
  %1251 = load i8, i8* %49, align 1, !range !2
  %1252 = icmp eq i8 %1251, 0
  br i1 %1252, label %1259, label %1253

1253:                                             ; preds = %1250
  %1254 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %1255 = load i8*, i8** %1254, align 8
  %1256 = load i8, i8* %1255, align 1
  %1257 = zext i8 %1256 to i16
  %1258 = ptrtoint i8* %1255 to i64
  br label %1265

1259:                                             ; preds = %1250
  %1260 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %1261 = load i16*, i16** %1260, align 8
  %1262 = load i16, i16* %1261, align 2
  %1263 = ptrtoint i16* %1261 to i64
  %1264 = bitcast i16* %1261 to i8*
  br label %1265

1265:                                             ; preds = %1259, %1253
  %1266 = phi i8* [ %1255, %1253 ], [ %1264, %1259 ]
  %1267 = phi i64 [ %1258, %1253 ], [ %1263, %1259 ]
  %1268 = phi i16 [ %1257, %1253 ], [ %1262, %1259 ]
  %1269 = icmp eq i16 %1268, 10
  br i1 %1269, label %1270, label %1291

1270:                                             ; preds = %1265
  %1271 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %1272 = load i8, i8* %1271, align 8, !range !2
  %1273 = icmp eq i8 %1272, 0
  br i1 %1273, label %1291, label %1274, !prof !4

1274:                                             ; preds = %1270
  %1275 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %1276 = load i32, i32* %1275, align 8
  %1277 = add nsw i32 %1276, 1
  store i32 %1277, i32* %1275, align 8
  %1278 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %1279 = load i32, i32* %1278, align 8
  %1280 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %1281 = bitcast i8** %1280 to i64*
  %1282 = load i64, i64* %1281, align 8
  %1283 = sub i64 %1267, %1282
  %1284 = trunc i64 %1283 to i32
  %1285 = xor i8 %1251, 1
  %1286 = zext i8 %1285 to i32
  %1287 = ashr i32 %1284, %1286
  %1288 = add i32 %1279, 1
  %1289 = add i32 %1288, %1287
  %1290 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %1289, i32* %1290, align 4
  br label %1291

1291:                                             ; preds = %1274, %1270, %1265
  %1292 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %1293 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %1294 = load i8*, i8** %1293, align 8
  %1295 = icmp ult i8* %1266, %1294
  br i1 %1295, label %1296, label %1301, !prof !3

1296:                                             ; preds = %1291
  br i1 %1252, label %1299, label %1297

1297:                                             ; preds = %1296
  %1298 = getelementptr inbounds i8, i8* %1266, i64 1
  store i8* %1298, i8** %1292, align 8
  br label %1303

1299:                                             ; preds = %1296
  %1300 = getelementptr inbounds i8, i8* %1266, i64 2
  store i8* %1300, i8** %1292, align 8
  br label %1303

1301:                                             ; preds = %1291
  %1302 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %1303

1303:                                             ; preds = %1301, %1299, %1297
  %1304 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1305 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1304, i64 0, i32 0
  store i32 0, i32* %1305, align 8
  %1306 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1304, i64 0, i32 1, i32 0
  store i32 0, i32* %1306, align 4
  %1307 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1304, i64 0, i32 2
  store i32 0, i32* %1307, align 4
  %1308 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1304, i64 0, i32 3
  %1309 = bitcast %class.LiteralBuffer* %1308 to i64*
  %1310 = load i64, i64* %1309, align 8
  %1311 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1304, i64 0, i32 3, i32 1
  %1312 = bitcast i16** %1311 to i64*
  store i64 %1310, i64* %1312, align 8
  %1313 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1304, i64 0, i32 4
  store i16 0, i16* %1313, align 8
  %1314 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1315 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1314, i64 0, i32 0
  store i32 6, i32* %1315, align 8
  br label %14210

1316:                                             ; preds = %1209
  %1317 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1318 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1317, i64 0, i32 0
  store i32 5, i32* %1318, align 8
  %1319 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1320 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1319, i64 0, i32 3, i32 1
  %1321 = load i16*, i16** %1320, align 8
  %1322 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1319, i64 0, i32 3, i32 2
  %1323 = load i16*, i16** %1322, align 8
  %1324 = icmp eq i16* %1321, %1323
  br i1 %1324, label %1325, label %1328, !prof !4

1325:                                             ; preds = %1316
  %1326 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1319, i64 0, i32 3
  %1327 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %1326) #11
  store i16* %1327, i16** %1320, align 8
  br label %1328

1328:                                             ; preds = %1316, %1325
  %1329 = phi i16* [ %1327, %1325 ], [ %1321, %1316 ]
  %1330 = getelementptr inbounds i16, i16* %1329, i64 1
  store i16* %1330, i16** %1320, align 8
  store i16 %1210, i16* %1329, align 2
  %1331 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1319, i64 0, i32 4
  %1332 = load i16, i16* %1331, align 8
  %1333 = or i16 %1332, %1210
  store i16 %1333, i16* %1331, align 8
  %1334 = load i8, i8* %49, align 1, !range !2
  %1335 = icmp eq i8 %1334, 0
  br i1 %1335, label %1342, label %1336

1336:                                             ; preds = %1328
  %1337 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %1338 = load i8*, i8** %1337, align 8
  %1339 = load i8, i8* %1338, align 1
  %1340 = zext i8 %1339 to i16
  %1341 = ptrtoint i8* %1338 to i64
  br label %1348

1342:                                             ; preds = %1328
  %1343 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %1344 = load i16*, i16** %1343, align 8
  %1345 = load i16, i16* %1344, align 2
  %1346 = ptrtoint i16* %1344 to i64
  %1347 = bitcast i16* %1344 to i8*
  br label %1348

1348:                                             ; preds = %1342, %1336
  %1349 = phi i8* [ %1338, %1336 ], [ %1347, %1342 ]
  %1350 = phi i64 [ %1341, %1336 ], [ %1346, %1342 ]
  %1351 = phi i16 [ %1340, %1336 ], [ %1345, %1342 ]
  %1352 = icmp eq i16 %1351, 10
  br i1 %1352, label %1353, label %1374

1353:                                             ; preds = %1348
  %1354 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %1355 = load i8, i8* %1354, align 8, !range !2
  %1356 = icmp eq i8 %1355, 0
  br i1 %1356, label %1374, label %1357, !prof !4

1357:                                             ; preds = %1353
  %1358 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %1359 = load i32, i32* %1358, align 8
  %1360 = add nsw i32 %1359, 1
  store i32 %1360, i32* %1358, align 8
  %1361 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %1362 = load i32, i32* %1361, align 8
  %1363 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %1364 = bitcast i8** %1363 to i64*
  %1365 = load i64, i64* %1364, align 8
  %1366 = sub i64 %1350, %1365
  %1367 = trunc i64 %1366 to i32
  %1368 = xor i8 %1334, 1
  %1369 = zext i8 %1368 to i32
  %1370 = ashr i32 %1367, %1369
  %1371 = add i32 %1362, 1
  %1372 = add i32 %1371, %1370
  %1373 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %1372, i32* %1373, align 4
  br label %1374

1374:                                             ; preds = %1357, %1353, %1348
  %1375 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %1376 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %1377 = load i8*, i8** %1376, align 8
  %1378 = icmp ult i8* %1349, %1377
  br i1 %1378, label %1379, label %1388, !prof !3

1379:                                             ; preds = %1374
  br i1 %1335, label %1384, label %1380

1380:                                             ; preds = %1379
  %1381 = getelementptr inbounds i8, i8* %1349, i64 1
  store i8* %1381, i8** %1375, align 8
  %1382 = load i8, i8* %1381, align 1
  %1383 = zext i8 %1382 to i16
  br label %1390

1384:                                             ; preds = %1379
  %1385 = getelementptr inbounds i8, i8* %1349, i64 2
  %1386 = bitcast i8* %1385 to i16*
  store i8* %1385, i8** %1375, align 8
  %1387 = load i16, i16* %1386, align 2
  br label %1390

1388:                                             ; preds = %1374
  %1389 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %1390

1390:                                             ; preds = %1388, %1384, %1380
  %1391 = phi i16 [ %1389, %1388 ], [ %1383, %1380 ], [ %1387, %1384 ]
  store i16 %1391, i16* %14, align 2
  %1392 = icmp ugt i16 %1391, 15
  br i1 %1392, label %1393, label %1395

1393:                                             ; preds = %1390
  %1394 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %1394, align 8
  br label %1207

1395:                                             ; preds = %1390
  %1396 = load i8, i8* %44, align 1, !range !2
  %1397 = icmp eq i8 %1396, 0
  br i1 %1397, label %1398, label %1400

1398:                                             ; preds = %1395
  %1399 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %1399, label %1207, label %1400

1400:                                             ; preds = %1395, %1398
  %1401 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1402 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1401, i64 0, i32 0
  %1403 = load i32, i32* %1402, align 8
  %1404 = icmp eq i32 %1403, 5
  br label %14210

1405:                                             ; preds = %73
  %1406 = load i16, i16* %14, align 2
  %1407 = icmp eq i16 %1406, 0
  %1408 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1409 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1408, i64 0, i32 0
  br i1 %1407, label %1410, label %1479

1410:                                             ; preds = %1405
  %1411 = load i32, i32* %1409, align 8
  %1412 = icmp eq i32 %1411, 5
  br i1 %1412, label %14210, label %1413

1413:                                             ; preds = %1410
  store i32 0, i32* %74, align 8
  %1414 = load i8, i8* %49, align 1, !range !2
  %1415 = icmp eq i8 %1414, 0
  br i1 %1415, label %1422, label %1416

1416:                                             ; preds = %1413
  %1417 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %1418 = load i8*, i8** %1417, align 8
  %1419 = load i8, i8* %1418, align 1
  %1420 = zext i8 %1419 to i16
  %1421 = ptrtoint i8* %1418 to i64
  br label %1428

1422:                                             ; preds = %1413
  %1423 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %1424 = load i16*, i16** %1423, align 8
  %1425 = load i16, i16* %1424, align 2
  %1426 = ptrtoint i16* %1424 to i64
  %1427 = bitcast i16* %1424 to i8*
  br label %1428

1428:                                             ; preds = %1422, %1416
  %1429 = phi i8* [ %1418, %1416 ], [ %1427, %1422 ]
  %1430 = phi i64 [ %1421, %1416 ], [ %1426, %1422 ]
  %1431 = phi i16 [ %1420, %1416 ], [ %1425, %1422 ]
  %1432 = icmp eq i16 %1431, 10
  br i1 %1432, label %1433, label %1454

1433:                                             ; preds = %1428
  %1434 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %1435 = load i8, i8* %1434, align 8, !range !2
  %1436 = icmp eq i8 %1435, 0
  br i1 %1436, label %1454, label %1437, !prof !4

1437:                                             ; preds = %1433
  %1438 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %1439 = load i32, i32* %1438, align 8
  %1440 = add nsw i32 %1439, 1
  store i32 %1440, i32* %1438, align 8
  %1441 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %1442 = load i32, i32* %1441, align 8
  %1443 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %1444 = bitcast i8** %1443 to i64*
  %1445 = load i64, i64* %1444, align 8
  %1446 = sub i64 %1430, %1445
  %1447 = trunc i64 %1446 to i32
  %1448 = xor i8 %1414, 1
  %1449 = zext i8 %1448 to i32
  %1450 = ashr i32 %1447, %1449
  %1451 = add i32 %1442, 1
  %1452 = add i32 %1451, %1450
  %1453 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %1452, i32* %1453, align 4
  br label %1454

1454:                                             ; preds = %1437, %1433, %1428
  %1455 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %1456 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %1457 = load i8*, i8** %1456, align 8
  %1458 = icmp ult i8* %1429, %1457
  br i1 %1458, label %1459, label %1464, !prof !3

1459:                                             ; preds = %1454
  br i1 %1415, label %1462, label %1460

1460:                                             ; preds = %1459
  %1461 = getelementptr inbounds i8, i8* %1429, i64 1
  store i8* %1461, i8** %1455, align 8
  br label %1466

1462:                                             ; preds = %1459
  %1463 = getelementptr inbounds i8, i8* %1429, i64 2
  store i8* %1463, i8** %1455, align 8
  br label %1466

1464:                                             ; preds = %1454
  %1465 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %1466

1466:                                             ; preds = %1464, %1462, %1460
  %1467 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1468 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1467, i64 0, i32 0
  store i32 0, i32* %1468, align 8
  %1469 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1467, i64 0, i32 1, i32 0
  store i32 0, i32* %1469, align 4
  %1470 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1467, i64 0, i32 2
  store i32 0, i32* %1470, align 4
  %1471 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1467, i64 0, i32 3
  %1472 = bitcast %class.LiteralBuffer* %1471 to i64*
  %1473 = load i64, i64* %1472, align 8
  %1474 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1467, i64 0, i32 3, i32 1
  %1475 = bitcast i16** %1474 to i64*
  store i64 %1473, i64* %1475, align 8
  %1476 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1467, i64 0, i32 4
  store i16 0, i16* %1476, align 8
  %1477 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1478 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1477, i64 0, i32 0
  store i32 6, i32* %1478, align 8
  br label %14210

1479:                                             ; preds = %1405
  store i32 5, i32* %1409, align 8
  %1480 = icmp eq i16 %1406, 10
  br i1 %1480, label %1481, label %1493

1481:                                             ; preds = %1479
  %1482 = load i8, i8* %49, align 1, !range !2
  %1483 = icmp eq i8 %1482, 0
  br i1 %1483, label %1489, label %1484

1484:                                             ; preds = %1481
  %1485 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %1486 = load i8*, i8** %1485, align 8
  %1487 = load i8, i8* %1486, align 1
  %1488 = zext i8 %1487 to i16
  br label %1493

1489:                                             ; preds = %1481
  %1490 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %1491 = load i16*, i16** %1490, align 8
  %1492 = load i16, i16* %1491, align 2
  br label %1493

1493:                                             ; preds = %1489, %1484, %1479
  %1494 = phi i16 [ %1406, %1479 ], [ %1488, %1484 ], [ %1492, %1489 ]
  %1495 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %1496 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %1497 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 6
  %1498 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 0
  %1499 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %1500 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %1501 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %1502 = bitcast %"class.blink::SegmentedString"* %1 to i64*
  %1503 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %1504 = bitcast i8** %1503 to i64*
  %1505 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  br label %1506

1506:                                             ; preds = %1547, %1493
  %1507 = phi i16 [ %1494, %1493 ], [ %1548, %1547 ]
  %1508 = icmp ult i16 %1507, 128
  br i1 %1508, label %1509, label %1515

1509:                                             ; preds = %1506
  %1510 = zext i16 %1507 to i64
  %1511 = getelementptr inbounds [128 x i8], [128 x i8]* bitcast (<{ [63 x i8], [65 x i8] }>* @_ZN5blinkL21character_scan_flags_E to [128 x i8]*), i64 0, i64 %1510
  %1512 = load i8, i8* %1511, align 1
  %1513 = and i8 %1512, 3
  %1514 = icmp eq i8 %1513, 0
  br i1 %1514, label %1515, label %1549

1515:                                             ; preds = %1509, %1506
  %1516 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1517 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1516, i64 0, i32 3, i32 1
  %1518 = load i16*, i16** %1517, align 8
  %1519 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1516, i64 0, i32 3, i32 2
  %1520 = load i16*, i16** %1519, align 8
  %1521 = icmp eq i16* %1518, %1520
  br i1 %1521, label %1522, label %1525, !prof !4

1522:                                             ; preds = %1515
  %1523 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1516, i64 0, i32 3
  %1524 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %1523) #11
  store i16* %1524, i16** %1517, align 8
  br label %1525

1525:                                             ; preds = %1522, %1515
  %1526 = phi i16* [ %1524, %1522 ], [ %1518, %1515 ]
  %1527 = getelementptr inbounds i16, i16* %1526, i64 1
  store i16* %1527, i16** %1517, align 8
  store i16 %1507, i16* %1526, align 2
  %1528 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1516, i64 0, i32 4
  %1529 = load i16, i16* %1528, align 8
  %1530 = or i16 %1529, %1507
  store i16 %1530, i16* %1528, align 8
  %1531 = load i8*, i8** %1495, align 8
  %1532 = load i8*, i8** %1496, align 8
  %1533 = icmp ult i8* %1531, %1532
  br i1 %1533, label %1534, label %1545, !prof !3

1534:                                             ; preds = %1525
  %1535 = load i8, i8* %49, align 1, !range !2
  %1536 = icmp eq i8 %1535, 0
  br i1 %1536, label %1541, label %1537

1537:                                             ; preds = %1534
  %1538 = getelementptr inbounds i8, i8* %1531, i64 1
  store i8* %1538, i8** %1495, align 8
  %1539 = load i8, i8* %1538, align 1
  %1540 = zext i8 %1539 to i16
  br label %1547

1541:                                             ; preds = %1534
  %1542 = getelementptr inbounds i8, i8* %1531, i64 2
  %1543 = bitcast i8* %1542 to i16*
  store i8* %1542, i8** %1495, align 8
  %1544 = load i16, i16* %1543, align 2
  br label %1547

1545:                                             ; preds = %1525
  %1546 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %1547

1547:                                             ; preds = %1741, %1545, %1541, %1537, %1712, %1692, %1687, %1674, %1670, %1666, %1637, %1600, %1596, %1592, %1549
  %1548 = phi i16 [ %1546, %1545 ], [ %1540, %1537 ], [ %1544, %1541 ], [ %1507, %1549 ], [ %1601, %1600 ], [ %1595, %1592 ], [ %1599, %1596 ], [ %1675, %1674 ], [ %1632, %1637 ], [ %1713, %1712 ], [ -3, %1692 ], [ -3, %1687 ], [ %1673, %1670 ], [ %1669, %1666 ], [ %1742, %1741 ]
  br label %1506

1549:                                             ; preds = %1509
  switch i16 %1507, label %1547 [
    i16 10, label %1550
    i16 13, label %1602
    i16 0, label %1678
  ]

1550:                                             ; preds = %1549
  %1551 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1552 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1551, i64 0, i32 3, i32 1
  %1553 = load i16*, i16** %1552, align 8
  %1554 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1551, i64 0, i32 3, i32 2
  %1555 = load i16*, i16** %1554, align 8
  %1556 = icmp eq i16* %1553, %1555
  br i1 %1556, label %1557, label %1560, !prof !4

1557:                                             ; preds = %1550
  %1558 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1551, i64 0, i32 3
  %1559 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %1558) #11
  store i16* %1559, i16** %1552, align 8
  br label %1560

1560:                                             ; preds = %1557, %1550
  %1561 = phi i16* [ %1559, %1557 ], [ %1553, %1550 ]
  %1562 = getelementptr inbounds i16, i16* %1561, i64 1
  store i16* %1562, i16** %1552, align 8
  store i16 10, i16* %1561, align 2
  %1563 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1551, i64 0, i32 4
  %1564 = load i16, i16* %1563, align 8
  %1565 = or i16 %1564, 10
  store i16 %1565, i16* %1563, align 8
  %1566 = load i8, i8* %1499, align 8, !range !2
  %1567 = icmp eq i8 %1566, 0
  br i1 %1567, label %1568, label %1570, !prof !4

1568:                                             ; preds = %1560
  %1569 = load i8*, i8** %1495, align 8
  br label %1585

1570:                                             ; preds = %1560
  %1571 = load i32, i32* %1500, align 8
  %1572 = add nsw i32 %1571, 1
  store i32 %1572, i32* %1500, align 8
  %1573 = load i32, i32* %1501, align 8
  %1574 = load i64, i64* %1502, align 8
  %1575 = load i64, i64* %1504, align 8
  %1576 = sub i64 %1574, %1575
  %1577 = trunc i64 %1576 to i32
  %1578 = load i8, i8* %49, align 1, !range !2
  %1579 = xor i8 %1578, 1
  %1580 = zext i8 %1579 to i32
  %1581 = ashr i32 %1577, %1580
  %1582 = add i32 %1573, 1
  %1583 = add i32 %1582, %1581
  store i32 %1583, i32* %1505, align 4
  %1584 = inttoptr i64 %1574 to i8*
  br label %1585

1585:                                             ; preds = %1570, %1568
  %1586 = phi i8* [ %1569, %1568 ], [ %1584, %1570 ]
  %1587 = load i8*, i8** %1496, align 8
  %1588 = icmp ult i8* %1586, %1587
  br i1 %1588, label %1589, label %1600, !prof !3

1589:                                             ; preds = %1585
  %1590 = load i8, i8* %49, align 1, !range !2
  %1591 = icmp eq i8 %1590, 0
  br i1 %1591, label %1596, label %1592

1592:                                             ; preds = %1589
  %1593 = getelementptr inbounds i8, i8* %1586, i64 1
  store i8* %1593, i8** %1495, align 8
  %1594 = load i8, i8* %1593, align 1
  %1595 = zext i8 %1594 to i16
  br label %1547

1596:                                             ; preds = %1589
  %1597 = getelementptr inbounds i8, i8* %1586, i64 2
  %1598 = bitcast i8* %1597 to i16*
  store i8* %1597, i8** %1495, align 8
  %1599 = load i16, i16* %1598, align 2
  br label %1547

1600:                                             ; preds = %1585
  %1601 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %1547

1602:                                             ; preds = %1549
  %1603 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1604 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1603, i64 0, i32 3, i32 1
  %1605 = load i16*, i16** %1604, align 8
  %1606 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1603, i64 0, i32 3, i32 2
  %1607 = load i16*, i16** %1606, align 8
  %1608 = icmp eq i16* %1605, %1607
  br i1 %1608, label %1609, label %1612, !prof !4

1609:                                             ; preds = %1602
  %1610 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1603, i64 0, i32 3
  %1611 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %1610) #11
  store i16* %1611, i16** %1604, align 8
  br label %1612

1612:                                             ; preds = %1609, %1602
  %1613 = phi i16* [ %1611, %1609 ], [ %1605, %1602 ]
  %1614 = getelementptr inbounds i16, i16* %1613, i64 1
  store i16* %1614, i16** %1604, align 8
  store i16 10, i16* %1613, align 2
  %1615 = load i8*, i8** %1495, align 8
  %1616 = load i8*, i8** %1496, align 8
  %1617 = icmp ult i8* %1615, %1616
  br i1 %1617, label %1618, label %1629, !prof !3

1618:                                             ; preds = %1612
  %1619 = load i8, i8* %49, align 1, !range !2
  %1620 = icmp eq i8 %1619, 0
  br i1 %1620, label %1625, label %1621

1621:                                             ; preds = %1618
  %1622 = getelementptr inbounds i8, i8* %1615, i64 1
  store i8* %1622, i8** %1495, align 8
  %1623 = load i8, i8* %1622, align 1
  %1624 = zext i8 %1623 to i16
  br label %1631

1625:                                             ; preds = %1618
  %1626 = getelementptr inbounds i8, i8* %1615, i64 2
  %1627 = bitcast i8* %1626 to i16*
  store i8* %1626, i8** %1495, align 8
  %1628 = load i16, i16* %1627, align 2
  br label %1631

1629:                                             ; preds = %1612
  %1630 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %1631

1631:                                             ; preds = %1629, %1625, %1621
  %1632 = phi i16 [ %1630, %1629 ], [ %1624, %1621 ], [ %1628, %1625 ]
  %1633 = load i8, i8* %44, align 1, !range !2
  %1634 = icmp eq i8 %1633, 0
  br i1 %1634, label %1637, label %1635

1635:                                             ; preds = %1631
  %1636 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 1, i8* %1636, align 8
  br label %14210

1637:                                             ; preds = %1631
  %1638 = icmp eq i16 %1632, 10
  br i1 %1638, label %1639, label %1547

1639:                                             ; preds = %1637
  %1640 = load i8, i8* %1499, align 8, !range !2
  %1641 = icmp eq i8 %1640, 0
  br i1 %1641, label %1642, label %1644, !prof !4

1642:                                             ; preds = %1639
  %1643 = load i8*, i8** %1495, align 8
  br label %1659

1644:                                             ; preds = %1639
  %1645 = load i32, i32* %1500, align 8
  %1646 = add nsw i32 %1645, 1
  store i32 %1646, i32* %1500, align 8
  %1647 = load i32, i32* %1501, align 8
  %1648 = load i64, i64* %1502, align 8
  %1649 = load i64, i64* %1504, align 8
  %1650 = sub i64 %1648, %1649
  %1651 = trunc i64 %1650 to i32
  %1652 = load i8, i8* %49, align 1, !range !2
  %1653 = xor i8 %1652, 1
  %1654 = zext i8 %1653 to i32
  %1655 = ashr i32 %1651, %1654
  %1656 = add i32 %1647, 1
  %1657 = add i32 %1656, %1655
  store i32 %1657, i32* %1505, align 4
  %1658 = inttoptr i64 %1648 to i8*
  br label %1659

1659:                                             ; preds = %1644, %1642
  %1660 = phi i8* [ %1643, %1642 ], [ %1658, %1644 ]
  %1661 = load i8*, i8** %1496, align 8
  %1662 = icmp ult i8* %1660, %1661
  br i1 %1662, label %1663, label %1674, !prof !3

1663:                                             ; preds = %1659
  %1664 = load i8, i8* %49, align 1, !range !2
  %1665 = icmp eq i8 %1664, 0
  br i1 %1665, label %1670, label %1666

1666:                                             ; preds = %1663
  %1667 = getelementptr inbounds i8, i8* %1660, i64 1
  store i8* %1667, i8** %1495, align 8
  %1668 = load i8, i8* %1667, align 1
  %1669 = zext i8 %1668 to i16
  br label %1547

1670:                                             ; preds = %1663
  %1671 = getelementptr inbounds i8, i8* %1660, i64 2
  %1672 = bitcast i8* %1671 to i16*
  store i8* %1671, i8** %1495, align 8
  %1673 = load i16, i16* %1672, align 2
  br label %1547

1674:                                             ; preds = %1659
  %1675 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  %1676 = load i8, i8* %44, align 1, !range !2
  %1677 = icmp eq i8 %1676, 0
  br i1 %1677, label %1547, label %14210

1678:                                             ; preds = %1549
  %1679 = load i8, i8* %44, align 1, !range !2
  %1680 = icmp eq i8 %1679, 0
  br i1 %1680, label %1681, label %14210

1681:                                             ; preds = %1678
  %1682 = load i8, i8* %1497, align 8, !range !2
  %1683 = icmp eq i8 %1682, 0
  br i1 %1683, label %1687, label %1684

1684:                                             ; preds = %1681
  %1685 = call i32 @_ZNK5blink15SegmentedString6lengthEv(%"class.blink::SegmentedString"* %1) #11
  %1686 = icmp eq i32 %1685, 1
  br i1 %1686, label %1744, label %1687

1687:                                             ; preds = %1684, %1681
  %1688 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %1498, align 8
  %1689 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %1688, i64 0, i32 1
  %1690 = load i8, i8* %1689, align 4, !range !2
  %1691 = icmp eq i8 %1690, 0
  br i1 %1691, label %1692, label %1547

1692:                                             ; preds = %1687
  %1693 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %1688, i64 0, i32 0
  %1694 = load i32, i32* %1693, align 8
  switch i32 %1694, label %1547 [
    i32 0, label %1695
    i32 2, label %1695
    i32 4, label %1695
  ]

1695:                                             ; preds = %1692, %1692, %1692
  %1696 = load i8*, i8** %1495, align 8
  %1697 = load i8*, i8** %1496, align 8
  %1698 = icmp ult i8* %1696, %1697
  br i1 %1698, label %1699, label %1710, !prof !3

1699:                                             ; preds = %1695
  %1700 = load i8, i8* %49, align 1, !range !2
  %1701 = icmp eq i8 %1700, 0
  br i1 %1701, label %1706, label %1702

1702:                                             ; preds = %1699
  %1703 = getelementptr inbounds i8, i8* %1696, i64 1
  store i8* %1703, i8** %1495, align 8
  %1704 = load i8, i8* %1703, align 1
  %1705 = zext i8 %1704 to i16
  br label %1712

1706:                                             ; preds = %1699
  %1707 = getelementptr inbounds i8, i8* %1696, i64 2
  %1708 = bitcast i8* %1707 to i16*
  store i8* %1707, i8** %1495, align 8
  %1709 = load i16, i16* %1708, align 2
  br label %1712

1710:                                             ; preds = %1695
  %1711 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %1712

1712:                                             ; preds = %1710, %1706, %1702
  %1713 = phi i16 [ %1711, %1710 ], [ %1705, %1702 ], [ %1709, %1706 ]
  %1714 = icmp eq i16 %1713, 0
  br i1 %1714, label %1715, label %1547

1715:                                             ; preds = %1712, %1741
  %1716 = load i8, i8* %44, align 1, !range !2
  %1717 = icmp eq i8 %1716, 0
  br i1 %1717, label %1718, label %14210

1718:                                             ; preds = %1715
  %1719 = load i8, i8* %1497, align 8, !range !2
  %1720 = icmp eq i8 %1719, 0
  br i1 %1720, label %1724, label %1721

1721:                                             ; preds = %1718
  %1722 = call i32 @_ZNK5blink15SegmentedString6lengthEv(%"class.blink::SegmentedString"* %1) #11
  %1723 = icmp eq i32 %1722, 1
  br i1 %1723, label %1744, label %1724

1724:                                             ; preds = %1721, %1718
  %1725 = load i8*, i8** %1495, align 8
  %1726 = load i8*, i8** %1496, align 8
  %1727 = icmp ult i8* %1725, %1726
  br i1 %1727, label %1728, label %1739, !prof !3

1728:                                             ; preds = %1724
  %1729 = load i8, i8* %49, align 1, !range !2
  %1730 = icmp eq i8 %1729, 0
  br i1 %1730, label %1735, label %1731

1731:                                             ; preds = %1728
  %1732 = getelementptr inbounds i8, i8* %1725, i64 1
  store i8* %1732, i8** %1495, align 8
  %1733 = load i8, i8* %1732, align 1
  %1734 = zext i8 %1733 to i16
  br label %1741

1735:                                             ; preds = %1728
  %1736 = getelementptr inbounds i8, i8* %1725, i64 2
  %1737 = bitcast i8* %1736 to i16*
  store i8* %1736, i8** %1495, align 8
  %1738 = load i16, i16* %1737, align 2
  br label %1741

1739:                                             ; preds = %1724
  %1740 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %1741

1741:                                             ; preds = %1739, %1735, %1731
  %1742 = phi i16 [ %1740, %1739 ], [ %1734, %1731 ], [ %1738, %1735 ]
  %1743 = icmp eq i16 %1742, 0
  br i1 %1743, label %1715, label %1547

1744:                                             ; preds = %1684, %1721
  %1745 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1746 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1745, i64 0, i32 0
  %1747 = load i32, i32* %1746, align 8
  %1748 = icmp eq i32 %1747, 5
  br i1 %1748, label %14210, label %1749

1749:                                             ; preds = %1744
  store i32 0, i32* %74, align 8
  %1750 = load i8, i8* %49, align 1, !range !2
  %1751 = icmp eq i8 %1750, 0
  br i1 %1751, label %1757, label %1752

1752:                                             ; preds = %1749
  %1753 = load i8*, i8** %1495, align 8
  %1754 = load i8, i8* %1753, align 1
  %1755 = zext i8 %1754 to i16
  %1756 = ptrtoint i8* %1753 to i64
  br label %1763

1757:                                             ; preds = %1749
  %1758 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %1759 = load i16*, i16** %1758, align 8
  %1760 = load i16, i16* %1759, align 2
  %1761 = ptrtoint i16* %1759 to i64
  %1762 = bitcast i16* %1759 to i8*
  br label %1763

1763:                                             ; preds = %1757, %1752
  %1764 = phi i8* [ %1753, %1752 ], [ %1762, %1757 ]
  %1765 = phi i64 [ %1756, %1752 ], [ %1761, %1757 ]
  %1766 = phi i16 [ %1755, %1752 ], [ %1760, %1757 ]
  %1767 = icmp eq i16 %1766, 10
  br i1 %1767, label %1768, label %1783

1768:                                             ; preds = %1763
  %1769 = load i8, i8* %1499, align 8, !range !2
  %1770 = icmp eq i8 %1769, 0
  br i1 %1770, label %1783, label %1771, !prof !4

1771:                                             ; preds = %1768
  %1772 = load i32, i32* %1500, align 8
  %1773 = add nsw i32 %1772, 1
  store i32 %1773, i32* %1500, align 8
  %1774 = load i32, i32* %1501, align 8
  %1775 = load i64, i64* %1504, align 8
  %1776 = sub i64 %1765, %1775
  %1777 = trunc i64 %1776 to i32
  %1778 = xor i8 %1750, 1
  %1779 = zext i8 %1778 to i32
  %1780 = ashr i32 %1777, %1779
  %1781 = add i32 %1774, 1
  %1782 = add i32 %1781, %1780
  store i32 %1782, i32* %1505, align 4
  br label %1783

1783:                                             ; preds = %1771, %1768, %1763
  %1784 = load i8*, i8** %1496, align 8
  %1785 = icmp ult i8* %1764, %1784
  br i1 %1785, label %1786, label %1791, !prof !3

1786:                                             ; preds = %1783
  br i1 %1751, label %1789, label %1787

1787:                                             ; preds = %1786
  %1788 = getelementptr inbounds i8, i8* %1764, i64 1
  store i8* %1788, i8** %1495, align 8
  br label %1793

1789:                                             ; preds = %1786
  %1790 = getelementptr inbounds i8, i8* %1764, i64 2
  store i8* %1790, i8** %1495, align 8
  br label %1793

1791:                                             ; preds = %1783
  %1792 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %1793

1793:                                             ; preds = %1791, %1789, %1787
  %1794 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1795 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1794, i64 0, i32 0
  store i32 0, i32* %1795, align 8
  %1796 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1794, i64 0, i32 1, i32 0
  store i32 0, i32* %1796, align 4
  %1797 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1794, i64 0, i32 2
  store i32 0, i32* %1797, align 4
  %1798 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1794, i64 0, i32 3
  %1799 = bitcast %class.LiteralBuffer* %1798 to i64*
  %1800 = load i64, i64* %1799, align 8
  %1801 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1794, i64 0, i32 3, i32 1
  %1802 = bitcast i16** %1801 to i64*
  store i64 %1800, i64* %1802, align 8
  %1803 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1794, i64 0, i32 4
  store i16 0, i16* %1803, align 8
  %1804 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1805 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1804, i64 0, i32 0
  store i32 6, i32* %1805, align 8
  br label %14210

1806:                                             ; preds = %146, %73
  %1807 = load i16, i16* %14, align 2
  br label %1808

1808:                                             ; preds = %1806, %141
  %1809 = phi i16 [ %1807, %1806 ], [ %139, %141 ]
  switch i16 %1809, label %1878 [
    i16 33, label %1810
    i16 47, label %1844
  ]

1810:                                             ; preds = %1808
  store i32 45, i32* %74, align 8
  %1811 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %1812 = load i8*, i8** %1811, align 8
  %1813 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %1814 = load i8*, i8** %1813, align 8
  %1815 = icmp ult i8* %1812, %1814
  br i1 %1815, label %1816, label %1827, !prof !3

1816:                                             ; preds = %1810
  %1817 = load i8, i8* %49, align 1, !range !2
  %1818 = icmp eq i8 %1817, 0
  br i1 %1818, label %1823, label %1819

1819:                                             ; preds = %1816
  %1820 = getelementptr inbounds i8, i8* %1812, i64 1
  store i8* %1820, i8** %1811, align 8
  %1821 = load i8, i8* %1820, align 1
  %1822 = zext i8 %1821 to i16
  br label %1829

1823:                                             ; preds = %1816
  %1824 = getelementptr inbounds i8, i8* %1812, i64 2
  %1825 = bitcast i8* %1824 to i16*
  store i8* %1824, i8** %1811, align 8
  %1826 = load i16, i16* %1825, align 2
  br label %1829

1827:                                             ; preds = %1810
  %1828 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %1829

1829:                                             ; preds = %1827, %1823, %1819
  %1830 = phi i16 [ %1828, %1827 ], [ %1822, %1819 ], [ %1826, %1823 ]
  store i16 %1830, i16* %14, align 2
  %1831 = icmp ugt i16 %1830, 15
  br i1 %1831, label %1832, label %1834

1832:                                             ; preds = %1829
  %1833 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %1833, align 8
  br label %9115

1834:                                             ; preds = %1829
  %1835 = load i8, i8* %44, align 1, !range !2
  %1836 = icmp eq i8 %1835, 0
  br i1 %1836, label %1837, label %1839

1837:                                             ; preds = %1834
  %1838 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %1838, label %9113, label %1839

1839:                                             ; preds = %1834, %1837
  %1840 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1841 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1840, i64 0, i32 0
  %1842 = load i32, i32* %1841, align 8
  %1843 = icmp eq i32 %1842, 5
  br label %14210

1844:                                             ; preds = %1808
  store i32 8, i32* %74, align 8
  %1845 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %1846 = load i8*, i8** %1845, align 8
  %1847 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %1848 = load i8*, i8** %1847, align 8
  %1849 = icmp ult i8* %1846, %1848
  br i1 %1849, label %1850, label %1861, !prof !3

1850:                                             ; preds = %1844
  %1851 = load i8, i8* %49, align 1, !range !2
  %1852 = icmp eq i8 %1851, 0
  br i1 %1852, label %1857, label %1853

1853:                                             ; preds = %1850
  %1854 = getelementptr inbounds i8, i8* %1846, i64 1
  store i8* %1854, i8** %1845, align 8
  %1855 = load i8, i8* %1854, align 1
  %1856 = zext i8 %1855 to i16
  br label %1863

1857:                                             ; preds = %1850
  %1858 = getelementptr inbounds i8, i8* %1846, i64 2
  %1859 = bitcast i8* %1858 to i16*
  store i8* %1858, i8** %1845, align 8
  %1860 = load i16, i16* %1859, align 2
  br label %1863

1861:                                             ; preds = %1844
  %1862 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %1863

1863:                                             ; preds = %1861, %1857, %1853
  %1864 = phi i16 [ %1862, %1861 ], [ %1856, %1853 ], [ %1860, %1857 ]
  store i16 %1864, i16* %14, align 2
  %1865 = icmp ugt i16 %1864, 15
  br i1 %1865, label %1866, label %1868

1866:                                             ; preds = %1863
  %1867 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %1867, align 8
  br label %1939

1868:                                             ; preds = %1863
  %1869 = load i8, i8* %44, align 1, !range !2
  %1870 = icmp eq i8 %1869, 0
  br i1 %1870, label %1871, label %1873

1871:                                             ; preds = %1868
  %1872 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %1872, label %1937, label %1873

1873:                                             ; preds = %1868, %1871
  %1874 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1875 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1874, i64 0, i32 0
  %1876 = load i32, i32* %1875, align 8
  %1877 = icmp eq i32 %1876, 5
  br label %14210

1878:                                             ; preds = %1808
  %1879 = or i16 %1809, 32
  %1880 = add i16 %1879, -97
  %1881 = icmp ult i16 %1880, 26
  br i1 %1881, label %1882, label %1917

1882:                                             ; preds = %1878
  %1883 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  call void @_ZN5blink9HTMLToken13BeginStartTagEDs(%"class.blink::HTMLToken"* %1883, i16 zeroext %1879)
  store i32 9, i32* %74, align 8
  %1884 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %1885 = load i8*, i8** %1884, align 8
  %1886 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %1887 = load i8*, i8** %1886, align 8
  %1888 = icmp ult i8* %1885, %1887
  br i1 %1888, label %1889, label %1900, !prof !3

1889:                                             ; preds = %1882
  %1890 = load i8, i8* %49, align 1, !range !2
  %1891 = icmp eq i8 %1890, 0
  br i1 %1891, label %1896, label %1892

1892:                                             ; preds = %1889
  %1893 = getelementptr inbounds i8, i8* %1885, i64 1
  store i8* %1893, i8** %1884, align 8
  %1894 = load i8, i8* %1893, align 1
  %1895 = zext i8 %1894 to i16
  br label %1902

1896:                                             ; preds = %1889
  %1897 = getelementptr inbounds i8, i8* %1885, i64 2
  %1898 = bitcast i8* %1897 to i16*
  store i8* %1897, i8** %1884, align 8
  %1899 = load i16, i16* %1898, align 2
  br label %1902

1900:                                             ; preds = %1882
  %1901 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %1902

1902:                                             ; preds = %1900, %1896, %1892
  %1903 = phi i16 [ %1901, %1900 ], [ %1895, %1892 ], [ %1899, %1896 ]
  store i16 %1903, i16* %14, align 2
  %1904 = icmp ugt i16 %1903, 15
  br i1 %1904, label %1905, label %1907

1905:                                             ; preds = %1902
  %1906 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %1906, align 8
  br label %2055

1907:                                             ; preds = %1902
  %1908 = load i8, i8* %44, align 1, !range !2
  %1909 = icmp eq i8 %1908, 0
  br i1 %1909, label %1910, label %1912

1910:                                             ; preds = %1907
  %1911 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %1911, label %2055, label %1912

1912:                                             ; preds = %1907, %1910
  %1913 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1914 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1913, i64 0, i32 0
  %1915 = load i32, i32* %1914, align 8
  %1916 = icmp eq i32 %1915, 5
  br label %14210

1917:                                             ; preds = %1878
  %1918 = icmp eq i16 %1809, 63
  br i1 %1918, label %8962, label %1919

1919:                                             ; preds = %1917
  %1920 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1921 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1920, i64 0, i32 0
  store i32 5, i32* %1921, align 8
  %1922 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1923 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1922, i64 0, i32 3, i32 1
  %1924 = load i16*, i16** %1923, align 8
  %1925 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1922, i64 0, i32 3, i32 2
  %1926 = load i16*, i16** %1925, align 8
  %1927 = icmp eq i16* %1924, %1926
  br i1 %1927, label %1928, label %1931, !prof !4

1928:                                             ; preds = %1919
  %1929 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1922, i64 0, i32 3
  %1930 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %1929) #11
  store i16* %1930, i16** %1923, align 8
  br label %1931

1931:                                             ; preds = %1919, %1928
  %1932 = phi i16* [ %1930, %1928 ], [ %1924, %1919 ]
  %1933 = getelementptr inbounds i16, i16* %1932, i64 1
  store i16* %1933, i16** %1923, align 8
  store i16 60, i16* %1932, align 2
  %1934 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1922, i64 0, i32 4
  %1935 = load i16, i16* %1934, align 8
  %1936 = or i16 %1935, 60
  store i16 %1936, i16* %1934, align 8
  store i32 0, i32* %74, align 8
  br label %76

1937:                                             ; preds = %1871, %73
  %1938 = load i16, i16* %14, align 2
  br label %1939

1939:                                             ; preds = %1937, %1866
  %1940 = phi i16 [ %1938, %1937 ], [ %1864, %1866 ]
  %1941 = or i16 %1940, 32
  %1942 = add i16 %1941, -97
  %1943 = icmp ult i16 %1942, 26
  br i1 %1943, label %1944, label %1985

1944:                                             ; preds = %1939
  %1945 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1946 = trunc i16 %1941 to i8
  call void @_ZN5blink9HTMLToken11BeginEndTagEh(%"class.blink::HTMLToken"* %1945, i8 zeroext %1946)
  %1947 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %1948 = bitcast %class.LiteralBuffer.0* %1947 to i64*
  %1949 = load i64, i64* %1948, align 8
  %1950 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  %1951 = bitcast i16** %1950 to i64*
  store i64 %1949, i64* %1951, align 8
  store i32 9, i32* %74, align 8
  %1952 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %1953 = load i8*, i8** %1952, align 8
  %1954 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %1955 = load i8*, i8** %1954, align 8
  %1956 = icmp ult i8* %1953, %1955
  br i1 %1956, label %1957, label %1968, !prof !3

1957:                                             ; preds = %1944
  %1958 = load i8, i8* %49, align 1, !range !2
  %1959 = icmp eq i8 %1958, 0
  br i1 %1959, label %1964, label %1960

1960:                                             ; preds = %1957
  %1961 = getelementptr inbounds i8, i8* %1953, i64 1
  store i8* %1961, i8** %1952, align 8
  %1962 = load i8, i8* %1961, align 1
  %1963 = zext i8 %1962 to i16
  br label %1970

1964:                                             ; preds = %1957
  %1965 = getelementptr inbounds i8, i8* %1953, i64 2
  %1966 = bitcast i8* %1965 to i16*
  store i8* %1965, i8** %1952, align 8
  %1967 = load i16, i16* %1966, align 2
  br label %1970

1968:                                             ; preds = %1944
  %1969 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %1970

1970:                                             ; preds = %1968, %1964, %1960
  %1971 = phi i16 [ %1969, %1968 ], [ %1963, %1960 ], [ %1967, %1964 ]
  store i16 %1971, i16* %14, align 2
  %1972 = icmp ugt i16 %1971, 15
  br i1 %1972, label %1973, label %1975

1973:                                             ; preds = %1970
  %1974 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %1974, align 8
  br label %2055

1975:                                             ; preds = %1970
  %1976 = load i8, i8* %44, align 1, !range !2
  %1977 = icmp eq i8 %1976, 0
  br i1 %1977, label %1978, label %1980

1978:                                             ; preds = %1975
  %1979 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %1979, label %2055, label %1980

1980:                                             ; preds = %1975, %1978
  %1981 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %1982 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1981, i64 0, i32 0
  %1983 = load i32, i32* %1982, align 8
  %1984 = icmp eq i32 %1983, 5
  br label %14210

1985:                                             ; preds = %1939
  switch i16 %1940, label %8962 [
    i16 62, label %1986
    i16 0, label %2020
  ]

1986:                                             ; preds = %1985
  store i32 0, i32* %74, align 8
  %1987 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %1988 = load i8*, i8** %1987, align 8
  %1989 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %1990 = load i8*, i8** %1989, align 8
  %1991 = icmp ult i8* %1988, %1990
  br i1 %1991, label %1992, label %2003, !prof !3

1992:                                             ; preds = %1986
  %1993 = load i8, i8* %49, align 1, !range !2
  %1994 = icmp eq i8 %1993, 0
  br i1 %1994, label %1999, label %1995

1995:                                             ; preds = %1992
  %1996 = getelementptr inbounds i8, i8* %1988, i64 1
  store i8* %1996, i8** %1987, align 8
  %1997 = load i8, i8* %1996, align 1
  %1998 = zext i8 %1997 to i16
  br label %2005

1999:                                             ; preds = %1992
  %2000 = getelementptr inbounds i8, i8* %1988, i64 2
  %2001 = bitcast i8* %2000 to i16*
  store i8* %2000, i8** %1987, align 8
  %2002 = load i16, i16* %2001, align 2
  br label %2005

2003:                                             ; preds = %1986
  %2004 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %2005

2005:                                             ; preds = %2003, %1999, %1995
  %2006 = phi i16 [ %2004, %2003 ], [ %1998, %1995 ], [ %2002, %1999 ]
  store i16 %2006, i16* %14, align 2
  %2007 = icmp ugt i16 %2006, 15
  br i1 %2007, label %2008, label %2010

2008:                                             ; preds = %2005
  %2009 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %2009, align 8
  br label %76

2010:                                             ; preds = %2005
  %2011 = load i8, i8* %44, align 1, !range !2
  %2012 = icmp eq i8 %2011, 0
  br i1 %2012, label %2013, label %2015

2013:                                             ; preds = %2010
  %2014 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %2014, label %76, label %2015

2015:                                             ; preds = %2010, %2013
  %2016 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %2017 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2016, i64 0, i32 0
  %2018 = load i32, i32* %2017, align 8
  %2019 = icmp eq i32 %2018, 5
  br label %14210

2020:                                             ; preds = %1985
  %2021 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %2022 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2021, i64 0, i32 0
  store i32 5, i32* %2022, align 8
  %2023 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %2024 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2023, i64 0, i32 3, i32 1
  %2025 = load i16*, i16** %2024, align 8
  %2026 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2023, i64 0, i32 3, i32 2
  %2027 = load i16*, i16** %2026, align 8
  %2028 = icmp eq i16* %2025, %2027
  br i1 %2028, label %2029, label %2032, !prof !4

2029:                                             ; preds = %2020
  %2030 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2023, i64 0, i32 3
  %2031 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %2030) #11
  store i16* %2031, i16** %2024, align 8
  br label %2032

2032:                                             ; preds = %2020, %2029
  %2033 = phi i16* [ %2031, %2029 ], [ %2025, %2020 ]
  %2034 = getelementptr inbounds i16, i16* %2033, i64 1
  store i16* %2034, i16** %2024, align 8
  store i16 60, i16* %2033, align 2
  %2035 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2023, i64 0, i32 4
  %2036 = load i16, i16* %2035, align 8
  %2037 = or i16 %2036, 60
  store i16 %2037, i16* %2035, align 8
  %2038 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %2039 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2038, i64 0, i32 0
  store i32 5, i32* %2039, align 8
  %2040 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %2041 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2040, i64 0, i32 3, i32 1
  %2042 = load i16*, i16** %2041, align 8
  %2043 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2040, i64 0, i32 3, i32 2
  %2044 = load i16*, i16** %2043, align 8
  %2045 = icmp eq i16* %2042, %2044
  br i1 %2045, label %2046, label %2049, !prof !4

2046:                                             ; preds = %2032
  %2047 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2040, i64 0, i32 3
  %2048 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %2047) #11
  store i16* %2048, i16** %2041, align 8
  br label %2049

2049:                                             ; preds = %2032, %2046
  %2050 = phi i16* [ %2048, %2046 ], [ %2042, %2032 ]
  %2051 = getelementptr inbounds i16, i16* %2050, i64 1
  store i16* %2051, i16** %2041, align 8
  store i16 47, i16* %2050, align 2
  %2052 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2040, i64 0, i32 4
  %2053 = load i16, i16* %2052, align 8
  %2054 = or i16 %2053, 47
  store i16 %2054, i16* %2052, align 8
  store i32 0, i32* %74, align 8
  br label %76

2055:                                             ; preds = %1973, %1905, %73, %1978, %1910
  %2056 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %2057 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %2058 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  br label %2059

2059:                                             ; preds = %2055, %2113
  %2060 = load i16, i16* %14, align 2
  br label %2061

2061:                                             ; preds = %2109, %2059
  %2062 = phi i16 [ %2060, %2059 ], [ %2107, %2109 ]
  %2063 = icmp ult i16 %2062, 128
  br i1 %2063, label %2064, label %2070

2064:                                             ; preds = %2061
  %2065 = zext i16 %2062 to i64
  %2066 = getelementptr inbounds [128 x i8], [128 x i8]* bitcast (<{ [63 x i8], [65 x i8] }>* @_ZN5blinkL21character_scan_flags_E to [128 x i8]*), i64 0, i64 %2065
  %2067 = load i8, i8* %2066, align 1
  %2068 = and i8 %2067, 39
  %2069 = icmp eq i8 %2068, 0
  br i1 %2069, label %2070, label %2120

2070:                                             ; preds = %2064, %2061
  %2071 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %2072 = add i16 %2062, -65
  %2073 = icmp ult i16 %2072, 26
  %2074 = select i1 %2073, i16 32, i16 0
  %2075 = or i16 %2074, %2062
  %2076 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2071, i64 0, i32 3, i32 1
  %2077 = load i16*, i16** %2076, align 8
  %2078 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2071, i64 0, i32 3, i32 2
  %2079 = load i16*, i16** %2078, align 8
  %2080 = icmp eq i16* %2077, %2079
  br i1 %2080, label %2081, label %2084, !prof !4

2081:                                             ; preds = %2070
  %2082 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2071, i64 0, i32 3
  %2083 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %2082) #11
  store i16* %2083, i16** %2076, align 8
  br label %2084

2084:                                             ; preds = %2070, %2081
  %2085 = phi i16* [ %2083, %2081 ], [ %2077, %2070 ]
  %2086 = getelementptr inbounds i16, i16* %2085, i64 1
  store i16* %2086, i16** %2076, align 8
  store i16 %2075, i16* %2085, align 2
  %2087 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2071, i64 0, i32 4
  %2088 = load i16, i16* %2087, align 8
  %2089 = or i16 %2088, %2075
  store i16 %2089, i16* %2087, align 8
  %2090 = load i8*, i8** %2056, align 8
  %2091 = load i8*, i8** %2057, align 8
  %2092 = icmp ult i8* %2090, %2091
  br i1 %2092, label %2093, label %2104, !prof !3

2093:                                             ; preds = %2084
  %2094 = load i8, i8* %49, align 1, !range !2
  %2095 = icmp eq i8 %2094, 0
  br i1 %2095, label %2100, label %2096

2096:                                             ; preds = %2093
  %2097 = getelementptr inbounds i8, i8* %2090, i64 1
  store i8* %2097, i8** %2056, align 8
  %2098 = load i8, i8* %2097, align 1
  %2099 = zext i8 %2098 to i16
  br label %2106

2100:                                             ; preds = %2093
  %2101 = getelementptr inbounds i8, i8* %2090, i64 2
  %2102 = bitcast i8* %2101 to i16*
  store i8* %2101, i8** %2056, align 8
  %2103 = load i16, i16* %2102, align 2
  br label %2106

2104:                                             ; preds = %2084
  %2105 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %2106

2106:                                             ; preds = %2104, %2100, %2096
  %2107 = phi i16 [ %2105, %2104 ], [ %2099, %2096 ], [ %2103, %2100 ]
  store i16 %2107, i16* %14, align 2
  %2108 = icmp ugt i16 %2107, 15
  br i1 %2108, label %2109, label %2110

2109:                                             ; preds = %2106
  store i8 0, i8* %2058, align 8
  br label %2061

2110:                                             ; preds = %2106
  %2111 = load i8, i8* %44, align 1, !range !2
  %2112 = icmp eq i8 %2111, 0
  br i1 %2112, label %2113, label %2115

2113:                                             ; preds = %2110
  %2114 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %2114, label %2059, label %2115

2115:                                             ; preds = %2110, %2113
  %2116 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %2117 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2116, i64 0, i32 0
  %2118 = load i32, i32* %2117, align 8
  %2119 = icmp eq i32 %2118, 5
  br label %14210

2120:                                             ; preds = %2064
  switch i16 %2062, label %2155 [
    i16 47, label %2121
    i16 62, label %2152
    i16 0, label %2154
  ]

2121:                                             ; preds = %2120
  store i32 42, i32* %74, align 8
  %2122 = load i8*, i8** %2056, align 8
  %2123 = load i8*, i8** %2057, align 8
  %2124 = icmp ult i8* %2122, %2123
  br i1 %2124, label %2125, label %2136, !prof !3

2125:                                             ; preds = %2121
  %2126 = load i8, i8* %49, align 1, !range !2
  %2127 = icmp eq i8 %2126, 0
  br i1 %2127, label %2132, label %2128

2128:                                             ; preds = %2125
  %2129 = getelementptr inbounds i8, i8* %2122, i64 1
  store i8* %2129, i8** %2056, align 8
  %2130 = load i8, i8* %2129, align 1
  %2131 = zext i8 %2130 to i16
  br label %2138

2132:                                             ; preds = %2125
  %2133 = getelementptr inbounds i8, i8* %2122, i64 2
  %2134 = bitcast i8* %2133 to i16*
  store i8* %2133, i8** %2056, align 8
  %2135 = load i16, i16* %2134, align 2
  br label %2138

2136:                                             ; preds = %2121
  %2137 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %2138

2138:                                             ; preds = %2136, %2132, %2128
  %2139 = phi i16 [ %2137, %2136 ], [ %2131, %2128 ], [ %2135, %2132 ]
  store i16 %2139, i16* %14, align 2
  %2140 = icmp ugt i16 %2139, 15
  br i1 %2140, label %2141, label %2142

2141:                                             ; preds = %2138
  store i8 0, i8* %2058, align 8
  br label %8954

2142:                                             ; preds = %2138
  %2143 = load i8, i8* %44, align 1, !range !2
  %2144 = icmp eq i8 %2143, 0
  br i1 %2144, label %2145, label %2147

2145:                                             ; preds = %2142
  %2146 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %2146, label %8952, label %2147

2147:                                             ; preds = %2142, %2145
  %2148 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %2149 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2148, i64 0, i32 0
  %2150 = load i32, i32* %2149, align 8
  %2151 = icmp eq i32 %2150, 5
  br label %14210

2152:                                             ; preds = %2120
  %2153 = call zeroext i1 @_ZN5blink13HTMLTokenizer15EmitAndResumeInERNS_15SegmentedStringENS0_5StateE(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i32 0)
  br label %14210

2154:                                             ; preds = %2120
  store i32 0, i32* %74, align 8
  br label %76

2155:                                             ; preds = %2120
  store i32 33, i32* %74, align 8
  %2156 = load i8, i8* %49, align 1, !range !2
  %2157 = icmp eq i8 %2156, 0
  br i1 %2157, label %2163, label %2158

2158:                                             ; preds = %2155
  %2159 = load i8*, i8** %2056, align 8
  %2160 = load i8, i8* %2159, align 1
  %2161 = zext i8 %2160 to i16
  %2162 = ptrtoint i8* %2159 to i64
  br label %2169

2163:                                             ; preds = %2155
  %2164 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %2165 = load i16*, i16** %2164, align 8
  %2166 = load i16, i16* %2165, align 2
  %2167 = ptrtoint i16* %2165 to i64
  %2168 = bitcast i16* %2165 to i8*
  br label %2169

2169:                                             ; preds = %2163, %2158
  %2170 = phi i8* [ %2159, %2158 ], [ %2168, %2163 ]
  %2171 = phi i64 [ %2162, %2158 ], [ %2167, %2163 ]
  %2172 = phi i16 [ %2161, %2158 ], [ %2166, %2163 ]
  %2173 = icmp eq i16 %2172, 10
  br i1 %2173, label %2174, label %2195

2174:                                             ; preds = %2169
  %2175 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %2176 = load i8, i8* %2175, align 8, !range !2
  %2177 = icmp eq i8 %2176, 0
  br i1 %2177, label %2195, label %2178, !prof !4

2178:                                             ; preds = %2174
  %2179 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %2180 = load i32, i32* %2179, align 8
  %2181 = add nsw i32 %2180, 1
  store i32 %2181, i32* %2179, align 8
  %2182 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %2183 = load i32, i32* %2182, align 8
  %2184 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %2185 = bitcast i8** %2184 to i64*
  %2186 = load i64, i64* %2185, align 8
  %2187 = sub i64 %2171, %2186
  %2188 = trunc i64 %2187 to i32
  %2189 = xor i8 %2156, 1
  %2190 = zext i8 %2189 to i32
  %2191 = ashr i32 %2188, %2190
  %2192 = add i32 %2183, 1
  %2193 = add i32 %2192, %2191
  %2194 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %2193, i32* %2194, align 4
  br label %2195

2195:                                             ; preds = %2178, %2174, %2169
  %2196 = load i8*, i8** %2057, align 8
  %2197 = icmp ult i8* %2170, %2196
  br i1 %2197, label %2198, label %2207, !prof !3

2198:                                             ; preds = %2195
  br i1 %2157, label %2203, label %2199

2199:                                             ; preds = %2198
  %2200 = getelementptr inbounds i8, i8* %2170, i64 1
  store i8* %2200, i8** %2056, align 8
  %2201 = load i8, i8* %2200, align 1
  %2202 = zext i8 %2201 to i16
  br label %2209

2203:                                             ; preds = %2198
  %2204 = getelementptr inbounds i8, i8* %2170, i64 2
  %2205 = bitcast i8* %2204 to i16*
  store i8* %2204, i8** %2056, align 8
  %2206 = load i16, i16* %2205, align 2
  br label %2209

2207:                                             ; preds = %2195
  %2208 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %2209

2209:                                             ; preds = %2207, %2203, %2199
  %2210 = phi i16 [ %2208, %2207 ], [ %2202, %2199 ], [ %2206, %2203 ]
  store i16 %2210, i16* %14, align 2
  %2211 = icmp ugt i16 %2210, 15
  br i1 %2211, label %2212, label %2213

2212:                                             ; preds = %2209
  store i8 0, i8* %2058, align 8
  br label %7037

2213:                                             ; preds = %2209
  %2214 = load i8, i8* %44, align 1, !range !2
  %2215 = icmp eq i8 %2214, 0
  br i1 %2215, label %2216, label %2218

2216:                                             ; preds = %2213
  %2217 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %2217, label %7035, label %2218

2218:                                             ; preds = %2213, %2216
  %2219 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %2220 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2219, i64 0, i32 0
  %2221 = load i32, i32* %2220, align 8
  %2222 = icmp eq i32 %2221, 5
  br label %14210

2223:                                             ; preds = %878, %73
  %2224 = load i16, i16* %14, align 2
  br label %2225

2225:                                             ; preds = %2223, %874
  %2226 = phi i16 [ %2224, %2223 ], [ %872, %874 ]
  %2227 = icmp eq i16 %2226, 47
  br i1 %2227, label %2228, label %2267

2228:                                             ; preds = %2225
  %2229 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %2230 = bitcast %class.LiteralBuffer.7* %2229 to i64*
  %2231 = load i64, i64* %2230, align 8
  %2232 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %2233 = bitcast i8** %2232 to i64*
  store i64 %2231, i64* %2233, align 8
  store i32 11, i32* %74, align 8
  %2234 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %2235 = load i8*, i8** %2234, align 8
  %2236 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %2237 = load i8*, i8** %2236, align 8
  %2238 = icmp ult i8* %2235, %2237
  br i1 %2238, label %2239, label %2250, !prof !3

2239:                                             ; preds = %2228
  %2240 = load i8, i8* %49, align 1, !range !2
  %2241 = icmp eq i8 %2240, 0
  br i1 %2241, label %2246, label %2242

2242:                                             ; preds = %2239
  %2243 = getelementptr inbounds i8, i8* %2235, i64 1
  store i8* %2243, i8** %2234, align 8
  %2244 = load i8, i8* %2243, align 1
  %2245 = zext i8 %2244 to i16
  br label %2252

2246:                                             ; preds = %2239
  %2247 = getelementptr inbounds i8, i8* %2235, i64 2
  %2248 = bitcast i8* %2247 to i16*
  store i8* %2247, i8** %2234, align 8
  %2249 = load i16, i16* %2248, align 2
  br label %2252

2250:                                             ; preds = %2228
  %2251 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %2252

2252:                                             ; preds = %2250, %2246, %2242
  %2253 = phi i16 [ %2251, %2250 ], [ %2245, %2242 ], [ %2249, %2246 ]
  store i16 %2253, i16* %14, align 2
  %2254 = icmp ugt i16 %2253, 15
  br i1 %2254, label %2255, label %2257

2255:                                             ; preds = %2252
  %2256 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %2256, align 8
  br label %2285

2257:                                             ; preds = %2252
  %2258 = load i8, i8* %44, align 1, !range !2
  %2259 = icmp eq i8 %2258, 0
  br i1 %2259, label %2260, label %2262

2260:                                             ; preds = %2257
  %2261 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %2261, label %2285, label %2262

2262:                                             ; preds = %2257, %2260
  %2263 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %2264 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2263, i64 0, i32 0
  %2265 = load i32, i32* %2264, align 8
  %2266 = icmp eq i32 %2265, 5
  br label %14210

2267:                                             ; preds = %2225
  %2268 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %2269 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2268, i64 0, i32 0
  store i32 5, i32* %2269, align 8
  %2270 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %2271 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2270, i64 0, i32 3, i32 1
  %2272 = load i16*, i16** %2271, align 8
  %2273 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2270, i64 0, i32 3, i32 2
  %2274 = load i16*, i16** %2273, align 8
  %2275 = icmp eq i16* %2272, %2274
  br i1 %2275, label %2276, label %2279, !prof !4

2276:                                             ; preds = %2267
  %2277 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2270, i64 0, i32 3
  %2278 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %2277) #11
  store i16* %2278, i16** %2271, align 8
  br label %2279

2279:                                             ; preds = %2267, %2276
  %2280 = phi i16* [ %2278, %2276 ], [ %2272, %2267 ]
  %2281 = getelementptr inbounds i16, i16* %2280, i64 1
  store i16* %2281, i16** %2271, align 8
  store i16 60, i16* %2280, align 2
  %2282 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2270, i64 0, i32 4
  %2283 = load i16, i16* %2282, align 8
  %2284 = or i16 %2283, 60
  store i16 %2284, i16* %2282, align 8
  store i32 2, i32* %74, align 8
  br label %722

2285:                                             ; preds = %2255, %73, %2260
  %2286 = load i16, i16* %14, align 2
  %2287 = or i16 %2286, 32
  %2288 = add i16 %2287, -97
  %2289 = icmp ult i16 %2288, 26
  br i1 %2289, label %2290, label %2348

2290:                                             ; preds = %2285
  %2291 = trunc i16 %2286 to i8
  %2292 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %2293 = load i8*, i8** %2292, align 8
  %2294 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 2
  %2295 = load i8*, i8** %2294, align 8
  %2296 = icmp eq i8* %2293, %2295
  br i1 %2296, label %2297, label %2300, !prof !4

2297:                                             ; preds = %2290
  %2298 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %2299 = call i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7* %2298) #11
  store i8* %2299, i8** %2292, align 8
  br label %2300

2300:                                             ; preds = %2290, %2297
  %2301 = phi i8* [ %2299, %2297 ], [ %2293, %2290 ]
  %2302 = getelementptr inbounds i8, i8* %2301, i64 1
  store i8* %2302, i8** %2292, align 8
  store i8 %2291, i8* %2301, align 1
  %2303 = load i16, i16* %14, align 2
  %2304 = trunc i16 %2303 to i8
  %2305 = or i8 %2304, 32
  %2306 = load i8*, i8** %19, align 8
  %2307 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 10, i32 2
  %2308 = load i8*, i8** %2307, align 8
  %2309 = icmp eq i8* %2306, %2308
  br i1 %2309, label %2310, label %2312, !prof !4

2310:                                             ; preds = %2300
  %2311 = call i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7* %18) #11
  store i8* %2311, i8** %19, align 8
  br label %2312

2312:                                             ; preds = %2300, %2310
  %2313 = phi i8* [ %2311, %2310 ], [ %2306, %2300 ]
  %2314 = getelementptr inbounds i8, i8* %2313, i64 1
  store i8* %2314, i8** %19, align 8
  store i8 %2305, i8* %2313, align 1
  store i32 12, i32* %74, align 8
  %2315 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %2316 = load i8*, i8** %2315, align 8
  %2317 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %2318 = load i8*, i8** %2317, align 8
  %2319 = icmp ult i8* %2316, %2318
  br i1 %2319, label %2320, label %2331, !prof !3

2320:                                             ; preds = %2312
  %2321 = load i8, i8* %49, align 1, !range !2
  %2322 = icmp eq i8 %2321, 0
  br i1 %2322, label %2327, label %2323

2323:                                             ; preds = %2320
  %2324 = getelementptr inbounds i8, i8* %2316, i64 1
  store i8* %2324, i8** %2315, align 8
  %2325 = load i8, i8* %2324, align 1
  %2326 = zext i8 %2325 to i16
  br label %2333

2327:                                             ; preds = %2320
  %2328 = getelementptr inbounds i8, i8* %2316, i64 2
  %2329 = bitcast i8* %2328 to i16*
  store i8* %2328, i8** %2315, align 8
  %2330 = load i16, i16* %2329, align 2
  br label %2333

2331:                                             ; preds = %2312
  %2332 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %2333

2333:                                             ; preds = %2331, %2327, %2323
  %2334 = phi i16 [ %2332, %2331 ], [ %2326, %2323 ], [ %2330, %2327 ]
  store i16 %2334, i16* %14, align 2
  %2335 = icmp ugt i16 %2334, 15
  br i1 %2335, label %2336, label %2338

2336:                                             ; preds = %2333
  %2337 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %2337, align 8
  br label %2385

2338:                                             ; preds = %2333
  %2339 = load i8, i8* %44, align 1, !range !2
  %2340 = icmp eq i8 %2339, 0
  br i1 %2340, label %2341, label %2343

2341:                                             ; preds = %2338
  %2342 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %2342, label %2383, label %2343

2343:                                             ; preds = %2338, %2341
  %2344 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %2345 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2344, i64 0, i32 0
  %2346 = load i32, i32* %2345, align 8
  %2347 = icmp eq i32 %2346, 5
  br label %14210

2348:                                             ; preds = %2285
  %2349 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %2350 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2349, i64 0, i32 0
  store i32 5, i32* %2350, align 8
  %2351 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %2352 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2351, i64 0, i32 3, i32 1
  %2353 = load i16*, i16** %2352, align 8
  %2354 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2351, i64 0, i32 3, i32 2
  %2355 = load i16*, i16** %2354, align 8
  %2356 = icmp eq i16* %2353, %2355
  br i1 %2356, label %2357, label %2360, !prof !4

2357:                                             ; preds = %2348
  %2358 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2351, i64 0, i32 3
  %2359 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %2358) #11
  store i16* %2359, i16** %2352, align 8
  br label %2360

2360:                                             ; preds = %2348, %2357
  %2361 = phi i16* [ %2359, %2357 ], [ %2353, %2348 ]
  %2362 = getelementptr inbounds i16, i16* %2361, i64 1
  store i16* %2362, i16** %2352, align 8
  store i16 60, i16* %2361, align 2
  %2363 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2351, i64 0, i32 4
  %2364 = load i16, i16* %2363, align 8
  %2365 = or i16 %2364, 60
  store i16 %2365, i16* %2363, align 8
  %2366 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %2367 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2366, i64 0, i32 0
  store i32 5, i32* %2367, align 8
  %2368 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %2369 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2368, i64 0, i32 3, i32 1
  %2370 = load i16*, i16** %2369, align 8
  %2371 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2368, i64 0, i32 3, i32 2
  %2372 = load i16*, i16** %2371, align 8
  %2373 = icmp eq i16* %2370, %2372
  br i1 %2373, label %2374, label %2377, !prof !4

2374:                                             ; preds = %2360
  %2375 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2368, i64 0, i32 3
  %2376 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %2375) #11
  store i16* %2376, i16** %2369, align 8
  br label %2377

2377:                                             ; preds = %2360, %2374
  %2378 = phi i16* [ %2376, %2374 ], [ %2370, %2360 ]
  %2379 = getelementptr inbounds i16, i16* %2378, i64 1
  store i16* %2379, i16** %2369, align 8
  store i16 47, i16* %2378, align 2
  %2380 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2368, i64 0, i32 4
  %2381 = load i16, i16* %2380, align 8
  %2382 = or i16 %2381, 47
  store i16 %2382, i16* %2380, align 8
  store i32 2, i32* %74, align 8
  br label %722

2383:                                             ; preds = %2341, %73, %2446
  %2384 = load i16, i16* %14, align 2
  br label %2385

2385:                                             ; preds = %2383, %2336
  %2386 = phi i16 [ %2334, %2336 ], [ %2384, %2383 ]
  %2387 = or i16 %2386, 32
  %2388 = add i16 %2387, -97
  %2389 = icmp ult i16 %2388, 26
  br i1 %2389, label %2390, label %2453

2390:                                             ; preds = %2385
  %2391 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %2392 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 2
  %2393 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %2394 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 10, i32 2
  %2395 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %2396 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %2397 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  br label %2398

2398:                                             ; preds = %2390, %2439
  %2399 = phi i16 [ %2386, %2390 ], [ %2437, %2439 ]
  %2400 = trunc i16 %2399 to i8
  %2401 = load i8*, i8** %2391, align 8
  %2402 = load i8*, i8** %2392, align 8
  %2403 = icmp eq i8* %2401, %2402
  br i1 %2403, label %2404, label %2406, !prof !4

2404:                                             ; preds = %2398
  %2405 = call i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7* %2393) #11
  store i8* %2405, i8** %2391, align 8
  br label %2406

2406:                                             ; preds = %2398, %2404
  %2407 = phi i8* [ %2405, %2404 ], [ %2401, %2398 ]
  %2408 = getelementptr inbounds i8, i8* %2407, i64 1
  store i8* %2408, i8** %2391, align 8
  store i8 %2400, i8* %2407, align 1
  %2409 = load i16, i16* %14, align 2
  %2410 = trunc i16 %2409 to i8
  %2411 = or i8 %2410, 32
  %2412 = load i8*, i8** %19, align 8
  %2413 = load i8*, i8** %2394, align 8
  %2414 = icmp eq i8* %2412, %2413
  br i1 %2414, label %2415, label %2417, !prof !4

2415:                                             ; preds = %2406
  %2416 = call i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7* %18) #11
  store i8* %2416, i8** %19, align 8
  br label %2417

2417:                                             ; preds = %2406, %2415
  %2418 = phi i8* [ %2416, %2415 ], [ %2412, %2406 ]
  %2419 = getelementptr inbounds i8, i8* %2418, i64 1
  store i8* %2419, i8** %19, align 8
  store i8 %2411, i8* %2418, align 1
  %2420 = load i8*, i8** %2395, align 8
  %2421 = load i8*, i8** %2396, align 8
  %2422 = icmp ult i8* %2420, %2421
  br i1 %2422, label %2423, label %2434, !prof !3

2423:                                             ; preds = %2417
  %2424 = load i8, i8* %49, align 1, !range !2
  %2425 = icmp eq i8 %2424, 0
  br i1 %2425, label %2430, label %2426

2426:                                             ; preds = %2423
  %2427 = getelementptr inbounds i8, i8* %2420, i64 1
  store i8* %2427, i8** %2395, align 8
  %2428 = load i8, i8* %2427, align 1
  %2429 = zext i8 %2428 to i16
  br label %2436

2430:                                             ; preds = %2423
  %2431 = getelementptr inbounds i8, i8* %2420, i64 2
  %2432 = bitcast i8* %2431 to i16*
  store i8* %2431, i8** %2395, align 8
  %2433 = load i16, i16* %2432, align 2
  br label %2436

2434:                                             ; preds = %2417
  %2435 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %2436

2436:                                             ; preds = %2434, %2430, %2426
  %2437 = phi i16 [ %2435, %2434 ], [ %2429, %2426 ], [ %2433, %2430 ]
  store i16 %2437, i16* %14, align 2
  %2438 = icmp ugt i16 %2437, 15
  br i1 %2438, label %2439, label %2443

2439:                                             ; preds = %2436
  store i8 0, i8* %2397, align 8
  %2440 = or i16 %2437, 32
  %2441 = add i16 %2440, -97
  %2442 = icmp ult i16 %2441, 26
  br i1 %2442, label %2398, label %2453

2443:                                             ; preds = %2436
  %2444 = load i8, i8* %44, align 1, !range !2
  %2445 = icmp eq i8 %2444, 0
  br i1 %2445, label %2446, label %2448

2446:                                             ; preds = %2443
  %2447 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %2447, label %2383, label %2448

2448:                                             ; preds = %2443, %2446
  %2449 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %2450 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2449, i64 0, i32 0
  %2451 = load i32, i32* %2450, align 8
  %2452 = icmp eq i32 %2451, 5
  br label %14210

2453:                                             ; preds = %2439, %2385
  %2454 = phi i16 [ %2386, %2385 ], [ %2437, %2439 ]
  switch i16 %2454, label %2754 [
    i16 32, label %2455
    i16 10, label %2455
    i16 9, label %2455
    i16 12, label %2455
    i16 47, label %2563
    i16 62, label %2671
  ]

2455:                                             ; preds = %2453, %2453, %2453, %2453
  %2456 = call zeroext i1 @_ZN5blink13HTMLTokenizer19IsAppropriateEndTagEv(%"class.blink::HTMLTokenizer"* %0)
  br i1 %2456, label %2457, label %2754

2457:                                             ; preds = %2455
  %2458 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %2459 = load i16, i16* %14, align 2
  %2460 = trunc i16 %2459 to i8
  %2461 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %2462 = load i8*, i8** %2461, align 8
  %2463 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 2
  %2464 = load i8*, i8** %2463, align 8
  %2465 = icmp eq i8* %2462, %2464
  br i1 %2465, label %2466, label %2468, !prof !4

2466:                                             ; preds = %2457
  %2467 = call i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7* %2458) #11
  store i8* %2467, i8** %2461, align 8
  br label %2468

2468:                                             ; preds = %2457, %2466
  %2469 = phi i8* [ %2467, %2466 ], [ %2462, %2457 ]
  %2470 = getelementptr inbounds i8, i8* %2469, i64 1
  store i8* %2470, i8** %2461, align 8
  store i8 %2460, i8* %2469, align 1
  store i32 33, i32* %74, align 8
  %2471 = load i8, i8* %49, align 1, !range !2
  %2472 = icmp eq i8 %2471, 0
  br i1 %2472, label %2479, label %2473

2473:                                             ; preds = %2468
  %2474 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %2475 = load i8*, i8** %2474, align 8
  %2476 = load i8, i8* %2475, align 1
  %2477 = zext i8 %2476 to i16
  %2478 = ptrtoint i8* %2475 to i64
  br label %2485

2479:                                             ; preds = %2468
  %2480 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %2481 = load i16*, i16** %2480, align 8
  %2482 = load i16, i16* %2481, align 2
  %2483 = ptrtoint i16* %2481 to i64
  %2484 = bitcast i16* %2481 to i8*
  br label %2485

2485:                                             ; preds = %2479, %2473
  %2486 = phi i8* [ %2475, %2473 ], [ %2484, %2479 ]
  %2487 = phi i64 [ %2478, %2473 ], [ %2483, %2479 ]
  %2488 = phi i16 [ %2477, %2473 ], [ %2482, %2479 ]
  %2489 = icmp eq i16 %2488, 10
  br i1 %2489, label %2490, label %2511

2490:                                             ; preds = %2485
  %2491 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %2492 = load i8, i8* %2491, align 8, !range !2
  %2493 = icmp eq i8 %2492, 0
  br i1 %2493, label %2511, label %2494, !prof !4

2494:                                             ; preds = %2490
  %2495 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %2496 = load i32, i32* %2495, align 8
  %2497 = add nsw i32 %2496, 1
  store i32 %2497, i32* %2495, align 8
  %2498 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %2499 = load i32, i32* %2498, align 8
  %2500 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %2501 = bitcast i8** %2500 to i64*
  %2502 = load i64, i64* %2501, align 8
  %2503 = sub i64 %2487, %2502
  %2504 = trunc i64 %2503 to i32
  %2505 = xor i8 %2471, 1
  %2506 = zext i8 %2505 to i32
  %2507 = ashr i32 %2504, %2506
  %2508 = add i32 %2499, 1
  %2509 = add i32 %2508, %2507
  %2510 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %2509, i32* %2510, align 4
  br label %2511

2511:                                             ; preds = %2494, %2490, %2485
  %2512 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %2513 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %2514 = load i8*, i8** %2513, align 8
  %2515 = icmp ult i8* %2486, %2514
  br i1 %2515, label %2516, label %2521, !prof !3

2516:                                             ; preds = %2511
  br i1 %2472, label %2519, label %2517

2517:                                             ; preds = %2516
  %2518 = getelementptr inbounds i8, i8* %2486, i64 1
  store i8* %2518, i8** %2512, align 8
  br label %2523

2519:                                             ; preds = %2516
  %2520 = getelementptr inbounds i8, i8* %2486, i64 2
  store i8* %2520, i8** %2512, align 8
  br label %2523

2521:                                             ; preds = %2511
  %2522 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %2523

2523:                                             ; preds = %2521, %2519, %2517
  %2524 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %2525 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2524, i64 0, i32 0
  %2526 = load i32, i32* %2525, align 8
  %2527 = icmp eq i32 %2526, 5
  br i1 %2527, label %14210, label %2528

2528:                                             ; preds = %2523
  call void @_ZN5blink9HTMLToken11BeginEndTagERK13LiteralBufferIhLj32EE(%"class.blink::HTMLToken"* %2524, %class.LiteralBuffer.7* dereferenceable(56) %18) #11
  %2529 = load i64, i64* %22, align 8
  store i64 %2529, i64* %20, align 8
  %2530 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %2531 = bitcast %class.LiteralBuffer.0* %2530 to i64*
  %2532 = load i64, i64* %2531, align 8
  %2533 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  %2534 = bitcast i16** %2533 to i64*
  store i64 %2532, i64* %2534, align 8
  %2535 = bitcast %class.LiteralBuffer.7* %2458 to i64*
  %2536 = load i64, i64* %2535, align 8
  %2537 = bitcast i8** %2461 to i64*
  store i64 %2536, i64* %2537, align 8
  %2538 = load i8, i8* %44, align 1, !range !2
  %2539 = icmp eq i8 %2538, 0
  br i1 %2539, label %2540, label %2558

2540:                                             ; preds = %2528
  %2541 = load i8, i8* %49, align 1, !range !2
  %2542 = icmp eq i8 %2541, 0
  br i1 %2542, label %2547, label %2543

2543:                                             ; preds = %2540
  %2544 = load i8*, i8** %2512, align 8
  %2545 = load i8, i8* %2544, align 1
  %2546 = zext i8 %2545 to i16
  br label %2551

2547:                                             ; preds = %2540
  %2548 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %2549 = load i16*, i16** %2548, align 8
  %2550 = load i16, i16* %2549, align 2
  br label %2551

2551:                                             ; preds = %2547, %2543
  %2552 = phi i16 [ %2546, %2543 ], [ %2550, %2547 ]
  store i16 %2552, i16* %14, align 2
  %2553 = icmp ugt i16 %2552, 15
  br i1 %2553, label %2554, label %2556

2554:                                             ; preds = %2551
  %2555 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %2555, align 8
  br label %7037

2556:                                             ; preds = %2551
  %2557 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %2557, label %7035, label %2558

2558:                                             ; preds = %2528, %2556
  %2559 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %2560 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2559, i64 0, i32 0
  %2561 = load i32, i32* %2560, align 8
  %2562 = icmp eq i32 %2561, 5
  br label %14210

2563:                                             ; preds = %2453
  %2564 = call zeroext i1 @_ZN5blink13HTMLTokenizer19IsAppropriateEndTagEv(%"class.blink::HTMLTokenizer"* %0)
  br i1 %2564, label %2565, label %2754

2565:                                             ; preds = %2563
  %2566 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %2567 = load i16, i16* %14, align 2
  %2568 = trunc i16 %2567 to i8
  %2569 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %2570 = load i8*, i8** %2569, align 8
  %2571 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 2
  %2572 = load i8*, i8** %2571, align 8
  %2573 = icmp eq i8* %2570, %2572
  br i1 %2573, label %2574, label %2576, !prof !4

2574:                                             ; preds = %2565
  %2575 = call i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7* %2566) #11
  store i8* %2575, i8** %2569, align 8
  br label %2576

2576:                                             ; preds = %2565, %2574
  %2577 = phi i8* [ %2575, %2574 ], [ %2570, %2565 ]
  %2578 = getelementptr inbounds i8, i8* %2577, i64 1
  store i8* %2578, i8** %2569, align 8
  store i8 %2568, i8* %2577, align 1
  store i32 42, i32* %74, align 8
  %2579 = load i8, i8* %49, align 1, !range !2
  %2580 = icmp eq i8 %2579, 0
  br i1 %2580, label %2587, label %2581

2581:                                             ; preds = %2576
  %2582 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %2583 = load i8*, i8** %2582, align 8
  %2584 = load i8, i8* %2583, align 1
  %2585 = zext i8 %2584 to i16
  %2586 = ptrtoint i8* %2583 to i64
  br label %2593

2587:                                             ; preds = %2576
  %2588 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %2589 = load i16*, i16** %2588, align 8
  %2590 = load i16, i16* %2589, align 2
  %2591 = ptrtoint i16* %2589 to i64
  %2592 = bitcast i16* %2589 to i8*
  br label %2593

2593:                                             ; preds = %2587, %2581
  %2594 = phi i8* [ %2583, %2581 ], [ %2592, %2587 ]
  %2595 = phi i64 [ %2586, %2581 ], [ %2591, %2587 ]
  %2596 = phi i16 [ %2585, %2581 ], [ %2590, %2587 ]
  %2597 = icmp eq i16 %2596, 10
  br i1 %2597, label %2598, label %2619

2598:                                             ; preds = %2593
  %2599 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %2600 = load i8, i8* %2599, align 8, !range !2
  %2601 = icmp eq i8 %2600, 0
  br i1 %2601, label %2619, label %2602, !prof !4

2602:                                             ; preds = %2598
  %2603 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %2604 = load i32, i32* %2603, align 8
  %2605 = add nsw i32 %2604, 1
  store i32 %2605, i32* %2603, align 8
  %2606 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %2607 = load i32, i32* %2606, align 8
  %2608 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %2609 = bitcast i8** %2608 to i64*
  %2610 = load i64, i64* %2609, align 8
  %2611 = sub i64 %2595, %2610
  %2612 = trunc i64 %2611 to i32
  %2613 = xor i8 %2579, 1
  %2614 = zext i8 %2613 to i32
  %2615 = ashr i32 %2612, %2614
  %2616 = add i32 %2607, 1
  %2617 = add i32 %2616, %2615
  %2618 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %2617, i32* %2618, align 4
  br label %2619

2619:                                             ; preds = %2602, %2598, %2593
  %2620 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %2621 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %2622 = load i8*, i8** %2621, align 8
  %2623 = icmp ult i8* %2594, %2622
  br i1 %2623, label %2624, label %2629, !prof !3

2624:                                             ; preds = %2619
  br i1 %2580, label %2627, label %2625

2625:                                             ; preds = %2624
  %2626 = getelementptr inbounds i8, i8* %2594, i64 1
  store i8* %2626, i8** %2620, align 8
  br label %2631

2627:                                             ; preds = %2624
  %2628 = getelementptr inbounds i8, i8* %2594, i64 2
  store i8* %2628, i8** %2620, align 8
  br label %2631

2629:                                             ; preds = %2619
  %2630 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %2631

2631:                                             ; preds = %2629, %2627, %2625
  %2632 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %2633 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2632, i64 0, i32 0
  %2634 = load i32, i32* %2633, align 8
  %2635 = icmp eq i32 %2634, 5
  br i1 %2635, label %14210, label %2636

2636:                                             ; preds = %2631
  call void @_ZN5blink9HTMLToken11BeginEndTagERK13LiteralBufferIhLj32EE(%"class.blink::HTMLToken"* %2632, %class.LiteralBuffer.7* dereferenceable(56) %18) #11
  %2637 = load i64, i64* %22, align 8
  store i64 %2637, i64* %20, align 8
  %2638 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %2639 = bitcast %class.LiteralBuffer.0* %2638 to i64*
  %2640 = load i64, i64* %2639, align 8
  %2641 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  %2642 = bitcast i16** %2641 to i64*
  store i64 %2640, i64* %2642, align 8
  %2643 = bitcast %class.LiteralBuffer.7* %2566 to i64*
  %2644 = load i64, i64* %2643, align 8
  %2645 = bitcast i8** %2569 to i64*
  store i64 %2644, i64* %2645, align 8
  %2646 = load i8, i8* %44, align 1, !range !2
  %2647 = icmp eq i8 %2646, 0
  br i1 %2647, label %2648, label %2666

2648:                                             ; preds = %2636
  %2649 = load i8, i8* %49, align 1, !range !2
  %2650 = icmp eq i8 %2649, 0
  br i1 %2650, label %2655, label %2651

2651:                                             ; preds = %2648
  %2652 = load i8*, i8** %2620, align 8
  %2653 = load i8, i8* %2652, align 1
  %2654 = zext i8 %2653 to i16
  br label %2659

2655:                                             ; preds = %2648
  %2656 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %2657 = load i16*, i16** %2656, align 8
  %2658 = load i16, i16* %2657, align 2
  br label %2659

2659:                                             ; preds = %2655, %2651
  %2660 = phi i16 [ %2654, %2651 ], [ %2658, %2655 ]
  store i16 %2660, i16* %14, align 2
  %2661 = icmp ugt i16 %2660, 15
  br i1 %2661, label %2662, label %2664

2662:                                             ; preds = %2659
  %2663 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %2663, align 8
  br label %8954

2664:                                             ; preds = %2659
  %2665 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %2665, label %8952, label %2666

2666:                                             ; preds = %2636, %2664
  %2667 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %2668 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2667, i64 0, i32 0
  %2669 = load i32, i32* %2668, align 8
  %2670 = icmp eq i32 %2669, 5
  br label %14210

2671:                                             ; preds = %2453
  %2672 = call zeroext i1 @_ZN5blink13HTMLTokenizer19IsAppropriateEndTagEv(%"class.blink::HTMLTokenizer"* %0)
  br i1 %2672, label %2673, label %2754

2673:                                             ; preds = %2671
  %2674 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %2675 = load i16, i16* %14, align 2
  %2676 = trunc i16 %2675 to i8
  %2677 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %2678 = load i8*, i8** %2677, align 8
  %2679 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 2
  %2680 = load i8*, i8** %2679, align 8
  %2681 = icmp eq i8* %2678, %2680
  br i1 %2681, label %2682, label %2684, !prof !4

2682:                                             ; preds = %2673
  %2683 = call i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7* %2674) #11
  store i8* %2683, i8** %2677, align 8
  br label %2684

2684:                                             ; preds = %2673, %2682
  %2685 = phi i8* [ %2683, %2682 ], [ %2678, %2673 ]
  %2686 = getelementptr inbounds i8, i8* %2685, i64 1
  store i8* %2686, i8** %2677, align 8
  store i8 %2676, i8* %2685, align 1
  store i32 0, i32* %74, align 8
  %2687 = load i8, i8* %49, align 1, !range !2
  %2688 = icmp eq i8 %2687, 0
  br i1 %2688, label %2695, label %2689

2689:                                             ; preds = %2684
  %2690 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %2691 = load i8*, i8** %2690, align 8
  %2692 = load i8, i8* %2691, align 1
  %2693 = zext i8 %2692 to i16
  %2694 = ptrtoint i8* %2691 to i64
  br label %2701

2695:                                             ; preds = %2684
  %2696 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %2697 = load i16*, i16** %2696, align 8
  %2698 = load i16, i16* %2697, align 2
  %2699 = ptrtoint i16* %2697 to i64
  %2700 = bitcast i16* %2697 to i8*
  br label %2701

2701:                                             ; preds = %2695, %2689
  %2702 = phi i8* [ %2691, %2689 ], [ %2700, %2695 ]
  %2703 = phi i64 [ %2694, %2689 ], [ %2699, %2695 ]
  %2704 = phi i16 [ %2693, %2689 ], [ %2698, %2695 ]
  %2705 = icmp eq i16 %2704, 10
  br i1 %2705, label %2706, label %2727

2706:                                             ; preds = %2701
  %2707 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %2708 = load i8, i8* %2707, align 8, !range !2
  %2709 = icmp eq i8 %2708, 0
  br i1 %2709, label %2727, label %2710, !prof !4

2710:                                             ; preds = %2706
  %2711 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %2712 = load i32, i32* %2711, align 8
  %2713 = add nsw i32 %2712, 1
  store i32 %2713, i32* %2711, align 8
  %2714 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %2715 = load i32, i32* %2714, align 8
  %2716 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %2717 = bitcast i8** %2716 to i64*
  %2718 = load i64, i64* %2717, align 8
  %2719 = sub i64 %2703, %2718
  %2720 = trunc i64 %2719 to i32
  %2721 = xor i8 %2687, 1
  %2722 = zext i8 %2721 to i32
  %2723 = ashr i32 %2720, %2722
  %2724 = add i32 %2715, 1
  %2725 = add i32 %2724, %2723
  %2726 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %2725, i32* %2726, align 4
  br label %2727

2727:                                             ; preds = %2710, %2706, %2701
  %2728 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %2729 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %2730 = load i8*, i8** %2729, align 8
  %2731 = icmp ult i8* %2702, %2730
  br i1 %2731, label %2732, label %2737, !prof !3

2732:                                             ; preds = %2727
  br i1 %2688, label %2735, label %2733

2733:                                             ; preds = %2732
  %2734 = getelementptr inbounds i8, i8* %2702, i64 1
  store i8* %2734, i8** %2728, align 8
  br label %2739

2735:                                             ; preds = %2732
  %2736 = getelementptr inbounds i8, i8* %2702, i64 2
  store i8* %2736, i8** %2728, align 8
  br label %2739

2737:                                             ; preds = %2727
  %2738 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %2739

2739:                                             ; preds = %2737, %2735, %2733
  %2740 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %2741 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2740, i64 0, i32 0
  %2742 = load i32, i32* %2741, align 8
  %2743 = icmp eq i32 %2742, 5
  br i1 %2743, label %14210, label %2744

2744:                                             ; preds = %2739
  call void @_ZN5blink9HTMLToken11BeginEndTagERK13LiteralBufferIhLj32EE(%"class.blink::HTMLToken"* %2740, %class.LiteralBuffer.7* dereferenceable(56) %18) #11
  %2745 = load i64, i64* %22, align 8
  store i64 %2745, i64* %20, align 8
  %2746 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %2747 = bitcast %class.LiteralBuffer.0* %2746 to i64*
  %2748 = load i64, i64* %2747, align 8
  %2749 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  %2750 = bitcast i16** %2749 to i64*
  store i64 %2748, i64* %2750, align 8
  %2751 = bitcast %class.LiteralBuffer.7* %2674 to i64*
  %2752 = load i64, i64* %2751, align 8
  %2753 = bitcast i8** %2677 to i64*
  store i64 %2752, i64* %2753, align 8
  br label %14210

2754:                                             ; preds = %2453, %2563, %2671, %2455
  %2755 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %2756 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2755, i64 0, i32 0
  store i32 5, i32* %2756, align 8
  %2757 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %2758 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2757, i64 0, i32 3, i32 1
  %2759 = load i16*, i16** %2758, align 8
  %2760 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2757, i64 0, i32 3, i32 2
  %2761 = load i16*, i16** %2760, align 8
  %2762 = icmp eq i16* %2759, %2761
  br i1 %2762, label %2763, label %2766, !prof !4

2763:                                             ; preds = %2754
  %2764 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2757, i64 0, i32 3
  %2765 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %2764) #11
  store i16* %2765, i16** %2758, align 8
  br label %2766

2766:                                             ; preds = %2754, %2763
  %2767 = phi i16* [ %2765, %2763 ], [ %2759, %2754 ]
  %2768 = getelementptr inbounds i16, i16* %2767, i64 1
  store i16* %2768, i16** %2758, align 8
  store i16 60, i16* %2767, align 2
  %2769 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2757, i64 0, i32 4
  %2770 = load i16, i16* %2769, align 8
  %2771 = or i16 %2770, 60
  store i16 %2771, i16* %2769, align 8
  %2772 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %2773 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2772, i64 0, i32 0
  store i32 5, i32* %2773, align 8
  %2774 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %2775 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2774, i64 0, i32 3, i32 1
  %2776 = load i16*, i16** %2775, align 8
  %2777 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2774, i64 0, i32 3, i32 2
  %2778 = load i16*, i16** %2777, align 8
  %2779 = icmp eq i16* %2776, %2778
  br i1 %2779, label %2780, label %2783, !prof !4

2780:                                             ; preds = %2766
  %2781 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2774, i64 0, i32 3
  %2782 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %2781) #11
  store i16* %2782, i16** %2775, align 8
  br label %2783

2783:                                             ; preds = %2766, %2780
  %2784 = phi i16* [ %2782, %2780 ], [ %2776, %2766 ]
  %2785 = getelementptr inbounds i16, i16* %2784, i64 1
  store i16* %2785, i16** %2775, align 8
  store i16 47, i16* %2784, align 2
  %2786 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2774, i64 0, i32 4
  %2787 = load i16, i16* %2786, align 8
  %2788 = or i16 %2787, 47
  store i16 %2788, i16* %2786, align 8
  %2789 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %2790 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %2791 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2789, i64 0, i32 3
  %2792 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %2793 = bitcast i8** %2792 to i64*
  %2794 = load i64, i64* %2793, align 8
  %2795 = bitcast %class.LiteralBuffer.7* %2790 to i64*
  %2796 = load i64, i64* %2795, align 8
  %2797 = sub i64 %2794, %2796
  %2798 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2789, i64 0, i32 3, i32 1
  %2799 = bitcast i16** %2798 to i64*
  %2800 = load i64, i64* %2799, align 8
  %2801 = bitcast %class.LiteralBuffer* %2791 to i64*
  %2802 = load i64, i64* %2801, align 8
  %2803 = sub i64 %2800, %2802
  %2804 = ashr exact i64 %2803, 1
  %2805 = add i64 %2804, %2797
  %2806 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2789, i64 0, i32 3, i32 2
  %2807 = bitcast i16** %2806 to i64*
  %2808 = load i64, i64* %2807, align 8
  %2809 = sub i64 %2808, %2802
  %2810 = ashr exact i64 %2809, 1
  %2811 = icmp ult i64 %2810, %2805
  %2812 = inttoptr i64 %2796 to i8*
  %2813 = inttoptr i64 %2800 to i16*
  br i1 %2811, label %2814, label %2819

2814:                                             ; preds = %2783
  %2815 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEm(%class.LiteralBuffer* %2791, i64 %2805) #11
  %2816 = getelementptr inbounds %class.LiteralBuffer.7, %class.LiteralBuffer.7* %2790, i64 0, i32 0
  %2817 = load i8*, i8** %2816, align 8
  %2818 = load i16*, i16** %2798, align 8
  br label %2819

2819:                                             ; preds = %2814, %2783
  %2820 = phi i16* [ %2818, %2814 ], [ %2813, %2783 ]
  %2821 = phi i8* [ %2817, %2814 ], [ %2812, %2783 ]
  %2822 = bitcast i16* %2820 to i8*
  %2823 = getelementptr inbounds i8, i8* %2821, i64 %2797
  %2824 = icmp eq i64 %2797, 0
  br i1 %2824, label %2906, label %2825

2825:                                             ; preds = %2819
  %2826 = icmp ult i64 %2797, 16
  br i1 %2826, label %2893, label %2827

2827:                                             ; preds = %2825
  %2828 = getelementptr i16, i16* %2820, i64 %2797
  %2829 = bitcast i16* %2828 to i8*
  %2830 = icmp ugt i8* %2823, %2822
  %2831 = icmp ult i8* %2821, %2829
  %2832 = and i1 %2830, %2831
  br i1 %2832, label %2893, label %2833

2833:                                             ; preds = %2827
  %2834 = and i64 %2797, -16
  %2835 = getelementptr i16, i16* %2820, i64 %2834
  %2836 = getelementptr i8, i8* %2821, i64 %2834
  %2837 = add i64 %2834, -16
  %2838 = lshr exact i64 %2837, 4
  %2839 = add nuw nsw i64 %2838, 1
  %2840 = and i64 %2839, 1
  %2841 = icmp eq i64 %2837, 0
  br i1 %2841, label %2875, label %2842

2842:                                             ; preds = %2833
  %2843 = sub nuw nsw i64 %2839, %2840
  br label %2844

2844:                                             ; preds = %2844, %2842
  %2845 = phi i64 [ 0, %2842 ], [ %2872, %2844 ]
  %2846 = phi i64 [ %2843, %2842 ], [ %2873, %2844 ]
  %2847 = getelementptr i16, i16* %2820, i64 %2845
  %2848 = getelementptr i8, i8* %2821, i64 %2845
  %2849 = bitcast i8* %2848 to <8 x i8>*
  %2850 = load <8 x i8>, <8 x i8>* %2849, align 1, !alias.scope !5
  %2851 = getelementptr i8, i8* %2848, i64 8
  %2852 = bitcast i8* %2851 to <8 x i8>*
  %2853 = load <8 x i8>, <8 x i8>* %2852, align 1, !alias.scope !5
  %2854 = zext <8 x i8> %2850 to <8 x i16>
  %2855 = zext <8 x i8> %2853 to <8 x i16>
  %2856 = bitcast i16* %2847 to <8 x i16>*
  store <8 x i16> %2854, <8 x i16>* %2856, align 2, !alias.scope !8, !noalias !5
  %2857 = getelementptr i16, i16* %2847, i64 8
  %2858 = bitcast i16* %2857 to <8 x i16>*
  store <8 x i16> %2855, <8 x i16>* %2858, align 2, !alias.scope !8, !noalias !5
  %2859 = or i64 %2845, 16
  %2860 = getelementptr i16, i16* %2820, i64 %2859
  %2861 = getelementptr i8, i8* %2821, i64 %2859
  %2862 = bitcast i8* %2861 to <8 x i8>*
  %2863 = load <8 x i8>, <8 x i8>* %2862, align 1, !alias.scope !5
  %2864 = getelementptr i8, i8* %2861, i64 8
  %2865 = bitcast i8* %2864 to <8 x i8>*
  %2866 = load <8 x i8>, <8 x i8>* %2865, align 1, !alias.scope !5
  %2867 = zext <8 x i8> %2863 to <8 x i16>
  %2868 = zext <8 x i8> %2866 to <8 x i16>
  %2869 = bitcast i16* %2860 to <8 x i16>*
  store <8 x i16> %2867, <8 x i16>* %2869, align 2, !alias.scope !8, !noalias !5
  %2870 = getelementptr i16, i16* %2860, i64 8
  %2871 = bitcast i16* %2870 to <8 x i16>*
  store <8 x i16> %2868, <8 x i16>* %2871, align 2, !alias.scope !8, !noalias !5
  %2872 = add i64 %2845, 32
  %2873 = add i64 %2846, -2
  %2874 = icmp eq i64 %2873, 0
  br i1 %2874, label %2875, label %2844, !llvm.loop !10

2875:                                             ; preds = %2844, %2833
  %2876 = phi i64 [ 0, %2833 ], [ %2872, %2844 ]
  %2877 = icmp eq i64 %2840, 0
  br i1 %2877, label %2891, label %2878

2878:                                             ; preds = %2875
  %2879 = getelementptr i16, i16* %2820, i64 %2876
  %2880 = getelementptr i8, i8* %2821, i64 %2876
  %2881 = bitcast i8* %2880 to <8 x i8>*
  %2882 = load <8 x i8>, <8 x i8>* %2881, align 1, !alias.scope !5
  %2883 = getelementptr i8, i8* %2880, i64 8
  %2884 = bitcast i8* %2883 to <8 x i8>*
  %2885 = load <8 x i8>, <8 x i8>* %2884, align 1, !alias.scope !5
  %2886 = zext <8 x i8> %2882 to <8 x i16>
  %2887 = zext <8 x i8> %2885 to <8 x i16>
  %2888 = bitcast i16* %2879 to <8 x i16>*
  store <8 x i16> %2886, <8 x i16>* %2888, align 2, !alias.scope !8, !noalias !5
  %2889 = getelementptr i16, i16* %2879, i64 8
  %2890 = bitcast i16* %2889 to <8 x i16>*
  store <8 x i16> %2887, <8 x i16>* %2890, align 2, !alias.scope !8, !noalias !5
  br label %2891

2891:                                             ; preds = %2875, %2878
  %2892 = icmp eq i64 %2797, %2834
  br i1 %2892, label %2904, label %2893

2893:                                             ; preds = %2891, %2827, %2825
  %2894 = phi i16* [ %2820, %2827 ], [ %2820, %2825 ], [ %2835, %2891 ]
  %2895 = phi i8* [ %2821, %2827 ], [ %2821, %2825 ], [ %2836, %2891 ]
  br label %2896

2896:                                             ; preds = %2893, %2896
  %2897 = phi i16* [ %2902, %2896 ], [ %2894, %2893 ]
  %2898 = phi i8* [ %2901, %2896 ], [ %2895, %2893 ]
  %2899 = load i8, i8* %2898, align 1
  %2900 = zext i8 %2899 to i16
  store i16 %2900, i16* %2897, align 2
  %2901 = getelementptr inbounds i8, i8* %2898, i64 1
  %2902 = getelementptr inbounds i16, i16* %2897, i64 1
  %2903 = icmp eq i8* %2901, %2823
  br i1 %2903, label %2904, label %2896, !llvm.loop !12

2904:                                             ; preds = %2896, %2891
  %2905 = load i16*, i16** %2798, align 8
  br label %2906

2906:                                             ; preds = %2819, %2904
  %2907 = phi i16* [ %2905, %2904 ], [ %2820, %2819 ]
  %2908 = getelementptr inbounds i16, i16* %2907, i64 %2797
  store i16* %2908, i16** %2798, align 8
  %2909 = load i64, i64* %22, align 8
  store i64 %2909, i64* %20, align 8
  %2910 = load i64, i64* %2795, align 8
  store i64 %2910, i64* %2793, align 8
  store i32 2, i32* %74, align 8
  br label %722

2911:                                             ; preds = %1061, %73
  %2912 = load i16, i16* %14, align 2
  br label %2913

2913:                                             ; preds = %2911, %1057
  %2914 = phi i16 [ %2912, %2911 ], [ %1055, %1057 ]
  %2915 = icmp eq i16 %2914, 47
  br i1 %2915, label %2916, label %2955

2916:                                             ; preds = %2913
  %2917 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %2918 = bitcast %class.LiteralBuffer.7* %2917 to i64*
  %2919 = load i64, i64* %2918, align 8
  %2920 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %2921 = bitcast i8** %2920 to i64*
  store i64 %2919, i64* %2921, align 8
  store i32 14, i32* %74, align 8
  %2922 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %2923 = load i8*, i8** %2922, align 8
  %2924 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %2925 = load i8*, i8** %2924, align 8
  %2926 = icmp ult i8* %2923, %2925
  br i1 %2926, label %2927, label %2938, !prof !3

2927:                                             ; preds = %2916
  %2928 = load i8, i8* %49, align 1, !range !2
  %2929 = icmp eq i8 %2928, 0
  br i1 %2929, label %2934, label %2930

2930:                                             ; preds = %2927
  %2931 = getelementptr inbounds i8, i8* %2923, i64 1
  store i8* %2931, i8** %2922, align 8
  %2932 = load i8, i8* %2931, align 1
  %2933 = zext i8 %2932 to i16
  br label %2940

2934:                                             ; preds = %2927
  %2935 = getelementptr inbounds i8, i8* %2923, i64 2
  %2936 = bitcast i8* %2935 to i16*
  store i8* %2935, i8** %2922, align 8
  %2937 = load i16, i16* %2936, align 2
  br label %2940

2938:                                             ; preds = %2916
  %2939 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %2940

2940:                                             ; preds = %2938, %2934, %2930
  %2941 = phi i16 [ %2939, %2938 ], [ %2933, %2930 ], [ %2937, %2934 ]
  store i16 %2941, i16* %14, align 2
  %2942 = icmp ugt i16 %2941, 15
  br i1 %2942, label %2943, label %2945

2943:                                             ; preds = %2940
  %2944 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %2944, align 8
  br label %2985

2945:                                             ; preds = %2940
  %2946 = load i8, i8* %44, align 1, !range !2
  %2947 = icmp eq i8 %2946, 0
  br i1 %2947, label %2948, label %2950

2948:                                             ; preds = %2945
  %2949 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %2949, label %2985, label %2950

2950:                                             ; preds = %2945, %2948
  %2951 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %2952 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2951, i64 0, i32 0
  %2953 = load i32, i32* %2952, align 8
  %2954 = icmp eq i32 %2953, 5
  br label %14210

2955:                                             ; preds = %2913
  %2956 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %2957 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2956, i64 0, i32 0
  store i32 5, i32* %2957, align 8
  %2958 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %2959 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2958, i64 0, i32 3, i32 1
  %2960 = load i16*, i16** %2959, align 8
  %2961 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2958, i64 0, i32 3, i32 2
  %2962 = load i16*, i16** %2961, align 8
  %2963 = icmp eq i16* %2960, %2962
  br i1 %2963, label %2964, label %2967, !prof !4

2964:                                             ; preds = %2955
  %2965 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2958, i64 0, i32 3
  %2966 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %2965) #11
  store i16* %2966, i16** %2959, align 8
  br label %2967

2967:                                             ; preds = %2955, %2964
  %2968 = phi i16* [ %2966, %2964 ], [ %2960, %2955 ]
  %2969 = getelementptr inbounds i16, i16* %2968, i64 1
  store i16* %2969, i16** %2959, align 8
  store i16 60, i16* %2968, align 2
  %2970 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2958, i64 0, i32 4
  %2971 = load i16, i16* %2970, align 8
  %2972 = or i16 %2971, 60
  store i16 %2972, i16* %2970, align 8
  br label %2973

2973:                                             ; preds = %2967, %3077, %3606
  store i32 4, i32* %74, align 8
  br label %2974

2974:                                             ; preds = %2973, %73
  %2975 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %2976 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %2977 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %2978 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %2979 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %2980 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %2981 = bitcast i8** %2980 to i64*
  %2982 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  %2983 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %2984 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  br label %1033

2985:                                             ; preds = %2943, %73, %2948
  %2986 = load i16, i16* %14, align 2
  %2987 = or i16 %2986, 32
  %2988 = add i16 %2987, -97
  %2989 = icmp ult i16 %2988, 26
  br i1 %2989, label %2990, label %3048

2990:                                             ; preds = %2985
  %2991 = trunc i16 %2986 to i8
  %2992 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %2993 = load i8*, i8** %2992, align 8
  %2994 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 2
  %2995 = load i8*, i8** %2994, align 8
  %2996 = icmp eq i8* %2993, %2995
  br i1 %2996, label %2997, label %3000, !prof !4

2997:                                             ; preds = %2990
  %2998 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %2999 = call i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7* %2998) #11
  store i8* %2999, i8** %2992, align 8
  br label %3000

3000:                                             ; preds = %2990, %2997
  %3001 = phi i8* [ %2999, %2997 ], [ %2993, %2990 ]
  %3002 = getelementptr inbounds i8, i8* %3001, i64 1
  store i8* %3002, i8** %2992, align 8
  store i8 %2991, i8* %3001, align 1
  %3003 = load i16, i16* %14, align 2
  %3004 = trunc i16 %3003 to i8
  %3005 = or i8 %3004, 32
  %3006 = load i8*, i8** %19, align 8
  %3007 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 10, i32 2
  %3008 = load i8*, i8** %3007, align 8
  %3009 = icmp eq i8* %3006, %3008
  br i1 %3009, label %3010, label %3012, !prof !4

3010:                                             ; preds = %3000
  %3011 = call i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7* %18) #11
  store i8* %3011, i8** %19, align 8
  br label %3012

3012:                                             ; preds = %3000, %3010
  %3013 = phi i8* [ %3011, %3010 ], [ %3006, %3000 ]
  %3014 = getelementptr inbounds i8, i8* %3013, i64 1
  store i8* %3014, i8** %19, align 8
  store i8 %3005, i8* %3013, align 1
  store i32 15, i32* %74, align 8
  %3015 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %3016 = load i8*, i8** %3015, align 8
  %3017 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %3018 = load i8*, i8** %3017, align 8
  %3019 = icmp ult i8* %3016, %3018
  br i1 %3019, label %3020, label %3031, !prof !3

3020:                                             ; preds = %3012
  %3021 = load i8, i8* %49, align 1, !range !2
  %3022 = icmp eq i8 %3021, 0
  br i1 %3022, label %3027, label %3023

3023:                                             ; preds = %3020
  %3024 = getelementptr inbounds i8, i8* %3016, i64 1
  store i8* %3024, i8** %3015, align 8
  %3025 = load i8, i8* %3024, align 1
  %3026 = zext i8 %3025 to i16
  br label %3033

3027:                                             ; preds = %3020
  %3028 = getelementptr inbounds i8, i8* %3016, i64 2
  %3029 = bitcast i8* %3028 to i16*
  store i8* %3028, i8** %3015, align 8
  %3030 = load i16, i16* %3029, align 2
  br label %3033

3031:                                             ; preds = %3012
  %3032 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %3033

3033:                                             ; preds = %3031, %3027, %3023
  %3034 = phi i16 [ %3032, %3031 ], [ %3026, %3023 ], [ %3030, %3027 ]
  store i16 %3034, i16* %14, align 2
  %3035 = icmp ugt i16 %3034, 15
  br i1 %3035, label %3036, label %3038

3036:                                             ; preds = %3033
  %3037 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %3037, align 8
  br label %3085

3038:                                             ; preds = %3033
  %3039 = load i8, i8* %44, align 1, !range !2
  %3040 = icmp eq i8 %3039, 0
  br i1 %3040, label %3041, label %3043

3041:                                             ; preds = %3038
  %3042 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %3042, label %3083, label %3043

3043:                                             ; preds = %3038, %3041
  %3044 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %3045 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3044, i64 0, i32 0
  %3046 = load i32, i32* %3045, align 8
  %3047 = icmp eq i32 %3046, 5
  br label %14210

3048:                                             ; preds = %2985
  %3049 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %3050 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3049, i64 0, i32 0
  store i32 5, i32* %3050, align 8
  %3051 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %3052 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3051, i64 0, i32 3, i32 1
  %3053 = load i16*, i16** %3052, align 8
  %3054 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3051, i64 0, i32 3, i32 2
  %3055 = load i16*, i16** %3054, align 8
  %3056 = icmp eq i16* %3053, %3055
  br i1 %3056, label %3057, label %3060, !prof !4

3057:                                             ; preds = %3048
  %3058 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3051, i64 0, i32 3
  %3059 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %3058) #11
  store i16* %3059, i16** %3052, align 8
  br label %3060

3060:                                             ; preds = %3048, %3057
  %3061 = phi i16* [ %3059, %3057 ], [ %3053, %3048 ]
  %3062 = getelementptr inbounds i16, i16* %3061, i64 1
  store i16* %3062, i16** %3052, align 8
  store i16 60, i16* %3061, align 2
  %3063 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3051, i64 0, i32 4
  %3064 = load i16, i16* %3063, align 8
  %3065 = or i16 %3064, 60
  store i16 %3065, i16* %3063, align 8
  %3066 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %3067 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3066, i64 0, i32 0
  store i32 5, i32* %3067, align 8
  %3068 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %3069 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3068, i64 0, i32 3, i32 1
  %3070 = load i16*, i16** %3069, align 8
  %3071 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3068, i64 0, i32 3, i32 2
  %3072 = load i16*, i16** %3071, align 8
  %3073 = icmp eq i16* %3070, %3072
  br i1 %3073, label %3074, label %3077, !prof !4

3074:                                             ; preds = %3060
  %3075 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3068, i64 0, i32 3
  %3076 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %3075) #11
  store i16* %3076, i16** %3069, align 8
  br label %3077

3077:                                             ; preds = %3060, %3074
  %3078 = phi i16* [ %3076, %3074 ], [ %3070, %3060 ]
  %3079 = getelementptr inbounds i16, i16* %3078, i64 1
  store i16* %3079, i16** %3069, align 8
  store i16 47, i16* %3078, align 2
  %3080 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3068, i64 0, i32 4
  %3081 = load i16, i16* %3080, align 8
  %3082 = or i16 %3081, 47
  store i16 %3082, i16* %3080, align 8
  br label %2973

3083:                                             ; preds = %3041, %73, %3146
  %3084 = load i16, i16* %14, align 2
  br label %3085

3085:                                             ; preds = %3083, %3036
  %3086 = phi i16 [ %3034, %3036 ], [ %3084, %3083 ]
  %3087 = or i16 %3086, 32
  %3088 = add i16 %3087, -97
  %3089 = icmp ult i16 %3088, 26
  br i1 %3089, label %3090, label %3153

3090:                                             ; preds = %3085
  %3091 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %3092 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 2
  %3093 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %3094 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 10, i32 2
  %3095 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %3096 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %3097 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  br label %3098

3098:                                             ; preds = %3090, %3139
  %3099 = phi i16 [ %3086, %3090 ], [ %3137, %3139 ]
  %3100 = trunc i16 %3099 to i8
  %3101 = load i8*, i8** %3091, align 8
  %3102 = load i8*, i8** %3092, align 8
  %3103 = icmp eq i8* %3101, %3102
  br i1 %3103, label %3104, label %3106, !prof !4

3104:                                             ; preds = %3098
  %3105 = call i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7* %3093) #11
  store i8* %3105, i8** %3091, align 8
  br label %3106

3106:                                             ; preds = %3098, %3104
  %3107 = phi i8* [ %3105, %3104 ], [ %3101, %3098 ]
  %3108 = getelementptr inbounds i8, i8* %3107, i64 1
  store i8* %3108, i8** %3091, align 8
  store i8 %3100, i8* %3107, align 1
  %3109 = load i16, i16* %14, align 2
  %3110 = trunc i16 %3109 to i8
  %3111 = or i8 %3110, 32
  %3112 = load i8*, i8** %19, align 8
  %3113 = load i8*, i8** %3094, align 8
  %3114 = icmp eq i8* %3112, %3113
  br i1 %3114, label %3115, label %3117, !prof !4

3115:                                             ; preds = %3106
  %3116 = call i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7* %18) #11
  store i8* %3116, i8** %19, align 8
  br label %3117

3117:                                             ; preds = %3106, %3115
  %3118 = phi i8* [ %3116, %3115 ], [ %3112, %3106 ]
  %3119 = getelementptr inbounds i8, i8* %3118, i64 1
  store i8* %3119, i8** %19, align 8
  store i8 %3111, i8* %3118, align 1
  %3120 = load i8*, i8** %3095, align 8
  %3121 = load i8*, i8** %3096, align 8
  %3122 = icmp ult i8* %3120, %3121
  br i1 %3122, label %3123, label %3134, !prof !3

3123:                                             ; preds = %3117
  %3124 = load i8, i8* %49, align 1, !range !2
  %3125 = icmp eq i8 %3124, 0
  br i1 %3125, label %3130, label %3126

3126:                                             ; preds = %3123
  %3127 = getelementptr inbounds i8, i8* %3120, i64 1
  store i8* %3127, i8** %3095, align 8
  %3128 = load i8, i8* %3127, align 1
  %3129 = zext i8 %3128 to i16
  br label %3136

3130:                                             ; preds = %3123
  %3131 = getelementptr inbounds i8, i8* %3120, i64 2
  %3132 = bitcast i8* %3131 to i16*
  store i8* %3131, i8** %3095, align 8
  %3133 = load i16, i16* %3132, align 2
  br label %3136

3134:                                             ; preds = %3117
  %3135 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %3136

3136:                                             ; preds = %3134, %3130, %3126
  %3137 = phi i16 [ %3135, %3134 ], [ %3129, %3126 ], [ %3133, %3130 ]
  store i16 %3137, i16* %14, align 2
  %3138 = icmp ugt i16 %3137, 15
  br i1 %3138, label %3139, label %3143

3139:                                             ; preds = %3136
  store i8 0, i8* %3097, align 8
  %3140 = or i16 %3137, 32
  %3141 = add i16 %3140, -97
  %3142 = icmp ult i16 %3141, 26
  br i1 %3142, label %3098, label %3153

3143:                                             ; preds = %3136
  %3144 = load i8, i8* %44, align 1, !range !2
  %3145 = icmp eq i8 %3144, 0
  br i1 %3145, label %3146, label %3148

3146:                                             ; preds = %3143
  %3147 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %3147, label %3083, label %3148

3148:                                             ; preds = %3143, %3146
  %3149 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %3150 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3149, i64 0, i32 0
  %3151 = load i32, i32* %3150, align 8
  %3152 = icmp eq i32 %3151, 5
  br label %14210

3153:                                             ; preds = %3139, %3085
  %3154 = phi i16 [ %3086, %3085 ], [ %3137, %3139 ]
  switch i16 %3154, label %3454 [
    i16 32, label %3155
    i16 10, label %3155
    i16 9, label %3155
    i16 12, label %3155
    i16 47, label %3263
    i16 62, label %3371
  ]

3155:                                             ; preds = %3153, %3153, %3153, %3153
  %3156 = call zeroext i1 @_ZN5blink13HTMLTokenizer19IsAppropriateEndTagEv(%"class.blink::HTMLTokenizer"* %0)
  br i1 %3156, label %3157, label %3454

3157:                                             ; preds = %3155
  %3158 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %3159 = load i16, i16* %14, align 2
  %3160 = trunc i16 %3159 to i8
  %3161 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %3162 = load i8*, i8** %3161, align 8
  %3163 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 2
  %3164 = load i8*, i8** %3163, align 8
  %3165 = icmp eq i8* %3162, %3164
  br i1 %3165, label %3166, label %3168, !prof !4

3166:                                             ; preds = %3157
  %3167 = call i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7* %3158) #11
  store i8* %3167, i8** %3161, align 8
  br label %3168

3168:                                             ; preds = %3157, %3166
  %3169 = phi i8* [ %3167, %3166 ], [ %3162, %3157 ]
  %3170 = getelementptr inbounds i8, i8* %3169, i64 1
  store i8* %3170, i8** %3161, align 8
  store i8 %3160, i8* %3169, align 1
  store i32 33, i32* %74, align 8
  %3171 = load i8, i8* %49, align 1, !range !2
  %3172 = icmp eq i8 %3171, 0
  br i1 %3172, label %3179, label %3173

3173:                                             ; preds = %3168
  %3174 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %3175 = load i8*, i8** %3174, align 8
  %3176 = load i8, i8* %3175, align 1
  %3177 = zext i8 %3176 to i16
  %3178 = ptrtoint i8* %3175 to i64
  br label %3185

3179:                                             ; preds = %3168
  %3180 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %3181 = load i16*, i16** %3180, align 8
  %3182 = load i16, i16* %3181, align 2
  %3183 = ptrtoint i16* %3181 to i64
  %3184 = bitcast i16* %3181 to i8*
  br label %3185

3185:                                             ; preds = %3179, %3173
  %3186 = phi i8* [ %3175, %3173 ], [ %3184, %3179 ]
  %3187 = phi i64 [ %3178, %3173 ], [ %3183, %3179 ]
  %3188 = phi i16 [ %3177, %3173 ], [ %3182, %3179 ]
  %3189 = icmp eq i16 %3188, 10
  br i1 %3189, label %3190, label %3211

3190:                                             ; preds = %3185
  %3191 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %3192 = load i8, i8* %3191, align 8, !range !2
  %3193 = icmp eq i8 %3192, 0
  br i1 %3193, label %3211, label %3194, !prof !4

3194:                                             ; preds = %3190
  %3195 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %3196 = load i32, i32* %3195, align 8
  %3197 = add nsw i32 %3196, 1
  store i32 %3197, i32* %3195, align 8
  %3198 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %3199 = load i32, i32* %3198, align 8
  %3200 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %3201 = bitcast i8** %3200 to i64*
  %3202 = load i64, i64* %3201, align 8
  %3203 = sub i64 %3187, %3202
  %3204 = trunc i64 %3203 to i32
  %3205 = xor i8 %3171, 1
  %3206 = zext i8 %3205 to i32
  %3207 = ashr i32 %3204, %3206
  %3208 = add i32 %3199, 1
  %3209 = add i32 %3208, %3207
  %3210 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %3209, i32* %3210, align 4
  br label %3211

3211:                                             ; preds = %3194, %3190, %3185
  %3212 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %3213 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %3214 = load i8*, i8** %3213, align 8
  %3215 = icmp ult i8* %3186, %3214
  br i1 %3215, label %3216, label %3221, !prof !3

3216:                                             ; preds = %3211
  br i1 %3172, label %3219, label %3217

3217:                                             ; preds = %3216
  %3218 = getelementptr inbounds i8, i8* %3186, i64 1
  store i8* %3218, i8** %3212, align 8
  br label %3223

3219:                                             ; preds = %3216
  %3220 = getelementptr inbounds i8, i8* %3186, i64 2
  store i8* %3220, i8** %3212, align 8
  br label %3223

3221:                                             ; preds = %3211
  %3222 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %3223

3223:                                             ; preds = %3221, %3219, %3217
  %3224 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %3225 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3224, i64 0, i32 0
  %3226 = load i32, i32* %3225, align 8
  %3227 = icmp eq i32 %3226, 5
  br i1 %3227, label %14210, label %3228

3228:                                             ; preds = %3223
  call void @_ZN5blink9HTMLToken11BeginEndTagERK13LiteralBufferIhLj32EE(%"class.blink::HTMLToken"* %3224, %class.LiteralBuffer.7* dereferenceable(56) %18) #11
  %3229 = load i64, i64* %22, align 8
  store i64 %3229, i64* %20, align 8
  %3230 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %3231 = bitcast %class.LiteralBuffer.0* %3230 to i64*
  %3232 = load i64, i64* %3231, align 8
  %3233 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  %3234 = bitcast i16** %3233 to i64*
  store i64 %3232, i64* %3234, align 8
  %3235 = bitcast %class.LiteralBuffer.7* %3158 to i64*
  %3236 = load i64, i64* %3235, align 8
  %3237 = bitcast i8** %3161 to i64*
  store i64 %3236, i64* %3237, align 8
  %3238 = load i8, i8* %44, align 1, !range !2
  %3239 = icmp eq i8 %3238, 0
  br i1 %3239, label %3240, label %3258

3240:                                             ; preds = %3228
  %3241 = load i8, i8* %49, align 1, !range !2
  %3242 = icmp eq i8 %3241, 0
  br i1 %3242, label %3247, label %3243

3243:                                             ; preds = %3240
  %3244 = load i8*, i8** %3212, align 8
  %3245 = load i8, i8* %3244, align 1
  %3246 = zext i8 %3245 to i16
  br label %3251

3247:                                             ; preds = %3240
  %3248 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %3249 = load i16*, i16** %3248, align 8
  %3250 = load i16, i16* %3249, align 2
  br label %3251

3251:                                             ; preds = %3247, %3243
  %3252 = phi i16 [ %3246, %3243 ], [ %3250, %3247 ]
  store i16 %3252, i16* %14, align 2
  %3253 = icmp ugt i16 %3252, 15
  br i1 %3253, label %3254, label %3256

3254:                                             ; preds = %3251
  %3255 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %3255, align 8
  br label %7037

3256:                                             ; preds = %3251
  %3257 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %3257, label %7035, label %3258

3258:                                             ; preds = %3228, %3256
  %3259 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %3260 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3259, i64 0, i32 0
  %3261 = load i32, i32* %3260, align 8
  %3262 = icmp eq i32 %3261, 5
  br label %14210

3263:                                             ; preds = %3153
  %3264 = call zeroext i1 @_ZN5blink13HTMLTokenizer19IsAppropriateEndTagEv(%"class.blink::HTMLTokenizer"* %0)
  br i1 %3264, label %3265, label %3454

3265:                                             ; preds = %3263
  %3266 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %3267 = load i16, i16* %14, align 2
  %3268 = trunc i16 %3267 to i8
  %3269 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %3270 = load i8*, i8** %3269, align 8
  %3271 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 2
  %3272 = load i8*, i8** %3271, align 8
  %3273 = icmp eq i8* %3270, %3272
  br i1 %3273, label %3274, label %3276, !prof !4

3274:                                             ; preds = %3265
  %3275 = call i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7* %3266) #11
  store i8* %3275, i8** %3269, align 8
  br label %3276

3276:                                             ; preds = %3265, %3274
  %3277 = phi i8* [ %3275, %3274 ], [ %3270, %3265 ]
  %3278 = getelementptr inbounds i8, i8* %3277, i64 1
  store i8* %3278, i8** %3269, align 8
  store i8 %3268, i8* %3277, align 1
  store i32 42, i32* %74, align 8
  %3279 = load i8, i8* %49, align 1, !range !2
  %3280 = icmp eq i8 %3279, 0
  br i1 %3280, label %3287, label %3281

3281:                                             ; preds = %3276
  %3282 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %3283 = load i8*, i8** %3282, align 8
  %3284 = load i8, i8* %3283, align 1
  %3285 = zext i8 %3284 to i16
  %3286 = ptrtoint i8* %3283 to i64
  br label %3293

3287:                                             ; preds = %3276
  %3288 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %3289 = load i16*, i16** %3288, align 8
  %3290 = load i16, i16* %3289, align 2
  %3291 = ptrtoint i16* %3289 to i64
  %3292 = bitcast i16* %3289 to i8*
  br label %3293

3293:                                             ; preds = %3287, %3281
  %3294 = phi i8* [ %3283, %3281 ], [ %3292, %3287 ]
  %3295 = phi i64 [ %3286, %3281 ], [ %3291, %3287 ]
  %3296 = phi i16 [ %3285, %3281 ], [ %3290, %3287 ]
  %3297 = icmp eq i16 %3296, 10
  br i1 %3297, label %3298, label %3319

3298:                                             ; preds = %3293
  %3299 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %3300 = load i8, i8* %3299, align 8, !range !2
  %3301 = icmp eq i8 %3300, 0
  br i1 %3301, label %3319, label %3302, !prof !4

3302:                                             ; preds = %3298
  %3303 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %3304 = load i32, i32* %3303, align 8
  %3305 = add nsw i32 %3304, 1
  store i32 %3305, i32* %3303, align 8
  %3306 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %3307 = load i32, i32* %3306, align 8
  %3308 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %3309 = bitcast i8** %3308 to i64*
  %3310 = load i64, i64* %3309, align 8
  %3311 = sub i64 %3295, %3310
  %3312 = trunc i64 %3311 to i32
  %3313 = xor i8 %3279, 1
  %3314 = zext i8 %3313 to i32
  %3315 = ashr i32 %3312, %3314
  %3316 = add i32 %3307, 1
  %3317 = add i32 %3316, %3315
  %3318 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %3317, i32* %3318, align 4
  br label %3319

3319:                                             ; preds = %3302, %3298, %3293
  %3320 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %3321 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %3322 = load i8*, i8** %3321, align 8
  %3323 = icmp ult i8* %3294, %3322
  br i1 %3323, label %3324, label %3329, !prof !3

3324:                                             ; preds = %3319
  br i1 %3280, label %3327, label %3325

3325:                                             ; preds = %3324
  %3326 = getelementptr inbounds i8, i8* %3294, i64 1
  store i8* %3326, i8** %3320, align 8
  br label %3331

3327:                                             ; preds = %3324
  %3328 = getelementptr inbounds i8, i8* %3294, i64 2
  store i8* %3328, i8** %3320, align 8
  br label %3331

3329:                                             ; preds = %3319
  %3330 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %3331

3331:                                             ; preds = %3329, %3327, %3325
  %3332 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %3333 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3332, i64 0, i32 0
  %3334 = load i32, i32* %3333, align 8
  %3335 = icmp eq i32 %3334, 5
  br i1 %3335, label %14210, label %3336

3336:                                             ; preds = %3331
  call void @_ZN5blink9HTMLToken11BeginEndTagERK13LiteralBufferIhLj32EE(%"class.blink::HTMLToken"* %3332, %class.LiteralBuffer.7* dereferenceable(56) %18) #11
  %3337 = load i64, i64* %22, align 8
  store i64 %3337, i64* %20, align 8
  %3338 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %3339 = bitcast %class.LiteralBuffer.0* %3338 to i64*
  %3340 = load i64, i64* %3339, align 8
  %3341 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  %3342 = bitcast i16** %3341 to i64*
  store i64 %3340, i64* %3342, align 8
  %3343 = bitcast %class.LiteralBuffer.7* %3266 to i64*
  %3344 = load i64, i64* %3343, align 8
  %3345 = bitcast i8** %3269 to i64*
  store i64 %3344, i64* %3345, align 8
  %3346 = load i8, i8* %44, align 1, !range !2
  %3347 = icmp eq i8 %3346, 0
  br i1 %3347, label %3348, label %3366

3348:                                             ; preds = %3336
  %3349 = load i8, i8* %49, align 1, !range !2
  %3350 = icmp eq i8 %3349, 0
  br i1 %3350, label %3355, label %3351

3351:                                             ; preds = %3348
  %3352 = load i8*, i8** %3320, align 8
  %3353 = load i8, i8* %3352, align 1
  %3354 = zext i8 %3353 to i16
  br label %3359

3355:                                             ; preds = %3348
  %3356 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %3357 = load i16*, i16** %3356, align 8
  %3358 = load i16, i16* %3357, align 2
  br label %3359

3359:                                             ; preds = %3355, %3351
  %3360 = phi i16 [ %3354, %3351 ], [ %3358, %3355 ]
  store i16 %3360, i16* %14, align 2
  %3361 = icmp ugt i16 %3360, 15
  br i1 %3361, label %3362, label %3364

3362:                                             ; preds = %3359
  %3363 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %3363, align 8
  br label %8954

3364:                                             ; preds = %3359
  %3365 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %3365, label %8952, label %3366

3366:                                             ; preds = %3336, %3364
  %3367 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %3368 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3367, i64 0, i32 0
  %3369 = load i32, i32* %3368, align 8
  %3370 = icmp eq i32 %3369, 5
  br label %14210

3371:                                             ; preds = %3153
  %3372 = call zeroext i1 @_ZN5blink13HTMLTokenizer19IsAppropriateEndTagEv(%"class.blink::HTMLTokenizer"* %0)
  br i1 %3372, label %3373, label %3454

3373:                                             ; preds = %3371
  %3374 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %3375 = load i16, i16* %14, align 2
  %3376 = trunc i16 %3375 to i8
  %3377 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %3378 = load i8*, i8** %3377, align 8
  %3379 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 2
  %3380 = load i8*, i8** %3379, align 8
  %3381 = icmp eq i8* %3378, %3380
  br i1 %3381, label %3382, label %3384, !prof !4

3382:                                             ; preds = %3373
  %3383 = call i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7* %3374) #11
  store i8* %3383, i8** %3377, align 8
  br label %3384

3384:                                             ; preds = %3373, %3382
  %3385 = phi i8* [ %3383, %3382 ], [ %3378, %3373 ]
  %3386 = getelementptr inbounds i8, i8* %3385, i64 1
  store i8* %3386, i8** %3377, align 8
  store i8 %3376, i8* %3385, align 1
  store i32 0, i32* %74, align 8
  %3387 = load i8, i8* %49, align 1, !range !2
  %3388 = icmp eq i8 %3387, 0
  br i1 %3388, label %3395, label %3389

3389:                                             ; preds = %3384
  %3390 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %3391 = load i8*, i8** %3390, align 8
  %3392 = load i8, i8* %3391, align 1
  %3393 = zext i8 %3392 to i16
  %3394 = ptrtoint i8* %3391 to i64
  br label %3401

3395:                                             ; preds = %3384
  %3396 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %3397 = load i16*, i16** %3396, align 8
  %3398 = load i16, i16* %3397, align 2
  %3399 = ptrtoint i16* %3397 to i64
  %3400 = bitcast i16* %3397 to i8*
  br label %3401

3401:                                             ; preds = %3395, %3389
  %3402 = phi i8* [ %3391, %3389 ], [ %3400, %3395 ]
  %3403 = phi i64 [ %3394, %3389 ], [ %3399, %3395 ]
  %3404 = phi i16 [ %3393, %3389 ], [ %3398, %3395 ]
  %3405 = icmp eq i16 %3404, 10
  br i1 %3405, label %3406, label %3427

3406:                                             ; preds = %3401
  %3407 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %3408 = load i8, i8* %3407, align 8, !range !2
  %3409 = icmp eq i8 %3408, 0
  br i1 %3409, label %3427, label %3410, !prof !4

3410:                                             ; preds = %3406
  %3411 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %3412 = load i32, i32* %3411, align 8
  %3413 = add nsw i32 %3412, 1
  store i32 %3413, i32* %3411, align 8
  %3414 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %3415 = load i32, i32* %3414, align 8
  %3416 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %3417 = bitcast i8** %3416 to i64*
  %3418 = load i64, i64* %3417, align 8
  %3419 = sub i64 %3403, %3418
  %3420 = trunc i64 %3419 to i32
  %3421 = xor i8 %3387, 1
  %3422 = zext i8 %3421 to i32
  %3423 = ashr i32 %3420, %3422
  %3424 = add i32 %3415, 1
  %3425 = add i32 %3424, %3423
  %3426 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %3425, i32* %3426, align 4
  br label %3427

3427:                                             ; preds = %3410, %3406, %3401
  %3428 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %3429 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %3430 = load i8*, i8** %3429, align 8
  %3431 = icmp ult i8* %3402, %3430
  br i1 %3431, label %3432, label %3437, !prof !3

3432:                                             ; preds = %3427
  br i1 %3388, label %3435, label %3433

3433:                                             ; preds = %3432
  %3434 = getelementptr inbounds i8, i8* %3402, i64 1
  store i8* %3434, i8** %3428, align 8
  br label %3439

3435:                                             ; preds = %3432
  %3436 = getelementptr inbounds i8, i8* %3402, i64 2
  store i8* %3436, i8** %3428, align 8
  br label %3439

3437:                                             ; preds = %3427
  %3438 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %3439

3439:                                             ; preds = %3437, %3435, %3433
  %3440 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %3441 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3440, i64 0, i32 0
  %3442 = load i32, i32* %3441, align 8
  %3443 = icmp eq i32 %3442, 5
  br i1 %3443, label %14210, label %3444

3444:                                             ; preds = %3439
  call void @_ZN5blink9HTMLToken11BeginEndTagERK13LiteralBufferIhLj32EE(%"class.blink::HTMLToken"* %3440, %class.LiteralBuffer.7* dereferenceable(56) %18) #11
  %3445 = load i64, i64* %22, align 8
  store i64 %3445, i64* %20, align 8
  %3446 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %3447 = bitcast %class.LiteralBuffer.0* %3446 to i64*
  %3448 = load i64, i64* %3447, align 8
  %3449 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  %3450 = bitcast i16** %3449 to i64*
  store i64 %3448, i64* %3450, align 8
  %3451 = bitcast %class.LiteralBuffer.7* %3374 to i64*
  %3452 = load i64, i64* %3451, align 8
  %3453 = bitcast i8** %3377 to i64*
  store i64 %3452, i64* %3453, align 8
  br label %14210

3454:                                             ; preds = %3153, %3263, %3371, %3155
  %3455 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %3456 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3455, i64 0, i32 0
  store i32 5, i32* %3456, align 8
  %3457 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %3458 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3457, i64 0, i32 3, i32 1
  %3459 = load i16*, i16** %3458, align 8
  %3460 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3457, i64 0, i32 3, i32 2
  %3461 = load i16*, i16** %3460, align 8
  %3462 = icmp eq i16* %3459, %3461
  br i1 %3462, label %3463, label %3466, !prof !4

3463:                                             ; preds = %3454
  %3464 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3457, i64 0, i32 3
  %3465 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %3464) #11
  store i16* %3465, i16** %3458, align 8
  br label %3466

3466:                                             ; preds = %3454, %3463
  %3467 = phi i16* [ %3465, %3463 ], [ %3459, %3454 ]
  %3468 = getelementptr inbounds i16, i16* %3467, i64 1
  store i16* %3468, i16** %3458, align 8
  store i16 60, i16* %3467, align 2
  %3469 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3457, i64 0, i32 4
  %3470 = load i16, i16* %3469, align 8
  %3471 = or i16 %3470, 60
  store i16 %3471, i16* %3469, align 8
  %3472 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %3473 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3472, i64 0, i32 0
  store i32 5, i32* %3473, align 8
  %3474 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %3475 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3474, i64 0, i32 3, i32 1
  %3476 = load i16*, i16** %3475, align 8
  %3477 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3474, i64 0, i32 3, i32 2
  %3478 = load i16*, i16** %3477, align 8
  %3479 = icmp eq i16* %3476, %3478
  br i1 %3479, label %3480, label %3483, !prof !4

3480:                                             ; preds = %3466
  %3481 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3474, i64 0, i32 3
  %3482 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %3481) #11
  store i16* %3482, i16** %3475, align 8
  br label %3483

3483:                                             ; preds = %3466, %3480
  %3484 = phi i16* [ %3482, %3480 ], [ %3476, %3466 ]
  %3485 = getelementptr inbounds i16, i16* %3484, i64 1
  store i16* %3485, i16** %3475, align 8
  store i16 47, i16* %3484, align 2
  %3486 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3474, i64 0, i32 4
  %3487 = load i16, i16* %3486, align 8
  %3488 = or i16 %3487, 47
  store i16 %3488, i16* %3486, align 8
  %3489 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %3490 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %3491 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3489, i64 0, i32 3
  %3492 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %3493 = bitcast i8** %3492 to i64*
  %3494 = load i64, i64* %3493, align 8
  %3495 = bitcast %class.LiteralBuffer.7* %3490 to i64*
  %3496 = load i64, i64* %3495, align 8
  %3497 = sub i64 %3494, %3496
  %3498 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3489, i64 0, i32 3, i32 1
  %3499 = bitcast i16** %3498 to i64*
  %3500 = load i64, i64* %3499, align 8
  %3501 = bitcast %class.LiteralBuffer* %3491 to i64*
  %3502 = load i64, i64* %3501, align 8
  %3503 = sub i64 %3500, %3502
  %3504 = ashr exact i64 %3503, 1
  %3505 = add i64 %3504, %3497
  %3506 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3489, i64 0, i32 3, i32 2
  %3507 = bitcast i16** %3506 to i64*
  %3508 = load i64, i64* %3507, align 8
  %3509 = sub i64 %3508, %3502
  %3510 = ashr exact i64 %3509, 1
  %3511 = icmp ult i64 %3510, %3505
  %3512 = inttoptr i64 %3496 to i8*
  %3513 = inttoptr i64 %3500 to i16*
  br i1 %3511, label %3514, label %3519

3514:                                             ; preds = %3483
  %3515 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEm(%class.LiteralBuffer* %3491, i64 %3505) #11
  %3516 = getelementptr inbounds %class.LiteralBuffer.7, %class.LiteralBuffer.7* %3490, i64 0, i32 0
  %3517 = load i8*, i8** %3516, align 8
  %3518 = load i16*, i16** %3498, align 8
  br label %3519

3519:                                             ; preds = %3514, %3483
  %3520 = phi i16* [ %3518, %3514 ], [ %3513, %3483 ]
  %3521 = phi i8* [ %3517, %3514 ], [ %3512, %3483 ]
  %3522 = bitcast i16* %3520 to i8*
  %3523 = getelementptr inbounds i8, i8* %3521, i64 %3497
  %3524 = icmp eq i64 %3497, 0
  br i1 %3524, label %3606, label %3525

3525:                                             ; preds = %3519
  %3526 = icmp ult i64 %3497, 16
  br i1 %3526, label %3593, label %3527

3527:                                             ; preds = %3525
  %3528 = getelementptr i16, i16* %3520, i64 %3497
  %3529 = bitcast i16* %3528 to i8*
  %3530 = icmp ugt i8* %3523, %3522
  %3531 = icmp ult i8* %3521, %3529
  %3532 = and i1 %3530, %3531
  br i1 %3532, label %3593, label %3533

3533:                                             ; preds = %3527
  %3534 = and i64 %3497, -16
  %3535 = getelementptr i16, i16* %3520, i64 %3534
  %3536 = getelementptr i8, i8* %3521, i64 %3534
  %3537 = add i64 %3534, -16
  %3538 = lshr exact i64 %3537, 4
  %3539 = add nuw nsw i64 %3538, 1
  %3540 = and i64 %3539, 1
  %3541 = icmp eq i64 %3537, 0
  br i1 %3541, label %3575, label %3542

3542:                                             ; preds = %3533
  %3543 = sub nuw nsw i64 %3539, %3540
  br label %3544

3544:                                             ; preds = %3544, %3542
  %3545 = phi i64 [ 0, %3542 ], [ %3572, %3544 ]
  %3546 = phi i64 [ %3543, %3542 ], [ %3573, %3544 ]
  %3547 = getelementptr i16, i16* %3520, i64 %3545
  %3548 = getelementptr i8, i8* %3521, i64 %3545
  %3549 = bitcast i8* %3548 to <8 x i8>*
  %3550 = load <8 x i8>, <8 x i8>* %3549, align 1, !alias.scope !13
  %3551 = getelementptr i8, i8* %3548, i64 8
  %3552 = bitcast i8* %3551 to <8 x i8>*
  %3553 = load <8 x i8>, <8 x i8>* %3552, align 1, !alias.scope !13
  %3554 = zext <8 x i8> %3550 to <8 x i16>
  %3555 = zext <8 x i8> %3553 to <8 x i16>
  %3556 = bitcast i16* %3547 to <8 x i16>*
  store <8 x i16> %3554, <8 x i16>* %3556, align 2, !alias.scope !16, !noalias !13
  %3557 = getelementptr i16, i16* %3547, i64 8
  %3558 = bitcast i16* %3557 to <8 x i16>*
  store <8 x i16> %3555, <8 x i16>* %3558, align 2, !alias.scope !16, !noalias !13
  %3559 = or i64 %3545, 16
  %3560 = getelementptr i16, i16* %3520, i64 %3559
  %3561 = getelementptr i8, i8* %3521, i64 %3559
  %3562 = bitcast i8* %3561 to <8 x i8>*
  %3563 = load <8 x i8>, <8 x i8>* %3562, align 1, !alias.scope !13
  %3564 = getelementptr i8, i8* %3561, i64 8
  %3565 = bitcast i8* %3564 to <8 x i8>*
  %3566 = load <8 x i8>, <8 x i8>* %3565, align 1, !alias.scope !13
  %3567 = zext <8 x i8> %3563 to <8 x i16>
  %3568 = zext <8 x i8> %3566 to <8 x i16>
  %3569 = bitcast i16* %3560 to <8 x i16>*
  store <8 x i16> %3567, <8 x i16>* %3569, align 2, !alias.scope !16, !noalias !13
  %3570 = getelementptr i16, i16* %3560, i64 8
  %3571 = bitcast i16* %3570 to <8 x i16>*
  store <8 x i16> %3568, <8 x i16>* %3571, align 2, !alias.scope !16, !noalias !13
  %3572 = add i64 %3545, 32
  %3573 = add i64 %3546, -2
  %3574 = icmp eq i64 %3573, 0
  br i1 %3574, label %3575, label %3544, !llvm.loop !18

3575:                                             ; preds = %3544, %3533
  %3576 = phi i64 [ 0, %3533 ], [ %3572, %3544 ]
  %3577 = icmp eq i64 %3540, 0
  br i1 %3577, label %3591, label %3578

3578:                                             ; preds = %3575
  %3579 = getelementptr i16, i16* %3520, i64 %3576
  %3580 = getelementptr i8, i8* %3521, i64 %3576
  %3581 = bitcast i8* %3580 to <8 x i8>*
  %3582 = load <8 x i8>, <8 x i8>* %3581, align 1, !alias.scope !13
  %3583 = getelementptr i8, i8* %3580, i64 8
  %3584 = bitcast i8* %3583 to <8 x i8>*
  %3585 = load <8 x i8>, <8 x i8>* %3584, align 1, !alias.scope !13
  %3586 = zext <8 x i8> %3582 to <8 x i16>
  %3587 = zext <8 x i8> %3585 to <8 x i16>
  %3588 = bitcast i16* %3579 to <8 x i16>*
  store <8 x i16> %3586, <8 x i16>* %3588, align 2, !alias.scope !16, !noalias !13
  %3589 = getelementptr i16, i16* %3579, i64 8
  %3590 = bitcast i16* %3589 to <8 x i16>*
  store <8 x i16> %3587, <8 x i16>* %3590, align 2, !alias.scope !16, !noalias !13
  br label %3591

3591:                                             ; preds = %3575, %3578
  %3592 = icmp eq i64 %3497, %3534
  br i1 %3592, label %3604, label %3593

3593:                                             ; preds = %3591, %3527, %3525
  %3594 = phi i16* [ %3520, %3527 ], [ %3520, %3525 ], [ %3535, %3591 ]
  %3595 = phi i8* [ %3521, %3527 ], [ %3521, %3525 ], [ %3536, %3591 ]
  br label %3596

3596:                                             ; preds = %3593, %3596
  %3597 = phi i16* [ %3602, %3596 ], [ %3594, %3593 ]
  %3598 = phi i8* [ %3601, %3596 ], [ %3595, %3593 ]
  %3599 = load i8, i8* %3598, align 1
  %3600 = zext i8 %3599 to i16
  store i16 %3600, i16* %3597, align 2
  %3601 = getelementptr inbounds i8, i8* %3598, i64 1
  %3602 = getelementptr inbounds i16, i16* %3597, i64 1
  %3603 = icmp eq i8* %3601, %3523
  br i1 %3603, label %3604, label %3596, !llvm.loop !19

3604:                                             ; preds = %3596, %3591
  %3605 = load i16*, i16** %3498, align 8
  br label %3606

3606:                                             ; preds = %3519, %3604
  %3607 = phi i16* [ %3605, %3604 ], [ %3520, %3519 ]
  %3608 = getelementptr inbounds i16, i16* %3607, i64 %3497
  store i16* %3608, i16** %3498, align 8
  %3609 = load i64, i64* %22, align 8
  store i64 %3609, i64* %20, align 8
  %3610 = load i64, i64* %3495, align 8
  store i64 %3610, i64* %3493, align 8
  br label %2973

3611:                                             ; preds = %1238, %73
  %3612 = load i16, i16* %14, align 2
  br label %3613

3613:                                             ; preds = %3611, %1233
  %3614 = phi i16 [ %3612, %3611 ], [ %1231, %1233 ]
  %3615 = icmp eq i16 %3614, 47
  br i1 %3615, label %3616, label %3655

3616:                                             ; preds = %3613
  %3617 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %3618 = bitcast %class.LiteralBuffer.7* %3617 to i64*
  %3619 = load i64, i64* %3618, align 8
  %3620 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %3621 = bitcast i8** %3620 to i64*
  store i64 %3619, i64* %3621, align 8
  store i32 17, i32* %74, align 8
  %3622 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %3623 = load i8*, i8** %3622, align 8
  %3624 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %3625 = load i8*, i8** %3624, align 8
  %3626 = icmp ult i8* %3623, %3625
  br i1 %3626, label %3627, label %3638, !prof !3

3627:                                             ; preds = %3616
  %3628 = load i8, i8* %49, align 1, !range !2
  %3629 = icmp eq i8 %3628, 0
  br i1 %3629, label %3634, label %3630

3630:                                             ; preds = %3627
  %3631 = getelementptr inbounds i8, i8* %3623, i64 1
  store i8* %3631, i8** %3622, align 8
  %3632 = load i8, i8* %3631, align 1
  %3633 = zext i8 %3632 to i16
  br label %3640

3634:                                             ; preds = %3627
  %3635 = getelementptr inbounds i8, i8* %3623, i64 2
  %3636 = bitcast i8* %3635 to i16*
  store i8* %3635, i8** %3622, align 8
  %3637 = load i16, i16* %3636, align 2
  br label %3640

3638:                                             ; preds = %3616
  %3639 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %3640

3640:                                             ; preds = %3638, %3634, %3630
  %3641 = phi i16 [ %3639, %3638 ], [ %3633, %3630 ], [ %3637, %3634 ]
  store i16 %3641, i16* %14, align 2
  %3642 = icmp ugt i16 %3641, 15
  br i1 %3642, label %3643, label %3645

3643:                                             ; preds = %3640
  %3644 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %3644, align 8
  br label %3726

3645:                                             ; preds = %3640
  %3646 = load i8, i8* %44, align 1, !range !2
  %3647 = icmp eq i8 %3646, 0
  br i1 %3647, label %3648, label %3650

3648:                                             ; preds = %3645
  %3649 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %3649, label %3726, label %3650

3650:                                             ; preds = %3645, %3648
  %3651 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %3652 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3651, i64 0, i32 0
  %3653 = load i32, i32* %3652, align 8
  %3654 = icmp eq i32 %3653, 5
  br label %14210

3655:                                             ; preds = %3613
  %3656 = icmp eq i16 %3614, 33
  %3657 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %3658 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3657, i64 0, i32 0
  store i32 5, i32* %3658, align 8
  %3659 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %3660 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3659, i64 0, i32 3, i32 1
  %3661 = load i16*, i16** %3660, align 8
  %3662 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3659, i64 0, i32 3, i32 2
  %3663 = load i16*, i16** %3662, align 8
  %3664 = icmp eq i16* %3661, %3663
  br i1 %3664, label %3665, label %3668, !prof !4

3665:                                             ; preds = %3655
  %3666 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3659, i64 0, i32 3
  %3667 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %3666) #11
  store i16* %3667, i16** %3660, align 8
  br label %3668

3668:                                             ; preds = %3655, %3665
  %3669 = phi i16* [ %3667, %3665 ], [ %3661, %3655 ]
  %3670 = getelementptr inbounds i16, i16* %3669, i64 1
  store i16* %3670, i16** %3660, align 8
  store i16 60, i16* %3669, align 2
  %3671 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3659, i64 0, i32 4
  %3672 = load i16, i16* %3671, align 8
  %3673 = or i16 %3672, 60
  store i16 %3673, i16* %3671, align 8
  br i1 %3656, label %3674, label %3725

3674:                                             ; preds = %3668
  %3675 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %3676 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3675, i64 0, i32 0
  store i32 5, i32* %3676, align 8
  %3677 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %3678 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3677, i64 0, i32 3, i32 1
  %3679 = load i16*, i16** %3678, align 8
  %3680 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3677, i64 0, i32 3, i32 2
  %3681 = load i16*, i16** %3680, align 8
  %3682 = icmp eq i16* %3679, %3681
  br i1 %3682, label %3683, label %3686, !prof !4

3683:                                             ; preds = %3674
  %3684 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3677, i64 0, i32 3
  %3685 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %3684) #11
  store i16* %3685, i16** %3678, align 8
  br label %3686

3686:                                             ; preds = %3674, %3683
  %3687 = phi i16* [ %3685, %3683 ], [ %3679, %3674 ]
  %3688 = getelementptr inbounds i16, i16* %3687, i64 1
  store i16* %3688, i16** %3678, align 8
  store i16 33, i16* %3687, align 2
  %3689 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3677, i64 0, i32 4
  %3690 = load i16, i16* %3689, align 8
  %3691 = or i16 %3690, 33
  store i16 %3691, i16* %3689, align 8
  store i32 19, i32* %74, align 8
  %3692 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %3693 = load i8*, i8** %3692, align 8
  %3694 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %3695 = load i8*, i8** %3694, align 8
  %3696 = icmp ult i8* %3693, %3695
  br i1 %3696, label %3697, label %3708, !prof !3

3697:                                             ; preds = %3686
  %3698 = load i8, i8* %49, align 1, !range !2
  %3699 = icmp eq i8 %3698, 0
  br i1 %3699, label %3704, label %3700

3700:                                             ; preds = %3697
  %3701 = getelementptr inbounds i8, i8* %3693, i64 1
  store i8* %3701, i8** %3692, align 8
  %3702 = load i8, i8* %3701, align 1
  %3703 = zext i8 %3702 to i16
  br label %3710

3704:                                             ; preds = %3697
  %3705 = getelementptr inbounds i8, i8* %3693, i64 2
  %3706 = bitcast i8* %3705 to i16*
  store i8* %3705, i8** %3692, align 8
  %3707 = load i16, i16* %3706, align 2
  br label %3710

3708:                                             ; preds = %3686
  %3709 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %3710

3710:                                             ; preds = %3708, %3704, %3700
  %3711 = phi i16 [ %3709, %3708 ], [ %3703, %3700 ], [ %3707, %3704 ]
  store i16 %3711, i16* %14, align 2
  %3712 = icmp ugt i16 %3711, 15
  br i1 %3712, label %3713, label %3715

3713:                                             ; preds = %3710
  %3714 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %3714, align 8
  br label %4354

3715:                                             ; preds = %3710
  %3716 = load i8, i8* %44, align 1, !range !2
  %3717 = icmp eq i8 %3716, 0
  br i1 %3717, label %3718, label %3720

3718:                                             ; preds = %3715
  %3719 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %3719, label %4352, label %3720

3720:                                             ; preds = %3715, %3718
  %3721 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %3722 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3721, i64 0, i32 0
  %3723 = load i32, i32* %3722, align 8
  %3724 = icmp eq i32 %3723, 5
  br label %14210

3725:                                             ; preds = %3668
  store i32 5, i32* %74, align 8
  br label %1207

3726:                                             ; preds = %3643, %73, %3648
  %3727 = load i16, i16* %14, align 2
  %3728 = or i16 %3727, 32
  %3729 = add i16 %3728, -97
  %3730 = icmp ult i16 %3729, 26
  br i1 %3730, label %3731, label %3789

3731:                                             ; preds = %3726
  %3732 = trunc i16 %3727 to i8
  %3733 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %3734 = load i8*, i8** %3733, align 8
  %3735 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 2
  %3736 = load i8*, i8** %3735, align 8
  %3737 = icmp eq i8* %3734, %3736
  br i1 %3737, label %3738, label %3741, !prof !4

3738:                                             ; preds = %3731
  %3739 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %3740 = call i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7* %3739) #11
  store i8* %3740, i8** %3733, align 8
  br label %3741

3741:                                             ; preds = %3731, %3738
  %3742 = phi i8* [ %3740, %3738 ], [ %3734, %3731 ]
  %3743 = getelementptr inbounds i8, i8* %3742, i64 1
  store i8* %3743, i8** %3733, align 8
  store i8 %3732, i8* %3742, align 1
  %3744 = load i16, i16* %14, align 2
  %3745 = trunc i16 %3744 to i8
  %3746 = or i8 %3745, 32
  %3747 = load i8*, i8** %19, align 8
  %3748 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 10, i32 2
  %3749 = load i8*, i8** %3748, align 8
  %3750 = icmp eq i8* %3747, %3749
  br i1 %3750, label %3751, label %3753, !prof !4

3751:                                             ; preds = %3741
  %3752 = call i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7* %18) #11
  store i8* %3752, i8** %19, align 8
  br label %3753

3753:                                             ; preds = %3741, %3751
  %3754 = phi i8* [ %3752, %3751 ], [ %3747, %3741 ]
  %3755 = getelementptr inbounds i8, i8* %3754, i64 1
  store i8* %3755, i8** %19, align 8
  store i8 %3746, i8* %3754, align 1
  store i32 18, i32* %74, align 8
  %3756 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %3757 = load i8*, i8** %3756, align 8
  %3758 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %3759 = load i8*, i8** %3758, align 8
  %3760 = icmp ult i8* %3757, %3759
  br i1 %3760, label %3761, label %3772, !prof !3

3761:                                             ; preds = %3753
  %3762 = load i8, i8* %49, align 1, !range !2
  %3763 = icmp eq i8 %3762, 0
  br i1 %3763, label %3768, label %3764

3764:                                             ; preds = %3761
  %3765 = getelementptr inbounds i8, i8* %3757, i64 1
  store i8* %3765, i8** %3756, align 8
  %3766 = load i8, i8* %3765, align 1
  %3767 = zext i8 %3766 to i16
  br label %3774

3768:                                             ; preds = %3761
  %3769 = getelementptr inbounds i8, i8* %3757, i64 2
  %3770 = bitcast i8* %3769 to i16*
  store i8* %3769, i8** %3756, align 8
  %3771 = load i16, i16* %3770, align 2
  br label %3774

3772:                                             ; preds = %3753
  %3773 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %3774

3774:                                             ; preds = %3772, %3768, %3764
  %3775 = phi i16 [ %3773, %3772 ], [ %3767, %3764 ], [ %3771, %3768 ]
  store i16 %3775, i16* %14, align 2
  %3776 = icmp ugt i16 %3775, 15
  br i1 %3776, label %3777, label %3779

3777:                                             ; preds = %3774
  %3778 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %3778, align 8
  br label %3826

3779:                                             ; preds = %3774
  %3780 = load i8, i8* %44, align 1, !range !2
  %3781 = icmp eq i8 %3780, 0
  br i1 %3781, label %3782, label %3784

3782:                                             ; preds = %3779
  %3783 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %3783, label %3824, label %3784

3784:                                             ; preds = %3779, %3782
  %3785 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %3786 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3785, i64 0, i32 0
  %3787 = load i32, i32* %3786, align 8
  %3788 = icmp eq i32 %3787, 5
  br label %14210

3789:                                             ; preds = %3726
  %3790 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %3791 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3790, i64 0, i32 0
  store i32 5, i32* %3791, align 8
  %3792 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %3793 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3792, i64 0, i32 3, i32 1
  %3794 = load i16*, i16** %3793, align 8
  %3795 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3792, i64 0, i32 3, i32 2
  %3796 = load i16*, i16** %3795, align 8
  %3797 = icmp eq i16* %3794, %3796
  br i1 %3797, label %3798, label %3801, !prof !4

3798:                                             ; preds = %3789
  %3799 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3792, i64 0, i32 3
  %3800 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %3799) #11
  store i16* %3800, i16** %3793, align 8
  br label %3801

3801:                                             ; preds = %3789, %3798
  %3802 = phi i16* [ %3800, %3798 ], [ %3794, %3789 ]
  %3803 = getelementptr inbounds i16, i16* %3802, i64 1
  store i16* %3803, i16** %3793, align 8
  store i16 60, i16* %3802, align 2
  %3804 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3792, i64 0, i32 4
  %3805 = load i16, i16* %3804, align 8
  %3806 = or i16 %3805, 60
  store i16 %3806, i16* %3804, align 8
  %3807 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %3808 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3807, i64 0, i32 0
  store i32 5, i32* %3808, align 8
  %3809 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %3810 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3809, i64 0, i32 3, i32 1
  %3811 = load i16*, i16** %3810, align 8
  %3812 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3809, i64 0, i32 3, i32 2
  %3813 = load i16*, i16** %3812, align 8
  %3814 = icmp eq i16* %3811, %3813
  br i1 %3814, label %3815, label %3818, !prof !4

3815:                                             ; preds = %3801
  %3816 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3809, i64 0, i32 3
  %3817 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %3816) #11
  store i16* %3817, i16** %3810, align 8
  br label %3818

3818:                                             ; preds = %3801, %3815
  %3819 = phi i16* [ %3817, %3815 ], [ %3811, %3801 ]
  %3820 = getelementptr inbounds i16, i16* %3819, i64 1
  store i16* %3820, i16** %3810, align 8
  store i16 47, i16* %3819, align 2
  %3821 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3809, i64 0, i32 4
  %3822 = load i16, i16* %3821, align 8
  %3823 = or i16 %3822, 47
  store i16 %3823, i16* %3821, align 8
  store i32 5, i32* %74, align 8
  br label %1207

3824:                                             ; preds = %3782, %73, %3887
  %3825 = load i16, i16* %14, align 2
  br label %3826

3826:                                             ; preds = %3824, %3777
  %3827 = phi i16 [ %3775, %3777 ], [ %3825, %3824 ]
  %3828 = or i16 %3827, 32
  %3829 = add i16 %3828, -97
  %3830 = icmp ult i16 %3829, 26
  br i1 %3830, label %3831, label %3894

3831:                                             ; preds = %3826
  %3832 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %3833 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 2
  %3834 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %3835 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 10, i32 2
  %3836 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %3837 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %3838 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  br label %3839

3839:                                             ; preds = %3831, %3880
  %3840 = phi i16 [ %3827, %3831 ], [ %3878, %3880 ]
  %3841 = trunc i16 %3840 to i8
  %3842 = load i8*, i8** %3832, align 8
  %3843 = load i8*, i8** %3833, align 8
  %3844 = icmp eq i8* %3842, %3843
  br i1 %3844, label %3845, label %3847, !prof !4

3845:                                             ; preds = %3839
  %3846 = call i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7* %3834) #11
  store i8* %3846, i8** %3832, align 8
  br label %3847

3847:                                             ; preds = %3839, %3845
  %3848 = phi i8* [ %3846, %3845 ], [ %3842, %3839 ]
  %3849 = getelementptr inbounds i8, i8* %3848, i64 1
  store i8* %3849, i8** %3832, align 8
  store i8 %3841, i8* %3848, align 1
  %3850 = load i16, i16* %14, align 2
  %3851 = trunc i16 %3850 to i8
  %3852 = or i8 %3851, 32
  %3853 = load i8*, i8** %19, align 8
  %3854 = load i8*, i8** %3835, align 8
  %3855 = icmp eq i8* %3853, %3854
  br i1 %3855, label %3856, label %3858, !prof !4

3856:                                             ; preds = %3847
  %3857 = call i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7* %18) #11
  store i8* %3857, i8** %19, align 8
  br label %3858

3858:                                             ; preds = %3847, %3856
  %3859 = phi i8* [ %3857, %3856 ], [ %3853, %3847 ]
  %3860 = getelementptr inbounds i8, i8* %3859, i64 1
  store i8* %3860, i8** %19, align 8
  store i8 %3852, i8* %3859, align 1
  %3861 = load i8*, i8** %3836, align 8
  %3862 = load i8*, i8** %3837, align 8
  %3863 = icmp ult i8* %3861, %3862
  br i1 %3863, label %3864, label %3875, !prof !3

3864:                                             ; preds = %3858
  %3865 = load i8, i8* %49, align 1, !range !2
  %3866 = icmp eq i8 %3865, 0
  br i1 %3866, label %3871, label %3867

3867:                                             ; preds = %3864
  %3868 = getelementptr inbounds i8, i8* %3861, i64 1
  store i8* %3868, i8** %3836, align 8
  %3869 = load i8, i8* %3868, align 1
  %3870 = zext i8 %3869 to i16
  br label %3877

3871:                                             ; preds = %3864
  %3872 = getelementptr inbounds i8, i8* %3861, i64 2
  %3873 = bitcast i8* %3872 to i16*
  store i8* %3872, i8** %3836, align 8
  %3874 = load i16, i16* %3873, align 2
  br label %3877

3875:                                             ; preds = %3858
  %3876 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %3877

3877:                                             ; preds = %3875, %3871, %3867
  %3878 = phi i16 [ %3876, %3875 ], [ %3870, %3867 ], [ %3874, %3871 ]
  store i16 %3878, i16* %14, align 2
  %3879 = icmp ugt i16 %3878, 15
  br i1 %3879, label %3880, label %3884

3880:                                             ; preds = %3877
  store i8 0, i8* %3838, align 8
  %3881 = or i16 %3878, 32
  %3882 = add i16 %3881, -97
  %3883 = icmp ult i16 %3882, 26
  br i1 %3883, label %3839, label %3894

3884:                                             ; preds = %3877
  %3885 = load i8, i8* %44, align 1, !range !2
  %3886 = icmp eq i8 %3885, 0
  br i1 %3886, label %3887, label %3889

3887:                                             ; preds = %3884
  %3888 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %3888, label %3824, label %3889

3889:                                             ; preds = %3884, %3887
  %3890 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %3891 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3890, i64 0, i32 0
  %3892 = load i32, i32* %3891, align 8
  %3893 = icmp eq i32 %3892, 5
  br label %14210

3894:                                             ; preds = %3880, %3826
  %3895 = phi i16 [ %3827, %3826 ], [ %3878, %3880 ]
  switch i16 %3895, label %4195 [
    i16 32, label %3896
    i16 10, label %3896
    i16 9, label %3896
    i16 12, label %3896
    i16 47, label %4004
    i16 62, label %4112
  ]

3896:                                             ; preds = %3894, %3894, %3894, %3894
  %3897 = call zeroext i1 @_ZN5blink13HTMLTokenizer19IsAppropriateEndTagEv(%"class.blink::HTMLTokenizer"* %0)
  br i1 %3897, label %3898, label %4195

3898:                                             ; preds = %3896
  %3899 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %3900 = load i16, i16* %14, align 2
  %3901 = trunc i16 %3900 to i8
  %3902 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %3903 = load i8*, i8** %3902, align 8
  %3904 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 2
  %3905 = load i8*, i8** %3904, align 8
  %3906 = icmp eq i8* %3903, %3905
  br i1 %3906, label %3907, label %3909, !prof !4

3907:                                             ; preds = %3898
  %3908 = call i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7* %3899) #11
  store i8* %3908, i8** %3902, align 8
  br label %3909

3909:                                             ; preds = %3898, %3907
  %3910 = phi i8* [ %3908, %3907 ], [ %3903, %3898 ]
  %3911 = getelementptr inbounds i8, i8* %3910, i64 1
  store i8* %3911, i8** %3902, align 8
  store i8 %3901, i8* %3910, align 1
  store i32 33, i32* %74, align 8
  %3912 = load i8, i8* %49, align 1, !range !2
  %3913 = icmp eq i8 %3912, 0
  br i1 %3913, label %3920, label %3914

3914:                                             ; preds = %3909
  %3915 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %3916 = load i8*, i8** %3915, align 8
  %3917 = load i8, i8* %3916, align 1
  %3918 = zext i8 %3917 to i16
  %3919 = ptrtoint i8* %3916 to i64
  br label %3926

3920:                                             ; preds = %3909
  %3921 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %3922 = load i16*, i16** %3921, align 8
  %3923 = load i16, i16* %3922, align 2
  %3924 = ptrtoint i16* %3922 to i64
  %3925 = bitcast i16* %3922 to i8*
  br label %3926

3926:                                             ; preds = %3920, %3914
  %3927 = phi i8* [ %3916, %3914 ], [ %3925, %3920 ]
  %3928 = phi i64 [ %3919, %3914 ], [ %3924, %3920 ]
  %3929 = phi i16 [ %3918, %3914 ], [ %3923, %3920 ]
  %3930 = icmp eq i16 %3929, 10
  br i1 %3930, label %3931, label %3952

3931:                                             ; preds = %3926
  %3932 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %3933 = load i8, i8* %3932, align 8, !range !2
  %3934 = icmp eq i8 %3933, 0
  br i1 %3934, label %3952, label %3935, !prof !4

3935:                                             ; preds = %3931
  %3936 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %3937 = load i32, i32* %3936, align 8
  %3938 = add nsw i32 %3937, 1
  store i32 %3938, i32* %3936, align 8
  %3939 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %3940 = load i32, i32* %3939, align 8
  %3941 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %3942 = bitcast i8** %3941 to i64*
  %3943 = load i64, i64* %3942, align 8
  %3944 = sub i64 %3928, %3943
  %3945 = trunc i64 %3944 to i32
  %3946 = xor i8 %3912, 1
  %3947 = zext i8 %3946 to i32
  %3948 = ashr i32 %3945, %3947
  %3949 = add i32 %3940, 1
  %3950 = add i32 %3949, %3948
  %3951 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %3950, i32* %3951, align 4
  br label %3952

3952:                                             ; preds = %3935, %3931, %3926
  %3953 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %3954 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %3955 = load i8*, i8** %3954, align 8
  %3956 = icmp ult i8* %3927, %3955
  br i1 %3956, label %3957, label %3962, !prof !3

3957:                                             ; preds = %3952
  br i1 %3913, label %3960, label %3958

3958:                                             ; preds = %3957
  %3959 = getelementptr inbounds i8, i8* %3927, i64 1
  store i8* %3959, i8** %3953, align 8
  br label %3964

3960:                                             ; preds = %3957
  %3961 = getelementptr inbounds i8, i8* %3927, i64 2
  store i8* %3961, i8** %3953, align 8
  br label %3964

3962:                                             ; preds = %3952
  %3963 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %3964

3964:                                             ; preds = %3962, %3960, %3958
  %3965 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %3966 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %3965, i64 0, i32 0
  %3967 = load i32, i32* %3966, align 8
  %3968 = icmp eq i32 %3967, 5
  br i1 %3968, label %14210, label %3969

3969:                                             ; preds = %3964
  call void @_ZN5blink9HTMLToken11BeginEndTagERK13LiteralBufferIhLj32EE(%"class.blink::HTMLToken"* %3965, %class.LiteralBuffer.7* dereferenceable(56) %18) #11
  %3970 = load i64, i64* %22, align 8
  store i64 %3970, i64* %20, align 8
  %3971 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %3972 = bitcast %class.LiteralBuffer.0* %3971 to i64*
  %3973 = load i64, i64* %3972, align 8
  %3974 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  %3975 = bitcast i16** %3974 to i64*
  store i64 %3973, i64* %3975, align 8
  %3976 = bitcast %class.LiteralBuffer.7* %3899 to i64*
  %3977 = load i64, i64* %3976, align 8
  %3978 = bitcast i8** %3902 to i64*
  store i64 %3977, i64* %3978, align 8
  %3979 = load i8, i8* %44, align 1, !range !2
  %3980 = icmp eq i8 %3979, 0
  br i1 %3980, label %3981, label %3999

3981:                                             ; preds = %3969
  %3982 = load i8, i8* %49, align 1, !range !2
  %3983 = icmp eq i8 %3982, 0
  br i1 %3983, label %3988, label %3984

3984:                                             ; preds = %3981
  %3985 = load i8*, i8** %3953, align 8
  %3986 = load i8, i8* %3985, align 1
  %3987 = zext i8 %3986 to i16
  br label %3992

3988:                                             ; preds = %3981
  %3989 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %3990 = load i16*, i16** %3989, align 8
  %3991 = load i16, i16* %3990, align 2
  br label %3992

3992:                                             ; preds = %3988, %3984
  %3993 = phi i16 [ %3987, %3984 ], [ %3991, %3988 ]
  store i16 %3993, i16* %14, align 2
  %3994 = icmp ugt i16 %3993, 15
  br i1 %3994, label %3995, label %3997

3995:                                             ; preds = %3992
  %3996 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %3996, align 8
  br label %7037

3997:                                             ; preds = %3992
  %3998 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %3998, label %7035, label %3999

3999:                                             ; preds = %3969, %3997
  %4000 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4001 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4000, i64 0, i32 0
  %4002 = load i32, i32* %4001, align 8
  %4003 = icmp eq i32 %4002, 5
  br label %14210

4004:                                             ; preds = %3894
  %4005 = call zeroext i1 @_ZN5blink13HTMLTokenizer19IsAppropriateEndTagEv(%"class.blink::HTMLTokenizer"* %0)
  br i1 %4005, label %4006, label %4195

4006:                                             ; preds = %4004
  %4007 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %4008 = load i16, i16* %14, align 2
  %4009 = trunc i16 %4008 to i8
  %4010 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %4011 = load i8*, i8** %4010, align 8
  %4012 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 2
  %4013 = load i8*, i8** %4012, align 8
  %4014 = icmp eq i8* %4011, %4013
  br i1 %4014, label %4015, label %4017, !prof !4

4015:                                             ; preds = %4006
  %4016 = call i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7* %4007) #11
  store i8* %4016, i8** %4010, align 8
  br label %4017

4017:                                             ; preds = %4006, %4015
  %4018 = phi i8* [ %4016, %4015 ], [ %4011, %4006 ]
  %4019 = getelementptr inbounds i8, i8* %4018, i64 1
  store i8* %4019, i8** %4010, align 8
  store i8 %4009, i8* %4018, align 1
  store i32 42, i32* %74, align 8
  %4020 = load i8, i8* %49, align 1, !range !2
  %4021 = icmp eq i8 %4020, 0
  br i1 %4021, label %4028, label %4022

4022:                                             ; preds = %4017
  %4023 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %4024 = load i8*, i8** %4023, align 8
  %4025 = load i8, i8* %4024, align 1
  %4026 = zext i8 %4025 to i16
  %4027 = ptrtoint i8* %4024 to i64
  br label %4034

4028:                                             ; preds = %4017
  %4029 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %4030 = load i16*, i16** %4029, align 8
  %4031 = load i16, i16* %4030, align 2
  %4032 = ptrtoint i16* %4030 to i64
  %4033 = bitcast i16* %4030 to i8*
  br label %4034

4034:                                             ; preds = %4028, %4022
  %4035 = phi i8* [ %4024, %4022 ], [ %4033, %4028 ]
  %4036 = phi i64 [ %4027, %4022 ], [ %4032, %4028 ]
  %4037 = phi i16 [ %4026, %4022 ], [ %4031, %4028 ]
  %4038 = icmp eq i16 %4037, 10
  br i1 %4038, label %4039, label %4060

4039:                                             ; preds = %4034
  %4040 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %4041 = load i8, i8* %4040, align 8, !range !2
  %4042 = icmp eq i8 %4041, 0
  br i1 %4042, label %4060, label %4043, !prof !4

4043:                                             ; preds = %4039
  %4044 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %4045 = load i32, i32* %4044, align 8
  %4046 = add nsw i32 %4045, 1
  store i32 %4046, i32* %4044, align 8
  %4047 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %4048 = load i32, i32* %4047, align 8
  %4049 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %4050 = bitcast i8** %4049 to i64*
  %4051 = load i64, i64* %4050, align 8
  %4052 = sub i64 %4036, %4051
  %4053 = trunc i64 %4052 to i32
  %4054 = xor i8 %4020, 1
  %4055 = zext i8 %4054 to i32
  %4056 = ashr i32 %4053, %4055
  %4057 = add i32 %4048, 1
  %4058 = add i32 %4057, %4056
  %4059 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %4058, i32* %4059, align 4
  br label %4060

4060:                                             ; preds = %4043, %4039, %4034
  %4061 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %4062 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %4063 = load i8*, i8** %4062, align 8
  %4064 = icmp ult i8* %4035, %4063
  br i1 %4064, label %4065, label %4070, !prof !3

4065:                                             ; preds = %4060
  br i1 %4021, label %4068, label %4066

4066:                                             ; preds = %4065
  %4067 = getelementptr inbounds i8, i8* %4035, i64 1
  store i8* %4067, i8** %4061, align 8
  br label %4072

4068:                                             ; preds = %4065
  %4069 = getelementptr inbounds i8, i8* %4035, i64 2
  store i8* %4069, i8** %4061, align 8
  br label %4072

4070:                                             ; preds = %4060
  %4071 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %4072

4072:                                             ; preds = %4070, %4068, %4066
  %4073 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4074 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4073, i64 0, i32 0
  %4075 = load i32, i32* %4074, align 8
  %4076 = icmp eq i32 %4075, 5
  br i1 %4076, label %14210, label %4077

4077:                                             ; preds = %4072
  call void @_ZN5blink9HTMLToken11BeginEndTagERK13LiteralBufferIhLj32EE(%"class.blink::HTMLToken"* %4073, %class.LiteralBuffer.7* dereferenceable(56) %18) #11
  %4078 = load i64, i64* %22, align 8
  store i64 %4078, i64* %20, align 8
  %4079 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %4080 = bitcast %class.LiteralBuffer.0* %4079 to i64*
  %4081 = load i64, i64* %4080, align 8
  %4082 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  %4083 = bitcast i16** %4082 to i64*
  store i64 %4081, i64* %4083, align 8
  %4084 = bitcast %class.LiteralBuffer.7* %4007 to i64*
  %4085 = load i64, i64* %4084, align 8
  %4086 = bitcast i8** %4010 to i64*
  store i64 %4085, i64* %4086, align 8
  %4087 = load i8, i8* %44, align 1, !range !2
  %4088 = icmp eq i8 %4087, 0
  br i1 %4088, label %4089, label %4107

4089:                                             ; preds = %4077
  %4090 = load i8, i8* %49, align 1, !range !2
  %4091 = icmp eq i8 %4090, 0
  br i1 %4091, label %4096, label %4092

4092:                                             ; preds = %4089
  %4093 = load i8*, i8** %4061, align 8
  %4094 = load i8, i8* %4093, align 1
  %4095 = zext i8 %4094 to i16
  br label %4100

4096:                                             ; preds = %4089
  %4097 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %4098 = load i16*, i16** %4097, align 8
  %4099 = load i16, i16* %4098, align 2
  br label %4100

4100:                                             ; preds = %4096, %4092
  %4101 = phi i16 [ %4095, %4092 ], [ %4099, %4096 ]
  store i16 %4101, i16* %14, align 2
  %4102 = icmp ugt i16 %4101, 15
  br i1 %4102, label %4103, label %4105

4103:                                             ; preds = %4100
  %4104 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %4104, align 8
  br label %8954

4105:                                             ; preds = %4100
  %4106 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %4106, label %8952, label %4107

4107:                                             ; preds = %4077, %4105
  %4108 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4109 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4108, i64 0, i32 0
  %4110 = load i32, i32* %4109, align 8
  %4111 = icmp eq i32 %4110, 5
  br label %14210

4112:                                             ; preds = %3894
  %4113 = call zeroext i1 @_ZN5blink13HTMLTokenizer19IsAppropriateEndTagEv(%"class.blink::HTMLTokenizer"* %0)
  br i1 %4113, label %4114, label %4195

4114:                                             ; preds = %4112
  %4115 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %4116 = load i16, i16* %14, align 2
  %4117 = trunc i16 %4116 to i8
  %4118 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %4119 = load i8*, i8** %4118, align 8
  %4120 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 2
  %4121 = load i8*, i8** %4120, align 8
  %4122 = icmp eq i8* %4119, %4121
  br i1 %4122, label %4123, label %4125, !prof !4

4123:                                             ; preds = %4114
  %4124 = call i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7* %4115) #11
  store i8* %4124, i8** %4118, align 8
  br label %4125

4125:                                             ; preds = %4114, %4123
  %4126 = phi i8* [ %4124, %4123 ], [ %4119, %4114 ]
  %4127 = getelementptr inbounds i8, i8* %4126, i64 1
  store i8* %4127, i8** %4118, align 8
  store i8 %4117, i8* %4126, align 1
  store i32 0, i32* %74, align 8
  %4128 = load i8, i8* %49, align 1, !range !2
  %4129 = icmp eq i8 %4128, 0
  br i1 %4129, label %4136, label %4130

4130:                                             ; preds = %4125
  %4131 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %4132 = load i8*, i8** %4131, align 8
  %4133 = load i8, i8* %4132, align 1
  %4134 = zext i8 %4133 to i16
  %4135 = ptrtoint i8* %4132 to i64
  br label %4142

4136:                                             ; preds = %4125
  %4137 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %4138 = load i16*, i16** %4137, align 8
  %4139 = load i16, i16* %4138, align 2
  %4140 = ptrtoint i16* %4138 to i64
  %4141 = bitcast i16* %4138 to i8*
  br label %4142

4142:                                             ; preds = %4136, %4130
  %4143 = phi i8* [ %4132, %4130 ], [ %4141, %4136 ]
  %4144 = phi i64 [ %4135, %4130 ], [ %4140, %4136 ]
  %4145 = phi i16 [ %4134, %4130 ], [ %4139, %4136 ]
  %4146 = icmp eq i16 %4145, 10
  br i1 %4146, label %4147, label %4168

4147:                                             ; preds = %4142
  %4148 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %4149 = load i8, i8* %4148, align 8, !range !2
  %4150 = icmp eq i8 %4149, 0
  br i1 %4150, label %4168, label %4151, !prof !4

4151:                                             ; preds = %4147
  %4152 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %4153 = load i32, i32* %4152, align 8
  %4154 = add nsw i32 %4153, 1
  store i32 %4154, i32* %4152, align 8
  %4155 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %4156 = load i32, i32* %4155, align 8
  %4157 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %4158 = bitcast i8** %4157 to i64*
  %4159 = load i64, i64* %4158, align 8
  %4160 = sub i64 %4144, %4159
  %4161 = trunc i64 %4160 to i32
  %4162 = xor i8 %4128, 1
  %4163 = zext i8 %4162 to i32
  %4164 = ashr i32 %4161, %4163
  %4165 = add i32 %4156, 1
  %4166 = add i32 %4165, %4164
  %4167 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %4166, i32* %4167, align 4
  br label %4168

4168:                                             ; preds = %4151, %4147, %4142
  %4169 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %4170 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %4171 = load i8*, i8** %4170, align 8
  %4172 = icmp ult i8* %4143, %4171
  br i1 %4172, label %4173, label %4178, !prof !3

4173:                                             ; preds = %4168
  br i1 %4129, label %4176, label %4174

4174:                                             ; preds = %4173
  %4175 = getelementptr inbounds i8, i8* %4143, i64 1
  store i8* %4175, i8** %4169, align 8
  br label %4180

4176:                                             ; preds = %4173
  %4177 = getelementptr inbounds i8, i8* %4143, i64 2
  store i8* %4177, i8** %4169, align 8
  br label %4180

4178:                                             ; preds = %4168
  %4179 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %4180

4180:                                             ; preds = %4178, %4176, %4174
  %4181 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4182 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4181, i64 0, i32 0
  %4183 = load i32, i32* %4182, align 8
  %4184 = icmp eq i32 %4183, 5
  br i1 %4184, label %14210, label %4185

4185:                                             ; preds = %4180
  call void @_ZN5blink9HTMLToken11BeginEndTagERK13LiteralBufferIhLj32EE(%"class.blink::HTMLToken"* %4181, %class.LiteralBuffer.7* dereferenceable(56) %18) #11
  %4186 = load i64, i64* %22, align 8
  store i64 %4186, i64* %20, align 8
  %4187 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %4188 = bitcast %class.LiteralBuffer.0* %4187 to i64*
  %4189 = load i64, i64* %4188, align 8
  %4190 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  %4191 = bitcast i16** %4190 to i64*
  store i64 %4189, i64* %4191, align 8
  %4192 = bitcast %class.LiteralBuffer.7* %4115 to i64*
  %4193 = load i64, i64* %4192, align 8
  %4194 = bitcast i8** %4118 to i64*
  store i64 %4193, i64* %4194, align 8
  br label %14210

4195:                                             ; preds = %3894, %4004, %4112, %3896
  %4196 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4197 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4196, i64 0, i32 0
  store i32 5, i32* %4197, align 8
  %4198 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4199 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4198, i64 0, i32 3, i32 1
  %4200 = load i16*, i16** %4199, align 8
  %4201 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4198, i64 0, i32 3, i32 2
  %4202 = load i16*, i16** %4201, align 8
  %4203 = icmp eq i16* %4200, %4202
  br i1 %4203, label %4204, label %4207, !prof !4

4204:                                             ; preds = %4195
  %4205 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4198, i64 0, i32 3
  %4206 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %4205) #11
  store i16* %4206, i16** %4199, align 8
  br label %4207

4207:                                             ; preds = %4195, %4204
  %4208 = phi i16* [ %4206, %4204 ], [ %4200, %4195 ]
  %4209 = getelementptr inbounds i16, i16* %4208, i64 1
  store i16* %4209, i16** %4199, align 8
  store i16 60, i16* %4208, align 2
  %4210 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4198, i64 0, i32 4
  %4211 = load i16, i16* %4210, align 8
  %4212 = or i16 %4211, 60
  store i16 %4212, i16* %4210, align 8
  %4213 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4214 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4213, i64 0, i32 0
  store i32 5, i32* %4214, align 8
  %4215 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4216 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4215, i64 0, i32 3, i32 1
  %4217 = load i16*, i16** %4216, align 8
  %4218 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4215, i64 0, i32 3, i32 2
  %4219 = load i16*, i16** %4218, align 8
  %4220 = icmp eq i16* %4217, %4219
  br i1 %4220, label %4221, label %4224, !prof !4

4221:                                             ; preds = %4207
  %4222 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4215, i64 0, i32 3
  %4223 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %4222) #11
  store i16* %4223, i16** %4216, align 8
  br label %4224

4224:                                             ; preds = %4207, %4221
  %4225 = phi i16* [ %4223, %4221 ], [ %4217, %4207 ]
  %4226 = getelementptr inbounds i16, i16* %4225, i64 1
  store i16* %4226, i16** %4216, align 8
  store i16 47, i16* %4225, align 2
  %4227 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4215, i64 0, i32 4
  %4228 = load i16, i16* %4227, align 8
  %4229 = or i16 %4228, 47
  store i16 %4229, i16* %4227, align 8
  %4230 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4231 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %4232 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4230, i64 0, i32 3
  %4233 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %4234 = bitcast i8** %4233 to i64*
  %4235 = load i64, i64* %4234, align 8
  %4236 = bitcast %class.LiteralBuffer.7* %4231 to i64*
  %4237 = load i64, i64* %4236, align 8
  %4238 = sub i64 %4235, %4237
  %4239 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4230, i64 0, i32 3, i32 1
  %4240 = bitcast i16** %4239 to i64*
  %4241 = load i64, i64* %4240, align 8
  %4242 = bitcast %class.LiteralBuffer* %4232 to i64*
  %4243 = load i64, i64* %4242, align 8
  %4244 = sub i64 %4241, %4243
  %4245 = ashr exact i64 %4244, 1
  %4246 = add i64 %4245, %4238
  %4247 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4230, i64 0, i32 3, i32 2
  %4248 = bitcast i16** %4247 to i64*
  %4249 = load i64, i64* %4248, align 8
  %4250 = sub i64 %4249, %4243
  %4251 = ashr exact i64 %4250, 1
  %4252 = icmp ult i64 %4251, %4246
  %4253 = inttoptr i64 %4237 to i8*
  %4254 = inttoptr i64 %4241 to i16*
  br i1 %4252, label %4255, label %4260

4255:                                             ; preds = %4224
  %4256 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEm(%class.LiteralBuffer* %4232, i64 %4246) #11
  %4257 = getelementptr inbounds %class.LiteralBuffer.7, %class.LiteralBuffer.7* %4231, i64 0, i32 0
  %4258 = load i8*, i8** %4257, align 8
  %4259 = load i16*, i16** %4239, align 8
  br label %4260

4260:                                             ; preds = %4255, %4224
  %4261 = phi i16* [ %4259, %4255 ], [ %4254, %4224 ]
  %4262 = phi i8* [ %4258, %4255 ], [ %4253, %4224 ]
  %4263 = bitcast i16* %4261 to i8*
  %4264 = getelementptr inbounds i8, i8* %4262, i64 %4238
  %4265 = icmp eq i64 %4238, 0
  br i1 %4265, label %4347, label %4266

4266:                                             ; preds = %4260
  %4267 = icmp ult i64 %4238, 16
  br i1 %4267, label %4334, label %4268

4268:                                             ; preds = %4266
  %4269 = getelementptr i16, i16* %4261, i64 %4238
  %4270 = bitcast i16* %4269 to i8*
  %4271 = icmp ugt i8* %4264, %4263
  %4272 = icmp ult i8* %4262, %4270
  %4273 = and i1 %4271, %4272
  br i1 %4273, label %4334, label %4274

4274:                                             ; preds = %4268
  %4275 = and i64 %4238, -16
  %4276 = getelementptr i16, i16* %4261, i64 %4275
  %4277 = getelementptr i8, i8* %4262, i64 %4275
  %4278 = add i64 %4275, -16
  %4279 = lshr exact i64 %4278, 4
  %4280 = add nuw nsw i64 %4279, 1
  %4281 = and i64 %4280, 1
  %4282 = icmp eq i64 %4278, 0
  br i1 %4282, label %4316, label %4283

4283:                                             ; preds = %4274
  %4284 = sub nuw nsw i64 %4280, %4281
  br label %4285

4285:                                             ; preds = %4285, %4283
  %4286 = phi i64 [ 0, %4283 ], [ %4313, %4285 ]
  %4287 = phi i64 [ %4284, %4283 ], [ %4314, %4285 ]
  %4288 = getelementptr i16, i16* %4261, i64 %4286
  %4289 = getelementptr i8, i8* %4262, i64 %4286
  %4290 = bitcast i8* %4289 to <8 x i8>*
  %4291 = load <8 x i8>, <8 x i8>* %4290, align 1, !alias.scope !20
  %4292 = getelementptr i8, i8* %4289, i64 8
  %4293 = bitcast i8* %4292 to <8 x i8>*
  %4294 = load <8 x i8>, <8 x i8>* %4293, align 1, !alias.scope !20
  %4295 = zext <8 x i8> %4291 to <8 x i16>
  %4296 = zext <8 x i8> %4294 to <8 x i16>
  %4297 = bitcast i16* %4288 to <8 x i16>*
  store <8 x i16> %4295, <8 x i16>* %4297, align 2, !alias.scope !23, !noalias !20
  %4298 = getelementptr i16, i16* %4288, i64 8
  %4299 = bitcast i16* %4298 to <8 x i16>*
  store <8 x i16> %4296, <8 x i16>* %4299, align 2, !alias.scope !23, !noalias !20
  %4300 = or i64 %4286, 16
  %4301 = getelementptr i16, i16* %4261, i64 %4300
  %4302 = getelementptr i8, i8* %4262, i64 %4300
  %4303 = bitcast i8* %4302 to <8 x i8>*
  %4304 = load <8 x i8>, <8 x i8>* %4303, align 1, !alias.scope !20
  %4305 = getelementptr i8, i8* %4302, i64 8
  %4306 = bitcast i8* %4305 to <8 x i8>*
  %4307 = load <8 x i8>, <8 x i8>* %4306, align 1, !alias.scope !20
  %4308 = zext <8 x i8> %4304 to <8 x i16>
  %4309 = zext <8 x i8> %4307 to <8 x i16>
  %4310 = bitcast i16* %4301 to <8 x i16>*
  store <8 x i16> %4308, <8 x i16>* %4310, align 2, !alias.scope !23, !noalias !20
  %4311 = getelementptr i16, i16* %4301, i64 8
  %4312 = bitcast i16* %4311 to <8 x i16>*
  store <8 x i16> %4309, <8 x i16>* %4312, align 2, !alias.scope !23, !noalias !20
  %4313 = add i64 %4286, 32
  %4314 = add i64 %4287, -2
  %4315 = icmp eq i64 %4314, 0
  br i1 %4315, label %4316, label %4285, !llvm.loop !25

4316:                                             ; preds = %4285, %4274
  %4317 = phi i64 [ 0, %4274 ], [ %4313, %4285 ]
  %4318 = icmp eq i64 %4281, 0
  br i1 %4318, label %4332, label %4319

4319:                                             ; preds = %4316
  %4320 = getelementptr i16, i16* %4261, i64 %4317
  %4321 = getelementptr i8, i8* %4262, i64 %4317
  %4322 = bitcast i8* %4321 to <8 x i8>*
  %4323 = load <8 x i8>, <8 x i8>* %4322, align 1, !alias.scope !20
  %4324 = getelementptr i8, i8* %4321, i64 8
  %4325 = bitcast i8* %4324 to <8 x i8>*
  %4326 = load <8 x i8>, <8 x i8>* %4325, align 1, !alias.scope !20
  %4327 = zext <8 x i8> %4323 to <8 x i16>
  %4328 = zext <8 x i8> %4326 to <8 x i16>
  %4329 = bitcast i16* %4320 to <8 x i16>*
  store <8 x i16> %4327, <8 x i16>* %4329, align 2, !alias.scope !23, !noalias !20
  %4330 = getelementptr i16, i16* %4320, i64 8
  %4331 = bitcast i16* %4330 to <8 x i16>*
  store <8 x i16> %4328, <8 x i16>* %4331, align 2, !alias.scope !23, !noalias !20
  br label %4332

4332:                                             ; preds = %4316, %4319
  %4333 = icmp eq i64 %4238, %4275
  br i1 %4333, label %4345, label %4334

4334:                                             ; preds = %4332, %4268, %4266
  %4335 = phi i16* [ %4261, %4268 ], [ %4261, %4266 ], [ %4276, %4332 ]
  %4336 = phi i8* [ %4262, %4268 ], [ %4262, %4266 ], [ %4277, %4332 ]
  br label %4337

4337:                                             ; preds = %4334, %4337
  %4338 = phi i16* [ %4343, %4337 ], [ %4335, %4334 ]
  %4339 = phi i8* [ %4342, %4337 ], [ %4336, %4334 ]
  %4340 = load i8, i8* %4339, align 1
  %4341 = zext i8 %4340 to i16
  store i16 %4341, i16* %4338, align 2
  %4342 = getelementptr inbounds i8, i8* %4339, i64 1
  %4343 = getelementptr inbounds i16, i16* %4338, i64 1
  %4344 = icmp eq i8* %4342, %4264
  br i1 %4344, label %4345, label %4337, !llvm.loop !26

4345:                                             ; preds = %4337, %4332
  %4346 = load i16*, i16** %4239, align 8
  br label %4347

4347:                                             ; preds = %4260, %4345
  %4348 = phi i16* [ %4346, %4345 ], [ %4261, %4260 ]
  %4349 = getelementptr inbounds i16, i16* %4348, i64 %4238
  store i16* %4349, i16** %4239, align 8
  %4350 = load i64, i64* %22, align 8
  store i64 %4350, i64* %20, align 8
  %4351 = load i64, i64* %4236, align 8
  store i64 %4351, i64* %4234, align 8
  store i32 5, i32* %74, align 8
  br label %1207

4352:                                             ; preds = %3718, %73
  %4353 = load i16, i16* %14, align 2
  br label %4354

4354:                                             ; preds = %4352, %3713
  %4355 = phi i16 [ %4353, %4352 ], [ %3711, %3713 ]
  %4356 = icmp eq i16 %4355, 45
  br i1 %4356, label %4357, label %4408

4357:                                             ; preds = %4354
  %4358 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4359 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4358, i64 0, i32 0
  store i32 5, i32* %4359, align 8
  %4360 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4361 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4360, i64 0, i32 3, i32 1
  %4362 = load i16*, i16** %4361, align 8
  %4363 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4360, i64 0, i32 3, i32 2
  %4364 = load i16*, i16** %4363, align 8
  %4365 = icmp eq i16* %4362, %4364
  br i1 %4365, label %4366, label %4369, !prof !4

4366:                                             ; preds = %4357
  %4367 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4360, i64 0, i32 3
  %4368 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %4367) #11
  store i16* %4368, i16** %4361, align 8
  br label %4369

4369:                                             ; preds = %4357, %4366
  %4370 = phi i16* [ %4368, %4366 ], [ %4362, %4357 ]
  %4371 = getelementptr inbounds i16, i16* %4370, i64 1
  store i16* %4371, i16** %4361, align 8
  store i16 45, i16* %4370, align 2
  %4372 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4360, i64 0, i32 4
  %4373 = load i16, i16* %4372, align 8
  %4374 = or i16 %4373, 45
  store i16 %4374, i16* %4372, align 8
  store i32 20, i32* %74, align 8
  %4375 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %4376 = load i8*, i8** %4375, align 8
  %4377 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %4378 = load i8*, i8** %4377, align 8
  %4379 = icmp ult i8* %4376, %4378
  br i1 %4379, label %4380, label %4391, !prof !3

4380:                                             ; preds = %4369
  %4381 = load i8, i8* %49, align 1, !range !2
  %4382 = icmp eq i8 %4381, 0
  br i1 %4382, label %4387, label %4383

4383:                                             ; preds = %4380
  %4384 = getelementptr inbounds i8, i8* %4376, i64 1
  store i8* %4384, i8** %4375, align 8
  %4385 = load i8, i8* %4384, align 1
  %4386 = zext i8 %4385 to i16
  br label %4393

4387:                                             ; preds = %4380
  %4388 = getelementptr inbounds i8, i8* %4376, i64 2
  %4389 = bitcast i8* %4388 to i16*
  store i8* %4388, i8** %4375, align 8
  %4390 = load i16, i16* %4389, align 2
  br label %4393

4391:                                             ; preds = %4369
  %4392 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %4393

4393:                                             ; preds = %4391, %4387, %4383
  %4394 = phi i16 [ %4392, %4391 ], [ %4386, %4383 ], [ %4390, %4387 ]
  store i16 %4394, i16* %14, align 2
  %4395 = icmp ugt i16 %4394, 15
  br i1 %4395, label %4396, label %4398

4396:                                             ; preds = %4393
  %4397 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %4397, align 8
  br label %4411

4398:                                             ; preds = %4393
  %4399 = load i8, i8* %44, align 1, !range !2
  %4400 = icmp eq i8 %4399, 0
  br i1 %4400, label %4401, label %4403

4401:                                             ; preds = %4398
  %4402 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %4402, label %4409, label %4403

4403:                                             ; preds = %4398, %4401
  %4404 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4405 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4404, i64 0, i32 0
  %4406 = load i32, i32* %4405, align 8
  %4407 = icmp eq i32 %4406, 5
  br label %14210

4408:                                             ; preds = %4354
  store i32 5, i32* %74, align 8
  br label %1209

4409:                                             ; preds = %4401, %73
  %4410 = load i16, i16* %14, align 2
  br label %4411

4411:                                             ; preds = %4409, %4396
  %4412 = phi i16 [ %4410, %4409 ], [ %4394, %4396 ]
  %4413 = icmp eq i16 %4412, 45
  br i1 %4413, label %4414, label %4465

4414:                                             ; preds = %4411
  %4415 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4416 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4415, i64 0, i32 0
  store i32 5, i32* %4416, align 8
  %4417 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4418 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4417, i64 0, i32 3, i32 1
  %4419 = load i16*, i16** %4418, align 8
  %4420 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4417, i64 0, i32 3, i32 2
  %4421 = load i16*, i16** %4420, align 8
  %4422 = icmp eq i16* %4419, %4421
  br i1 %4422, label %4423, label %4426, !prof !4

4423:                                             ; preds = %4414
  %4424 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4417, i64 0, i32 3
  %4425 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %4424) #11
  store i16* %4425, i16** %4418, align 8
  br label %4426

4426:                                             ; preds = %4414, %4423
  %4427 = phi i16* [ %4425, %4423 ], [ %4419, %4414 ]
  %4428 = getelementptr inbounds i16, i16* %4427, i64 1
  store i16* %4428, i16** %4418, align 8
  store i16 45, i16* %4427, align 2
  %4429 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4417, i64 0, i32 4
  %4430 = load i16, i16* %4429, align 8
  %4431 = or i16 %4430, 45
  store i16 %4431, i16* %4429, align 8
  store i32 23, i32* %74, align 8
  %4432 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %4433 = load i8*, i8** %4432, align 8
  %4434 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %4435 = load i8*, i8** %4434, align 8
  %4436 = icmp ult i8* %4433, %4435
  br i1 %4436, label %4437, label %4448, !prof !3

4437:                                             ; preds = %4426
  %4438 = load i8, i8* %49, align 1, !range !2
  %4439 = icmp eq i8 %4438, 0
  br i1 %4439, label %4444, label %4440

4440:                                             ; preds = %4437
  %4441 = getelementptr inbounds i8, i8* %4433, i64 1
  store i8* %4441, i8** %4432, align 8
  %4442 = load i8, i8* %4441, align 1
  %4443 = zext i8 %4442 to i16
  br label %4450

4444:                                             ; preds = %4437
  %4445 = getelementptr inbounds i8, i8* %4433, i64 2
  %4446 = bitcast i8* %4445 to i16*
  store i8* %4445, i8** %4432, align 8
  %4447 = load i16, i16* %4446, align 2
  br label %4450

4448:                                             ; preds = %4426
  %4449 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %4450

4450:                                             ; preds = %4448, %4444, %4440
  %4451 = phi i16 [ %4449, %4448 ], [ %4443, %4440 ], [ %4447, %4444 ]
  store i16 %4451, i16* %14, align 2
  %4452 = icmp ugt i16 %4451, 15
  br i1 %4452, label %4453, label %4455

4453:                                             ; preds = %4450
  %4454 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %4454, align 8
  br label %4821

4455:                                             ; preds = %4450
  %4456 = load i8, i8* %44, align 1, !range !2
  %4457 = icmp eq i8 %4456, 0
  br i1 %4457, label %4458, label %4460

4458:                                             ; preds = %4455
  %4459 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %4459, label %4819, label %4460

4460:                                             ; preds = %4455, %4458
  %4461 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4462 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4461, i64 0, i32 0
  %4463 = load i32, i32* %4462, align 8
  %4464 = icmp eq i32 %4463, 5
  br label %14210

4465:                                             ; preds = %4411
  store i32 5, i32* %74, align 8
  br label %1209

4466:                                             ; preds = %5183, %5276, %5805, %6071, %73, %4633, %4812, %5042, %5995, %6886
  %4467 = load i16, i16* %14, align 2
  br label %4468

4468:                                             ; preds = %4466, %4807, %5037, %5990, %6881
  %4469 = phi i16 [ %4805, %4807 ], [ %5035, %5037 ], [ %5988, %5990 ], [ %6879, %6881 ], [ %4467, %4466 ]
  %4470 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %4471 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %4472 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %4473 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %4474 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %4475 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %4476 = bitcast i8** %4475 to i64*
  %4477 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  %4478 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %4479 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  br label %4480

4480:                                             ; preds = %4468, %4629
  %4481 = phi i16 [ %4627, %4629 ], [ %4469, %4468 ]
  switch i16 %4481, label %4562 [
    i16 45, label %4482
    i16 60, label %4530
    i16 0, label %4561
  ]

4482:                                             ; preds = %4480
  %4483 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4484 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4483, i64 0, i32 0
  store i32 5, i32* %4484, align 8
  %4485 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4486 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4485, i64 0, i32 3, i32 1
  %4487 = load i16*, i16** %4486, align 8
  %4488 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4485, i64 0, i32 3, i32 2
  %4489 = load i16*, i16** %4488, align 8
  %4490 = icmp eq i16* %4487, %4489
  br i1 %4490, label %4491, label %4494, !prof !4

4491:                                             ; preds = %4482
  %4492 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4485, i64 0, i32 3
  %4493 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %4492) #11
  store i16* %4493, i16** %4486, align 8
  br label %4494

4494:                                             ; preds = %4482, %4491
  %4495 = phi i16* [ %4493, %4491 ], [ %4487, %4482 ]
  %4496 = getelementptr inbounds i16, i16* %4495, i64 1
  store i16* %4496, i16** %4486, align 8
  store i16 45, i16* %4495, align 2
  %4497 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4485, i64 0, i32 4
  %4498 = load i16, i16* %4497, align 8
  %4499 = or i16 %4498, 45
  store i16 %4499, i16* %4497, align 8
  store i32 22, i32* %74, align 8
  %4500 = load i8*, i8** %4470, align 8
  %4501 = load i8*, i8** %4478, align 8
  %4502 = icmp ult i8* %4500, %4501
  br i1 %4502, label %4503, label %4514, !prof !3

4503:                                             ; preds = %4494
  %4504 = load i8, i8* %49, align 1, !range !2
  %4505 = icmp eq i8 %4504, 0
  br i1 %4505, label %4510, label %4506

4506:                                             ; preds = %4503
  %4507 = getelementptr inbounds i8, i8* %4500, i64 1
  store i8* %4507, i8** %4470, align 8
  %4508 = load i8, i8* %4507, align 1
  %4509 = zext i8 %4508 to i16
  br label %4516

4510:                                             ; preds = %4503
  %4511 = getelementptr inbounds i8, i8* %4500, i64 2
  %4512 = bitcast i8* %4511 to i16*
  store i8* %4511, i8** %4470, align 8
  %4513 = load i16, i16* %4512, align 2
  br label %4516

4514:                                             ; preds = %4494
  %4515 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %4516

4516:                                             ; preds = %4514, %4510, %4506
  %4517 = phi i16 [ %4515, %4514 ], [ %4509, %4506 ], [ %4513, %4510 ]
  store i16 %4517, i16* %14, align 2
  %4518 = icmp ugt i16 %4517, 15
  br i1 %4518, label %4519, label %4520

4519:                                             ; preds = %4516
  store i8 0, i8* %4479, align 8
  br label %4642

4520:                                             ; preds = %4516
  %4521 = load i8, i8* %44, align 1, !range !2
  %4522 = icmp eq i8 %4521, 0
  br i1 %4522, label %4523, label %4525

4523:                                             ; preds = %4520
  %4524 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %4524, label %4640, label %4525

4525:                                             ; preds = %4520, %4523
  %4526 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4527 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4526, i64 0, i32 0
  %4528 = load i32, i32* %4527, align 8
  %4529 = icmp eq i32 %4528, 5
  br label %14210

4530:                                             ; preds = %4480
  store i32 24, i32* %74, align 8
  %4531 = load i8*, i8** %4470, align 8
  %4532 = load i8*, i8** %4478, align 8
  %4533 = icmp ult i8* %4531, %4532
  br i1 %4533, label %4534, label %4545, !prof !3

4534:                                             ; preds = %4530
  %4535 = load i8, i8* %49, align 1, !range !2
  %4536 = icmp eq i8 %4535, 0
  br i1 %4536, label %4541, label %4537

4537:                                             ; preds = %4534
  %4538 = getelementptr inbounds i8, i8* %4531, i64 1
  store i8* %4538, i8** %4470, align 8
  %4539 = load i8, i8* %4538, align 1
  %4540 = zext i8 %4539 to i16
  br label %4547

4541:                                             ; preds = %4534
  %4542 = getelementptr inbounds i8, i8* %4531, i64 2
  %4543 = bitcast i8* %4542 to i16*
  store i8* %4542, i8** %4470, align 8
  %4544 = load i16, i16* %4543, align 2
  br label %4547

4545:                                             ; preds = %4530
  %4546 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %4547

4547:                                             ; preds = %4545, %4541, %4537
  %4548 = phi i16 [ %4546, %4545 ], [ %4540, %4537 ], [ %4544, %4541 ]
  store i16 %4548, i16* %14, align 2
  %4549 = icmp ugt i16 %4548, 15
  br i1 %4549, label %4550, label %4551

4550:                                             ; preds = %4547
  store i8 0, i8* %4479, align 8
  br label %5051

4551:                                             ; preds = %4547
  %4552 = load i8, i8* %44, align 1, !range !2
  %4553 = icmp eq i8 %4552, 0
  br i1 %4553, label %4554, label %4556

4554:                                             ; preds = %4551
  %4555 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %4555, label %5049, label %4556

4556:                                             ; preds = %4551, %4554
  %4557 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4558 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4557, i64 0, i32 0
  %4559 = load i32, i32* %4558, align 8
  %4560 = icmp eq i32 %4559, 5
  br label %14210

4561:                                             ; preds = %4480
  store i32 0, i32* %74, align 8
  br label %78

4562:                                             ; preds = %4480
  %4563 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4564 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4563, i64 0, i32 0
  store i32 5, i32* %4564, align 8
  %4565 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4566 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4565, i64 0, i32 3, i32 1
  %4567 = load i16*, i16** %4566, align 8
  %4568 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4565, i64 0, i32 3, i32 2
  %4569 = load i16*, i16** %4568, align 8
  %4570 = icmp eq i16* %4567, %4569
  br i1 %4570, label %4571, label %4574, !prof !4

4571:                                             ; preds = %4562
  %4572 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4565, i64 0, i32 3
  %4573 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %4572) #11
  store i16* %4573, i16** %4566, align 8
  br label %4574

4574:                                             ; preds = %4562, %4571
  %4575 = phi i16* [ %4573, %4571 ], [ %4567, %4562 ]
  %4576 = getelementptr inbounds i16, i16* %4575, i64 1
  store i16* %4576, i16** %4566, align 8
  store i16 %4481, i16* %4575, align 2
  %4577 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4565, i64 0, i32 4
  %4578 = load i16, i16* %4577, align 8
  %4579 = or i16 %4578, %4481
  store i16 %4579, i16* %4577, align 8
  %4580 = load i8, i8* %49, align 1, !range !2
  %4581 = icmp eq i8 %4580, 0
  br i1 %4581, label %4587, label %4582

4582:                                             ; preds = %4574
  %4583 = load i8*, i8** %4470, align 8
  %4584 = load i8, i8* %4583, align 1
  %4585 = zext i8 %4584 to i16
  %4586 = ptrtoint i8* %4583 to i64
  br label %4592

4587:                                             ; preds = %4574
  %4588 = load i16*, i16** %4471, align 8
  %4589 = load i16, i16* %4588, align 2
  %4590 = ptrtoint i16* %4588 to i64
  %4591 = bitcast i16* %4588 to i8*
  br label %4592

4592:                                             ; preds = %4587, %4582
  %4593 = phi i8* [ %4583, %4582 ], [ %4591, %4587 ]
  %4594 = phi i64 [ %4586, %4582 ], [ %4590, %4587 ]
  %4595 = phi i16 [ %4585, %4582 ], [ %4589, %4587 ]
  %4596 = icmp eq i16 %4595, 10
  br i1 %4596, label %4597, label %4612

4597:                                             ; preds = %4592
  %4598 = load i8, i8* %4472, align 8, !range !2
  %4599 = icmp eq i8 %4598, 0
  br i1 %4599, label %4612, label %4600, !prof !4

4600:                                             ; preds = %4597
  %4601 = load i32, i32* %4473, align 8
  %4602 = add nsw i32 %4601, 1
  store i32 %4602, i32* %4473, align 8
  %4603 = load i32, i32* %4474, align 8
  %4604 = load i64, i64* %4476, align 8
  %4605 = sub i64 %4594, %4604
  %4606 = trunc i64 %4605 to i32
  %4607 = xor i8 %4580, 1
  %4608 = zext i8 %4607 to i32
  %4609 = ashr i32 %4606, %4608
  %4610 = add i32 %4603, 1
  %4611 = add i32 %4610, %4609
  store i32 %4611, i32* %4477, align 4
  br label %4612

4612:                                             ; preds = %4600, %4597, %4592
  %4613 = load i8*, i8** %4478, align 8
  %4614 = icmp ult i8* %4593, %4613
  br i1 %4614, label %4615, label %4624, !prof !3

4615:                                             ; preds = %4612
  br i1 %4581, label %4620, label %4616

4616:                                             ; preds = %4615
  %4617 = getelementptr inbounds i8, i8* %4593, i64 1
  store i8* %4617, i8** %4470, align 8
  %4618 = load i8, i8* %4617, align 1
  %4619 = zext i8 %4618 to i16
  br label %4626

4620:                                             ; preds = %4615
  %4621 = getelementptr inbounds i8, i8* %4593, i64 2
  %4622 = bitcast i8* %4621 to i16*
  store i8* %4621, i8** %4470, align 8
  %4623 = load i16, i16* %4622, align 2
  br label %4626

4624:                                             ; preds = %4612
  %4625 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %4626

4626:                                             ; preds = %4624, %4620, %4616
  %4627 = phi i16 [ %4625, %4624 ], [ %4619, %4616 ], [ %4623, %4620 ]
  store i16 %4627, i16* %14, align 2
  %4628 = icmp ugt i16 %4627, 15
  br i1 %4628, label %4629, label %4630

4629:                                             ; preds = %4626
  store i8 0, i8* %4479, align 8
  br label %4480

4630:                                             ; preds = %4626
  %4631 = load i8, i8* %44, align 1, !range !2
  %4632 = icmp eq i8 %4631, 0
  br i1 %4632, label %4633, label %4635

4633:                                             ; preds = %4630
  %4634 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %4634, label %4466, label %4635

4635:                                             ; preds = %4630, %4633
  %4636 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4637 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4636, i64 0, i32 0
  %4638 = load i32, i32* %4637, align 8
  %4639 = icmp eq i32 %4638, 5
  br label %14210

4640:                                             ; preds = %4523, %73
  %4641 = load i16, i16* %14, align 2
  br label %4642

4642:                                             ; preds = %4640, %4519
  %4643 = phi i16 [ %4641, %4640 ], [ %4517, %4519 ]
  switch i16 %4643, label %4730 [
    i16 45, label %4644
    i16 60, label %4695
    i16 0, label %4729
  ]

4644:                                             ; preds = %4642
  %4645 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4646 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4645, i64 0, i32 0
  store i32 5, i32* %4646, align 8
  %4647 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4648 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4647, i64 0, i32 3, i32 1
  %4649 = load i16*, i16** %4648, align 8
  %4650 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4647, i64 0, i32 3, i32 2
  %4651 = load i16*, i16** %4650, align 8
  %4652 = icmp eq i16* %4649, %4651
  br i1 %4652, label %4653, label %4656, !prof !4

4653:                                             ; preds = %4644
  %4654 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4647, i64 0, i32 3
  %4655 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %4654) #11
  store i16* %4655, i16** %4648, align 8
  br label %4656

4656:                                             ; preds = %4644, %4653
  %4657 = phi i16* [ %4655, %4653 ], [ %4649, %4644 ]
  %4658 = getelementptr inbounds i16, i16* %4657, i64 1
  store i16* %4658, i16** %4648, align 8
  store i16 45, i16* %4657, align 2
  %4659 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4647, i64 0, i32 4
  %4660 = load i16, i16* %4659, align 8
  %4661 = or i16 %4660, 45
  store i16 %4661, i16* %4659, align 8
  store i32 23, i32* %74, align 8
  %4662 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %4663 = load i8*, i8** %4662, align 8
  %4664 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %4665 = load i8*, i8** %4664, align 8
  %4666 = icmp ult i8* %4663, %4665
  br i1 %4666, label %4667, label %4678, !prof !3

4667:                                             ; preds = %4656
  %4668 = load i8, i8* %49, align 1, !range !2
  %4669 = icmp eq i8 %4668, 0
  br i1 %4669, label %4674, label %4670

4670:                                             ; preds = %4667
  %4671 = getelementptr inbounds i8, i8* %4663, i64 1
  store i8* %4671, i8** %4662, align 8
  %4672 = load i8, i8* %4671, align 1
  %4673 = zext i8 %4672 to i16
  br label %4680

4674:                                             ; preds = %4667
  %4675 = getelementptr inbounds i8, i8* %4663, i64 2
  %4676 = bitcast i8* %4675 to i16*
  store i8* %4675, i8** %4662, align 8
  %4677 = load i16, i16* %4676, align 2
  br label %4680

4678:                                             ; preds = %4656
  %4679 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %4680

4680:                                             ; preds = %4678, %4674, %4670
  %4681 = phi i16 [ %4679, %4678 ], [ %4673, %4670 ], [ %4677, %4674 ]
  store i16 %4681, i16* %14, align 2
  %4682 = icmp ugt i16 %4681, 15
  br i1 %4682, label %4683, label %4685

4683:                                             ; preds = %4680
  %4684 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %4684, align 8
  br label %4821

4685:                                             ; preds = %4680
  %4686 = load i8, i8* %44, align 1, !range !2
  %4687 = icmp eq i8 %4686, 0
  br i1 %4687, label %4688, label %4690

4688:                                             ; preds = %4685
  %4689 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %4689, label %4819, label %4690

4690:                                             ; preds = %4685, %4688
  %4691 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4692 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4691, i64 0, i32 0
  %4693 = load i32, i32* %4692, align 8
  %4694 = icmp eq i32 %4693, 5
  br label %14210

4695:                                             ; preds = %4642
  store i32 24, i32* %74, align 8
  %4696 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %4697 = load i8*, i8** %4696, align 8
  %4698 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %4699 = load i8*, i8** %4698, align 8
  %4700 = icmp ult i8* %4697, %4699
  br i1 %4700, label %4701, label %4712, !prof !3

4701:                                             ; preds = %4695
  %4702 = load i8, i8* %49, align 1, !range !2
  %4703 = icmp eq i8 %4702, 0
  br i1 %4703, label %4708, label %4704

4704:                                             ; preds = %4701
  %4705 = getelementptr inbounds i8, i8* %4697, i64 1
  store i8* %4705, i8** %4696, align 8
  %4706 = load i8, i8* %4705, align 1
  %4707 = zext i8 %4706 to i16
  br label %4714

4708:                                             ; preds = %4701
  %4709 = getelementptr inbounds i8, i8* %4697, i64 2
  %4710 = bitcast i8* %4709 to i16*
  store i8* %4709, i8** %4696, align 8
  %4711 = load i16, i16* %4710, align 2
  br label %4714

4712:                                             ; preds = %4695
  %4713 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %4714

4714:                                             ; preds = %4712, %4708, %4704
  %4715 = phi i16 [ %4713, %4712 ], [ %4707, %4704 ], [ %4711, %4708 ]
  store i16 %4715, i16* %14, align 2
  %4716 = icmp ugt i16 %4715, 15
  br i1 %4716, label %4717, label %4719

4717:                                             ; preds = %4714
  %4718 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %4718, align 8
  br label %5051

4719:                                             ; preds = %4714
  %4720 = load i8, i8* %44, align 1, !range !2
  %4721 = icmp eq i8 %4720, 0
  br i1 %4721, label %4722, label %4724

4722:                                             ; preds = %4719
  %4723 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %4723, label %5049, label %4724

4724:                                             ; preds = %4719, %4722
  %4725 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4726 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4725, i64 0, i32 0
  %4727 = load i32, i32* %4726, align 8
  %4728 = icmp eq i32 %4727, 5
  br label %14210

4729:                                             ; preds = %4642
  store i32 0, i32* %74, align 8
  br label %78

4730:                                             ; preds = %4642
  %4731 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4732 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4731, i64 0, i32 0
  store i32 5, i32* %4732, align 8
  %4733 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4734 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4733, i64 0, i32 3, i32 1
  %4735 = load i16*, i16** %4734, align 8
  %4736 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4733, i64 0, i32 3, i32 2
  %4737 = load i16*, i16** %4736, align 8
  %4738 = icmp eq i16* %4735, %4737
  br i1 %4738, label %4739, label %4742, !prof !4

4739:                                             ; preds = %4730
  %4740 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4733, i64 0, i32 3
  %4741 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %4740) #11
  store i16* %4741, i16** %4734, align 8
  br label %4742

4742:                                             ; preds = %4730, %4739
  %4743 = phi i16* [ %4741, %4739 ], [ %4735, %4730 ]
  %4744 = getelementptr inbounds i16, i16* %4743, i64 1
  store i16* %4744, i16** %4734, align 8
  store i16 %4643, i16* %4743, align 2
  %4745 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4733, i64 0, i32 4
  %4746 = load i16, i16* %4745, align 8
  %4747 = or i16 %4746, %4643
  store i16 %4747, i16* %4745, align 8
  store i32 21, i32* %74, align 8
  %4748 = load i8, i8* %49, align 1, !range !2
  %4749 = icmp eq i8 %4748, 0
  br i1 %4749, label %4756, label %4750

4750:                                             ; preds = %4742
  %4751 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %4752 = load i8*, i8** %4751, align 8
  %4753 = load i8, i8* %4752, align 1
  %4754 = zext i8 %4753 to i16
  %4755 = ptrtoint i8* %4752 to i64
  br label %4762

4756:                                             ; preds = %4742
  %4757 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %4758 = load i16*, i16** %4757, align 8
  %4759 = load i16, i16* %4758, align 2
  %4760 = ptrtoint i16* %4758 to i64
  %4761 = bitcast i16* %4758 to i8*
  br label %4762

4762:                                             ; preds = %4756, %4750
  %4763 = phi i8* [ %4752, %4750 ], [ %4761, %4756 ]
  %4764 = phi i64 [ %4755, %4750 ], [ %4760, %4756 ]
  %4765 = phi i16 [ %4754, %4750 ], [ %4759, %4756 ]
  %4766 = icmp eq i16 %4765, 10
  br i1 %4766, label %4767, label %4788

4767:                                             ; preds = %4762
  %4768 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %4769 = load i8, i8* %4768, align 8, !range !2
  %4770 = icmp eq i8 %4769, 0
  br i1 %4770, label %4788, label %4771, !prof !4

4771:                                             ; preds = %4767
  %4772 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %4773 = load i32, i32* %4772, align 8
  %4774 = add nsw i32 %4773, 1
  store i32 %4774, i32* %4772, align 8
  %4775 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %4776 = load i32, i32* %4775, align 8
  %4777 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %4778 = bitcast i8** %4777 to i64*
  %4779 = load i64, i64* %4778, align 8
  %4780 = sub i64 %4764, %4779
  %4781 = trunc i64 %4780 to i32
  %4782 = xor i8 %4748, 1
  %4783 = zext i8 %4782 to i32
  %4784 = ashr i32 %4781, %4783
  %4785 = add i32 %4776, 1
  %4786 = add i32 %4785, %4784
  %4787 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %4786, i32* %4787, align 4
  br label %4788

4788:                                             ; preds = %4771, %4767, %4762
  %4789 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %4790 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %4791 = load i8*, i8** %4790, align 8
  %4792 = icmp ult i8* %4763, %4791
  br i1 %4792, label %4793, label %4802, !prof !3

4793:                                             ; preds = %4788
  br i1 %4749, label %4798, label %4794

4794:                                             ; preds = %4793
  %4795 = getelementptr inbounds i8, i8* %4763, i64 1
  store i8* %4795, i8** %4789, align 8
  %4796 = load i8, i8* %4795, align 1
  %4797 = zext i8 %4796 to i16
  br label %4804

4798:                                             ; preds = %4793
  %4799 = getelementptr inbounds i8, i8* %4763, i64 2
  %4800 = bitcast i8* %4799 to i16*
  store i8* %4799, i8** %4789, align 8
  %4801 = load i16, i16* %4800, align 2
  br label %4804

4802:                                             ; preds = %4788
  %4803 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %4804

4804:                                             ; preds = %4802, %4798, %4794
  %4805 = phi i16 [ %4803, %4802 ], [ %4797, %4794 ], [ %4801, %4798 ]
  store i16 %4805, i16* %14, align 2
  %4806 = icmp ugt i16 %4805, 15
  br i1 %4806, label %4807, label %4809

4807:                                             ; preds = %4804
  %4808 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %4808, align 8
  br label %4468

4809:                                             ; preds = %4804
  %4810 = load i8, i8* %44, align 1, !range !2
  %4811 = icmp eq i8 %4810, 0
  br i1 %4811, label %4812, label %4814

4812:                                             ; preds = %4809
  %4813 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %4813, label %4466, label %4814

4814:                                             ; preds = %4809, %4812
  %4815 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4816 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4815, i64 0, i32 0
  %4817 = load i32, i32* %4816, align 8
  %4818 = icmp eq i32 %4817, 5
  br label %14210

4819:                                             ; preds = %4862, %4458, %4688, %73, %4867
  %4820 = load i16, i16* %14, align 2
  br label %4821

4821:                                             ; preds = %4683, %4453, %4819
  %4822 = phi i16 [ %4820, %4819 ], [ %4681, %4683 ], [ %4451, %4453 ]
  switch i16 %4822, label %4960 [
    i16 45, label %4823
    i16 60, label %4874
    i16 62, label %4908
    i16 0, label %4959
  ]

4823:                                             ; preds = %4821
  %4824 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4825 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4824, i64 0, i32 0
  store i32 5, i32* %4825, align 8
  %4826 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4827 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4826, i64 0, i32 3, i32 1
  %4828 = load i16*, i16** %4827, align 8
  %4829 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4826, i64 0, i32 3, i32 2
  %4830 = load i16*, i16** %4829, align 8
  %4831 = icmp eq i16* %4828, %4830
  br i1 %4831, label %4832, label %4835, !prof !4

4832:                                             ; preds = %4823
  %4833 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4826, i64 0, i32 3
  %4834 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %4833) #11
  store i16* %4834, i16** %4827, align 8
  br label %4835

4835:                                             ; preds = %4823, %4832
  %4836 = phi i16* [ %4834, %4832 ], [ %4828, %4823 ]
  %4837 = getelementptr inbounds i16, i16* %4836, i64 1
  store i16* %4837, i16** %4827, align 8
  store i16 45, i16* %4836, align 2
  %4838 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4826, i64 0, i32 4
  %4839 = load i16, i16* %4838, align 8
  %4840 = or i16 %4839, 45
  store i16 %4840, i16* %4838, align 8
  %4841 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %4842 = load i8*, i8** %4841, align 8
  %4843 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %4844 = load i8*, i8** %4843, align 8
  %4845 = icmp ult i8* %4842, %4844
  br i1 %4845, label %4846, label %4857, !prof !3

4846:                                             ; preds = %4835
  %4847 = load i8, i8* %49, align 1, !range !2
  %4848 = icmp eq i8 %4847, 0
  br i1 %4848, label %4853, label %4849

4849:                                             ; preds = %4846
  %4850 = getelementptr inbounds i8, i8* %4842, i64 1
  store i8* %4850, i8** %4841, align 8
  %4851 = load i8, i8* %4850, align 1
  %4852 = zext i8 %4851 to i16
  br label %4859

4853:                                             ; preds = %4846
  %4854 = getelementptr inbounds i8, i8* %4842, i64 2
  %4855 = bitcast i8* %4854 to i16*
  store i8* %4854, i8** %4841, align 8
  %4856 = load i16, i16* %4855, align 2
  br label %4859

4857:                                             ; preds = %4835
  %4858 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %4859

4859:                                             ; preds = %4857, %4853, %4849
  %4860 = phi i16 [ %4858, %4857 ], [ %4852, %4849 ], [ %4856, %4853 ]
  store i16 %4860, i16* %14, align 2
  %4861 = icmp ugt i16 %4860, 15
  br i1 %4861, label %4862, label %4864

4862:                                             ; preds = %4859
  %4863 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %4863, align 8
  br label %4819

4864:                                             ; preds = %4859
  %4865 = load i8, i8* %44, align 1, !range !2
  %4866 = icmp eq i8 %4865, 0
  br i1 %4866, label %4867, label %4869

4867:                                             ; preds = %4864
  %4868 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %4868, label %4819, label %4869

4869:                                             ; preds = %4864, %4867
  %4870 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4871 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4870, i64 0, i32 0
  %4872 = load i32, i32* %4871, align 8
  %4873 = icmp eq i32 %4872, 5
  br label %14210

4874:                                             ; preds = %4821
  store i32 24, i32* %74, align 8
  %4875 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %4876 = load i8*, i8** %4875, align 8
  %4877 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %4878 = load i8*, i8** %4877, align 8
  %4879 = icmp ult i8* %4876, %4878
  br i1 %4879, label %4880, label %4891, !prof !3

4880:                                             ; preds = %4874
  %4881 = load i8, i8* %49, align 1, !range !2
  %4882 = icmp eq i8 %4881, 0
  br i1 %4882, label %4887, label %4883

4883:                                             ; preds = %4880
  %4884 = getelementptr inbounds i8, i8* %4876, i64 1
  store i8* %4884, i8** %4875, align 8
  %4885 = load i8, i8* %4884, align 1
  %4886 = zext i8 %4885 to i16
  br label %4893

4887:                                             ; preds = %4880
  %4888 = getelementptr inbounds i8, i8* %4876, i64 2
  %4889 = bitcast i8* %4888 to i16*
  store i8* %4888, i8** %4875, align 8
  %4890 = load i16, i16* %4889, align 2
  br label %4893

4891:                                             ; preds = %4874
  %4892 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %4893

4893:                                             ; preds = %4891, %4887, %4883
  %4894 = phi i16 [ %4892, %4891 ], [ %4886, %4883 ], [ %4890, %4887 ]
  store i16 %4894, i16* %14, align 2
  %4895 = icmp ugt i16 %4894, 15
  br i1 %4895, label %4896, label %4898

4896:                                             ; preds = %4893
  %4897 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %4897, align 8
  br label %5051

4898:                                             ; preds = %4893
  %4899 = load i8, i8* %44, align 1, !range !2
  %4900 = icmp eq i8 %4899, 0
  br i1 %4900, label %4901, label %4903

4901:                                             ; preds = %4898
  %4902 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %4902, label %5049, label %4903

4903:                                             ; preds = %4898, %4901
  %4904 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4905 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4904, i64 0, i32 0
  %4906 = load i32, i32* %4905, align 8
  %4907 = icmp eq i32 %4906, 5
  br label %14210

4908:                                             ; preds = %4821
  %4909 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4910 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4909, i64 0, i32 0
  store i32 5, i32* %4910, align 8
  %4911 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4912 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4911, i64 0, i32 3, i32 1
  %4913 = load i16*, i16** %4912, align 8
  %4914 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4911, i64 0, i32 3, i32 2
  %4915 = load i16*, i16** %4914, align 8
  %4916 = icmp eq i16* %4913, %4915
  br i1 %4916, label %4917, label %4920, !prof !4

4917:                                             ; preds = %4908
  %4918 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4911, i64 0, i32 3
  %4919 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %4918) #11
  store i16* %4919, i16** %4912, align 8
  br label %4920

4920:                                             ; preds = %4908, %4917
  %4921 = phi i16* [ %4919, %4917 ], [ %4913, %4908 ]
  %4922 = getelementptr inbounds i16, i16* %4921, i64 1
  store i16* %4922, i16** %4912, align 8
  store i16 62, i16* %4921, align 2
  %4923 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4911, i64 0, i32 4
  %4924 = load i16, i16* %4923, align 8
  %4925 = or i16 %4924, 62
  store i16 %4925, i16* %4923, align 8
  store i32 5, i32* %74, align 8
  %4926 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %4927 = load i8*, i8** %4926, align 8
  %4928 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %4929 = load i8*, i8** %4928, align 8
  %4930 = icmp ult i8* %4927, %4929
  br i1 %4930, label %4931, label %4942, !prof !3

4931:                                             ; preds = %4920
  %4932 = load i8, i8* %49, align 1, !range !2
  %4933 = icmp eq i8 %4932, 0
  br i1 %4933, label %4938, label %4934

4934:                                             ; preds = %4931
  %4935 = getelementptr inbounds i8, i8* %4927, i64 1
  store i8* %4935, i8** %4926, align 8
  %4936 = load i8, i8* %4935, align 1
  %4937 = zext i8 %4936 to i16
  br label %4944

4938:                                             ; preds = %4931
  %4939 = getelementptr inbounds i8, i8* %4927, i64 2
  %4940 = bitcast i8* %4939 to i16*
  store i8* %4939, i8** %4926, align 8
  %4941 = load i16, i16* %4940, align 2
  br label %4944

4942:                                             ; preds = %4920
  %4943 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %4944

4944:                                             ; preds = %4942, %4938, %4934
  %4945 = phi i16 [ %4943, %4942 ], [ %4937, %4934 ], [ %4941, %4938 ]
  store i16 %4945, i16* %14, align 2
  %4946 = icmp ugt i16 %4945, 15
  br i1 %4946, label %4947, label %4949

4947:                                             ; preds = %4944
  %4948 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %4948, align 8
  br label %1207

4949:                                             ; preds = %4944
  %4950 = load i8, i8* %44, align 1, !range !2
  %4951 = icmp eq i8 %4950, 0
  br i1 %4951, label %4952, label %4954

4952:                                             ; preds = %4949
  %4953 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %4953, label %1207, label %4954

4954:                                             ; preds = %4949, %4952
  %4955 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4956 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4955, i64 0, i32 0
  %4957 = load i32, i32* %4956, align 8
  %4958 = icmp eq i32 %4957, 5
  br label %14210

4959:                                             ; preds = %4821
  store i32 0, i32* %74, align 8
  br label %78

4960:                                             ; preds = %4821
  %4961 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4962 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4961, i64 0, i32 0
  store i32 5, i32* %4962, align 8
  %4963 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %4964 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4963, i64 0, i32 3, i32 1
  %4965 = load i16*, i16** %4964, align 8
  %4966 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4963, i64 0, i32 3, i32 2
  %4967 = load i16*, i16** %4966, align 8
  %4968 = icmp eq i16* %4965, %4967
  br i1 %4968, label %4969, label %4972, !prof !4

4969:                                             ; preds = %4960
  %4970 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4963, i64 0, i32 3
  %4971 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %4970) #11
  store i16* %4971, i16** %4964, align 8
  br label %4972

4972:                                             ; preds = %4960, %4969
  %4973 = phi i16* [ %4971, %4969 ], [ %4965, %4960 ]
  %4974 = getelementptr inbounds i16, i16* %4973, i64 1
  store i16* %4974, i16** %4964, align 8
  store i16 %4822, i16* %4973, align 2
  %4975 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %4963, i64 0, i32 4
  %4976 = load i16, i16* %4975, align 8
  %4977 = or i16 %4976, %4822
  store i16 %4977, i16* %4975, align 8
  store i32 21, i32* %74, align 8
  %4978 = load i8, i8* %49, align 1, !range !2
  %4979 = icmp eq i8 %4978, 0
  br i1 %4979, label %4986, label %4980

4980:                                             ; preds = %4972
  %4981 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %4982 = load i8*, i8** %4981, align 8
  %4983 = load i8, i8* %4982, align 1
  %4984 = zext i8 %4983 to i16
  %4985 = ptrtoint i8* %4982 to i64
  br label %4992

4986:                                             ; preds = %4972
  %4987 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %4988 = load i16*, i16** %4987, align 8
  %4989 = load i16, i16* %4988, align 2
  %4990 = ptrtoint i16* %4988 to i64
  %4991 = bitcast i16* %4988 to i8*
  br label %4992

4992:                                             ; preds = %4986, %4980
  %4993 = phi i8* [ %4982, %4980 ], [ %4991, %4986 ]
  %4994 = phi i64 [ %4985, %4980 ], [ %4990, %4986 ]
  %4995 = phi i16 [ %4984, %4980 ], [ %4989, %4986 ]
  %4996 = icmp eq i16 %4995, 10
  br i1 %4996, label %4997, label %5018

4997:                                             ; preds = %4992
  %4998 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %4999 = load i8, i8* %4998, align 8, !range !2
  %5000 = icmp eq i8 %4999, 0
  br i1 %5000, label %5018, label %5001, !prof !4

5001:                                             ; preds = %4997
  %5002 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %5003 = load i32, i32* %5002, align 8
  %5004 = add nsw i32 %5003, 1
  store i32 %5004, i32* %5002, align 8
  %5005 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %5006 = load i32, i32* %5005, align 8
  %5007 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %5008 = bitcast i8** %5007 to i64*
  %5009 = load i64, i64* %5008, align 8
  %5010 = sub i64 %4994, %5009
  %5011 = trunc i64 %5010 to i32
  %5012 = xor i8 %4978, 1
  %5013 = zext i8 %5012 to i32
  %5014 = ashr i32 %5011, %5013
  %5015 = add i32 %5006, 1
  %5016 = add i32 %5015, %5014
  %5017 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %5016, i32* %5017, align 4
  br label %5018

5018:                                             ; preds = %5001, %4997, %4992
  %5019 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %5020 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %5021 = load i8*, i8** %5020, align 8
  %5022 = icmp ult i8* %4993, %5021
  br i1 %5022, label %5023, label %5032, !prof !3

5023:                                             ; preds = %5018
  br i1 %4979, label %5028, label %5024

5024:                                             ; preds = %5023
  %5025 = getelementptr inbounds i8, i8* %4993, i64 1
  store i8* %5025, i8** %5019, align 8
  %5026 = load i8, i8* %5025, align 1
  %5027 = zext i8 %5026 to i16
  br label %5034

5028:                                             ; preds = %5023
  %5029 = getelementptr inbounds i8, i8* %4993, i64 2
  %5030 = bitcast i8* %5029 to i16*
  store i8* %5029, i8** %5019, align 8
  %5031 = load i16, i16* %5030, align 2
  br label %5034

5032:                                             ; preds = %5018
  %5033 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %5034

5034:                                             ; preds = %5032, %5028, %5024
  %5035 = phi i16 [ %5033, %5032 ], [ %5027, %5024 ], [ %5031, %5028 ]
  store i16 %5035, i16* %14, align 2
  %5036 = icmp ugt i16 %5035, 15
  br i1 %5036, label %5037, label %5039

5037:                                             ; preds = %5034
  %5038 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %5038, align 8
  br label %4468

5039:                                             ; preds = %5034
  %5040 = load i8, i8* %44, align 1, !range !2
  %5041 = icmp eq i8 %5040, 0
  br i1 %5041, label %5042, label %5044

5042:                                             ; preds = %5039
  %5043 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %5043, label %4466, label %5044

5044:                                             ; preds = %5039, %5042
  %5045 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %5046 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5045, i64 0, i32 0
  %5047 = load i32, i32* %5046, align 8
  %5048 = icmp eq i32 %5047, 5
  br label %14210

5049:                                             ; preds = %4554, %4722, %4901, %73
  %5050 = load i16, i16* %14, align 2
  br label %5051

5051:                                             ; preds = %5049, %4896, %4717, %4550
  %5052 = phi i16 [ %5050, %5049 ], [ %4894, %4896 ], [ %4715, %4717 ], [ %4548, %4550 ]
  %5053 = icmp eq i16 %5052, 47
  br i1 %5053, label %5054, label %5093

5054:                                             ; preds = %5051
  %5055 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %5056 = bitcast %class.LiteralBuffer.7* %5055 to i64*
  %5057 = load i64, i64* %5056, align 8
  %5058 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %5059 = bitcast i8** %5058 to i64*
  store i64 %5057, i64* %5059, align 8
  store i32 25, i32* %74, align 8
  %5060 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %5061 = load i8*, i8** %5060, align 8
  %5062 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %5063 = load i8*, i8** %5062, align 8
  %5064 = icmp ult i8* %5061, %5063
  br i1 %5064, label %5065, label %5076, !prof !3

5065:                                             ; preds = %5054
  %5066 = load i8, i8* %49, align 1, !range !2
  %5067 = icmp eq i8 %5066, 0
  br i1 %5067, label %5072, label %5068

5068:                                             ; preds = %5065
  %5069 = getelementptr inbounds i8, i8* %5061, i64 1
  store i8* %5069, i8** %5060, align 8
  %5070 = load i8, i8* %5069, align 1
  %5071 = zext i8 %5070 to i16
  br label %5078

5072:                                             ; preds = %5065
  %5073 = getelementptr inbounds i8, i8* %5061, i64 2
  %5074 = bitcast i8* %5073 to i16*
  store i8* %5073, i8** %5060, align 8
  %5075 = load i16, i16* %5074, align 2
  br label %5078

5076:                                             ; preds = %5054
  %5077 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %5078

5078:                                             ; preds = %5076, %5072, %5068
  %5079 = phi i16 [ %5077, %5076 ], [ %5071, %5068 ], [ %5075, %5072 ]
  store i16 %5079, i16* %14, align 2
  %5080 = icmp ugt i16 %5079, 15
  br i1 %5080, label %5081, label %5083

5081:                                             ; preds = %5078
  %5082 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %5082, align 8
  br label %5184

5083:                                             ; preds = %5078
  %5084 = load i8, i8* %44, align 1, !range !2
  %5085 = icmp eq i8 %5084, 0
  br i1 %5085, label %5086, label %5088

5086:                                             ; preds = %5083
  %5087 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %5087, label %5184, label %5088

5088:                                             ; preds = %5083, %5086
  %5089 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %5090 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5089, i64 0, i32 0
  %5091 = load i32, i32* %5090, align 8
  %5092 = icmp eq i32 %5091, 5
  br label %14210

5093:                                             ; preds = %5051
  %5094 = or i16 %5052, 32
  %5095 = add i16 %5094, -97
  %5096 = icmp ult i16 %5095, 26
  %5097 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %5098 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5097, i64 0, i32 0
  store i32 5, i32* %5098, align 8
  %5099 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %5100 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5099, i64 0, i32 3, i32 1
  %5101 = load i16*, i16** %5100, align 8
  %5102 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5099, i64 0, i32 3, i32 2
  %5103 = load i16*, i16** %5102, align 8
  %5104 = icmp eq i16* %5101, %5103
  br i1 %5104, label %5105, label %5108, !prof !4

5105:                                             ; preds = %5093
  %5106 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5099, i64 0, i32 3
  %5107 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %5106) #11
  store i16* %5107, i16** %5100, align 8
  br label %5108

5108:                                             ; preds = %5093, %5105
  %5109 = phi i16* [ %5107, %5105 ], [ %5101, %5093 ]
  %5110 = getelementptr inbounds i16, i16* %5109, i64 1
  store i16* %5110, i16** %5100, align 8
  store i16 60, i16* %5109, align 2
  %5111 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5099, i64 0, i32 4
  %5112 = load i16, i16* %5111, align 8
  %5113 = or i16 %5112, 60
  store i16 %5113, i16* %5111, align 8
  br i1 %5096, label %5114, label %5183

5114:                                             ; preds = %5108
  %5115 = load i16, i16* %14, align 2
  %5116 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %5117 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5116, i64 0, i32 0
  store i32 5, i32* %5117, align 8
  %5118 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %5119 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5118, i64 0, i32 3, i32 1
  %5120 = load i16*, i16** %5119, align 8
  %5121 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5118, i64 0, i32 3, i32 2
  %5122 = load i16*, i16** %5121, align 8
  %5123 = icmp eq i16* %5120, %5122
  br i1 %5123, label %5124, label %5127, !prof !4

5124:                                             ; preds = %5114
  %5125 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5118, i64 0, i32 3
  %5126 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %5125) #11
  store i16* %5126, i16** %5119, align 8
  br label %5127

5127:                                             ; preds = %5114, %5124
  %5128 = phi i16* [ %5126, %5124 ], [ %5120, %5114 ]
  %5129 = getelementptr inbounds i16, i16* %5128, i64 1
  store i16* %5129, i16** %5119, align 8
  store i16 %5115, i16* %5128, align 2
  %5130 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5118, i64 0, i32 4
  %5131 = load i16, i16* %5130, align 8
  %5132 = or i16 %5131, %5115
  store i16 %5132, i16* %5130, align 8
  %5133 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %5134 = bitcast %class.LiteralBuffer.7* %5133 to i64*
  %5135 = load i64, i64* %5134, align 8
  %5136 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %5137 = bitcast i8** %5136 to i64*
  store i64 %5135, i64* %5137, align 8
  %5138 = load i16, i16* %14, align 2
  %5139 = trunc i16 %5138 to i8
  %5140 = or i8 %5139, 32
  %5141 = inttoptr i64 %5135 to i8*
  %5142 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 2
  %5143 = load i8*, i8** %5142, align 8
  %5144 = icmp eq i8* %5143, %5141
  br i1 %5144, label %5145, label %5147, !prof !4

5145:                                             ; preds = %5127
  %5146 = call i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7* %5133) #11
  store i8* %5146, i8** %5136, align 8
  br label %5147

5147:                                             ; preds = %5127, %5145
  %5148 = phi i8* [ %5146, %5145 ], [ %5141, %5127 ]
  %5149 = getelementptr inbounds i8, i8* %5148, i64 1
  store i8* %5149, i8** %5136, align 8
  store i8 %5140, i8* %5148, align 1
  store i32 27, i32* %74, align 8
  %5150 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %5151 = load i8*, i8** %5150, align 8
  %5152 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %5153 = load i8*, i8** %5152, align 8
  %5154 = icmp ult i8* %5151, %5153
  br i1 %5154, label %5155, label %5166, !prof !3

5155:                                             ; preds = %5147
  %5156 = load i8, i8* %49, align 1, !range !2
  %5157 = icmp eq i8 %5156, 0
  br i1 %5157, label %5162, label %5158

5158:                                             ; preds = %5155
  %5159 = getelementptr inbounds i8, i8* %5151, i64 1
  store i8* %5159, i8** %5150, align 8
  %5160 = load i8, i8* %5159, align 1
  %5161 = zext i8 %5160 to i16
  br label %5168

5162:                                             ; preds = %5155
  %5163 = getelementptr inbounds i8, i8* %5151, i64 2
  %5164 = bitcast i8* %5163 to i16*
  store i8* %5163, i8** %5150, align 8
  %5165 = load i16, i16* %5164, align 2
  br label %5168

5166:                                             ; preds = %5147
  %5167 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %5168

5168:                                             ; preds = %5166, %5162, %5158
  %5169 = phi i16 [ %5167, %5166 ], [ %5161, %5158 ], [ %5165, %5162 ]
  store i16 %5169, i16* %14, align 2
  %5170 = icmp ugt i16 %5169, 15
  br i1 %5170, label %5171, label %5173

5171:                                             ; preds = %5168
  %5172 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %5172, align 8
  br label %5812

5173:                                             ; preds = %5168
  %5174 = load i8, i8* %44, align 1, !range !2
  %5175 = icmp eq i8 %5174, 0
  br i1 %5175, label %5176, label %5178

5176:                                             ; preds = %5173
  %5177 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %5177, label %5810, label %5178

5178:                                             ; preds = %5173, %5176
  %5179 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %5180 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5179, i64 0, i32 0
  %5181 = load i32, i32* %5180, align 8
  %5182 = icmp eq i32 %5181, 5
  br label %14210

5183:                                             ; preds = %5108
  store i32 21, i32* %74, align 8
  br label %4466

5184:                                             ; preds = %5081, %73, %5086
  %5185 = load i16, i16* %14, align 2
  %5186 = or i16 %5185, 32
  %5187 = add i16 %5186, -97
  %5188 = icmp ult i16 %5187, 26
  br i1 %5188, label %5189, label %5247

5189:                                             ; preds = %5184
  %5190 = trunc i16 %5185 to i8
  %5191 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %5192 = load i8*, i8** %5191, align 8
  %5193 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 2
  %5194 = load i8*, i8** %5193, align 8
  %5195 = icmp eq i8* %5192, %5194
  br i1 %5195, label %5196, label %5199, !prof !4

5196:                                             ; preds = %5189
  %5197 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %5198 = call i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7* %5197) #11
  store i8* %5198, i8** %5191, align 8
  br label %5199

5199:                                             ; preds = %5189, %5196
  %5200 = phi i8* [ %5198, %5196 ], [ %5192, %5189 ]
  %5201 = getelementptr inbounds i8, i8* %5200, i64 1
  store i8* %5201, i8** %5191, align 8
  store i8 %5190, i8* %5200, align 1
  %5202 = load i16, i16* %14, align 2
  %5203 = trunc i16 %5202 to i8
  %5204 = or i8 %5203, 32
  %5205 = load i8*, i8** %19, align 8
  %5206 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 10, i32 2
  %5207 = load i8*, i8** %5206, align 8
  %5208 = icmp eq i8* %5205, %5207
  br i1 %5208, label %5209, label %5211, !prof !4

5209:                                             ; preds = %5199
  %5210 = call i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7* %18) #11
  store i8* %5210, i8** %19, align 8
  br label %5211

5211:                                             ; preds = %5199, %5209
  %5212 = phi i8* [ %5210, %5209 ], [ %5205, %5199 ]
  %5213 = getelementptr inbounds i8, i8* %5212, i64 1
  store i8* %5213, i8** %19, align 8
  store i8 %5204, i8* %5212, align 1
  store i32 26, i32* %74, align 8
  %5214 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %5215 = load i8*, i8** %5214, align 8
  %5216 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %5217 = load i8*, i8** %5216, align 8
  %5218 = icmp ult i8* %5215, %5217
  br i1 %5218, label %5219, label %5230, !prof !3

5219:                                             ; preds = %5211
  %5220 = load i8, i8* %49, align 1, !range !2
  %5221 = icmp eq i8 %5220, 0
  br i1 %5221, label %5226, label %5222

5222:                                             ; preds = %5219
  %5223 = getelementptr inbounds i8, i8* %5215, i64 1
  store i8* %5223, i8** %5214, align 8
  %5224 = load i8, i8* %5223, align 1
  %5225 = zext i8 %5224 to i16
  br label %5232

5226:                                             ; preds = %5219
  %5227 = getelementptr inbounds i8, i8* %5215, i64 2
  %5228 = bitcast i8* %5227 to i16*
  store i8* %5227, i8** %5214, align 8
  %5229 = load i16, i16* %5228, align 2
  br label %5232

5230:                                             ; preds = %5211
  %5231 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %5232

5232:                                             ; preds = %5230, %5226, %5222
  %5233 = phi i16 [ %5231, %5230 ], [ %5225, %5222 ], [ %5229, %5226 ]
  store i16 %5233, i16* %14, align 2
  %5234 = icmp ugt i16 %5233, 15
  br i1 %5234, label %5235, label %5237

5235:                                             ; preds = %5232
  %5236 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %5236, align 8
  br label %5284

5237:                                             ; preds = %5232
  %5238 = load i8, i8* %44, align 1, !range !2
  %5239 = icmp eq i8 %5238, 0
  br i1 %5239, label %5240, label %5242

5240:                                             ; preds = %5237
  %5241 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %5241, label %5282, label %5242

5242:                                             ; preds = %5237, %5240
  %5243 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %5244 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5243, i64 0, i32 0
  %5245 = load i32, i32* %5244, align 8
  %5246 = icmp eq i32 %5245, 5
  br label %14210

5247:                                             ; preds = %5184
  %5248 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %5249 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5248, i64 0, i32 0
  store i32 5, i32* %5249, align 8
  %5250 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %5251 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5250, i64 0, i32 3, i32 1
  %5252 = load i16*, i16** %5251, align 8
  %5253 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5250, i64 0, i32 3, i32 2
  %5254 = load i16*, i16** %5253, align 8
  %5255 = icmp eq i16* %5252, %5254
  br i1 %5255, label %5256, label %5259, !prof !4

5256:                                             ; preds = %5247
  %5257 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5250, i64 0, i32 3
  %5258 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %5257) #11
  store i16* %5258, i16** %5251, align 8
  br label %5259

5259:                                             ; preds = %5247, %5256
  %5260 = phi i16* [ %5258, %5256 ], [ %5252, %5247 ]
  %5261 = getelementptr inbounds i16, i16* %5260, i64 1
  store i16* %5261, i16** %5251, align 8
  store i16 60, i16* %5260, align 2
  %5262 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5250, i64 0, i32 4
  %5263 = load i16, i16* %5262, align 8
  %5264 = or i16 %5263, 60
  store i16 %5264, i16* %5262, align 8
  %5265 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %5266 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5265, i64 0, i32 0
  store i32 5, i32* %5266, align 8
  %5267 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %5268 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5267, i64 0, i32 3, i32 1
  %5269 = load i16*, i16** %5268, align 8
  %5270 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5267, i64 0, i32 3, i32 2
  %5271 = load i16*, i16** %5270, align 8
  %5272 = icmp eq i16* %5269, %5271
  br i1 %5272, label %5273, label %5276, !prof !4

5273:                                             ; preds = %5259
  %5274 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5267, i64 0, i32 3
  %5275 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %5274) #11
  store i16* %5275, i16** %5268, align 8
  br label %5276

5276:                                             ; preds = %5259, %5273
  %5277 = phi i16* [ %5275, %5273 ], [ %5269, %5259 ]
  %5278 = getelementptr inbounds i16, i16* %5277, i64 1
  store i16* %5278, i16** %5268, align 8
  store i16 47, i16* %5277, align 2
  %5279 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5267, i64 0, i32 4
  %5280 = load i16, i16* %5279, align 8
  %5281 = or i16 %5280, 47
  store i16 %5281, i16* %5279, align 8
  store i32 21, i32* %74, align 8
  br label %4466

5282:                                             ; preds = %5240, %73, %5345
  %5283 = load i16, i16* %14, align 2
  br label %5284

5284:                                             ; preds = %5282, %5235
  %5285 = phi i16 [ %5233, %5235 ], [ %5283, %5282 ]
  %5286 = or i16 %5285, 32
  %5287 = add i16 %5286, -97
  %5288 = icmp ult i16 %5287, 26
  br i1 %5288, label %5289, label %5352

5289:                                             ; preds = %5284
  %5290 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %5291 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 2
  %5292 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %5293 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 10, i32 2
  %5294 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %5295 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %5296 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  br label %5297

5297:                                             ; preds = %5289, %5338
  %5298 = phi i16 [ %5285, %5289 ], [ %5336, %5338 ]
  %5299 = trunc i16 %5298 to i8
  %5300 = load i8*, i8** %5290, align 8
  %5301 = load i8*, i8** %5291, align 8
  %5302 = icmp eq i8* %5300, %5301
  br i1 %5302, label %5303, label %5305, !prof !4

5303:                                             ; preds = %5297
  %5304 = call i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7* %5292) #11
  store i8* %5304, i8** %5290, align 8
  br label %5305

5305:                                             ; preds = %5297, %5303
  %5306 = phi i8* [ %5304, %5303 ], [ %5300, %5297 ]
  %5307 = getelementptr inbounds i8, i8* %5306, i64 1
  store i8* %5307, i8** %5290, align 8
  store i8 %5299, i8* %5306, align 1
  %5308 = load i16, i16* %14, align 2
  %5309 = trunc i16 %5308 to i8
  %5310 = or i8 %5309, 32
  %5311 = load i8*, i8** %19, align 8
  %5312 = load i8*, i8** %5293, align 8
  %5313 = icmp eq i8* %5311, %5312
  br i1 %5313, label %5314, label %5316, !prof !4

5314:                                             ; preds = %5305
  %5315 = call i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7* %18) #11
  store i8* %5315, i8** %19, align 8
  br label %5316

5316:                                             ; preds = %5305, %5314
  %5317 = phi i8* [ %5315, %5314 ], [ %5311, %5305 ]
  %5318 = getelementptr inbounds i8, i8* %5317, i64 1
  store i8* %5318, i8** %19, align 8
  store i8 %5310, i8* %5317, align 1
  %5319 = load i8*, i8** %5294, align 8
  %5320 = load i8*, i8** %5295, align 8
  %5321 = icmp ult i8* %5319, %5320
  br i1 %5321, label %5322, label %5333, !prof !3

5322:                                             ; preds = %5316
  %5323 = load i8, i8* %49, align 1, !range !2
  %5324 = icmp eq i8 %5323, 0
  br i1 %5324, label %5329, label %5325

5325:                                             ; preds = %5322
  %5326 = getelementptr inbounds i8, i8* %5319, i64 1
  store i8* %5326, i8** %5294, align 8
  %5327 = load i8, i8* %5326, align 1
  %5328 = zext i8 %5327 to i16
  br label %5335

5329:                                             ; preds = %5322
  %5330 = getelementptr inbounds i8, i8* %5319, i64 2
  %5331 = bitcast i8* %5330 to i16*
  store i8* %5330, i8** %5294, align 8
  %5332 = load i16, i16* %5331, align 2
  br label %5335

5333:                                             ; preds = %5316
  %5334 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %5335

5335:                                             ; preds = %5333, %5329, %5325
  %5336 = phi i16 [ %5334, %5333 ], [ %5328, %5325 ], [ %5332, %5329 ]
  store i16 %5336, i16* %14, align 2
  %5337 = icmp ugt i16 %5336, 15
  br i1 %5337, label %5338, label %5342

5338:                                             ; preds = %5335
  store i8 0, i8* %5296, align 8
  %5339 = or i16 %5336, 32
  %5340 = add i16 %5339, -97
  %5341 = icmp ult i16 %5340, 26
  br i1 %5341, label %5297, label %5352

5342:                                             ; preds = %5335
  %5343 = load i8, i8* %44, align 1, !range !2
  %5344 = icmp eq i8 %5343, 0
  br i1 %5344, label %5345, label %5347

5345:                                             ; preds = %5342
  %5346 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %5346, label %5282, label %5347

5347:                                             ; preds = %5342, %5345
  %5348 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %5349 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5348, i64 0, i32 0
  %5350 = load i32, i32* %5349, align 8
  %5351 = icmp eq i32 %5350, 5
  br label %14210

5352:                                             ; preds = %5338, %5284
  %5353 = phi i16 [ %5285, %5284 ], [ %5336, %5338 ]
  switch i16 %5353, label %5653 [
    i16 32, label %5354
    i16 10, label %5354
    i16 9, label %5354
    i16 12, label %5354
    i16 47, label %5462
    i16 62, label %5570
  ]

5354:                                             ; preds = %5352, %5352, %5352, %5352
  %5355 = call zeroext i1 @_ZN5blink13HTMLTokenizer19IsAppropriateEndTagEv(%"class.blink::HTMLTokenizer"* %0)
  br i1 %5355, label %5356, label %5653

5356:                                             ; preds = %5354
  %5357 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %5358 = load i16, i16* %14, align 2
  %5359 = trunc i16 %5358 to i8
  %5360 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %5361 = load i8*, i8** %5360, align 8
  %5362 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 2
  %5363 = load i8*, i8** %5362, align 8
  %5364 = icmp eq i8* %5361, %5363
  br i1 %5364, label %5365, label %5367, !prof !4

5365:                                             ; preds = %5356
  %5366 = call i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7* %5357) #11
  store i8* %5366, i8** %5360, align 8
  br label %5367

5367:                                             ; preds = %5356, %5365
  %5368 = phi i8* [ %5366, %5365 ], [ %5361, %5356 ]
  %5369 = getelementptr inbounds i8, i8* %5368, i64 1
  store i8* %5369, i8** %5360, align 8
  store i8 %5359, i8* %5368, align 1
  store i32 33, i32* %74, align 8
  %5370 = load i8, i8* %49, align 1, !range !2
  %5371 = icmp eq i8 %5370, 0
  br i1 %5371, label %5378, label %5372

5372:                                             ; preds = %5367
  %5373 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %5374 = load i8*, i8** %5373, align 8
  %5375 = load i8, i8* %5374, align 1
  %5376 = zext i8 %5375 to i16
  %5377 = ptrtoint i8* %5374 to i64
  br label %5384

5378:                                             ; preds = %5367
  %5379 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %5380 = load i16*, i16** %5379, align 8
  %5381 = load i16, i16* %5380, align 2
  %5382 = ptrtoint i16* %5380 to i64
  %5383 = bitcast i16* %5380 to i8*
  br label %5384

5384:                                             ; preds = %5378, %5372
  %5385 = phi i8* [ %5374, %5372 ], [ %5383, %5378 ]
  %5386 = phi i64 [ %5377, %5372 ], [ %5382, %5378 ]
  %5387 = phi i16 [ %5376, %5372 ], [ %5381, %5378 ]
  %5388 = icmp eq i16 %5387, 10
  br i1 %5388, label %5389, label %5410

5389:                                             ; preds = %5384
  %5390 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %5391 = load i8, i8* %5390, align 8, !range !2
  %5392 = icmp eq i8 %5391, 0
  br i1 %5392, label %5410, label %5393, !prof !4

5393:                                             ; preds = %5389
  %5394 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %5395 = load i32, i32* %5394, align 8
  %5396 = add nsw i32 %5395, 1
  store i32 %5396, i32* %5394, align 8
  %5397 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %5398 = load i32, i32* %5397, align 8
  %5399 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %5400 = bitcast i8** %5399 to i64*
  %5401 = load i64, i64* %5400, align 8
  %5402 = sub i64 %5386, %5401
  %5403 = trunc i64 %5402 to i32
  %5404 = xor i8 %5370, 1
  %5405 = zext i8 %5404 to i32
  %5406 = ashr i32 %5403, %5405
  %5407 = add i32 %5398, 1
  %5408 = add i32 %5407, %5406
  %5409 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %5408, i32* %5409, align 4
  br label %5410

5410:                                             ; preds = %5393, %5389, %5384
  %5411 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %5412 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %5413 = load i8*, i8** %5412, align 8
  %5414 = icmp ult i8* %5385, %5413
  br i1 %5414, label %5415, label %5420, !prof !3

5415:                                             ; preds = %5410
  br i1 %5371, label %5418, label %5416

5416:                                             ; preds = %5415
  %5417 = getelementptr inbounds i8, i8* %5385, i64 1
  store i8* %5417, i8** %5411, align 8
  br label %5422

5418:                                             ; preds = %5415
  %5419 = getelementptr inbounds i8, i8* %5385, i64 2
  store i8* %5419, i8** %5411, align 8
  br label %5422

5420:                                             ; preds = %5410
  %5421 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %5422

5422:                                             ; preds = %5420, %5418, %5416
  %5423 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %5424 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5423, i64 0, i32 0
  %5425 = load i32, i32* %5424, align 8
  %5426 = icmp eq i32 %5425, 5
  br i1 %5426, label %14210, label %5427

5427:                                             ; preds = %5422
  call void @_ZN5blink9HTMLToken11BeginEndTagERK13LiteralBufferIhLj32EE(%"class.blink::HTMLToken"* %5423, %class.LiteralBuffer.7* dereferenceable(56) %18) #11
  %5428 = load i64, i64* %22, align 8
  store i64 %5428, i64* %20, align 8
  %5429 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %5430 = bitcast %class.LiteralBuffer.0* %5429 to i64*
  %5431 = load i64, i64* %5430, align 8
  %5432 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  %5433 = bitcast i16** %5432 to i64*
  store i64 %5431, i64* %5433, align 8
  %5434 = bitcast %class.LiteralBuffer.7* %5357 to i64*
  %5435 = load i64, i64* %5434, align 8
  %5436 = bitcast i8** %5360 to i64*
  store i64 %5435, i64* %5436, align 8
  %5437 = load i8, i8* %44, align 1, !range !2
  %5438 = icmp eq i8 %5437, 0
  br i1 %5438, label %5439, label %5457

5439:                                             ; preds = %5427
  %5440 = load i8, i8* %49, align 1, !range !2
  %5441 = icmp eq i8 %5440, 0
  br i1 %5441, label %5446, label %5442

5442:                                             ; preds = %5439
  %5443 = load i8*, i8** %5411, align 8
  %5444 = load i8, i8* %5443, align 1
  %5445 = zext i8 %5444 to i16
  br label %5450

5446:                                             ; preds = %5439
  %5447 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %5448 = load i16*, i16** %5447, align 8
  %5449 = load i16, i16* %5448, align 2
  br label %5450

5450:                                             ; preds = %5446, %5442
  %5451 = phi i16 [ %5445, %5442 ], [ %5449, %5446 ]
  store i16 %5451, i16* %14, align 2
  %5452 = icmp ugt i16 %5451, 15
  br i1 %5452, label %5453, label %5455

5453:                                             ; preds = %5450
  %5454 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %5454, align 8
  br label %7037

5455:                                             ; preds = %5450
  %5456 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %5456, label %7035, label %5457

5457:                                             ; preds = %5427, %5455
  %5458 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %5459 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5458, i64 0, i32 0
  %5460 = load i32, i32* %5459, align 8
  %5461 = icmp eq i32 %5460, 5
  br label %14210

5462:                                             ; preds = %5352
  %5463 = call zeroext i1 @_ZN5blink13HTMLTokenizer19IsAppropriateEndTagEv(%"class.blink::HTMLTokenizer"* %0)
  br i1 %5463, label %5464, label %5653

5464:                                             ; preds = %5462
  %5465 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %5466 = load i16, i16* %14, align 2
  %5467 = trunc i16 %5466 to i8
  %5468 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %5469 = load i8*, i8** %5468, align 8
  %5470 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 2
  %5471 = load i8*, i8** %5470, align 8
  %5472 = icmp eq i8* %5469, %5471
  br i1 %5472, label %5473, label %5475, !prof !4

5473:                                             ; preds = %5464
  %5474 = call i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7* %5465) #11
  store i8* %5474, i8** %5468, align 8
  br label %5475

5475:                                             ; preds = %5464, %5473
  %5476 = phi i8* [ %5474, %5473 ], [ %5469, %5464 ]
  %5477 = getelementptr inbounds i8, i8* %5476, i64 1
  store i8* %5477, i8** %5468, align 8
  store i8 %5467, i8* %5476, align 1
  store i32 42, i32* %74, align 8
  %5478 = load i8, i8* %49, align 1, !range !2
  %5479 = icmp eq i8 %5478, 0
  br i1 %5479, label %5486, label %5480

5480:                                             ; preds = %5475
  %5481 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %5482 = load i8*, i8** %5481, align 8
  %5483 = load i8, i8* %5482, align 1
  %5484 = zext i8 %5483 to i16
  %5485 = ptrtoint i8* %5482 to i64
  br label %5492

5486:                                             ; preds = %5475
  %5487 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %5488 = load i16*, i16** %5487, align 8
  %5489 = load i16, i16* %5488, align 2
  %5490 = ptrtoint i16* %5488 to i64
  %5491 = bitcast i16* %5488 to i8*
  br label %5492

5492:                                             ; preds = %5486, %5480
  %5493 = phi i8* [ %5482, %5480 ], [ %5491, %5486 ]
  %5494 = phi i64 [ %5485, %5480 ], [ %5490, %5486 ]
  %5495 = phi i16 [ %5484, %5480 ], [ %5489, %5486 ]
  %5496 = icmp eq i16 %5495, 10
  br i1 %5496, label %5497, label %5518

5497:                                             ; preds = %5492
  %5498 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %5499 = load i8, i8* %5498, align 8, !range !2
  %5500 = icmp eq i8 %5499, 0
  br i1 %5500, label %5518, label %5501, !prof !4

5501:                                             ; preds = %5497
  %5502 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %5503 = load i32, i32* %5502, align 8
  %5504 = add nsw i32 %5503, 1
  store i32 %5504, i32* %5502, align 8
  %5505 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %5506 = load i32, i32* %5505, align 8
  %5507 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %5508 = bitcast i8** %5507 to i64*
  %5509 = load i64, i64* %5508, align 8
  %5510 = sub i64 %5494, %5509
  %5511 = trunc i64 %5510 to i32
  %5512 = xor i8 %5478, 1
  %5513 = zext i8 %5512 to i32
  %5514 = ashr i32 %5511, %5513
  %5515 = add i32 %5506, 1
  %5516 = add i32 %5515, %5514
  %5517 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %5516, i32* %5517, align 4
  br label %5518

5518:                                             ; preds = %5501, %5497, %5492
  %5519 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %5520 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %5521 = load i8*, i8** %5520, align 8
  %5522 = icmp ult i8* %5493, %5521
  br i1 %5522, label %5523, label %5528, !prof !3

5523:                                             ; preds = %5518
  br i1 %5479, label %5526, label %5524

5524:                                             ; preds = %5523
  %5525 = getelementptr inbounds i8, i8* %5493, i64 1
  store i8* %5525, i8** %5519, align 8
  br label %5530

5526:                                             ; preds = %5523
  %5527 = getelementptr inbounds i8, i8* %5493, i64 2
  store i8* %5527, i8** %5519, align 8
  br label %5530

5528:                                             ; preds = %5518
  %5529 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %5530

5530:                                             ; preds = %5528, %5526, %5524
  %5531 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %5532 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5531, i64 0, i32 0
  %5533 = load i32, i32* %5532, align 8
  %5534 = icmp eq i32 %5533, 5
  br i1 %5534, label %14210, label %5535

5535:                                             ; preds = %5530
  call void @_ZN5blink9HTMLToken11BeginEndTagERK13LiteralBufferIhLj32EE(%"class.blink::HTMLToken"* %5531, %class.LiteralBuffer.7* dereferenceable(56) %18) #11
  %5536 = load i64, i64* %22, align 8
  store i64 %5536, i64* %20, align 8
  %5537 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %5538 = bitcast %class.LiteralBuffer.0* %5537 to i64*
  %5539 = load i64, i64* %5538, align 8
  %5540 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  %5541 = bitcast i16** %5540 to i64*
  store i64 %5539, i64* %5541, align 8
  %5542 = bitcast %class.LiteralBuffer.7* %5465 to i64*
  %5543 = load i64, i64* %5542, align 8
  %5544 = bitcast i8** %5468 to i64*
  store i64 %5543, i64* %5544, align 8
  %5545 = load i8, i8* %44, align 1, !range !2
  %5546 = icmp eq i8 %5545, 0
  br i1 %5546, label %5547, label %5565

5547:                                             ; preds = %5535
  %5548 = load i8, i8* %49, align 1, !range !2
  %5549 = icmp eq i8 %5548, 0
  br i1 %5549, label %5554, label %5550

5550:                                             ; preds = %5547
  %5551 = load i8*, i8** %5519, align 8
  %5552 = load i8, i8* %5551, align 1
  %5553 = zext i8 %5552 to i16
  br label %5558

5554:                                             ; preds = %5547
  %5555 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %5556 = load i16*, i16** %5555, align 8
  %5557 = load i16, i16* %5556, align 2
  br label %5558

5558:                                             ; preds = %5554, %5550
  %5559 = phi i16 [ %5553, %5550 ], [ %5557, %5554 ]
  store i16 %5559, i16* %14, align 2
  %5560 = icmp ugt i16 %5559, 15
  br i1 %5560, label %5561, label %5563

5561:                                             ; preds = %5558
  %5562 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %5562, align 8
  br label %8954

5563:                                             ; preds = %5558
  %5564 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %5564, label %8952, label %5565

5565:                                             ; preds = %5535, %5563
  %5566 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %5567 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5566, i64 0, i32 0
  %5568 = load i32, i32* %5567, align 8
  %5569 = icmp eq i32 %5568, 5
  br label %14210

5570:                                             ; preds = %5352
  %5571 = call zeroext i1 @_ZN5blink13HTMLTokenizer19IsAppropriateEndTagEv(%"class.blink::HTMLTokenizer"* %0)
  br i1 %5571, label %5572, label %5653

5572:                                             ; preds = %5570
  %5573 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %5574 = load i16, i16* %14, align 2
  %5575 = trunc i16 %5574 to i8
  %5576 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %5577 = load i8*, i8** %5576, align 8
  %5578 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 2
  %5579 = load i8*, i8** %5578, align 8
  %5580 = icmp eq i8* %5577, %5579
  br i1 %5580, label %5581, label %5583, !prof !4

5581:                                             ; preds = %5572
  %5582 = call i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7* %5573) #11
  store i8* %5582, i8** %5576, align 8
  br label %5583

5583:                                             ; preds = %5572, %5581
  %5584 = phi i8* [ %5582, %5581 ], [ %5577, %5572 ]
  %5585 = getelementptr inbounds i8, i8* %5584, i64 1
  store i8* %5585, i8** %5576, align 8
  store i8 %5575, i8* %5584, align 1
  store i32 0, i32* %74, align 8
  %5586 = load i8, i8* %49, align 1, !range !2
  %5587 = icmp eq i8 %5586, 0
  br i1 %5587, label %5594, label %5588

5588:                                             ; preds = %5583
  %5589 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %5590 = load i8*, i8** %5589, align 8
  %5591 = load i8, i8* %5590, align 1
  %5592 = zext i8 %5591 to i16
  %5593 = ptrtoint i8* %5590 to i64
  br label %5600

5594:                                             ; preds = %5583
  %5595 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %5596 = load i16*, i16** %5595, align 8
  %5597 = load i16, i16* %5596, align 2
  %5598 = ptrtoint i16* %5596 to i64
  %5599 = bitcast i16* %5596 to i8*
  br label %5600

5600:                                             ; preds = %5594, %5588
  %5601 = phi i8* [ %5590, %5588 ], [ %5599, %5594 ]
  %5602 = phi i64 [ %5593, %5588 ], [ %5598, %5594 ]
  %5603 = phi i16 [ %5592, %5588 ], [ %5597, %5594 ]
  %5604 = icmp eq i16 %5603, 10
  br i1 %5604, label %5605, label %5626

5605:                                             ; preds = %5600
  %5606 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %5607 = load i8, i8* %5606, align 8, !range !2
  %5608 = icmp eq i8 %5607, 0
  br i1 %5608, label %5626, label %5609, !prof !4

5609:                                             ; preds = %5605
  %5610 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %5611 = load i32, i32* %5610, align 8
  %5612 = add nsw i32 %5611, 1
  store i32 %5612, i32* %5610, align 8
  %5613 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %5614 = load i32, i32* %5613, align 8
  %5615 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %5616 = bitcast i8** %5615 to i64*
  %5617 = load i64, i64* %5616, align 8
  %5618 = sub i64 %5602, %5617
  %5619 = trunc i64 %5618 to i32
  %5620 = xor i8 %5586, 1
  %5621 = zext i8 %5620 to i32
  %5622 = ashr i32 %5619, %5621
  %5623 = add i32 %5614, 1
  %5624 = add i32 %5623, %5622
  %5625 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %5624, i32* %5625, align 4
  br label %5626

5626:                                             ; preds = %5609, %5605, %5600
  %5627 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %5628 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %5629 = load i8*, i8** %5628, align 8
  %5630 = icmp ult i8* %5601, %5629
  br i1 %5630, label %5631, label %5636, !prof !3

5631:                                             ; preds = %5626
  br i1 %5587, label %5634, label %5632

5632:                                             ; preds = %5631
  %5633 = getelementptr inbounds i8, i8* %5601, i64 1
  store i8* %5633, i8** %5627, align 8
  br label %5638

5634:                                             ; preds = %5631
  %5635 = getelementptr inbounds i8, i8* %5601, i64 2
  store i8* %5635, i8** %5627, align 8
  br label %5638

5636:                                             ; preds = %5626
  %5637 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %5638

5638:                                             ; preds = %5636, %5634, %5632
  %5639 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %5640 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5639, i64 0, i32 0
  %5641 = load i32, i32* %5640, align 8
  %5642 = icmp eq i32 %5641, 5
  br i1 %5642, label %14210, label %5643

5643:                                             ; preds = %5638
  call void @_ZN5blink9HTMLToken11BeginEndTagERK13LiteralBufferIhLj32EE(%"class.blink::HTMLToken"* %5639, %class.LiteralBuffer.7* dereferenceable(56) %18) #11
  %5644 = load i64, i64* %22, align 8
  store i64 %5644, i64* %20, align 8
  %5645 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %5646 = bitcast %class.LiteralBuffer.0* %5645 to i64*
  %5647 = load i64, i64* %5646, align 8
  %5648 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  %5649 = bitcast i16** %5648 to i64*
  store i64 %5647, i64* %5649, align 8
  %5650 = bitcast %class.LiteralBuffer.7* %5573 to i64*
  %5651 = load i64, i64* %5650, align 8
  %5652 = bitcast i8** %5576 to i64*
  store i64 %5651, i64* %5652, align 8
  br label %14210

5653:                                             ; preds = %5352, %5462, %5570, %5354
  %5654 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %5655 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5654, i64 0, i32 0
  store i32 5, i32* %5655, align 8
  %5656 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %5657 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5656, i64 0, i32 3, i32 1
  %5658 = load i16*, i16** %5657, align 8
  %5659 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5656, i64 0, i32 3, i32 2
  %5660 = load i16*, i16** %5659, align 8
  %5661 = icmp eq i16* %5658, %5660
  br i1 %5661, label %5662, label %5665, !prof !4

5662:                                             ; preds = %5653
  %5663 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5656, i64 0, i32 3
  %5664 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %5663) #11
  store i16* %5664, i16** %5657, align 8
  br label %5665

5665:                                             ; preds = %5653, %5662
  %5666 = phi i16* [ %5664, %5662 ], [ %5658, %5653 ]
  %5667 = getelementptr inbounds i16, i16* %5666, i64 1
  store i16* %5667, i16** %5657, align 8
  store i16 60, i16* %5666, align 2
  %5668 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5656, i64 0, i32 4
  %5669 = load i16, i16* %5668, align 8
  %5670 = or i16 %5669, 60
  store i16 %5670, i16* %5668, align 8
  %5671 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %5672 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5671, i64 0, i32 0
  store i32 5, i32* %5672, align 8
  %5673 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %5674 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5673, i64 0, i32 3, i32 1
  %5675 = load i16*, i16** %5674, align 8
  %5676 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5673, i64 0, i32 3, i32 2
  %5677 = load i16*, i16** %5676, align 8
  %5678 = icmp eq i16* %5675, %5677
  br i1 %5678, label %5679, label %5682, !prof !4

5679:                                             ; preds = %5665
  %5680 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5673, i64 0, i32 3
  %5681 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %5680) #11
  store i16* %5681, i16** %5674, align 8
  br label %5682

5682:                                             ; preds = %5665, %5679
  %5683 = phi i16* [ %5681, %5679 ], [ %5675, %5665 ]
  %5684 = getelementptr inbounds i16, i16* %5683, i64 1
  store i16* %5684, i16** %5674, align 8
  store i16 47, i16* %5683, align 2
  %5685 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5673, i64 0, i32 4
  %5686 = load i16, i16* %5685, align 8
  %5687 = or i16 %5686, 47
  store i16 %5687, i16* %5685, align 8
  %5688 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %5689 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %5690 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5688, i64 0, i32 3
  %5691 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %5692 = bitcast i8** %5691 to i64*
  %5693 = load i64, i64* %5692, align 8
  %5694 = bitcast %class.LiteralBuffer.7* %5689 to i64*
  %5695 = load i64, i64* %5694, align 8
  %5696 = sub i64 %5693, %5695
  %5697 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5688, i64 0, i32 3, i32 1
  %5698 = bitcast i16** %5697 to i64*
  %5699 = load i64, i64* %5698, align 8
  %5700 = bitcast %class.LiteralBuffer* %5690 to i64*
  %5701 = load i64, i64* %5700, align 8
  %5702 = sub i64 %5699, %5701
  %5703 = ashr exact i64 %5702, 1
  %5704 = add i64 %5703, %5696
  %5705 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5688, i64 0, i32 3, i32 2
  %5706 = bitcast i16** %5705 to i64*
  %5707 = load i64, i64* %5706, align 8
  %5708 = sub i64 %5707, %5701
  %5709 = ashr exact i64 %5708, 1
  %5710 = icmp ult i64 %5709, %5704
  %5711 = inttoptr i64 %5695 to i8*
  %5712 = inttoptr i64 %5699 to i16*
  br i1 %5710, label %5713, label %5718

5713:                                             ; preds = %5682
  %5714 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEm(%class.LiteralBuffer* %5690, i64 %5704) #11
  %5715 = getelementptr inbounds %class.LiteralBuffer.7, %class.LiteralBuffer.7* %5689, i64 0, i32 0
  %5716 = load i8*, i8** %5715, align 8
  %5717 = load i16*, i16** %5697, align 8
  br label %5718

5718:                                             ; preds = %5713, %5682
  %5719 = phi i16* [ %5717, %5713 ], [ %5712, %5682 ]
  %5720 = phi i8* [ %5716, %5713 ], [ %5711, %5682 ]
  %5721 = bitcast i16* %5719 to i8*
  %5722 = getelementptr inbounds i8, i8* %5720, i64 %5696
  %5723 = icmp eq i64 %5696, 0
  br i1 %5723, label %5805, label %5724

5724:                                             ; preds = %5718
  %5725 = icmp ult i64 %5696, 16
  br i1 %5725, label %5792, label %5726

5726:                                             ; preds = %5724
  %5727 = getelementptr i16, i16* %5719, i64 %5696
  %5728 = bitcast i16* %5727 to i8*
  %5729 = icmp ugt i8* %5722, %5721
  %5730 = icmp ult i8* %5720, %5728
  %5731 = and i1 %5729, %5730
  br i1 %5731, label %5792, label %5732

5732:                                             ; preds = %5726
  %5733 = and i64 %5696, -16
  %5734 = getelementptr i16, i16* %5719, i64 %5733
  %5735 = getelementptr i8, i8* %5720, i64 %5733
  %5736 = add i64 %5733, -16
  %5737 = lshr exact i64 %5736, 4
  %5738 = add nuw nsw i64 %5737, 1
  %5739 = and i64 %5738, 1
  %5740 = icmp eq i64 %5736, 0
  br i1 %5740, label %5774, label %5741

5741:                                             ; preds = %5732
  %5742 = sub nuw nsw i64 %5738, %5739
  br label %5743

5743:                                             ; preds = %5743, %5741
  %5744 = phi i64 [ 0, %5741 ], [ %5771, %5743 ]
  %5745 = phi i64 [ %5742, %5741 ], [ %5772, %5743 ]
  %5746 = getelementptr i16, i16* %5719, i64 %5744
  %5747 = getelementptr i8, i8* %5720, i64 %5744
  %5748 = bitcast i8* %5747 to <8 x i8>*
  %5749 = load <8 x i8>, <8 x i8>* %5748, align 1, !alias.scope !27
  %5750 = getelementptr i8, i8* %5747, i64 8
  %5751 = bitcast i8* %5750 to <8 x i8>*
  %5752 = load <8 x i8>, <8 x i8>* %5751, align 1, !alias.scope !27
  %5753 = zext <8 x i8> %5749 to <8 x i16>
  %5754 = zext <8 x i8> %5752 to <8 x i16>
  %5755 = bitcast i16* %5746 to <8 x i16>*
  store <8 x i16> %5753, <8 x i16>* %5755, align 2, !alias.scope !30, !noalias !27
  %5756 = getelementptr i16, i16* %5746, i64 8
  %5757 = bitcast i16* %5756 to <8 x i16>*
  store <8 x i16> %5754, <8 x i16>* %5757, align 2, !alias.scope !30, !noalias !27
  %5758 = or i64 %5744, 16
  %5759 = getelementptr i16, i16* %5719, i64 %5758
  %5760 = getelementptr i8, i8* %5720, i64 %5758
  %5761 = bitcast i8* %5760 to <8 x i8>*
  %5762 = load <8 x i8>, <8 x i8>* %5761, align 1, !alias.scope !27
  %5763 = getelementptr i8, i8* %5760, i64 8
  %5764 = bitcast i8* %5763 to <8 x i8>*
  %5765 = load <8 x i8>, <8 x i8>* %5764, align 1, !alias.scope !27
  %5766 = zext <8 x i8> %5762 to <8 x i16>
  %5767 = zext <8 x i8> %5765 to <8 x i16>
  %5768 = bitcast i16* %5759 to <8 x i16>*
  store <8 x i16> %5766, <8 x i16>* %5768, align 2, !alias.scope !30, !noalias !27
  %5769 = getelementptr i16, i16* %5759, i64 8
  %5770 = bitcast i16* %5769 to <8 x i16>*
  store <8 x i16> %5767, <8 x i16>* %5770, align 2, !alias.scope !30, !noalias !27
  %5771 = add i64 %5744, 32
  %5772 = add i64 %5745, -2
  %5773 = icmp eq i64 %5772, 0
  br i1 %5773, label %5774, label %5743, !llvm.loop !32

5774:                                             ; preds = %5743, %5732
  %5775 = phi i64 [ 0, %5732 ], [ %5771, %5743 ]
  %5776 = icmp eq i64 %5739, 0
  br i1 %5776, label %5790, label %5777

5777:                                             ; preds = %5774
  %5778 = getelementptr i16, i16* %5719, i64 %5775
  %5779 = getelementptr i8, i8* %5720, i64 %5775
  %5780 = bitcast i8* %5779 to <8 x i8>*
  %5781 = load <8 x i8>, <8 x i8>* %5780, align 1, !alias.scope !27
  %5782 = getelementptr i8, i8* %5779, i64 8
  %5783 = bitcast i8* %5782 to <8 x i8>*
  %5784 = load <8 x i8>, <8 x i8>* %5783, align 1, !alias.scope !27
  %5785 = zext <8 x i8> %5781 to <8 x i16>
  %5786 = zext <8 x i8> %5784 to <8 x i16>
  %5787 = bitcast i16* %5778 to <8 x i16>*
  store <8 x i16> %5785, <8 x i16>* %5787, align 2, !alias.scope !30, !noalias !27
  %5788 = getelementptr i16, i16* %5778, i64 8
  %5789 = bitcast i16* %5788 to <8 x i16>*
  store <8 x i16> %5786, <8 x i16>* %5789, align 2, !alias.scope !30, !noalias !27
  br label %5790

5790:                                             ; preds = %5774, %5777
  %5791 = icmp eq i64 %5696, %5733
  br i1 %5791, label %5803, label %5792

5792:                                             ; preds = %5790, %5726, %5724
  %5793 = phi i16* [ %5719, %5726 ], [ %5719, %5724 ], [ %5734, %5790 ]
  %5794 = phi i8* [ %5720, %5726 ], [ %5720, %5724 ], [ %5735, %5790 ]
  br label %5795

5795:                                             ; preds = %5792, %5795
  %5796 = phi i16* [ %5801, %5795 ], [ %5793, %5792 ]
  %5797 = phi i8* [ %5800, %5795 ], [ %5794, %5792 ]
  %5798 = load i8, i8* %5797, align 1
  %5799 = zext i8 %5798 to i16
  store i16 %5799, i16* %5796, align 2
  %5800 = getelementptr inbounds i8, i8* %5797, i64 1
  %5801 = getelementptr inbounds i16, i16* %5796, i64 1
  %5802 = icmp eq i8* %5800, %5722
  br i1 %5802, label %5803, label %5795, !llvm.loop !33

5803:                                             ; preds = %5795, %5790
  %5804 = load i16*, i16** %5697, align 8
  br label %5805

5805:                                             ; preds = %5718, %5803
  %5806 = phi i16* [ %5804, %5803 ], [ %5719, %5718 ]
  %5807 = getelementptr inbounds i16, i16* %5806, i64 %5696
  store i16* %5807, i16** %5697, align 8
  %5808 = load i64, i64* %22, align 8
  store i64 %5808, i64* %20, align 8
  %5809 = load i64, i64* %5694, align 8
  store i64 %5809, i64* %5692, align 8
  store i32 21, i32* %74, align 8
  br label %4466

5810:                                             ; preds = %6059, %5176, %73, %6064
  %5811 = load i16, i16* %14, align 2
  br label %5812

5812:                                             ; preds = %5171, %5810
  %5813 = phi i16 [ %5811, %5810 ], [ %5169, %5171 ]
  switch i16 %5813, label %6002 [
    i16 32, label %5814
    i16 10, label %5814
    i16 9, label %5814
    i16 12, label %5814
    i16 47, label %5814
    i16 62, label %5814
  ]

5814:                                             ; preds = %5812, %5812, %5812, %5812, %5812, %5812
  %5815 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %5816 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5815, i64 0, i32 0
  store i32 5, i32* %5816, align 8
  %5817 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %5818 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5817, i64 0, i32 3, i32 1
  %5819 = load i16*, i16** %5818, align 8
  %5820 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5817, i64 0, i32 3, i32 2
  %5821 = load i16*, i16** %5820, align 8
  %5822 = icmp eq i16* %5819, %5821
  br i1 %5822, label %5823, label %5826, !prof !4

5823:                                             ; preds = %5814
  %5824 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5817, i64 0, i32 3
  %5825 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %5824) #11
  store i16* %5825, i16** %5818, align 8
  br label %5826

5826:                                             ; preds = %5814, %5823
  %5827 = phi i16* [ %5825, %5823 ], [ %5819, %5814 ]
  %5828 = getelementptr inbounds i16, i16* %5827, i64 1
  store i16* %5828, i16** %5818, align 8
  store i16 %5813, i16* %5827, align 2
  %5829 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5817, i64 0, i32 4
  %5830 = load i16, i16* %5829, align 8
  %5831 = or i16 %5830, %5813
  store i16 %5831, i16* %5829, align 8
  %5832 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE to %"class.blink::QualifiedName"**), align 8
  %5833 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5832, i64 0, i32 0, i32 0
  %5834 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %5833, align 8
  %5835 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %5836 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %5837 = bitcast i8** %5836 to i64*
  %5838 = load i64, i64* %5837, align 8
  %5839 = bitcast %class.LiteralBuffer.7* %5835 to i64*
  %5840 = load i64, i64* %5839, align 8
  %5841 = sub i64 %5838, %5840
  %5842 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %5834, i64 0, i32 3, i32 0, i32 0, i32 0
  %5843 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5842, align 8
  %5844 = icmp eq %"class.WTF::StringImpl"* %5843, null
  %5845 = inttoptr i64 %5840 to i8*
  br i1 %5844, label %5856, label %5846

5846:                                             ; preds = %5826
  %5847 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5843, i64 0, i32 1
  %5848 = load i32, i32* %5847, align 4
  %5849 = zext i32 %5848 to i64
  %5850 = icmp eq i64 %5841, %5849
  br i1 %5850, label %5851, label %5930

5851:                                             ; preds = %5846
  %5852 = icmp eq i32 %5848, 0
  br i1 %5852, label %5858, label %5853

5853:                                             ; preds = %5851
  %5854 = trunc i64 %5841 to i32
  %5855 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplEPKhj(%"class.WTF::StringImpl"* nonnull %5843, i8* %5845, i32 %5854) #11
  br i1 %5855, label %5858, label %5930

5856:                                             ; preds = %5826
  %5857 = icmp eq i64 %5841, 0
  br i1 %5857, label %5858, label %5930

5858:                                             ; preds = %5851, %5853, %5856
  store i32 28, i32* %74, align 8
  %5859 = load i8, i8* %49, align 1, !range !2
  %5860 = icmp eq i8 %5859, 0
  br i1 %5860, label %5867, label %5861

5861:                                             ; preds = %5858
  %5862 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %5863 = load i8*, i8** %5862, align 8
  %5864 = load i8, i8* %5863, align 1
  %5865 = zext i8 %5864 to i16
  %5866 = ptrtoint i8* %5863 to i64
  br label %5873

5867:                                             ; preds = %5858
  %5868 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %5869 = load i16*, i16** %5868, align 8
  %5870 = load i16, i16* %5869, align 2
  %5871 = ptrtoint i16* %5869 to i64
  %5872 = bitcast i16* %5869 to i8*
  br label %5873

5873:                                             ; preds = %5867, %5861
  %5874 = phi i8* [ %5863, %5861 ], [ %5872, %5867 ]
  %5875 = phi i64 [ %5866, %5861 ], [ %5871, %5867 ]
  %5876 = phi i16 [ %5865, %5861 ], [ %5870, %5867 ]
  %5877 = icmp eq i16 %5876, 10
  br i1 %5877, label %5878, label %5899

5878:                                             ; preds = %5873
  %5879 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %5880 = load i8, i8* %5879, align 8, !range !2
  %5881 = icmp eq i8 %5880, 0
  br i1 %5881, label %5899, label %5882, !prof !4

5882:                                             ; preds = %5878
  %5883 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %5884 = load i32, i32* %5883, align 8
  %5885 = add nsw i32 %5884, 1
  store i32 %5885, i32* %5883, align 8
  %5886 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %5887 = load i32, i32* %5886, align 8
  %5888 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %5889 = bitcast i8** %5888 to i64*
  %5890 = load i64, i64* %5889, align 8
  %5891 = sub i64 %5875, %5890
  %5892 = trunc i64 %5891 to i32
  %5893 = xor i8 %5859, 1
  %5894 = zext i8 %5893 to i32
  %5895 = ashr i32 %5892, %5894
  %5896 = add i32 %5887, 1
  %5897 = add i32 %5896, %5895
  %5898 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %5897, i32* %5898, align 4
  br label %5899

5899:                                             ; preds = %5882, %5878, %5873
  %5900 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %5901 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %5902 = load i8*, i8** %5901, align 8
  %5903 = icmp ult i8* %5874, %5902
  br i1 %5903, label %5904, label %5913, !prof !3

5904:                                             ; preds = %5899
  br i1 %5860, label %5909, label %5905

5905:                                             ; preds = %5904
  %5906 = getelementptr inbounds i8, i8* %5874, i64 1
  store i8* %5906, i8** %5900, align 8
  %5907 = load i8, i8* %5906, align 1
  %5908 = zext i8 %5907 to i16
  br label %5915

5909:                                             ; preds = %5904
  %5910 = getelementptr inbounds i8, i8* %5874, i64 2
  %5911 = bitcast i8* %5910 to i16*
  store i8* %5910, i8** %5900, align 8
  %5912 = load i16, i16* %5911, align 2
  br label %5915

5913:                                             ; preds = %5899
  %5914 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %5915

5915:                                             ; preds = %5913, %5909, %5905
  %5916 = phi i16 [ %5914, %5913 ], [ %5908, %5905 ], [ %5912, %5909 ]
  store i16 %5916, i16* %14, align 2
  %5917 = icmp ugt i16 %5916, 15
  br i1 %5917, label %5918, label %5920

5918:                                             ; preds = %5915
  %5919 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %5919, align 8
  br label %6074

5920:                                             ; preds = %5915
  %5921 = load i8, i8* %44, align 1, !range !2
  %5922 = icmp eq i8 %5921, 0
  br i1 %5922, label %5923, label %5925

5923:                                             ; preds = %5920
  %5924 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %5924, label %6072, label %5925

5925:                                             ; preds = %5920, %5923
  %5926 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %5927 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5926, i64 0, i32 0
  %5928 = load i32, i32* %5927, align 8
  %5929 = icmp eq i32 %5928, 5
  br label %14210

5930:                                             ; preds = %5846, %5853, %5856
  store i32 21, i32* %74, align 8
  %5931 = load i8, i8* %49, align 1, !range !2
  %5932 = icmp eq i8 %5931, 0
  br i1 %5932, label %5939, label %5933

5933:                                             ; preds = %5930
  %5934 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %5935 = load i8*, i8** %5934, align 8
  %5936 = load i8, i8* %5935, align 1
  %5937 = zext i8 %5936 to i16
  %5938 = ptrtoint i8* %5935 to i64
  br label %5945

5939:                                             ; preds = %5930
  %5940 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %5941 = load i16*, i16** %5940, align 8
  %5942 = load i16, i16* %5941, align 2
  %5943 = ptrtoint i16* %5941 to i64
  %5944 = bitcast i16* %5941 to i8*
  br label %5945

5945:                                             ; preds = %5939, %5933
  %5946 = phi i8* [ %5935, %5933 ], [ %5944, %5939 ]
  %5947 = phi i64 [ %5938, %5933 ], [ %5943, %5939 ]
  %5948 = phi i16 [ %5937, %5933 ], [ %5942, %5939 ]
  %5949 = icmp eq i16 %5948, 10
  br i1 %5949, label %5950, label %5971

5950:                                             ; preds = %5945
  %5951 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %5952 = load i8, i8* %5951, align 8, !range !2
  %5953 = icmp eq i8 %5952, 0
  br i1 %5953, label %5971, label %5954, !prof !4

5954:                                             ; preds = %5950
  %5955 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %5956 = load i32, i32* %5955, align 8
  %5957 = add nsw i32 %5956, 1
  store i32 %5957, i32* %5955, align 8
  %5958 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %5959 = load i32, i32* %5958, align 8
  %5960 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %5961 = bitcast i8** %5960 to i64*
  %5962 = load i64, i64* %5961, align 8
  %5963 = sub i64 %5947, %5962
  %5964 = trunc i64 %5963 to i32
  %5965 = xor i8 %5931, 1
  %5966 = zext i8 %5965 to i32
  %5967 = ashr i32 %5964, %5966
  %5968 = add i32 %5959, 1
  %5969 = add i32 %5968, %5967
  %5970 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %5969, i32* %5970, align 4
  br label %5971

5971:                                             ; preds = %5954, %5950, %5945
  %5972 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %5973 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %5974 = load i8*, i8** %5973, align 8
  %5975 = icmp ult i8* %5946, %5974
  br i1 %5975, label %5976, label %5985, !prof !3

5976:                                             ; preds = %5971
  br i1 %5932, label %5981, label %5977

5977:                                             ; preds = %5976
  %5978 = getelementptr inbounds i8, i8* %5946, i64 1
  store i8* %5978, i8** %5972, align 8
  %5979 = load i8, i8* %5978, align 1
  %5980 = zext i8 %5979 to i16
  br label %5987

5981:                                             ; preds = %5976
  %5982 = getelementptr inbounds i8, i8* %5946, i64 2
  %5983 = bitcast i8* %5982 to i16*
  store i8* %5982, i8** %5972, align 8
  %5984 = load i16, i16* %5983, align 2
  br label %5987

5985:                                             ; preds = %5971
  %5986 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %5987

5987:                                             ; preds = %5985, %5981, %5977
  %5988 = phi i16 [ %5986, %5985 ], [ %5980, %5977 ], [ %5984, %5981 ]
  store i16 %5988, i16* %14, align 2
  %5989 = icmp ugt i16 %5988, 15
  br i1 %5989, label %5990, label %5992

5990:                                             ; preds = %5987
  %5991 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %5991, align 8
  br label %4468

5992:                                             ; preds = %5987
  %5993 = load i8, i8* %44, align 1, !range !2
  %5994 = icmp eq i8 %5993, 0
  br i1 %5994, label %5995, label %5997

5995:                                             ; preds = %5992
  %5996 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %5996, label %4466, label %5997

5997:                                             ; preds = %5992, %5995
  %5998 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %5999 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5998, i64 0, i32 0
  %6000 = load i32, i32* %5999, align 8
  %6001 = icmp eq i32 %6000, 5
  br label %14210

6002:                                             ; preds = %5812
  %6003 = or i16 %5813, 32
  %6004 = add i16 %6003, -97
  %6005 = icmp ult i16 %6004, 26
  br i1 %6005, label %6006, label %6071

6006:                                             ; preds = %6002
  %6007 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6008 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6007, i64 0, i32 0
  store i32 5, i32* %6008, align 8
  %6009 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6010 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6009, i64 0, i32 3, i32 1
  %6011 = load i16*, i16** %6010, align 8
  %6012 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6009, i64 0, i32 3, i32 2
  %6013 = load i16*, i16** %6012, align 8
  %6014 = icmp eq i16* %6011, %6013
  br i1 %6014, label %6015, label %6018, !prof !4

6015:                                             ; preds = %6006
  %6016 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6009, i64 0, i32 3
  %6017 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %6016) #11
  store i16* %6017, i16** %6010, align 8
  br label %6018

6018:                                             ; preds = %6006, %6015
  %6019 = phi i16* [ %6017, %6015 ], [ %6011, %6006 ]
  %6020 = getelementptr inbounds i16, i16* %6019, i64 1
  store i16* %6020, i16** %6010, align 8
  store i16 %5813, i16* %6019, align 2
  %6021 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6009, i64 0, i32 4
  %6022 = load i16, i16* %6021, align 8
  %6023 = or i16 %6022, %5813
  store i16 %6023, i16* %6021, align 8
  %6024 = load i16, i16* %14, align 2
  %6025 = trunc i16 %6024 to i8
  %6026 = or i8 %6025, 32
  %6027 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %6028 = load i8*, i8** %6027, align 8
  %6029 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 2
  %6030 = load i8*, i8** %6029, align 8
  %6031 = icmp eq i8* %6028, %6030
  br i1 %6031, label %6032, label %6035, !prof !4

6032:                                             ; preds = %6018
  %6033 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %6034 = call i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7* %6033) #11
  store i8* %6034, i8** %6027, align 8
  br label %6035

6035:                                             ; preds = %6018, %6032
  %6036 = phi i8* [ %6034, %6032 ], [ %6028, %6018 ]
  %6037 = getelementptr inbounds i8, i8* %6036, i64 1
  store i8* %6037, i8** %6027, align 8
  store i8 %6026, i8* %6036, align 1
  %6038 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %6039 = load i8*, i8** %6038, align 8
  %6040 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %6041 = load i8*, i8** %6040, align 8
  %6042 = icmp ult i8* %6039, %6041
  br i1 %6042, label %6043, label %6054, !prof !3

6043:                                             ; preds = %6035
  %6044 = load i8, i8* %49, align 1, !range !2
  %6045 = icmp eq i8 %6044, 0
  br i1 %6045, label %6050, label %6046

6046:                                             ; preds = %6043
  %6047 = getelementptr inbounds i8, i8* %6039, i64 1
  store i8* %6047, i8** %6038, align 8
  %6048 = load i8, i8* %6047, align 1
  %6049 = zext i8 %6048 to i16
  br label %6056

6050:                                             ; preds = %6043
  %6051 = getelementptr inbounds i8, i8* %6039, i64 2
  %6052 = bitcast i8* %6051 to i16*
  store i8* %6051, i8** %6038, align 8
  %6053 = load i16, i16* %6052, align 2
  br label %6056

6054:                                             ; preds = %6035
  %6055 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %6056

6056:                                             ; preds = %6054, %6050, %6046
  %6057 = phi i16 [ %6055, %6054 ], [ %6049, %6046 ], [ %6053, %6050 ]
  store i16 %6057, i16* %14, align 2
  %6058 = icmp ugt i16 %6057, 15
  br i1 %6058, label %6059, label %6061

6059:                                             ; preds = %6056
  %6060 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %6060, align 8
  br label %5810

6061:                                             ; preds = %6056
  %6062 = load i8, i8* %44, align 1, !range !2
  %6063 = icmp eq i8 %6062, 0
  br i1 %6063, label %6064, label %6066

6064:                                             ; preds = %6061
  %6065 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %6065, label %5810, label %6066

6066:                                             ; preds = %6061, %6064
  %6067 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6068 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6067, i64 0, i32 0
  %6069 = load i32, i32* %6068, align 8
  %6070 = icmp eq i32 %6069, 5
  br label %14210

6071:                                             ; preds = %6002
  store i32 21, i32* %74, align 8
  br label %4466

6072:                                             ; preds = %6953, %6699, %6452, %6256, %7034, %5923, %73, %6261, %6457, %6704, %6958
  %6073 = load i16, i16* %14, align 2
  br label %6074

6074:                                             ; preds = %5918, %6072, %6772
  %6075 = phi i16 [ %6073, %6072 ], [ %5916, %5918 ], [ %6714, %6772 ]
  switch i16 %6075, label %6179 [
    i16 45, label %6076
    i16 60, label %6127
    i16 0, label %6178
  ]

6076:                                             ; preds = %6074
  %6077 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6078 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6077, i64 0, i32 0
  store i32 5, i32* %6078, align 8
  %6079 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6080 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6079, i64 0, i32 3, i32 1
  %6081 = load i16*, i16** %6080, align 8
  %6082 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6079, i64 0, i32 3, i32 2
  %6083 = load i16*, i16** %6082, align 8
  %6084 = icmp eq i16* %6081, %6083
  br i1 %6084, label %6085, label %6088, !prof !4

6085:                                             ; preds = %6076
  %6086 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6079, i64 0, i32 3
  %6087 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %6086) #11
  store i16* %6087, i16** %6080, align 8
  br label %6088

6088:                                             ; preds = %6076, %6085
  %6089 = phi i16* [ %6087, %6085 ], [ %6081, %6076 ]
  %6090 = getelementptr inbounds i16, i16* %6089, i64 1
  store i16* %6090, i16** %6080, align 8
  store i16 45, i16* %6089, align 2
  %6091 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6079, i64 0, i32 4
  %6092 = load i16, i16* %6091, align 8
  %6093 = or i16 %6092, 45
  store i16 %6093, i16* %6091, align 8
  store i32 29, i32* %74, align 8
  %6094 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %6095 = load i8*, i8** %6094, align 8
  %6096 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %6097 = load i8*, i8** %6096, align 8
  %6098 = icmp ult i8* %6095, %6097
  br i1 %6098, label %6099, label %6110, !prof !3

6099:                                             ; preds = %6088
  %6100 = load i8, i8* %49, align 1, !range !2
  %6101 = icmp eq i8 %6100, 0
  br i1 %6101, label %6106, label %6102

6102:                                             ; preds = %6099
  %6103 = getelementptr inbounds i8, i8* %6095, i64 1
  store i8* %6103, i8** %6094, align 8
  %6104 = load i8, i8* %6103, align 1
  %6105 = zext i8 %6104 to i16
  br label %6112

6106:                                             ; preds = %6099
  %6107 = getelementptr inbounds i8, i8* %6095, i64 2
  %6108 = bitcast i8* %6107 to i16*
  store i8* %6107, i8** %6094, align 8
  %6109 = load i16, i16* %6108, align 2
  br label %6112

6110:                                             ; preds = %6088
  %6111 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %6112

6112:                                             ; preds = %6110, %6106, %6102
  %6113 = phi i16 [ %6111, %6110 ], [ %6105, %6102 ], [ %6109, %6106 ]
  store i16 %6113, i16* %14, align 2
  %6114 = icmp ugt i16 %6113, 15
  br i1 %6114, label %6115, label %6117

6115:                                             ; preds = %6112
  %6116 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %6116, align 8
  br label %6270

6117:                                             ; preds = %6112
  %6118 = load i8, i8* %44, align 1, !range !2
  %6119 = icmp eq i8 %6118, 0
  br i1 %6119, label %6120, label %6122

6120:                                             ; preds = %6117
  %6121 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %6121, label %6268, label %6122

6122:                                             ; preds = %6117, %6120
  %6123 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6124 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6123, i64 0, i32 0
  %6125 = load i32, i32* %6124, align 8
  %6126 = icmp eq i32 %6125, 5
  br label %14210

6127:                                             ; preds = %6074
  %6128 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6129 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6128, i64 0, i32 0
  store i32 5, i32* %6129, align 8
  %6130 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6131 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6130, i64 0, i32 3, i32 1
  %6132 = load i16*, i16** %6131, align 8
  %6133 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6130, i64 0, i32 3, i32 2
  %6134 = load i16*, i16** %6133, align 8
  %6135 = icmp eq i16* %6132, %6134
  br i1 %6135, label %6136, label %6139, !prof !4

6136:                                             ; preds = %6127
  %6137 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6130, i64 0, i32 3
  %6138 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %6137) #11
  store i16* %6138, i16** %6131, align 8
  br label %6139

6139:                                             ; preds = %6127, %6136
  %6140 = phi i16* [ %6138, %6136 ], [ %6132, %6127 ]
  %6141 = getelementptr inbounds i16, i16* %6140, i64 1
  store i16* %6141, i16** %6131, align 8
  store i16 60, i16* %6140, align 2
  %6142 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6130, i64 0, i32 4
  %6143 = load i16, i16* %6142, align 8
  %6144 = or i16 %6143, 60
  store i16 %6144, i16* %6142, align 8
  store i32 31, i32* %74, align 8
  %6145 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %6146 = load i8*, i8** %6145, align 8
  %6147 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %6148 = load i8*, i8** %6147, align 8
  %6149 = icmp ult i8* %6146, %6148
  br i1 %6149, label %6150, label %6161, !prof !3

6150:                                             ; preds = %6139
  %6151 = load i8, i8* %49, align 1, !range !2
  %6152 = icmp eq i8 %6151, 0
  br i1 %6152, label %6157, label %6153

6153:                                             ; preds = %6150
  %6154 = getelementptr inbounds i8, i8* %6146, i64 1
  store i8* %6154, i8** %6145, align 8
  %6155 = load i8, i8* %6154, align 1
  %6156 = zext i8 %6155 to i16
  br label %6163

6157:                                             ; preds = %6150
  %6158 = getelementptr inbounds i8, i8* %6146, i64 2
  %6159 = bitcast i8* %6158 to i16*
  store i8* %6158, i8** %6145, align 8
  %6160 = load i16, i16* %6159, align 2
  br label %6163

6161:                                             ; preds = %6139
  %6162 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %6163

6163:                                             ; preds = %6161, %6157, %6153
  %6164 = phi i16 [ %6162, %6161 ], [ %6156, %6153 ], [ %6160, %6157 ]
  store i16 %6164, i16* %14, align 2
  %6165 = icmp ugt i16 %6164, 15
  br i1 %6165, label %6166, label %6168

6166:                                             ; preds = %6163
  %6167 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %6167, align 8
  br label %6713

6168:                                             ; preds = %6163
  %6169 = load i8, i8* %44, align 1, !range !2
  %6170 = icmp eq i8 %6169, 0
  br i1 %6170, label %6171, label %6173

6171:                                             ; preds = %6168
  %6172 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %6172, label %6711, label %6173

6173:                                             ; preds = %6168, %6171
  %6174 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6175 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6174, i64 0, i32 0
  %6176 = load i32, i32* %6175, align 8
  %6177 = icmp eq i32 %6176, 5
  br label %14210

6178:                                             ; preds = %6074
  store i32 0, i32* %74, align 8
  br label %78

6179:                                             ; preds = %6074
  %6180 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6181 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6180, i64 0, i32 0
  store i32 5, i32* %6181, align 8
  %6182 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6183 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6182, i64 0, i32 3, i32 1
  %6184 = load i16*, i16** %6183, align 8
  %6185 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6182, i64 0, i32 3, i32 2
  %6186 = load i16*, i16** %6185, align 8
  %6187 = icmp eq i16* %6184, %6186
  br i1 %6187, label %6188, label %6191, !prof !4

6188:                                             ; preds = %6179
  %6189 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6182, i64 0, i32 3
  %6190 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %6189) #11
  store i16* %6190, i16** %6183, align 8
  br label %6191

6191:                                             ; preds = %6179, %6188
  %6192 = phi i16* [ %6190, %6188 ], [ %6184, %6179 ]
  %6193 = getelementptr inbounds i16, i16* %6192, i64 1
  store i16* %6193, i16** %6183, align 8
  store i16 %6075, i16* %6192, align 2
  %6194 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6182, i64 0, i32 4
  %6195 = load i16, i16* %6194, align 8
  %6196 = or i16 %6195, %6075
  store i16 %6196, i16* %6194, align 8
  %6197 = load i8, i8* %49, align 1, !range !2
  %6198 = icmp eq i8 %6197, 0
  br i1 %6198, label %6205, label %6199

6199:                                             ; preds = %6191
  %6200 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %6201 = load i8*, i8** %6200, align 8
  %6202 = load i8, i8* %6201, align 1
  %6203 = zext i8 %6202 to i16
  %6204 = ptrtoint i8* %6201 to i64
  br label %6211

6205:                                             ; preds = %6191
  %6206 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %6207 = load i16*, i16** %6206, align 8
  %6208 = load i16, i16* %6207, align 2
  %6209 = ptrtoint i16* %6207 to i64
  %6210 = bitcast i16* %6207 to i8*
  br label %6211

6211:                                             ; preds = %6205, %6199
  %6212 = phi i8* [ %6201, %6199 ], [ %6210, %6205 ]
  %6213 = phi i64 [ %6204, %6199 ], [ %6209, %6205 ]
  %6214 = phi i16 [ %6203, %6199 ], [ %6208, %6205 ]
  %6215 = icmp eq i16 %6214, 10
  br i1 %6215, label %6216, label %6237

6216:                                             ; preds = %6211
  %6217 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %6218 = load i8, i8* %6217, align 8, !range !2
  %6219 = icmp eq i8 %6218, 0
  br i1 %6219, label %6237, label %6220, !prof !4

6220:                                             ; preds = %6216
  %6221 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %6222 = load i32, i32* %6221, align 8
  %6223 = add nsw i32 %6222, 1
  store i32 %6223, i32* %6221, align 8
  %6224 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %6225 = load i32, i32* %6224, align 8
  %6226 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %6227 = bitcast i8** %6226 to i64*
  %6228 = load i64, i64* %6227, align 8
  %6229 = sub i64 %6213, %6228
  %6230 = trunc i64 %6229 to i32
  %6231 = xor i8 %6197, 1
  %6232 = zext i8 %6231 to i32
  %6233 = ashr i32 %6230, %6232
  %6234 = add i32 %6225, 1
  %6235 = add i32 %6234, %6233
  %6236 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %6235, i32* %6236, align 4
  br label %6237

6237:                                             ; preds = %6220, %6216, %6211
  %6238 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %6239 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %6240 = load i8*, i8** %6239, align 8
  %6241 = icmp ult i8* %6212, %6240
  br i1 %6241, label %6242, label %6251, !prof !3

6242:                                             ; preds = %6237
  br i1 %6198, label %6247, label %6243

6243:                                             ; preds = %6242
  %6244 = getelementptr inbounds i8, i8* %6212, i64 1
  store i8* %6244, i8** %6238, align 8
  %6245 = load i8, i8* %6244, align 1
  %6246 = zext i8 %6245 to i16
  br label %6253

6247:                                             ; preds = %6242
  %6248 = getelementptr inbounds i8, i8* %6212, i64 2
  %6249 = bitcast i8* %6248 to i16*
  store i8* %6248, i8** %6238, align 8
  %6250 = load i16, i16* %6249, align 2
  br label %6253

6251:                                             ; preds = %6237
  %6252 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %6253

6253:                                             ; preds = %6251, %6247, %6243
  %6254 = phi i16 [ %6252, %6251 ], [ %6246, %6243 ], [ %6250, %6247 ]
  store i16 %6254, i16* %14, align 2
  %6255 = icmp ugt i16 %6254, 15
  br i1 %6255, label %6256, label %6258

6256:                                             ; preds = %6253
  %6257 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %6257, align 8
  br label %6072

6258:                                             ; preds = %6253
  %6259 = load i8, i8* %44, align 1, !range !2
  %6260 = icmp eq i8 %6259, 0
  br i1 %6260, label %6261, label %6263

6261:                                             ; preds = %6258
  %6262 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %6262, label %6072, label %6263

6263:                                             ; preds = %6258, %6261
  %6264 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6265 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6264, i64 0, i32 0
  %6266 = load i32, i32* %6265, align 8
  %6267 = icmp eq i32 %6266, 5
  br label %14210

6268:                                             ; preds = %6120, %73
  %6269 = load i16, i16* %14, align 2
  br label %6270

6270:                                             ; preds = %6268, %6115
  %6271 = phi i16 [ %6269, %6268 ], [ %6113, %6115 ]
  switch i16 %6271, label %6375 [
    i16 45, label %6272
    i16 60, label %6323
    i16 0, label %6374
  ]

6272:                                             ; preds = %6270
  %6273 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6274 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6273, i64 0, i32 0
  store i32 5, i32* %6274, align 8
  %6275 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6276 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6275, i64 0, i32 3, i32 1
  %6277 = load i16*, i16** %6276, align 8
  %6278 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6275, i64 0, i32 3, i32 2
  %6279 = load i16*, i16** %6278, align 8
  %6280 = icmp eq i16* %6277, %6279
  br i1 %6280, label %6281, label %6284, !prof !4

6281:                                             ; preds = %6272
  %6282 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6275, i64 0, i32 3
  %6283 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %6282) #11
  store i16* %6283, i16** %6276, align 8
  br label %6284

6284:                                             ; preds = %6272, %6281
  %6285 = phi i16* [ %6283, %6281 ], [ %6277, %6272 ]
  %6286 = getelementptr inbounds i16, i16* %6285, i64 1
  store i16* %6286, i16** %6276, align 8
  store i16 45, i16* %6285, align 2
  %6287 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6275, i64 0, i32 4
  %6288 = load i16, i16* %6287, align 8
  %6289 = or i16 %6288, 45
  store i16 %6289, i16* %6287, align 8
  store i32 30, i32* %74, align 8
  %6290 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %6291 = load i8*, i8** %6290, align 8
  %6292 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %6293 = load i8*, i8** %6292, align 8
  %6294 = icmp ult i8* %6291, %6293
  br i1 %6294, label %6295, label %6306, !prof !3

6295:                                             ; preds = %6284
  %6296 = load i8, i8* %49, align 1, !range !2
  %6297 = icmp eq i8 %6296, 0
  br i1 %6297, label %6302, label %6298

6298:                                             ; preds = %6295
  %6299 = getelementptr inbounds i8, i8* %6291, i64 1
  store i8* %6299, i8** %6290, align 8
  %6300 = load i8, i8* %6299, align 1
  %6301 = zext i8 %6300 to i16
  br label %6308

6302:                                             ; preds = %6295
  %6303 = getelementptr inbounds i8, i8* %6291, i64 2
  %6304 = bitcast i8* %6303 to i16*
  store i8* %6303, i8** %6290, align 8
  %6305 = load i16, i16* %6304, align 2
  br label %6308

6306:                                             ; preds = %6284
  %6307 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %6308

6308:                                             ; preds = %6306, %6302, %6298
  %6309 = phi i16 [ %6307, %6306 ], [ %6301, %6298 ], [ %6305, %6302 ]
  store i16 %6309, i16* %14, align 2
  %6310 = icmp ugt i16 %6309, 15
  br i1 %6310, label %6311, label %6313

6311:                                             ; preds = %6308
  %6312 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %6312, align 8
  br label %6466

6313:                                             ; preds = %6308
  %6314 = load i8, i8* %44, align 1, !range !2
  %6315 = icmp eq i8 %6314, 0
  br i1 %6315, label %6316, label %6318

6316:                                             ; preds = %6313
  %6317 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %6317, label %6464, label %6318

6318:                                             ; preds = %6313, %6316
  %6319 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6320 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6319, i64 0, i32 0
  %6321 = load i32, i32* %6320, align 8
  %6322 = icmp eq i32 %6321, 5
  br label %14210

6323:                                             ; preds = %6270
  %6324 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6325 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6324, i64 0, i32 0
  store i32 5, i32* %6325, align 8
  %6326 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6327 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6326, i64 0, i32 3, i32 1
  %6328 = load i16*, i16** %6327, align 8
  %6329 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6326, i64 0, i32 3, i32 2
  %6330 = load i16*, i16** %6329, align 8
  %6331 = icmp eq i16* %6328, %6330
  br i1 %6331, label %6332, label %6335, !prof !4

6332:                                             ; preds = %6323
  %6333 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6326, i64 0, i32 3
  %6334 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %6333) #11
  store i16* %6334, i16** %6327, align 8
  br label %6335

6335:                                             ; preds = %6323, %6332
  %6336 = phi i16* [ %6334, %6332 ], [ %6328, %6323 ]
  %6337 = getelementptr inbounds i16, i16* %6336, i64 1
  store i16* %6337, i16** %6327, align 8
  store i16 60, i16* %6336, align 2
  %6338 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6326, i64 0, i32 4
  %6339 = load i16, i16* %6338, align 8
  %6340 = or i16 %6339, 60
  store i16 %6340, i16* %6338, align 8
  store i32 31, i32* %74, align 8
  %6341 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %6342 = load i8*, i8** %6341, align 8
  %6343 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %6344 = load i8*, i8** %6343, align 8
  %6345 = icmp ult i8* %6342, %6344
  br i1 %6345, label %6346, label %6357, !prof !3

6346:                                             ; preds = %6335
  %6347 = load i8, i8* %49, align 1, !range !2
  %6348 = icmp eq i8 %6347, 0
  br i1 %6348, label %6353, label %6349

6349:                                             ; preds = %6346
  %6350 = getelementptr inbounds i8, i8* %6342, i64 1
  store i8* %6350, i8** %6341, align 8
  %6351 = load i8, i8* %6350, align 1
  %6352 = zext i8 %6351 to i16
  br label %6359

6353:                                             ; preds = %6346
  %6354 = getelementptr inbounds i8, i8* %6342, i64 2
  %6355 = bitcast i8* %6354 to i16*
  store i8* %6354, i8** %6341, align 8
  %6356 = load i16, i16* %6355, align 2
  br label %6359

6357:                                             ; preds = %6335
  %6358 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %6359

6359:                                             ; preds = %6357, %6353, %6349
  %6360 = phi i16 [ %6358, %6357 ], [ %6352, %6349 ], [ %6356, %6353 ]
  store i16 %6360, i16* %14, align 2
  %6361 = icmp ugt i16 %6360, 15
  br i1 %6361, label %6362, label %6364

6362:                                             ; preds = %6359
  %6363 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %6363, align 8
  br label %6713

6364:                                             ; preds = %6359
  %6365 = load i8, i8* %44, align 1, !range !2
  %6366 = icmp eq i8 %6365, 0
  br i1 %6366, label %6367, label %6369

6367:                                             ; preds = %6364
  %6368 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %6368, label %6711, label %6369

6369:                                             ; preds = %6364, %6367
  %6370 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6371 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6370, i64 0, i32 0
  %6372 = load i32, i32* %6371, align 8
  %6373 = icmp eq i32 %6372, 5
  br label %14210

6374:                                             ; preds = %6270
  store i32 0, i32* %74, align 8
  br label %78

6375:                                             ; preds = %6270
  %6376 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6377 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6376, i64 0, i32 0
  store i32 5, i32* %6377, align 8
  %6378 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6379 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6378, i64 0, i32 3, i32 1
  %6380 = load i16*, i16** %6379, align 8
  %6381 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6378, i64 0, i32 3, i32 2
  %6382 = load i16*, i16** %6381, align 8
  %6383 = icmp eq i16* %6380, %6382
  br i1 %6383, label %6384, label %6387, !prof !4

6384:                                             ; preds = %6375
  %6385 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6378, i64 0, i32 3
  %6386 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %6385) #11
  store i16* %6386, i16** %6379, align 8
  br label %6387

6387:                                             ; preds = %6375, %6384
  %6388 = phi i16* [ %6386, %6384 ], [ %6380, %6375 ]
  %6389 = getelementptr inbounds i16, i16* %6388, i64 1
  store i16* %6389, i16** %6379, align 8
  store i16 %6271, i16* %6388, align 2
  %6390 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6378, i64 0, i32 4
  %6391 = load i16, i16* %6390, align 8
  %6392 = or i16 %6391, %6271
  store i16 %6392, i16* %6390, align 8
  store i32 28, i32* %74, align 8
  %6393 = load i8, i8* %49, align 1, !range !2
  %6394 = icmp eq i8 %6393, 0
  br i1 %6394, label %6401, label %6395

6395:                                             ; preds = %6387
  %6396 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %6397 = load i8*, i8** %6396, align 8
  %6398 = load i8, i8* %6397, align 1
  %6399 = zext i8 %6398 to i16
  %6400 = ptrtoint i8* %6397 to i64
  br label %6407

6401:                                             ; preds = %6387
  %6402 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %6403 = load i16*, i16** %6402, align 8
  %6404 = load i16, i16* %6403, align 2
  %6405 = ptrtoint i16* %6403 to i64
  %6406 = bitcast i16* %6403 to i8*
  br label %6407

6407:                                             ; preds = %6401, %6395
  %6408 = phi i8* [ %6397, %6395 ], [ %6406, %6401 ]
  %6409 = phi i64 [ %6400, %6395 ], [ %6405, %6401 ]
  %6410 = phi i16 [ %6399, %6395 ], [ %6404, %6401 ]
  %6411 = icmp eq i16 %6410, 10
  br i1 %6411, label %6412, label %6433

6412:                                             ; preds = %6407
  %6413 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %6414 = load i8, i8* %6413, align 8, !range !2
  %6415 = icmp eq i8 %6414, 0
  br i1 %6415, label %6433, label %6416, !prof !4

6416:                                             ; preds = %6412
  %6417 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %6418 = load i32, i32* %6417, align 8
  %6419 = add nsw i32 %6418, 1
  store i32 %6419, i32* %6417, align 8
  %6420 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %6421 = load i32, i32* %6420, align 8
  %6422 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %6423 = bitcast i8** %6422 to i64*
  %6424 = load i64, i64* %6423, align 8
  %6425 = sub i64 %6409, %6424
  %6426 = trunc i64 %6425 to i32
  %6427 = xor i8 %6393, 1
  %6428 = zext i8 %6427 to i32
  %6429 = ashr i32 %6426, %6428
  %6430 = add i32 %6421, 1
  %6431 = add i32 %6430, %6429
  %6432 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %6431, i32* %6432, align 4
  br label %6433

6433:                                             ; preds = %6416, %6412, %6407
  %6434 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %6435 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %6436 = load i8*, i8** %6435, align 8
  %6437 = icmp ult i8* %6408, %6436
  br i1 %6437, label %6438, label %6447, !prof !3

6438:                                             ; preds = %6433
  br i1 %6394, label %6443, label %6439

6439:                                             ; preds = %6438
  %6440 = getelementptr inbounds i8, i8* %6408, i64 1
  store i8* %6440, i8** %6434, align 8
  %6441 = load i8, i8* %6440, align 1
  %6442 = zext i8 %6441 to i16
  br label %6449

6443:                                             ; preds = %6438
  %6444 = getelementptr inbounds i8, i8* %6408, i64 2
  %6445 = bitcast i8* %6444 to i16*
  store i8* %6444, i8** %6434, align 8
  %6446 = load i16, i16* %6445, align 2
  br label %6449

6447:                                             ; preds = %6433
  %6448 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %6449

6449:                                             ; preds = %6447, %6443, %6439
  %6450 = phi i16 [ %6448, %6447 ], [ %6442, %6439 ], [ %6446, %6443 ]
  store i16 %6450, i16* %14, align 2
  %6451 = icmp ugt i16 %6450, 15
  br i1 %6451, label %6452, label %6454

6452:                                             ; preds = %6449
  %6453 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %6453, align 8
  br label %6072

6454:                                             ; preds = %6449
  %6455 = load i8, i8* %44, align 1, !range !2
  %6456 = icmp eq i8 %6455, 0
  br i1 %6456, label %6457, label %6459

6457:                                             ; preds = %6454
  %6458 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %6458, label %6072, label %6459

6459:                                             ; preds = %6454, %6457
  %6460 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6461 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6460, i64 0, i32 0
  %6462 = load i32, i32* %6461, align 8
  %6463 = icmp eq i32 %6462, 5
  br label %14210

6464:                                             ; preds = %6507, %6316, %73, %6512
  %6465 = load i16, i16* %14, align 2
  br label %6466

6466:                                             ; preds = %6311, %6464
  %6467 = phi i16 [ %6465, %6464 ], [ %6309, %6311 ]
  switch i16 %6467, label %6622 [
    i16 45, label %6468
    i16 60, label %6519
    i16 62, label %6570
    i16 0, label %6621
  ]

6468:                                             ; preds = %6466
  %6469 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6470 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6469, i64 0, i32 0
  store i32 5, i32* %6470, align 8
  %6471 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6472 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6471, i64 0, i32 3, i32 1
  %6473 = load i16*, i16** %6472, align 8
  %6474 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6471, i64 0, i32 3, i32 2
  %6475 = load i16*, i16** %6474, align 8
  %6476 = icmp eq i16* %6473, %6475
  br i1 %6476, label %6477, label %6480, !prof !4

6477:                                             ; preds = %6468
  %6478 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6471, i64 0, i32 3
  %6479 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %6478) #11
  store i16* %6479, i16** %6472, align 8
  br label %6480

6480:                                             ; preds = %6468, %6477
  %6481 = phi i16* [ %6479, %6477 ], [ %6473, %6468 ]
  %6482 = getelementptr inbounds i16, i16* %6481, i64 1
  store i16* %6482, i16** %6472, align 8
  store i16 45, i16* %6481, align 2
  %6483 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6471, i64 0, i32 4
  %6484 = load i16, i16* %6483, align 8
  %6485 = or i16 %6484, 45
  store i16 %6485, i16* %6483, align 8
  %6486 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %6487 = load i8*, i8** %6486, align 8
  %6488 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %6489 = load i8*, i8** %6488, align 8
  %6490 = icmp ult i8* %6487, %6489
  br i1 %6490, label %6491, label %6502, !prof !3

6491:                                             ; preds = %6480
  %6492 = load i8, i8* %49, align 1, !range !2
  %6493 = icmp eq i8 %6492, 0
  br i1 %6493, label %6498, label %6494

6494:                                             ; preds = %6491
  %6495 = getelementptr inbounds i8, i8* %6487, i64 1
  store i8* %6495, i8** %6486, align 8
  %6496 = load i8, i8* %6495, align 1
  %6497 = zext i8 %6496 to i16
  br label %6504

6498:                                             ; preds = %6491
  %6499 = getelementptr inbounds i8, i8* %6487, i64 2
  %6500 = bitcast i8* %6499 to i16*
  store i8* %6499, i8** %6486, align 8
  %6501 = load i16, i16* %6500, align 2
  br label %6504

6502:                                             ; preds = %6480
  %6503 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %6504

6504:                                             ; preds = %6502, %6498, %6494
  %6505 = phi i16 [ %6503, %6502 ], [ %6497, %6494 ], [ %6501, %6498 ]
  store i16 %6505, i16* %14, align 2
  %6506 = icmp ugt i16 %6505, 15
  br i1 %6506, label %6507, label %6509

6507:                                             ; preds = %6504
  %6508 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %6508, align 8
  br label %6464

6509:                                             ; preds = %6504
  %6510 = load i8, i8* %44, align 1, !range !2
  %6511 = icmp eq i8 %6510, 0
  br i1 %6511, label %6512, label %6514

6512:                                             ; preds = %6509
  %6513 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %6513, label %6464, label %6514

6514:                                             ; preds = %6509, %6512
  %6515 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6516 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6515, i64 0, i32 0
  %6517 = load i32, i32* %6516, align 8
  %6518 = icmp eq i32 %6517, 5
  br label %14210

6519:                                             ; preds = %6466
  %6520 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6521 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6520, i64 0, i32 0
  store i32 5, i32* %6521, align 8
  %6522 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6523 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6522, i64 0, i32 3, i32 1
  %6524 = load i16*, i16** %6523, align 8
  %6525 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6522, i64 0, i32 3, i32 2
  %6526 = load i16*, i16** %6525, align 8
  %6527 = icmp eq i16* %6524, %6526
  br i1 %6527, label %6528, label %6531, !prof !4

6528:                                             ; preds = %6519
  %6529 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6522, i64 0, i32 3
  %6530 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %6529) #11
  store i16* %6530, i16** %6523, align 8
  br label %6531

6531:                                             ; preds = %6519, %6528
  %6532 = phi i16* [ %6530, %6528 ], [ %6524, %6519 ]
  %6533 = getelementptr inbounds i16, i16* %6532, i64 1
  store i16* %6533, i16** %6523, align 8
  store i16 60, i16* %6532, align 2
  %6534 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6522, i64 0, i32 4
  %6535 = load i16, i16* %6534, align 8
  %6536 = or i16 %6535, 60
  store i16 %6536, i16* %6534, align 8
  store i32 31, i32* %74, align 8
  %6537 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %6538 = load i8*, i8** %6537, align 8
  %6539 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %6540 = load i8*, i8** %6539, align 8
  %6541 = icmp ult i8* %6538, %6540
  br i1 %6541, label %6542, label %6553, !prof !3

6542:                                             ; preds = %6531
  %6543 = load i8, i8* %49, align 1, !range !2
  %6544 = icmp eq i8 %6543, 0
  br i1 %6544, label %6549, label %6545

6545:                                             ; preds = %6542
  %6546 = getelementptr inbounds i8, i8* %6538, i64 1
  store i8* %6546, i8** %6537, align 8
  %6547 = load i8, i8* %6546, align 1
  %6548 = zext i8 %6547 to i16
  br label %6555

6549:                                             ; preds = %6542
  %6550 = getelementptr inbounds i8, i8* %6538, i64 2
  %6551 = bitcast i8* %6550 to i16*
  store i8* %6550, i8** %6537, align 8
  %6552 = load i16, i16* %6551, align 2
  br label %6555

6553:                                             ; preds = %6531
  %6554 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %6555

6555:                                             ; preds = %6553, %6549, %6545
  %6556 = phi i16 [ %6554, %6553 ], [ %6548, %6545 ], [ %6552, %6549 ]
  store i16 %6556, i16* %14, align 2
  %6557 = icmp ugt i16 %6556, 15
  br i1 %6557, label %6558, label %6560

6558:                                             ; preds = %6555
  %6559 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %6559, align 8
  br label %6713

6560:                                             ; preds = %6555
  %6561 = load i8, i8* %44, align 1, !range !2
  %6562 = icmp eq i8 %6561, 0
  br i1 %6562, label %6563, label %6565

6563:                                             ; preds = %6560
  %6564 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %6564, label %6711, label %6565

6565:                                             ; preds = %6560, %6563
  %6566 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6567 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6566, i64 0, i32 0
  %6568 = load i32, i32* %6567, align 8
  %6569 = icmp eq i32 %6568, 5
  br label %14210

6570:                                             ; preds = %6466
  %6571 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6572 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6571, i64 0, i32 0
  store i32 5, i32* %6572, align 8
  %6573 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6574 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6573, i64 0, i32 3, i32 1
  %6575 = load i16*, i16** %6574, align 8
  %6576 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6573, i64 0, i32 3, i32 2
  %6577 = load i16*, i16** %6576, align 8
  %6578 = icmp eq i16* %6575, %6577
  br i1 %6578, label %6579, label %6582, !prof !4

6579:                                             ; preds = %6570
  %6580 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6573, i64 0, i32 3
  %6581 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %6580) #11
  store i16* %6581, i16** %6574, align 8
  br label %6582

6582:                                             ; preds = %6570, %6579
  %6583 = phi i16* [ %6581, %6579 ], [ %6575, %6570 ]
  %6584 = getelementptr inbounds i16, i16* %6583, i64 1
  store i16* %6584, i16** %6574, align 8
  store i16 62, i16* %6583, align 2
  %6585 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6573, i64 0, i32 4
  %6586 = load i16, i16* %6585, align 8
  %6587 = or i16 %6586, 62
  store i16 %6587, i16* %6585, align 8
  store i32 5, i32* %74, align 8
  %6588 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %6589 = load i8*, i8** %6588, align 8
  %6590 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %6591 = load i8*, i8** %6590, align 8
  %6592 = icmp ult i8* %6589, %6591
  br i1 %6592, label %6593, label %6604, !prof !3

6593:                                             ; preds = %6582
  %6594 = load i8, i8* %49, align 1, !range !2
  %6595 = icmp eq i8 %6594, 0
  br i1 %6595, label %6600, label %6596

6596:                                             ; preds = %6593
  %6597 = getelementptr inbounds i8, i8* %6589, i64 1
  store i8* %6597, i8** %6588, align 8
  %6598 = load i8, i8* %6597, align 1
  %6599 = zext i8 %6598 to i16
  br label %6606

6600:                                             ; preds = %6593
  %6601 = getelementptr inbounds i8, i8* %6589, i64 2
  %6602 = bitcast i8* %6601 to i16*
  store i8* %6601, i8** %6588, align 8
  %6603 = load i16, i16* %6602, align 2
  br label %6606

6604:                                             ; preds = %6582
  %6605 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %6606

6606:                                             ; preds = %6604, %6600, %6596
  %6607 = phi i16 [ %6605, %6604 ], [ %6599, %6596 ], [ %6603, %6600 ]
  store i16 %6607, i16* %14, align 2
  %6608 = icmp ugt i16 %6607, 15
  br i1 %6608, label %6609, label %6611

6609:                                             ; preds = %6606
  %6610 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %6610, align 8
  br label %1207

6611:                                             ; preds = %6606
  %6612 = load i8, i8* %44, align 1, !range !2
  %6613 = icmp eq i8 %6612, 0
  br i1 %6613, label %6614, label %6616

6614:                                             ; preds = %6611
  %6615 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %6615, label %1207, label %6616

6616:                                             ; preds = %6611, %6614
  %6617 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6618 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6617, i64 0, i32 0
  %6619 = load i32, i32* %6618, align 8
  %6620 = icmp eq i32 %6619, 5
  br label %14210

6621:                                             ; preds = %6466
  store i32 0, i32* %74, align 8
  br label %78

6622:                                             ; preds = %6466
  %6623 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6624 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6623, i64 0, i32 0
  store i32 5, i32* %6624, align 8
  %6625 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6626 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6625, i64 0, i32 3, i32 1
  %6627 = load i16*, i16** %6626, align 8
  %6628 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6625, i64 0, i32 3, i32 2
  %6629 = load i16*, i16** %6628, align 8
  %6630 = icmp eq i16* %6627, %6629
  br i1 %6630, label %6631, label %6634, !prof !4

6631:                                             ; preds = %6622
  %6632 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6625, i64 0, i32 3
  %6633 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %6632) #11
  store i16* %6633, i16** %6626, align 8
  br label %6634

6634:                                             ; preds = %6622, %6631
  %6635 = phi i16* [ %6633, %6631 ], [ %6627, %6622 ]
  %6636 = getelementptr inbounds i16, i16* %6635, i64 1
  store i16* %6636, i16** %6626, align 8
  store i16 %6467, i16* %6635, align 2
  %6637 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6625, i64 0, i32 4
  %6638 = load i16, i16* %6637, align 8
  %6639 = or i16 %6638, %6467
  store i16 %6639, i16* %6637, align 8
  store i32 28, i32* %74, align 8
  %6640 = load i8, i8* %49, align 1, !range !2
  %6641 = icmp eq i8 %6640, 0
  br i1 %6641, label %6648, label %6642

6642:                                             ; preds = %6634
  %6643 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %6644 = load i8*, i8** %6643, align 8
  %6645 = load i8, i8* %6644, align 1
  %6646 = zext i8 %6645 to i16
  %6647 = ptrtoint i8* %6644 to i64
  br label %6654

6648:                                             ; preds = %6634
  %6649 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %6650 = load i16*, i16** %6649, align 8
  %6651 = load i16, i16* %6650, align 2
  %6652 = ptrtoint i16* %6650 to i64
  %6653 = bitcast i16* %6650 to i8*
  br label %6654

6654:                                             ; preds = %6648, %6642
  %6655 = phi i8* [ %6644, %6642 ], [ %6653, %6648 ]
  %6656 = phi i64 [ %6647, %6642 ], [ %6652, %6648 ]
  %6657 = phi i16 [ %6646, %6642 ], [ %6651, %6648 ]
  %6658 = icmp eq i16 %6657, 10
  br i1 %6658, label %6659, label %6680

6659:                                             ; preds = %6654
  %6660 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %6661 = load i8, i8* %6660, align 8, !range !2
  %6662 = icmp eq i8 %6661, 0
  br i1 %6662, label %6680, label %6663, !prof !4

6663:                                             ; preds = %6659
  %6664 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %6665 = load i32, i32* %6664, align 8
  %6666 = add nsw i32 %6665, 1
  store i32 %6666, i32* %6664, align 8
  %6667 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %6668 = load i32, i32* %6667, align 8
  %6669 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %6670 = bitcast i8** %6669 to i64*
  %6671 = load i64, i64* %6670, align 8
  %6672 = sub i64 %6656, %6671
  %6673 = trunc i64 %6672 to i32
  %6674 = xor i8 %6640, 1
  %6675 = zext i8 %6674 to i32
  %6676 = ashr i32 %6673, %6675
  %6677 = add i32 %6668, 1
  %6678 = add i32 %6677, %6676
  %6679 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %6678, i32* %6679, align 4
  br label %6680

6680:                                             ; preds = %6663, %6659, %6654
  %6681 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %6682 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %6683 = load i8*, i8** %6682, align 8
  %6684 = icmp ult i8* %6655, %6683
  br i1 %6684, label %6685, label %6694, !prof !3

6685:                                             ; preds = %6680
  br i1 %6641, label %6690, label %6686

6686:                                             ; preds = %6685
  %6687 = getelementptr inbounds i8, i8* %6655, i64 1
  store i8* %6687, i8** %6681, align 8
  %6688 = load i8, i8* %6687, align 1
  %6689 = zext i8 %6688 to i16
  br label %6696

6690:                                             ; preds = %6685
  %6691 = getelementptr inbounds i8, i8* %6655, i64 2
  %6692 = bitcast i8* %6691 to i16*
  store i8* %6691, i8** %6681, align 8
  %6693 = load i16, i16* %6692, align 2
  br label %6696

6694:                                             ; preds = %6680
  %6695 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %6696

6696:                                             ; preds = %6694, %6690, %6686
  %6697 = phi i16 [ %6695, %6694 ], [ %6689, %6686 ], [ %6693, %6690 ]
  store i16 %6697, i16* %14, align 2
  %6698 = icmp ugt i16 %6697, 15
  br i1 %6698, label %6699, label %6701

6699:                                             ; preds = %6696
  %6700 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %6700, align 8
  br label %6072

6701:                                             ; preds = %6696
  %6702 = load i8, i8* %44, align 1, !range !2
  %6703 = icmp eq i8 %6702, 0
  br i1 %6703, label %6704, label %6706

6704:                                             ; preds = %6701
  %6705 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %6705, label %6072, label %6706

6706:                                             ; preds = %6701, %6704
  %6707 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6708 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6707, i64 0, i32 0
  %6709 = load i32, i32* %6708, align 8
  %6710 = icmp eq i32 %6709, 5
  br label %14210

6711:                                             ; preds = %6171, %6367, %6563, %73
  %6712 = load i16, i16* %14, align 2
  br label %6713

6713:                                             ; preds = %6711, %6558, %6362, %6166
  %6714 = phi i16 [ %6712, %6711 ], [ %6556, %6558 ], [ %6360, %6362 ], [ %6164, %6166 ]
  %6715 = icmp eq i16 %6714, 47
  br i1 %6715, label %6716, label %6772

6716:                                             ; preds = %6713
  %6717 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6718 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6717, i64 0, i32 0
  store i32 5, i32* %6718, align 8
  %6719 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6720 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6719, i64 0, i32 3, i32 1
  %6721 = load i16*, i16** %6720, align 8
  %6722 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6719, i64 0, i32 3, i32 2
  %6723 = load i16*, i16** %6722, align 8
  %6724 = icmp eq i16* %6721, %6723
  br i1 %6724, label %6725, label %6728, !prof !4

6725:                                             ; preds = %6716
  %6726 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6719, i64 0, i32 3
  %6727 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %6726) #11
  store i16* %6727, i16** %6720, align 8
  br label %6728

6728:                                             ; preds = %6716, %6725
  %6729 = phi i16* [ %6727, %6725 ], [ %6721, %6716 ]
  %6730 = getelementptr inbounds i16, i16* %6729, i64 1
  store i16* %6730, i16** %6720, align 8
  store i16 47, i16* %6729, align 2
  %6731 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6719, i64 0, i32 4
  %6732 = load i16, i16* %6731, align 8
  %6733 = or i16 %6732, 47
  store i16 %6733, i16* %6731, align 8
  %6734 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %6735 = bitcast %class.LiteralBuffer.7* %6734 to i64*
  %6736 = load i64, i64* %6735, align 8
  %6737 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %6738 = bitcast i8** %6737 to i64*
  store i64 %6736, i64* %6738, align 8
  store i32 32, i32* %74, align 8
  %6739 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %6740 = load i8*, i8** %6739, align 8
  %6741 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %6742 = load i8*, i8** %6741, align 8
  %6743 = icmp ult i8* %6740, %6742
  br i1 %6743, label %6744, label %6755, !prof !3

6744:                                             ; preds = %6728
  %6745 = load i8, i8* %49, align 1, !range !2
  %6746 = icmp eq i8 %6745, 0
  br i1 %6746, label %6751, label %6747

6747:                                             ; preds = %6744
  %6748 = getelementptr inbounds i8, i8* %6740, i64 1
  store i8* %6748, i8** %6739, align 8
  %6749 = load i8, i8* %6748, align 1
  %6750 = zext i8 %6749 to i16
  br label %6757

6751:                                             ; preds = %6744
  %6752 = getelementptr inbounds i8, i8* %6740, i64 2
  %6753 = bitcast i8* %6752 to i16*
  store i8* %6752, i8** %6739, align 8
  %6754 = load i16, i16* %6753, align 2
  br label %6757

6755:                                             ; preds = %6728
  %6756 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %6757

6757:                                             ; preds = %6755, %6751, %6747
  %6758 = phi i16 [ %6756, %6755 ], [ %6750, %6747 ], [ %6754, %6751 ]
  store i16 %6758, i16* %14, align 2
  %6759 = icmp ugt i16 %6758, 15
  br i1 %6759, label %6760, label %6762

6760:                                             ; preds = %6757
  %6761 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %6761, align 8
  br label %6775

6762:                                             ; preds = %6757
  %6763 = load i8, i8* %44, align 1, !range !2
  %6764 = icmp eq i8 %6763, 0
  br i1 %6764, label %6765, label %6767

6765:                                             ; preds = %6762
  %6766 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %6766, label %6773, label %6767

6767:                                             ; preds = %6762, %6765
  %6768 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6769 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6768, i64 0, i32 0
  %6770 = load i32, i32* %6769, align 8
  %6771 = icmp eq i32 %6770, 5
  br label %14210

6772:                                             ; preds = %6713
  store i32 28, i32* %74, align 8
  br label %6074

6773:                                             ; preds = %7022, %6765, %73, %7027
  %6774 = load i16, i16* %14, align 2
  br label %6775

6775:                                             ; preds = %6760, %6773
  %6776 = phi i16 [ %6774, %6773 ], [ %6758, %6760 ]
  switch i16 %6776, label %6965 [
    i16 32, label %6777
    i16 10, label %6777
    i16 9, label %6777
    i16 12, label %6777
    i16 47, label %6777
    i16 62, label %6777
  ]

6777:                                             ; preds = %6775, %6775, %6775, %6775, %6775, %6775
  %6778 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6779 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6778, i64 0, i32 0
  store i32 5, i32* %6779, align 8
  %6780 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6781 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6780, i64 0, i32 3, i32 1
  %6782 = load i16*, i16** %6781, align 8
  %6783 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6780, i64 0, i32 3, i32 2
  %6784 = load i16*, i16** %6783, align 8
  %6785 = icmp eq i16* %6782, %6784
  br i1 %6785, label %6786, label %6789, !prof !4

6786:                                             ; preds = %6777
  %6787 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6780, i64 0, i32 3
  %6788 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %6787) #11
  store i16* %6788, i16** %6781, align 8
  br label %6789

6789:                                             ; preds = %6777, %6786
  %6790 = phi i16* [ %6788, %6786 ], [ %6782, %6777 ]
  %6791 = getelementptr inbounds i16, i16* %6790, i64 1
  store i16* %6791, i16** %6781, align 8
  store i16 %6776, i16* %6790, align 2
  %6792 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6780, i64 0, i32 4
  %6793 = load i16, i16* %6792, align 8
  %6794 = or i16 %6793, %6776
  store i16 %6794, i16* %6792, align 8
  %6795 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE to %"class.blink::QualifiedName"**), align 8
  %6796 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %6795, i64 0, i32 0, i32 0
  %6797 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6796, align 8
  %6798 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %6799 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %6800 = bitcast i8** %6799 to i64*
  %6801 = load i64, i64* %6800, align 8
  %6802 = bitcast %class.LiteralBuffer.7* %6798 to i64*
  %6803 = load i64, i64* %6802, align 8
  %6804 = sub i64 %6801, %6803
  %6805 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %6797, i64 0, i32 3, i32 0, i32 0, i32 0
  %6806 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6805, align 8
  %6807 = icmp eq %"class.WTF::StringImpl"* %6806, null
  %6808 = inttoptr i64 %6803 to i8*
  br i1 %6807, label %6819, label %6809

6809:                                             ; preds = %6789
  %6810 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6806, i64 0, i32 1
  %6811 = load i32, i32* %6810, align 4
  %6812 = zext i32 %6811 to i64
  %6813 = icmp eq i64 %6804, %6812
  br i1 %6813, label %6814, label %6893

6814:                                             ; preds = %6809
  %6815 = icmp eq i32 %6811, 0
  br i1 %6815, label %6821, label %6816

6816:                                             ; preds = %6814
  %6817 = trunc i64 %6804 to i32
  %6818 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplEPKhj(%"class.WTF::StringImpl"* nonnull %6806, i8* %6808, i32 %6817) #11
  br i1 %6818, label %6821, label %6893

6819:                                             ; preds = %6789
  %6820 = icmp eq i64 %6804, 0
  br i1 %6820, label %6821, label %6893

6821:                                             ; preds = %6814, %6816, %6819
  store i32 21, i32* %74, align 8
  %6822 = load i8, i8* %49, align 1, !range !2
  %6823 = icmp eq i8 %6822, 0
  br i1 %6823, label %6830, label %6824

6824:                                             ; preds = %6821
  %6825 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %6826 = load i8*, i8** %6825, align 8
  %6827 = load i8, i8* %6826, align 1
  %6828 = zext i8 %6827 to i16
  %6829 = ptrtoint i8* %6826 to i64
  br label %6836

6830:                                             ; preds = %6821
  %6831 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %6832 = load i16*, i16** %6831, align 8
  %6833 = load i16, i16* %6832, align 2
  %6834 = ptrtoint i16* %6832 to i64
  %6835 = bitcast i16* %6832 to i8*
  br label %6836

6836:                                             ; preds = %6830, %6824
  %6837 = phi i8* [ %6826, %6824 ], [ %6835, %6830 ]
  %6838 = phi i64 [ %6829, %6824 ], [ %6834, %6830 ]
  %6839 = phi i16 [ %6828, %6824 ], [ %6833, %6830 ]
  %6840 = icmp eq i16 %6839, 10
  br i1 %6840, label %6841, label %6862

6841:                                             ; preds = %6836
  %6842 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %6843 = load i8, i8* %6842, align 8, !range !2
  %6844 = icmp eq i8 %6843, 0
  br i1 %6844, label %6862, label %6845, !prof !4

6845:                                             ; preds = %6841
  %6846 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %6847 = load i32, i32* %6846, align 8
  %6848 = add nsw i32 %6847, 1
  store i32 %6848, i32* %6846, align 8
  %6849 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %6850 = load i32, i32* %6849, align 8
  %6851 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %6852 = bitcast i8** %6851 to i64*
  %6853 = load i64, i64* %6852, align 8
  %6854 = sub i64 %6838, %6853
  %6855 = trunc i64 %6854 to i32
  %6856 = xor i8 %6822, 1
  %6857 = zext i8 %6856 to i32
  %6858 = ashr i32 %6855, %6857
  %6859 = add i32 %6850, 1
  %6860 = add i32 %6859, %6858
  %6861 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %6860, i32* %6861, align 4
  br label %6862

6862:                                             ; preds = %6845, %6841, %6836
  %6863 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %6864 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %6865 = load i8*, i8** %6864, align 8
  %6866 = icmp ult i8* %6837, %6865
  br i1 %6866, label %6867, label %6876, !prof !3

6867:                                             ; preds = %6862
  br i1 %6823, label %6872, label %6868

6868:                                             ; preds = %6867
  %6869 = getelementptr inbounds i8, i8* %6837, i64 1
  store i8* %6869, i8** %6863, align 8
  %6870 = load i8, i8* %6869, align 1
  %6871 = zext i8 %6870 to i16
  br label %6878

6872:                                             ; preds = %6867
  %6873 = getelementptr inbounds i8, i8* %6837, i64 2
  %6874 = bitcast i8* %6873 to i16*
  store i8* %6873, i8** %6863, align 8
  %6875 = load i16, i16* %6874, align 2
  br label %6878

6876:                                             ; preds = %6862
  %6877 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %6878

6878:                                             ; preds = %6876, %6872, %6868
  %6879 = phi i16 [ %6877, %6876 ], [ %6871, %6868 ], [ %6875, %6872 ]
  store i16 %6879, i16* %14, align 2
  %6880 = icmp ugt i16 %6879, 15
  br i1 %6880, label %6881, label %6883

6881:                                             ; preds = %6878
  %6882 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %6882, align 8
  br label %4468

6883:                                             ; preds = %6878
  %6884 = load i8, i8* %44, align 1, !range !2
  %6885 = icmp eq i8 %6884, 0
  br i1 %6885, label %6886, label %6888

6886:                                             ; preds = %6883
  %6887 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %6887, label %4466, label %6888

6888:                                             ; preds = %6883, %6886
  %6889 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6890 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6889, i64 0, i32 0
  %6891 = load i32, i32* %6890, align 8
  %6892 = icmp eq i32 %6891, 5
  br label %14210

6893:                                             ; preds = %6809, %6816, %6819
  store i32 28, i32* %74, align 8
  %6894 = load i8, i8* %49, align 1, !range !2
  %6895 = icmp eq i8 %6894, 0
  br i1 %6895, label %6902, label %6896

6896:                                             ; preds = %6893
  %6897 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %6898 = load i8*, i8** %6897, align 8
  %6899 = load i8, i8* %6898, align 1
  %6900 = zext i8 %6899 to i16
  %6901 = ptrtoint i8* %6898 to i64
  br label %6908

6902:                                             ; preds = %6893
  %6903 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %6904 = load i16*, i16** %6903, align 8
  %6905 = load i16, i16* %6904, align 2
  %6906 = ptrtoint i16* %6904 to i64
  %6907 = bitcast i16* %6904 to i8*
  br label %6908

6908:                                             ; preds = %6902, %6896
  %6909 = phi i8* [ %6898, %6896 ], [ %6907, %6902 ]
  %6910 = phi i64 [ %6901, %6896 ], [ %6906, %6902 ]
  %6911 = phi i16 [ %6900, %6896 ], [ %6905, %6902 ]
  %6912 = icmp eq i16 %6911, 10
  br i1 %6912, label %6913, label %6934

6913:                                             ; preds = %6908
  %6914 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %6915 = load i8, i8* %6914, align 8, !range !2
  %6916 = icmp eq i8 %6915, 0
  br i1 %6916, label %6934, label %6917, !prof !4

6917:                                             ; preds = %6913
  %6918 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %6919 = load i32, i32* %6918, align 8
  %6920 = add nsw i32 %6919, 1
  store i32 %6920, i32* %6918, align 8
  %6921 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %6922 = load i32, i32* %6921, align 8
  %6923 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %6924 = bitcast i8** %6923 to i64*
  %6925 = load i64, i64* %6924, align 8
  %6926 = sub i64 %6910, %6925
  %6927 = trunc i64 %6926 to i32
  %6928 = xor i8 %6894, 1
  %6929 = zext i8 %6928 to i32
  %6930 = ashr i32 %6927, %6929
  %6931 = add i32 %6922, 1
  %6932 = add i32 %6931, %6930
  %6933 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %6932, i32* %6933, align 4
  br label %6934

6934:                                             ; preds = %6917, %6913, %6908
  %6935 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %6936 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %6937 = load i8*, i8** %6936, align 8
  %6938 = icmp ult i8* %6909, %6937
  br i1 %6938, label %6939, label %6948, !prof !3

6939:                                             ; preds = %6934
  br i1 %6895, label %6944, label %6940

6940:                                             ; preds = %6939
  %6941 = getelementptr inbounds i8, i8* %6909, i64 1
  store i8* %6941, i8** %6935, align 8
  %6942 = load i8, i8* %6941, align 1
  %6943 = zext i8 %6942 to i16
  br label %6950

6944:                                             ; preds = %6939
  %6945 = getelementptr inbounds i8, i8* %6909, i64 2
  %6946 = bitcast i8* %6945 to i16*
  store i8* %6945, i8** %6935, align 8
  %6947 = load i16, i16* %6946, align 2
  br label %6950

6948:                                             ; preds = %6934
  %6949 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %6950

6950:                                             ; preds = %6948, %6944, %6940
  %6951 = phi i16 [ %6949, %6948 ], [ %6943, %6940 ], [ %6947, %6944 ]
  store i16 %6951, i16* %14, align 2
  %6952 = icmp ugt i16 %6951, 15
  br i1 %6952, label %6953, label %6955

6953:                                             ; preds = %6950
  %6954 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %6954, align 8
  br label %6072

6955:                                             ; preds = %6950
  %6956 = load i8, i8* %44, align 1, !range !2
  %6957 = icmp eq i8 %6956, 0
  br i1 %6957, label %6958, label %6960

6958:                                             ; preds = %6955
  %6959 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %6959, label %6072, label %6960

6960:                                             ; preds = %6955, %6958
  %6961 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6962 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6961, i64 0, i32 0
  %6963 = load i32, i32* %6962, align 8
  %6964 = icmp eq i32 %6963, 5
  br label %14210

6965:                                             ; preds = %6775
  %6966 = or i16 %6776, 32
  %6967 = add i16 %6966, -97
  %6968 = icmp ult i16 %6967, 26
  br i1 %6968, label %6969, label %7034

6969:                                             ; preds = %6965
  %6970 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6971 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6970, i64 0, i32 0
  store i32 5, i32* %6971, align 8
  %6972 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %6973 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6972, i64 0, i32 3, i32 1
  %6974 = load i16*, i16** %6973, align 8
  %6975 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6972, i64 0, i32 3, i32 2
  %6976 = load i16*, i16** %6975, align 8
  %6977 = icmp eq i16* %6974, %6976
  br i1 %6977, label %6978, label %6981, !prof !4

6978:                                             ; preds = %6969
  %6979 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6972, i64 0, i32 3
  %6980 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %6979) #11
  store i16* %6980, i16** %6973, align 8
  br label %6981

6981:                                             ; preds = %6969, %6978
  %6982 = phi i16* [ %6980, %6978 ], [ %6974, %6969 ]
  %6983 = getelementptr inbounds i16, i16* %6982, i64 1
  store i16* %6983, i16** %6973, align 8
  store i16 %6776, i16* %6982, align 2
  %6984 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %6972, i64 0, i32 4
  %6985 = load i16, i16* %6984, align 8
  %6986 = or i16 %6985, %6776
  store i16 %6986, i16* %6984, align 8
  %6987 = load i16, i16* %14, align 2
  %6988 = trunc i16 %6987 to i8
  %6989 = or i8 %6988, 32
  %6990 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %6991 = load i8*, i8** %6990, align 8
  %6992 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 2
  %6993 = load i8*, i8** %6992, align 8
  %6994 = icmp eq i8* %6991, %6993
  br i1 %6994, label %6995, label %6998, !prof !4

6995:                                             ; preds = %6981
  %6996 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %6997 = call i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7* %6996) #11
  store i8* %6997, i8** %6990, align 8
  br label %6998

6998:                                             ; preds = %6981, %6995
  %6999 = phi i8* [ %6997, %6995 ], [ %6991, %6981 ]
  %7000 = getelementptr inbounds i8, i8* %6999, i64 1
  store i8* %7000, i8** %6990, align 8
  store i8 %6989, i8* %6999, align 1
  %7001 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %7002 = load i8*, i8** %7001, align 8
  %7003 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %7004 = load i8*, i8** %7003, align 8
  %7005 = icmp ult i8* %7002, %7004
  br i1 %7005, label %7006, label %7017, !prof !3

7006:                                             ; preds = %6998
  %7007 = load i8, i8* %49, align 1, !range !2
  %7008 = icmp eq i8 %7007, 0
  br i1 %7008, label %7013, label %7009

7009:                                             ; preds = %7006
  %7010 = getelementptr inbounds i8, i8* %7002, i64 1
  store i8* %7010, i8** %7001, align 8
  %7011 = load i8, i8* %7010, align 1
  %7012 = zext i8 %7011 to i16
  br label %7019

7013:                                             ; preds = %7006
  %7014 = getelementptr inbounds i8, i8* %7002, i64 2
  %7015 = bitcast i8* %7014 to i16*
  store i8* %7014, i8** %7001, align 8
  %7016 = load i16, i16* %7015, align 2
  br label %7019

7017:                                             ; preds = %6998
  %7018 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %7019

7019:                                             ; preds = %7017, %7013, %7009
  %7020 = phi i16 [ %7018, %7017 ], [ %7012, %7009 ], [ %7016, %7013 ]
  store i16 %7020, i16* %14, align 2
  %7021 = icmp ugt i16 %7020, 15
  br i1 %7021, label %7022, label %7024

7022:                                             ; preds = %7019
  %7023 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %7023, align 8
  br label %6773

7024:                                             ; preds = %7019
  %7025 = load i8, i8* %44, align 1, !range !2
  %7026 = icmp eq i8 %7025, 0
  br i1 %7026, label %7027, label %7029

7027:                                             ; preds = %7024
  %7028 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %7028, label %6773, label %7029

7029:                                             ; preds = %7024, %7027
  %7030 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %7031 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7030, i64 0, i32 0
  %7032 = load i32, i32* %7031, align 8
  %7033 = icmp eq i32 %7032, 5
  br label %14210

7034:                                             ; preds = %6965
  store i32 28, i32* %74, align 8
  br label %6072

7035:                                             ; preds = %8902, %8570, %8951, %8961, %2216, %2556, %3256, %3997, %5455, %73, %8575, %8907
  %7036 = load i16, i16* %14, align 2
  br label %7037

7037:                                             ; preds = %5453, %3995, %3254, %2554, %2212, %7035
  %7038 = phi i16 [ %7036, %7035 ], [ %5451, %5453 ], [ %3993, %3995 ], [ %3252, %3254 ], [ %2552, %2554 ], [ %2210, %2212 ]
  %7039 = icmp ult i16 %7038, 128
  br i1 %7039, label %7040, label %7055

7040:                                             ; preds = %7037
  %7041 = zext i16 %7038 to i64
  %7042 = getelementptr inbounds [128 x i8], [128 x i8]* bitcast (<{ [63 x i8], [65 x i8] }>* @_ZN5blinkL21character_scan_flags_E to [128 x i8]*), i64 0, i64 %7041
  %7043 = load i8, i8* %7042, align 1
  %7044 = and i8 %7043, 6
  %7045 = icmp eq i8 %7044, 0
  br i1 %7045, label %7055, label %7046

7046:                                             ; preds = %7040
  %7047 = call zeroext i1 @_ZN5blink13HTMLTokenizer21SkipWhitespacesHelperERNS_15SegmentedStringERDs(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %7047, label %7048, label %7050

7048:                                             ; preds = %7046
  %7049 = load i16, i16* %14, align 2
  br label %7055

7050:                                             ; preds = %7046
  %7051 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %7052 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7051, i64 0, i32 0
  %7053 = load i32, i32* %7052, align 8
  %7054 = icmp eq i32 %7053, 5
  br label %14210

7055:                                             ; preds = %7048, %7037, %7040
  %7056 = phi i16 [ %7049, %7048 ], [ %7038, %7037 ], [ %7038, %7040 ]
  switch i16 %7056, label %7094 [
    i16 47, label %7057
    i16 62, label %7091
    i16 0, label %7093
  ]

7057:                                             ; preds = %7055
  store i32 42, i32* %74, align 8
  %7058 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %7059 = load i8*, i8** %7058, align 8
  %7060 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %7061 = load i8*, i8** %7060, align 8
  %7062 = icmp ult i8* %7059, %7061
  br i1 %7062, label %7063, label %7074, !prof !3

7063:                                             ; preds = %7057
  %7064 = load i8, i8* %49, align 1, !range !2
  %7065 = icmp eq i8 %7064, 0
  br i1 %7065, label %7070, label %7066

7066:                                             ; preds = %7063
  %7067 = getelementptr inbounds i8, i8* %7059, i64 1
  store i8* %7067, i8** %7058, align 8
  %7068 = load i8, i8* %7067, align 1
  %7069 = zext i8 %7068 to i16
  br label %7076

7070:                                             ; preds = %7063
  %7071 = getelementptr inbounds i8, i8* %7059, i64 2
  %7072 = bitcast i8* %7071 to i16*
  store i8* %7071, i8** %7058, align 8
  %7073 = load i16, i16* %7072, align 2
  br label %7076

7074:                                             ; preds = %7057
  %7075 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %7076

7076:                                             ; preds = %7074, %7070, %7066
  %7077 = phi i16 [ %7075, %7074 ], [ %7069, %7066 ], [ %7073, %7070 ]
  store i16 %7077, i16* %14, align 2
  %7078 = icmp ugt i16 %7077, 15
  br i1 %7078, label %7079, label %7081

7079:                                             ; preds = %7076
  %7080 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %7080, align 8
  br label %8954

7081:                                             ; preds = %7076
  %7082 = load i8, i8* %44, align 1, !range !2
  %7083 = icmp eq i8 %7082, 0
  br i1 %7083, label %7084, label %7086

7084:                                             ; preds = %7081
  %7085 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %7085, label %8952, label %7086

7086:                                             ; preds = %7081, %7084
  %7087 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %7088 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7087, i64 0, i32 0
  %7089 = load i32, i32* %7088, align 8
  %7090 = icmp eq i32 %7089, 5
  br label %14210

7091:                                             ; preds = %7055
  %7092 = call zeroext i1 @_ZN5blink13HTMLTokenizer15EmitAndResumeInERNS_15SegmentedStringENS0_5StateE(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i32 0)
  br label %14210

7093:                                             ; preds = %7055
  store i32 0, i32* %74, align 8
  br label %78

7094:                                             ; preds = %7055
  %7095 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %7096 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7095, i64 0, i32 6
  %7097 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7095, i64 0, i32 6, i32 0, i32 0, i32 2
  %7098 = load i32, i32* %7097, align 4
  %7099 = add i32 %7098, 1
  %7100 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7095, i64 0, i32 6, i32 0, i32 0, i32 1
  %7101 = load i32, i32* %7100, align 8
  %7102 = icmp ult i32 %7101, %7099
  br i1 %7102, label %7108, label %7103

7103:                                             ; preds = %7094
  %7104 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7096, i64 0, i32 0, i32 0, i32 0
  %7105 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %7104, align 8
  %7106 = zext i32 %7099 to i64
  %7107 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7105, i64 %7106
  br label %7115

7108:                                             ; preds = %7094
  call void @_ZN3WTF6VectorIN5blink9HTMLToken9AttributeELj10ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %7096, i32 %7099) #11
  %7109 = load i32, i32* %7097, align 4
  %7110 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7096, i64 0, i32 0, i32 0, i32 0
  %7111 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %7110, align 8
  %7112 = zext i32 %7099 to i64
  %7113 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7111, i64 %7112
  %7114 = icmp eq i32 %7109, %7099
  br i1 %7114, label %7140, label %7115

7115:                                             ; preds = %7108, %7103
  %7116 = phi %"class.blink::HTMLToken::Attribute"* [ %7107, %7103 ], [ %7113, %7108 ]
  %7117 = phi %"class.blink::HTMLToken::Attribute"* [ %7105, %7103 ], [ %7111, %7108 ]
  %7118 = phi i32 [ %7098, %7103 ], [ %7109, %7108 ]
  %7119 = zext i32 %7118 to i64
  %7120 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7117, i64 %7119
  br label %7121

7121:                                             ; preds = %7121, %7115
  %7122 = phi %"class.blink::HTMLToken::Attribute"* [ %7138, %7121 ], [ %7120, %7115 ]
  %7123 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7122, i64 0, i32 0, i32 3
  %7124 = bitcast [32 x i16]* %7123 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7124, i8 0, i64 168, i1 false) #11
  %7125 = bitcast %"class.blink::HTMLToken::Attribute"* %7122 to [32 x i16]**
  store [32 x i16]* %7123, [32 x i16]** %7125, align 8
  %7126 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7122, i64 0, i32 0, i32 1
  %7127 = bitcast i16** %7126 to [32 x i16]**
  store [32 x i16]* %7123, [32 x i16]** %7127, align 8
  %7128 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7122, i64 0, i32 0, i32 2
  %7129 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7122, i64 0, i32 1
  %7130 = bitcast i16** %7128 to %class.LiteralBuffer.0**
  store %class.LiteralBuffer.0* %7129, %class.LiteralBuffer.0** %7130, align 8
  %7131 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7122, i64 0, i32 1, i32 3
  %7132 = bitcast %class.LiteralBuffer.0* %7129 to [32 x i16]**
  store [32 x i16]* %7131, [32 x i16]** %7132, align 8
  %7133 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7122, i64 0, i32 1, i32 1
  %7134 = bitcast i16** %7133 to [32 x i16]**
  store [32 x i16]* %7131, [32 x i16]** %7134, align 8
  %7135 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7122, i64 0, i32 1, i32 2
  %7136 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7122, i64 0, i32 2
  %7137 = bitcast i16** %7135 to %"class.blink::HTMLToken::Attribute::Range"**
  store %"class.blink::HTMLToken::Attribute::Range"* %7136, %"class.blink::HTMLToken::Attribute::Range"** %7137, align 8
  %7138 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7122, i64 1
  %7139 = icmp eq %"class.blink::HTMLToken::Attribute"* %7138, %7116
  br i1 %7139, label %7140, label %7121

7140:                                             ; preds = %7121, %7108
  store i32 %7099, i32* %7097, align 4
  %7141 = call dereferenceable(192) %"class.blink::HTMLToken::Attribute"* @_ZN3WTF6VectorIN5blink9HTMLToken9AttributeELj10ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %7096, i32 %7098) #11
  %7142 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7095, i64 0, i32 7
  store %"class.blink::HTMLToken::Attribute"* %7141, %"class.blink::HTMLToken::Attribute"** %7142, align 8
  %7143 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %7144 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %7145 = load i32, i32* %7144, align 8
  %7146 = bitcast %"class.blink::SegmentedString"* %1 to i64*
  %7147 = load i64, i64* %7146, align 8
  %7148 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %7149 = bitcast i8** %7148 to i64*
  %7150 = load i64, i64* %7149, align 8
  %7151 = sub i64 %7147, %7150
  %7152 = trunc i64 %7151 to i32
  %7153 = load i8, i8* %49, align 1, !range !2
  %7154 = xor i8 %7153, 1
  %7155 = zext i8 %7154 to i32
  %7156 = ashr i32 %7152, %7155
  %7157 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7143, i64 0, i32 2
  %7158 = load i32, i32* %7157, align 4
  %7159 = sub i32 %7145, %7158
  %7160 = add i32 %7159, %7156
  %7161 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7143, i64 0, i32 7
  %7162 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %7161, align 8
  %7163 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7162, i64 0, i32 2, i32 0
  store i32 %7160, i32* %7163, align 4
  %7164 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %7165 = load i16, i16* %14, align 2
  %7166 = add i16 %7165, -65
  %7167 = icmp ult i16 %7166, 26
  %7168 = select i1 %7167, i16 32, i16 0
  %7169 = or i16 %7168, %7165
  %7170 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7164, i64 0, i32 7
  %7171 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %7170, align 8
  %7172 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7171, i64 0, i32 0, i32 1
  %7173 = load i16*, i16** %7172, align 8
  %7174 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7171, i64 0, i32 0, i32 2
  %7175 = load i16*, i16** %7174, align 8
  %7176 = icmp eq i16* %7173, %7175
  br i1 %7176, label %7177, label %7180, !prof !4

7177:                                             ; preds = %7140
  %7178 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7171, i64 0, i32 0
  %7179 = call i16* @_ZN13LiteralBufferIDsLj32EE4GrowEv(%class.LiteralBuffer.0* %7178) #11
  store i16* %7179, i16** %7172, align 8
  br label %7180

7180:                                             ; preds = %7140, %7177
  %7181 = phi i16* [ %7179, %7177 ], [ %7173, %7140 ]
  %7182 = getelementptr inbounds i16, i16* %7181, i64 1
  store i16* %7182, i16** %7172, align 8
  store i16 %7169, i16* %7181, align 2
  store i32 34, i32* %74, align 8
  %7183 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %7184 = load i8*, i8** %7183, align 8
  %7185 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %7186 = load i8*, i8** %7185, align 8
  %7187 = icmp ult i8* %7184, %7186
  br i1 %7187, label %7188, label %7199, !prof !3

7188:                                             ; preds = %7180
  %7189 = load i8, i8* %49, align 1, !range !2
  %7190 = icmp eq i8 %7189, 0
  br i1 %7190, label %7195, label %7191

7191:                                             ; preds = %7188
  %7192 = getelementptr inbounds i8, i8* %7184, i64 1
  store i8* %7192, i8** %7183, align 8
  %7193 = load i8, i8* %7192, align 1
  %7194 = zext i8 %7193 to i16
  br label %7201

7195:                                             ; preds = %7188
  %7196 = getelementptr inbounds i8, i8* %7184, i64 2
  %7197 = bitcast i8* %7196 to i16*
  store i8* %7196, i8** %7183, align 8
  %7198 = load i16, i16* %7197, align 2
  br label %7201

7199:                                             ; preds = %7180
  %7200 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %7201

7201:                                             ; preds = %7199, %7195, %7191
  %7202 = phi i16 [ %7200, %7199 ], [ %7194, %7191 ], [ %7198, %7195 ]
  store i16 %7202, i16* %14, align 2
  %7203 = icmp ugt i16 %7202, 15
  br i1 %7203, label %7204, label %7206

7204:                                             ; preds = %7201
  %7205 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %7205, align 8
  br label %7788

7206:                                             ; preds = %7201
  %7207 = load i8, i8* %44, align 1, !range !2
  %7208 = icmp eq i8 %7207, 0
  br i1 %7208, label %7209, label %7211

7209:                                             ; preds = %7206
  %7210 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %7210, label %7788, label %7211

7211:                                             ; preds = %7206, %7209
  %7212 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %7213 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7212, i64 0, i32 0
  %7214 = load i32, i32* %7213, align 8
  %7215 = icmp eq i32 %7214, 5
  br label %14210

7216:                                             ; preds = %7271, %7788
  %7217 = load i16, i16* %14, align 2
  br label %7218

7218:                                             ; preds = %7265, %7216
  %7219 = phi i16 [ %7217, %7216 ], [ %7263, %7265 ]
  %7220 = icmp ult i16 %7219, 128
  br i1 %7220, label %7221, label %7227

7221:                                             ; preds = %7218
  %7222 = zext i16 %7219 to i64
  %7223 = getelementptr inbounds [128 x i8], [128 x i8]* bitcast (<{ [63 x i8], [65 x i8] }>* @_ZN5blinkL21character_scan_flags_E to [128 x i8]*), i64 0, i64 %7222
  %7224 = load i8, i8* %7223, align 1
  %7225 = and i8 %7224, -9
  %7226 = icmp eq i8 %7225, 0
  br i1 %7226, label %7227, label %7277

7227:                                             ; preds = %7221, %7218
  %7228 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %7229 = add i16 %7219, -65
  %7230 = icmp ult i16 %7229, 26
  %7231 = select i1 %7230, i16 32, i16 0
  %7232 = or i16 %7231, %7219
  %7233 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7228, i64 0, i32 7
  %7234 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %7233, align 8
  %7235 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7234, i64 0, i32 0, i32 1
  %7236 = load i16*, i16** %7235, align 8
  %7237 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7234, i64 0, i32 0, i32 2
  %7238 = load i16*, i16** %7237, align 8
  %7239 = icmp eq i16* %7236, %7238
  br i1 %7239, label %7240, label %7243, !prof !4

7240:                                             ; preds = %7227
  %7241 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7234, i64 0, i32 0
  %7242 = call i16* @_ZN13LiteralBufferIDsLj32EE4GrowEv(%class.LiteralBuffer.0* %7241) #11
  store i16* %7242, i16** %7235, align 8
  br label %7243

7243:                                             ; preds = %7227, %7240
  %7244 = phi i16* [ %7242, %7240 ], [ %7236, %7227 ]
  %7245 = getelementptr inbounds i16, i16* %7244, i64 1
  store i16* %7245, i16** %7235, align 8
  store i16 %7232, i16* %7244, align 2
  %7246 = load i8*, i8** %7789, align 8
  %7247 = load i8*, i8** %7790, align 8
  %7248 = icmp ult i8* %7246, %7247
  br i1 %7248, label %7249, label %7260, !prof !3

7249:                                             ; preds = %7243
  %7250 = load i8, i8* %49, align 1, !range !2
  %7251 = icmp eq i8 %7250, 0
  br i1 %7251, label %7256, label %7252

7252:                                             ; preds = %7249
  %7253 = getelementptr inbounds i8, i8* %7246, i64 1
  store i8* %7253, i8** %7789, align 8
  %7254 = load i8, i8* %7253, align 1
  %7255 = zext i8 %7254 to i16
  br label %7262

7256:                                             ; preds = %7249
  %7257 = getelementptr inbounds i8, i8* %7246, i64 2
  %7258 = bitcast i8* %7257 to i16*
  store i8* %7257, i8** %7789, align 8
  %7259 = load i16, i16* %7258, align 2
  br label %7262

7260:                                             ; preds = %7243
  %7261 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %7262

7262:                                             ; preds = %7260, %7256, %7252
  %7263 = phi i16 [ %7261, %7260 ], [ %7255, %7252 ], [ %7259, %7256 ]
  store i16 %7263, i16* %14, align 2
  %7264 = icmp ugt i16 %7263, 15
  br i1 %7264, label %7265, label %7266

7265:                                             ; preds = %7262
  store i8 0, i8* %7791, align 8
  br label %7218

7266:                                             ; preds = %7262
  %7267 = load i8, i8* %44, align 1, !range !2
  %7268 = icmp eq i8 %7267, 0
  br i1 %7268, label %7269, label %7272

7269:                                             ; preds = %7266
  %7270 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %7270, label %7271, label %7272

7271:                                             ; preds = %7269, %7576, %7572
  br label %7216

7272:                                             ; preds = %7266, %7269
  %7273 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %7274 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7273, i64 0, i32 0
  %7275 = load i32, i32* %7274, align 8
  %7276 = icmp eq i32 %7275, 5
  br label %14210

7277:                                             ; preds = %7221
  switch i16 %7219, label %7507 [
    i16 32, label %7278
    i16 10, label %7278
    i16 9, label %7278
    i16 12, label %7278
    i16 47, label %7368
    i16 61, label %7424
    i16 62, label %7480
  ]

7278:                                             ; preds = %7277, %7277, %7277, %7277
  %7279 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %7280 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %7281 = load i32, i32* %7280, align 8
  %7282 = bitcast %"class.blink::SegmentedString"* %1 to i64*
  %7283 = load i64, i64* %7282, align 8
  %7284 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %7285 = bitcast i8** %7284 to i64*
  %7286 = load i64, i64* %7285, align 8
  %7287 = sub i64 %7283, %7286
  %7288 = trunc i64 %7287 to i32
  %7289 = load i8, i8* %49, align 1, !range !2
  %7290 = xor i8 %7289, 1
  %7291 = zext i8 %7290 to i32
  %7292 = ashr i32 %7288, %7291
  %7293 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7279, i64 0, i32 2
  %7294 = load i32, i32* %7293, align 4
  %7295 = sub i32 %7281, %7294
  %7296 = add i32 %7295, %7292
  %7297 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7279, i64 0, i32 7
  %7298 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %7297, align 8
  %7299 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7298, i64 0, i32 2, i32 1
  store i32 %7296, i32* %7299, align 4
  %7300 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %7297, align 8
  %7301 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7300, i64 0, i32 3, i32 0
  store i32 %7296, i32* %7301, align 4
  %7302 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %7297, align 8
  %7303 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7302, i64 0, i32 3, i32 1
  store i32 %7296, i32* %7303, align 4
  store i32 35, i32* %74, align 8
  %7304 = load i8, i8* %49, align 1, !range !2
  %7305 = icmp eq i8 %7304, 0
  br i1 %7305, label %7311, label %7306

7306:                                             ; preds = %7278
  %7307 = load i8*, i8** %7789, align 8
  %7308 = load i8, i8* %7307, align 1
  %7309 = zext i8 %7308 to i16
  %7310 = ptrtoint i8* %7307 to i64
  br label %7317

7311:                                             ; preds = %7278
  %7312 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %7313 = load i16*, i16** %7312, align 8
  %7314 = load i16, i16* %7313, align 2
  %7315 = ptrtoint i16* %7313 to i64
  %7316 = bitcast i16* %7313 to i8*
  br label %7317

7317:                                             ; preds = %7311, %7306
  %7318 = phi i8* [ %7307, %7306 ], [ %7316, %7311 ]
  %7319 = phi i64 [ %7310, %7306 ], [ %7315, %7311 ]
  %7320 = phi i16 [ %7309, %7306 ], [ %7314, %7311 ]
  %7321 = icmp eq i16 %7320, 10
  br i1 %7321, label %7322, label %7340

7322:                                             ; preds = %7317
  %7323 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %7324 = load i8, i8* %7323, align 8, !range !2
  %7325 = icmp eq i8 %7324, 0
  br i1 %7325, label %7340, label %7326, !prof !4

7326:                                             ; preds = %7322
  %7327 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %7328 = load i32, i32* %7327, align 8
  %7329 = add nsw i32 %7328, 1
  store i32 %7329, i32* %7327, align 8
  %7330 = load i32, i32* %7280, align 8
  %7331 = load i64, i64* %7285, align 8
  %7332 = sub i64 %7319, %7331
  %7333 = trunc i64 %7332 to i32
  %7334 = xor i8 %7304, 1
  %7335 = zext i8 %7334 to i32
  %7336 = ashr i32 %7333, %7335
  %7337 = add i32 %7330, 1
  %7338 = add i32 %7337, %7336
  %7339 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %7338, i32* %7339, align 4
  br label %7340

7340:                                             ; preds = %7326, %7322, %7317
  %7341 = load i8*, i8** %7790, align 8
  %7342 = icmp ult i8* %7318, %7341
  br i1 %7342, label %7343, label %7352, !prof !3

7343:                                             ; preds = %7340
  br i1 %7305, label %7348, label %7344

7344:                                             ; preds = %7343
  %7345 = getelementptr inbounds i8, i8* %7318, i64 1
  store i8* %7345, i8** %7789, align 8
  %7346 = load i8, i8* %7345, align 1
  %7347 = zext i8 %7346 to i16
  br label %7354

7348:                                             ; preds = %7343
  %7349 = getelementptr inbounds i8, i8* %7318, i64 2
  %7350 = bitcast i8* %7349 to i16*
  store i8* %7349, i8** %7789, align 8
  %7351 = load i16, i16* %7350, align 2
  br label %7354

7352:                                             ; preds = %7340
  %7353 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %7354

7354:                                             ; preds = %7352, %7348, %7344
  %7355 = phi i16 [ %7353, %7352 ], [ %7347, %7344 ], [ %7351, %7348 ]
  store i16 %7355, i16* %14, align 2
  %7356 = icmp ugt i16 %7355, 15
  br i1 %7356, label %7357, label %7358

7357:                                             ; preds = %7354
  store i8 0, i8* %7791, align 8
  br label %7585

7358:                                             ; preds = %7354
  %7359 = load i8, i8* %44, align 1, !range !2
  %7360 = icmp eq i8 %7359, 0
  br i1 %7360, label %7361, label %7363

7361:                                             ; preds = %7358
  %7362 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %7362, label %7583, label %7363

7363:                                             ; preds = %7358, %7361
  %7364 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %7365 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7364, i64 0, i32 0
  %7366 = load i32, i32* %7365, align 8
  %7367 = icmp eq i32 %7366, 5
  br label %14210

7368:                                             ; preds = %7277
  %7369 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %7370 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %7371 = load i32, i32* %7370, align 8
  %7372 = bitcast %"class.blink::SegmentedString"* %1 to i64*
  %7373 = load i64, i64* %7372, align 8
  %7374 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %7375 = bitcast i8** %7374 to i64*
  %7376 = load i64, i64* %7375, align 8
  %7377 = sub i64 %7373, %7376
  %7378 = trunc i64 %7377 to i32
  %7379 = load i8, i8* %49, align 1, !range !2
  %7380 = xor i8 %7379, 1
  %7381 = zext i8 %7380 to i32
  %7382 = ashr i32 %7378, %7381
  %7383 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7369, i64 0, i32 2
  %7384 = load i32, i32* %7383, align 4
  %7385 = sub i32 %7371, %7384
  %7386 = add i32 %7385, %7382
  %7387 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7369, i64 0, i32 7
  %7388 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %7387, align 8
  %7389 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7388, i64 0, i32 2, i32 1
  store i32 %7386, i32* %7389, align 4
  %7390 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %7387, align 8
  %7391 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7390, i64 0, i32 3, i32 0
  store i32 %7386, i32* %7391, align 4
  %7392 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %7387, align 8
  %7393 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7392, i64 0, i32 3, i32 1
  store i32 %7386, i32* %7393, align 4
  store i32 42, i32* %74, align 8
  %7394 = load i8*, i8** %7789, align 8
  %7395 = load i8*, i8** %7790, align 8
  %7396 = icmp ult i8* %7394, %7395
  br i1 %7396, label %7397, label %7408, !prof !3

7397:                                             ; preds = %7368
  %7398 = load i8, i8* %49, align 1, !range !2
  %7399 = icmp eq i8 %7398, 0
  br i1 %7399, label %7404, label %7400

7400:                                             ; preds = %7397
  %7401 = getelementptr inbounds i8, i8* %7394, i64 1
  store i8* %7401, i8** %7789, align 8
  %7402 = load i8, i8* %7401, align 1
  %7403 = zext i8 %7402 to i16
  br label %7410

7404:                                             ; preds = %7397
  %7405 = getelementptr inbounds i8, i8* %7394, i64 2
  %7406 = bitcast i8* %7405 to i16*
  store i8* %7405, i8** %7789, align 8
  %7407 = load i16, i16* %7406, align 2
  br label %7410

7408:                                             ; preds = %7368
  %7409 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %7410

7410:                                             ; preds = %7408, %7404, %7400
  %7411 = phi i16 [ %7409, %7408 ], [ %7403, %7400 ], [ %7407, %7404 ]
  store i16 %7411, i16* %14, align 2
  %7412 = icmp ugt i16 %7411, 15
  br i1 %7412, label %7413, label %7414

7413:                                             ; preds = %7410
  store i8 0, i8* %7791, align 8
  br label %8954

7414:                                             ; preds = %7410
  %7415 = load i8, i8* %44, align 1, !range !2
  %7416 = icmp eq i8 %7415, 0
  br i1 %7416, label %7417, label %7419

7417:                                             ; preds = %7414
  %7418 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %7418, label %8952, label %7419

7419:                                             ; preds = %7414, %7417
  %7420 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %7421 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7420, i64 0, i32 0
  %7422 = load i32, i32* %7421, align 8
  %7423 = icmp eq i32 %7422, 5
  br label %14210

7424:                                             ; preds = %7277
  %7425 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %7426 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %7427 = load i32, i32* %7426, align 8
  %7428 = bitcast %"class.blink::SegmentedString"* %1 to i64*
  %7429 = load i64, i64* %7428, align 8
  %7430 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %7431 = bitcast i8** %7430 to i64*
  %7432 = load i64, i64* %7431, align 8
  %7433 = sub i64 %7429, %7432
  %7434 = trunc i64 %7433 to i32
  %7435 = load i8, i8* %49, align 1, !range !2
  %7436 = xor i8 %7435, 1
  %7437 = zext i8 %7436 to i32
  %7438 = ashr i32 %7434, %7437
  %7439 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7425, i64 0, i32 2
  %7440 = load i32, i32* %7439, align 4
  %7441 = sub i32 %7427, %7440
  %7442 = add i32 %7441, %7438
  %7443 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7425, i64 0, i32 7
  %7444 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %7443, align 8
  %7445 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7444, i64 0, i32 2, i32 1
  store i32 %7442, i32* %7445, align 4
  %7446 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %7443, align 8
  %7447 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7446, i64 0, i32 3, i32 0
  store i32 %7442, i32* %7447, align 4
  %7448 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %7443, align 8
  %7449 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7448, i64 0, i32 3, i32 1
  store i32 %7442, i32* %7449, align 4
  store i32 36, i32* %74, align 8
  %7450 = load i8*, i8** %7789, align 8
  %7451 = load i8*, i8** %7790, align 8
  %7452 = icmp ult i8* %7450, %7451
  br i1 %7452, label %7453, label %7464, !prof !3

7453:                                             ; preds = %7424
  %7454 = load i8, i8* %49, align 1, !range !2
  %7455 = icmp eq i8 %7454, 0
  br i1 %7455, label %7460, label %7456

7456:                                             ; preds = %7453
  %7457 = getelementptr inbounds i8, i8* %7450, i64 1
  store i8* %7457, i8** %7789, align 8
  %7458 = load i8, i8* %7457, align 1
  %7459 = zext i8 %7458 to i16
  br label %7466

7460:                                             ; preds = %7453
  %7461 = getelementptr inbounds i8, i8* %7450, i64 2
  %7462 = bitcast i8* %7461 to i16*
  store i8* %7461, i8** %7789, align 8
  %7463 = load i16, i16* %7462, align 2
  br label %7466

7464:                                             ; preds = %7424
  %7465 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %7466

7466:                                             ; preds = %7464, %7460, %7456
  %7467 = phi i16 [ %7465, %7464 ], [ %7459, %7456 ], [ %7463, %7460 ]
  store i16 %7467, i16* %14, align 2
  %7468 = icmp ugt i16 %7467, 15
  br i1 %7468, label %7469, label %7470

7469:                                             ; preds = %7466
  store i8 0, i8* %7791, align 8
  br label %7804

7470:                                             ; preds = %7466
  %7471 = load i8, i8* %44, align 1, !range !2
  %7472 = icmp eq i8 %7471, 0
  br i1 %7472, label %7473, label %7475

7473:                                             ; preds = %7470
  %7474 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %7474, label %7802, label %7475

7475:                                             ; preds = %7470, %7473
  %7476 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %7477 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7476, i64 0, i32 0
  %7478 = load i32, i32* %7477, align 8
  %7479 = icmp eq i32 %7478, 5
  br label %14210

7480:                                             ; preds = %7277
  %7481 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %7482 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %7483 = load i32, i32* %7482, align 8
  %7484 = bitcast %"class.blink::SegmentedString"* %1 to i64*
  %7485 = load i64, i64* %7484, align 8
  %7486 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %7487 = bitcast i8** %7486 to i64*
  %7488 = load i64, i64* %7487, align 8
  %7489 = sub i64 %7485, %7488
  %7490 = trunc i64 %7489 to i32
  %7491 = load i8, i8* %49, align 1, !range !2
  %7492 = xor i8 %7491, 1
  %7493 = zext i8 %7492 to i32
  %7494 = ashr i32 %7490, %7493
  %7495 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7481, i64 0, i32 2
  %7496 = load i32, i32* %7495, align 4
  %7497 = sub i32 %7483, %7496
  %7498 = add i32 %7497, %7494
  %7499 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7481, i64 0, i32 7
  %7500 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %7499, align 8
  %7501 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7500, i64 0, i32 2, i32 1
  store i32 %7498, i32* %7501, align 4
  %7502 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %7499, align 8
  %7503 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7502, i64 0, i32 3, i32 0
  store i32 %7498, i32* %7503, align 4
  %7504 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %7499, align 8
  %7505 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7504, i64 0, i32 3, i32 1
  store i32 %7498, i32* %7505, align 4
  %7506 = call zeroext i1 @_ZN5blink13HTMLTokenizer15EmitAndResumeInERNS_15SegmentedStringENS0_5StateE(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i32 0)
  br label %14210

7507:                                             ; preds = %7277
  %7508 = icmp eq i16 %7219, 0
  %7509 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  br i1 %7508, label %7510, label %7535

7510:                                             ; preds = %7507
  %7511 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %7512 = load i32, i32* %7511, align 8
  %7513 = bitcast %"class.blink::SegmentedString"* %1 to i64*
  %7514 = load i64, i64* %7513, align 8
  %7515 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %7516 = bitcast i8** %7515 to i64*
  %7517 = load i64, i64* %7516, align 8
  %7518 = sub i64 %7514, %7517
  %7519 = trunc i64 %7518 to i32
  %7520 = load i8, i8* %49, align 1, !range !2
  %7521 = xor i8 %7520, 1
  %7522 = zext i8 %7521 to i32
  %7523 = ashr i32 %7519, %7522
  %7524 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7509, i64 0, i32 2
  %7525 = load i32, i32* %7524, align 4
  %7526 = sub i32 %7512, %7525
  %7527 = add i32 %7526, %7523
  %7528 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7509, i64 0, i32 7
  %7529 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %7528, align 8
  %7530 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7529, i64 0, i32 2, i32 1
  store i32 %7527, i32* %7530, align 4
  %7531 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %7528, align 8
  %7532 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7531, i64 0, i32 3, i32 0
  store i32 %7527, i32* %7532, align 4
  %7533 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %7528, align 8
  %7534 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7533, i64 0, i32 3, i32 1
  store i32 %7527, i32* %7534, align 4
  store i32 0, i32* %74, align 8
  br label %76

7535:                                             ; preds = %7507
  %7536 = add nsw i16 %7219, -65
  %7537 = icmp ult i16 %7536, 26
  %7538 = select i1 %7537, i16 32, i16 0
  %7539 = or i16 %7538, %7219
  %7540 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7509, i64 0, i32 7
  %7541 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %7540, align 8
  %7542 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7541, i64 0, i32 0, i32 1
  %7543 = load i16*, i16** %7542, align 8
  %7544 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7541, i64 0, i32 0, i32 2
  %7545 = load i16*, i16** %7544, align 8
  %7546 = icmp eq i16* %7543, %7545
  br i1 %7546, label %7547, label %7550, !prof !4

7547:                                             ; preds = %7535
  %7548 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7541, i64 0, i32 0
  %7549 = call i16* @_ZN13LiteralBufferIDsLj32EE4GrowEv(%class.LiteralBuffer.0* %7548) #11
  store i16* %7549, i16** %7542, align 8
  br label %7550

7550:                                             ; preds = %7535, %7547
  %7551 = phi i16* [ %7549, %7547 ], [ %7543, %7535 ]
  %7552 = getelementptr inbounds i16, i16* %7551, i64 1
  store i16* %7552, i16** %7542, align 8
  store i16 %7539, i16* %7551, align 2
  %7553 = load i8*, i8** %7789, align 8
  %7554 = load i8*, i8** %7790, align 8
  %7555 = icmp ult i8* %7553, %7554
  br i1 %7555, label %7556, label %7567, !prof !3

7556:                                             ; preds = %7550
  %7557 = load i8, i8* %49, align 1, !range !2
  %7558 = icmp eq i8 %7557, 0
  br i1 %7558, label %7563, label %7559

7559:                                             ; preds = %7556
  %7560 = getelementptr inbounds i8, i8* %7553, i64 1
  store i8* %7560, i8** %7789, align 8
  %7561 = load i8, i8* %7560, align 1
  %7562 = zext i8 %7561 to i16
  br label %7569

7563:                                             ; preds = %7556
  %7564 = getelementptr inbounds i8, i8* %7553, i64 2
  %7565 = bitcast i8* %7564 to i16*
  store i8* %7564, i8** %7789, align 8
  %7566 = load i16, i16* %7565, align 2
  br label %7569

7567:                                             ; preds = %7550
  %7568 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %7569

7569:                                             ; preds = %7567, %7563, %7559
  %7570 = phi i16 [ %7568, %7567 ], [ %7562, %7559 ], [ %7566, %7563 ]
  store i16 %7570, i16* %14, align 2
  %7571 = icmp ugt i16 %7570, 15
  br i1 %7571, label %7572, label %7573

7572:                                             ; preds = %7569
  store i8 0, i8* %7791, align 8
  br label %7271

7573:                                             ; preds = %7569
  %7574 = load i8, i8* %44, align 1, !range !2
  %7575 = icmp eq i8 %7574, 0
  br i1 %7575, label %7576, label %7578

7576:                                             ; preds = %7573
  %7577 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %7577, label %7271, label %7578

7578:                                             ; preds = %7573, %7576
  %7579 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %7580 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7579, i64 0, i32 0
  %7581 = load i32, i32* %7580, align 8
  %7582 = icmp eq i32 %7581, 5
  br label %14210

7583:                                             ; preds = %7361, %73
  %7584 = load i16, i16* %14, align 2
  br label %7585

7585:                                             ; preds = %7583, %7357
  %7586 = phi i16 [ %7584, %7583 ], [ %7355, %7357 ]
  %7587 = icmp ult i16 %7586, 128
  br i1 %7587, label %7588, label %7603

7588:                                             ; preds = %7585
  %7589 = zext i16 %7586 to i64
  %7590 = getelementptr inbounds [128 x i8], [128 x i8]* bitcast (<{ [63 x i8], [65 x i8] }>* @_ZN5blinkL21character_scan_flags_E to [128 x i8]*), i64 0, i64 %7589
  %7591 = load i8, i8* %7590, align 1
  %7592 = and i8 %7591, 6
  %7593 = icmp eq i8 %7592, 0
  br i1 %7593, label %7603, label %7594

7594:                                             ; preds = %7588
  %7595 = call zeroext i1 @_ZN5blink13HTMLTokenizer21SkipWhitespacesHelperERNS_15SegmentedStringERDs(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %7595, label %7596, label %7598

7596:                                             ; preds = %7594
  %7597 = load i16, i16* %14, align 2
  br label %7603

7598:                                             ; preds = %7594
  %7599 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %7600 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7599, i64 0, i32 0
  %7601 = load i32, i32* %7600, align 8
  %7602 = icmp eq i32 %7601, 5
  br label %14210

7603:                                             ; preds = %7596, %7585, %7588
  %7604 = phi i16 [ %7597, %7596 ], [ %7586, %7585 ], [ %7586, %7588 ]
  switch i16 %7604, label %7676 [
    i16 47, label %7605
    i16 61, label %7639
    i16 62, label %7673
    i16 0, label %7675
  ]

7605:                                             ; preds = %7603
  store i32 42, i32* %74, align 8
  %7606 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %7607 = load i8*, i8** %7606, align 8
  %7608 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %7609 = load i8*, i8** %7608, align 8
  %7610 = icmp ult i8* %7607, %7609
  br i1 %7610, label %7611, label %7622, !prof !3

7611:                                             ; preds = %7605
  %7612 = load i8, i8* %49, align 1, !range !2
  %7613 = icmp eq i8 %7612, 0
  br i1 %7613, label %7618, label %7614

7614:                                             ; preds = %7611
  %7615 = getelementptr inbounds i8, i8* %7607, i64 1
  store i8* %7615, i8** %7606, align 8
  %7616 = load i8, i8* %7615, align 1
  %7617 = zext i8 %7616 to i16
  br label %7624

7618:                                             ; preds = %7611
  %7619 = getelementptr inbounds i8, i8* %7607, i64 2
  %7620 = bitcast i8* %7619 to i16*
  store i8* %7619, i8** %7606, align 8
  %7621 = load i16, i16* %7620, align 2
  br label %7624

7622:                                             ; preds = %7605
  %7623 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %7624

7624:                                             ; preds = %7622, %7618, %7614
  %7625 = phi i16 [ %7623, %7622 ], [ %7617, %7614 ], [ %7621, %7618 ]
  store i16 %7625, i16* %14, align 2
  %7626 = icmp ugt i16 %7625, 15
  br i1 %7626, label %7627, label %7629

7627:                                             ; preds = %7624
  %7628 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %7628, align 8
  br label %8954

7629:                                             ; preds = %7624
  %7630 = load i8, i8* %44, align 1, !range !2
  %7631 = icmp eq i8 %7630, 0
  br i1 %7631, label %7632, label %7634

7632:                                             ; preds = %7629
  %7633 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %7633, label %8952, label %7634

7634:                                             ; preds = %7629, %7632
  %7635 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %7636 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7635, i64 0, i32 0
  %7637 = load i32, i32* %7636, align 8
  %7638 = icmp eq i32 %7637, 5
  br label %14210

7639:                                             ; preds = %7603
  store i32 36, i32* %74, align 8
  %7640 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %7641 = load i8*, i8** %7640, align 8
  %7642 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %7643 = load i8*, i8** %7642, align 8
  %7644 = icmp ult i8* %7641, %7643
  br i1 %7644, label %7645, label %7656, !prof !3

7645:                                             ; preds = %7639
  %7646 = load i8, i8* %49, align 1, !range !2
  %7647 = icmp eq i8 %7646, 0
  br i1 %7647, label %7652, label %7648

7648:                                             ; preds = %7645
  %7649 = getelementptr inbounds i8, i8* %7641, i64 1
  store i8* %7649, i8** %7640, align 8
  %7650 = load i8, i8* %7649, align 1
  %7651 = zext i8 %7650 to i16
  br label %7658

7652:                                             ; preds = %7645
  %7653 = getelementptr inbounds i8, i8* %7641, i64 2
  %7654 = bitcast i8* %7653 to i16*
  store i8* %7653, i8** %7640, align 8
  %7655 = load i16, i16* %7654, align 2
  br label %7658

7656:                                             ; preds = %7639
  %7657 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %7658

7658:                                             ; preds = %7656, %7652, %7648
  %7659 = phi i16 [ %7657, %7656 ], [ %7651, %7648 ], [ %7655, %7652 ]
  store i16 %7659, i16* %14, align 2
  %7660 = icmp ugt i16 %7659, 15
  br i1 %7660, label %7661, label %7663

7661:                                             ; preds = %7658
  %7662 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %7662, align 8
  br label %7804

7663:                                             ; preds = %7658
  %7664 = load i8, i8* %44, align 1, !range !2
  %7665 = icmp eq i8 %7664, 0
  br i1 %7665, label %7666, label %7668

7666:                                             ; preds = %7663
  %7667 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %7667, label %7802, label %7668

7668:                                             ; preds = %7663, %7666
  %7669 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %7670 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7669, i64 0, i32 0
  %7671 = load i32, i32* %7670, align 8
  %7672 = icmp eq i32 %7671, 5
  br label %14210

7673:                                             ; preds = %7603
  %7674 = call zeroext i1 @_ZN5blink13HTMLTokenizer15EmitAndResumeInERNS_15SegmentedStringENS0_5StateE(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i32 0)
  br label %14210

7675:                                             ; preds = %7603
  store i32 0, i32* %74, align 8
  br label %78

7676:                                             ; preds = %7603
  %7677 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %7678 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7677, i64 0, i32 6
  %7679 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7677, i64 0, i32 6, i32 0, i32 0, i32 2
  %7680 = load i32, i32* %7679, align 4
  %7681 = add i32 %7680, 1
  %7682 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7677, i64 0, i32 6, i32 0, i32 0, i32 1
  %7683 = load i32, i32* %7682, align 8
  %7684 = icmp ult i32 %7683, %7681
  br i1 %7684, label %7690, label %7685

7685:                                             ; preds = %7676
  %7686 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7678, i64 0, i32 0, i32 0, i32 0
  %7687 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %7686, align 8
  %7688 = zext i32 %7681 to i64
  %7689 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7687, i64 %7688
  br label %7697

7690:                                             ; preds = %7676
  call void @_ZN3WTF6VectorIN5blink9HTMLToken9AttributeELj10ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %7678, i32 %7681) #11
  %7691 = load i32, i32* %7679, align 4
  %7692 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7678, i64 0, i32 0, i32 0, i32 0
  %7693 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %7692, align 8
  %7694 = zext i32 %7681 to i64
  %7695 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7693, i64 %7694
  %7696 = icmp eq i32 %7691, %7681
  br i1 %7696, label %7722, label %7697

7697:                                             ; preds = %7690, %7685
  %7698 = phi %"class.blink::HTMLToken::Attribute"* [ %7689, %7685 ], [ %7695, %7690 ]
  %7699 = phi %"class.blink::HTMLToken::Attribute"* [ %7687, %7685 ], [ %7693, %7690 ]
  %7700 = phi i32 [ %7680, %7685 ], [ %7691, %7690 ]
  %7701 = zext i32 %7700 to i64
  %7702 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7699, i64 %7701
  br label %7703

7703:                                             ; preds = %7703, %7697
  %7704 = phi %"class.blink::HTMLToken::Attribute"* [ %7720, %7703 ], [ %7702, %7697 ]
  %7705 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7704, i64 0, i32 0, i32 3
  %7706 = bitcast [32 x i16]* %7705 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7706, i8 0, i64 168, i1 false) #11
  %7707 = bitcast %"class.blink::HTMLToken::Attribute"* %7704 to [32 x i16]**
  store [32 x i16]* %7705, [32 x i16]** %7707, align 8
  %7708 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7704, i64 0, i32 0, i32 1
  %7709 = bitcast i16** %7708 to [32 x i16]**
  store [32 x i16]* %7705, [32 x i16]** %7709, align 8
  %7710 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7704, i64 0, i32 0, i32 2
  %7711 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7704, i64 0, i32 1
  %7712 = bitcast i16** %7710 to %class.LiteralBuffer.0**
  store %class.LiteralBuffer.0* %7711, %class.LiteralBuffer.0** %7712, align 8
  %7713 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7704, i64 0, i32 1, i32 3
  %7714 = bitcast %class.LiteralBuffer.0* %7711 to [32 x i16]**
  store [32 x i16]* %7713, [32 x i16]** %7714, align 8
  %7715 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7704, i64 0, i32 1, i32 1
  %7716 = bitcast i16** %7715 to [32 x i16]**
  store [32 x i16]* %7713, [32 x i16]** %7716, align 8
  %7717 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7704, i64 0, i32 1, i32 2
  %7718 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7704, i64 0, i32 2
  %7719 = bitcast i16** %7717 to %"class.blink::HTMLToken::Attribute::Range"**
  store %"class.blink::HTMLToken::Attribute::Range"* %7718, %"class.blink::HTMLToken::Attribute::Range"** %7719, align 8
  %7720 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7704, i64 1
  %7721 = icmp eq %"class.blink::HTMLToken::Attribute"* %7720, %7698
  br i1 %7721, label %7722, label %7703

7722:                                             ; preds = %7703, %7690
  store i32 %7681, i32* %7679, align 4
  %7723 = call dereferenceable(192) %"class.blink::HTMLToken::Attribute"* @_ZN3WTF6VectorIN5blink9HTMLToken9AttributeELj10ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %7678, i32 %7680) #11
  %7724 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7677, i64 0, i32 7
  store %"class.blink::HTMLToken::Attribute"* %7723, %"class.blink::HTMLToken::Attribute"** %7724, align 8
  %7725 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %7726 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %7727 = load i32, i32* %7726, align 8
  %7728 = bitcast %"class.blink::SegmentedString"* %1 to i64*
  %7729 = load i64, i64* %7728, align 8
  %7730 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %7731 = bitcast i8** %7730 to i64*
  %7732 = load i64, i64* %7731, align 8
  %7733 = sub i64 %7729, %7732
  %7734 = trunc i64 %7733 to i32
  %7735 = load i8, i8* %49, align 1, !range !2
  %7736 = xor i8 %7735, 1
  %7737 = zext i8 %7736 to i32
  %7738 = ashr i32 %7734, %7737
  %7739 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7725, i64 0, i32 2
  %7740 = load i32, i32* %7739, align 4
  %7741 = sub i32 %7727, %7740
  %7742 = add i32 %7741, %7738
  %7743 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7725, i64 0, i32 7
  %7744 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %7743, align 8
  %7745 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7744, i64 0, i32 2, i32 0
  store i32 %7742, i32* %7745, align 4
  %7746 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %7747 = load i16, i16* %14, align 2
  %7748 = add i16 %7747, -65
  %7749 = icmp ult i16 %7748, 26
  %7750 = select i1 %7749, i16 32, i16 0
  %7751 = or i16 %7750, %7747
  %7752 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7746, i64 0, i32 7
  %7753 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %7752, align 8
  %7754 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7753, i64 0, i32 0, i32 1
  %7755 = load i16*, i16** %7754, align 8
  %7756 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7753, i64 0, i32 0, i32 2
  %7757 = load i16*, i16** %7756, align 8
  %7758 = icmp eq i16* %7755, %7757
  br i1 %7758, label %7759, label %7762, !prof !4

7759:                                             ; preds = %7722
  %7760 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7753, i64 0, i32 0
  %7761 = call i16* @_ZN13LiteralBufferIDsLj32EE4GrowEv(%class.LiteralBuffer.0* %7760) #11
  store i16* %7761, i16** %7754, align 8
  br label %7762

7762:                                             ; preds = %7722, %7759
  %7763 = phi i16* [ %7761, %7759 ], [ %7755, %7722 ]
  %7764 = getelementptr inbounds i16, i16* %7763, i64 1
  store i16* %7764, i16** %7754, align 8
  store i16 %7751, i16* %7763, align 2
  store i32 34, i32* %74, align 8
  %7765 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %7766 = load i8*, i8** %7765, align 8
  %7767 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %7768 = load i8*, i8** %7767, align 8
  %7769 = icmp ult i8* %7766, %7768
  br i1 %7769, label %7770, label %7781, !prof !3

7770:                                             ; preds = %7762
  %7771 = load i8, i8* %49, align 1, !range !2
  %7772 = icmp eq i8 %7771, 0
  br i1 %7772, label %7777, label %7773

7773:                                             ; preds = %7770
  %7774 = getelementptr inbounds i8, i8* %7766, i64 1
  store i8* %7774, i8** %7765, align 8
  %7775 = load i8, i8* %7774, align 1
  %7776 = zext i8 %7775 to i16
  br label %7783

7777:                                             ; preds = %7770
  %7778 = getelementptr inbounds i8, i8* %7766, i64 2
  %7779 = bitcast i8* %7778 to i16*
  store i8* %7778, i8** %7765, align 8
  %7780 = load i16, i16* %7779, align 2
  br label %7783

7781:                                             ; preds = %7762
  %7782 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %7783

7783:                                             ; preds = %7781, %7777, %7773
  %7784 = phi i16 [ %7782, %7781 ], [ %7776, %7773 ], [ %7780, %7777 ]
  store i16 %7784, i16* %14, align 2
  %7785 = icmp ugt i16 %7784, 15
  br i1 %7785, label %7786, label %7792

7786:                                             ; preds = %7783
  %7787 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %7787, align 8
  br label %7788

7788:                                             ; preds = %7209, %73, %7795, %7204, %7786
  %7789 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %7790 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %7791 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  br label %7216

7792:                                             ; preds = %7783
  %7793 = load i8, i8* %44, align 1, !range !2
  %7794 = icmp eq i8 %7793, 0
  br i1 %7794, label %7795, label %7797

7795:                                             ; preds = %7792
  %7796 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %7796, label %7788, label %7797

7797:                                             ; preds = %7792, %7795
  %7798 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %7799 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7798, i64 0, i32 0
  %7800 = load i32, i32* %7799, align 8
  %7801 = icmp eq i32 %7800, 5
  br label %14210

7802:                                             ; preds = %7866, %7473, %7666, %73, %7871
  %7803 = load i16, i16* %14, align 2
  br label %7804

7804:                                             ; preds = %7661, %7469, %7802
  %7805 = phi i16 [ %7803, %7802 ], [ %7659, %7661 ], [ %7467, %7469 ]
  switch i16 %7805, label %8015 [
    i16 32, label %7806
    i16 10, label %7806
    i16 9, label %7806
    i16 12, label %7806
    i16 34, label %7878
    i16 38, label %7934
    i16 39, label %7956
    i16 62, label %8012
    i16 0, label %8014
  ]

7806:                                             ; preds = %7804, %7804, %7804, %7804
  %7807 = load i8, i8* %49, align 1, !range !2
  %7808 = icmp eq i8 %7807, 0
  br i1 %7808, label %7815, label %7809

7809:                                             ; preds = %7806
  %7810 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %7811 = load i8*, i8** %7810, align 8
  %7812 = load i8, i8* %7811, align 1
  %7813 = zext i8 %7812 to i16
  %7814 = ptrtoint i8* %7811 to i64
  br label %7821

7815:                                             ; preds = %7806
  %7816 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %7817 = load i16*, i16** %7816, align 8
  %7818 = load i16, i16* %7817, align 2
  %7819 = ptrtoint i16* %7817 to i64
  %7820 = bitcast i16* %7817 to i8*
  br label %7821

7821:                                             ; preds = %7815, %7809
  %7822 = phi i8* [ %7811, %7809 ], [ %7820, %7815 ]
  %7823 = phi i64 [ %7814, %7809 ], [ %7819, %7815 ]
  %7824 = phi i16 [ %7813, %7809 ], [ %7818, %7815 ]
  %7825 = icmp eq i16 %7824, 10
  br i1 %7825, label %7826, label %7847

7826:                                             ; preds = %7821
  %7827 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %7828 = load i8, i8* %7827, align 8, !range !2
  %7829 = icmp eq i8 %7828, 0
  br i1 %7829, label %7847, label %7830, !prof !4

7830:                                             ; preds = %7826
  %7831 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %7832 = load i32, i32* %7831, align 8
  %7833 = add nsw i32 %7832, 1
  store i32 %7833, i32* %7831, align 8
  %7834 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %7835 = load i32, i32* %7834, align 8
  %7836 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %7837 = bitcast i8** %7836 to i64*
  %7838 = load i64, i64* %7837, align 8
  %7839 = sub i64 %7823, %7838
  %7840 = trunc i64 %7839 to i32
  %7841 = xor i8 %7807, 1
  %7842 = zext i8 %7841 to i32
  %7843 = ashr i32 %7840, %7842
  %7844 = add i32 %7835, 1
  %7845 = add i32 %7844, %7843
  %7846 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %7845, i32* %7846, align 4
  br label %7847

7847:                                             ; preds = %7830, %7826, %7821
  %7848 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %7849 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %7850 = load i8*, i8** %7849, align 8
  %7851 = icmp ult i8* %7822, %7850
  br i1 %7851, label %7852, label %7861, !prof !3

7852:                                             ; preds = %7847
  br i1 %7808, label %7857, label %7853

7853:                                             ; preds = %7852
  %7854 = getelementptr inbounds i8, i8* %7822, i64 1
  store i8* %7854, i8** %7848, align 8
  %7855 = load i8, i8* %7854, align 1
  %7856 = zext i8 %7855 to i16
  br label %7863

7857:                                             ; preds = %7852
  %7858 = getelementptr inbounds i8, i8* %7822, i64 2
  %7859 = bitcast i8* %7858 to i16*
  store i8* %7858, i8** %7848, align 8
  %7860 = load i16, i16* %7859, align 2
  br label %7863

7861:                                             ; preds = %7847
  %7862 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %7863

7863:                                             ; preds = %7861, %7857, %7853
  %7864 = phi i16 [ %7862, %7861 ], [ %7856, %7853 ], [ %7860, %7857 ]
  store i16 %7864, i16* %14, align 2
  %7865 = icmp ugt i16 %7864, 15
  br i1 %7865, label %7866, label %7868

7866:                                             ; preds = %7863
  %7867 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %7867, align 8
  br label %7802

7868:                                             ; preds = %7863
  %7869 = load i8, i8* %44, align 1, !range !2
  %7870 = icmp eq i8 %7869, 0
  br i1 %7870, label %7871, label %7873

7871:                                             ; preds = %7868
  %7872 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %7872, label %7802, label %7873

7873:                                             ; preds = %7868, %7871
  %7874 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %7875 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7874, i64 0, i32 0
  %7876 = load i32, i32* %7875, align 8
  %7877 = icmp eq i32 %7876, 5
  br label %14210

7878:                                             ; preds = %7804
  %7879 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %7880 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %7881 = load i32, i32* %7880, align 8
  %7882 = bitcast %"class.blink::SegmentedString"* %1 to i64*
  %7883 = load i64, i64* %7882, align 8
  %7884 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %7885 = bitcast i8** %7884 to i64*
  %7886 = load i64, i64* %7885, align 8
  %7887 = sub i64 %7883, %7886
  %7888 = trunc i64 %7887 to i32
  %7889 = load i8, i8* %49, align 1, !range !2
  %7890 = xor i8 %7889, 1
  %7891 = zext i8 %7890 to i32
  %7892 = ashr i32 %7888, %7891
  %7893 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7879, i64 0, i32 7
  %7894 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %7893, align 8
  %7895 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7879, i64 0, i32 2
  %7896 = load i32, i32* %7895, align 4
  %7897 = add i32 %7881, 1
  %7898 = sub i32 %7897, %7896
  %7899 = add i32 %7898, %7892
  %7900 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7894, i64 0, i32 3, i32 0
  store i32 %7899, i32* %7900, align 4
  store i32 37, i32* %74, align 8
  %7901 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %7902 = load i8*, i8** %7901, align 8
  %7903 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %7904 = load i8*, i8** %7903, align 8
  %7905 = icmp ult i8* %7902, %7904
  br i1 %7905, label %7906, label %7917, !prof !3

7906:                                             ; preds = %7878
  %7907 = load i8, i8* %49, align 1, !range !2
  %7908 = icmp eq i8 %7907, 0
  br i1 %7908, label %7913, label %7909

7909:                                             ; preds = %7906
  %7910 = getelementptr inbounds i8, i8* %7902, i64 1
  store i8* %7910, i8** %7901, align 8
  %7911 = load i8, i8* %7910, align 1
  %7912 = zext i8 %7911 to i16
  br label %7919

7913:                                             ; preds = %7906
  %7914 = getelementptr inbounds i8, i8* %7902, i64 2
  %7915 = bitcast i8* %7914 to i16*
  store i8* %7914, i8** %7901, align 8
  %7916 = load i16, i16* %7915, align 2
  br label %7919

7917:                                             ; preds = %7878
  %7918 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %7919

7919:                                             ; preds = %7917, %7913, %7909
  %7920 = phi i16 [ %7918, %7917 ], [ %7912, %7909 ], [ %7916, %7913 ]
  store i16 %7920, i16* %14, align 2
  %7921 = icmp ugt i16 %7920, 15
  br i1 %7921, label %7922, label %7924

7922:                                             ; preds = %7919
  %7923 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %7923, align 8
  br label %8086

7924:                                             ; preds = %7919
  %7925 = load i8, i8* %44, align 1, !range !2
  %7926 = icmp eq i8 %7925, 0
  br i1 %7926, label %7927, label %7929

7927:                                             ; preds = %7924
  %7928 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %7928, label %8084, label %7929

7929:                                             ; preds = %7924, %7927
  %7930 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %7931 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7930, i64 0, i32 0
  %7932 = load i32, i32* %7931, align 8
  %7933 = icmp eq i32 %7932, 5
  br label %14210

7934:                                             ; preds = %7804
  %7935 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %7936 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %7937 = load i32, i32* %7936, align 8
  %7938 = bitcast %"class.blink::SegmentedString"* %1 to i64*
  %7939 = load i64, i64* %7938, align 8
  %7940 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %7941 = bitcast i8** %7940 to i64*
  %7942 = load i64, i64* %7941, align 8
  %7943 = sub i64 %7939, %7942
  %7944 = trunc i64 %7943 to i32
  %7945 = load i8, i8* %49, align 1, !range !2
  %7946 = xor i8 %7945, 1
  %7947 = zext i8 %7946 to i32
  %7948 = ashr i32 %7944, %7947
  %7949 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7935, i64 0, i32 7
  %7950 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %7949, align 8
  %7951 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7935, i64 0, i32 2
  %7952 = load i32, i32* %7951, align 4
  %7953 = sub i32 %7937, %7952
  %7954 = add i32 %7953, %7948
  %7955 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7950, i64 0, i32 3, i32 0
  store i32 %7954, i32* %7955, align 4
  store i32 39, i32* %74, align 8
  br label %8488

7956:                                             ; preds = %7804
  %7957 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %7958 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %7959 = load i32, i32* %7958, align 8
  %7960 = bitcast %"class.blink::SegmentedString"* %1 to i64*
  %7961 = load i64, i64* %7960, align 8
  %7962 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %7963 = bitcast i8** %7962 to i64*
  %7964 = load i64, i64* %7963, align 8
  %7965 = sub i64 %7961, %7964
  %7966 = trunc i64 %7965 to i32
  %7967 = load i8, i8* %49, align 1, !range !2
  %7968 = xor i8 %7967, 1
  %7969 = zext i8 %7968 to i32
  %7970 = ashr i32 %7966, %7969
  %7971 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7957, i64 0, i32 7
  %7972 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %7971, align 8
  %7973 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %7957, i64 0, i32 2
  %7974 = load i32, i32* %7973, align 4
  %7975 = add i32 %7959, 1
  %7976 = sub i32 %7975, %7974
  %7977 = add i32 %7976, %7970
  %7978 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7972, i64 0, i32 3, i32 0
  store i32 %7977, i32* %7978, align 4
  store i32 38, i32* %74, align 8
  %7979 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %7980 = load i8*, i8** %7979, align 8
  %7981 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %7982 = load i8*, i8** %7981, align 8
  %7983 = icmp ult i8* %7980, %7982
  br i1 %7983, label %7984, label %7995, !prof !3

7984:                                             ; preds = %7956
  %7985 = load i8, i8* %49, align 1, !range !2
  %7986 = icmp eq i8 %7985, 0
  br i1 %7986, label %7991, label %7987

7987:                                             ; preds = %7984
  %7988 = getelementptr inbounds i8, i8* %7980, i64 1
  store i8* %7988, i8** %7979, align 8
  %7989 = load i8, i8* %7988, align 1
  %7990 = zext i8 %7989 to i16
  br label %7997

7991:                                             ; preds = %7984
  %7992 = getelementptr inbounds i8, i8* %7980, i64 2
  %7993 = bitcast i8* %7992 to i16*
  store i8* %7992, i8** %7979, align 8
  %7994 = load i16, i16* %7993, align 2
  br label %7997

7995:                                             ; preds = %7956
  %7996 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %7997

7997:                                             ; preds = %7995, %7991, %7987
  %7998 = phi i16 [ %7996, %7995 ], [ %7990, %7987 ], [ %7994, %7991 ]
  store i16 %7998, i16* %14, align 2
  %7999 = icmp ugt i16 %7998, 15
  br i1 %7999, label %8000, label %8002

8000:                                             ; preds = %7997
  %8001 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %8001, align 8
  br label %8288

8002:                                             ; preds = %7997
  %8003 = load i8, i8* %44, align 1, !range !2
  %8004 = icmp eq i8 %8003, 0
  br i1 %8004, label %8005, label %8007

8005:                                             ; preds = %8002
  %8006 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %8006, label %8286, label %8007

8007:                                             ; preds = %8002, %8005
  %8008 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %8009 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8008, i64 0, i32 0
  %8010 = load i32, i32* %8009, align 8
  %8011 = icmp eq i32 %8010, 5
  br label %14210

8012:                                             ; preds = %7804
  %8013 = call zeroext i1 @_ZN5blink13HTMLTokenizer15EmitAndResumeInERNS_15SegmentedStringENS0_5StateE(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i32 0)
  br label %14210

8014:                                             ; preds = %7804
  store i32 0, i32* %74, align 8
  br label %76

8015:                                             ; preds = %7804
  %8016 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %8017 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %8018 = load i32, i32* %8017, align 8
  %8019 = bitcast %"class.blink::SegmentedString"* %1 to i64*
  %8020 = load i64, i64* %8019, align 8
  %8021 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %8022 = bitcast i8** %8021 to i64*
  %8023 = load i64, i64* %8022, align 8
  %8024 = sub i64 %8020, %8023
  %8025 = trunc i64 %8024 to i32
  %8026 = load i8, i8* %49, align 1, !range !2
  %8027 = xor i8 %8026, 1
  %8028 = zext i8 %8027 to i32
  %8029 = ashr i32 %8025, %8028
  %8030 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8016, i64 0, i32 7
  %8031 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %8030, align 8
  %8032 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8016, i64 0, i32 2
  %8033 = load i32, i32* %8032, align 4
  %8034 = sub i32 %8018, %8033
  %8035 = add i32 %8034, %8029
  %8036 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8031, i64 0, i32 3, i32 0
  store i32 %8035, i32* %8036, align 4
  %8037 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %8038 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8037, i64 0, i32 7
  %8039 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %8038, align 8
  %8040 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8039, i64 0, i32 1, i32 1
  %8041 = load i16*, i16** %8040, align 8
  %8042 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8039, i64 0, i32 1, i32 2
  %8043 = load i16*, i16** %8042, align 8
  %8044 = icmp eq i16* %8041, %8043
  br i1 %8044, label %8045, label %8048, !prof !4

8045:                                             ; preds = %8015
  %8046 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8039, i64 0, i32 1
  %8047 = call i16* @_ZN13LiteralBufferIDsLj32EE4GrowEv(%class.LiteralBuffer.0* %8046) #11
  store i16* %8047, i16** %8040, align 8
  br label %8048

8048:                                             ; preds = %8015, %8045
  %8049 = phi i16* [ %8047, %8045 ], [ %8041, %8015 ]
  %8050 = getelementptr inbounds i16, i16* %8049, i64 1
  store i16* %8050, i16** %8040, align 8
  store i16 %7805, i16* %8049, align 2
  store i32 39, i32* %74, align 8
  %8051 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %8052 = load i8*, i8** %8051, align 8
  %8053 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %8054 = load i8*, i8** %8053, align 8
  %8055 = icmp ult i8* %8052, %8054
  br i1 %8055, label %8056, label %8067, !prof !3

8056:                                             ; preds = %8048
  %8057 = load i8, i8* %49, align 1, !range !2
  %8058 = icmp eq i8 %8057, 0
  br i1 %8058, label %8063, label %8059

8059:                                             ; preds = %8056
  %8060 = getelementptr inbounds i8, i8* %8052, i64 1
  store i8* %8060, i8** %8051, align 8
  %8061 = load i8, i8* %8060, align 1
  %8062 = zext i8 %8061 to i16
  br label %8069

8063:                                             ; preds = %8056
  %8064 = getelementptr inbounds i8, i8* %8052, i64 2
  %8065 = bitcast i8* %8064 to i16*
  store i8* %8064, i8** %8051, align 8
  %8066 = load i16, i16* %8065, align 2
  br label %8069

8067:                                             ; preds = %8048
  %8068 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %8069

8069:                                             ; preds = %8067, %8063, %8059
  %8070 = phi i16 [ %8068, %8067 ], [ %8062, %8059 ], [ %8066, %8063 ]
  store i16 %8070, i16* %14, align 2
  %8071 = icmp ugt i16 %8070, 15
  br i1 %8071, label %8072, label %8074

8072:                                             ; preds = %8069
  %8073 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %8073, align 8
  br label %8490

8074:                                             ; preds = %8069
  %8075 = load i8, i8* %44, align 1, !range !2
  %8076 = icmp eq i8 %8075, 0
  br i1 %8076, label %8077, label %8079

8077:                                             ; preds = %8074
  %8078 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %8078, label %8488, label %8079

8079:                                             ; preds = %8074, %8077
  %8080 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %8081 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8080, i64 0, i32 0
  %8082 = load i32, i32* %8081, align 8
  %8083 = icmp eq i32 %8082, 5
  br label %14210

8084:                                             ; preds = %8834, %8274, %7927, %73, %8279
  %8085 = load i16, i16* %14, align 2
  br label %8086

8086:                                             ; preds = %7922, %8084
  %8087 = phi i16 [ %8085, %8084 ], [ %7920, %7922 ]
  switch i16 %8087, label %8200 [
    i16 34, label %8088
    i16 38, label %8143
    i16 0, label %8178
  ]

8088:                                             ; preds = %8086
  %8089 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %8090 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %8091 = load i32, i32* %8090, align 8
  %8092 = bitcast %"class.blink::SegmentedString"* %1 to i64*
  %8093 = load i64, i64* %8092, align 8
  %8094 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %8095 = bitcast i8** %8094 to i64*
  %8096 = load i64, i64* %8095, align 8
  %8097 = sub i64 %8093, %8096
  %8098 = trunc i64 %8097 to i32
  %8099 = load i8, i8* %49, align 1, !range !2
  %8100 = xor i8 %8099, 1
  %8101 = zext i8 %8100 to i32
  %8102 = ashr i32 %8098, %8101
  %8103 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8089, i64 0, i32 2
  %8104 = load i32, i32* %8103, align 4
  %8105 = sub i32 %8091, %8104
  %8106 = add i32 %8105, %8102
  %8107 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8089, i64 0, i32 7
  %8108 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %8107, align 8
  %8109 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8108, i64 0, i32 3, i32 1
  store i32 %8106, i32* %8109, align 4
  store i32 41, i32* %74, align 8
  %8110 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %8111 = load i8*, i8** %8110, align 8
  %8112 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %8113 = load i8*, i8** %8112, align 8
  %8114 = icmp ult i8* %8111, %8113
  br i1 %8114, label %8115, label %8126, !prof !3

8115:                                             ; preds = %8088
  %8116 = load i8, i8* %49, align 1, !range !2
  %8117 = icmp eq i8 %8116, 0
  br i1 %8117, label %8122, label %8118

8118:                                             ; preds = %8115
  %8119 = getelementptr inbounds i8, i8* %8111, i64 1
  store i8* %8119, i8** %8110, align 8
  %8120 = load i8, i8* %8119, align 1
  %8121 = zext i8 %8120 to i16
  br label %8128

8122:                                             ; preds = %8115
  %8123 = getelementptr inbounds i8, i8* %8111, i64 2
  %8124 = bitcast i8* %8123 to i16*
  store i8* %8123, i8** %8110, align 8
  %8125 = load i16, i16* %8124, align 2
  br label %8128

8126:                                             ; preds = %8088
  %8127 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %8128

8128:                                             ; preds = %8126, %8122, %8118
  %8129 = phi i16 [ %8127, %8126 ], [ %8121, %8118 ], [ %8125, %8122 ]
  store i16 %8129, i16* %14, align 2
  %8130 = icmp ugt i16 %8129, 15
  br i1 %8130, label %8131, label %8133

8131:                                             ; preds = %8128
  %8132 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %8132, align 8
  br label %8840

8133:                                             ; preds = %8128
  %8134 = load i8, i8* %44, align 1, !range !2
  %8135 = icmp eq i8 %8134, 0
  br i1 %8135, label %8136, label %8138

8136:                                             ; preds = %8133
  %8137 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %8137, label %8838, label %8138

8138:                                             ; preds = %8133, %8136
  %8139 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %8140 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8139, i64 0, i32 0
  %8141 = load i32, i32* %8140, align 8
  %8142 = icmp eq i32 %8141, 5
  br label %14210

8143:                                             ; preds = %8086
  %8144 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 5
  store i16 34, i16* %8144, align 8
  store i32 40, i32* %74, align 8
  %8145 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %8146 = load i8*, i8** %8145, align 8
  %8147 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %8148 = load i8*, i8** %8147, align 8
  %8149 = icmp ult i8* %8146, %8148
  br i1 %8149, label %8150, label %8161, !prof !3

8150:                                             ; preds = %8143
  %8151 = load i8, i8* %49, align 1, !range !2
  %8152 = icmp eq i8 %8151, 0
  br i1 %8152, label %8157, label %8153

8153:                                             ; preds = %8150
  %8154 = getelementptr inbounds i8, i8* %8146, i64 1
  store i8* %8154, i8** %8145, align 8
  %8155 = load i8, i8* %8154, align 1
  %8156 = zext i8 %8155 to i16
  br label %8163

8157:                                             ; preds = %8150
  %8158 = getelementptr inbounds i8, i8* %8146, i64 2
  %8159 = bitcast i8* %8158 to i16*
  store i8* %8158, i8** %8145, align 8
  %8160 = load i16, i16* %8159, align 2
  br label %8163

8161:                                             ; preds = %8143
  %8162 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %8163

8163:                                             ; preds = %8161, %8157, %8153
  %8164 = phi i16 [ %8162, %8161 ], [ %8156, %8153 ], [ %8160, %8157 ]
  store i16 %8164, i16* %14, align 2
  %8165 = icmp ugt i16 %8164, 15
  br i1 %8165, label %8166, label %8168

8166:                                             ; preds = %8163
  %8167 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %8167, align 8
  br label %8710

8168:                                             ; preds = %8163
  %8169 = load i8, i8* %44, align 1, !range !2
  %8170 = icmp eq i8 %8169, 0
  br i1 %8170, label %8171, label %8173

8171:                                             ; preds = %8168
  %8172 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %8172, label %8710, label %8173

8173:                                             ; preds = %8168, %8171
  %8174 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %8175 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8174, i64 0, i32 0
  %8176 = load i32, i32* %8175, align 8
  %8177 = icmp eq i32 %8176, 5
  br label %14210

8178:                                             ; preds = %8086
  %8179 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %8180 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %8181 = load i32, i32* %8180, align 8
  %8182 = bitcast %"class.blink::SegmentedString"* %1 to i64*
  %8183 = load i64, i64* %8182, align 8
  %8184 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %8185 = bitcast i8** %8184 to i64*
  %8186 = load i64, i64* %8185, align 8
  %8187 = sub i64 %8183, %8186
  %8188 = trunc i64 %8187 to i32
  %8189 = load i8, i8* %49, align 1, !range !2
  %8190 = xor i8 %8189, 1
  %8191 = zext i8 %8190 to i32
  %8192 = ashr i32 %8188, %8191
  %8193 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8179, i64 0, i32 2
  %8194 = load i32, i32* %8193, align 4
  %8195 = sub i32 %8181, %8194
  %8196 = add i32 %8195, %8192
  %8197 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8179, i64 0, i32 7
  %8198 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %8197, align 8
  %8199 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8198, i64 0, i32 3, i32 1
  store i32 %8196, i32* %8199, align 4
  store i32 0, i32* %74, align 8
  br label %76

8200:                                             ; preds = %8086
  %8201 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %8202 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8201, i64 0, i32 7
  %8203 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %8202, align 8
  %8204 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8203, i64 0, i32 1, i32 1
  %8205 = load i16*, i16** %8204, align 8
  %8206 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8203, i64 0, i32 1, i32 2
  %8207 = load i16*, i16** %8206, align 8
  %8208 = icmp eq i16* %8205, %8207
  br i1 %8208, label %8209, label %8212, !prof !4

8209:                                             ; preds = %8200
  %8210 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8203, i64 0, i32 1
  %8211 = call i16* @_ZN13LiteralBufferIDsLj32EE4GrowEv(%class.LiteralBuffer.0* %8210) #11
  store i16* %8211, i16** %8204, align 8
  br label %8212

8212:                                             ; preds = %8200, %8209
  %8213 = phi i16* [ %8211, %8209 ], [ %8205, %8200 ]
  %8214 = getelementptr inbounds i16, i16* %8213, i64 1
  store i16* %8214, i16** %8204, align 8
  store i16 %8087, i16* %8213, align 2
  %8215 = load i8, i8* %49, align 1, !range !2
  %8216 = icmp eq i8 %8215, 0
  br i1 %8216, label %8223, label %8217

8217:                                             ; preds = %8212
  %8218 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %8219 = load i8*, i8** %8218, align 8
  %8220 = load i8, i8* %8219, align 1
  %8221 = zext i8 %8220 to i16
  %8222 = ptrtoint i8* %8219 to i64
  br label %8229

8223:                                             ; preds = %8212
  %8224 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %8225 = load i16*, i16** %8224, align 8
  %8226 = load i16, i16* %8225, align 2
  %8227 = ptrtoint i16* %8225 to i64
  %8228 = bitcast i16* %8225 to i8*
  br label %8229

8229:                                             ; preds = %8223, %8217
  %8230 = phi i8* [ %8219, %8217 ], [ %8228, %8223 ]
  %8231 = phi i64 [ %8222, %8217 ], [ %8227, %8223 ]
  %8232 = phi i16 [ %8221, %8217 ], [ %8226, %8223 ]
  %8233 = icmp eq i16 %8232, 10
  br i1 %8233, label %8234, label %8255

8234:                                             ; preds = %8229
  %8235 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %8236 = load i8, i8* %8235, align 8, !range !2
  %8237 = icmp eq i8 %8236, 0
  br i1 %8237, label %8255, label %8238, !prof !4

8238:                                             ; preds = %8234
  %8239 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %8240 = load i32, i32* %8239, align 8
  %8241 = add nsw i32 %8240, 1
  store i32 %8241, i32* %8239, align 8
  %8242 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %8243 = load i32, i32* %8242, align 8
  %8244 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %8245 = bitcast i8** %8244 to i64*
  %8246 = load i64, i64* %8245, align 8
  %8247 = sub i64 %8231, %8246
  %8248 = trunc i64 %8247 to i32
  %8249 = xor i8 %8215, 1
  %8250 = zext i8 %8249 to i32
  %8251 = ashr i32 %8248, %8250
  %8252 = add i32 %8243, 1
  %8253 = add i32 %8252, %8251
  %8254 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %8253, i32* %8254, align 4
  br label %8255

8255:                                             ; preds = %8238, %8234, %8229
  %8256 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %8257 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %8258 = load i8*, i8** %8257, align 8
  %8259 = icmp ult i8* %8230, %8258
  br i1 %8259, label %8260, label %8269, !prof !3

8260:                                             ; preds = %8255
  br i1 %8216, label %8265, label %8261

8261:                                             ; preds = %8260
  %8262 = getelementptr inbounds i8, i8* %8230, i64 1
  store i8* %8262, i8** %8256, align 8
  %8263 = load i8, i8* %8262, align 1
  %8264 = zext i8 %8263 to i16
  br label %8271

8265:                                             ; preds = %8260
  %8266 = getelementptr inbounds i8, i8* %8230, i64 2
  %8267 = bitcast i8* %8266 to i16*
  store i8* %8266, i8** %8256, align 8
  %8268 = load i16, i16* %8267, align 2
  br label %8271

8269:                                             ; preds = %8255
  %8270 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %8271

8271:                                             ; preds = %8269, %8265, %8261
  %8272 = phi i16 [ %8270, %8269 ], [ %8264, %8261 ], [ %8268, %8265 ]
  store i16 %8272, i16* %14, align 2
  %8273 = icmp ugt i16 %8272, 15
  br i1 %8273, label %8274, label %8276

8274:                                             ; preds = %8271
  %8275 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %8275, align 8
  br label %8084

8276:                                             ; preds = %8271
  %8277 = load i8, i8* %44, align 1, !range !2
  %8278 = icmp eq i8 %8277, 0
  br i1 %8278, label %8279, label %8281

8279:                                             ; preds = %8276
  %8280 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %8280, label %8084, label %8281

8281:                                             ; preds = %8276, %8279
  %8282 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %8283 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8282, i64 0, i32 0
  %8284 = load i32, i32* %8283, align 8
  %8285 = icmp eq i32 %8284, 5
  br label %14210

8286:                                             ; preds = %8835, %8476, %8005, %73, %8481
  %8287 = load i16, i16* %14, align 2
  br label %8288

8288:                                             ; preds = %8000, %8286
  %8289 = phi i16 [ %8287, %8286 ], [ %7998, %8000 ]
  switch i16 %8289, label %8402 [
    i16 39, label %8290
    i16 38, label %8345
    i16 0, label %8380
  ]

8290:                                             ; preds = %8288
  %8291 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %8292 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %8293 = load i32, i32* %8292, align 8
  %8294 = bitcast %"class.blink::SegmentedString"* %1 to i64*
  %8295 = load i64, i64* %8294, align 8
  %8296 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %8297 = bitcast i8** %8296 to i64*
  %8298 = load i64, i64* %8297, align 8
  %8299 = sub i64 %8295, %8298
  %8300 = trunc i64 %8299 to i32
  %8301 = load i8, i8* %49, align 1, !range !2
  %8302 = xor i8 %8301, 1
  %8303 = zext i8 %8302 to i32
  %8304 = ashr i32 %8300, %8303
  %8305 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8291, i64 0, i32 2
  %8306 = load i32, i32* %8305, align 4
  %8307 = sub i32 %8293, %8306
  %8308 = add i32 %8307, %8304
  %8309 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8291, i64 0, i32 7
  %8310 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %8309, align 8
  %8311 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8310, i64 0, i32 3, i32 1
  store i32 %8308, i32* %8311, align 4
  store i32 41, i32* %74, align 8
  %8312 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %8313 = load i8*, i8** %8312, align 8
  %8314 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %8315 = load i8*, i8** %8314, align 8
  %8316 = icmp ult i8* %8313, %8315
  br i1 %8316, label %8317, label %8328, !prof !3

8317:                                             ; preds = %8290
  %8318 = load i8, i8* %49, align 1, !range !2
  %8319 = icmp eq i8 %8318, 0
  br i1 %8319, label %8324, label %8320

8320:                                             ; preds = %8317
  %8321 = getelementptr inbounds i8, i8* %8313, i64 1
  store i8* %8321, i8** %8312, align 8
  %8322 = load i8, i8* %8321, align 1
  %8323 = zext i8 %8322 to i16
  br label %8330

8324:                                             ; preds = %8317
  %8325 = getelementptr inbounds i8, i8* %8313, i64 2
  %8326 = bitcast i8* %8325 to i16*
  store i8* %8325, i8** %8312, align 8
  %8327 = load i16, i16* %8326, align 2
  br label %8330

8328:                                             ; preds = %8290
  %8329 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %8330

8330:                                             ; preds = %8328, %8324, %8320
  %8331 = phi i16 [ %8329, %8328 ], [ %8323, %8320 ], [ %8327, %8324 ]
  store i16 %8331, i16* %14, align 2
  %8332 = icmp ugt i16 %8331, 15
  br i1 %8332, label %8333, label %8335

8333:                                             ; preds = %8330
  %8334 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %8334, align 8
  br label %8840

8335:                                             ; preds = %8330
  %8336 = load i8, i8* %44, align 1, !range !2
  %8337 = icmp eq i8 %8336, 0
  br i1 %8337, label %8338, label %8340

8338:                                             ; preds = %8335
  %8339 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %8339, label %8838, label %8340

8340:                                             ; preds = %8335, %8338
  %8341 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %8342 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8341, i64 0, i32 0
  %8343 = load i32, i32* %8342, align 8
  %8344 = icmp eq i32 %8343, 5
  br label %14210

8345:                                             ; preds = %8288
  %8346 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 5
  store i16 39, i16* %8346, align 8
  store i32 40, i32* %74, align 8
  %8347 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %8348 = load i8*, i8** %8347, align 8
  %8349 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %8350 = load i8*, i8** %8349, align 8
  %8351 = icmp ult i8* %8348, %8350
  br i1 %8351, label %8352, label %8363, !prof !3

8352:                                             ; preds = %8345
  %8353 = load i8, i8* %49, align 1, !range !2
  %8354 = icmp eq i8 %8353, 0
  br i1 %8354, label %8359, label %8355

8355:                                             ; preds = %8352
  %8356 = getelementptr inbounds i8, i8* %8348, i64 1
  store i8* %8356, i8** %8347, align 8
  %8357 = load i8, i8* %8356, align 1
  %8358 = zext i8 %8357 to i16
  br label %8365

8359:                                             ; preds = %8352
  %8360 = getelementptr inbounds i8, i8* %8348, i64 2
  %8361 = bitcast i8* %8360 to i16*
  store i8* %8360, i8** %8347, align 8
  %8362 = load i16, i16* %8361, align 2
  br label %8365

8363:                                             ; preds = %8345
  %8364 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %8365

8365:                                             ; preds = %8363, %8359, %8355
  %8366 = phi i16 [ %8364, %8363 ], [ %8358, %8355 ], [ %8362, %8359 ]
  store i16 %8366, i16* %14, align 2
  %8367 = icmp ugt i16 %8366, 15
  br i1 %8367, label %8368, label %8370

8368:                                             ; preds = %8365
  %8369 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %8369, align 8
  br label %8710

8370:                                             ; preds = %8365
  %8371 = load i8, i8* %44, align 1, !range !2
  %8372 = icmp eq i8 %8371, 0
  br i1 %8372, label %8373, label %8375

8373:                                             ; preds = %8370
  %8374 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %8374, label %8710, label %8375

8375:                                             ; preds = %8370, %8373
  %8376 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %8377 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8376, i64 0, i32 0
  %8378 = load i32, i32* %8377, align 8
  %8379 = icmp eq i32 %8378, 5
  br label %14210

8380:                                             ; preds = %8288
  %8381 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %8382 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %8383 = load i32, i32* %8382, align 8
  %8384 = bitcast %"class.blink::SegmentedString"* %1 to i64*
  %8385 = load i64, i64* %8384, align 8
  %8386 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %8387 = bitcast i8** %8386 to i64*
  %8388 = load i64, i64* %8387, align 8
  %8389 = sub i64 %8385, %8388
  %8390 = trunc i64 %8389 to i32
  %8391 = load i8, i8* %49, align 1, !range !2
  %8392 = xor i8 %8391, 1
  %8393 = zext i8 %8392 to i32
  %8394 = ashr i32 %8390, %8393
  %8395 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8381, i64 0, i32 2
  %8396 = load i32, i32* %8395, align 4
  %8397 = sub i32 %8383, %8396
  %8398 = add i32 %8397, %8394
  %8399 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8381, i64 0, i32 7
  %8400 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %8399, align 8
  %8401 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8400, i64 0, i32 3, i32 1
  store i32 %8398, i32* %8401, align 4
  store i32 0, i32* %74, align 8
  br label %76

8402:                                             ; preds = %8288
  %8403 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %8404 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8403, i64 0, i32 7
  %8405 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %8404, align 8
  %8406 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8405, i64 0, i32 1, i32 1
  %8407 = load i16*, i16** %8406, align 8
  %8408 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8405, i64 0, i32 1, i32 2
  %8409 = load i16*, i16** %8408, align 8
  %8410 = icmp eq i16* %8407, %8409
  br i1 %8410, label %8411, label %8414, !prof !4

8411:                                             ; preds = %8402
  %8412 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8405, i64 0, i32 1
  %8413 = call i16* @_ZN13LiteralBufferIDsLj32EE4GrowEv(%class.LiteralBuffer.0* %8412) #11
  store i16* %8413, i16** %8406, align 8
  br label %8414

8414:                                             ; preds = %8402, %8411
  %8415 = phi i16* [ %8413, %8411 ], [ %8407, %8402 ]
  %8416 = getelementptr inbounds i16, i16* %8415, i64 1
  store i16* %8416, i16** %8406, align 8
  store i16 %8289, i16* %8415, align 2
  %8417 = load i8, i8* %49, align 1, !range !2
  %8418 = icmp eq i8 %8417, 0
  br i1 %8418, label %8425, label %8419

8419:                                             ; preds = %8414
  %8420 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %8421 = load i8*, i8** %8420, align 8
  %8422 = load i8, i8* %8421, align 1
  %8423 = zext i8 %8422 to i16
  %8424 = ptrtoint i8* %8421 to i64
  br label %8431

8425:                                             ; preds = %8414
  %8426 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %8427 = load i16*, i16** %8426, align 8
  %8428 = load i16, i16* %8427, align 2
  %8429 = ptrtoint i16* %8427 to i64
  %8430 = bitcast i16* %8427 to i8*
  br label %8431

8431:                                             ; preds = %8425, %8419
  %8432 = phi i8* [ %8421, %8419 ], [ %8430, %8425 ]
  %8433 = phi i64 [ %8424, %8419 ], [ %8429, %8425 ]
  %8434 = phi i16 [ %8423, %8419 ], [ %8428, %8425 ]
  %8435 = icmp eq i16 %8434, 10
  br i1 %8435, label %8436, label %8457

8436:                                             ; preds = %8431
  %8437 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %8438 = load i8, i8* %8437, align 8, !range !2
  %8439 = icmp eq i8 %8438, 0
  br i1 %8439, label %8457, label %8440, !prof !4

8440:                                             ; preds = %8436
  %8441 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %8442 = load i32, i32* %8441, align 8
  %8443 = add nsw i32 %8442, 1
  store i32 %8443, i32* %8441, align 8
  %8444 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %8445 = load i32, i32* %8444, align 8
  %8446 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %8447 = bitcast i8** %8446 to i64*
  %8448 = load i64, i64* %8447, align 8
  %8449 = sub i64 %8433, %8448
  %8450 = trunc i64 %8449 to i32
  %8451 = xor i8 %8417, 1
  %8452 = zext i8 %8451 to i32
  %8453 = ashr i32 %8450, %8452
  %8454 = add i32 %8445, 1
  %8455 = add i32 %8454, %8453
  %8456 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %8455, i32* %8456, align 4
  br label %8457

8457:                                             ; preds = %8440, %8436, %8431
  %8458 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %8459 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %8460 = load i8*, i8** %8459, align 8
  %8461 = icmp ult i8* %8432, %8460
  br i1 %8461, label %8462, label %8471, !prof !3

8462:                                             ; preds = %8457
  br i1 %8418, label %8467, label %8463

8463:                                             ; preds = %8462
  %8464 = getelementptr inbounds i8, i8* %8432, i64 1
  store i8* %8464, i8** %8458, align 8
  %8465 = load i8, i8* %8464, align 1
  %8466 = zext i8 %8465 to i16
  br label %8473

8467:                                             ; preds = %8462
  %8468 = getelementptr inbounds i8, i8* %8432, i64 2
  %8469 = bitcast i8* %8468 to i16*
  store i8* %8468, i8** %8458, align 8
  %8470 = load i16, i16* %8469, align 2
  br label %8473

8471:                                             ; preds = %8457
  %8472 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %8473

8473:                                             ; preds = %8471, %8467, %8463
  %8474 = phi i16 [ %8472, %8471 ], [ %8466, %8463 ], [ %8470, %8467 ]
  store i16 %8474, i16* %14, align 2
  %8475 = icmp ugt i16 %8474, 15
  br i1 %8475, label %8476, label %8478

8476:                                             ; preds = %8473
  %8477 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %8477, align 8
  br label %8286

8478:                                             ; preds = %8473
  %8479 = load i8, i8* %44, align 1, !range !2
  %8480 = icmp eq i8 %8479, 0
  br i1 %8480, label %8481, label %8483

8481:                                             ; preds = %8478
  %8482 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %8482, label %8286, label %8483

8483:                                             ; preds = %8478, %8481
  %8484 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %8485 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8484, i64 0, i32 0
  %8486 = load i32, i32* %8485, align 8
  %8487 = icmp eq i32 %8486, 5
  br label %14210

8488:                                             ; preds = %8836, %8698, %7934, %8077, %73, %8703
  %8489 = load i16, i16* %14, align 2
  br label %8490

8490:                                             ; preds = %8072, %8488
  %8491 = phi i16 [ %8489, %8488 ], [ %8070, %8072 ]
  switch i16 %8491, label %8662 [
    i16 32, label %8492
    i16 10, label %8492
    i16 9, label %8492
    i16 12, label %8492
    i16 38, label %8582
    i16 62, label %8617
    i16 0, label %8640
  ]

8492:                                             ; preds = %8490, %8490, %8490, %8490
  %8493 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %8494 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %8495 = load i32, i32* %8494, align 8
  %8496 = bitcast %"class.blink::SegmentedString"* %1 to i64*
  %8497 = load i64, i64* %8496, align 8
  %8498 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %8499 = bitcast i8** %8498 to i64*
  %8500 = load i64, i64* %8499, align 8
  %8501 = sub i64 %8497, %8500
  %8502 = trunc i64 %8501 to i32
  %8503 = load i8, i8* %49, align 1, !range !2
  %8504 = xor i8 %8503, 1
  %8505 = zext i8 %8504 to i32
  %8506 = ashr i32 %8502, %8505
  %8507 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8493, i64 0, i32 2
  %8508 = load i32, i32* %8507, align 4
  %8509 = sub i32 %8495, %8508
  %8510 = add i32 %8509, %8506
  %8511 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8493, i64 0, i32 7
  %8512 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %8511, align 8
  %8513 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8512, i64 0, i32 3, i32 1
  store i32 %8510, i32* %8513, align 4
  store i32 33, i32* %74, align 8
  %8514 = load i8, i8* %49, align 1, !range !2
  %8515 = icmp eq i8 %8514, 0
  br i1 %8515, label %8522, label %8516

8516:                                             ; preds = %8492
  %8517 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %8518 = load i8*, i8** %8517, align 8
  %8519 = load i8, i8* %8518, align 1
  %8520 = zext i8 %8519 to i16
  %8521 = ptrtoint i8* %8518 to i64
  br label %8528

8522:                                             ; preds = %8492
  %8523 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %8524 = load i16*, i16** %8523, align 8
  %8525 = load i16, i16* %8524, align 2
  %8526 = ptrtoint i16* %8524 to i64
  %8527 = bitcast i16* %8524 to i8*
  br label %8528

8528:                                             ; preds = %8522, %8516
  %8529 = phi i8* [ %8518, %8516 ], [ %8527, %8522 ]
  %8530 = phi i64 [ %8521, %8516 ], [ %8526, %8522 ]
  %8531 = phi i16 [ %8520, %8516 ], [ %8525, %8522 ]
  %8532 = icmp eq i16 %8531, 10
  br i1 %8532, label %8533, label %8551

8533:                                             ; preds = %8528
  %8534 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %8535 = load i8, i8* %8534, align 8, !range !2
  %8536 = icmp eq i8 %8535, 0
  br i1 %8536, label %8551, label %8537, !prof !4

8537:                                             ; preds = %8533
  %8538 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %8539 = load i32, i32* %8538, align 8
  %8540 = add nsw i32 %8539, 1
  store i32 %8540, i32* %8538, align 8
  %8541 = load i32, i32* %8494, align 8
  %8542 = load i64, i64* %8499, align 8
  %8543 = sub i64 %8530, %8542
  %8544 = trunc i64 %8543 to i32
  %8545 = xor i8 %8514, 1
  %8546 = zext i8 %8545 to i32
  %8547 = ashr i32 %8544, %8546
  %8548 = add i32 %8541, 1
  %8549 = add i32 %8548, %8547
  %8550 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %8549, i32* %8550, align 4
  br label %8551

8551:                                             ; preds = %8537, %8533, %8528
  %8552 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %8553 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %8554 = load i8*, i8** %8553, align 8
  %8555 = icmp ult i8* %8529, %8554
  br i1 %8555, label %8556, label %8565, !prof !3

8556:                                             ; preds = %8551
  br i1 %8515, label %8561, label %8557

8557:                                             ; preds = %8556
  %8558 = getelementptr inbounds i8, i8* %8529, i64 1
  store i8* %8558, i8** %8552, align 8
  %8559 = load i8, i8* %8558, align 1
  %8560 = zext i8 %8559 to i16
  br label %8567

8561:                                             ; preds = %8556
  %8562 = getelementptr inbounds i8, i8* %8529, i64 2
  %8563 = bitcast i8* %8562 to i16*
  store i8* %8562, i8** %8552, align 8
  %8564 = load i16, i16* %8563, align 2
  br label %8567

8565:                                             ; preds = %8551
  %8566 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %8567

8567:                                             ; preds = %8565, %8561, %8557
  %8568 = phi i16 [ %8566, %8565 ], [ %8560, %8557 ], [ %8564, %8561 ]
  store i16 %8568, i16* %14, align 2
  %8569 = icmp ugt i16 %8568, 15
  br i1 %8569, label %8570, label %8572

8570:                                             ; preds = %8567
  %8571 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %8571, align 8
  br label %7035

8572:                                             ; preds = %8567
  %8573 = load i8, i8* %44, align 1, !range !2
  %8574 = icmp eq i8 %8573, 0
  br i1 %8574, label %8575, label %8577

8575:                                             ; preds = %8572
  %8576 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %8576, label %7035, label %8577

8577:                                             ; preds = %8572, %8575
  %8578 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %8579 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8578, i64 0, i32 0
  %8580 = load i32, i32* %8579, align 8
  %8581 = icmp eq i32 %8580, 5
  br label %14210

8582:                                             ; preds = %8490
  %8583 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 5
  store i16 62, i16* %8583, align 8
  store i32 40, i32* %74, align 8
  %8584 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %8585 = load i8*, i8** %8584, align 8
  %8586 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %8587 = load i8*, i8** %8586, align 8
  %8588 = icmp ult i8* %8585, %8587
  br i1 %8588, label %8589, label %8600, !prof !3

8589:                                             ; preds = %8582
  %8590 = load i8, i8* %49, align 1, !range !2
  %8591 = icmp eq i8 %8590, 0
  br i1 %8591, label %8596, label %8592

8592:                                             ; preds = %8589
  %8593 = getelementptr inbounds i8, i8* %8585, i64 1
  store i8* %8593, i8** %8584, align 8
  %8594 = load i8, i8* %8593, align 1
  %8595 = zext i8 %8594 to i16
  br label %8602

8596:                                             ; preds = %8589
  %8597 = getelementptr inbounds i8, i8* %8585, i64 2
  %8598 = bitcast i8* %8597 to i16*
  store i8* %8597, i8** %8584, align 8
  %8599 = load i16, i16* %8598, align 2
  br label %8602

8600:                                             ; preds = %8582
  %8601 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %8602

8602:                                             ; preds = %8600, %8596, %8592
  %8603 = phi i16 [ %8601, %8600 ], [ %8595, %8592 ], [ %8599, %8596 ]
  store i16 %8603, i16* %14, align 2
  %8604 = icmp ugt i16 %8603, 15
  br i1 %8604, label %8605, label %8607

8605:                                             ; preds = %8602
  %8606 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %8606, align 8
  br label %8710

8607:                                             ; preds = %8602
  %8608 = load i8, i8* %44, align 1, !range !2
  %8609 = icmp eq i8 %8608, 0
  br i1 %8609, label %8610, label %8612

8610:                                             ; preds = %8607
  %8611 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %8611, label %8710, label %8612

8612:                                             ; preds = %8607, %8610
  %8613 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %8614 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8613, i64 0, i32 0
  %8615 = load i32, i32* %8614, align 8
  %8616 = icmp eq i32 %8615, 5
  br label %14210

8617:                                             ; preds = %8490
  %8618 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %8619 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %8620 = load i32, i32* %8619, align 8
  %8621 = bitcast %"class.blink::SegmentedString"* %1 to i64*
  %8622 = load i64, i64* %8621, align 8
  %8623 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %8624 = bitcast i8** %8623 to i64*
  %8625 = load i64, i64* %8624, align 8
  %8626 = sub i64 %8622, %8625
  %8627 = trunc i64 %8626 to i32
  %8628 = load i8, i8* %49, align 1, !range !2
  %8629 = xor i8 %8628, 1
  %8630 = zext i8 %8629 to i32
  %8631 = ashr i32 %8627, %8630
  %8632 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8618, i64 0, i32 2
  %8633 = load i32, i32* %8632, align 4
  %8634 = sub i32 %8620, %8633
  %8635 = add i32 %8634, %8631
  %8636 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8618, i64 0, i32 7
  %8637 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %8636, align 8
  %8638 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8637, i64 0, i32 3, i32 1
  store i32 %8635, i32* %8638, align 4
  %8639 = call zeroext i1 @_ZN5blink13HTMLTokenizer15EmitAndResumeInERNS_15SegmentedStringENS0_5StateE(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i32 0)
  br label %14210

8640:                                             ; preds = %8490
  %8641 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %8642 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %8643 = load i32, i32* %8642, align 8
  %8644 = bitcast %"class.blink::SegmentedString"* %1 to i64*
  %8645 = load i64, i64* %8644, align 8
  %8646 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %8647 = bitcast i8** %8646 to i64*
  %8648 = load i64, i64* %8647, align 8
  %8649 = sub i64 %8645, %8648
  %8650 = trunc i64 %8649 to i32
  %8651 = load i8, i8* %49, align 1, !range !2
  %8652 = xor i8 %8651, 1
  %8653 = zext i8 %8652 to i32
  %8654 = ashr i32 %8650, %8653
  %8655 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8641, i64 0, i32 2
  %8656 = load i32, i32* %8655, align 4
  %8657 = sub i32 %8643, %8656
  %8658 = add i32 %8657, %8654
  %8659 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8641, i64 0, i32 7
  %8660 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %8659, align 8
  %8661 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8660, i64 0, i32 3, i32 1
  store i32 %8658, i32* %8661, align 4
  store i32 0, i32* %74, align 8
  br label %76

8662:                                             ; preds = %8490
  %8663 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %8664 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8663, i64 0, i32 7
  %8665 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %8664, align 8
  %8666 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8665, i64 0, i32 1, i32 1
  %8667 = load i16*, i16** %8666, align 8
  %8668 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8665, i64 0, i32 1, i32 2
  %8669 = load i16*, i16** %8668, align 8
  %8670 = icmp eq i16* %8667, %8669
  br i1 %8670, label %8671, label %8674, !prof !4

8671:                                             ; preds = %8662
  %8672 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8665, i64 0, i32 1
  %8673 = call i16* @_ZN13LiteralBufferIDsLj32EE4GrowEv(%class.LiteralBuffer.0* %8672) #11
  store i16* %8673, i16** %8666, align 8
  br label %8674

8674:                                             ; preds = %8662, %8671
  %8675 = phi i16* [ %8673, %8671 ], [ %8667, %8662 ]
  %8676 = getelementptr inbounds i16, i16* %8675, i64 1
  store i16* %8676, i16** %8666, align 8
  store i16 %8491, i16* %8675, align 2
  %8677 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %8678 = load i8*, i8** %8677, align 8
  %8679 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %8680 = load i8*, i8** %8679, align 8
  %8681 = icmp ult i8* %8678, %8680
  br i1 %8681, label %8682, label %8693, !prof !3

8682:                                             ; preds = %8674
  %8683 = load i8, i8* %49, align 1, !range !2
  %8684 = icmp eq i8 %8683, 0
  br i1 %8684, label %8689, label %8685

8685:                                             ; preds = %8682
  %8686 = getelementptr inbounds i8, i8* %8678, i64 1
  store i8* %8686, i8** %8677, align 8
  %8687 = load i8, i8* %8686, align 1
  %8688 = zext i8 %8687 to i16
  br label %8695

8689:                                             ; preds = %8682
  %8690 = getelementptr inbounds i8, i8* %8678, i64 2
  %8691 = bitcast i8* %8690 to i16*
  store i8* %8690, i8** %8677, align 8
  %8692 = load i16, i16* %8691, align 2
  br label %8695

8693:                                             ; preds = %8674
  %8694 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %8695

8695:                                             ; preds = %8693, %8689, %8685
  %8696 = phi i16 [ %8694, %8693 ], [ %8688, %8685 ], [ %8692, %8689 ]
  store i16 %8696, i16* %14, align 2
  %8697 = icmp ugt i16 %8696, 15
  br i1 %8697, label %8698, label %8700

8698:                                             ; preds = %8695
  %8699 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %8699, align 8
  br label %8488

8700:                                             ; preds = %8695
  %8701 = load i8, i8* %44, align 1, !range !2
  %8702 = icmp eq i8 %8701, 0
  br i1 %8702, label %8703, label %8705

8703:                                             ; preds = %8700
  %8704 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %8704, label %8488, label %8705

8705:                                             ; preds = %8700, %8703
  %8706 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %8707 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8706, i64 0, i32 0
  %8708 = load i32, i32* %8707, align 8
  %8709 = icmp eq i32 %8708, 5
  br label %14210

8710:                                             ; preds = %8605, %8368, %8166, %73, %8610, %8373, %8171
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #11
  store i8 0, i8* %15, align 1
  %8711 = bitcast %"class.blink::DecodedHTMLEntity"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %8711) #11
  %8712 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %16, i64 0, i32 0
  %8713 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %16, i64 0, i32 1
  %8714 = bitcast [4 x i16]* %8713 to i64*
  store i64 -6148914691236517206, i64* %8714, align 4
  store i32 0, i32* %8712, align 4
  %8715 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 5
  %8716 = load i16, i16* %8715, align 8
  %8717 = call zeroext i1 @_ZN5blink17ConsumeHTMLEntityERNS_15SegmentedStringERNS_17DecodedHTMLEntityERbDs(%"class.blink::SegmentedString"* dereferenceable(88) %1, %"class.blink::DecodedHTMLEntity"* nonnull dereferenceable(12) %16, i8* nonnull dereferenceable(1) %15, i16 zeroext %8716) #11
  %8718 = load i8, i8* %15, align 1, !range !2
  %8719 = icmp eq i8 %8718, 0
  br i1 %8719, label %8720, label %8829

8720:                                             ; preds = %8710
  br i1 %8717, label %8721, label %8724

8721:                                             ; preds = %8720
  %8722 = load i32, i32* %8712, align 4
  %8723 = icmp eq i32 %8722, 0
  br i1 %8723, label %8761, label %8739

8724:                                             ; preds = %8720
  %8725 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %8726 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8725, i64 0, i32 7
  %8727 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %8726, align 8
  %8728 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8727, i64 0, i32 1, i32 1
  %8729 = load i16*, i16** %8728, align 8
  %8730 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8727, i64 0, i32 1, i32 2
  %8731 = load i16*, i16** %8730, align 8
  %8732 = icmp eq i16* %8729, %8731
  br i1 %8732, label %8733, label %8736, !prof !4

8733:                                             ; preds = %8724
  %8734 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8727, i64 0, i32 1
  %8735 = call i16* @_ZN13LiteralBufferIDsLj32EE4GrowEv(%class.LiteralBuffer.0* %8734) #11
  store i16* %8735, i16** %8728, align 8
  br label %8736

8736:                                             ; preds = %8724, %8733
  %8737 = phi i16* [ %8735, %8733 ], [ %8729, %8724 ]
  %8738 = getelementptr inbounds i16, i16* %8737, i64 1
  store i16* %8738, i16** %8728, align 8
  store i16 38, i16* %8737, align 2
  br label %8761

8739:                                             ; preds = %8721, %8754
  %8740 = phi i64 [ %8757, %8754 ], [ 0, %8721 ]
  %8741 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %8742 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %16, i64 0, i32 1, i64 %8740
  %8743 = load i16, i16* %8742, align 2
  %8744 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8741, i64 0, i32 7
  %8745 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %8744, align 8
  %8746 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8745, i64 0, i32 1, i32 1
  %8747 = load i16*, i16** %8746, align 8
  %8748 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8745, i64 0, i32 1, i32 2
  %8749 = load i16*, i16** %8748, align 8
  %8750 = icmp eq i16* %8747, %8749
  br i1 %8750, label %8751, label %8754, !prof !4

8751:                                             ; preds = %8739
  %8752 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8745, i64 0, i32 1
  %8753 = call i16* @_ZN13LiteralBufferIDsLj32EE4GrowEv(%class.LiteralBuffer.0* %8752) #11
  store i16* %8753, i16** %8746, align 8
  br label %8754

8754:                                             ; preds = %8739, %8751
  %8755 = phi i16* [ %8753, %8751 ], [ %8747, %8739 ]
  %8756 = getelementptr inbounds i16, i16* %8755, i64 1
  store i16* %8756, i16** %8746, align 8
  store i16 %8743, i16* %8755, align 2
  %8757 = add nuw nsw i64 %8740, 1
  %8758 = load i32, i32* %8712, align 4
  %8759 = zext i32 %8758 to i64
  %8760 = icmp ult i64 %8757, %8759
  br i1 %8760, label %8739, label %8761

8761:                                             ; preds = %8754, %8721, %8736
  %8762 = load i16, i16* %8715, align 8
  switch i16 %8762, label %8837 [
    i16 34, label %8763
    i16 39, label %8785
    i16 62, label %8807
  ]

8763:                                             ; preds = %8761
  store i32 37, i32* %74, align 8
  %8764 = load i8, i8* %44, align 1, !range !2
  %8765 = icmp eq i8 %8764, 0
  br i1 %8765, label %8766, label %8829

8766:                                             ; preds = %8763
  %8767 = load i8, i8* %49, align 1, !range !2
  %8768 = icmp eq i8 %8767, 0
  br i1 %8768, label %8774, label %8769

8769:                                             ; preds = %8766
  %8770 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %8771 = load i8*, i8** %8770, align 8
  %8772 = load i8, i8* %8771, align 1
  %8773 = zext i8 %8772 to i16
  br label %8778

8774:                                             ; preds = %8766
  %8775 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %8776 = load i16*, i16** %8775, align 8
  %8777 = load i16, i16* %8776, align 2
  br label %8778

8778:                                             ; preds = %8774, %8769
  %8779 = phi i16 [ %8773, %8769 ], [ %8777, %8774 ]
  store i16 %8779, i16* %14, align 2
  %8780 = icmp ugt i16 %8779, 15
  br i1 %8780, label %8781, label %8783

8781:                                             ; preds = %8778
  %8782 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %8782, align 8
  br label %8834

8783:                                             ; preds = %8778
  %8784 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %8784, label %8834, label %8829

8785:                                             ; preds = %8761
  store i32 38, i32* %74, align 8
  %8786 = load i8, i8* %44, align 1, !range !2
  %8787 = icmp eq i8 %8786, 0
  br i1 %8787, label %8788, label %8829

8788:                                             ; preds = %8785
  %8789 = load i8, i8* %49, align 1, !range !2
  %8790 = icmp eq i8 %8789, 0
  br i1 %8790, label %8796, label %8791

8791:                                             ; preds = %8788
  %8792 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %8793 = load i8*, i8** %8792, align 8
  %8794 = load i8, i8* %8793, align 1
  %8795 = zext i8 %8794 to i16
  br label %8800

8796:                                             ; preds = %8788
  %8797 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %8798 = load i16*, i16** %8797, align 8
  %8799 = load i16, i16* %8798, align 2
  br label %8800

8800:                                             ; preds = %8796, %8791
  %8801 = phi i16 [ %8795, %8791 ], [ %8799, %8796 ]
  store i16 %8801, i16* %14, align 2
  %8802 = icmp ugt i16 %8801, 15
  br i1 %8802, label %8803, label %8805

8803:                                             ; preds = %8800
  %8804 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %8804, align 8
  br label %8835

8805:                                             ; preds = %8800
  %8806 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %8806, label %8835, label %8829

8807:                                             ; preds = %8761
  store i32 39, i32* %74, align 8
  %8808 = load i8, i8* %44, align 1, !range !2
  %8809 = icmp eq i8 %8808, 0
  br i1 %8809, label %8810, label %8829

8810:                                             ; preds = %8807
  %8811 = load i8, i8* %49, align 1, !range !2
  %8812 = icmp eq i8 %8811, 0
  br i1 %8812, label %8818, label %8813

8813:                                             ; preds = %8810
  %8814 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %8815 = load i8*, i8** %8814, align 8
  %8816 = load i8, i8* %8815, align 1
  %8817 = zext i8 %8816 to i16
  br label %8822

8818:                                             ; preds = %8810
  %8819 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %8820 = load i16*, i16** %8819, align 8
  %8821 = load i16, i16* %8820, align 2
  br label %8822

8822:                                             ; preds = %8818, %8813
  %8823 = phi i16 [ %8817, %8813 ], [ %8821, %8818 ]
  store i16 %8823, i16* %14, align 2
  %8824 = icmp ugt i16 %8823, 15
  br i1 %8824, label %8825, label %8827

8825:                                             ; preds = %8822
  %8826 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %8826, align 8
  br label %8836

8827:                                             ; preds = %8822
  %8828 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %8828, label %8836, label %8829

8829:                                             ; preds = %8827, %8807, %8805, %8785, %8783, %8763, %8710
  %8830 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %8831 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8830, i64 0, i32 0
  %8832 = load i32, i32* %8831, align 8
  %8833 = icmp eq i32 %8832, 5
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %8711) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #11
  br label %14210

8834:                                             ; preds = %8783, %8781
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %8711) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #11
  br label %8084

8835:                                             ; preds = %8805, %8803
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %8711) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #11
  br label %8286

8836:                                             ; preds = %8827, %8825
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %8711) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #11
  br label %8488

8837:                                             ; preds = %8761
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %8711) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #11
  br label %14210

8838:                                             ; preds = %8136, %8338, %73
  %8839 = load i16, i16* %14, align 2
  br label %8840

8840:                                             ; preds = %8838, %8333, %8131
  %8841 = phi i16 [ %8839, %8838 ], [ %8331, %8333 ], [ %8129, %8131 ]
  switch i16 %8841, label %8951 [
    i16 32, label %8842
    i16 10, label %8842
    i16 9, label %8842
    i16 12, label %8842
    i16 47, label %8914
    i16 62, label %8948
    i16 0, label %8950
  ]

8842:                                             ; preds = %8840, %8840, %8840, %8840
  store i32 33, i32* %74, align 8
  %8843 = load i8, i8* %49, align 1, !range !2
  %8844 = icmp eq i8 %8843, 0
  br i1 %8844, label %8851, label %8845

8845:                                             ; preds = %8842
  %8846 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %8847 = load i8*, i8** %8846, align 8
  %8848 = load i8, i8* %8847, align 1
  %8849 = zext i8 %8848 to i16
  %8850 = ptrtoint i8* %8847 to i64
  br label %8857

8851:                                             ; preds = %8842
  %8852 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %8853 = load i16*, i16** %8852, align 8
  %8854 = load i16, i16* %8853, align 2
  %8855 = ptrtoint i16* %8853 to i64
  %8856 = bitcast i16* %8853 to i8*
  br label %8857

8857:                                             ; preds = %8851, %8845
  %8858 = phi i8* [ %8847, %8845 ], [ %8856, %8851 ]
  %8859 = phi i64 [ %8850, %8845 ], [ %8855, %8851 ]
  %8860 = phi i16 [ %8849, %8845 ], [ %8854, %8851 ]
  %8861 = icmp eq i16 %8860, 10
  br i1 %8861, label %8862, label %8883

8862:                                             ; preds = %8857
  %8863 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %8864 = load i8, i8* %8863, align 8, !range !2
  %8865 = icmp eq i8 %8864, 0
  br i1 %8865, label %8883, label %8866, !prof !4

8866:                                             ; preds = %8862
  %8867 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %8868 = load i32, i32* %8867, align 8
  %8869 = add nsw i32 %8868, 1
  store i32 %8869, i32* %8867, align 8
  %8870 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %8871 = load i32, i32* %8870, align 8
  %8872 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %8873 = bitcast i8** %8872 to i64*
  %8874 = load i64, i64* %8873, align 8
  %8875 = sub i64 %8859, %8874
  %8876 = trunc i64 %8875 to i32
  %8877 = xor i8 %8843, 1
  %8878 = zext i8 %8877 to i32
  %8879 = ashr i32 %8876, %8878
  %8880 = add i32 %8871, 1
  %8881 = add i32 %8880, %8879
  %8882 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %8881, i32* %8882, align 4
  br label %8883

8883:                                             ; preds = %8866, %8862, %8857
  %8884 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %8885 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %8886 = load i8*, i8** %8885, align 8
  %8887 = icmp ult i8* %8858, %8886
  br i1 %8887, label %8888, label %8897, !prof !3

8888:                                             ; preds = %8883
  br i1 %8844, label %8893, label %8889

8889:                                             ; preds = %8888
  %8890 = getelementptr inbounds i8, i8* %8858, i64 1
  store i8* %8890, i8** %8884, align 8
  %8891 = load i8, i8* %8890, align 1
  %8892 = zext i8 %8891 to i16
  br label %8899

8893:                                             ; preds = %8888
  %8894 = getelementptr inbounds i8, i8* %8858, i64 2
  %8895 = bitcast i8* %8894 to i16*
  store i8* %8894, i8** %8884, align 8
  %8896 = load i16, i16* %8895, align 2
  br label %8899

8897:                                             ; preds = %8883
  %8898 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %8899

8899:                                             ; preds = %8897, %8893, %8889
  %8900 = phi i16 [ %8898, %8897 ], [ %8892, %8889 ], [ %8896, %8893 ]
  store i16 %8900, i16* %14, align 2
  %8901 = icmp ugt i16 %8900, 15
  br i1 %8901, label %8902, label %8904

8902:                                             ; preds = %8899
  %8903 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %8903, align 8
  br label %7035

8904:                                             ; preds = %8899
  %8905 = load i8, i8* %44, align 1, !range !2
  %8906 = icmp eq i8 %8905, 0
  br i1 %8906, label %8907, label %8909

8907:                                             ; preds = %8904
  %8908 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %8908, label %7035, label %8909

8909:                                             ; preds = %8904, %8907
  %8910 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %8911 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8910, i64 0, i32 0
  %8912 = load i32, i32* %8911, align 8
  %8913 = icmp eq i32 %8912, 5
  br label %14210

8914:                                             ; preds = %8840
  store i32 42, i32* %74, align 8
  %8915 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %8916 = load i8*, i8** %8915, align 8
  %8917 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %8918 = load i8*, i8** %8917, align 8
  %8919 = icmp ult i8* %8916, %8918
  br i1 %8919, label %8920, label %8931, !prof !3

8920:                                             ; preds = %8914
  %8921 = load i8, i8* %49, align 1, !range !2
  %8922 = icmp eq i8 %8921, 0
  br i1 %8922, label %8927, label %8923

8923:                                             ; preds = %8920
  %8924 = getelementptr inbounds i8, i8* %8916, i64 1
  store i8* %8924, i8** %8915, align 8
  %8925 = load i8, i8* %8924, align 1
  %8926 = zext i8 %8925 to i16
  br label %8933

8927:                                             ; preds = %8920
  %8928 = getelementptr inbounds i8, i8* %8916, i64 2
  %8929 = bitcast i8* %8928 to i16*
  store i8* %8928, i8** %8915, align 8
  %8930 = load i16, i16* %8929, align 2
  br label %8933

8931:                                             ; preds = %8914
  %8932 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %8933

8933:                                             ; preds = %8931, %8927, %8923
  %8934 = phi i16 [ %8932, %8931 ], [ %8926, %8923 ], [ %8930, %8927 ]
  store i16 %8934, i16* %14, align 2
  %8935 = icmp ugt i16 %8934, 15
  br i1 %8935, label %8936, label %8938

8936:                                             ; preds = %8933
  %8937 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %8937, align 8
  br label %8954

8938:                                             ; preds = %8933
  %8939 = load i8, i8* %44, align 1, !range !2
  %8940 = icmp eq i8 %8939, 0
  br i1 %8940, label %8941, label %8943

8941:                                             ; preds = %8938
  %8942 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %8942, label %8952, label %8943

8943:                                             ; preds = %8938, %8941
  %8944 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %8945 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8944, i64 0, i32 0
  %8946 = load i32, i32* %8945, align 8
  %8947 = icmp eq i32 %8946, 5
  br label %14210

8948:                                             ; preds = %8840
  %8949 = call zeroext i1 @_ZN5blink13HTMLTokenizer15EmitAndResumeInERNS_15SegmentedStringENS0_5StateE(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i32 0)
  br label %14210

8950:                                             ; preds = %8840
  store i32 0, i32* %74, align 8
  br label %76

8951:                                             ; preds = %8840
  store i32 33, i32* %74, align 8
  br label %7035

8952:                                             ; preds = %2145, %2664, %3364, %4105, %5563, %7084, %7417, %7632, %8941, %73
  %8953 = load i16, i16* %14, align 2
  br label %8954

8954:                                             ; preds = %8952, %8936, %7627, %7413, %7079, %5561, %4103, %3362, %2662, %2141
  %8955 = phi i16 [ %8953, %8952 ], [ %8934, %8936 ], [ %7625, %7627 ], [ %7411, %7413 ], [ %7077, %7079 ], [ %5559, %5561 ], [ %4101, %4103 ], [ %3360, %3362 ], [ %2660, %2662 ], [ %2139, %2141 ]
  switch i16 %8955, label %8961 [
    i16 62, label %8956
    i16 0, label %8960
  ]

8956:                                             ; preds = %8954
  %8957 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %8958 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8957, i64 0, i32 5
  store i8 1, i8* %8958, align 2
  %8959 = call zeroext i1 @_ZN5blink13HTMLTokenizer15EmitAndResumeInERNS_15SegmentedStringENS0_5StateE(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i32 0)
  br label %14210

8960:                                             ; preds = %8954
  store i32 0, i32* %74, align 8
  br label %76

8961:                                             ; preds = %8954
  store i32 33, i32* %74, align 8
  br label %7035

8962:                                             ; preds = %1985, %1917, %9115, %9117, %9184, %9241, %9237
  store i32 43, i32* %74, align 8
  br label %8963

8963:                                             ; preds = %8962, %73
  %8964 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %8965 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8964, i64 0, i32 0
  store i32 4, i32* %8965, align 8
  store i32 44, i32* %74, align 8
  br label %8966

8966:                                             ; preds = %73, %8963
  %8967 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %8968 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %8969 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %8970 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %8971 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %8972 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %8973 = bitcast i8** %8972 to i64*
  %8974 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  %8975 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %8976 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  br label %8977

8977:                                             ; preds = %8966, %9106
  %8978 = load i16, i16* %14, align 2
  br label %8979

8979:                                             ; preds = %9102, %8977
  %8980 = phi i16 [ %8978, %8977 ], [ %9100, %9102 ]
  switch i16 %8980, label %9037 [
    i16 62, label %8981
    i16 0, label %8983
  ]

8981:                                             ; preds = %8979
  %8982 = call zeroext i1 @_ZN5blink13HTMLTokenizer15EmitAndResumeInERNS_15SegmentedStringENS0_5StateE(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i32 0)
  br label %14210

8983:                                             ; preds = %8979
  %8984 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %8985 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8984, i64 0, i32 0
  %8986 = load i32, i32* %8985, align 8
  %8987 = icmp eq i32 %8986, 2
  br i1 %8987, label %8988, label %9036

8988:                                             ; preds = %8983
  %8989 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8984, i64 0, i32 3
  %8990 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %8991 = getelementptr inbounds %class.LiteralBuffer.0, %class.LiteralBuffer.0* %8990, i64 0, i32 0
  %8992 = load i16*, i16** %8991, align 8
  %8993 = getelementptr inbounds %class.LiteralBuffer, %class.LiteralBuffer* %8989, i64 0, i32 0
  %8994 = load i16*, i16** %8993, align 8
  %8995 = icmp eq i16* %8992, %8994
  %8996 = bitcast i16* %8992 to i8*
  br i1 %8995, label %9036, label %8997

8997:                                             ; preds = %8988
  %8998 = ptrtoint i16* %8992 to i64
  %8999 = ptrtoint i16* %8994 to i64
  %9000 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %8984, i64 0, i32 3, i32 1
  %9001 = bitcast i16** %9000 to i64*
  %9002 = load i64, i64* %9001, align 8
  %9003 = sub i64 %9002, %8999
  %9004 = ashr exact i64 %9003, 1
  %9005 = trunc i64 %9004 to i32
  %9006 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 2
  %9007 = bitcast i16** %9006 to i64*
  %9008 = load i64, i64* %9007, align 8
  %9009 = sub i64 %9008, %8998
  %9010 = ashr exact i64 %9009, 1
  %9011 = and i64 %9004, 4294967295
  %9012 = icmp ult i64 %9010, %9011
  br i1 %9012, label %9013, label %9023

9013:                                             ; preds = %8997
  %9014 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 3, i64 0
  %9015 = icmp eq i16* %8992, %9014
  br i1 %9015, label %9017, label %9016

9016:                                             ; preds = %9013
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %8996) #11
  br label %9017

9017:                                             ; preds = %9016, %9013
  %9018 = bitcast %class.LiteralBuffer.0* %8990 to i8**
  %9019 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %9011) #11
  %9020 = call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %9019, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)) #11
  %9021 = bitcast i8* %9020 to i16*
  store i8* %9020, i8** %9018, align 8
  %9022 = getelementptr inbounds i16, i16* %9021, i64 %9011
  store i16* %9022, i16** %9006, align 8
  br label %9023

9023:                                             ; preds = %9017, %8997
  %9024 = phi i16* [ %9021, %9017 ], [ %8992, %8997 ]
  %9025 = phi i8* [ %9020, %9017 ], [ %8996, %8997 ]
  %9026 = icmp eq i32 %9005, 0
  br i1 %9026, label %9032, label %9027

9027:                                             ; preds = %9023
  %9028 = bitcast %class.LiteralBuffer* %8989 to i8**
  %9029 = load i8*, i8** %9028, align 8
  %9030 = and i64 %9003, 8589934590
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %9025, i8* align 2 %9029, i64 %9030, i1 false) #11
  %9031 = load i16*, i16** %8991, align 8
  br label %9032

9032:                                             ; preds = %9027, %9023
  %9033 = phi i16* [ %9024, %9023 ], [ %9031, %9027 ]
  %9034 = getelementptr inbounds i16, i16* %9033, i64 %9011
  %9035 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  store i16* %9034, i16** %9035, align 8
  br label %9036

9036:                                             ; preds = %8983, %8988, %9032
  store i32 0, i32* %74, align 8
  br label %14210

9037:                                             ; preds = %8979
  %9038 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %9039 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9038, i64 0, i32 3, i32 1
  %9040 = load i16*, i16** %9039, align 8
  %9041 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9038, i64 0, i32 3, i32 2
  %9042 = load i16*, i16** %9041, align 8
  %9043 = icmp eq i16* %9040, %9042
  br i1 %9043, label %9044, label %9047, !prof !4

9044:                                             ; preds = %9037
  %9045 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9038, i64 0, i32 3
  %9046 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %9045) #11
  store i16* %9046, i16** %9039, align 8
  br label %9047

9047:                                             ; preds = %9037, %9044
  %9048 = phi i16* [ %9046, %9044 ], [ %9040, %9037 ]
  %9049 = getelementptr inbounds i16, i16* %9048, i64 1
  store i16* %9049, i16** %9039, align 8
  store i16 %8980, i16* %9048, align 2
  %9050 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9038, i64 0, i32 4
  %9051 = load i16, i16* %9050, align 8
  %9052 = or i16 %9051, %8980
  store i16 %9052, i16* %9050, align 8
  %9053 = load i8, i8* %49, align 1, !range !2
  %9054 = icmp eq i8 %9053, 0
  br i1 %9054, label %9060, label %9055

9055:                                             ; preds = %9047
  %9056 = load i8*, i8** %8967, align 8
  %9057 = load i8, i8* %9056, align 1
  %9058 = zext i8 %9057 to i16
  %9059 = ptrtoint i8* %9056 to i64
  br label %9065

9060:                                             ; preds = %9047
  %9061 = load i16*, i16** %8968, align 8
  %9062 = load i16, i16* %9061, align 2
  %9063 = ptrtoint i16* %9061 to i64
  %9064 = bitcast i16* %9061 to i8*
  br label %9065

9065:                                             ; preds = %9060, %9055
  %9066 = phi i8* [ %9056, %9055 ], [ %9064, %9060 ]
  %9067 = phi i64 [ %9059, %9055 ], [ %9063, %9060 ]
  %9068 = phi i16 [ %9058, %9055 ], [ %9062, %9060 ]
  %9069 = icmp eq i16 %9068, 10
  br i1 %9069, label %9070, label %9085

9070:                                             ; preds = %9065
  %9071 = load i8, i8* %8969, align 8, !range !2
  %9072 = icmp eq i8 %9071, 0
  br i1 %9072, label %9085, label %9073, !prof !4

9073:                                             ; preds = %9070
  %9074 = load i32, i32* %8970, align 8
  %9075 = add nsw i32 %9074, 1
  store i32 %9075, i32* %8970, align 8
  %9076 = load i32, i32* %8971, align 8
  %9077 = load i64, i64* %8973, align 8
  %9078 = sub i64 %9067, %9077
  %9079 = trunc i64 %9078 to i32
  %9080 = xor i8 %9053, 1
  %9081 = zext i8 %9080 to i32
  %9082 = ashr i32 %9079, %9081
  %9083 = add i32 %9076, 1
  %9084 = add i32 %9083, %9082
  store i32 %9084, i32* %8974, align 4
  br label %9085

9085:                                             ; preds = %9073, %9070, %9065
  %9086 = load i8*, i8** %8975, align 8
  %9087 = icmp ult i8* %9066, %9086
  br i1 %9087, label %9088, label %9097, !prof !3

9088:                                             ; preds = %9085
  br i1 %9054, label %9093, label %9089

9089:                                             ; preds = %9088
  %9090 = getelementptr inbounds i8, i8* %9066, i64 1
  store i8* %9090, i8** %8967, align 8
  %9091 = load i8, i8* %9090, align 1
  %9092 = zext i8 %9091 to i16
  br label %9099

9093:                                             ; preds = %9088
  %9094 = getelementptr inbounds i8, i8* %9066, i64 2
  %9095 = bitcast i8* %9094 to i16*
  store i8* %9094, i8** %8967, align 8
  %9096 = load i16, i16* %9095, align 2
  br label %9099

9097:                                             ; preds = %9085
  %9098 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %9099

9099:                                             ; preds = %9097, %9093, %9089
  %9100 = phi i16 [ %9098, %9097 ], [ %9092, %9089 ], [ %9096, %9093 ]
  store i16 %9100, i16* %14, align 2
  %9101 = icmp ugt i16 %9100, 15
  br i1 %9101, label %9102, label %9103

9102:                                             ; preds = %9099
  store i8 0, i8* %8976, align 8
  br label %8979

9103:                                             ; preds = %9099
  %9104 = load i8, i8* %44, align 1, !range !2
  %9105 = icmp eq i8 %9104, 0
  br i1 %9105, label %9106, label %9108

9106:                                             ; preds = %9103
  %9107 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %9107, label %8977, label %9108

9108:                                             ; preds = %9103, %9106
  %9109 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %9110 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9109, i64 0, i32 0
  %9111 = load i32, i32* %9110, align 8
  %9112 = icmp eq i32 %9111, 5
  br label %14210

9113:                                             ; preds = %1837, %73
  %9114 = load i16, i16* %14, align 2
  br label %9115

9115:                                             ; preds = %9113, %1832
  %9116 = phi i16 [ %9114, %9113 ], [ %1830, %1832 ]
  switch i16 %9116, label %8962 [
    i16 45, label %9117
    i16 68, label %9184
    i16 100, label %9184
    i16 91, label %9237
  ]

9117:                                             ; preds = %9115
  %9118 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink20html_tokenizer_names9kDashDashE, align 8
  %9119 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9118, i64 0, i32 0
  %9120 = call i32 @_ZN5blink15SegmentedString15LookAheadInlineERKN3WTF6StringENS1_19TextCaseSensitivityE(%"class.blink::SegmentedString"* %1, %"class.WTF::String"* dereferenceable(8) %9119, i32 0) #11
  switch i32 %9120, label %8962 [
    i32 1, label %9121
    i32 2, label %9179
  ]

9121:                                             ; preds = %9117
  %9122 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %9123 = load i8*, i8** %9122, align 8
  %9124 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %9125 = load i8*, i8** %9124, align 8
  %9126 = icmp ult i8* %9123, %9125
  br i1 %9126, label %9127, label %9134, !prof !3

9127:                                             ; preds = %9121
  %9128 = load i8, i8* %49, align 1, !range !2
  %9129 = icmp eq i8 %9128, 0
  br i1 %9129, label %9132, label %9130

9130:                                             ; preds = %9127
  %9131 = getelementptr inbounds i8, i8* %9123, i64 1
  store i8* %9131, i8** %9122, align 8
  br label %9138

9132:                                             ; preds = %9127
  %9133 = getelementptr inbounds i8, i8* %9123, i64 2
  store i8* %9133, i8** %9122, align 8
  br label %9138

9134:                                             ; preds = %9121
  %9135 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  %9136 = load i8*, i8** %9122, align 8
  %9137 = load i8*, i8** %9124, align 8
  br label %9138

9138:                                             ; preds = %9130, %9132, %9134
  %9139 = phi i8* [ %9125, %9130 ], [ %9125, %9132 ], [ %9137, %9134 ]
  %9140 = phi i8* [ %9131, %9130 ], [ %9133, %9132 ], [ %9136, %9134 ]
  %9141 = icmp ult i8* %9140, %9139
  br i1 %9141, label %9142, label %9149, !prof !3

9142:                                             ; preds = %9138
  %9143 = load i8, i8* %49, align 1, !range !2
  %9144 = icmp eq i8 %9143, 0
  br i1 %9144, label %9147, label %9145

9145:                                             ; preds = %9142
  %9146 = getelementptr inbounds i8, i8* %9140, i64 1
  store i8* %9146, i8** %9122, align 8
  br label %9151

9147:                                             ; preds = %9142
  %9148 = getelementptr inbounds i8, i8* %9140, i64 2
  store i8* %9148, i8** %9122, align 8
  br label %9151

9149:                                             ; preds = %9138
  %9150 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %9151

9151:                                             ; preds = %9145, %9147, %9149
  %9152 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %9153 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9152, i64 0, i32 0
  store i32 4, i32* %9153, align 8
  store i32 46, i32* %74, align 8
  %9154 = load i8, i8* %44, align 1, !range !2
  %9155 = icmp eq i8 %9154, 0
  br i1 %9155, label %9156, label %9174

9156:                                             ; preds = %9151
  %9157 = load i8, i8* %49, align 1, !range !2
  %9158 = icmp eq i8 %9157, 0
  br i1 %9158, label %9163, label %9159

9159:                                             ; preds = %9156
  %9160 = load i8*, i8** %9122, align 8
  %9161 = load i8, i8* %9160, align 1
  %9162 = zext i8 %9161 to i16
  br label %9167

9163:                                             ; preds = %9156
  %9164 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %9165 = load i16*, i16** %9164, align 8
  %9166 = load i16, i16* %9165, align 2
  br label %9167

9167:                                             ; preds = %9163, %9159
  %9168 = phi i16 [ %9162, %9159 ], [ %9166, %9163 ]
  store i16 %9168, i16* %14, align 2
  %9169 = icmp ugt i16 %9168, 15
  br i1 %9169, label %9170, label %9172

9170:                                             ; preds = %9167
  %9171 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %9171, align 8
  br label %9307

9172:                                             ; preds = %9167
  %9173 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %9173, label %9305, label %9174

9174:                                             ; preds = %9151, %9172
  %9175 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %9176 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9175, i64 0, i32 0
  %9177 = load i32, i32* %9176, align 8
  %9178 = icmp eq i32 %9177, 5
  br label %14210

9179:                                             ; preds = %9117
  %9180 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %9181 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9180, i64 0, i32 0
  %9182 = load i32, i32* %9181, align 8
  %9183 = icmp eq i32 %9182, 5
  br label %14210

9184:                                             ; preds = %9115, %9115
  %9185 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink20html_tokenizer_names8kDoctypeE, align 8
  %9186 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9185, i64 0, i32 0
  %9187 = call i32 @_ZN5blink15SegmentedString15LookAheadInlineERKN3WTF6StringENS1_19TextCaseSensitivityE(%"class.blink::SegmentedString"* %1, %"class.WTF::String"* dereferenceable(8) %9186, i32 1) #11
  switch i32 %9187, label %8962 [
    i32 1, label %9188
    i32 2, label %9232
  ]

9188:                                             ; preds = %9184
  %9189 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %9190 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %9191 = load i8*, i8** %9189, align 8
  %9192 = load i8*, i8** %9190, align 8
  %9193 = icmp ult i8* %9191, %9192
  br i1 %9193, label %9194, label %9201, !prof !3

9194:                                             ; preds = %9188
  %9195 = load i8, i8* %49, align 1, !range !2
  %9196 = icmp eq i8 %9195, 0
  br i1 %9196, label %9199, label %9197

9197:                                             ; preds = %9194
  %9198 = getelementptr inbounds i8, i8* %9191, i64 1
  store i8* %9198, i8** %9189, align 8
  br label %9205

9199:                                             ; preds = %9194
  %9200 = getelementptr inbounds i8, i8* %9191, i64 2
  store i8* %9200, i8** %9189, align 8
  br label %9205

9201:                                             ; preds = %9188
  %9202 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  %9203 = load i8*, i8** %9189, align 8
  %9204 = load i8*, i8** %9190, align 8
  br label %9205

9205:                                             ; preds = %9201, %9199, %9197
  %9206 = phi i8* [ %9204, %9201 ], [ %9192, %9199 ], [ %9192, %9197 ]
  %9207 = phi i8* [ %9203, %9201 ], [ %9200, %9199 ], [ %9198, %9197 ]
  %9208 = icmp ult i8* %9207, %9206
  br i1 %9208, label %14362, label %14358, !prof !3

9209:                                             ; preds = %14442
  %9210 = load i8, i8* %49, align 1, !range !2
  %9211 = icmp eq i8 %9210, 0
  br i1 %9211, label %9216, label %9212

9212:                                             ; preds = %9209
  %9213 = load i8*, i8** %9189, align 8
  %9214 = load i8, i8* %9213, align 1
  %9215 = zext i8 %9214 to i16
  br label %9220

9216:                                             ; preds = %9209
  %9217 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %9218 = load i16*, i16** %9217, align 8
  %9219 = load i16, i16* %9218, align 2
  br label %9220

9220:                                             ; preds = %9216, %9212
  %9221 = phi i16 [ %9215, %9212 ], [ %9219, %9216 ]
  store i16 %9221, i16* %14, align 2
  %9222 = icmp ugt i16 %9221, 15
  br i1 %9222, label %9223, label %9225

9223:                                             ; preds = %9220
  %9224 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %9224, align 8
  br label %10592

9225:                                             ; preds = %9220
  %9226 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %9226, label %10590, label %9227

9227:                                             ; preds = %14442, %9225
  %9228 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %9229 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9228, i64 0, i32 0
  %9230 = load i32, i32* %9229, align 8
  %9231 = icmp eq i32 %9230, 5
  br label %14210

9232:                                             ; preds = %9184
  %9233 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %9234 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9233, i64 0, i32 0
  %9235 = load i32, i32* %9234, align 8
  %9236 = icmp eq i32 %9235, 5
  br label %14210

9237:                                             ; preds = %9115
  %9238 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 2
  %9239 = load i8, i8* %9238, align 1, !range !2
  %9240 = icmp eq i8 %9239, 0
  br i1 %9240, label %8962, label %9241

9241:                                             ; preds = %9237
  %9242 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink20html_tokenizer_names6kCdataE, align 8
  %9243 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9242, i64 0, i32 0
  %9244 = call i32 @_ZN5blink15SegmentedString15LookAheadInlineERKN3WTF6StringENS1_19TextCaseSensitivityE(%"class.blink::SegmentedString"* %1, %"class.WTF::String"* dereferenceable(8) %9243, i32 0) #11
  switch i32 %9244, label %8962 [
    i32 1, label %9245
    i32 2, label %9300
  ]

9245:                                             ; preds = %9241
  %9246 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %9247 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %9248 = load i8*, i8** %9246, align 8
  %9249 = load i8*, i8** %9247, align 8
  %9250 = icmp ult i8* %9248, %9249
  br i1 %9250, label %9251, label %9258, !prof !3

9251:                                             ; preds = %9245
  %9252 = load i8, i8* %49, align 1, !range !2
  %9253 = icmp eq i8 %9252, 0
  br i1 %9253, label %9256, label %9254

9254:                                             ; preds = %9251
  %9255 = getelementptr inbounds i8, i8* %9248, i64 1
  store i8* %9255, i8** %9246, align 8
  br label %9262

9256:                                             ; preds = %9251
  %9257 = getelementptr inbounds i8, i8* %9248, i64 2
  store i8* %9257, i8** %9246, align 8
  br label %9262

9258:                                             ; preds = %9245
  %9259 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  %9260 = load i8*, i8** %9246, align 8
  %9261 = load i8*, i8** %9247, align 8
  br label %9262

9262:                                             ; preds = %9258, %9256, %9254
  %9263 = phi i8* [ %9261, %9258 ], [ %9249, %9256 ], [ %9249, %9254 ]
  %9264 = phi i8* [ %9260, %9258 ], [ %9257, %9256 ], [ %9255, %9254 ]
  %9265 = icmp ult i8* %9264, %9263
  br i1 %9265, label %14449, label %14445, !prof !3

9266:                                             ; preds = %14529
  %9267 = load i8, i8* %49, align 1, !range !2
  %9268 = icmp eq i8 %9267, 0
  br i1 %9268, label %9273, label %9269

9269:                                             ; preds = %9266
  %9270 = load i8*, i8** %9246, align 8
  %9271 = load i8, i8* %9270, align 1
  %9272 = zext i8 %9271 to i16
  br label %9277

9273:                                             ; preds = %9266
  %9274 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %9275 = load i16*, i16** %9274, align 8
  %9276 = load i16, i16* %9275, align 2
  br label %9277

9277:                                             ; preds = %9273, %9269
  %9278 = phi i16 [ %9272, %9269 ], [ %9276, %9273 ]
  store i16 %9278, i16* %14, align 2
  %9279 = icmp ugt i16 %9278, 15
  br i1 %9279, label %9280, label %9282

9280:                                             ; preds = %9277
  %9281 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %9281, align 8
  br label %9284

9282:                                             ; preds = %9277
  %9283 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %9283, label %9284, label %9295

9284:                                             ; preds = %73, %14204, %14080, %9280, %9282
  %9285 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %9286 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %9287 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %9288 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %9289 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %9290 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %9291 = bitcast i8** %9290 to i64*
  %9292 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  %9293 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %9294 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  br label %13915

9295:                                             ; preds = %14529, %9282
  %9296 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %9297 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9296, i64 0, i32 0
  %9298 = load i32, i32* %9297, align 8
  %9299 = icmp eq i32 %9298, 5
  br label %14210

9300:                                             ; preds = %9241
  %9301 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %9302 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9301, i64 0, i32 0
  %9303 = load i32, i32* %9302, align 8
  %9304 = icmp eq i32 %9303, 5
  br label %14210

9305:                                             ; preds = %73, %9172
  %9306 = load i16, i16* %14, align 2
  br label %9307

9307:                                             ; preds = %9305, %9170
  %9308 = phi i16 [ %9306, %9305 ], [ %9168, %9170 ]
  switch i16 %9308, label %9399 [
    i16 45, label %9309
    i16 62, label %9343
    i16 0, label %9345
  ]

9309:                                             ; preds = %9307
  store i32 47, i32* %74, align 8
  %9310 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %9311 = load i8*, i8** %9310, align 8
  %9312 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %9313 = load i8*, i8** %9312, align 8
  %9314 = icmp ult i8* %9311, %9313
  br i1 %9314, label %9315, label %9326, !prof !3

9315:                                             ; preds = %9309
  %9316 = load i8, i8* %49, align 1, !range !2
  %9317 = icmp eq i8 %9316, 0
  br i1 %9317, label %9322, label %9318

9318:                                             ; preds = %9315
  %9319 = getelementptr inbounds i8, i8* %9311, i64 1
  store i8* %9319, i8** %9310, align 8
  %9320 = load i8, i8* %9319, align 1
  %9321 = zext i8 %9320 to i16
  br label %9328

9322:                                             ; preds = %9315
  %9323 = getelementptr inbounds i8, i8* %9311, i64 2
  %9324 = bitcast i8* %9323 to i16*
  store i8* %9323, i8** %9310, align 8
  %9325 = load i16, i16* %9324, align 2
  br label %9328

9326:                                             ; preds = %9309
  %9327 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %9328

9328:                                             ; preds = %9326, %9322, %9318
  %9329 = phi i16 [ %9327, %9326 ], [ %9321, %9318 ], [ %9325, %9322 ]
  store i16 %9329, i16* %14, align 2
  %9330 = icmp ugt i16 %9329, 15
  br i1 %9330, label %9331, label %9333

9331:                                             ; preds = %9328
  %9332 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %9332, align 8
  br label %9488

9333:                                             ; preds = %9328
  %9334 = load i8, i8* %44, align 1, !range !2
  %9335 = icmp eq i8 %9334, 0
  br i1 %9335, label %9336, label %9338

9336:                                             ; preds = %9333
  %9337 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %9337, label %9486, label %9338

9338:                                             ; preds = %9333, %9336
  %9339 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %9340 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9339, i64 0, i32 0
  %9341 = load i32, i32* %9340, align 8
  %9342 = icmp eq i32 %9341, 5
  br label %14210

9343:                                             ; preds = %9307
  %9344 = call zeroext i1 @_ZN5blink13HTMLTokenizer15EmitAndResumeInERNS_15SegmentedStringENS0_5StateE(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i32 0)
  br label %14210

9345:                                             ; preds = %9307
  %9346 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %9347 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9346, i64 0, i32 0
  %9348 = load i32, i32* %9347, align 8
  %9349 = icmp eq i32 %9348, 2
  br i1 %9349, label %9350, label %9398

9350:                                             ; preds = %9345
  %9351 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9346, i64 0, i32 3
  %9352 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %9353 = getelementptr inbounds %class.LiteralBuffer.0, %class.LiteralBuffer.0* %9352, i64 0, i32 0
  %9354 = load i16*, i16** %9353, align 8
  %9355 = getelementptr inbounds %class.LiteralBuffer, %class.LiteralBuffer* %9351, i64 0, i32 0
  %9356 = load i16*, i16** %9355, align 8
  %9357 = icmp eq i16* %9354, %9356
  %9358 = bitcast i16* %9354 to i8*
  br i1 %9357, label %9398, label %9359

9359:                                             ; preds = %9350
  %9360 = ptrtoint i16* %9354 to i64
  %9361 = ptrtoint i16* %9356 to i64
  %9362 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9346, i64 0, i32 3, i32 1
  %9363 = bitcast i16** %9362 to i64*
  %9364 = load i64, i64* %9363, align 8
  %9365 = sub i64 %9364, %9361
  %9366 = ashr exact i64 %9365, 1
  %9367 = trunc i64 %9366 to i32
  %9368 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 2
  %9369 = bitcast i16** %9368 to i64*
  %9370 = load i64, i64* %9369, align 8
  %9371 = sub i64 %9370, %9360
  %9372 = ashr exact i64 %9371, 1
  %9373 = and i64 %9366, 4294967295
  %9374 = icmp ult i64 %9372, %9373
  br i1 %9374, label %9375, label %9385

9375:                                             ; preds = %9359
  %9376 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 3, i64 0
  %9377 = icmp eq i16* %9354, %9376
  br i1 %9377, label %9379, label %9378

9378:                                             ; preds = %9375
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %9358) #11
  br label %9379

9379:                                             ; preds = %9378, %9375
  %9380 = bitcast %class.LiteralBuffer.0* %9352 to i8**
  %9381 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %9373) #11
  %9382 = call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %9381, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)) #11
  %9383 = bitcast i8* %9382 to i16*
  store i8* %9382, i8** %9380, align 8
  %9384 = getelementptr inbounds i16, i16* %9383, i64 %9373
  store i16* %9384, i16** %9368, align 8
  br label %9385

9385:                                             ; preds = %9379, %9359
  %9386 = phi i16* [ %9383, %9379 ], [ %9354, %9359 ]
  %9387 = phi i8* [ %9382, %9379 ], [ %9358, %9359 ]
  %9388 = icmp eq i32 %9367, 0
  br i1 %9388, label %9394, label %9389

9389:                                             ; preds = %9385
  %9390 = bitcast %class.LiteralBuffer* %9351 to i8**
  %9391 = load i8*, i8** %9390, align 8
  %9392 = and i64 %9365, 8589934590
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %9387, i8* align 2 %9391, i64 %9392, i1 false) #11
  %9393 = load i16*, i16** %9353, align 8
  br label %9394

9394:                                             ; preds = %9389, %9385
  %9395 = phi i16* [ %9386, %9385 ], [ %9393, %9389 ]
  %9396 = getelementptr inbounds i16, i16* %9395, i64 %9373
  %9397 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  store i16* %9396, i16** %9397, align 8
  br label %9398

9398:                                             ; preds = %9345, %9350, %9394
  store i32 0, i32* %74, align 8
  br label %14210

9399:                                             ; preds = %9307
  %9400 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %9401 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9400, i64 0, i32 3, i32 1
  %9402 = load i16*, i16** %9401, align 8
  %9403 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9400, i64 0, i32 3, i32 2
  %9404 = load i16*, i16** %9403, align 8
  %9405 = icmp eq i16* %9402, %9404
  br i1 %9405, label %9406, label %9409, !prof !4

9406:                                             ; preds = %9399
  %9407 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9400, i64 0, i32 3
  %9408 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %9407) #11
  store i16* %9408, i16** %9401, align 8
  br label %9409

9409:                                             ; preds = %9399, %9406
  %9410 = phi i16* [ %9408, %9406 ], [ %9402, %9399 ]
  %9411 = getelementptr inbounds i16, i16* %9410, i64 1
  store i16* %9411, i16** %9401, align 8
  store i16 %9308, i16* %9410, align 2
  %9412 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9400, i64 0, i32 4
  %9413 = load i16, i16* %9412, align 8
  %9414 = or i16 %9413, %9308
  store i16 %9414, i16* %9412, align 8
  store i32 48, i32* %74, align 8
  %9415 = load i8, i8* %49, align 1, !range !2
  %9416 = icmp eq i8 %9415, 0
  br i1 %9416, label %9423, label %9417

9417:                                             ; preds = %9409
  %9418 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %9419 = load i8*, i8** %9418, align 8
  %9420 = load i8, i8* %9419, align 1
  %9421 = zext i8 %9420 to i16
  %9422 = ptrtoint i8* %9419 to i64
  br label %9429

9423:                                             ; preds = %9409
  %9424 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %9425 = load i16*, i16** %9424, align 8
  %9426 = load i16, i16* %9425, align 2
  %9427 = ptrtoint i16* %9425 to i64
  %9428 = bitcast i16* %9425 to i8*
  br label %9429

9429:                                             ; preds = %9423, %9417
  %9430 = phi i8* [ %9419, %9417 ], [ %9428, %9423 ]
  %9431 = phi i64 [ %9422, %9417 ], [ %9427, %9423 ]
  %9432 = phi i16 [ %9421, %9417 ], [ %9426, %9423 ]
  %9433 = icmp eq i16 %9432, 10
  br i1 %9433, label %9434, label %9455

9434:                                             ; preds = %9429
  %9435 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %9436 = load i8, i8* %9435, align 8, !range !2
  %9437 = icmp eq i8 %9436, 0
  br i1 %9437, label %9455, label %9438, !prof !4

9438:                                             ; preds = %9434
  %9439 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %9440 = load i32, i32* %9439, align 8
  %9441 = add nsw i32 %9440, 1
  store i32 %9441, i32* %9439, align 8
  %9442 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %9443 = load i32, i32* %9442, align 8
  %9444 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %9445 = bitcast i8** %9444 to i64*
  %9446 = load i64, i64* %9445, align 8
  %9447 = sub i64 %9431, %9446
  %9448 = trunc i64 %9447 to i32
  %9449 = xor i8 %9415, 1
  %9450 = zext i8 %9449 to i32
  %9451 = ashr i32 %9448, %9450
  %9452 = add i32 %9443, 1
  %9453 = add i32 %9452, %9451
  %9454 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %9453, i32* %9454, align 4
  br label %9455

9455:                                             ; preds = %9438, %9434, %9429
  %9456 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %9457 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %9458 = load i8*, i8** %9457, align 8
  %9459 = icmp ult i8* %9430, %9458
  br i1 %9459, label %9460, label %9469, !prof !3

9460:                                             ; preds = %9455
  br i1 %9416, label %9465, label %9461

9461:                                             ; preds = %9460
  %9462 = getelementptr inbounds i8, i8* %9430, i64 1
  store i8* %9462, i8** %9456, align 8
  %9463 = load i8, i8* %9462, align 1
  %9464 = zext i8 %9463 to i16
  br label %9471

9465:                                             ; preds = %9460
  %9466 = getelementptr inbounds i8, i8* %9430, i64 2
  %9467 = bitcast i8* %9466 to i16*
  store i8* %9466, i8** %9456, align 8
  %9468 = load i16, i16* %9467, align 2
  br label %9471

9469:                                             ; preds = %9455
  %9470 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %9471

9471:                                             ; preds = %9469, %9465, %9461
  %9472 = phi i16 [ %9470, %9469 ], [ %9464, %9461 ], [ %9468, %9465 ]
  store i16 %9472, i16* %14, align 2
  %9473 = icmp ugt i16 %9472, 15
  br i1 %9473, label %9474, label %9476

9474:                                             ; preds = %9471
  %9475 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %9475, align 8
  br label %9685

9476:                                             ; preds = %9471
  %9477 = load i8, i8* %44, align 1, !range !2
  %9478 = icmp eq i8 %9477, 0
  br i1 %9478, label %9479, label %9481

9479:                                             ; preds = %9476
  %9480 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %9480, label %9683, label %9481

9481:                                             ; preds = %9476, %9479
  %9482 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %9483 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9482, i64 0, i32 0
  %9484 = load i32, i32* %9483, align 8
  %9485 = icmp eq i32 %9484, 5
  br label %14210

9486:                                             ; preds = %9336, %73
  %9487 = load i16, i16* %14, align 2
  br label %9488

9488:                                             ; preds = %9486, %9331
  %9489 = phi i16 [ %9487, %9486 ], [ %9329, %9331 ]
  switch i16 %9489, label %9580 [
    i16 45, label %9490
    i16 62, label %9524
    i16 0, label %9526
  ]

9490:                                             ; preds = %9488
  store i32 50, i32* %74, align 8
  %9491 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %9492 = load i8*, i8** %9491, align 8
  %9493 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %9494 = load i8*, i8** %9493, align 8
  %9495 = icmp ult i8* %9492, %9494
  br i1 %9495, label %9496, label %9507, !prof !3

9496:                                             ; preds = %9490
  %9497 = load i8, i8* %49, align 1, !range !2
  %9498 = icmp eq i8 %9497, 0
  br i1 %9498, label %9503, label %9499

9499:                                             ; preds = %9496
  %9500 = getelementptr inbounds i8, i8* %9492, i64 1
  store i8* %9500, i8** %9491, align 8
  %9501 = load i8, i8* %9500, align 1
  %9502 = zext i8 %9501 to i16
  br label %9509

9503:                                             ; preds = %9496
  %9504 = getelementptr inbounds i8, i8* %9492, i64 2
  %9505 = bitcast i8* %9504 to i16*
  store i8* %9504, i8** %9491, align 8
  %9506 = load i16, i16* %9505, align 2
  br label %9509

9507:                                             ; preds = %9490
  %9508 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %9509

9509:                                             ; preds = %9507, %9503, %9499
  %9510 = phi i16 [ %9508, %9507 ], [ %9502, %9499 ], [ %9506, %9503 ]
  store i16 %9510, i16* %14, align 2
  %9511 = icmp ugt i16 %9510, 15
  br i1 %9511, label %9512, label %9514

9512:                                             ; preds = %9509
  %9513 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %9513, align 8
  br label %10059

9514:                                             ; preds = %9509
  %9515 = load i8, i8* %44, align 1, !range !2
  %9516 = icmp eq i8 %9515, 0
  br i1 %9516, label %9517, label %9519

9517:                                             ; preds = %9514
  %9518 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %9518, label %10057, label %9519

9519:                                             ; preds = %9514, %9517
  %9520 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %9521 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9520, i64 0, i32 0
  %9522 = load i32, i32* %9521, align 8
  %9523 = icmp eq i32 %9522, 5
  br label %14210

9524:                                             ; preds = %9488
  %9525 = call zeroext i1 @_ZN5blink13HTMLTokenizer15EmitAndResumeInERNS_15SegmentedStringENS0_5StateE(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i32 0)
  br label %14210

9526:                                             ; preds = %9488
  %9527 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %9528 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9527, i64 0, i32 0
  %9529 = load i32, i32* %9528, align 8
  %9530 = icmp eq i32 %9529, 2
  br i1 %9530, label %9531, label %9579

9531:                                             ; preds = %9526
  %9532 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9527, i64 0, i32 3
  %9533 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %9534 = getelementptr inbounds %class.LiteralBuffer.0, %class.LiteralBuffer.0* %9533, i64 0, i32 0
  %9535 = load i16*, i16** %9534, align 8
  %9536 = getelementptr inbounds %class.LiteralBuffer, %class.LiteralBuffer* %9532, i64 0, i32 0
  %9537 = load i16*, i16** %9536, align 8
  %9538 = icmp eq i16* %9535, %9537
  %9539 = bitcast i16* %9535 to i8*
  br i1 %9538, label %9579, label %9540

9540:                                             ; preds = %9531
  %9541 = ptrtoint i16* %9535 to i64
  %9542 = ptrtoint i16* %9537 to i64
  %9543 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9527, i64 0, i32 3, i32 1
  %9544 = bitcast i16** %9543 to i64*
  %9545 = load i64, i64* %9544, align 8
  %9546 = sub i64 %9545, %9542
  %9547 = ashr exact i64 %9546, 1
  %9548 = trunc i64 %9547 to i32
  %9549 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 2
  %9550 = bitcast i16** %9549 to i64*
  %9551 = load i64, i64* %9550, align 8
  %9552 = sub i64 %9551, %9541
  %9553 = ashr exact i64 %9552, 1
  %9554 = and i64 %9547, 4294967295
  %9555 = icmp ult i64 %9553, %9554
  br i1 %9555, label %9556, label %9566

9556:                                             ; preds = %9540
  %9557 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 3, i64 0
  %9558 = icmp eq i16* %9535, %9557
  br i1 %9558, label %9560, label %9559

9559:                                             ; preds = %9556
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %9539) #11
  br label %9560

9560:                                             ; preds = %9559, %9556
  %9561 = bitcast %class.LiteralBuffer.0* %9533 to i8**
  %9562 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %9554) #11
  %9563 = call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %9562, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)) #11
  %9564 = bitcast i8* %9563 to i16*
  store i8* %9563, i8** %9561, align 8
  %9565 = getelementptr inbounds i16, i16* %9564, i64 %9554
  store i16* %9565, i16** %9549, align 8
  br label %9566

9566:                                             ; preds = %9560, %9540
  %9567 = phi i16* [ %9564, %9560 ], [ %9535, %9540 ]
  %9568 = phi i8* [ %9563, %9560 ], [ %9539, %9540 ]
  %9569 = icmp eq i32 %9548, 0
  br i1 %9569, label %9575, label %9570

9570:                                             ; preds = %9566
  %9571 = bitcast %class.LiteralBuffer* %9532 to i8**
  %9572 = load i8*, i8** %9571, align 8
  %9573 = and i64 %9546, 8589934590
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %9568, i8* align 2 %9572, i64 %9573, i1 false) #11
  %9574 = load i16*, i16** %9534, align 8
  br label %9575

9575:                                             ; preds = %9570, %9566
  %9576 = phi i16* [ %9567, %9566 ], [ %9574, %9570 ]
  %9577 = getelementptr inbounds i16, i16* %9576, i64 %9554
  %9578 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  store i16* %9577, i16** %9578, align 8
  br label %9579

9579:                                             ; preds = %9526, %9531, %9575
  store i32 0, i32* %74, align 8
  br label %14210

9580:                                             ; preds = %9488
  %9581 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %9582 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9581, i64 0, i32 3, i32 1
  %9583 = load i16*, i16** %9582, align 8
  %9584 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9581, i64 0, i32 3, i32 2
  %9585 = load i16*, i16** %9584, align 8
  %9586 = icmp eq i16* %9583, %9585
  br i1 %9586, label %9587, label %9590, !prof !4

9587:                                             ; preds = %9580
  %9588 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9581, i64 0, i32 3
  %9589 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %9588) #11
  store i16* %9589, i16** %9582, align 8
  br label %9590

9590:                                             ; preds = %9580, %9587
  %9591 = phi i16* [ %9589, %9587 ], [ %9583, %9580 ]
  %9592 = getelementptr inbounds i16, i16* %9591, i64 1
  store i16* %9592, i16** %9582, align 8
  store i16 45, i16* %9591, align 2
  %9593 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9581, i64 0, i32 4
  %9594 = load i16, i16* %9593, align 8
  %9595 = or i16 %9594, 45
  store i16 %9595, i16* %9593, align 8
  %9596 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %9597 = load i16, i16* %14, align 2
  %9598 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9596, i64 0, i32 3, i32 1
  %9599 = load i16*, i16** %9598, align 8
  %9600 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9596, i64 0, i32 3, i32 2
  %9601 = load i16*, i16** %9600, align 8
  %9602 = icmp eq i16* %9599, %9601
  br i1 %9602, label %9603, label %9606, !prof !4

9603:                                             ; preds = %9590
  %9604 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9596, i64 0, i32 3
  %9605 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %9604) #11
  store i16* %9605, i16** %9598, align 8
  br label %9606

9606:                                             ; preds = %9590, %9603
  %9607 = phi i16* [ %9605, %9603 ], [ %9599, %9590 ]
  %9608 = getelementptr inbounds i16, i16* %9607, i64 1
  store i16* %9608, i16** %9598, align 8
  store i16 %9597, i16* %9607, align 2
  %9609 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9596, i64 0, i32 4
  %9610 = load i16, i16* %9609, align 8
  %9611 = or i16 %9610, %9597
  store i16 %9611, i16* %9609, align 8
  store i32 48, i32* %74, align 8
  %9612 = load i8, i8* %49, align 1, !range !2
  %9613 = icmp eq i8 %9612, 0
  br i1 %9613, label %9620, label %9614

9614:                                             ; preds = %9606
  %9615 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %9616 = load i8*, i8** %9615, align 8
  %9617 = load i8, i8* %9616, align 1
  %9618 = zext i8 %9617 to i16
  %9619 = ptrtoint i8* %9616 to i64
  br label %9626

9620:                                             ; preds = %9606
  %9621 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %9622 = load i16*, i16** %9621, align 8
  %9623 = load i16, i16* %9622, align 2
  %9624 = ptrtoint i16* %9622 to i64
  %9625 = bitcast i16* %9622 to i8*
  br label %9626

9626:                                             ; preds = %9620, %9614
  %9627 = phi i8* [ %9616, %9614 ], [ %9625, %9620 ]
  %9628 = phi i64 [ %9619, %9614 ], [ %9624, %9620 ]
  %9629 = phi i16 [ %9618, %9614 ], [ %9623, %9620 ]
  %9630 = icmp eq i16 %9629, 10
  br i1 %9630, label %9631, label %9652

9631:                                             ; preds = %9626
  %9632 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %9633 = load i8, i8* %9632, align 8, !range !2
  %9634 = icmp eq i8 %9633, 0
  br i1 %9634, label %9652, label %9635, !prof !4

9635:                                             ; preds = %9631
  %9636 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %9637 = load i32, i32* %9636, align 8
  %9638 = add nsw i32 %9637, 1
  store i32 %9638, i32* %9636, align 8
  %9639 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %9640 = load i32, i32* %9639, align 8
  %9641 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %9642 = bitcast i8** %9641 to i64*
  %9643 = load i64, i64* %9642, align 8
  %9644 = sub i64 %9628, %9643
  %9645 = trunc i64 %9644 to i32
  %9646 = xor i8 %9612, 1
  %9647 = zext i8 %9646 to i32
  %9648 = ashr i32 %9645, %9647
  %9649 = add i32 %9640, 1
  %9650 = add i32 %9649, %9648
  %9651 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %9650, i32* %9651, align 4
  br label %9652

9652:                                             ; preds = %9635, %9631, %9626
  %9653 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %9654 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %9655 = load i8*, i8** %9654, align 8
  %9656 = icmp ult i8* %9627, %9655
  br i1 %9656, label %9657, label %9666, !prof !3

9657:                                             ; preds = %9652
  br i1 %9613, label %9662, label %9658

9658:                                             ; preds = %9657
  %9659 = getelementptr inbounds i8, i8* %9627, i64 1
  store i8* %9659, i8** %9653, align 8
  %9660 = load i8, i8* %9659, align 1
  %9661 = zext i8 %9660 to i16
  br label %9668

9662:                                             ; preds = %9657
  %9663 = getelementptr inbounds i8, i8* %9627, i64 2
  %9664 = bitcast i8* %9663 to i16*
  store i8* %9663, i8** %9653, align 8
  %9665 = load i16, i16* %9664, align 2
  br label %9668

9666:                                             ; preds = %9652
  %9667 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %9668

9668:                                             ; preds = %9666, %9662, %9658
  %9669 = phi i16 [ %9667, %9666 ], [ %9661, %9658 ], [ %9665, %9662 ]
  store i16 %9669, i16* %14, align 2
  %9670 = icmp ugt i16 %9669, 15
  br i1 %9670, label %9671, label %9673

9671:                                             ; preds = %9668
  %9672 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %9672, align 8
  br label %9685

9673:                                             ; preds = %9668
  %9674 = load i8, i8* %44, align 1, !range !2
  %9675 = icmp eq i8 %9674, 0
  br i1 %9675, label %9676, label %9678

9676:                                             ; preds = %9673
  %9677 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %9677, label %9683, label %9678

9678:                                             ; preds = %9673, %9676
  %9679 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %9680 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9679, i64 0, i32 0
  %9681 = load i32, i32* %9680, align 8
  %9682 = icmp eq i32 %9681, 5
  br label %14210

9683:                                             ; preds = %10578, %10306, %10045, %9850, %9479, %9676, %73, %9855, %10050, %10311, %10583
  %9684 = load i16, i16* %14, align 2
  br label %9685

9685:                                             ; preds = %9671, %9474, %9683
  %9686 = phi i16 [ %9684, %9683 ], [ %9669, %9671 ], [ %9472, %9474 ]
  switch i16 %9686, label %9775 [
    i16 45, label %9687
    i16 0, label %9721
  ]

9687:                                             ; preds = %9685
  store i32 49, i32* %74, align 8
  %9688 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %9689 = load i8*, i8** %9688, align 8
  %9690 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %9691 = load i8*, i8** %9690, align 8
  %9692 = icmp ult i8* %9689, %9691
  br i1 %9692, label %9693, label %9704, !prof !3

9693:                                             ; preds = %9687
  %9694 = load i8, i8* %49, align 1, !range !2
  %9695 = icmp eq i8 %9694, 0
  br i1 %9695, label %9700, label %9696

9696:                                             ; preds = %9693
  %9697 = getelementptr inbounds i8, i8* %9689, i64 1
  store i8* %9697, i8** %9688, align 8
  %9698 = load i8, i8* %9697, align 1
  %9699 = zext i8 %9698 to i16
  br label %9706

9700:                                             ; preds = %9693
  %9701 = getelementptr inbounds i8, i8* %9689, i64 2
  %9702 = bitcast i8* %9701 to i16*
  store i8* %9701, i8** %9688, align 8
  %9703 = load i16, i16* %9702, align 2
  br label %9706

9704:                                             ; preds = %9687
  %9705 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %9706

9706:                                             ; preds = %9704, %9700, %9696
  %9707 = phi i16 [ %9705, %9704 ], [ %9699, %9696 ], [ %9703, %9700 ]
  store i16 %9707, i16* %14, align 2
  %9708 = icmp ugt i16 %9707, 15
  br i1 %9708, label %9709, label %9711

9709:                                             ; preds = %9706
  %9710 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %9710, align 8
  br label %9864

9711:                                             ; preds = %9706
  %9712 = load i8, i8* %44, align 1, !range !2
  %9713 = icmp eq i8 %9712, 0
  br i1 %9713, label %9714, label %9716

9714:                                             ; preds = %9711
  %9715 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %9715, label %9862, label %9716

9716:                                             ; preds = %9711, %9714
  %9717 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %9718 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9717, i64 0, i32 0
  %9719 = load i32, i32* %9718, align 8
  %9720 = icmp eq i32 %9719, 5
  br label %14210

9721:                                             ; preds = %9685
  %9722 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %9723 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9722, i64 0, i32 0
  %9724 = load i32, i32* %9723, align 8
  %9725 = icmp eq i32 %9724, 2
  br i1 %9725, label %9726, label %9774

9726:                                             ; preds = %9721
  %9727 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9722, i64 0, i32 3
  %9728 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %9729 = getelementptr inbounds %class.LiteralBuffer.0, %class.LiteralBuffer.0* %9728, i64 0, i32 0
  %9730 = load i16*, i16** %9729, align 8
  %9731 = getelementptr inbounds %class.LiteralBuffer, %class.LiteralBuffer* %9727, i64 0, i32 0
  %9732 = load i16*, i16** %9731, align 8
  %9733 = icmp eq i16* %9730, %9732
  %9734 = bitcast i16* %9730 to i8*
  br i1 %9733, label %9774, label %9735

9735:                                             ; preds = %9726
  %9736 = ptrtoint i16* %9730 to i64
  %9737 = ptrtoint i16* %9732 to i64
  %9738 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9722, i64 0, i32 3, i32 1
  %9739 = bitcast i16** %9738 to i64*
  %9740 = load i64, i64* %9739, align 8
  %9741 = sub i64 %9740, %9737
  %9742 = ashr exact i64 %9741, 1
  %9743 = trunc i64 %9742 to i32
  %9744 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 2
  %9745 = bitcast i16** %9744 to i64*
  %9746 = load i64, i64* %9745, align 8
  %9747 = sub i64 %9746, %9736
  %9748 = ashr exact i64 %9747, 1
  %9749 = and i64 %9742, 4294967295
  %9750 = icmp ult i64 %9748, %9749
  br i1 %9750, label %9751, label %9761

9751:                                             ; preds = %9735
  %9752 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 3, i64 0
  %9753 = icmp eq i16* %9730, %9752
  br i1 %9753, label %9755, label %9754

9754:                                             ; preds = %9751
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %9734) #11
  br label %9755

9755:                                             ; preds = %9754, %9751
  %9756 = bitcast %class.LiteralBuffer.0* %9728 to i8**
  %9757 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %9749) #11
  %9758 = call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %9757, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)) #11
  %9759 = bitcast i8* %9758 to i16*
  store i8* %9758, i8** %9756, align 8
  %9760 = getelementptr inbounds i16, i16* %9759, i64 %9749
  store i16* %9760, i16** %9744, align 8
  br label %9761

9761:                                             ; preds = %9755, %9735
  %9762 = phi i16* [ %9759, %9755 ], [ %9730, %9735 ]
  %9763 = phi i8* [ %9758, %9755 ], [ %9734, %9735 ]
  %9764 = icmp eq i32 %9743, 0
  br i1 %9764, label %9770, label %9765

9765:                                             ; preds = %9761
  %9766 = bitcast %class.LiteralBuffer* %9727 to i8**
  %9767 = load i8*, i8** %9766, align 8
  %9768 = and i64 %9741, 8589934590
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %9763, i8* align 2 %9767, i64 %9768, i1 false) #11
  %9769 = load i16*, i16** %9729, align 8
  br label %9770

9770:                                             ; preds = %9765, %9761
  %9771 = phi i16* [ %9762, %9761 ], [ %9769, %9765 ]
  %9772 = getelementptr inbounds i16, i16* %9771, i64 %9749
  %9773 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  store i16* %9772, i16** %9773, align 8
  br label %9774

9774:                                             ; preds = %9721, %9726, %9770
  store i32 0, i32* %74, align 8
  br label %14210

9775:                                             ; preds = %9685
  %9776 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %9777 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9776, i64 0, i32 3, i32 1
  %9778 = load i16*, i16** %9777, align 8
  %9779 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9776, i64 0, i32 3, i32 2
  %9780 = load i16*, i16** %9779, align 8
  %9781 = icmp eq i16* %9778, %9780
  br i1 %9781, label %9782, label %9785, !prof !4

9782:                                             ; preds = %9775
  %9783 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9776, i64 0, i32 3
  %9784 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %9783) #11
  store i16* %9784, i16** %9777, align 8
  br label %9785

9785:                                             ; preds = %9775, %9782
  %9786 = phi i16* [ %9784, %9782 ], [ %9778, %9775 ]
  %9787 = getelementptr inbounds i16, i16* %9786, i64 1
  store i16* %9787, i16** %9777, align 8
  store i16 %9686, i16* %9786, align 2
  %9788 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9776, i64 0, i32 4
  %9789 = load i16, i16* %9788, align 8
  %9790 = or i16 %9789, %9686
  store i16 %9790, i16* %9788, align 8
  %9791 = load i8, i8* %49, align 1, !range !2
  %9792 = icmp eq i8 %9791, 0
  br i1 %9792, label %9799, label %9793

9793:                                             ; preds = %9785
  %9794 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %9795 = load i8*, i8** %9794, align 8
  %9796 = load i8, i8* %9795, align 1
  %9797 = zext i8 %9796 to i16
  %9798 = ptrtoint i8* %9795 to i64
  br label %9805

9799:                                             ; preds = %9785
  %9800 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %9801 = load i16*, i16** %9800, align 8
  %9802 = load i16, i16* %9801, align 2
  %9803 = ptrtoint i16* %9801 to i64
  %9804 = bitcast i16* %9801 to i8*
  br label %9805

9805:                                             ; preds = %9799, %9793
  %9806 = phi i8* [ %9795, %9793 ], [ %9804, %9799 ]
  %9807 = phi i64 [ %9798, %9793 ], [ %9803, %9799 ]
  %9808 = phi i16 [ %9797, %9793 ], [ %9802, %9799 ]
  %9809 = icmp eq i16 %9808, 10
  br i1 %9809, label %9810, label %9831

9810:                                             ; preds = %9805
  %9811 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %9812 = load i8, i8* %9811, align 8, !range !2
  %9813 = icmp eq i8 %9812, 0
  br i1 %9813, label %9831, label %9814, !prof !4

9814:                                             ; preds = %9810
  %9815 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %9816 = load i32, i32* %9815, align 8
  %9817 = add nsw i32 %9816, 1
  store i32 %9817, i32* %9815, align 8
  %9818 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %9819 = load i32, i32* %9818, align 8
  %9820 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %9821 = bitcast i8** %9820 to i64*
  %9822 = load i64, i64* %9821, align 8
  %9823 = sub i64 %9807, %9822
  %9824 = trunc i64 %9823 to i32
  %9825 = xor i8 %9791, 1
  %9826 = zext i8 %9825 to i32
  %9827 = ashr i32 %9824, %9826
  %9828 = add i32 %9819, 1
  %9829 = add i32 %9828, %9827
  %9830 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %9829, i32* %9830, align 4
  br label %9831

9831:                                             ; preds = %9814, %9810, %9805
  %9832 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %9833 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %9834 = load i8*, i8** %9833, align 8
  %9835 = icmp ult i8* %9806, %9834
  br i1 %9835, label %9836, label %9845, !prof !3

9836:                                             ; preds = %9831
  br i1 %9792, label %9841, label %9837

9837:                                             ; preds = %9836
  %9838 = getelementptr inbounds i8, i8* %9806, i64 1
  store i8* %9838, i8** %9832, align 8
  %9839 = load i8, i8* %9838, align 1
  %9840 = zext i8 %9839 to i16
  br label %9847

9841:                                             ; preds = %9836
  %9842 = getelementptr inbounds i8, i8* %9806, i64 2
  %9843 = bitcast i8* %9842 to i16*
  store i8* %9842, i8** %9832, align 8
  %9844 = load i16, i16* %9843, align 2
  br label %9847

9845:                                             ; preds = %9831
  %9846 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %9847

9847:                                             ; preds = %9845, %9841, %9837
  %9848 = phi i16 [ %9846, %9845 ], [ %9840, %9837 ], [ %9844, %9841 ]
  store i16 %9848, i16* %14, align 2
  %9849 = icmp ugt i16 %9848, 15
  br i1 %9849, label %9850, label %9852

9850:                                             ; preds = %9847
  %9851 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %9851, align 8
  br label %9683

9852:                                             ; preds = %9847
  %9853 = load i8, i8* %44, align 1, !range !2
  %9854 = icmp eq i8 %9853, 0
  br i1 %9854, label %9855, label %9857

9855:                                             ; preds = %9852
  %9856 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %9856, label %9683, label %9857

9857:                                             ; preds = %9852, %9855
  %9858 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %9859 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9858, i64 0, i32 0
  %9860 = load i32, i32* %9859, align 8
  %9861 = icmp eq i32 %9860, 5
  br label %14210

9862:                                             ; preds = %10389, %9714, %73, %10394
  %9863 = load i16, i16* %14, align 2
  br label %9864

9864:                                             ; preds = %9709, %9862
  %9865 = phi i16 [ %9863, %9862 ], [ %9707, %9709 ]
  switch i16 %9865, label %9954 [
    i16 45, label %9866
    i16 0, label %9900
  ]

9866:                                             ; preds = %9864
  store i32 50, i32* %74, align 8
  %9867 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %9868 = load i8*, i8** %9867, align 8
  %9869 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %9870 = load i8*, i8** %9869, align 8
  %9871 = icmp ult i8* %9868, %9870
  br i1 %9871, label %9872, label %9883, !prof !3

9872:                                             ; preds = %9866
  %9873 = load i8, i8* %49, align 1, !range !2
  %9874 = icmp eq i8 %9873, 0
  br i1 %9874, label %9879, label %9875

9875:                                             ; preds = %9872
  %9876 = getelementptr inbounds i8, i8* %9868, i64 1
  store i8* %9876, i8** %9867, align 8
  %9877 = load i8, i8* %9876, align 1
  %9878 = zext i8 %9877 to i16
  br label %9885

9879:                                             ; preds = %9872
  %9880 = getelementptr inbounds i8, i8* %9868, i64 2
  %9881 = bitcast i8* %9880 to i16*
  store i8* %9880, i8** %9867, align 8
  %9882 = load i16, i16* %9881, align 2
  br label %9885

9883:                                             ; preds = %9866
  %9884 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %9885

9885:                                             ; preds = %9883, %9879, %9875
  %9886 = phi i16 [ %9884, %9883 ], [ %9878, %9875 ], [ %9882, %9879 ]
  store i16 %9886, i16* %14, align 2
  %9887 = icmp ugt i16 %9886, 15
  br i1 %9887, label %9888, label %9890

9888:                                             ; preds = %9885
  %9889 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %9889, align 8
  br label %10059

9890:                                             ; preds = %9885
  %9891 = load i8, i8* %44, align 1, !range !2
  %9892 = icmp eq i8 %9891, 0
  br i1 %9892, label %9893, label %9895

9893:                                             ; preds = %9890
  %9894 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %9894, label %10057, label %9895

9895:                                             ; preds = %9890, %9893
  %9896 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %9897 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9896, i64 0, i32 0
  %9898 = load i32, i32* %9897, align 8
  %9899 = icmp eq i32 %9898, 5
  br label %14210

9900:                                             ; preds = %9864
  %9901 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %9902 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9901, i64 0, i32 0
  %9903 = load i32, i32* %9902, align 8
  %9904 = icmp eq i32 %9903, 2
  br i1 %9904, label %9905, label %9953

9905:                                             ; preds = %9900
  %9906 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9901, i64 0, i32 3
  %9907 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %9908 = getelementptr inbounds %class.LiteralBuffer.0, %class.LiteralBuffer.0* %9907, i64 0, i32 0
  %9909 = load i16*, i16** %9908, align 8
  %9910 = getelementptr inbounds %class.LiteralBuffer, %class.LiteralBuffer* %9906, i64 0, i32 0
  %9911 = load i16*, i16** %9910, align 8
  %9912 = icmp eq i16* %9909, %9911
  %9913 = bitcast i16* %9909 to i8*
  br i1 %9912, label %9953, label %9914

9914:                                             ; preds = %9905
  %9915 = ptrtoint i16* %9909 to i64
  %9916 = ptrtoint i16* %9911 to i64
  %9917 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9901, i64 0, i32 3, i32 1
  %9918 = bitcast i16** %9917 to i64*
  %9919 = load i64, i64* %9918, align 8
  %9920 = sub i64 %9919, %9916
  %9921 = ashr exact i64 %9920, 1
  %9922 = trunc i64 %9921 to i32
  %9923 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 2
  %9924 = bitcast i16** %9923 to i64*
  %9925 = load i64, i64* %9924, align 8
  %9926 = sub i64 %9925, %9915
  %9927 = ashr exact i64 %9926, 1
  %9928 = and i64 %9921, 4294967295
  %9929 = icmp ult i64 %9927, %9928
  br i1 %9929, label %9930, label %9940

9930:                                             ; preds = %9914
  %9931 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 3, i64 0
  %9932 = icmp eq i16* %9909, %9931
  br i1 %9932, label %9934, label %9933

9933:                                             ; preds = %9930
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %9913) #11
  br label %9934

9934:                                             ; preds = %9933, %9930
  %9935 = bitcast %class.LiteralBuffer.0* %9907 to i8**
  %9936 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %9928) #11
  %9937 = call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %9936, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)) #11
  %9938 = bitcast i8* %9937 to i16*
  store i8* %9937, i8** %9935, align 8
  %9939 = getelementptr inbounds i16, i16* %9938, i64 %9928
  store i16* %9939, i16** %9923, align 8
  br label %9940

9940:                                             ; preds = %9934, %9914
  %9941 = phi i16* [ %9938, %9934 ], [ %9909, %9914 ]
  %9942 = phi i8* [ %9937, %9934 ], [ %9913, %9914 ]
  %9943 = icmp eq i32 %9922, 0
  br i1 %9943, label %9949, label %9944

9944:                                             ; preds = %9940
  %9945 = bitcast %class.LiteralBuffer* %9906 to i8**
  %9946 = load i8*, i8** %9945, align 8
  %9947 = and i64 %9920, 8589934590
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %9942, i8* align 2 %9946, i64 %9947, i1 false) #11
  %9948 = load i16*, i16** %9908, align 8
  br label %9949

9949:                                             ; preds = %9944, %9940
  %9950 = phi i16* [ %9941, %9940 ], [ %9948, %9944 ]
  %9951 = getelementptr inbounds i16, i16* %9950, i64 %9928
  %9952 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  store i16* %9951, i16** %9952, align 8
  br label %9953

9953:                                             ; preds = %9900, %9905, %9949
  store i32 0, i32* %74, align 8
  br label %14210

9954:                                             ; preds = %9864
  %9955 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %9956 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9955, i64 0, i32 3, i32 1
  %9957 = load i16*, i16** %9956, align 8
  %9958 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9955, i64 0, i32 3, i32 2
  %9959 = load i16*, i16** %9958, align 8
  %9960 = icmp eq i16* %9957, %9959
  br i1 %9960, label %9961, label %9964, !prof !4

9961:                                             ; preds = %9954
  %9962 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9955, i64 0, i32 3
  %9963 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %9962) #11
  store i16* %9963, i16** %9956, align 8
  br label %9964

9964:                                             ; preds = %9954, %9961
  %9965 = phi i16* [ %9963, %9961 ], [ %9957, %9954 ]
  %9966 = getelementptr inbounds i16, i16* %9965, i64 1
  store i16* %9966, i16** %9956, align 8
  store i16 45, i16* %9965, align 2
  %9967 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9955, i64 0, i32 4
  %9968 = load i16, i16* %9967, align 8
  %9969 = or i16 %9968, 45
  store i16 %9969, i16* %9967, align 8
  %9970 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %9971 = load i16, i16* %14, align 2
  %9972 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9970, i64 0, i32 3, i32 1
  %9973 = load i16*, i16** %9972, align 8
  %9974 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9970, i64 0, i32 3, i32 2
  %9975 = load i16*, i16** %9974, align 8
  %9976 = icmp eq i16* %9973, %9975
  br i1 %9976, label %9977, label %9980, !prof !4

9977:                                             ; preds = %9964
  %9978 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9970, i64 0, i32 3
  %9979 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %9978) #11
  store i16* %9979, i16** %9972, align 8
  br label %9980

9980:                                             ; preds = %9964, %9977
  %9981 = phi i16* [ %9979, %9977 ], [ %9973, %9964 ]
  %9982 = getelementptr inbounds i16, i16* %9981, i64 1
  store i16* %9982, i16** %9972, align 8
  store i16 %9971, i16* %9981, align 2
  %9983 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %9970, i64 0, i32 4
  %9984 = load i16, i16* %9983, align 8
  %9985 = or i16 %9984, %9971
  store i16 %9985, i16* %9983, align 8
  store i32 48, i32* %74, align 8
  %9986 = load i8, i8* %49, align 1, !range !2
  %9987 = icmp eq i8 %9986, 0
  br i1 %9987, label %9994, label %9988

9988:                                             ; preds = %9980
  %9989 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %9990 = load i8*, i8** %9989, align 8
  %9991 = load i8, i8* %9990, align 1
  %9992 = zext i8 %9991 to i16
  %9993 = ptrtoint i8* %9990 to i64
  br label %10000

9994:                                             ; preds = %9980
  %9995 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %9996 = load i16*, i16** %9995, align 8
  %9997 = load i16, i16* %9996, align 2
  %9998 = ptrtoint i16* %9996 to i64
  %9999 = bitcast i16* %9996 to i8*
  br label %10000

10000:                                            ; preds = %9994, %9988
  %10001 = phi i8* [ %9990, %9988 ], [ %9999, %9994 ]
  %10002 = phi i64 [ %9993, %9988 ], [ %9998, %9994 ]
  %10003 = phi i16 [ %9992, %9988 ], [ %9997, %9994 ]
  %10004 = icmp eq i16 %10003, 10
  br i1 %10004, label %10005, label %10026

10005:                                            ; preds = %10000
  %10006 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %10007 = load i8, i8* %10006, align 8, !range !2
  %10008 = icmp eq i8 %10007, 0
  br i1 %10008, label %10026, label %10009, !prof !4

10009:                                            ; preds = %10005
  %10010 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %10011 = load i32, i32* %10010, align 8
  %10012 = add nsw i32 %10011, 1
  store i32 %10012, i32* %10010, align 8
  %10013 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %10014 = load i32, i32* %10013, align 8
  %10015 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %10016 = bitcast i8** %10015 to i64*
  %10017 = load i64, i64* %10016, align 8
  %10018 = sub i64 %10002, %10017
  %10019 = trunc i64 %10018 to i32
  %10020 = xor i8 %9986, 1
  %10021 = zext i8 %10020 to i32
  %10022 = ashr i32 %10019, %10021
  %10023 = add i32 %10014, 1
  %10024 = add i32 %10023, %10022
  %10025 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %10024, i32* %10025, align 4
  br label %10026

10026:                                            ; preds = %10009, %10005, %10000
  %10027 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %10028 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %10029 = load i8*, i8** %10028, align 8
  %10030 = icmp ult i8* %10001, %10029
  br i1 %10030, label %10031, label %10040, !prof !3

10031:                                            ; preds = %10026
  br i1 %9987, label %10036, label %10032

10032:                                            ; preds = %10031
  %10033 = getelementptr inbounds i8, i8* %10001, i64 1
  store i8* %10033, i8** %10027, align 8
  %10034 = load i8, i8* %10033, align 1
  %10035 = zext i8 %10034 to i16
  br label %10042

10036:                                            ; preds = %10031
  %10037 = getelementptr inbounds i8, i8* %10001, i64 2
  %10038 = bitcast i8* %10037 to i16*
  store i8* %10037, i8** %10027, align 8
  %10039 = load i16, i16* %10038, align 2
  br label %10042

10040:                                            ; preds = %10026
  %10041 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %10042

10042:                                            ; preds = %10040, %10036, %10032
  %10043 = phi i16 [ %10041, %10040 ], [ %10035, %10032 ], [ %10039, %10036 ]
  store i16 %10043, i16* %14, align 2
  %10044 = icmp ugt i16 %10043, 15
  br i1 %10044, label %10045, label %10047

10045:                                            ; preds = %10042
  %10046 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %10046, align 8
  br label %9683

10047:                                            ; preds = %10042
  %10048 = load i8, i8* %44, align 1, !range !2
  %10049 = icmp eq i8 %10048, 0
  br i1 %10049, label %10050, label %10052

10050:                                            ; preds = %10047
  %10051 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %10051, label %9683, label %10052

10052:                                            ; preds = %10047, %10050
  %10053 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %10054 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10053, i64 0, i32 0
  %10055 = load i32, i32* %10054, align 8
  %10056 = icmp eq i32 %10055, 5
  br label %14210

10057:                                            ; preds = %10134, %9517, %9893, %73, %10139
  %10058 = load i16, i16* %14, align 2
  br label %10059

10059:                                            ; preds = %9888, %9512, %10057
  %10060 = phi i16 [ %10058, %10057 ], [ %9886, %9888 ], [ %9510, %9512 ]
  switch i16 %10060, label %10200 [
    i16 62, label %10061
    i16 33, label %10063
    i16 45, label %10097
    i16 0, label %10146
  ]

10061:                                            ; preds = %10059
  %10062 = call zeroext i1 @_ZN5blink13HTMLTokenizer15EmitAndResumeInERNS_15SegmentedStringENS0_5StateE(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i32 0)
  br label %14210

10063:                                            ; preds = %10059
  store i32 51, i32* %74, align 8
  %10064 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %10065 = load i8*, i8** %10064, align 8
  %10066 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %10067 = load i8*, i8** %10066, align 8
  %10068 = icmp ult i8* %10065, %10067
  br i1 %10068, label %10069, label %10080, !prof !3

10069:                                            ; preds = %10063
  %10070 = load i8, i8* %49, align 1, !range !2
  %10071 = icmp eq i8 %10070, 0
  br i1 %10071, label %10076, label %10072

10072:                                            ; preds = %10069
  %10073 = getelementptr inbounds i8, i8* %10065, i64 1
  store i8* %10073, i8** %10064, align 8
  %10074 = load i8, i8* %10073, align 1
  %10075 = zext i8 %10074 to i16
  br label %10082

10076:                                            ; preds = %10069
  %10077 = getelementptr inbounds i8, i8* %10065, i64 2
  %10078 = bitcast i8* %10077 to i16*
  store i8* %10077, i8** %10064, align 8
  %10079 = load i16, i16* %10078, align 2
  br label %10082

10080:                                            ; preds = %10063
  %10081 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %10082

10082:                                            ; preds = %10080, %10076, %10072
  %10083 = phi i16 [ %10081, %10080 ], [ %10075, %10072 ], [ %10079, %10076 ]
  store i16 %10083, i16* %14, align 2
  %10084 = icmp ugt i16 %10083, 15
  br i1 %10084, label %10085, label %10087

10085:                                            ; preds = %10082
  %10086 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %10086, align 8
  br label %10320

10087:                                            ; preds = %10082
  %10088 = load i8, i8* %44, align 1, !range !2
  %10089 = icmp eq i8 %10088, 0
  br i1 %10089, label %10090, label %10092

10090:                                            ; preds = %10087
  %10091 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %10091, label %10318, label %10092

10092:                                            ; preds = %10087, %10090
  %10093 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %10094 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10093, i64 0, i32 0
  %10095 = load i32, i32* %10094, align 8
  %10096 = icmp eq i32 %10095, 5
  br label %14210

10097:                                            ; preds = %10059
  %10098 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %10099 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10098, i64 0, i32 3, i32 1
  %10100 = load i16*, i16** %10099, align 8
  %10101 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10098, i64 0, i32 3, i32 2
  %10102 = load i16*, i16** %10101, align 8
  %10103 = icmp eq i16* %10100, %10102
  br i1 %10103, label %10104, label %10107, !prof !4

10104:                                            ; preds = %10097
  %10105 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10098, i64 0, i32 3
  %10106 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %10105) #11
  store i16* %10106, i16** %10099, align 8
  br label %10107

10107:                                            ; preds = %10097, %10104
  %10108 = phi i16* [ %10106, %10104 ], [ %10100, %10097 ]
  %10109 = getelementptr inbounds i16, i16* %10108, i64 1
  store i16* %10109, i16** %10099, align 8
  store i16 45, i16* %10108, align 2
  %10110 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10098, i64 0, i32 4
  %10111 = load i16, i16* %10110, align 8
  %10112 = or i16 %10111, 45
  store i16 %10112, i16* %10110, align 8
  %10113 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %10114 = load i8*, i8** %10113, align 8
  %10115 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %10116 = load i8*, i8** %10115, align 8
  %10117 = icmp ult i8* %10114, %10116
  br i1 %10117, label %10118, label %10129, !prof !3

10118:                                            ; preds = %10107
  %10119 = load i8, i8* %49, align 1, !range !2
  %10120 = icmp eq i8 %10119, 0
  br i1 %10120, label %10125, label %10121

10121:                                            ; preds = %10118
  %10122 = getelementptr inbounds i8, i8* %10114, i64 1
  store i8* %10122, i8** %10113, align 8
  %10123 = load i8, i8* %10122, align 1
  %10124 = zext i8 %10123 to i16
  br label %10131

10125:                                            ; preds = %10118
  %10126 = getelementptr inbounds i8, i8* %10114, i64 2
  %10127 = bitcast i8* %10126 to i16*
  store i8* %10126, i8** %10113, align 8
  %10128 = load i16, i16* %10127, align 2
  br label %10131

10129:                                            ; preds = %10107
  %10130 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %10131

10131:                                            ; preds = %10129, %10125, %10121
  %10132 = phi i16 [ %10130, %10129 ], [ %10124, %10121 ], [ %10128, %10125 ]
  store i16 %10132, i16* %14, align 2
  %10133 = icmp ugt i16 %10132, 15
  br i1 %10133, label %10134, label %10136

10134:                                            ; preds = %10131
  %10135 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %10135, align 8
  br label %10057

10136:                                            ; preds = %10131
  %10137 = load i8, i8* %44, align 1, !range !2
  %10138 = icmp eq i8 %10137, 0
  br i1 %10138, label %10139, label %10141

10139:                                            ; preds = %10136
  %10140 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %10140, label %10057, label %10141

10141:                                            ; preds = %10136, %10139
  %10142 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %10143 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10142, i64 0, i32 0
  %10144 = load i32, i32* %10143, align 8
  %10145 = icmp eq i32 %10144, 5
  br label %14210

10146:                                            ; preds = %10059
  %10147 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %10148 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10147, i64 0, i32 0
  %10149 = load i32, i32* %10148, align 8
  %10150 = icmp eq i32 %10149, 2
  br i1 %10150, label %10151, label %10199

10151:                                            ; preds = %10146
  %10152 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10147, i64 0, i32 3
  %10153 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %10154 = getelementptr inbounds %class.LiteralBuffer.0, %class.LiteralBuffer.0* %10153, i64 0, i32 0
  %10155 = load i16*, i16** %10154, align 8
  %10156 = getelementptr inbounds %class.LiteralBuffer, %class.LiteralBuffer* %10152, i64 0, i32 0
  %10157 = load i16*, i16** %10156, align 8
  %10158 = icmp eq i16* %10155, %10157
  %10159 = bitcast i16* %10155 to i8*
  br i1 %10158, label %10199, label %10160

10160:                                            ; preds = %10151
  %10161 = ptrtoint i16* %10155 to i64
  %10162 = ptrtoint i16* %10157 to i64
  %10163 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10147, i64 0, i32 3, i32 1
  %10164 = bitcast i16** %10163 to i64*
  %10165 = load i64, i64* %10164, align 8
  %10166 = sub i64 %10165, %10162
  %10167 = ashr exact i64 %10166, 1
  %10168 = trunc i64 %10167 to i32
  %10169 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 2
  %10170 = bitcast i16** %10169 to i64*
  %10171 = load i64, i64* %10170, align 8
  %10172 = sub i64 %10171, %10161
  %10173 = ashr exact i64 %10172, 1
  %10174 = and i64 %10167, 4294967295
  %10175 = icmp ult i64 %10173, %10174
  br i1 %10175, label %10176, label %10186

10176:                                            ; preds = %10160
  %10177 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 3, i64 0
  %10178 = icmp eq i16* %10155, %10177
  br i1 %10178, label %10180, label %10179

10179:                                            ; preds = %10176
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %10159) #11
  br label %10180

10180:                                            ; preds = %10179, %10176
  %10181 = bitcast %class.LiteralBuffer.0* %10153 to i8**
  %10182 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %10174) #11
  %10183 = call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %10182, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)) #11
  %10184 = bitcast i8* %10183 to i16*
  store i8* %10183, i8** %10181, align 8
  %10185 = getelementptr inbounds i16, i16* %10184, i64 %10174
  store i16* %10185, i16** %10169, align 8
  br label %10186

10186:                                            ; preds = %10180, %10160
  %10187 = phi i16* [ %10184, %10180 ], [ %10155, %10160 ]
  %10188 = phi i8* [ %10183, %10180 ], [ %10159, %10160 ]
  %10189 = icmp eq i32 %10168, 0
  br i1 %10189, label %10195, label %10190

10190:                                            ; preds = %10186
  %10191 = bitcast %class.LiteralBuffer* %10152 to i8**
  %10192 = load i8*, i8** %10191, align 8
  %10193 = and i64 %10166, 8589934590
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %10188, i8* align 2 %10192, i64 %10193, i1 false) #11
  %10194 = load i16*, i16** %10154, align 8
  br label %10195

10195:                                            ; preds = %10190, %10186
  %10196 = phi i16* [ %10187, %10186 ], [ %10194, %10190 ]
  %10197 = getelementptr inbounds i16, i16* %10196, i64 %10174
  %10198 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  store i16* %10197, i16** %10198, align 8
  br label %10199

10199:                                            ; preds = %10146, %10151, %10195
  store i32 0, i32* %74, align 8
  br label %14210

10200:                                            ; preds = %10059
  %10201 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %10202 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10201, i64 0, i32 3, i32 1
  %10203 = load i16*, i16** %10202, align 8
  %10204 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10201, i64 0, i32 3, i32 2
  %10205 = load i16*, i16** %10204, align 8
  %10206 = icmp eq i16* %10203, %10205
  br i1 %10206, label %10207, label %10210, !prof !4

10207:                                            ; preds = %10200
  %10208 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10201, i64 0, i32 3
  %10209 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %10208) #11
  store i16* %10209, i16** %10202, align 8
  br label %10210

10210:                                            ; preds = %10200, %10207
  %10211 = phi i16* [ %10209, %10207 ], [ %10203, %10200 ]
  %10212 = getelementptr inbounds i16, i16* %10211, i64 1
  store i16* %10212, i16** %10202, align 8
  store i16 45, i16* %10211, align 2
  %10213 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10201, i64 0, i32 4
  %10214 = load i16, i16* %10213, align 8
  %10215 = or i16 %10214, 45
  store i16 %10215, i16* %10213, align 8
  %10216 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %10217 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10216, i64 0, i32 3, i32 1
  %10218 = load i16*, i16** %10217, align 8
  %10219 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10216, i64 0, i32 3, i32 2
  %10220 = load i16*, i16** %10219, align 8
  %10221 = icmp eq i16* %10218, %10220
  br i1 %10221, label %10222, label %10225, !prof !4

10222:                                            ; preds = %10210
  %10223 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10216, i64 0, i32 3
  %10224 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %10223) #11
  store i16* %10224, i16** %10217, align 8
  br label %10225

10225:                                            ; preds = %10210, %10222
  %10226 = phi i16* [ %10224, %10222 ], [ %10218, %10210 ]
  %10227 = getelementptr inbounds i16, i16* %10226, i64 1
  store i16* %10227, i16** %10217, align 8
  store i16 45, i16* %10226, align 2
  %10228 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10216, i64 0, i32 4
  %10229 = load i16, i16* %10228, align 8
  %10230 = or i16 %10229, 45
  store i16 %10230, i16* %10228, align 8
  %10231 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %10232 = load i16, i16* %14, align 2
  %10233 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10231, i64 0, i32 3, i32 1
  %10234 = load i16*, i16** %10233, align 8
  %10235 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10231, i64 0, i32 3, i32 2
  %10236 = load i16*, i16** %10235, align 8
  %10237 = icmp eq i16* %10234, %10236
  br i1 %10237, label %10238, label %10241, !prof !4

10238:                                            ; preds = %10225
  %10239 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10231, i64 0, i32 3
  %10240 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %10239) #11
  store i16* %10240, i16** %10233, align 8
  br label %10241

10241:                                            ; preds = %10225, %10238
  %10242 = phi i16* [ %10240, %10238 ], [ %10234, %10225 ]
  %10243 = getelementptr inbounds i16, i16* %10242, i64 1
  store i16* %10243, i16** %10233, align 8
  store i16 %10232, i16* %10242, align 2
  %10244 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10231, i64 0, i32 4
  %10245 = load i16, i16* %10244, align 8
  %10246 = or i16 %10245, %10232
  store i16 %10246, i16* %10244, align 8
  store i32 48, i32* %74, align 8
  %10247 = load i8, i8* %49, align 1, !range !2
  %10248 = icmp eq i8 %10247, 0
  br i1 %10248, label %10255, label %10249

10249:                                            ; preds = %10241
  %10250 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %10251 = load i8*, i8** %10250, align 8
  %10252 = load i8, i8* %10251, align 1
  %10253 = zext i8 %10252 to i16
  %10254 = ptrtoint i8* %10251 to i64
  br label %10261

10255:                                            ; preds = %10241
  %10256 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %10257 = load i16*, i16** %10256, align 8
  %10258 = load i16, i16* %10257, align 2
  %10259 = ptrtoint i16* %10257 to i64
  %10260 = bitcast i16* %10257 to i8*
  br label %10261

10261:                                            ; preds = %10255, %10249
  %10262 = phi i8* [ %10251, %10249 ], [ %10260, %10255 ]
  %10263 = phi i64 [ %10254, %10249 ], [ %10259, %10255 ]
  %10264 = phi i16 [ %10253, %10249 ], [ %10258, %10255 ]
  %10265 = icmp eq i16 %10264, 10
  br i1 %10265, label %10266, label %10287

10266:                                            ; preds = %10261
  %10267 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %10268 = load i8, i8* %10267, align 8, !range !2
  %10269 = icmp eq i8 %10268, 0
  br i1 %10269, label %10287, label %10270, !prof !4

10270:                                            ; preds = %10266
  %10271 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %10272 = load i32, i32* %10271, align 8
  %10273 = add nsw i32 %10272, 1
  store i32 %10273, i32* %10271, align 8
  %10274 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %10275 = load i32, i32* %10274, align 8
  %10276 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %10277 = bitcast i8** %10276 to i64*
  %10278 = load i64, i64* %10277, align 8
  %10279 = sub i64 %10263, %10278
  %10280 = trunc i64 %10279 to i32
  %10281 = xor i8 %10247, 1
  %10282 = zext i8 %10281 to i32
  %10283 = ashr i32 %10280, %10282
  %10284 = add i32 %10275, 1
  %10285 = add i32 %10284, %10283
  %10286 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %10285, i32* %10286, align 4
  br label %10287

10287:                                            ; preds = %10270, %10266, %10261
  %10288 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %10289 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %10290 = load i8*, i8** %10289, align 8
  %10291 = icmp ult i8* %10262, %10290
  br i1 %10291, label %10292, label %10301, !prof !3

10292:                                            ; preds = %10287
  br i1 %10248, label %10297, label %10293

10293:                                            ; preds = %10292
  %10294 = getelementptr inbounds i8, i8* %10262, i64 1
  store i8* %10294, i8** %10288, align 8
  %10295 = load i8, i8* %10294, align 1
  %10296 = zext i8 %10295 to i16
  br label %10303

10297:                                            ; preds = %10292
  %10298 = getelementptr inbounds i8, i8* %10262, i64 2
  %10299 = bitcast i8* %10298 to i16*
  store i8* %10298, i8** %10288, align 8
  %10300 = load i16, i16* %10299, align 2
  br label %10303

10301:                                            ; preds = %10287
  %10302 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %10303

10303:                                            ; preds = %10301, %10297, %10293
  %10304 = phi i16 [ %10302, %10301 ], [ %10296, %10293 ], [ %10300, %10297 ]
  store i16 %10304, i16* %14, align 2
  %10305 = icmp ugt i16 %10304, 15
  br i1 %10305, label %10306, label %10308

10306:                                            ; preds = %10303
  %10307 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %10307, align 8
  br label %9683

10308:                                            ; preds = %10303
  %10309 = load i8, i8* %44, align 1, !range !2
  %10310 = icmp eq i8 %10309, 0
  br i1 %10310, label %10311, label %10313

10311:                                            ; preds = %10308
  %10312 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %10312, label %9683, label %10313

10313:                                            ; preds = %10308, %10311
  %10314 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %10315 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10314, i64 0, i32 0
  %10316 = load i32, i32* %10315, align 8
  %10317 = icmp eq i32 %10316, 5
  br label %14210

10318:                                            ; preds = %10090, %73
  %10319 = load i16, i16* %14, align 2
  br label %10320

10320:                                            ; preds = %10318, %10085
  %10321 = phi i16 [ %10319, %10318 ], [ %10083, %10085 ]
  switch i16 %10321, label %10457 [
    i16 45, label %10322
    i16 62, label %10401
    i16 0, label %10403
  ]

10322:                                            ; preds = %10320
  %10323 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %10324 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10323, i64 0, i32 3, i32 1
  %10325 = load i16*, i16** %10324, align 8
  %10326 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10323, i64 0, i32 3, i32 2
  %10327 = load i16*, i16** %10326, align 8
  %10328 = icmp eq i16* %10325, %10327
  br i1 %10328, label %10329, label %10332, !prof !4

10329:                                            ; preds = %10322
  %10330 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10323, i64 0, i32 3
  %10331 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %10330) #11
  store i16* %10331, i16** %10324, align 8
  br label %10332

10332:                                            ; preds = %10322, %10329
  %10333 = phi i16* [ %10331, %10329 ], [ %10325, %10322 ]
  %10334 = getelementptr inbounds i16, i16* %10333, i64 1
  store i16* %10334, i16** %10324, align 8
  store i16 45, i16* %10333, align 2
  %10335 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10323, i64 0, i32 4
  %10336 = load i16, i16* %10335, align 8
  %10337 = or i16 %10336, 45
  store i16 %10337, i16* %10335, align 8
  %10338 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %10339 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10338, i64 0, i32 3, i32 1
  %10340 = load i16*, i16** %10339, align 8
  %10341 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10338, i64 0, i32 3, i32 2
  %10342 = load i16*, i16** %10341, align 8
  %10343 = icmp eq i16* %10340, %10342
  br i1 %10343, label %10344, label %10347, !prof !4

10344:                                            ; preds = %10332
  %10345 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10338, i64 0, i32 3
  %10346 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %10345) #11
  store i16* %10346, i16** %10339, align 8
  br label %10347

10347:                                            ; preds = %10332, %10344
  %10348 = phi i16* [ %10346, %10344 ], [ %10340, %10332 ]
  %10349 = getelementptr inbounds i16, i16* %10348, i64 1
  store i16* %10349, i16** %10339, align 8
  store i16 45, i16* %10348, align 2
  %10350 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10338, i64 0, i32 4
  %10351 = load i16, i16* %10350, align 8
  %10352 = or i16 %10351, 45
  store i16 %10352, i16* %10350, align 8
  %10353 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %10354 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10353, i64 0, i32 3, i32 1
  %10355 = load i16*, i16** %10354, align 8
  %10356 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10353, i64 0, i32 3, i32 2
  %10357 = load i16*, i16** %10356, align 8
  %10358 = icmp eq i16* %10355, %10357
  br i1 %10358, label %10359, label %10362, !prof !4

10359:                                            ; preds = %10347
  %10360 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10353, i64 0, i32 3
  %10361 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %10360) #11
  store i16* %10361, i16** %10354, align 8
  br label %10362

10362:                                            ; preds = %10347, %10359
  %10363 = phi i16* [ %10361, %10359 ], [ %10355, %10347 ]
  %10364 = getelementptr inbounds i16, i16* %10363, i64 1
  store i16* %10364, i16** %10354, align 8
  store i16 33, i16* %10363, align 2
  %10365 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10353, i64 0, i32 4
  %10366 = load i16, i16* %10365, align 8
  %10367 = or i16 %10366, 33
  store i16 %10367, i16* %10365, align 8
  store i32 49, i32* %74, align 8
  %10368 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %10369 = load i8*, i8** %10368, align 8
  %10370 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %10371 = load i8*, i8** %10370, align 8
  %10372 = icmp ult i8* %10369, %10371
  br i1 %10372, label %10373, label %10384, !prof !3

10373:                                            ; preds = %10362
  %10374 = load i8, i8* %49, align 1, !range !2
  %10375 = icmp eq i8 %10374, 0
  br i1 %10375, label %10380, label %10376

10376:                                            ; preds = %10373
  %10377 = getelementptr inbounds i8, i8* %10369, i64 1
  store i8* %10377, i8** %10368, align 8
  %10378 = load i8, i8* %10377, align 1
  %10379 = zext i8 %10378 to i16
  br label %10386

10380:                                            ; preds = %10373
  %10381 = getelementptr inbounds i8, i8* %10369, i64 2
  %10382 = bitcast i8* %10381 to i16*
  store i8* %10381, i8** %10368, align 8
  %10383 = load i16, i16* %10382, align 2
  br label %10386

10384:                                            ; preds = %10362
  %10385 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %10386

10386:                                            ; preds = %10384, %10380, %10376
  %10387 = phi i16 [ %10385, %10384 ], [ %10379, %10376 ], [ %10383, %10380 ]
  store i16 %10387, i16* %14, align 2
  %10388 = icmp ugt i16 %10387, 15
  br i1 %10388, label %10389, label %10391

10389:                                            ; preds = %10386
  %10390 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %10390, align 8
  br label %9862

10391:                                            ; preds = %10386
  %10392 = load i8, i8* %44, align 1, !range !2
  %10393 = icmp eq i8 %10392, 0
  br i1 %10393, label %10394, label %10396

10394:                                            ; preds = %10391
  %10395 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %10395, label %9862, label %10396

10396:                                            ; preds = %10391, %10394
  %10397 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %10398 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10397, i64 0, i32 0
  %10399 = load i32, i32* %10398, align 8
  %10400 = icmp eq i32 %10399, 5
  br label %14210

10401:                                            ; preds = %10320
  %10402 = call zeroext i1 @_ZN5blink13HTMLTokenizer15EmitAndResumeInERNS_15SegmentedStringENS0_5StateE(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i32 0)
  br label %14210

10403:                                            ; preds = %10320
  %10404 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %10405 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10404, i64 0, i32 0
  %10406 = load i32, i32* %10405, align 8
  %10407 = icmp eq i32 %10406, 2
  br i1 %10407, label %10408, label %10456

10408:                                            ; preds = %10403
  %10409 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10404, i64 0, i32 3
  %10410 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %10411 = getelementptr inbounds %class.LiteralBuffer.0, %class.LiteralBuffer.0* %10410, i64 0, i32 0
  %10412 = load i16*, i16** %10411, align 8
  %10413 = getelementptr inbounds %class.LiteralBuffer, %class.LiteralBuffer* %10409, i64 0, i32 0
  %10414 = load i16*, i16** %10413, align 8
  %10415 = icmp eq i16* %10412, %10414
  %10416 = bitcast i16* %10412 to i8*
  br i1 %10415, label %10456, label %10417

10417:                                            ; preds = %10408
  %10418 = ptrtoint i16* %10412 to i64
  %10419 = ptrtoint i16* %10414 to i64
  %10420 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10404, i64 0, i32 3, i32 1
  %10421 = bitcast i16** %10420 to i64*
  %10422 = load i64, i64* %10421, align 8
  %10423 = sub i64 %10422, %10419
  %10424 = ashr exact i64 %10423, 1
  %10425 = trunc i64 %10424 to i32
  %10426 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 2
  %10427 = bitcast i16** %10426 to i64*
  %10428 = load i64, i64* %10427, align 8
  %10429 = sub i64 %10428, %10418
  %10430 = ashr exact i64 %10429, 1
  %10431 = and i64 %10424, 4294967295
  %10432 = icmp ult i64 %10430, %10431
  br i1 %10432, label %10433, label %10443

10433:                                            ; preds = %10417
  %10434 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 3, i64 0
  %10435 = icmp eq i16* %10412, %10434
  br i1 %10435, label %10437, label %10436

10436:                                            ; preds = %10433
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %10416) #11
  br label %10437

10437:                                            ; preds = %10436, %10433
  %10438 = bitcast %class.LiteralBuffer.0* %10410 to i8**
  %10439 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %10431) #11
  %10440 = call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %10439, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)) #11
  %10441 = bitcast i8* %10440 to i16*
  store i8* %10440, i8** %10438, align 8
  %10442 = getelementptr inbounds i16, i16* %10441, i64 %10431
  store i16* %10442, i16** %10426, align 8
  br label %10443

10443:                                            ; preds = %10437, %10417
  %10444 = phi i16* [ %10441, %10437 ], [ %10412, %10417 ]
  %10445 = phi i8* [ %10440, %10437 ], [ %10416, %10417 ]
  %10446 = icmp eq i32 %10425, 0
  br i1 %10446, label %10452, label %10447

10447:                                            ; preds = %10443
  %10448 = bitcast %class.LiteralBuffer* %10409 to i8**
  %10449 = load i8*, i8** %10448, align 8
  %10450 = and i64 %10423, 8589934590
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %10445, i8* align 2 %10449, i64 %10450, i1 false) #11
  %10451 = load i16*, i16** %10411, align 8
  br label %10452

10452:                                            ; preds = %10447, %10443
  %10453 = phi i16* [ %10444, %10443 ], [ %10451, %10447 ]
  %10454 = getelementptr inbounds i16, i16* %10453, i64 %10431
  %10455 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  store i16* %10454, i16** %10455, align 8
  br label %10456

10456:                                            ; preds = %10403, %10408, %10452
  store i32 0, i32* %74, align 8
  br label %14210

10457:                                            ; preds = %10320
  %10458 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %10459 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10458, i64 0, i32 3, i32 1
  %10460 = load i16*, i16** %10459, align 8
  %10461 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10458, i64 0, i32 3, i32 2
  %10462 = load i16*, i16** %10461, align 8
  %10463 = icmp eq i16* %10460, %10462
  br i1 %10463, label %10464, label %10467, !prof !4

10464:                                            ; preds = %10457
  %10465 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10458, i64 0, i32 3
  %10466 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %10465) #11
  store i16* %10466, i16** %10459, align 8
  br label %10467

10467:                                            ; preds = %10457, %10464
  %10468 = phi i16* [ %10466, %10464 ], [ %10460, %10457 ]
  %10469 = getelementptr inbounds i16, i16* %10468, i64 1
  store i16* %10469, i16** %10459, align 8
  store i16 45, i16* %10468, align 2
  %10470 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10458, i64 0, i32 4
  %10471 = load i16, i16* %10470, align 8
  %10472 = or i16 %10471, 45
  store i16 %10472, i16* %10470, align 8
  %10473 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %10474 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10473, i64 0, i32 3, i32 1
  %10475 = load i16*, i16** %10474, align 8
  %10476 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10473, i64 0, i32 3, i32 2
  %10477 = load i16*, i16** %10476, align 8
  %10478 = icmp eq i16* %10475, %10477
  br i1 %10478, label %10479, label %10482, !prof !4

10479:                                            ; preds = %10467
  %10480 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10473, i64 0, i32 3
  %10481 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %10480) #11
  store i16* %10481, i16** %10474, align 8
  br label %10482

10482:                                            ; preds = %10467, %10479
  %10483 = phi i16* [ %10481, %10479 ], [ %10475, %10467 ]
  %10484 = getelementptr inbounds i16, i16* %10483, i64 1
  store i16* %10484, i16** %10474, align 8
  store i16 45, i16* %10483, align 2
  %10485 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10473, i64 0, i32 4
  %10486 = load i16, i16* %10485, align 8
  %10487 = or i16 %10486, 45
  store i16 %10487, i16* %10485, align 8
  %10488 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %10489 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10488, i64 0, i32 3, i32 1
  %10490 = load i16*, i16** %10489, align 8
  %10491 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10488, i64 0, i32 3, i32 2
  %10492 = load i16*, i16** %10491, align 8
  %10493 = icmp eq i16* %10490, %10492
  br i1 %10493, label %10494, label %10497, !prof !4

10494:                                            ; preds = %10482
  %10495 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10488, i64 0, i32 3
  %10496 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %10495) #11
  store i16* %10496, i16** %10489, align 8
  br label %10497

10497:                                            ; preds = %10482, %10494
  %10498 = phi i16* [ %10496, %10494 ], [ %10490, %10482 ]
  %10499 = getelementptr inbounds i16, i16* %10498, i64 1
  store i16* %10499, i16** %10489, align 8
  store i16 33, i16* %10498, align 2
  %10500 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10488, i64 0, i32 4
  %10501 = load i16, i16* %10500, align 8
  %10502 = or i16 %10501, 33
  store i16 %10502, i16* %10500, align 8
  %10503 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %10504 = load i16, i16* %14, align 2
  %10505 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10503, i64 0, i32 3, i32 1
  %10506 = load i16*, i16** %10505, align 8
  %10507 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10503, i64 0, i32 3, i32 2
  %10508 = load i16*, i16** %10507, align 8
  %10509 = icmp eq i16* %10506, %10508
  br i1 %10509, label %10510, label %10513, !prof !4

10510:                                            ; preds = %10497
  %10511 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10503, i64 0, i32 3
  %10512 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %10511) #11
  store i16* %10512, i16** %10505, align 8
  br label %10513

10513:                                            ; preds = %10497, %10510
  %10514 = phi i16* [ %10512, %10510 ], [ %10506, %10497 ]
  %10515 = getelementptr inbounds i16, i16* %10514, i64 1
  store i16* %10515, i16** %10505, align 8
  store i16 %10504, i16* %10514, align 2
  %10516 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10503, i64 0, i32 4
  %10517 = load i16, i16* %10516, align 8
  %10518 = or i16 %10517, %10504
  store i16 %10518, i16* %10516, align 8
  store i32 48, i32* %74, align 8
  %10519 = load i8, i8* %49, align 1, !range !2
  %10520 = icmp eq i8 %10519, 0
  br i1 %10520, label %10527, label %10521

10521:                                            ; preds = %10513
  %10522 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %10523 = load i8*, i8** %10522, align 8
  %10524 = load i8, i8* %10523, align 1
  %10525 = zext i8 %10524 to i16
  %10526 = ptrtoint i8* %10523 to i64
  br label %10533

10527:                                            ; preds = %10513
  %10528 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %10529 = load i16*, i16** %10528, align 8
  %10530 = load i16, i16* %10529, align 2
  %10531 = ptrtoint i16* %10529 to i64
  %10532 = bitcast i16* %10529 to i8*
  br label %10533

10533:                                            ; preds = %10527, %10521
  %10534 = phi i8* [ %10523, %10521 ], [ %10532, %10527 ]
  %10535 = phi i64 [ %10526, %10521 ], [ %10531, %10527 ]
  %10536 = phi i16 [ %10525, %10521 ], [ %10530, %10527 ]
  %10537 = icmp eq i16 %10536, 10
  br i1 %10537, label %10538, label %10559

10538:                                            ; preds = %10533
  %10539 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %10540 = load i8, i8* %10539, align 8, !range !2
  %10541 = icmp eq i8 %10540, 0
  br i1 %10541, label %10559, label %10542, !prof !4

10542:                                            ; preds = %10538
  %10543 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %10544 = load i32, i32* %10543, align 8
  %10545 = add nsw i32 %10544, 1
  store i32 %10545, i32* %10543, align 8
  %10546 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %10547 = load i32, i32* %10546, align 8
  %10548 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %10549 = bitcast i8** %10548 to i64*
  %10550 = load i64, i64* %10549, align 8
  %10551 = sub i64 %10535, %10550
  %10552 = trunc i64 %10551 to i32
  %10553 = xor i8 %10519, 1
  %10554 = zext i8 %10553 to i32
  %10555 = ashr i32 %10552, %10554
  %10556 = add i32 %10547, 1
  %10557 = add i32 %10556, %10555
  %10558 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %10557, i32* %10558, align 4
  br label %10559

10559:                                            ; preds = %10542, %10538, %10533
  %10560 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %10561 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %10562 = load i8*, i8** %10561, align 8
  %10563 = icmp ult i8* %10534, %10562
  br i1 %10563, label %10564, label %10573, !prof !3

10564:                                            ; preds = %10559
  br i1 %10520, label %10569, label %10565

10565:                                            ; preds = %10564
  %10566 = getelementptr inbounds i8, i8* %10534, i64 1
  store i8* %10566, i8** %10560, align 8
  %10567 = load i8, i8* %10566, align 1
  %10568 = zext i8 %10567 to i16
  br label %10575

10569:                                            ; preds = %10564
  %10570 = getelementptr inbounds i8, i8* %10534, i64 2
  %10571 = bitcast i8* %10570 to i16*
  store i8* %10570, i8** %10560, align 8
  %10572 = load i16, i16* %10571, align 2
  br label %10575

10573:                                            ; preds = %10559
  %10574 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %10575

10575:                                            ; preds = %10573, %10569, %10565
  %10576 = phi i16 [ %10574, %10573 ], [ %10568, %10565 ], [ %10572, %10569 ]
  store i16 %10576, i16* %14, align 2
  %10577 = icmp ugt i16 %10576, 15
  br i1 %10577, label %10578, label %10580

10578:                                            ; preds = %10575
  %10579 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %10579, align 8
  br label %9683

10580:                                            ; preds = %10575
  %10581 = load i8, i8* %44, align 1, !range !2
  %10582 = icmp eq i8 %10581, 0
  br i1 %10582, label %10583, label %10585

10583:                                            ; preds = %10580
  %10584 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %10584, label %9683, label %10585

10585:                                            ; preds = %10580, %10583
  %10586 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %10587 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10586, i64 0, i32 0
  %10588 = load i32, i32* %10587, align 8
  %10589 = icmp eq i32 %10588, 5
  br label %14210

10590:                                            ; preds = %73, %9225
  %10591 = load i16, i16* %14, align 2
  br label %10592

10592:                                            ; preds = %10590, %9223
  %10593 = phi i16 [ %10591, %10590 ], [ %9221, %9223 ]
  switch i16 %10593, label %10760 [
    i16 32, label %10594
    i16 10, label %10594
    i16 9, label %10594
    i16 12, label %10594
    i16 0, label %10666
  ]

10594:                                            ; preds = %10592, %10592, %10592, %10592
  store i32 53, i32* %74, align 8
  %10595 = load i8, i8* %49, align 1, !range !2
  %10596 = icmp eq i8 %10595, 0
  br i1 %10596, label %10603, label %10597

10597:                                            ; preds = %10594
  %10598 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %10599 = load i8*, i8** %10598, align 8
  %10600 = load i8, i8* %10599, align 1
  %10601 = zext i8 %10600 to i16
  %10602 = ptrtoint i8* %10599 to i64
  br label %10609

10603:                                            ; preds = %10594
  %10604 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %10605 = load i16*, i16** %10604, align 8
  %10606 = load i16, i16* %10605, align 2
  %10607 = ptrtoint i16* %10605 to i64
  %10608 = bitcast i16* %10605 to i8*
  br label %10609

10609:                                            ; preds = %10603, %10597
  %10610 = phi i8* [ %10599, %10597 ], [ %10608, %10603 ]
  %10611 = phi i64 [ %10602, %10597 ], [ %10607, %10603 ]
  %10612 = phi i16 [ %10601, %10597 ], [ %10606, %10603 ]
  %10613 = icmp eq i16 %10612, 10
  br i1 %10613, label %10614, label %10635

10614:                                            ; preds = %10609
  %10615 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %10616 = load i8, i8* %10615, align 8, !range !2
  %10617 = icmp eq i8 %10616, 0
  br i1 %10617, label %10635, label %10618, !prof !4

10618:                                            ; preds = %10614
  %10619 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %10620 = load i32, i32* %10619, align 8
  %10621 = add nsw i32 %10620, 1
  store i32 %10621, i32* %10619, align 8
  %10622 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %10623 = load i32, i32* %10622, align 8
  %10624 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %10625 = bitcast i8** %10624 to i64*
  %10626 = load i64, i64* %10625, align 8
  %10627 = sub i64 %10611, %10626
  %10628 = trunc i64 %10627 to i32
  %10629 = xor i8 %10595, 1
  %10630 = zext i8 %10629 to i32
  %10631 = ashr i32 %10628, %10630
  %10632 = add i32 %10623, 1
  %10633 = add i32 %10632, %10631
  %10634 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %10633, i32* %10634, align 4
  br label %10635

10635:                                            ; preds = %10618, %10614, %10609
  %10636 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %10637 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %10638 = load i8*, i8** %10637, align 8
  %10639 = icmp ult i8* %10610, %10638
  br i1 %10639, label %10640, label %10649, !prof !3

10640:                                            ; preds = %10635
  br i1 %10596, label %10645, label %10641

10641:                                            ; preds = %10640
  %10642 = getelementptr inbounds i8, i8* %10610, i64 1
  store i8* %10642, i8** %10636, align 8
  %10643 = load i8, i8* %10642, align 1
  %10644 = zext i8 %10643 to i16
  br label %10651

10645:                                            ; preds = %10640
  %10646 = getelementptr inbounds i8, i8* %10610, i64 2
  %10647 = bitcast i8* %10646 to i16*
  store i8* %10646, i8** %10636, align 8
  %10648 = load i16, i16* %10647, align 2
  br label %10651

10649:                                            ; preds = %10635
  %10650 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %10651

10651:                                            ; preds = %10649, %10645, %10641
  %10652 = phi i16 [ %10650, %10649 ], [ %10644, %10641 ], [ %10648, %10645 ]
  store i16 %10652, i16* %14, align 2
  %10653 = icmp ugt i16 %10652, 15
  br i1 %10653, label %10654, label %10656

10654:                                            ; preds = %10651
  %10655 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %10655, align 8
  br label %10761

10656:                                            ; preds = %10651
  %10657 = load i8, i8* %44, align 1, !range !2
  %10658 = icmp eq i8 %10657, 0
  br i1 %10658, label %10659, label %10661

10659:                                            ; preds = %10656
  %10660 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %10660, label %10761, label %10661

10661:                                            ; preds = %10656, %10659
  %10662 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %10663 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10662, i64 0, i32 0
  %10664 = load i32, i32* %10663, align 8
  %10665 = icmp eq i32 %10664, 5
  br label %14210

10666:                                            ; preds = %10592
  %10667 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %10668 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10667, i64 0, i32 0
  store i32 1, i32* %10668, align 8
  %10669 = call noalias i8* @malloc(i64 48) #11
  store i8 0, i8* %10669, align 8
  %10670 = getelementptr inbounds i8, i8* %10669, i64 1
  store i8 0, i8* %10670, align 1
  %10671 = getelementptr inbounds i8, i8* %10669, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %10671, i8 0, i64 33, i1 false) #11
  %10672 = ptrtoint i8* %10669 to i64
  %10673 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10667, i64 0, i32 8
  %10674 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10673, i64 0, i32 0, i32 0, i32 0
  %10675 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %10674, align 8
  %10676 = bitcast %"class.std::__1::unique_ptr"* %10673 to i64*
  store i64 %10672, i64* %10676, align 8
  %10677 = icmp eq %"class.blink::DoctypeData"* %10675, null
  br i1 %10677, label %10702, label %10678

10678:                                            ; preds = %10666
  %10679 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %10675, i64 0, i32 4, i32 0, i32 0, i32 0
  %10680 = load i16*, i16** %10679, align 8
  %10681 = icmp eq i16* %10680, null
  %10682 = bitcast i16* %10680 to i8*
  br i1 %10681, label %10689, label %10683, !prof !3

10683:                                            ; preds = %10678
  %10684 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %10675, i64 0, i32 4, i32 0, i32 0, i32 2
  %10685 = load i32, i32* %10684, align 4
  %10686 = icmp eq i32 %10685, 0
  br i1 %10686, label %10688, label %10687, !prof !4

10687:                                            ; preds = %10683
  store i32 0, i32* %10684, align 4
  br label %10688

10688:                                            ; preds = %10687, %10683
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %10682) #11
  store i16* null, i16** %10679, align 8
  br label %10689

10689:                                            ; preds = %10688, %10678
  %10690 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %10675, i64 0, i32 3, i32 0, i32 0, i32 0
  %10691 = load i16*, i16** %10690, align 8
  %10692 = icmp eq i16* %10691, null
  %10693 = bitcast i16* %10691 to i8*
  br i1 %10692, label %10700, label %10694, !prof !3

10694:                                            ; preds = %10689
  %10695 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %10675, i64 0, i32 3, i32 0, i32 0, i32 2
  %10696 = load i32, i32* %10695, align 4
  %10697 = icmp eq i32 %10696, 0
  br i1 %10697, label %10699, label %10698, !prof !4

10698:                                            ; preds = %10694
  store i32 0, i32* %10695, align 4
  br label %10699

10699:                                            ; preds = %10698, %10694
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %10693) #11
  br label %10700

10700:                                            ; preds = %10699, %10689
  %10701 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %10675, i64 0, i32 0
  call void @free(i8* %10701) #11
  br label %10702

10702:                                            ; preds = %10666, %10700
  %10703 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %10704 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10703, i64 0, i32 8, i32 0, i32 0, i32 0
  %10705 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %10704, align 8
  %10706 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %10705, i64 0, i32 5
  store i8 1, i8* %10706, align 8
  %10707 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %10708 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10707, i64 0, i32 0
  %10709 = load i32, i32* %10708, align 8
  %10710 = icmp eq i32 %10709, 2
  br i1 %10710, label %10711, label %10759

10711:                                            ; preds = %10702
  %10712 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10707, i64 0, i32 3
  %10713 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %10714 = getelementptr inbounds %class.LiteralBuffer.0, %class.LiteralBuffer.0* %10713, i64 0, i32 0
  %10715 = load i16*, i16** %10714, align 8
  %10716 = getelementptr inbounds %class.LiteralBuffer, %class.LiteralBuffer* %10712, i64 0, i32 0
  %10717 = load i16*, i16** %10716, align 8
  %10718 = icmp eq i16* %10715, %10717
  %10719 = bitcast i16* %10715 to i8*
  br i1 %10718, label %10759, label %10720

10720:                                            ; preds = %10711
  %10721 = ptrtoint i16* %10715 to i64
  %10722 = ptrtoint i16* %10717 to i64
  %10723 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10707, i64 0, i32 3, i32 1
  %10724 = bitcast i16** %10723 to i64*
  %10725 = load i64, i64* %10724, align 8
  %10726 = sub i64 %10725, %10722
  %10727 = ashr exact i64 %10726, 1
  %10728 = trunc i64 %10727 to i32
  %10729 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 2
  %10730 = bitcast i16** %10729 to i64*
  %10731 = load i64, i64* %10730, align 8
  %10732 = sub i64 %10731, %10721
  %10733 = ashr exact i64 %10732, 1
  %10734 = and i64 %10727, 4294967295
  %10735 = icmp ult i64 %10733, %10734
  br i1 %10735, label %10736, label %10746

10736:                                            ; preds = %10720
  %10737 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 3, i64 0
  %10738 = icmp eq i16* %10715, %10737
  br i1 %10738, label %10740, label %10739

10739:                                            ; preds = %10736
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %10719) #11
  br label %10740

10740:                                            ; preds = %10739, %10736
  %10741 = bitcast %class.LiteralBuffer.0* %10713 to i8**
  %10742 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %10734) #11
  %10743 = call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %10742, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)) #11
  %10744 = bitcast i8* %10743 to i16*
  store i8* %10743, i8** %10741, align 8
  %10745 = getelementptr inbounds i16, i16* %10744, i64 %10734
  store i16* %10745, i16** %10729, align 8
  br label %10746

10746:                                            ; preds = %10740, %10720
  %10747 = phi i16* [ %10744, %10740 ], [ %10715, %10720 ]
  %10748 = phi i8* [ %10743, %10740 ], [ %10719, %10720 ]
  %10749 = icmp eq i32 %10728, 0
  br i1 %10749, label %10755, label %10750

10750:                                            ; preds = %10746
  %10751 = bitcast %class.LiteralBuffer* %10712 to i8**
  %10752 = load i8*, i8** %10751, align 8
  %10753 = and i64 %10726, 8589934590
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %10748, i8* align 2 %10752, i64 %10753, i1 false) #11
  %10754 = load i16*, i16** %10714, align 8
  br label %10755

10755:                                            ; preds = %10750, %10746
  %10756 = phi i16* [ %10747, %10746 ], [ %10754, %10750 ]
  %10757 = getelementptr inbounds i16, i16* %10756, i64 %10734
  %10758 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  store i16* %10757, i16** %10758, align 8
  br label %10759

10759:                                            ; preds = %10702, %10711, %10755
  store i32 0, i32* %74, align 8
  br label %14210

10760:                                            ; preds = %10592
  store i32 53, i32* %74, align 8
  br label %10763

10761:                                            ; preds = %10659, %73, %10654
  %10762 = load i16, i16* %14, align 2
  br label %10763

10763:                                            ; preds = %10761, %10760
  %10764 = phi i16 [ %10762, %10761 ], [ %10593, %10760 ]
  %10765 = icmp ult i16 %10764, 128
  br i1 %10765, label %10766, label %10781

10766:                                            ; preds = %10763
  %10767 = zext i16 %10764 to i64
  %10768 = getelementptr inbounds [128 x i8], [128 x i8]* bitcast (<{ [63 x i8], [65 x i8] }>* @_ZN5blinkL21character_scan_flags_E to [128 x i8]*), i64 0, i64 %10767
  %10769 = load i8, i8* %10768, align 1
  %10770 = and i8 %10769, 6
  %10771 = icmp eq i8 %10770, 0
  br i1 %10771, label %10781, label %10772

10772:                                            ; preds = %10766
  %10773 = call zeroext i1 @_ZN5blink13HTMLTokenizer21SkipWhitespacesHelperERNS_15SegmentedStringERDs(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %10773, label %10774, label %10776

10774:                                            ; preds = %10772
  %10775 = load i16, i16* %14, align 2
  br label %10781

10776:                                            ; preds = %10772
  %10777 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %10778 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10777, i64 0, i32 0
  %10779 = load i32, i32* %10778, align 8
  %10780 = icmp eq i32 %10779, 5
  br label %14210

10781:                                            ; preds = %10774, %10763, %10766
  %10782 = phi i16 [ %10775, %10774 ], [ %10764, %10763 ], [ %10764, %10766 ]
  switch i16 %10782, label %10919 [
    i16 62, label %10783
    i16 0, label %10825
  ]

10783:                                            ; preds = %10781
  %10784 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %10785 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10784, i64 0, i32 0
  store i32 1, i32* %10785, align 8
  %10786 = call noalias i8* @malloc(i64 48) #11
  store i8 0, i8* %10786, align 8
  %10787 = getelementptr inbounds i8, i8* %10786, i64 1
  store i8 0, i8* %10787, align 1
  %10788 = getelementptr inbounds i8, i8* %10786, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %10788, i8 0, i64 33, i1 false) #11
  %10789 = ptrtoint i8* %10786 to i64
  %10790 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10784, i64 0, i32 8
  %10791 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10790, i64 0, i32 0, i32 0, i32 0
  %10792 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %10791, align 8
  %10793 = bitcast %"class.std::__1::unique_ptr"* %10790 to i64*
  store i64 %10789, i64* %10793, align 8
  %10794 = icmp eq %"class.blink::DoctypeData"* %10792, null
  br i1 %10794, label %10819, label %10795

10795:                                            ; preds = %10783
  %10796 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %10792, i64 0, i32 4, i32 0, i32 0, i32 0
  %10797 = load i16*, i16** %10796, align 8
  %10798 = icmp eq i16* %10797, null
  %10799 = bitcast i16* %10797 to i8*
  br i1 %10798, label %10806, label %10800, !prof !3

10800:                                            ; preds = %10795
  %10801 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %10792, i64 0, i32 4, i32 0, i32 0, i32 2
  %10802 = load i32, i32* %10801, align 4
  %10803 = icmp eq i32 %10802, 0
  br i1 %10803, label %10805, label %10804, !prof !4

10804:                                            ; preds = %10800
  store i32 0, i32* %10801, align 4
  br label %10805

10805:                                            ; preds = %10804, %10800
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %10799) #11
  store i16* null, i16** %10796, align 8
  br label %10806

10806:                                            ; preds = %10805, %10795
  %10807 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %10792, i64 0, i32 3, i32 0, i32 0, i32 0
  %10808 = load i16*, i16** %10807, align 8
  %10809 = icmp eq i16* %10808, null
  %10810 = bitcast i16* %10808 to i8*
  br i1 %10809, label %10817, label %10811, !prof !3

10811:                                            ; preds = %10806
  %10812 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %10792, i64 0, i32 3, i32 0, i32 0, i32 2
  %10813 = load i32, i32* %10812, align 4
  %10814 = icmp eq i32 %10813, 0
  br i1 %10814, label %10816, label %10815, !prof !4

10815:                                            ; preds = %10811
  store i32 0, i32* %10812, align 4
  br label %10816

10816:                                            ; preds = %10815, %10811
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %10810) #11
  br label %10817

10817:                                            ; preds = %10816, %10806
  %10818 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %10792, i64 0, i32 0
  call void @free(i8* %10818) #11
  br label %10819

10819:                                            ; preds = %10783, %10817
  %10820 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %10821 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10820, i64 0, i32 8, i32 0, i32 0, i32 0
  %10822 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %10821, align 8
  %10823 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %10822, i64 0, i32 5
  store i8 1, i8* %10823, align 8
  %10824 = call zeroext i1 @_ZN5blink13HTMLTokenizer15EmitAndResumeInERNS_15SegmentedStringENS0_5StateE(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i32 0)
  br label %14210

10825:                                            ; preds = %10781
  %10826 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %10827 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10826, i64 0, i32 0
  store i32 1, i32* %10827, align 8
  %10828 = call noalias i8* @malloc(i64 48) #11
  store i8 0, i8* %10828, align 8
  %10829 = getelementptr inbounds i8, i8* %10828, i64 1
  store i8 0, i8* %10829, align 1
  %10830 = getelementptr inbounds i8, i8* %10828, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %10830, i8 0, i64 33, i1 false) #11
  %10831 = ptrtoint i8* %10828 to i64
  %10832 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10826, i64 0, i32 8
  %10833 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10832, i64 0, i32 0, i32 0, i32 0
  %10834 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %10833, align 8
  %10835 = bitcast %"class.std::__1::unique_ptr"* %10832 to i64*
  store i64 %10831, i64* %10835, align 8
  %10836 = icmp eq %"class.blink::DoctypeData"* %10834, null
  br i1 %10836, label %10861, label %10837

10837:                                            ; preds = %10825
  %10838 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %10834, i64 0, i32 4, i32 0, i32 0, i32 0
  %10839 = load i16*, i16** %10838, align 8
  %10840 = icmp eq i16* %10839, null
  %10841 = bitcast i16* %10839 to i8*
  br i1 %10840, label %10848, label %10842, !prof !3

10842:                                            ; preds = %10837
  %10843 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %10834, i64 0, i32 4, i32 0, i32 0, i32 2
  %10844 = load i32, i32* %10843, align 4
  %10845 = icmp eq i32 %10844, 0
  br i1 %10845, label %10847, label %10846, !prof !4

10846:                                            ; preds = %10842
  store i32 0, i32* %10843, align 4
  br label %10847

10847:                                            ; preds = %10846, %10842
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %10841) #11
  store i16* null, i16** %10838, align 8
  br label %10848

10848:                                            ; preds = %10847, %10837
  %10849 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %10834, i64 0, i32 3, i32 0, i32 0, i32 0
  %10850 = load i16*, i16** %10849, align 8
  %10851 = icmp eq i16* %10850, null
  %10852 = bitcast i16* %10850 to i8*
  br i1 %10851, label %10859, label %10853, !prof !3

10853:                                            ; preds = %10848
  %10854 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %10834, i64 0, i32 3, i32 0, i32 0, i32 2
  %10855 = load i32, i32* %10854, align 4
  %10856 = icmp eq i32 %10855, 0
  br i1 %10856, label %10858, label %10857, !prof !4

10857:                                            ; preds = %10853
  store i32 0, i32* %10854, align 4
  br label %10858

10858:                                            ; preds = %10857, %10853
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %10852) #11
  br label %10859

10859:                                            ; preds = %10858, %10848
  %10860 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %10834, i64 0, i32 0
  call void @free(i8* %10860) #11
  br label %10861

10861:                                            ; preds = %10825, %10859
  %10862 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %10863 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10862, i64 0, i32 8, i32 0, i32 0, i32 0
  %10864 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %10863, align 8
  %10865 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %10864, i64 0, i32 5
  store i8 1, i8* %10865, align 8
  %10866 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %10867 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10866, i64 0, i32 0
  %10868 = load i32, i32* %10867, align 8
  %10869 = icmp eq i32 %10868, 2
  br i1 %10869, label %10870, label %10918

10870:                                            ; preds = %10861
  %10871 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10866, i64 0, i32 3
  %10872 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %10873 = getelementptr inbounds %class.LiteralBuffer.0, %class.LiteralBuffer.0* %10872, i64 0, i32 0
  %10874 = load i16*, i16** %10873, align 8
  %10875 = getelementptr inbounds %class.LiteralBuffer, %class.LiteralBuffer* %10871, i64 0, i32 0
  %10876 = load i16*, i16** %10875, align 8
  %10877 = icmp eq i16* %10874, %10876
  %10878 = bitcast i16* %10874 to i8*
  br i1 %10877, label %10918, label %10879

10879:                                            ; preds = %10870
  %10880 = ptrtoint i16* %10874 to i64
  %10881 = ptrtoint i16* %10876 to i64
  %10882 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10866, i64 0, i32 3, i32 1
  %10883 = bitcast i16** %10882 to i64*
  %10884 = load i64, i64* %10883, align 8
  %10885 = sub i64 %10884, %10881
  %10886 = ashr exact i64 %10885, 1
  %10887 = trunc i64 %10886 to i32
  %10888 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 2
  %10889 = bitcast i16** %10888 to i64*
  %10890 = load i64, i64* %10889, align 8
  %10891 = sub i64 %10890, %10880
  %10892 = ashr exact i64 %10891, 1
  %10893 = and i64 %10886, 4294967295
  %10894 = icmp ult i64 %10892, %10893
  br i1 %10894, label %10895, label %10905

10895:                                            ; preds = %10879
  %10896 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 3, i64 0
  %10897 = icmp eq i16* %10874, %10896
  br i1 %10897, label %10899, label %10898

10898:                                            ; preds = %10895
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %10878) #11
  br label %10899

10899:                                            ; preds = %10898, %10895
  %10900 = bitcast %class.LiteralBuffer.0* %10872 to i8**
  %10901 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %10893) #11
  %10902 = call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %10901, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)) #11
  %10903 = bitcast i8* %10902 to i16*
  store i8* %10902, i8** %10900, align 8
  %10904 = getelementptr inbounds i16, i16* %10903, i64 %10893
  store i16* %10904, i16** %10888, align 8
  br label %10905

10905:                                            ; preds = %10899, %10879
  %10906 = phi i16* [ %10903, %10899 ], [ %10874, %10879 ]
  %10907 = phi i8* [ %10902, %10899 ], [ %10878, %10879 ]
  %10908 = icmp eq i32 %10887, 0
  br i1 %10908, label %10914, label %10909

10909:                                            ; preds = %10905
  %10910 = bitcast %class.LiteralBuffer* %10871 to i8**
  %10911 = load i8*, i8** %10910, align 8
  %10912 = and i64 %10885, 8589934590
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %10907, i8* align 2 %10911, i64 %10912, i1 false) #11
  %10913 = load i16*, i16** %10873, align 8
  br label %10914

10914:                                            ; preds = %10909, %10905
  %10915 = phi i16* [ %10906, %10905 ], [ %10913, %10909 ]
  %10916 = getelementptr inbounds i16, i16* %10915, i64 %10893
  %10917 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  store i16* %10916, i16** %10917, align 8
  br label %10918

10918:                                            ; preds = %10861, %10870, %10914
  store i32 0, i32* %74, align 8
  br label %14210

10919:                                            ; preds = %10781
  %10920 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %10921 = add i16 %10782, -65
  %10922 = icmp ult i16 %10921, 26
  %10923 = select i1 %10922, i16 32, i16 0
  %10924 = or i16 %10923, %10782
  call void @_ZN5blink9HTMLToken12BeginDOCTYPEEDs(%"class.blink::HTMLToken"* %10920, i16 zeroext %10924)
  store i32 54, i32* %74, align 8
  %10925 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %10926 = load i8*, i8** %10925, align 8
  %10927 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %10928 = load i8*, i8** %10927, align 8
  %10929 = icmp ult i8* %10926, %10928
  br i1 %10929, label %10930, label %10941, !prof !3

10930:                                            ; preds = %10919
  %10931 = load i8, i8* %49, align 1, !range !2
  %10932 = icmp eq i8 %10931, 0
  br i1 %10932, label %10937, label %10933

10933:                                            ; preds = %10930
  %10934 = getelementptr inbounds i8, i8* %10926, i64 1
  store i8* %10934, i8** %10925, align 8
  %10935 = load i8, i8* %10934, align 1
  %10936 = zext i8 %10935 to i16
  br label %10943

10937:                                            ; preds = %10930
  %10938 = getelementptr inbounds i8, i8* %10926, i64 2
  %10939 = bitcast i8* %10938 to i16*
  store i8* %10938, i8** %10925, align 8
  %10940 = load i16, i16* %10939, align 2
  br label %10943

10941:                                            ; preds = %10919
  %10942 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %10943

10943:                                            ; preds = %10941, %10937, %10933
  %10944 = phi i16 [ %10942, %10941 ], [ %10936, %10933 ], [ %10940, %10937 ]
  store i16 %10944, i16* %14, align 2
  %10945 = icmp ugt i16 %10944, 15
  br i1 %10945, label %10946, label %10948

10946:                                            ; preds = %10943
  %10947 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %10947, align 8
  br label %10960

10948:                                            ; preds = %10943
  %10949 = load i8, i8* %44, align 1, !range !2
  %10950 = icmp eq i8 %10949, 0
  br i1 %10950, label %10951, label %10953

10951:                                            ; preds = %10948
  %10952 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %10952, label %10958, label %10953

10953:                                            ; preds = %10948, %10951
  %10954 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %10955 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %10954, i64 0, i32 0
  %10956 = load i32, i32* %10955, align 8
  %10957 = icmp eq i32 %10956, 5
  br label %14210

10958:                                            ; preds = %11135, %10951, %73, %11140
  %10959 = load i16, i16* %14, align 2
  br label %10960

10960:                                            ; preds = %10946, %10958
  %10961 = phi i16 [ %10959, %10958 ], [ %10944, %10946 ]
  switch i16 %10961, label %11094 [
    i16 32, label %10962
    i16 10, label %10962
    i16 9, label %10962
    i16 12, label %10962
    i16 62, label %11034
    i16 0, label %11036
  ]

10962:                                            ; preds = %10960, %10960, %10960, %10960
  store i32 55, i32* %74, align 8
  %10963 = load i8, i8* %49, align 1, !range !2
  %10964 = icmp eq i8 %10963, 0
  br i1 %10964, label %10971, label %10965

10965:                                            ; preds = %10962
  %10966 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %10967 = load i8*, i8** %10966, align 8
  %10968 = load i8, i8* %10967, align 1
  %10969 = zext i8 %10968 to i16
  %10970 = ptrtoint i8* %10967 to i64
  br label %10977

10971:                                            ; preds = %10962
  %10972 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %10973 = load i16*, i16** %10972, align 8
  %10974 = load i16, i16* %10973, align 2
  %10975 = ptrtoint i16* %10973 to i64
  %10976 = bitcast i16* %10973 to i8*
  br label %10977

10977:                                            ; preds = %10971, %10965
  %10978 = phi i8* [ %10967, %10965 ], [ %10976, %10971 ]
  %10979 = phi i64 [ %10970, %10965 ], [ %10975, %10971 ]
  %10980 = phi i16 [ %10969, %10965 ], [ %10974, %10971 ]
  %10981 = icmp eq i16 %10980, 10
  br i1 %10981, label %10982, label %11003

10982:                                            ; preds = %10977
  %10983 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %10984 = load i8, i8* %10983, align 8, !range !2
  %10985 = icmp eq i8 %10984, 0
  br i1 %10985, label %11003, label %10986, !prof !4

10986:                                            ; preds = %10982
  %10987 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %10988 = load i32, i32* %10987, align 8
  %10989 = add nsw i32 %10988, 1
  store i32 %10989, i32* %10987, align 8
  %10990 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %10991 = load i32, i32* %10990, align 8
  %10992 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %10993 = bitcast i8** %10992 to i64*
  %10994 = load i64, i64* %10993, align 8
  %10995 = sub i64 %10979, %10994
  %10996 = trunc i64 %10995 to i32
  %10997 = xor i8 %10963, 1
  %10998 = zext i8 %10997 to i32
  %10999 = ashr i32 %10996, %10998
  %11000 = add i32 %10991, 1
  %11001 = add i32 %11000, %10999
  %11002 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %11001, i32* %11002, align 4
  br label %11003

11003:                                            ; preds = %10986, %10982, %10977
  %11004 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %11005 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %11006 = load i8*, i8** %11005, align 8
  %11007 = icmp ult i8* %10978, %11006
  br i1 %11007, label %11008, label %11017, !prof !3

11008:                                            ; preds = %11003
  br i1 %10964, label %11013, label %11009

11009:                                            ; preds = %11008
  %11010 = getelementptr inbounds i8, i8* %10978, i64 1
  store i8* %11010, i8** %11004, align 8
  %11011 = load i8, i8* %11010, align 1
  %11012 = zext i8 %11011 to i16
  br label %11019

11013:                                            ; preds = %11008
  %11014 = getelementptr inbounds i8, i8* %10978, i64 2
  %11015 = bitcast i8* %11014 to i16*
  store i8* %11014, i8** %11004, align 8
  %11016 = load i16, i16* %11015, align 2
  br label %11019

11017:                                            ; preds = %11003
  %11018 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %11019

11019:                                            ; preds = %11017, %11013, %11009
  %11020 = phi i16 [ %11018, %11017 ], [ %11012, %11009 ], [ %11016, %11013 ]
  store i16 %11020, i16* %14, align 2
  %11021 = icmp ugt i16 %11020, 15
  br i1 %11021, label %11022, label %11024

11022:                                            ; preds = %11019
  %11023 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %11023, align 8
  br label %11149

11024:                                            ; preds = %11019
  %11025 = load i8, i8* %44, align 1, !range !2
  %11026 = icmp eq i8 %11025, 0
  br i1 %11026, label %11027, label %11029

11027:                                            ; preds = %11024
  %11028 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %11028, label %11147, label %11029

11029:                                            ; preds = %11024, %11027
  %11030 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11031 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11030, i64 0, i32 0
  %11032 = load i32, i32* %11031, align 8
  %11033 = icmp eq i32 %11032, 5
  br label %14210

11034:                                            ; preds = %10960
  %11035 = call zeroext i1 @_ZN5blink13HTMLTokenizer15EmitAndResumeInERNS_15SegmentedStringENS0_5StateE(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i32 0)
  br label %14210

11036:                                            ; preds = %10960
  %11037 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11038 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11037, i64 0, i32 8, i32 0, i32 0, i32 0
  %11039 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %11038, align 8
  %11040 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %11039, i64 0, i32 5
  store i8 1, i8* %11040, align 8
  %11041 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11042 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11041, i64 0, i32 0
  %11043 = load i32, i32* %11042, align 8
  %11044 = icmp eq i32 %11043, 2
  br i1 %11044, label %11045, label %11093

11045:                                            ; preds = %11036
  %11046 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11041, i64 0, i32 3
  %11047 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %11048 = getelementptr inbounds %class.LiteralBuffer.0, %class.LiteralBuffer.0* %11047, i64 0, i32 0
  %11049 = load i16*, i16** %11048, align 8
  %11050 = getelementptr inbounds %class.LiteralBuffer, %class.LiteralBuffer* %11046, i64 0, i32 0
  %11051 = load i16*, i16** %11050, align 8
  %11052 = icmp eq i16* %11049, %11051
  %11053 = bitcast i16* %11049 to i8*
  br i1 %11052, label %11093, label %11054

11054:                                            ; preds = %11045
  %11055 = ptrtoint i16* %11049 to i64
  %11056 = ptrtoint i16* %11051 to i64
  %11057 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11041, i64 0, i32 3, i32 1
  %11058 = bitcast i16** %11057 to i64*
  %11059 = load i64, i64* %11058, align 8
  %11060 = sub i64 %11059, %11056
  %11061 = ashr exact i64 %11060, 1
  %11062 = trunc i64 %11061 to i32
  %11063 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 2
  %11064 = bitcast i16** %11063 to i64*
  %11065 = load i64, i64* %11064, align 8
  %11066 = sub i64 %11065, %11055
  %11067 = ashr exact i64 %11066, 1
  %11068 = and i64 %11061, 4294967295
  %11069 = icmp ult i64 %11067, %11068
  br i1 %11069, label %11070, label %11080

11070:                                            ; preds = %11054
  %11071 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 3, i64 0
  %11072 = icmp eq i16* %11049, %11071
  br i1 %11072, label %11074, label %11073

11073:                                            ; preds = %11070
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %11053) #11
  br label %11074

11074:                                            ; preds = %11073, %11070
  %11075 = bitcast %class.LiteralBuffer.0* %11047 to i8**
  %11076 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %11068) #11
  %11077 = call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %11076, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)) #11
  %11078 = bitcast i8* %11077 to i16*
  store i8* %11077, i8** %11075, align 8
  %11079 = getelementptr inbounds i16, i16* %11078, i64 %11068
  store i16* %11079, i16** %11063, align 8
  br label %11080

11080:                                            ; preds = %11074, %11054
  %11081 = phi i16* [ %11078, %11074 ], [ %11049, %11054 ]
  %11082 = phi i8* [ %11077, %11074 ], [ %11053, %11054 ]
  %11083 = icmp eq i32 %11062, 0
  br i1 %11083, label %11089, label %11084

11084:                                            ; preds = %11080
  %11085 = bitcast %class.LiteralBuffer* %11046 to i8**
  %11086 = load i8*, i8** %11085, align 8
  %11087 = and i64 %11060, 8589934590
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %11082, i8* align 2 %11086, i64 %11087, i1 false) #11
  %11088 = load i16*, i16** %11048, align 8
  br label %11089

11089:                                            ; preds = %11084, %11080
  %11090 = phi i16* [ %11081, %11080 ], [ %11088, %11084 ]
  %11091 = getelementptr inbounds i16, i16* %11090, i64 %11068
  %11092 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  store i16* %11091, i16** %11092, align 8
  br label %11093

11093:                                            ; preds = %11036, %11045, %11089
  store i32 0, i32* %74, align 8
  br label %14210

11094:                                            ; preds = %10960
  %11095 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11096 = add i16 %10961, -65
  %11097 = icmp ult i16 %11096, 26
  %11098 = select i1 %11097, i16 32, i16 0
  %11099 = or i16 %11098, %10961
  %11100 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11095, i64 0, i32 3, i32 1
  %11101 = load i16*, i16** %11100, align 8
  %11102 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11095, i64 0, i32 3, i32 2
  %11103 = load i16*, i16** %11102, align 8
  %11104 = icmp eq i16* %11101, %11103
  br i1 %11104, label %11105, label %11108, !prof !4

11105:                                            ; preds = %11094
  %11106 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11095, i64 0, i32 3
  %11107 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %11106) #11
  store i16* %11107, i16** %11100, align 8
  br label %11108

11108:                                            ; preds = %11094, %11105
  %11109 = phi i16* [ %11107, %11105 ], [ %11101, %11094 ]
  %11110 = getelementptr inbounds i16, i16* %11109, i64 1
  store i16* %11110, i16** %11100, align 8
  store i16 %11099, i16* %11109, align 2
  %11111 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11095, i64 0, i32 4
  %11112 = load i16, i16* %11111, align 8
  %11113 = or i16 %11112, %11099
  store i16 %11113, i16* %11111, align 8
  %11114 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %11115 = load i8*, i8** %11114, align 8
  %11116 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %11117 = load i8*, i8** %11116, align 8
  %11118 = icmp ult i8* %11115, %11117
  br i1 %11118, label %11119, label %11130, !prof !3

11119:                                            ; preds = %11108
  %11120 = load i8, i8* %49, align 1, !range !2
  %11121 = icmp eq i8 %11120, 0
  br i1 %11121, label %11126, label %11122

11122:                                            ; preds = %11119
  %11123 = getelementptr inbounds i8, i8* %11115, i64 1
  store i8* %11123, i8** %11114, align 8
  %11124 = load i8, i8* %11123, align 1
  %11125 = zext i8 %11124 to i16
  br label %11132

11126:                                            ; preds = %11119
  %11127 = getelementptr inbounds i8, i8* %11115, i64 2
  %11128 = bitcast i8* %11127 to i16*
  store i8* %11127, i8** %11114, align 8
  %11129 = load i16, i16* %11128, align 2
  br label %11132

11130:                                            ; preds = %11108
  %11131 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %11132

11132:                                            ; preds = %11130, %11126, %11122
  %11133 = phi i16 [ %11131, %11130 ], [ %11125, %11122 ], [ %11129, %11126 ]
  store i16 %11133, i16* %14, align 2
  %11134 = icmp ugt i16 %11133, 15
  br i1 %11134, label %11135, label %11137

11135:                                            ; preds = %11132
  %11136 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %11136, align 8
  br label %10958

11137:                                            ; preds = %11132
  %11138 = load i8, i8* %44, align 1, !range !2
  %11139 = icmp eq i8 %11138, 0
  br i1 %11139, label %11140, label %11142

11140:                                            ; preds = %11137
  %11141 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %11141, label %10958, label %11142

11142:                                            ; preds = %11137, %11140
  %11143 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11144 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11143, i64 0, i32 0
  %11145 = load i32, i32* %11144, align 8
  %11146 = icmp eq i32 %11145, 5
  br label %14210

11147:                                            ; preds = %11027, %73
  %11148 = load i16, i16* %14, align 2
  br label %11149

11149:                                            ; preds = %11147, %11022
  %11150 = phi i16 [ %11148, %11147 ], [ %11020, %11022 ]
  %11151 = icmp ult i16 %11150, 128
  br i1 %11151, label %11152, label %11167

11152:                                            ; preds = %11149
  %11153 = zext i16 %11150 to i64
  %11154 = getelementptr inbounds [128 x i8], [128 x i8]* bitcast (<{ [63 x i8], [65 x i8] }>* @_ZN5blinkL21character_scan_flags_E to [128 x i8]*), i64 0, i64 %11153
  %11155 = load i8, i8* %11154, align 1
  %11156 = and i8 %11155, 6
  %11157 = icmp eq i8 %11156, 0
  br i1 %11157, label %11167, label %11158

11158:                                            ; preds = %11152
  %11159 = call zeroext i1 @_ZN5blink13HTMLTokenizer21SkipWhitespacesHelperERNS_15SegmentedStringERDs(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %11159, label %11160, label %11162

11160:                                            ; preds = %11158
  %11161 = load i16, i16* %14, align 2
  br label %11167

11162:                                            ; preds = %11158
  %11163 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11164 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11163, i64 0, i32 0
  %11165 = load i32, i32* %11164, align 8
  %11166 = icmp eq i32 %11165, 5
  br label %14210

11167:                                            ; preds = %11160, %11149, %11152
  %11168 = phi i16 [ %11161, %11160 ], [ %11150, %11149 ], [ %11150, %11152 ]
  switch i16 %11168, label %11335 [
    i16 62, label %11169
    i16 0, label %11171
    i16 80, label %11229
    i16 112, label %11229
    i16 83, label %11282
    i16 115, label %11282
  ]

11169:                                            ; preds = %11167
  %11170 = call zeroext i1 @_ZN5blink13HTMLTokenizer15EmitAndResumeInERNS_15SegmentedStringENS0_5StateE(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i32 0)
  br label %14210

11171:                                            ; preds = %11167
  %11172 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11173 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11172, i64 0, i32 8, i32 0, i32 0, i32 0
  %11174 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %11173, align 8
  %11175 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %11174, i64 0, i32 5
  store i8 1, i8* %11175, align 8
  %11176 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11177 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11176, i64 0, i32 0
  %11178 = load i32, i32* %11177, align 8
  %11179 = icmp eq i32 %11178, 2
  br i1 %11179, label %11180, label %11228

11180:                                            ; preds = %11171
  %11181 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11176, i64 0, i32 3
  %11182 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %11183 = getelementptr inbounds %class.LiteralBuffer.0, %class.LiteralBuffer.0* %11182, i64 0, i32 0
  %11184 = load i16*, i16** %11183, align 8
  %11185 = getelementptr inbounds %class.LiteralBuffer, %class.LiteralBuffer* %11181, i64 0, i32 0
  %11186 = load i16*, i16** %11185, align 8
  %11187 = icmp eq i16* %11184, %11186
  %11188 = bitcast i16* %11184 to i8*
  br i1 %11187, label %11228, label %11189

11189:                                            ; preds = %11180
  %11190 = ptrtoint i16* %11184 to i64
  %11191 = ptrtoint i16* %11186 to i64
  %11192 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11176, i64 0, i32 3, i32 1
  %11193 = bitcast i16** %11192 to i64*
  %11194 = load i64, i64* %11193, align 8
  %11195 = sub i64 %11194, %11191
  %11196 = ashr exact i64 %11195, 1
  %11197 = trunc i64 %11196 to i32
  %11198 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 2
  %11199 = bitcast i16** %11198 to i64*
  %11200 = load i64, i64* %11199, align 8
  %11201 = sub i64 %11200, %11190
  %11202 = ashr exact i64 %11201, 1
  %11203 = and i64 %11196, 4294967295
  %11204 = icmp ult i64 %11202, %11203
  br i1 %11204, label %11205, label %11215

11205:                                            ; preds = %11189
  %11206 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 3, i64 0
  %11207 = icmp eq i16* %11184, %11206
  br i1 %11207, label %11209, label %11208

11208:                                            ; preds = %11205
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %11188) #11
  br label %11209

11209:                                            ; preds = %11208, %11205
  %11210 = bitcast %class.LiteralBuffer.0* %11182 to i8**
  %11211 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %11203) #11
  %11212 = call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %11211, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)) #11
  %11213 = bitcast i8* %11212 to i16*
  store i8* %11212, i8** %11210, align 8
  %11214 = getelementptr inbounds i16, i16* %11213, i64 %11203
  store i16* %11214, i16** %11198, align 8
  br label %11215

11215:                                            ; preds = %11209, %11189
  %11216 = phi i16* [ %11213, %11209 ], [ %11184, %11189 ]
  %11217 = phi i8* [ %11212, %11209 ], [ %11188, %11189 ]
  %11218 = icmp eq i32 %11197, 0
  br i1 %11218, label %11224, label %11219

11219:                                            ; preds = %11215
  %11220 = bitcast %class.LiteralBuffer* %11181 to i8**
  %11221 = load i8*, i8** %11220, align 8
  %11222 = and i64 %11195, 8589934590
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %11217, i8* align 2 %11221, i64 %11222, i1 false) #11
  %11223 = load i16*, i16** %11183, align 8
  br label %11224

11224:                                            ; preds = %11219, %11215
  %11225 = phi i16* [ %11216, %11215 ], [ %11223, %11219 ]
  %11226 = getelementptr inbounds i16, i16* %11225, i64 %11203
  %11227 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  store i16* %11226, i16** %11227, align 8
  br label %11228

11228:                                            ; preds = %11171, %11180, %11224
  store i32 0, i32* %74, align 8
  br label %14210

11229:                                            ; preds = %11167, %11167
  %11230 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink20html_tokenizer_names7kPublicE, align 8
  %11231 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11230, i64 0, i32 0
  %11232 = call i32 @_ZN5blink15SegmentedString15LookAheadInlineERKN3WTF6StringENS1_19TextCaseSensitivityE(%"class.blink::SegmentedString"* %1, %"class.WTF::String"* dereferenceable(8) %11231, i32 1) #11
  switch i32 %11232, label %11335 [
    i32 1, label %11233
    i32 2, label %11277
  ]

11233:                                            ; preds = %11229
  %11234 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %11235 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %11236 = load i8*, i8** %11234, align 8
  %11237 = load i8*, i8** %11235, align 8
  %11238 = icmp ult i8* %11236, %11237
  br i1 %11238, label %11239, label %11246, !prof !3

11239:                                            ; preds = %11233
  %11240 = load i8, i8* %49, align 1, !range !2
  %11241 = icmp eq i8 %11240, 0
  br i1 %11241, label %11244, label %11242

11242:                                            ; preds = %11239
  %11243 = getelementptr inbounds i8, i8* %11236, i64 1
  store i8* %11243, i8** %11234, align 8
  br label %11250

11244:                                            ; preds = %11239
  %11245 = getelementptr inbounds i8, i8* %11236, i64 2
  store i8* %11245, i8** %11234, align 8
  br label %11250

11246:                                            ; preds = %11233
  %11247 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  %11248 = load i8*, i8** %11234, align 8
  %11249 = load i8*, i8** %11235, align 8
  br label %11250

11250:                                            ; preds = %11246, %11244, %11242
  %11251 = phi i8* [ %11249, %11246 ], [ %11237, %11244 ], [ %11237, %11242 ]
  %11252 = phi i8* [ %11248, %11246 ], [ %11245, %11244 ], [ %11243, %11242 ]
  %11253 = icmp ult i8* %11252, %11251
  br i1 %11253, label %14218, label %14214, !prof !3

11254:                                            ; preds = %14283
  %11255 = load i8, i8* %49, align 1, !range !2
  %11256 = icmp eq i8 %11255, 0
  br i1 %11256, label %11261, label %11257

11257:                                            ; preds = %11254
  %11258 = load i8*, i8** %11234, align 8
  %11259 = load i8, i8* %11258, align 1
  %11260 = zext i8 %11259 to i16
  br label %11265

11261:                                            ; preds = %11254
  %11262 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %11263 = load i16*, i16** %11262, align 8
  %11264 = load i16, i16* %11263, align 2
  br label %11265

11265:                                            ; preds = %11261, %11257
  %11266 = phi i16 [ %11260, %11257 ], [ %11264, %11261 ]
  store i16 %11266, i16* %14, align 2
  %11267 = icmp ugt i16 %11266, 15
  br i1 %11267, label %11268, label %11270

11268:                                            ; preds = %11265
  %11269 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %11269, align 8
  br label %11375

11270:                                            ; preds = %11265
  %11271 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %11271, label %11373, label %11272

11272:                                            ; preds = %14283, %11270
  %11273 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11274 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11273, i64 0, i32 0
  %11275 = load i32, i32* %11274, align 8
  %11276 = icmp eq i32 %11275, 5
  br label %14210

11277:                                            ; preds = %11229
  %11278 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11279 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11278, i64 0, i32 0
  %11280 = load i32, i32* %11279, align 8
  %11281 = icmp eq i32 %11280, 5
  br label %14210

11282:                                            ; preds = %11167, %11167
  %11283 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink20html_tokenizer_names7kSystemE, align 8
  %11284 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11283, i64 0, i32 0
  %11285 = call i32 @_ZN5blink15SegmentedString15LookAheadInlineERKN3WTF6StringENS1_19TextCaseSensitivityE(%"class.blink::SegmentedString"* %1, %"class.WTF::String"* dereferenceable(8) %11284, i32 1) #11
  switch i32 %11285, label %11335 [
    i32 1, label %11286
    i32 2, label %11330
  ]

11286:                                            ; preds = %11282
  %11287 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %11288 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %11289 = load i8*, i8** %11287, align 8
  %11290 = load i8*, i8** %11288, align 8
  %11291 = icmp ult i8* %11289, %11290
  br i1 %11291, label %11292, label %11299, !prof !3

11292:                                            ; preds = %11286
  %11293 = load i8, i8* %49, align 1, !range !2
  %11294 = icmp eq i8 %11293, 0
  br i1 %11294, label %11297, label %11295

11295:                                            ; preds = %11292
  %11296 = getelementptr inbounds i8, i8* %11289, i64 1
  store i8* %11296, i8** %11287, align 8
  br label %11303

11297:                                            ; preds = %11292
  %11298 = getelementptr inbounds i8, i8* %11289, i64 2
  store i8* %11298, i8** %11287, align 8
  br label %11303

11299:                                            ; preds = %11286
  %11300 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  %11301 = load i8*, i8** %11287, align 8
  %11302 = load i8*, i8** %11288, align 8
  br label %11303

11303:                                            ; preds = %11299, %11297, %11295
  %11304 = phi i8* [ %11302, %11299 ], [ %11290, %11297 ], [ %11290, %11295 ]
  %11305 = phi i8* [ %11301, %11299 ], [ %11298, %11297 ], [ %11296, %11295 ]
  %11306 = icmp ult i8* %11305, %11304
  br i1 %11306, label %14290, label %14286, !prof !3

11307:                                            ; preds = %14355
  %11308 = load i8, i8* %49, align 1, !range !2
  %11309 = icmp eq i8 %11308, 0
  br i1 %11309, label %11314, label %11310

11310:                                            ; preds = %11307
  %11311 = load i8*, i8** %11287, align 8
  %11312 = load i8, i8* %11311, align 1
  %11313 = zext i8 %11312 to i16
  br label %11318

11314:                                            ; preds = %11307
  %11315 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %11316 = load i16*, i16** %11315, align 8
  %11317 = load i16, i16* %11316, align 2
  br label %11318

11318:                                            ; preds = %11314, %11310
  %11319 = phi i16 [ %11313, %11310 ], [ %11317, %11314 ]
  store i16 %11319, i16* %14, align 2
  %11320 = icmp ugt i16 %11319, 15
  br i1 %11320, label %11321, label %11323

11321:                                            ; preds = %11318
  %11322 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %11322, align 8
  br label %12773

11323:                                            ; preds = %11318
  %11324 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %11324, label %12771, label %11325

11325:                                            ; preds = %14355, %11323
  %11326 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11327 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11326, i64 0, i32 0
  %11328 = load i32, i32* %11327, align 8
  %11329 = icmp eq i32 %11328, 5
  br label %14210

11330:                                            ; preds = %11282
  %11331 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11332 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11331, i64 0, i32 0
  %11333 = load i32, i32* %11332, align 8
  %11334 = icmp eq i32 %11333, 5
  br label %14210

11335:                                            ; preds = %11282, %11229, %11167
  %11336 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11337 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11336, i64 0, i32 8, i32 0, i32 0, i32 0
  %11338 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %11337, align 8
  %11339 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %11338, i64 0, i32 5
  store i8 1, i8* %11339, align 8
  store i32 67, i32* %74, align 8
  %11340 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %11341 = load i8*, i8** %11340, align 8
  %11342 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %11343 = load i8*, i8** %11342, align 8
  %11344 = icmp ult i8* %11341, %11343
  br i1 %11344, label %11345, label %11356, !prof !3

11345:                                            ; preds = %11335
  %11346 = load i8, i8* %49, align 1, !range !2
  %11347 = icmp eq i8 %11346, 0
  br i1 %11347, label %11352, label %11348

11348:                                            ; preds = %11345
  %11349 = getelementptr inbounds i8, i8* %11341, i64 1
  store i8* %11349, i8** %11340, align 8
  %11350 = load i8, i8* %11349, align 1
  %11351 = zext i8 %11350 to i16
  br label %11358

11352:                                            ; preds = %11345
  %11353 = getelementptr inbounds i8, i8* %11341, i64 2
  %11354 = bitcast i8* %11353 to i16*
  store i8* %11353, i8** %11340, align 8
  %11355 = load i16, i16* %11354, align 2
  br label %11358

11356:                                            ; preds = %11335
  %11357 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %11358

11358:                                            ; preds = %11356, %11352, %11348
  %11359 = phi i16 [ %11357, %11356 ], [ %11351, %11348 ], [ %11355, %11352 ]
  store i16 %11359, i16* %14, align 2
  %11360 = icmp ugt i16 %11359, 15
  br i1 %11360, label %11361, label %11363

11361:                                            ; preds = %11358
  %11362 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %11362, align 8
  br label %13785

11363:                                            ; preds = %11358
  %11364 = load i8, i8* %44, align 1, !range !2
  %11365 = icmp eq i8 %11364, 0
  br i1 %11365, label %11366, label %11368

11366:                                            ; preds = %11363
  %11367 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %11367, label %13783, label %11368

11368:                                            ; preds = %11363, %11366
  %11369 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11370 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11369, i64 0, i32 0
  %11371 = load i32, i32* %11370, align 8
  %11372 = icmp eq i32 %11371, 5
  br label %14210

11373:                                            ; preds = %73, %11270
  %11374 = load i16, i16* %14, align 2
  br label %11375

11375:                                            ; preds = %11373, %11268
  %11376 = phi i16 [ %11374, %11373 ], [ %11266, %11268 ]
  switch i16 %11376, label %11561 [
    i16 32, label %11377
    i16 10, label %11377
    i16 9, label %11377
    i16 12, label %11377
    i16 34, label %11449
    i16 39, label %11502
    i16 62, label %11555
  ]

11377:                                            ; preds = %11375, %11375, %11375, %11375
  store i32 57, i32* %74, align 8
  %11378 = load i8, i8* %49, align 1, !range !2
  %11379 = icmp eq i8 %11378, 0
  br i1 %11379, label %11386, label %11380

11380:                                            ; preds = %11377
  %11381 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %11382 = load i8*, i8** %11381, align 8
  %11383 = load i8, i8* %11382, align 1
  %11384 = zext i8 %11383 to i16
  %11385 = ptrtoint i8* %11382 to i64
  br label %11392

11386:                                            ; preds = %11377
  %11387 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %11388 = load i16*, i16** %11387, align 8
  %11389 = load i16, i16* %11388, align 2
  %11390 = ptrtoint i16* %11388 to i64
  %11391 = bitcast i16* %11388 to i8*
  br label %11392

11392:                                            ; preds = %11386, %11380
  %11393 = phi i8* [ %11382, %11380 ], [ %11391, %11386 ]
  %11394 = phi i64 [ %11385, %11380 ], [ %11390, %11386 ]
  %11395 = phi i16 [ %11384, %11380 ], [ %11389, %11386 ]
  %11396 = icmp eq i16 %11395, 10
  br i1 %11396, label %11397, label %11418

11397:                                            ; preds = %11392
  %11398 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %11399 = load i8, i8* %11398, align 8, !range !2
  %11400 = icmp eq i8 %11399, 0
  br i1 %11400, label %11418, label %11401, !prof !4

11401:                                            ; preds = %11397
  %11402 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %11403 = load i32, i32* %11402, align 8
  %11404 = add nsw i32 %11403, 1
  store i32 %11404, i32* %11402, align 8
  %11405 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %11406 = load i32, i32* %11405, align 8
  %11407 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %11408 = bitcast i8** %11407 to i64*
  %11409 = load i64, i64* %11408, align 8
  %11410 = sub i64 %11394, %11409
  %11411 = trunc i64 %11410 to i32
  %11412 = xor i8 %11378, 1
  %11413 = zext i8 %11412 to i32
  %11414 = ashr i32 %11411, %11413
  %11415 = add i32 %11406, 1
  %11416 = add i32 %11415, %11414
  %11417 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %11416, i32* %11417, align 4
  br label %11418

11418:                                            ; preds = %11401, %11397, %11392
  %11419 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %11420 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %11421 = load i8*, i8** %11420, align 8
  %11422 = icmp ult i8* %11393, %11421
  br i1 %11422, label %11423, label %11432, !prof !3

11423:                                            ; preds = %11418
  br i1 %11379, label %11428, label %11424

11424:                                            ; preds = %11423
  %11425 = getelementptr inbounds i8, i8* %11393, i64 1
  store i8* %11425, i8** %11419, align 8
  %11426 = load i8, i8* %11425, align 1
  %11427 = zext i8 %11426 to i16
  br label %11434

11428:                                            ; preds = %11423
  %11429 = getelementptr inbounds i8, i8* %11393, i64 2
  %11430 = bitcast i8* %11429 to i16*
  store i8* %11429, i8** %11419, align 8
  %11431 = load i16, i16* %11430, align 2
  br label %11434

11432:                                            ; preds = %11418
  %11433 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %11434

11434:                                            ; preds = %11432, %11428, %11424
  %11435 = phi i16 [ %11433, %11432 ], [ %11427, %11424 ], [ %11431, %11428 ]
  store i16 %11435, i16* %14, align 2
  %11436 = icmp ugt i16 %11435, 15
  br i1 %11436, label %11437, label %11439

11437:                                            ; preds = %11434
  %11438 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %11438, align 8
  br label %11657

11439:                                            ; preds = %11434
  %11440 = load i8, i8* %44, align 1, !range !2
  %11441 = icmp eq i8 %11440, 0
  br i1 %11441, label %11442, label %11444

11442:                                            ; preds = %11439
  %11443 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %11443, label %11655, label %11444

11444:                                            ; preds = %11439, %11442
  %11445 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11446 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11445, i64 0, i32 0
  %11447 = load i32, i32* %11446, align 8
  %11448 = icmp eq i32 %11447, 5
  br label %14210

11449:                                            ; preds = %11375
  %11450 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11451 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11450, i64 0, i32 8, i32 0, i32 0, i32 0
  %11452 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %11451, align 8
  %11453 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %11452, i64 0, i32 0
  store i8 1, i8* %11453, align 8
  %11454 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %11451, align 8
  %11455 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %11454, i64 0, i32 3
  %11456 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %11454, i64 0, i32 3, i32 0, i32 0, i32 1
  %11457 = load i32, i32* %11456, align 8
  %11458 = icmp eq i32 %11457, 0
  br i1 %11458, label %11468, label %11459

11459:                                            ; preds = %11449
  %11460 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %11454, i64 0, i32 3, i32 0, i32 0, i32 2
  %11461 = load i32, i32* %11460, align 4
  %11462 = icmp eq i32 %11461, 0
  br i1 %11462, label %11464, label %11463

11463:                                            ; preds = %11459
  store i32 0, i32* %11460, align 4
  br label %11464

11464:                                            ; preds = %11463, %11459
  %11465 = bitcast %"class.WTF::Vector.1"* %11455 to i8**
  %11466 = load i8*, i8** %11465, align 8
  %11467 = bitcast %"class.WTF::Vector.1"* %11455 to i64*
  store atomic i64 0, i64* %11467 monotonic, align 8
  store i32 0, i32* %11456, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %11466) #11
  br label %11468

11468:                                            ; preds = %11449, %11464
  store i32 58, i32* %74, align 8
  %11469 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %11470 = load i8*, i8** %11469, align 8
  %11471 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %11472 = load i8*, i8** %11471, align 8
  %11473 = icmp ult i8* %11470, %11472
  br i1 %11473, label %11474, label %11485, !prof !3

11474:                                            ; preds = %11468
  %11475 = load i8, i8* %49, align 1, !range !2
  %11476 = icmp eq i8 %11475, 0
  br i1 %11476, label %11481, label %11477

11477:                                            ; preds = %11474
  %11478 = getelementptr inbounds i8, i8* %11470, i64 1
  store i8* %11478, i8** %11469, align 8
  %11479 = load i8, i8* %11478, align 1
  %11480 = zext i8 %11479 to i16
  br label %11487

11481:                                            ; preds = %11474
  %11482 = getelementptr inbounds i8, i8* %11470, i64 2
  %11483 = bitcast i8* %11482 to i16*
  store i8* %11482, i8** %11469, align 8
  %11484 = load i16, i16* %11483, align 2
  br label %11487

11485:                                            ; preds = %11468
  %11486 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %11487

11487:                                            ; preds = %11485, %11481, %11477
  %11488 = phi i16 [ %11486, %11485 ], [ %11480, %11477 ], [ %11484, %11481 ]
  store i16 %11488, i16* %14, align 2
  %11489 = icmp ugt i16 %11488, 15
  br i1 %11489, label %11490, label %11492

11490:                                            ; preds = %11487
  %11491 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %11491, align 8
  br label %11885

11492:                                            ; preds = %11487
  %11493 = load i8, i8* %44, align 1, !range !2
  %11494 = icmp eq i8 %11493, 0
  br i1 %11494, label %11495, label %11497

11495:                                            ; preds = %11492
  %11496 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %11496, label %11883, label %11497

11497:                                            ; preds = %11492, %11495
  %11498 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11499 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11498, i64 0, i32 0
  %11500 = load i32, i32* %11499, align 8
  %11501 = icmp eq i32 %11500, 5
  br label %14210

11502:                                            ; preds = %11375
  %11503 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11504 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11503, i64 0, i32 8, i32 0, i32 0, i32 0
  %11505 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %11504, align 8
  %11506 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %11505, i64 0, i32 0
  store i8 1, i8* %11506, align 8
  %11507 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %11504, align 8
  %11508 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %11507, i64 0, i32 3
  %11509 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %11507, i64 0, i32 3, i32 0, i32 0, i32 1
  %11510 = load i32, i32* %11509, align 8
  %11511 = icmp eq i32 %11510, 0
  br i1 %11511, label %11521, label %11512

11512:                                            ; preds = %11502
  %11513 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %11507, i64 0, i32 3, i32 0, i32 0, i32 2
  %11514 = load i32, i32* %11513, align 4
  %11515 = icmp eq i32 %11514, 0
  br i1 %11515, label %11517, label %11516

11516:                                            ; preds = %11512
  store i32 0, i32* %11513, align 4
  br label %11517

11517:                                            ; preds = %11516, %11512
  %11518 = bitcast %"class.WTF::Vector.1"* %11508 to i8**
  %11519 = load i8*, i8** %11518, align 8
  %11520 = bitcast %"class.WTF::Vector.1"* %11508 to i64*
  store atomic i64 0, i64* %11520 monotonic, align 8
  store i32 0, i32* %11509, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %11519) #11
  br label %11521

11521:                                            ; preds = %11502, %11517
  store i32 59, i32* %74, align 8
  %11522 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %11523 = load i8*, i8** %11522, align 8
  %11524 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %11525 = load i8*, i8** %11524, align 8
  %11526 = icmp ult i8* %11523, %11525
  br i1 %11526, label %11527, label %11538, !prof !3

11527:                                            ; preds = %11521
  %11528 = load i8, i8* %49, align 1, !range !2
  %11529 = icmp eq i8 %11528, 0
  br i1 %11529, label %11534, label %11530

11530:                                            ; preds = %11527
  %11531 = getelementptr inbounds i8, i8* %11523, i64 1
  store i8* %11531, i8** %11522, align 8
  %11532 = load i8, i8* %11531, align 1
  %11533 = zext i8 %11532 to i16
  br label %11540

11534:                                            ; preds = %11527
  %11535 = getelementptr inbounds i8, i8* %11523, i64 2
  %11536 = bitcast i8* %11535 to i16*
  store i8* %11535, i8** %11522, align 8
  %11537 = load i16, i16* %11536, align 2
  br label %11540

11538:                                            ; preds = %11521
  %11539 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %11540

11540:                                            ; preds = %11538, %11534, %11530
  %11541 = phi i16 [ %11539, %11538 ], [ %11533, %11530 ], [ %11537, %11534 ]
  store i16 %11541, i16* %14, align 2
  %11542 = icmp ugt i16 %11541, 15
  br i1 %11542, label %11543, label %11545

11543:                                            ; preds = %11540
  %11544 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %11544, align 8
  br label %12078

11545:                                            ; preds = %11540
  %11546 = load i8, i8* %44, align 1, !range !2
  %11547 = icmp eq i8 %11546, 0
  br i1 %11547, label %11548, label %11550

11548:                                            ; preds = %11545
  %11549 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %11549, label %12076, label %11550

11550:                                            ; preds = %11545, %11548
  %11551 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11552 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11551, i64 0, i32 0
  %11553 = load i32, i32* %11552, align 8
  %11554 = icmp eq i32 %11553, 5
  br label %14210

11555:                                            ; preds = %11375
  %11556 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11557 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11556, i64 0, i32 8, i32 0, i32 0, i32 0
  %11558 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %11557, align 8
  %11559 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %11558, i64 0, i32 5
  store i8 1, i8* %11559, align 8
  %11560 = call zeroext i1 @_ZN5blink13HTMLTokenizer15EmitAndResumeInERNS_15SegmentedStringENS0_5StateE(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i32 0)
  br label %14210

11561:                                            ; preds = %11375
  %11562 = icmp eq i16 %11376, 0
  %11563 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11564 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11563, i64 0, i32 8, i32 0, i32 0, i32 0
  %11565 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %11564, align 8
  %11566 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %11565, i64 0, i32 5
  store i8 1, i8* %11566, align 8
  br i1 %11562, label %11567, label %11621

11567:                                            ; preds = %11561
  %11568 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11569 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11568, i64 0, i32 0
  %11570 = load i32, i32* %11569, align 8
  %11571 = icmp eq i32 %11570, 2
  br i1 %11571, label %11572, label %11620

11572:                                            ; preds = %11567
  %11573 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11568, i64 0, i32 3
  %11574 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %11575 = getelementptr inbounds %class.LiteralBuffer.0, %class.LiteralBuffer.0* %11574, i64 0, i32 0
  %11576 = load i16*, i16** %11575, align 8
  %11577 = getelementptr inbounds %class.LiteralBuffer, %class.LiteralBuffer* %11573, i64 0, i32 0
  %11578 = load i16*, i16** %11577, align 8
  %11579 = icmp eq i16* %11576, %11578
  %11580 = bitcast i16* %11576 to i8*
  br i1 %11579, label %11620, label %11581

11581:                                            ; preds = %11572
  %11582 = ptrtoint i16* %11576 to i64
  %11583 = ptrtoint i16* %11578 to i64
  %11584 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11568, i64 0, i32 3, i32 1
  %11585 = bitcast i16** %11584 to i64*
  %11586 = load i64, i64* %11585, align 8
  %11587 = sub i64 %11586, %11583
  %11588 = ashr exact i64 %11587, 1
  %11589 = trunc i64 %11588 to i32
  %11590 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 2
  %11591 = bitcast i16** %11590 to i64*
  %11592 = load i64, i64* %11591, align 8
  %11593 = sub i64 %11592, %11582
  %11594 = ashr exact i64 %11593, 1
  %11595 = and i64 %11588, 4294967295
  %11596 = icmp ult i64 %11594, %11595
  br i1 %11596, label %11597, label %11607

11597:                                            ; preds = %11581
  %11598 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 3, i64 0
  %11599 = icmp eq i16* %11576, %11598
  br i1 %11599, label %11601, label %11600

11600:                                            ; preds = %11597
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %11580) #11
  br label %11601

11601:                                            ; preds = %11600, %11597
  %11602 = bitcast %class.LiteralBuffer.0* %11574 to i8**
  %11603 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %11595) #11
  %11604 = call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %11603, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)) #11
  %11605 = bitcast i8* %11604 to i16*
  store i8* %11604, i8** %11602, align 8
  %11606 = getelementptr inbounds i16, i16* %11605, i64 %11595
  store i16* %11606, i16** %11590, align 8
  br label %11607

11607:                                            ; preds = %11601, %11581
  %11608 = phi i16* [ %11605, %11601 ], [ %11576, %11581 ]
  %11609 = phi i8* [ %11604, %11601 ], [ %11580, %11581 ]
  %11610 = icmp eq i32 %11589, 0
  br i1 %11610, label %11616, label %11611

11611:                                            ; preds = %11607
  %11612 = bitcast %class.LiteralBuffer* %11573 to i8**
  %11613 = load i8*, i8** %11612, align 8
  %11614 = and i64 %11587, 8589934590
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %11609, i8* align 2 %11613, i64 %11614, i1 false) #11
  %11615 = load i16*, i16** %11575, align 8
  br label %11616

11616:                                            ; preds = %11611, %11607
  %11617 = phi i16* [ %11608, %11607 ], [ %11615, %11611 ]
  %11618 = getelementptr inbounds i16, i16* %11617, i64 %11595
  %11619 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  store i16* %11618, i16** %11619, align 8
  br label %11620

11620:                                            ; preds = %11567, %11572, %11616
  store i32 0, i32* %74, align 8
  br label %14210

11621:                                            ; preds = %11561
  store i32 67, i32* %74, align 8
  %11622 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %11623 = load i8*, i8** %11622, align 8
  %11624 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %11625 = load i8*, i8** %11624, align 8
  %11626 = icmp ult i8* %11623, %11625
  br i1 %11626, label %11627, label %11638, !prof !3

11627:                                            ; preds = %11621
  %11628 = load i8, i8* %49, align 1, !range !2
  %11629 = icmp eq i8 %11628, 0
  br i1 %11629, label %11634, label %11630

11630:                                            ; preds = %11627
  %11631 = getelementptr inbounds i8, i8* %11623, i64 1
  store i8* %11631, i8** %11622, align 8
  %11632 = load i8, i8* %11631, align 1
  %11633 = zext i8 %11632 to i16
  br label %11640

11634:                                            ; preds = %11627
  %11635 = getelementptr inbounds i8, i8* %11623, i64 2
  %11636 = bitcast i8* %11635 to i16*
  store i8* %11635, i8** %11622, align 8
  %11637 = load i16, i16* %11636, align 2
  br label %11640

11638:                                            ; preds = %11621
  %11639 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %11640

11640:                                            ; preds = %11638, %11634, %11630
  %11641 = phi i16 [ %11639, %11638 ], [ %11633, %11630 ], [ %11637, %11634 ]
  store i16 %11641, i16* %14, align 2
  %11642 = icmp ugt i16 %11641, 15
  br i1 %11642, label %11643, label %11645

11643:                                            ; preds = %11640
  %11644 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %11644, align 8
  br label %13785

11645:                                            ; preds = %11640
  %11646 = load i8, i8* %44, align 1, !range !2
  %11647 = icmp eq i8 %11646, 0
  br i1 %11647, label %11648, label %11650

11648:                                            ; preds = %11645
  %11649 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %11649, label %13783, label %11650

11650:                                            ; preds = %11645, %11648
  %11651 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11652 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11651, i64 0, i32 0
  %11653 = load i32, i32* %11652, align 8
  %11654 = icmp eq i32 %11653, 5
  br label %14210

11655:                                            ; preds = %11442, %73
  %11656 = load i16, i16* %14, align 2
  br label %11657

11657:                                            ; preds = %11655, %11437
  %11658 = phi i16 [ %11656, %11655 ], [ %11435, %11437 ]
  %11659 = icmp ult i16 %11658, 128
  br i1 %11659, label %11660, label %11675

11660:                                            ; preds = %11657
  %11661 = zext i16 %11658 to i64
  %11662 = getelementptr inbounds [128 x i8], [128 x i8]* bitcast (<{ [63 x i8], [65 x i8] }>* @_ZN5blinkL21character_scan_flags_E to [128 x i8]*), i64 0, i64 %11661
  %11663 = load i8, i8* %11662, align 1
  %11664 = and i8 %11663, 6
  %11665 = icmp eq i8 %11664, 0
  br i1 %11665, label %11675, label %11666

11666:                                            ; preds = %11660
  %11667 = call zeroext i1 @_ZN5blink13HTMLTokenizer21SkipWhitespacesHelperERNS_15SegmentedStringERDs(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %11667, label %11668, label %11670

11668:                                            ; preds = %11666
  %11669 = load i16, i16* %14, align 2
  br label %11675

11670:                                            ; preds = %11666
  %11671 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11672 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11671, i64 0, i32 0
  %11673 = load i32, i32* %11672, align 8
  %11674 = icmp eq i32 %11673, 5
  br label %14210

11675:                                            ; preds = %11668, %11657, %11660
  %11676 = phi i16 [ %11669, %11668 ], [ %11658, %11657 ], [ %11658, %11660 ]
  switch i16 %11676, label %11789 [
    i16 34, label %11677
    i16 39, label %11730
    i16 62, label %11783
  ]

11677:                                            ; preds = %11675
  %11678 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11679 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11678, i64 0, i32 8, i32 0, i32 0, i32 0
  %11680 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %11679, align 8
  %11681 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %11680, i64 0, i32 0
  store i8 1, i8* %11681, align 8
  %11682 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %11679, align 8
  %11683 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %11682, i64 0, i32 3
  %11684 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %11682, i64 0, i32 3, i32 0, i32 0, i32 1
  %11685 = load i32, i32* %11684, align 8
  %11686 = icmp eq i32 %11685, 0
  br i1 %11686, label %11696, label %11687

11687:                                            ; preds = %11677
  %11688 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %11682, i64 0, i32 3, i32 0, i32 0, i32 2
  %11689 = load i32, i32* %11688, align 4
  %11690 = icmp eq i32 %11689, 0
  br i1 %11690, label %11692, label %11691

11691:                                            ; preds = %11687
  store i32 0, i32* %11688, align 4
  br label %11692

11692:                                            ; preds = %11691, %11687
  %11693 = bitcast %"class.WTF::Vector.1"* %11683 to i8**
  %11694 = load i8*, i8** %11693, align 8
  %11695 = bitcast %"class.WTF::Vector.1"* %11683 to i64*
  store atomic i64 0, i64* %11695 monotonic, align 8
  store i32 0, i32* %11684, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %11694) #11
  br label %11696

11696:                                            ; preds = %11677, %11692
  store i32 58, i32* %74, align 8
  %11697 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %11698 = load i8*, i8** %11697, align 8
  %11699 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %11700 = load i8*, i8** %11699, align 8
  %11701 = icmp ult i8* %11698, %11700
  br i1 %11701, label %11702, label %11713, !prof !3

11702:                                            ; preds = %11696
  %11703 = load i8, i8* %49, align 1, !range !2
  %11704 = icmp eq i8 %11703, 0
  br i1 %11704, label %11709, label %11705

11705:                                            ; preds = %11702
  %11706 = getelementptr inbounds i8, i8* %11698, i64 1
  store i8* %11706, i8** %11697, align 8
  %11707 = load i8, i8* %11706, align 1
  %11708 = zext i8 %11707 to i16
  br label %11715

11709:                                            ; preds = %11702
  %11710 = getelementptr inbounds i8, i8* %11698, i64 2
  %11711 = bitcast i8* %11710 to i16*
  store i8* %11710, i8** %11697, align 8
  %11712 = load i16, i16* %11711, align 2
  br label %11715

11713:                                            ; preds = %11696
  %11714 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %11715

11715:                                            ; preds = %11713, %11709, %11705
  %11716 = phi i16 [ %11714, %11713 ], [ %11708, %11705 ], [ %11712, %11709 ]
  store i16 %11716, i16* %14, align 2
  %11717 = icmp ugt i16 %11716, 15
  br i1 %11717, label %11718, label %11720

11718:                                            ; preds = %11715
  %11719 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %11719, align 8
  br label %11885

11720:                                            ; preds = %11715
  %11721 = load i8, i8* %44, align 1, !range !2
  %11722 = icmp eq i8 %11721, 0
  br i1 %11722, label %11723, label %11725

11723:                                            ; preds = %11720
  %11724 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %11724, label %11883, label %11725

11725:                                            ; preds = %11720, %11723
  %11726 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11727 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11726, i64 0, i32 0
  %11728 = load i32, i32* %11727, align 8
  %11729 = icmp eq i32 %11728, 5
  br label %14210

11730:                                            ; preds = %11675
  %11731 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11732 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11731, i64 0, i32 8, i32 0, i32 0, i32 0
  %11733 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %11732, align 8
  %11734 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %11733, i64 0, i32 0
  store i8 1, i8* %11734, align 8
  %11735 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %11732, align 8
  %11736 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %11735, i64 0, i32 3
  %11737 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %11735, i64 0, i32 3, i32 0, i32 0, i32 1
  %11738 = load i32, i32* %11737, align 8
  %11739 = icmp eq i32 %11738, 0
  br i1 %11739, label %11749, label %11740

11740:                                            ; preds = %11730
  %11741 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %11735, i64 0, i32 3, i32 0, i32 0, i32 2
  %11742 = load i32, i32* %11741, align 4
  %11743 = icmp eq i32 %11742, 0
  br i1 %11743, label %11745, label %11744

11744:                                            ; preds = %11740
  store i32 0, i32* %11741, align 4
  br label %11745

11745:                                            ; preds = %11744, %11740
  %11746 = bitcast %"class.WTF::Vector.1"* %11736 to i8**
  %11747 = load i8*, i8** %11746, align 8
  %11748 = bitcast %"class.WTF::Vector.1"* %11736 to i64*
  store atomic i64 0, i64* %11748 monotonic, align 8
  store i32 0, i32* %11737, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %11747) #11
  br label %11749

11749:                                            ; preds = %11730, %11745
  store i32 59, i32* %74, align 8
  %11750 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %11751 = load i8*, i8** %11750, align 8
  %11752 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %11753 = load i8*, i8** %11752, align 8
  %11754 = icmp ult i8* %11751, %11753
  br i1 %11754, label %11755, label %11766, !prof !3

11755:                                            ; preds = %11749
  %11756 = load i8, i8* %49, align 1, !range !2
  %11757 = icmp eq i8 %11756, 0
  br i1 %11757, label %11762, label %11758

11758:                                            ; preds = %11755
  %11759 = getelementptr inbounds i8, i8* %11751, i64 1
  store i8* %11759, i8** %11750, align 8
  %11760 = load i8, i8* %11759, align 1
  %11761 = zext i8 %11760 to i16
  br label %11768

11762:                                            ; preds = %11755
  %11763 = getelementptr inbounds i8, i8* %11751, i64 2
  %11764 = bitcast i8* %11763 to i16*
  store i8* %11763, i8** %11750, align 8
  %11765 = load i16, i16* %11764, align 2
  br label %11768

11766:                                            ; preds = %11749
  %11767 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %11768

11768:                                            ; preds = %11766, %11762, %11758
  %11769 = phi i16 [ %11767, %11766 ], [ %11761, %11758 ], [ %11765, %11762 ]
  store i16 %11769, i16* %14, align 2
  %11770 = icmp ugt i16 %11769, 15
  br i1 %11770, label %11771, label %11773

11771:                                            ; preds = %11768
  %11772 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %11772, align 8
  br label %12078

11773:                                            ; preds = %11768
  %11774 = load i8, i8* %44, align 1, !range !2
  %11775 = icmp eq i8 %11774, 0
  br i1 %11775, label %11776, label %11778

11776:                                            ; preds = %11773
  %11777 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %11777, label %12076, label %11778

11778:                                            ; preds = %11773, %11776
  %11779 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11780 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11779, i64 0, i32 0
  %11781 = load i32, i32* %11780, align 8
  %11782 = icmp eq i32 %11781, 5
  br label %14210

11783:                                            ; preds = %11675
  %11784 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11785 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11784, i64 0, i32 8, i32 0, i32 0, i32 0
  %11786 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %11785, align 8
  %11787 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %11786, i64 0, i32 5
  store i8 1, i8* %11787, align 8
  %11788 = call zeroext i1 @_ZN5blink13HTMLTokenizer15EmitAndResumeInERNS_15SegmentedStringENS0_5StateE(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i32 0)
  br label %14210

11789:                                            ; preds = %11675
  %11790 = icmp eq i16 %11676, 0
  %11791 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11792 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11791, i64 0, i32 8, i32 0, i32 0, i32 0
  %11793 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %11792, align 8
  %11794 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %11793, i64 0, i32 5
  store i8 1, i8* %11794, align 8
  br i1 %11790, label %11795, label %11849

11795:                                            ; preds = %11789
  %11796 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11797 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11796, i64 0, i32 0
  %11798 = load i32, i32* %11797, align 8
  %11799 = icmp eq i32 %11798, 2
  br i1 %11799, label %11800, label %11848

11800:                                            ; preds = %11795
  %11801 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11796, i64 0, i32 3
  %11802 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %11803 = getelementptr inbounds %class.LiteralBuffer.0, %class.LiteralBuffer.0* %11802, i64 0, i32 0
  %11804 = load i16*, i16** %11803, align 8
  %11805 = getelementptr inbounds %class.LiteralBuffer, %class.LiteralBuffer* %11801, i64 0, i32 0
  %11806 = load i16*, i16** %11805, align 8
  %11807 = icmp eq i16* %11804, %11806
  %11808 = bitcast i16* %11804 to i8*
  br i1 %11807, label %11848, label %11809

11809:                                            ; preds = %11800
  %11810 = ptrtoint i16* %11804 to i64
  %11811 = ptrtoint i16* %11806 to i64
  %11812 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11796, i64 0, i32 3, i32 1
  %11813 = bitcast i16** %11812 to i64*
  %11814 = load i64, i64* %11813, align 8
  %11815 = sub i64 %11814, %11811
  %11816 = ashr exact i64 %11815, 1
  %11817 = trunc i64 %11816 to i32
  %11818 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 2
  %11819 = bitcast i16** %11818 to i64*
  %11820 = load i64, i64* %11819, align 8
  %11821 = sub i64 %11820, %11810
  %11822 = ashr exact i64 %11821, 1
  %11823 = and i64 %11816, 4294967295
  %11824 = icmp ult i64 %11822, %11823
  br i1 %11824, label %11825, label %11835

11825:                                            ; preds = %11809
  %11826 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 3, i64 0
  %11827 = icmp eq i16* %11804, %11826
  br i1 %11827, label %11829, label %11828

11828:                                            ; preds = %11825
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %11808) #11
  br label %11829

11829:                                            ; preds = %11828, %11825
  %11830 = bitcast %class.LiteralBuffer.0* %11802 to i8**
  %11831 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %11823) #11
  %11832 = call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %11831, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)) #11
  %11833 = bitcast i8* %11832 to i16*
  store i8* %11832, i8** %11830, align 8
  %11834 = getelementptr inbounds i16, i16* %11833, i64 %11823
  store i16* %11834, i16** %11818, align 8
  br label %11835

11835:                                            ; preds = %11829, %11809
  %11836 = phi i16* [ %11833, %11829 ], [ %11804, %11809 ]
  %11837 = phi i8* [ %11832, %11829 ], [ %11808, %11809 ]
  %11838 = icmp eq i32 %11817, 0
  br i1 %11838, label %11844, label %11839

11839:                                            ; preds = %11835
  %11840 = bitcast %class.LiteralBuffer* %11801 to i8**
  %11841 = load i8*, i8** %11840, align 8
  %11842 = and i64 %11815, 8589934590
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %11837, i8* align 2 %11841, i64 %11842, i1 false) #11
  %11843 = load i16*, i16** %11803, align 8
  br label %11844

11844:                                            ; preds = %11839, %11835
  %11845 = phi i16* [ %11836, %11835 ], [ %11843, %11839 ]
  %11846 = getelementptr inbounds i16, i16* %11845, i64 %11823
  %11847 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  store i16* %11846, i16** %11847, align 8
  br label %11848

11848:                                            ; preds = %11795, %11800, %11844
  store i32 0, i32* %74, align 8
  br label %14210

11849:                                            ; preds = %11789
  store i32 67, i32* %74, align 8
  %11850 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %11851 = load i8*, i8** %11850, align 8
  %11852 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %11853 = load i8*, i8** %11852, align 8
  %11854 = icmp ult i8* %11851, %11853
  br i1 %11854, label %11855, label %11866, !prof !3

11855:                                            ; preds = %11849
  %11856 = load i8, i8* %49, align 1, !range !2
  %11857 = icmp eq i8 %11856, 0
  br i1 %11857, label %11862, label %11858

11858:                                            ; preds = %11855
  %11859 = getelementptr inbounds i8, i8* %11851, i64 1
  store i8* %11859, i8** %11850, align 8
  %11860 = load i8, i8* %11859, align 1
  %11861 = zext i8 %11860 to i16
  br label %11868

11862:                                            ; preds = %11855
  %11863 = getelementptr inbounds i8, i8* %11851, i64 2
  %11864 = bitcast i8* %11863 to i16*
  store i8* %11863, i8** %11850, align 8
  %11865 = load i16, i16* %11864, align 2
  br label %11868

11866:                                            ; preds = %11849
  %11867 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %11868

11868:                                            ; preds = %11866, %11862, %11858
  %11869 = phi i16 [ %11867, %11866 ], [ %11861, %11858 ], [ %11865, %11862 ]
  store i16 %11869, i16* %14, align 2
  %11870 = icmp ugt i16 %11869, 15
  br i1 %11870, label %11871, label %11873

11871:                                            ; preds = %11868
  %11872 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %11872, align 8
  br label %13785

11873:                                            ; preds = %11868
  %11874 = load i8, i8* %44, align 1, !range !2
  %11875 = icmp eq i8 %11874, 0
  br i1 %11875, label %11876, label %11878

11876:                                            ; preds = %11873
  %11877 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %11877, label %13783, label %11878

11878:                                            ; preds = %11873, %11876
  %11879 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11880 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11879, i64 0, i32 0
  %11881 = load i32, i32* %11880, align 8
  %11882 = icmp eq i32 %11881, 5
  br label %14210

11883:                                            ; preds = %12064, %11495, %11723, %73, %12069
  %11884 = load i16, i16* %14, align 2
  br label %11885

11885:                                            ; preds = %11718, %11490, %11883
  %11886 = phi i16 [ %11884, %11883 ], [ %11716, %11718 ], [ %11488, %11490 ]
  switch i16 %11886, label %11985 [
    i16 34, label %11887
    i16 62, label %11921
    i16 0, label %11927
  ]

11887:                                            ; preds = %11885
  store i32 60, i32* %74, align 8
  %11888 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %11889 = load i8*, i8** %11888, align 8
  %11890 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %11891 = load i8*, i8** %11890, align 8
  %11892 = icmp ult i8* %11889, %11891
  br i1 %11892, label %11893, label %11904, !prof !3

11893:                                            ; preds = %11887
  %11894 = load i8, i8* %49, align 1, !range !2
  %11895 = icmp eq i8 %11894, 0
  br i1 %11895, label %11900, label %11896

11896:                                            ; preds = %11893
  %11897 = getelementptr inbounds i8, i8* %11889, i64 1
  store i8* %11897, i8** %11888, align 8
  %11898 = load i8, i8* %11897, align 1
  %11899 = zext i8 %11898 to i16
  br label %11906

11900:                                            ; preds = %11893
  %11901 = getelementptr inbounds i8, i8* %11889, i64 2
  %11902 = bitcast i8* %11901 to i16*
  store i8* %11901, i8** %11888, align 8
  %11903 = load i16, i16* %11902, align 2
  br label %11906

11904:                                            ; preds = %11887
  %11905 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %11906

11906:                                            ; preds = %11904, %11900, %11896
  %11907 = phi i16 [ %11905, %11904 ], [ %11899, %11896 ], [ %11903, %11900 ]
  store i16 %11907, i16* %14, align 2
  %11908 = icmp ugt i16 %11907, 15
  br i1 %11908, label %11909, label %11911

11909:                                            ; preds = %11906
  %11910 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %11910, align 8
  br label %12271

11911:                                            ; preds = %11906
  %11912 = load i8, i8* %44, align 1, !range !2
  %11913 = icmp eq i8 %11912, 0
  br i1 %11913, label %11914, label %11916

11914:                                            ; preds = %11911
  %11915 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %11915, label %12269, label %11916

11916:                                            ; preds = %11911, %11914
  %11917 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11918 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11917, i64 0, i32 0
  %11919 = load i32, i32* %11918, align 8
  %11920 = icmp eq i32 %11919, 5
  br label %14210

11921:                                            ; preds = %11885
  %11922 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11923 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11922, i64 0, i32 8, i32 0, i32 0, i32 0
  %11924 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %11923, align 8
  %11925 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %11924, i64 0, i32 5
  store i8 1, i8* %11925, align 8
  %11926 = call zeroext i1 @_ZN5blink13HTMLTokenizer15EmitAndResumeInERNS_15SegmentedStringENS0_5StateE(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i32 0)
  br label %14210

11927:                                            ; preds = %11885
  %11928 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11929 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11928, i64 0, i32 8, i32 0, i32 0, i32 0
  %11930 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %11929, align 8
  %11931 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %11930, i64 0, i32 5
  store i8 1, i8* %11931, align 8
  %11932 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11933 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11932, i64 0, i32 0
  %11934 = load i32, i32* %11933, align 8
  %11935 = icmp eq i32 %11934, 2
  br i1 %11935, label %11936, label %11984

11936:                                            ; preds = %11927
  %11937 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11932, i64 0, i32 3
  %11938 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %11939 = getelementptr inbounds %class.LiteralBuffer.0, %class.LiteralBuffer.0* %11938, i64 0, i32 0
  %11940 = load i16*, i16** %11939, align 8
  %11941 = getelementptr inbounds %class.LiteralBuffer, %class.LiteralBuffer* %11937, i64 0, i32 0
  %11942 = load i16*, i16** %11941, align 8
  %11943 = icmp eq i16* %11940, %11942
  %11944 = bitcast i16* %11940 to i8*
  br i1 %11943, label %11984, label %11945

11945:                                            ; preds = %11936
  %11946 = ptrtoint i16* %11940 to i64
  %11947 = ptrtoint i16* %11942 to i64
  %11948 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11932, i64 0, i32 3, i32 1
  %11949 = bitcast i16** %11948 to i64*
  %11950 = load i64, i64* %11949, align 8
  %11951 = sub i64 %11950, %11947
  %11952 = ashr exact i64 %11951, 1
  %11953 = trunc i64 %11952 to i32
  %11954 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 2
  %11955 = bitcast i16** %11954 to i64*
  %11956 = load i64, i64* %11955, align 8
  %11957 = sub i64 %11956, %11946
  %11958 = ashr exact i64 %11957, 1
  %11959 = and i64 %11952, 4294967295
  %11960 = icmp ult i64 %11958, %11959
  br i1 %11960, label %11961, label %11971

11961:                                            ; preds = %11945
  %11962 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 3, i64 0
  %11963 = icmp eq i16* %11940, %11962
  br i1 %11963, label %11965, label %11964

11964:                                            ; preds = %11961
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %11944) #11
  br label %11965

11965:                                            ; preds = %11964, %11961
  %11966 = bitcast %class.LiteralBuffer.0* %11938 to i8**
  %11967 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %11959) #11
  %11968 = call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %11967, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)) #11
  %11969 = bitcast i8* %11968 to i16*
  store i8* %11968, i8** %11966, align 8
  %11970 = getelementptr inbounds i16, i16* %11969, i64 %11959
  store i16* %11970, i16** %11954, align 8
  br label %11971

11971:                                            ; preds = %11965, %11945
  %11972 = phi i16* [ %11969, %11965 ], [ %11940, %11945 ]
  %11973 = phi i8* [ %11968, %11965 ], [ %11944, %11945 ]
  %11974 = icmp eq i32 %11953, 0
  br i1 %11974, label %11980, label %11975

11975:                                            ; preds = %11971
  %11976 = bitcast %class.LiteralBuffer* %11937 to i8**
  %11977 = load i8*, i8** %11976, align 8
  %11978 = and i64 %11951, 8589934590
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %11973, i8* align 2 %11977, i64 %11978, i1 false) #11
  %11979 = load i16*, i16** %11939, align 8
  br label %11980

11980:                                            ; preds = %11975, %11971
  %11981 = phi i16* [ %11972, %11971 ], [ %11979, %11975 ]
  %11982 = getelementptr inbounds i16, i16* %11981, i64 %11959
  %11983 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  store i16* %11982, i16** %11983, align 8
  br label %11984

11984:                                            ; preds = %11927, %11936, %11980
  store i32 0, i32* %74, align 8
  br label %14210

11985:                                            ; preds = %11885
  %11986 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %11987 = bitcast i16* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %11987)
  store i16 %11886, i16* %4, align 2
  %11988 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %11986, i64 0, i32 8, i32 0, i32 0, i32 0
  %11989 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %11988, align 8
  %11990 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %11989, i64 0, i32 3
  %11991 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %11989, i64 0, i32 3, i32 0, i32 0, i32 2
  %11992 = load i32, i32* %11991, align 4
  %11993 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %11989, i64 0, i32 3, i32 0, i32 0, i32 1
  %11994 = load i32, i32* %11993, align 8
  %11995 = icmp eq i32 %11992, %11994
  br i1 %11995, label %12003, label %11996, !prof !4

11996:                                            ; preds = %11985
  %11997 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %11990, i64 0, i32 0, i32 0, i32 0
  %11998 = load i16*, i16** %11997, align 8
  %11999 = zext i32 %11992 to i64
  %12000 = getelementptr inbounds i16, i16* %11998, i64 %11999
  store i16 %11886, i16* %12000, align 2
  %12001 = load i32, i32* %11991, align 4
  %12002 = add i32 %12001, 1
  store i32 %12002, i32* %11991, align 4
  br label %12004

12003:                                            ; preds = %11985
  call void @_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1"* %11990, i16* nonnull dereferenceable(2) %4) #11
  br label %12004

12004:                                            ; preds = %11996, %12003
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %11987)
  %12005 = load i8, i8* %49, align 1, !range !2
  %12006 = icmp eq i8 %12005, 0
  br i1 %12006, label %12013, label %12007

12007:                                            ; preds = %12004
  %12008 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %12009 = load i8*, i8** %12008, align 8
  %12010 = load i8, i8* %12009, align 1
  %12011 = zext i8 %12010 to i16
  %12012 = ptrtoint i8* %12009 to i64
  br label %12019

12013:                                            ; preds = %12004
  %12014 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %12015 = load i16*, i16** %12014, align 8
  %12016 = load i16, i16* %12015, align 2
  %12017 = ptrtoint i16* %12015 to i64
  %12018 = bitcast i16* %12015 to i8*
  br label %12019

12019:                                            ; preds = %12013, %12007
  %12020 = phi i8* [ %12009, %12007 ], [ %12018, %12013 ]
  %12021 = phi i64 [ %12012, %12007 ], [ %12017, %12013 ]
  %12022 = phi i16 [ %12011, %12007 ], [ %12016, %12013 ]
  %12023 = icmp eq i16 %12022, 10
  br i1 %12023, label %12024, label %12045

12024:                                            ; preds = %12019
  %12025 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %12026 = load i8, i8* %12025, align 8, !range !2
  %12027 = icmp eq i8 %12026, 0
  br i1 %12027, label %12045, label %12028, !prof !4

12028:                                            ; preds = %12024
  %12029 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %12030 = load i32, i32* %12029, align 8
  %12031 = add nsw i32 %12030, 1
  store i32 %12031, i32* %12029, align 8
  %12032 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %12033 = load i32, i32* %12032, align 8
  %12034 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %12035 = bitcast i8** %12034 to i64*
  %12036 = load i64, i64* %12035, align 8
  %12037 = sub i64 %12021, %12036
  %12038 = trunc i64 %12037 to i32
  %12039 = xor i8 %12005, 1
  %12040 = zext i8 %12039 to i32
  %12041 = ashr i32 %12038, %12040
  %12042 = add i32 %12033, 1
  %12043 = add i32 %12042, %12041
  %12044 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %12043, i32* %12044, align 4
  br label %12045

12045:                                            ; preds = %12028, %12024, %12019
  %12046 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %12047 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %12048 = load i8*, i8** %12047, align 8
  %12049 = icmp ult i8* %12020, %12048
  br i1 %12049, label %12050, label %12059, !prof !3

12050:                                            ; preds = %12045
  br i1 %12006, label %12055, label %12051

12051:                                            ; preds = %12050
  %12052 = getelementptr inbounds i8, i8* %12020, i64 1
  store i8* %12052, i8** %12046, align 8
  %12053 = load i8, i8* %12052, align 1
  %12054 = zext i8 %12053 to i16
  br label %12061

12055:                                            ; preds = %12050
  %12056 = getelementptr inbounds i8, i8* %12020, i64 2
  %12057 = bitcast i8* %12056 to i16*
  store i8* %12056, i8** %12046, align 8
  %12058 = load i16, i16* %12057, align 2
  br label %12061

12059:                                            ; preds = %12045
  %12060 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %12061

12061:                                            ; preds = %12059, %12055, %12051
  %12062 = phi i16 [ %12060, %12059 ], [ %12054, %12051 ], [ %12058, %12055 ]
  store i16 %12062, i16* %14, align 2
  %12063 = icmp ugt i16 %12062, 15
  br i1 %12063, label %12064, label %12066

12064:                                            ; preds = %12061
  %12065 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %12065, align 8
  br label %11883

12066:                                            ; preds = %12061
  %12067 = load i8, i8* %44, align 1, !range !2
  %12068 = icmp eq i8 %12067, 0
  br i1 %12068, label %12069, label %12071

12069:                                            ; preds = %12066
  %12070 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %12070, label %11883, label %12071

12071:                                            ; preds = %12066, %12069
  %12072 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %12073 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12072, i64 0, i32 0
  %12074 = load i32, i32* %12073, align 8
  %12075 = icmp eq i32 %12074, 5
  br label %14210

12076:                                            ; preds = %12257, %11548, %11776, %73, %12262
  %12077 = load i16, i16* %14, align 2
  br label %12078

12078:                                            ; preds = %11771, %11543, %12076
  %12079 = phi i16 [ %12077, %12076 ], [ %11769, %11771 ], [ %11541, %11543 ]
  switch i16 %12079, label %12178 [
    i16 39, label %12080
    i16 62, label %12114
    i16 0, label %12120
  ]

12080:                                            ; preds = %12078
  store i32 60, i32* %74, align 8
  %12081 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %12082 = load i8*, i8** %12081, align 8
  %12083 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %12084 = load i8*, i8** %12083, align 8
  %12085 = icmp ult i8* %12082, %12084
  br i1 %12085, label %12086, label %12097, !prof !3

12086:                                            ; preds = %12080
  %12087 = load i8, i8* %49, align 1, !range !2
  %12088 = icmp eq i8 %12087, 0
  br i1 %12088, label %12093, label %12089

12089:                                            ; preds = %12086
  %12090 = getelementptr inbounds i8, i8* %12082, i64 1
  store i8* %12090, i8** %12081, align 8
  %12091 = load i8, i8* %12090, align 1
  %12092 = zext i8 %12091 to i16
  br label %12099

12093:                                            ; preds = %12086
  %12094 = getelementptr inbounds i8, i8* %12082, i64 2
  %12095 = bitcast i8* %12094 to i16*
  store i8* %12094, i8** %12081, align 8
  %12096 = load i16, i16* %12095, align 2
  br label %12099

12097:                                            ; preds = %12080
  %12098 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %12099

12099:                                            ; preds = %12097, %12093, %12089
  %12100 = phi i16 [ %12098, %12097 ], [ %12092, %12089 ], [ %12096, %12093 ]
  store i16 %12100, i16* %14, align 2
  %12101 = icmp ugt i16 %12100, 15
  br i1 %12101, label %12102, label %12104

12102:                                            ; preds = %12099
  %12103 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %12103, align 8
  br label %12271

12104:                                            ; preds = %12099
  %12105 = load i8, i8* %44, align 1, !range !2
  %12106 = icmp eq i8 %12105, 0
  br i1 %12106, label %12107, label %12109

12107:                                            ; preds = %12104
  %12108 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %12108, label %12269, label %12109

12109:                                            ; preds = %12104, %12107
  %12110 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %12111 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12110, i64 0, i32 0
  %12112 = load i32, i32* %12111, align 8
  %12113 = icmp eq i32 %12112, 5
  br label %14210

12114:                                            ; preds = %12078
  %12115 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %12116 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12115, i64 0, i32 8, i32 0, i32 0, i32 0
  %12117 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %12116, align 8
  %12118 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12117, i64 0, i32 5
  store i8 1, i8* %12118, align 8
  %12119 = call zeroext i1 @_ZN5blink13HTMLTokenizer15EmitAndResumeInERNS_15SegmentedStringENS0_5StateE(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i32 0)
  br label %14210

12120:                                            ; preds = %12078
  %12121 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %12122 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12121, i64 0, i32 8, i32 0, i32 0, i32 0
  %12123 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %12122, align 8
  %12124 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12123, i64 0, i32 5
  store i8 1, i8* %12124, align 8
  %12125 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %12126 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12125, i64 0, i32 0
  %12127 = load i32, i32* %12126, align 8
  %12128 = icmp eq i32 %12127, 2
  br i1 %12128, label %12129, label %12177

12129:                                            ; preds = %12120
  %12130 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12125, i64 0, i32 3
  %12131 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %12132 = getelementptr inbounds %class.LiteralBuffer.0, %class.LiteralBuffer.0* %12131, i64 0, i32 0
  %12133 = load i16*, i16** %12132, align 8
  %12134 = getelementptr inbounds %class.LiteralBuffer, %class.LiteralBuffer* %12130, i64 0, i32 0
  %12135 = load i16*, i16** %12134, align 8
  %12136 = icmp eq i16* %12133, %12135
  %12137 = bitcast i16* %12133 to i8*
  br i1 %12136, label %12177, label %12138

12138:                                            ; preds = %12129
  %12139 = ptrtoint i16* %12133 to i64
  %12140 = ptrtoint i16* %12135 to i64
  %12141 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12125, i64 0, i32 3, i32 1
  %12142 = bitcast i16** %12141 to i64*
  %12143 = load i64, i64* %12142, align 8
  %12144 = sub i64 %12143, %12140
  %12145 = ashr exact i64 %12144, 1
  %12146 = trunc i64 %12145 to i32
  %12147 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 2
  %12148 = bitcast i16** %12147 to i64*
  %12149 = load i64, i64* %12148, align 8
  %12150 = sub i64 %12149, %12139
  %12151 = ashr exact i64 %12150, 1
  %12152 = and i64 %12145, 4294967295
  %12153 = icmp ult i64 %12151, %12152
  br i1 %12153, label %12154, label %12164

12154:                                            ; preds = %12138
  %12155 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 3, i64 0
  %12156 = icmp eq i16* %12133, %12155
  br i1 %12156, label %12158, label %12157

12157:                                            ; preds = %12154
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %12137) #11
  br label %12158

12158:                                            ; preds = %12157, %12154
  %12159 = bitcast %class.LiteralBuffer.0* %12131 to i8**
  %12160 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %12152) #11
  %12161 = call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %12160, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)) #11
  %12162 = bitcast i8* %12161 to i16*
  store i8* %12161, i8** %12159, align 8
  %12163 = getelementptr inbounds i16, i16* %12162, i64 %12152
  store i16* %12163, i16** %12147, align 8
  br label %12164

12164:                                            ; preds = %12158, %12138
  %12165 = phi i16* [ %12162, %12158 ], [ %12133, %12138 ]
  %12166 = phi i8* [ %12161, %12158 ], [ %12137, %12138 ]
  %12167 = icmp eq i32 %12146, 0
  br i1 %12167, label %12173, label %12168

12168:                                            ; preds = %12164
  %12169 = bitcast %class.LiteralBuffer* %12130 to i8**
  %12170 = load i8*, i8** %12169, align 8
  %12171 = and i64 %12144, 8589934590
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %12166, i8* align 2 %12170, i64 %12171, i1 false) #11
  %12172 = load i16*, i16** %12132, align 8
  br label %12173

12173:                                            ; preds = %12168, %12164
  %12174 = phi i16* [ %12165, %12164 ], [ %12172, %12168 ]
  %12175 = getelementptr inbounds i16, i16* %12174, i64 %12152
  %12176 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  store i16* %12175, i16** %12176, align 8
  br label %12177

12177:                                            ; preds = %12120, %12129, %12173
  store i32 0, i32* %74, align 8
  br label %14210

12178:                                            ; preds = %12078
  %12179 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %12180 = bitcast i16* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %12180)
  store i16 %12079, i16* %5, align 2
  %12181 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12179, i64 0, i32 8, i32 0, i32 0, i32 0
  %12182 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %12181, align 8
  %12183 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12182, i64 0, i32 3
  %12184 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12182, i64 0, i32 3, i32 0, i32 0, i32 2
  %12185 = load i32, i32* %12184, align 4
  %12186 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12182, i64 0, i32 3, i32 0, i32 0, i32 1
  %12187 = load i32, i32* %12186, align 8
  %12188 = icmp eq i32 %12185, %12187
  br i1 %12188, label %12196, label %12189, !prof !4

12189:                                            ; preds = %12178
  %12190 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %12183, i64 0, i32 0, i32 0, i32 0
  %12191 = load i16*, i16** %12190, align 8
  %12192 = zext i32 %12185 to i64
  %12193 = getelementptr inbounds i16, i16* %12191, i64 %12192
  store i16 %12079, i16* %12193, align 2
  %12194 = load i32, i32* %12184, align 4
  %12195 = add i32 %12194, 1
  store i32 %12195, i32* %12184, align 4
  br label %12197

12196:                                            ; preds = %12178
  call void @_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1"* %12183, i16* nonnull dereferenceable(2) %5) #11
  br label %12197

12197:                                            ; preds = %12189, %12196
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12180)
  %12198 = load i8, i8* %49, align 1, !range !2
  %12199 = icmp eq i8 %12198, 0
  br i1 %12199, label %12206, label %12200

12200:                                            ; preds = %12197
  %12201 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %12202 = load i8*, i8** %12201, align 8
  %12203 = load i8, i8* %12202, align 1
  %12204 = zext i8 %12203 to i16
  %12205 = ptrtoint i8* %12202 to i64
  br label %12212

12206:                                            ; preds = %12197
  %12207 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %12208 = load i16*, i16** %12207, align 8
  %12209 = load i16, i16* %12208, align 2
  %12210 = ptrtoint i16* %12208 to i64
  %12211 = bitcast i16* %12208 to i8*
  br label %12212

12212:                                            ; preds = %12206, %12200
  %12213 = phi i8* [ %12202, %12200 ], [ %12211, %12206 ]
  %12214 = phi i64 [ %12205, %12200 ], [ %12210, %12206 ]
  %12215 = phi i16 [ %12204, %12200 ], [ %12209, %12206 ]
  %12216 = icmp eq i16 %12215, 10
  br i1 %12216, label %12217, label %12238

12217:                                            ; preds = %12212
  %12218 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %12219 = load i8, i8* %12218, align 8, !range !2
  %12220 = icmp eq i8 %12219, 0
  br i1 %12220, label %12238, label %12221, !prof !4

12221:                                            ; preds = %12217
  %12222 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %12223 = load i32, i32* %12222, align 8
  %12224 = add nsw i32 %12223, 1
  store i32 %12224, i32* %12222, align 8
  %12225 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %12226 = load i32, i32* %12225, align 8
  %12227 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %12228 = bitcast i8** %12227 to i64*
  %12229 = load i64, i64* %12228, align 8
  %12230 = sub i64 %12214, %12229
  %12231 = trunc i64 %12230 to i32
  %12232 = xor i8 %12198, 1
  %12233 = zext i8 %12232 to i32
  %12234 = ashr i32 %12231, %12233
  %12235 = add i32 %12226, 1
  %12236 = add i32 %12235, %12234
  %12237 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %12236, i32* %12237, align 4
  br label %12238

12238:                                            ; preds = %12221, %12217, %12212
  %12239 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %12240 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %12241 = load i8*, i8** %12240, align 8
  %12242 = icmp ult i8* %12213, %12241
  br i1 %12242, label %12243, label %12252, !prof !3

12243:                                            ; preds = %12238
  br i1 %12199, label %12248, label %12244

12244:                                            ; preds = %12243
  %12245 = getelementptr inbounds i8, i8* %12213, i64 1
  store i8* %12245, i8** %12239, align 8
  %12246 = load i8, i8* %12245, align 1
  %12247 = zext i8 %12246 to i16
  br label %12254

12248:                                            ; preds = %12243
  %12249 = getelementptr inbounds i8, i8* %12213, i64 2
  %12250 = bitcast i8* %12249 to i16*
  store i8* %12249, i8** %12239, align 8
  %12251 = load i16, i16* %12250, align 2
  br label %12254

12252:                                            ; preds = %12238
  %12253 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %12254

12254:                                            ; preds = %12252, %12248, %12244
  %12255 = phi i16 [ %12253, %12252 ], [ %12247, %12244 ], [ %12251, %12248 ]
  store i16 %12255, i16* %14, align 2
  %12256 = icmp ugt i16 %12255, 15
  br i1 %12256, label %12257, label %12259

12257:                                            ; preds = %12254
  %12258 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %12258, align 8
  br label %12076

12259:                                            ; preds = %12254
  %12260 = load i8, i8* %44, align 1, !range !2
  %12261 = icmp eq i8 %12260, 0
  br i1 %12261, label %12262, label %12264

12262:                                            ; preds = %12259
  %12263 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %12263, label %12076, label %12264

12264:                                            ; preds = %12259, %12262
  %12265 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %12266 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12265, i64 0, i32 0
  %12267 = load i32, i32* %12266, align 8
  %12268 = icmp eq i32 %12267, 5
  br label %14210

12269:                                            ; preds = %11914, %12107, %73
  %12270 = load i16, i16* %14, align 2
  br label %12271

12271:                                            ; preds = %12269, %12102, %11909
  %12272 = phi i16 [ %12270, %12269 ], [ %12100, %12102 ], [ %11907, %11909 ]
  switch i16 %12272, label %12453 [
    i16 32, label %12273
    i16 10, label %12273
    i16 9, label %12273
    i16 12, label %12273
    i16 62, label %12345
    i16 34, label %12347
    i16 39, label %12400
  ]

12273:                                            ; preds = %12271, %12271, %12271, %12271
  store i32 61, i32* %74, align 8
  %12274 = load i8, i8* %49, align 1, !range !2
  %12275 = icmp eq i8 %12274, 0
  br i1 %12275, label %12282, label %12276

12276:                                            ; preds = %12273
  %12277 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %12278 = load i8*, i8** %12277, align 8
  %12279 = load i8, i8* %12278, align 1
  %12280 = zext i8 %12279 to i16
  %12281 = ptrtoint i8* %12278 to i64
  br label %12288

12282:                                            ; preds = %12273
  %12283 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %12284 = load i16*, i16** %12283, align 8
  %12285 = load i16, i16* %12284, align 2
  %12286 = ptrtoint i16* %12284 to i64
  %12287 = bitcast i16* %12284 to i8*
  br label %12288

12288:                                            ; preds = %12282, %12276
  %12289 = phi i8* [ %12278, %12276 ], [ %12287, %12282 ]
  %12290 = phi i64 [ %12281, %12276 ], [ %12286, %12282 ]
  %12291 = phi i16 [ %12280, %12276 ], [ %12285, %12282 ]
  %12292 = icmp eq i16 %12291, 10
  br i1 %12292, label %12293, label %12314

12293:                                            ; preds = %12288
  %12294 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %12295 = load i8, i8* %12294, align 8, !range !2
  %12296 = icmp eq i8 %12295, 0
  br i1 %12296, label %12314, label %12297, !prof !4

12297:                                            ; preds = %12293
  %12298 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %12299 = load i32, i32* %12298, align 8
  %12300 = add nsw i32 %12299, 1
  store i32 %12300, i32* %12298, align 8
  %12301 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %12302 = load i32, i32* %12301, align 8
  %12303 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %12304 = bitcast i8** %12303 to i64*
  %12305 = load i64, i64* %12304, align 8
  %12306 = sub i64 %12290, %12305
  %12307 = trunc i64 %12306 to i32
  %12308 = xor i8 %12274, 1
  %12309 = zext i8 %12308 to i32
  %12310 = ashr i32 %12307, %12309
  %12311 = add i32 %12302, 1
  %12312 = add i32 %12311, %12310
  %12313 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %12312, i32* %12313, align 4
  br label %12314

12314:                                            ; preds = %12297, %12293, %12288
  %12315 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %12316 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %12317 = load i8*, i8** %12316, align 8
  %12318 = icmp ult i8* %12289, %12317
  br i1 %12318, label %12319, label %12328, !prof !3

12319:                                            ; preds = %12314
  br i1 %12275, label %12324, label %12320

12320:                                            ; preds = %12319
  %12321 = getelementptr inbounds i8, i8* %12289, i64 1
  store i8* %12321, i8** %12315, align 8
  %12322 = load i8, i8* %12321, align 1
  %12323 = zext i8 %12322 to i16
  br label %12330

12324:                                            ; preds = %12319
  %12325 = getelementptr inbounds i8, i8* %12289, i64 2
  %12326 = bitcast i8* %12325 to i16*
  store i8* %12325, i8** %12315, align 8
  %12327 = load i16, i16* %12326, align 2
  br label %12330

12328:                                            ; preds = %12314
  %12329 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %12330

12330:                                            ; preds = %12328, %12324, %12320
  %12331 = phi i16 [ %12329, %12328 ], [ %12323, %12320 ], [ %12327, %12324 ]
  store i16 %12331, i16* %14, align 2
  %12332 = icmp ugt i16 %12331, 15
  br i1 %12332, label %12333, label %12335

12333:                                            ; preds = %12330
  %12334 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %12334, align 8
  br label %12549

12335:                                            ; preds = %12330
  %12336 = load i8, i8* %44, align 1, !range !2
  %12337 = icmp eq i8 %12336, 0
  br i1 %12337, label %12338, label %12340

12338:                                            ; preds = %12335
  %12339 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %12339, label %12547, label %12340

12340:                                            ; preds = %12335, %12338
  %12341 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %12342 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12341, i64 0, i32 0
  %12343 = load i32, i32* %12342, align 8
  %12344 = icmp eq i32 %12343, 5
  br label %14210

12345:                                            ; preds = %12271
  %12346 = call zeroext i1 @_ZN5blink13HTMLTokenizer15EmitAndResumeInERNS_15SegmentedStringENS0_5StateE(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i32 0)
  br label %14210

12347:                                            ; preds = %12271
  %12348 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %12349 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12348, i64 0, i32 8, i32 0, i32 0, i32 0
  %12350 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %12349, align 8
  %12351 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12350, i64 0, i32 1
  store i8 1, i8* %12351, align 1
  %12352 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %12349, align 8
  %12353 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12352, i64 0, i32 4
  %12354 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12352, i64 0, i32 4, i32 0, i32 0, i32 1
  %12355 = load i32, i32* %12354, align 8
  %12356 = icmp eq i32 %12355, 0
  br i1 %12356, label %12366, label %12357

12357:                                            ; preds = %12347
  %12358 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12352, i64 0, i32 4, i32 0, i32 0, i32 2
  %12359 = load i32, i32* %12358, align 4
  %12360 = icmp eq i32 %12359, 0
  br i1 %12360, label %12362, label %12361

12361:                                            ; preds = %12357
  store i32 0, i32* %12358, align 4
  br label %12362

12362:                                            ; preds = %12361, %12357
  %12363 = bitcast %"class.WTF::Vector.1"* %12353 to i8**
  %12364 = load i8*, i8** %12363, align 8
  %12365 = bitcast %"class.WTF::Vector.1"* %12353 to i64*
  store atomic i64 0, i64* %12365 monotonic, align 8
  store i32 0, i32* %12354, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %12364) #11
  br label %12366

12366:                                            ; preds = %12347, %12362
  store i32 64, i32* %74, align 8
  %12367 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %12368 = load i8*, i8** %12367, align 8
  %12369 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %12370 = load i8*, i8** %12369, align 8
  %12371 = icmp ult i8* %12368, %12370
  br i1 %12371, label %12372, label %12383, !prof !3

12372:                                            ; preds = %12366
  %12373 = load i8, i8* %49, align 1, !range !2
  %12374 = icmp eq i8 %12373, 0
  br i1 %12374, label %12379, label %12375

12375:                                            ; preds = %12372
  %12376 = getelementptr inbounds i8, i8* %12368, i64 1
  store i8* %12376, i8** %12367, align 8
  %12377 = load i8, i8* %12376, align 1
  %12378 = zext i8 %12377 to i16
  br label %12385

12379:                                            ; preds = %12372
  %12380 = getelementptr inbounds i8, i8* %12368, i64 2
  %12381 = bitcast i8* %12380 to i16*
  store i8* %12380, i8** %12367, align 8
  %12382 = load i16, i16* %12381, align 2
  br label %12385

12383:                                            ; preds = %12366
  %12384 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %12385

12385:                                            ; preds = %12383, %12379, %12375
  %12386 = phi i16 [ %12384, %12383 ], [ %12378, %12375 ], [ %12382, %12379 ]
  store i16 %12386, i16* %14, align 2
  %12387 = icmp ugt i16 %12386, 15
  br i1 %12387, label %12388, label %12390

12388:                                            ; preds = %12385
  %12389 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %12389, align 8
  br label %13283

12390:                                            ; preds = %12385
  %12391 = load i8, i8* %44, align 1, !range !2
  %12392 = icmp eq i8 %12391, 0
  br i1 %12392, label %12393, label %12395

12393:                                            ; preds = %12390
  %12394 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %12394, label %13281, label %12395

12395:                                            ; preds = %12390, %12393
  %12396 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %12397 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12396, i64 0, i32 0
  %12398 = load i32, i32* %12397, align 8
  %12399 = icmp eq i32 %12398, 5
  br label %14210

12400:                                            ; preds = %12271
  %12401 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %12402 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12401, i64 0, i32 8, i32 0, i32 0, i32 0
  %12403 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %12402, align 8
  %12404 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12403, i64 0, i32 1
  store i8 1, i8* %12404, align 1
  %12405 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %12402, align 8
  %12406 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12405, i64 0, i32 4
  %12407 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12405, i64 0, i32 4, i32 0, i32 0, i32 1
  %12408 = load i32, i32* %12407, align 8
  %12409 = icmp eq i32 %12408, 0
  br i1 %12409, label %12419, label %12410

12410:                                            ; preds = %12400
  %12411 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12405, i64 0, i32 4, i32 0, i32 0, i32 2
  %12412 = load i32, i32* %12411, align 4
  %12413 = icmp eq i32 %12412, 0
  br i1 %12413, label %12415, label %12414

12414:                                            ; preds = %12410
  store i32 0, i32* %12411, align 4
  br label %12415

12415:                                            ; preds = %12414, %12410
  %12416 = bitcast %"class.WTF::Vector.1"* %12406 to i8**
  %12417 = load i8*, i8** %12416, align 8
  %12418 = bitcast %"class.WTF::Vector.1"* %12406 to i64*
  store atomic i64 0, i64* %12418 monotonic, align 8
  store i32 0, i32* %12407, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %12417) #11
  br label %12419

12419:                                            ; preds = %12400, %12415
  store i32 65, i32* %74, align 8
  %12420 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %12421 = load i8*, i8** %12420, align 8
  %12422 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %12423 = load i8*, i8** %12422, align 8
  %12424 = icmp ult i8* %12421, %12423
  br i1 %12424, label %12425, label %12436, !prof !3

12425:                                            ; preds = %12419
  %12426 = load i8, i8* %49, align 1, !range !2
  %12427 = icmp eq i8 %12426, 0
  br i1 %12427, label %12432, label %12428

12428:                                            ; preds = %12425
  %12429 = getelementptr inbounds i8, i8* %12421, i64 1
  store i8* %12429, i8** %12420, align 8
  %12430 = load i8, i8* %12429, align 1
  %12431 = zext i8 %12430 to i16
  br label %12438

12432:                                            ; preds = %12425
  %12433 = getelementptr inbounds i8, i8* %12421, i64 2
  %12434 = bitcast i8* %12433 to i16*
  store i8* %12433, i8** %12420, align 8
  %12435 = load i16, i16* %12434, align 2
  br label %12438

12436:                                            ; preds = %12419
  %12437 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %12438

12438:                                            ; preds = %12436, %12432, %12428
  %12439 = phi i16 [ %12437, %12436 ], [ %12431, %12428 ], [ %12435, %12432 ]
  store i16 %12439, i16* %14, align 2
  %12440 = icmp ugt i16 %12439, 15
  br i1 %12440, label %12441, label %12443

12441:                                            ; preds = %12438
  %12442 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %12442, align 8
  br label %13476

12443:                                            ; preds = %12438
  %12444 = load i8, i8* %44, align 1, !range !2
  %12445 = icmp eq i8 %12444, 0
  br i1 %12445, label %12446, label %12448

12446:                                            ; preds = %12443
  %12447 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %12447, label %13474, label %12448

12448:                                            ; preds = %12443, %12446
  %12449 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %12450 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12449, i64 0, i32 0
  %12451 = load i32, i32* %12450, align 8
  %12452 = icmp eq i32 %12451, 5
  br label %14210

12453:                                            ; preds = %12271
  %12454 = icmp eq i16 %12272, 0
  %12455 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %12456 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12455, i64 0, i32 8, i32 0, i32 0, i32 0
  %12457 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %12456, align 8
  %12458 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12457, i64 0, i32 5
  store i8 1, i8* %12458, align 8
  br i1 %12454, label %12459, label %12513

12459:                                            ; preds = %12453
  %12460 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %12461 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12460, i64 0, i32 0
  %12462 = load i32, i32* %12461, align 8
  %12463 = icmp eq i32 %12462, 2
  br i1 %12463, label %12464, label %12512

12464:                                            ; preds = %12459
  %12465 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12460, i64 0, i32 3
  %12466 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %12467 = getelementptr inbounds %class.LiteralBuffer.0, %class.LiteralBuffer.0* %12466, i64 0, i32 0
  %12468 = load i16*, i16** %12467, align 8
  %12469 = getelementptr inbounds %class.LiteralBuffer, %class.LiteralBuffer* %12465, i64 0, i32 0
  %12470 = load i16*, i16** %12469, align 8
  %12471 = icmp eq i16* %12468, %12470
  %12472 = bitcast i16* %12468 to i8*
  br i1 %12471, label %12512, label %12473

12473:                                            ; preds = %12464
  %12474 = ptrtoint i16* %12468 to i64
  %12475 = ptrtoint i16* %12470 to i64
  %12476 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12460, i64 0, i32 3, i32 1
  %12477 = bitcast i16** %12476 to i64*
  %12478 = load i64, i64* %12477, align 8
  %12479 = sub i64 %12478, %12475
  %12480 = ashr exact i64 %12479, 1
  %12481 = trunc i64 %12480 to i32
  %12482 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 2
  %12483 = bitcast i16** %12482 to i64*
  %12484 = load i64, i64* %12483, align 8
  %12485 = sub i64 %12484, %12474
  %12486 = ashr exact i64 %12485, 1
  %12487 = and i64 %12480, 4294967295
  %12488 = icmp ult i64 %12486, %12487
  br i1 %12488, label %12489, label %12499

12489:                                            ; preds = %12473
  %12490 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 3, i64 0
  %12491 = icmp eq i16* %12468, %12490
  br i1 %12491, label %12493, label %12492

12492:                                            ; preds = %12489
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %12472) #11
  br label %12493

12493:                                            ; preds = %12492, %12489
  %12494 = bitcast %class.LiteralBuffer.0* %12466 to i8**
  %12495 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %12487) #11
  %12496 = call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %12495, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)) #11
  %12497 = bitcast i8* %12496 to i16*
  store i8* %12496, i8** %12494, align 8
  %12498 = getelementptr inbounds i16, i16* %12497, i64 %12487
  store i16* %12498, i16** %12482, align 8
  br label %12499

12499:                                            ; preds = %12493, %12473
  %12500 = phi i16* [ %12497, %12493 ], [ %12468, %12473 ]
  %12501 = phi i8* [ %12496, %12493 ], [ %12472, %12473 ]
  %12502 = icmp eq i32 %12481, 0
  br i1 %12502, label %12508, label %12503

12503:                                            ; preds = %12499
  %12504 = bitcast %class.LiteralBuffer* %12465 to i8**
  %12505 = load i8*, i8** %12504, align 8
  %12506 = and i64 %12479, 8589934590
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %12501, i8* align 2 %12505, i64 %12506, i1 false) #11
  %12507 = load i16*, i16** %12467, align 8
  br label %12508

12508:                                            ; preds = %12503, %12499
  %12509 = phi i16* [ %12500, %12499 ], [ %12507, %12503 ]
  %12510 = getelementptr inbounds i16, i16* %12509, i64 %12487
  %12511 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  store i16* %12510, i16** %12511, align 8
  br label %12512

12512:                                            ; preds = %12459, %12464, %12508
  store i32 0, i32* %74, align 8
  br label %14210

12513:                                            ; preds = %12453
  store i32 67, i32* %74, align 8
  %12514 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %12515 = load i8*, i8** %12514, align 8
  %12516 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %12517 = load i8*, i8** %12516, align 8
  %12518 = icmp ult i8* %12515, %12517
  br i1 %12518, label %12519, label %12530, !prof !3

12519:                                            ; preds = %12513
  %12520 = load i8, i8* %49, align 1, !range !2
  %12521 = icmp eq i8 %12520, 0
  br i1 %12521, label %12526, label %12522

12522:                                            ; preds = %12519
  %12523 = getelementptr inbounds i8, i8* %12515, i64 1
  store i8* %12523, i8** %12514, align 8
  %12524 = load i8, i8* %12523, align 1
  %12525 = zext i8 %12524 to i16
  br label %12532

12526:                                            ; preds = %12519
  %12527 = getelementptr inbounds i8, i8* %12515, i64 2
  %12528 = bitcast i8* %12527 to i16*
  store i8* %12527, i8** %12514, align 8
  %12529 = load i16, i16* %12528, align 2
  br label %12532

12530:                                            ; preds = %12513
  %12531 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %12532

12532:                                            ; preds = %12530, %12526, %12522
  %12533 = phi i16 [ %12531, %12530 ], [ %12525, %12522 ], [ %12529, %12526 ]
  store i16 %12533, i16* %14, align 2
  %12534 = icmp ugt i16 %12533, 15
  br i1 %12534, label %12535, label %12537

12535:                                            ; preds = %12532
  %12536 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %12536, align 8
  br label %13785

12537:                                            ; preds = %12532
  %12538 = load i8, i8* %44, align 1, !range !2
  %12539 = icmp eq i8 %12538, 0
  br i1 %12539, label %12540, label %12542

12540:                                            ; preds = %12537
  %12541 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %12541, label %13783, label %12542

12542:                                            ; preds = %12537, %12540
  %12543 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %12544 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12543, i64 0, i32 0
  %12545 = load i32, i32* %12544, align 8
  %12546 = icmp eq i32 %12545, 5
  br label %14210

12547:                                            ; preds = %12338, %73
  %12548 = load i16, i16* %14, align 2
  br label %12549

12549:                                            ; preds = %12547, %12333
  %12550 = phi i16 [ %12548, %12547 ], [ %12331, %12333 ]
  %12551 = icmp ult i16 %12550, 128
  br i1 %12551, label %12552, label %12567

12552:                                            ; preds = %12549
  %12553 = zext i16 %12550 to i64
  %12554 = getelementptr inbounds [128 x i8], [128 x i8]* bitcast (<{ [63 x i8], [65 x i8] }>* @_ZN5blinkL21character_scan_flags_E to [128 x i8]*), i64 0, i64 %12553
  %12555 = load i8, i8* %12554, align 1
  %12556 = and i8 %12555, 6
  %12557 = icmp eq i8 %12556, 0
  br i1 %12557, label %12567, label %12558

12558:                                            ; preds = %12552
  %12559 = call zeroext i1 @_ZN5blink13HTMLTokenizer21SkipWhitespacesHelperERNS_15SegmentedStringERDs(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %12559, label %12560, label %12562

12560:                                            ; preds = %12558
  %12561 = load i16, i16* %14, align 2
  br label %12567

12562:                                            ; preds = %12558
  %12563 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %12564 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12563, i64 0, i32 0
  %12565 = load i32, i32* %12564, align 8
  %12566 = icmp eq i32 %12565, 5
  br label %14210

12567:                                            ; preds = %12560, %12549, %12552
  %12568 = phi i16 [ %12561, %12560 ], [ %12550, %12549 ], [ %12550, %12552 ]
  switch i16 %12568, label %12677 [
    i16 62, label %12569
    i16 34, label %12571
    i16 39, label %12624
  ]

12569:                                            ; preds = %12567
  %12570 = call zeroext i1 @_ZN5blink13HTMLTokenizer15EmitAndResumeInERNS_15SegmentedStringENS0_5StateE(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i32 0)
  br label %14210

12571:                                            ; preds = %12567
  %12572 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %12573 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12572, i64 0, i32 8, i32 0, i32 0, i32 0
  %12574 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %12573, align 8
  %12575 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12574, i64 0, i32 1
  store i8 1, i8* %12575, align 1
  %12576 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %12573, align 8
  %12577 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12576, i64 0, i32 4
  %12578 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12576, i64 0, i32 4, i32 0, i32 0, i32 1
  %12579 = load i32, i32* %12578, align 8
  %12580 = icmp eq i32 %12579, 0
  br i1 %12580, label %12590, label %12581

12581:                                            ; preds = %12571
  %12582 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12576, i64 0, i32 4, i32 0, i32 0, i32 2
  %12583 = load i32, i32* %12582, align 4
  %12584 = icmp eq i32 %12583, 0
  br i1 %12584, label %12586, label %12585

12585:                                            ; preds = %12581
  store i32 0, i32* %12582, align 4
  br label %12586

12586:                                            ; preds = %12585, %12581
  %12587 = bitcast %"class.WTF::Vector.1"* %12577 to i8**
  %12588 = load i8*, i8** %12587, align 8
  %12589 = bitcast %"class.WTF::Vector.1"* %12577 to i64*
  store atomic i64 0, i64* %12589 monotonic, align 8
  store i32 0, i32* %12578, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %12588) #11
  br label %12590

12590:                                            ; preds = %12571, %12586
  store i32 64, i32* %74, align 8
  %12591 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %12592 = load i8*, i8** %12591, align 8
  %12593 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %12594 = load i8*, i8** %12593, align 8
  %12595 = icmp ult i8* %12592, %12594
  br i1 %12595, label %12596, label %12607, !prof !3

12596:                                            ; preds = %12590
  %12597 = load i8, i8* %49, align 1, !range !2
  %12598 = icmp eq i8 %12597, 0
  br i1 %12598, label %12603, label %12599

12599:                                            ; preds = %12596
  %12600 = getelementptr inbounds i8, i8* %12592, i64 1
  store i8* %12600, i8** %12591, align 8
  %12601 = load i8, i8* %12600, align 1
  %12602 = zext i8 %12601 to i16
  br label %12609

12603:                                            ; preds = %12596
  %12604 = getelementptr inbounds i8, i8* %12592, i64 2
  %12605 = bitcast i8* %12604 to i16*
  store i8* %12604, i8** %12591, align 8
  %12606 = load i16, i16* %12605, align 2
  br label %12609

12607:                                            ; preds = %12590
  %12608 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %12609

12609:                                            ; preds = %12607, %12603, %12599
  %12610 = phi i16 [ %12608, %12607 ], [ %12602, %12599 ], [ %12606, %12603 ]
  store i16 %12610, i16* %14, align 2
  %12611 = icmp ugt i16 %12610, 15
  br i1 %12611, label %12612, label %12614

12612:                                            ; preds = %12609
  %12613 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %12613, align 8
  br label %13283

12614:                                            ; preds = %12609
  %12615 = load i8, i8* %44, align 1, !range !2
  %12616 = icmp eq i8 %12615, 0
  br i1 %12616, label %12617, label %12619

12617:                                            ; preds = %12614
  %12618 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %12618, label %13281, label %12619

12619:                                            ; preds = %12614, %12617
  %12620 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %12621 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12620, i64 0, i32 0
  %12622 = load i32, i32* %12621, align 8
  %12623 = icmp eq i32 %12622, 5
  br label %14210

12624:                                            ; preds = %12567
  %12625 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %12626 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12625, i64 0, i32 8, i32 0, i32 0, i32 0
  %12627 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %12626, align 8
  %12628 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12627, i64 0, i32 1
  store i8 1, i8* %12628, align 1
  %12629 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %12626, align 8
  %12630 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12629, i64 0, i32 4
  %12631 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12629, i64 0, i32 4, i32 0, i32 0, i32 1
  %12632 = load i32, i32* %12631, align 8
  %12633 = icmp eq i32 %12632, 0
  br i1 %12633, label %12643, label %12634

12634:                                            ; preds = %12624
  %12635 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12629, i64 0, i32 4, i32 0, i32 0, i32 2
  %12636 = load i32, i32* %12635, align 4
  %12637 = icmp eq i32 %12636, 0
  br i1 %12637, label %12639, label %12638

12638:                                            ; preds = %12634
  store i32 0, i32* %12635, align 4
  br label %12639

12639:                                            ; preds = %12638, %12634
  %12640 = bitcast %"class.WTF::Vector.1"* %12630 to i8**
  %12641 = load i8*, i8** %12640, align 8
  %12642 = bitcast %"class.WTF::Vector.1"* %12630 to i64*
  store atomic i64 0, i64* %12642 monotonic, align 8
  store i32 0, i32* %12631, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %12641) #11
  br label %12643

12643:                                            ; preds = %12624, %12639
  store i32 65, i32* %74, align 8
  %12644 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %12645 = load i8*, i8** %12644, align 8
  %12646 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %12647 = load i8*, i8** %12646, align 8
  %12648 = icmp ult i8* %12645, %12647
  br i1 %12648, label %12649, label %12660, !prof !3

12649:                                            ; preds = %12643
  %12650 = load i8, i8* %49, align 1, !range !2
  %12651 = icmp eq i8 %12650, 0
  br i1 %12651, label %12656, label %12652

12652:                                            ; preds = %12649
  %12653 = getelementptr inbounds i8, i8* %12645, i64 1
  store i8* %12653, i8** %12644, align 8
  %12654 = load i8, i8* %12653, align 1
  %12655 = zext i8 %12654 to i16
  br label %12662

12656:                                            ; preds = %12649
  %12657 = getelementptr inbounds i8, i8* %12645, i64 2
  %12658 = bitcast i8* %12657 to i16*
  store i8* %12657, i8** %12644, align 8
  %12659 = load i16, i16* %12658, align 2
  br label %12662

12660:                                            ; preds = %12643
  %12661 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %12662

12662:                                            ; preds = %12660, %12656, %12652
  %12663 = phi i16 [ %12661, %12660 ], [ %12655, %12652 ], [ %12659, %12656 ]
  store i16 %12663, i16* %14, align 2
  %12664 = icmp ugt i16 %12663, 15
  br i1 %12664, label %12665, label %12667

12665:                                            ; preds = %12662
  %12666 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %12666, align 8
  br label %13476

12667:                                            ; preds = %12662
  %12668 = load i8, i8* %44, align 1, !range !2
  %12669 = icmp eq i8 %12668, 0
  br i1 %12669, label %12670, label %12672

12670:                                            ; preds = %12667
  %12671 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %12671, label %13474, label %12672

12672:                                            ; preds = %12667, %12670
  %12673 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %12674 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12673, i64 0, i32 0
  %12675 = load i32, i32* %12674, align 8
  %12676 = icmp eq i32 %12675, 5
  br label %14210

12677:                                            ; preds = %12567
  %12678 = icmp eq i16 %12568, 0
  %12679 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %12680 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12679, i64 0, i32 8, i32 0, i32 0, i32 0
  %12681 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %12680, align 8
  %12682 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12681, i64 0, i32 5
  store i8 1, i8* %12682, align 8
  br i1 %12678, label %12683, label %12737

12683:                                            ; preds = %12677
  %12684 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %12685 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12684, i64 0, i32 0
  %12686 = load i32, i32* %12685, align 8
  %12687 = icmp eq i32 %12686, 2
  br i1 %12687, label %12688, label %12736

12688:                                            ; preds = %12683
  %12689 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12684, i64 0, i32 3
  %12690 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %12691 = getelementptr inbounds %class.LiteralBuffer.0, %class.LiteralBuffer.0* %12690, i64 0, i32 0
  %12692 = load i16*, i16** %12691, align 8
  %12693 = getelementptr inbounds %class.LiteralBuffer, %class.LiteralBuffer* %12689, i64 0, i32 0
  %12694 = load i16*, i16** %12693, align 8
  %12695 = icmp eq i16* %12692, %12694
  %12696 = bitcast i16* %12692 to i8*
  br i1 %12695, label %12736, label %12697

12697:                                            ; preds = %12688
  %12698 = ptrtoint i16* %12692 to i64
  %12699 = ptrtoint i16* %12694 to i64
  %12700 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12684, i64 0, i32 3, i32 1
  %12701 = bitcast i16** %12700 to i64*
  %12702 = load i64, i64* %12701, align 8
  %12703 = sub i64 %12702, %12699
  %12704 = ashr exact i64 %12703, 1
  %12705 = trunc i64 %12704 to i32
  %12706 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 2
  %12707 = bitcast i16** %12706 to i64*
  %12708 = load i64, i64* %12707, align 8
  %12709 = sub i64 %12708, %12698
  %12710 = ashr exact i64 %12709, 1
  %12711 = and i64 %12704, 4294967295
  %12712 = icmp ult i64 %12710, %12711
  br i1 %12712, label %12713, label %12723

12713:                                            ; preds = %12697
  %12714 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 3, i64 0
  %12715 = icmp eq i16* %12692, %12714
  br i1 %12715, label %12717, label %12716

12716:                                            ; preds = %12713
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %12696) #11
  br label %12717

12717:                                            ; preds = %12716, %12713
  %12718 = bitcast %class.LiteralBuffer.0* %12690 to i8**
  %12719 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %12711) #11
  %12720 = call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %12719, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)) #11
  %12721 = bitcast i8* %12720 to i16*
  store i8* %12720, i8** %12718, align 8
  %12722 = getelementptr inbounds i16, i16* %12721, i64 %12711
  store i16* %12722, i16** %12706, align 8
  br label %12723

12723:                                            ; preds = %12717, %12697
  %12724 = phi i16* [ %12721, %12717 ], [ %12692, %12697 ]
  %12725 = phi i8* [ %12720, %12717 ], [ %12696, %12697 ]
  %12726 = icmp eq i32 %12705, 0
  br i1 %12726, label %12732, label %12727

12727:                                            ; preds = %12723
  %12728 = bitcast %class.LiteralBuffer* %12689 to i8**
  %12729 = load i8*, i8** %12728, align 8
  %12730 = and i64 %12703, 8589934590
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %12725, i8* align 2 %12729, i64 %12730, i1 false) #11
  %12731 = load i16*, i16** %12691, align 8
  br label %12732

12732:                                            ; preds = %12727, %12723
  %12733 = phi i16* [ %12724, %12723 ], [ %12731, %12727 ]
  %12734 = getelementptr inbounds i16, i16* %12733, i64 %12711
  %12735 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  store i16* %12734, i16** %12735, align 8
  br label %12736

12736:                                            ; preds = %12683, %12688, %12732
  store i32 0, i32* %74, align 8
  br label %14210

12737:                                            ; preds = %12677
  store i32 67, i32* %74, align 8
  %12738 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %12739 = load i8*, i8** %12738, align 8
  %12740 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %12741 = load i8*, i8** %12740, align 8
  %12742 = icmp ult i8* %12739, %12741
  br i1 %12742, label %12743, label %12754, !prof !3

12743:                                            ; preds = %12737
  %12744 = load i8, i8* %49, align 1, !range !2
  %12745 = icmp eq i8 %12744, 0
  br i1 %12745, label %12750, label %12746

12746:                                            ; preds = %12743
  %12747 = getelementptr inbounds i8, i8* %12739, i64 1
  store i8* %12747, i8** %12738, align 8
  %12748 = load i8, i8* %12747, align 1
  %12749 = zext i8 %12748 to i16
  br label %12756

12750:                                            ; preds = %12743
  %12751 = getelementptr inbounds i8, i8* %12739, i64 2
  %12752 = bitcast i8* %12751 to i16*
  store i8* %12751, i8** %12738, align 8
  %12753 = load i16, i16* %12752, align 2
  br label %12756

12754:                                            ; preds = %12737
  %12755 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %12756

12756:                                            ; preds = %12754, %12750, %12746
  %12757 = phi i16 [ %12755, %12754 ], [ %12749, %12746 ], [ %12753, %12750 ]
  store i16 %12757, i16* %14, align 2
  %12758 = icmp ugt i16 %12757, 15
  br i1 %12758, label %12759, label %12761

12759:                                            ; preds = %12756
  %12760 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %12760, align 8
  br label %13785

12761:                                            ; preds = %12756
  %12762 = load i8, i8* %44, align 1, !range !2
  %12763 = icmp eq i8 %12762, 0
  br i1 %12763, label %12764, label %12766

12764:                                            ; preds = %12761
  %12765 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %12765, label %13783, label %12766

12766:                                            ; preds = %12761, %12764
  %12767 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %12768 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12767, i64 0, i32 0
  %12769 = load i32, i32* %12768, align 8
  %12770 = icmp eq i32 %12769, 5
  br label %14210

12771:                                            ; preds = %73, %11323
  %12772 = load i16, i16* %14, align 2
  br label %12773

12773:                                            ; preds = %12771, %11321
  %12774 = phi i16 [ %12772, %12771 ], [ %11319, %11321 ]
  switch i16 %12774, label %12959 [
    i16 32, label %12775
    i16 10, label %12775
    i16 9, label %12775
    i16 12, label %12775
    i16 34, label %12847
    i16 39, label %12900
    i16 62, label %12953
  ]

12775:                                            ; preds = %12773, %12773, %12773, %12773
  store i32 63, i32* %74, align 8
  %12776 = load i8, i8* %49, align 1, !range !2
  %12777 = icmp eq i8 %12776, 0
  br i1 %12777, label %12784, label %12778

12778:                                            ; preds = %12775
  %12779 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %12780 = load i8*, i8** %12779, align 8
  %12781 = load i8, i8* %12780, align 1
  %12782 = zext i8 %12781 to i16
  %12783 = ptrtoint i8* %12780 to i64
  br label %12790

12784:                                            ; preds = %12775
  %12785 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %12786 = load i16*, i16** %12785, align 8
  %12787 = load i16, i16* %12786, align 2
  %12788 = ptrtoint i16* %12786 to i64
  %12789 = bitcast i16* %12786 to i8*
  br label %12790

12790:                                            ; preds = %12784, %12778
  %12791 = phi i8* [ %12780, %12778 ], [ %12789, %12784 ]
  %12792 = phi i64 [ %12783, %12778 ], [ %12788, %12784 ]
  %12793 = phi i16 [ %12782, %12778 ], [ %12787, %12784 ]
  %12794 = icmp eq i16 %12793, 10
  br i1 %12794, label %12795, label %12816

12795:                                            ; preds = %12790
  %12796 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %12797 = load i8, i8* %12796, align 8, !range !2
  %12798 = icmp eq i8 %12797, 0
  br i1 %12798, label %12816, label %12799, !prof !4

12799:                                            ; preds = %12795
  %12800 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %12801 = load i32, i32* %12800, align 8
  %12802 = add nsw i32 %12801, 1
  store i32 %12802, i32* %12800, align 8
  %12803 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %12804 = load i32, i32* %12803, align 8
  %12805 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %12806 = bitcast i8** %12805 to i64*
  %12807 = load i64, i64* %12806, align 8
  %12808 = sub i64 %12792, %12807
  %12809 = trunc i64 %12808 to i32
  %12810 = xor i8 %12776, 1
  %12811 = zext i8 %12810 to i32
  %12812 = ashr i32 %12809, %12811
  %12813 = add i32 %12804, 1
  %12814 = add i32 %12813, %12812
  %12815 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %12814, i32* %12815, align 4
  br label %12816

12816:                                            ; preds = %12799, %12795, %12790
  %12817 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %12818 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %12819 = load i8*, i8** %12818, align 8
  %12820 = icmp ult i8* %12791, %12819
  br i1 %12820, label %12821, label %12830, !prof !3

12821:                                            ; preds = %12816
  br i1 %12777, label %12826, label %12822

12822:                                            ; preds = %12821
  %12823 = getelementptr inbounds i8, i8* %12791, i64 1
  store i8* %12823, i8** %12817, align 8
  %12824 = load i8, i8* %12823, align 1
  %12825 = zext i8 %12824 to i16
  br label %12832

12826:                                            ; preds = %12821
  %12827 = getelementptr inbounds i8, i8* %12791, i64 2
  %12828 = bitcast i8* %12827 to i16*
  store i8* %12827, i8** %12817, align 8
  %12829 = load i16, i16* %12828, align 2
  br label %12832

12830:                                            ; preds = %12816
  %12831 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %12832

12832:                                            ; preds = %12830, %12826, %12822
  %12833 = phi i16 [ %12831, %12830 ], [ %12825, %12822 ], [ %12829, %12826 ]
  store i16 %12833, i16* %14, align 2
  %12834 = icmp ugt i16 %12833, 15
  br i1 %12834, label %12835, label %12837

12835:                                            ; preds = %12832
  %12836 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %12836, align 8
  br label %13055

12837:                                            ; preds = %12832
  %12838 = load i8, i8* %44, align 1, !range !2
  %12839 = icmp eq i8 %12838, 0
  br i1 %12839, label %12840, label %12842

12840:                                            ; preds = %12837
  %12841 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %12841, label %13053, label %12842

12842:                                            ; preds = %12837, %12840
  %12843 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %12844 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12843, i64 0, i32 0
  %12845 = load i32, i32* %12844, align 8
  %12846 = icmp eq i32 %12845, 5
  br label %14210

12847:                                            ; preds = %12773
  %12848 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %12849 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12848, i64 0, i32 8, i32 0, i32 0, i32 0
  %12850 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %12849, align 8
  %12851 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12850, i64 0, i32 1
  store i8 1, i8* %12851, align 1
  %12852 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %12849, align 8
  %12853 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12852, i64 0, i32 4
  %12854 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12852, i64 0, i32 4, i32 0, i32 0, i32 1
  %12855 = load i32, i32* %12854, align 8
  %12856 = icmp eq i32 %12855, 0
  br i1 %12856, label %12866, label %12857

12857:                                            ; preds = %12847
  %12858 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12852, i64 0, i32 4, i32 0, i32 0, i32 2
  %12859 = load i32, i32* %12858, align 4
  %12860 = icmp eq i32 %12859, 0
  br i1 %12860, label %12862, label %12861

12861:                                            ; preds = %12857
  store i32 0, i32* %12858, align 4
  br label %12862

12862:                                            ; preds = %12861, %12857
  %12863 = bitcast %"class.WTF::Vector.1"* %12853 to i8**
  %12864 = load i8*, i8** %12863, align 8
  %12865 = bitcast %"class.WTF::Vector.1"* %12853 to i64*
  store atomic i64 0, i64* %12865 monotonic, align 8
  store i32 0, i32* %12854, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %12864) #11
  br label %12866

12866:                                            ; preds = %12847, %12862
  store i32 64, i32* %74, align 8
  %12867 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %12868 = load i8*, i8** %12867, align 8
  %12869 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %12870 = load i8*, i8** %12869, align 8
  %12871 = icmp ult i8* %12868, %12870
  br i1 %12871, label %12872, label %12883, !prof !3

12872:                                            ; preds = %12866
  %12873 = load i8, i8* %49, align 1, !range !2
  %12874 = icmp eq i8 %12873, 0
  br i1 %12874, label %12879, label %12875

12875:                                            ; preds = %12872
  %12876 = getelementptr inbounds i8, i8* %12868, i64 1
  store i8* %12876, i8** %12867, align 8
  %12877 = load i8, i8* %12876, align 1
  %12878 = zext i8 %12877 to i16
  br label %12885

12879:                                            ; preds = %12872
  %12880 = getelementptr inbounds i8, i8* %12868, i64 2
  %12881 = bitcast i8* %12880 to i16*
  store i8* %12880, i8** %12867, align 8
  %12882 = load i16, i16* %12881, align 2
  br label %12885

12883:                                            ; preds = %12866
  %12884 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %12885

12885:                                            ; preds = %12883, %12879, %12875
  %12886 = phi i16 [ %12884, %12883 ], [ %12878, %12875 ], [ %12882, %12879 ]
  store i16 %12886, i16* %14, align 2
  %12887 = icmp ugt i16 %12886, 15
  br i1 %12887, label %12888, label %12890

12888:                                            ; preds = %12885
  %12889 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %12889, align 8
  br label %13283

12890:                                            ; preds = %12885
  %12891 = load i8, i8* %44, align 1, !range !2
  %12892 = icmp eq i8 %12891, 0
  br i1 %12892, label %12893, label %12895

12893:                                            ; preds = %12890
  %12894 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %12894, label %13281, label %12895

12895:                                            ; preds = %12890, %12893
  %12896 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %12897 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12896, i64 0, i32 0
  %12898 = load i32, i32* %12897, align 8
  %12899 = icmp eq i32 %12898, 5
  br label %14210

12900:                                            ; preds = %12773
  %12901 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %12902 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12901, i64 0, i32 8, i32 0, i32 0, i32 0
  %12903 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %12902, align 8
  %12904 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12903, i64 0, i32 1
  store i8 1, i8* %12904, align 1
  %12905 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %12902, align 8
  %12906 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12905, i64 0, i32 4
  %12907 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12905, i64 0, i32 4, i32 0, i32 0, i32 1
  %12908 = load i32, i32* %12907, align 8
  %12909 = icmp eq i32 %12908, 0
  br i1 %12909, label %12919, label %12910

12910:                                            ; preds = %12900
  %12911 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12905, i64 0, i32 4, i32 0, i32 0, i32 2
  %12912 = load i32, i32* %12911, align 4
  %12913 = icmp eq i32 %12912, 0
  br i1 %12913, label %12915, label %12914

12914:                                            ; preds = %12910
  store i32 0, i32* %12911, align 4
  br label %12915

12915:                                            ; preds = %12914, %12910
  %12916 = bitcast %"class.WTF::Vector.1"* %12906 to i8**
  %12917 = load i8*, i8** %12916, align 8
  %12918 = bitcast %"class.WTF::Vector.1"* %12906 to i64*
  store atomic i64 0, i64* %12918 monotonic, align 8
  store i32 0, i32* %12907, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %12917) #11
  br label %12919

12919:                                            ; preds = %12900, %12915
  store i32 65, i32* %74, align 8
  %12920 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %12921 = load i8*, i8** %12920, align 8
  %12922 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %12923 = load i8*, i8** %12922, align 8
  %12924 = icmp ult i8* %12921, %12923
  br i1 %12924, label %12925, label %12936, !prof !3

12925:                                            ; preds = %12919
  %12926 = load i8, i8* %49, align 1, !range !2
  %12927 = icmp eq i8 %12926, 0
  br i1 %12927, label %12932, label %12928

12928:                                            ; preds = %12925
  %12929 = getelementptr inbounds i8, i8* %12921, i64 1
  store i8* %12929, i8** %12920, align 8
  %12930 = load i8, i8* %12929, align 1
  %12931 = zext i8 %12930 to i16
  br label %12938

12932:                                            ; preds = %12925
  %12933 = getelementptr inbounds i8, i8* %12921, i64 2
  %12934 = bitcast i8* %12933 to i16*
  store i8* %12933, i8** %12920, align 8
  %12935 = load i16, i16* %12934, align 2
  br label %12938

12936:                                            ; preds = %12919
  %12937 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %12938

12938:                                            ; preds = %12936, %12932, %12928
  %12939 = phi i16 [ %12937, %12936 ], [ %12931, %12928 ], [ %12935, %12932 ]
  store i16 %12939, i16* %14, align 2
  %12940 = icmp ugt i16 %12939, 15
  br i1 %12940, label %12941, label %12943

12941:                                            ; preds = %12938
  %12942 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %12942, align 8
  br label %13476

12943:                                            ; preds = %12938
  %12944 = load i8, i8* %44, align 1, !range !2
  %12945 = icmp eq i8 %12944, 0
  br i1 %12945, label %12946, label %12948

12946:                                            ; preds = %12943
  %12947 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %12947, label %13474, label %12948

12948:                                            ; preds = %12943, %12946
  %12949 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %12950 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12949, i64 0, i32 0
  %12951 = load i32, i32* %12950, align 8
  %12952 = icmp eq i32 %12951, 5
  br label %14210

12953:                                            ; preds = %12773
  %12954 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %12955 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12954, i64 0, i32 8, i32 0, i32 0, i32 0
  %12956 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %12955, align 8
  %12957 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12956, i64 0, i32 5
  store i8 1, i8* %12957, align 8
  %12958 = call zeroext i1 @_ZN5blink13HTMLTokenizer15EmitAndResumeInERNS_15SegmentedStringENS0_5StateE(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i32 0)
  br label %14210

12959:                                            ; preds = %12773
  %12960 = icmp eq i16 %12774, 0
  %12961 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %12962 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12961, i64 0, i32 8, i32 0, i32 0, i32 0
  %12963 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %12962, align 8
  %12964 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %12963, i64 0, i32 5
  store i8 1, i8* %12964, align 8
  br i1 %12960, label %12965, label %13019

12965:                                            ; preds = %12959
  %12966 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %12967 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12966, i64 0, i32 0
  %12968 = load i32, i32* %12967, align 8
  %12969 = icmp eq i32 %12968, 2
  br i1 %12969, label %12970, label %13018

12970:                                            ; preds = %12965
  %12971 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12966, i64 0, i32 3
  %12972 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %12973 = getelementptr inbounds %class.LiteralBuffer.0, %class.LiteralBuffer.0* %12972, i64 0, i32 0
  %12974 = load i16*, i16** %12973, align 8
  %12975 = getelementptr inbounds %class.LiteralBuffer, %class.LiteralBuffer* %12971, i64 0, i32 0
  %12976 = load i16*, i16** %12975, align 8
  %12977 = icmp eq i16* %12974, %12976
  %12978 = bitcast i16* %12974 to i8*
  br i1 %12977, label %13018, label %12979

12979:                                            ; preds = %12970
  %12980 = ptrtoint i16* %12974 to i64
  %12981 = ptrtoint i16* %12976 to i64
  %12982 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %12966, i64 0, i32 3, i32 1
  %12983 = bitcast i16** %12982 to i64*
  %12984 = load i64, i64* %12983, align 8
  %12985 = sub i64 %12984, %12981
  %12986 = ashr exact i64 %12985, 1
  %12987 = trunc i64 %12986 to i32
  %12988 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 2
  %12989 = bitcast i16** %12988 to i64*
  %12990 = load i64, i64* %12989, align 8
  %12991 = sub i64 %12990, %12980
  %12992 = ashr exact i64 %12991, 1
  %12993 = and i64 %12986, 4294967295
  %12994 = icmp ult i64 %12992, %12993
  br i1 %12994, label %12995, label %13005

12995:                                            ; preds = %12979
  %12996 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 3, i64 0
  %12997 = icmp eq i16* %12974, %12996
  br i1 %12997, label %12999, label %12998

12998:                                            ; preds = %12995
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %12978) #11
  br label %12999

12999:                                            ; preds = %12998, %12995
  %13000 = bitcast %class.LiteralBuffer.0* %12972 to i8**
  %13001 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %12993) #11
  %13002 = call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %13001, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)) #11
  %13003 = bitcast i8* %13002 to i16*
  store i8* %13002, i8** %13000, align 8
  %13004 = getelementptr inbounds i16, i16* %13003, i64 %12993
  store i16* %13004, i16** %12988, align 8
  br label %13005

13005:                                            ; preds = %12999, %12979
  %13006 = phi i16* [ %13003, %12999 ], [ %12974, %12979 ]
  %13007 = phi i8* [ %13002, %12999 ], [ %12978, %12979 ]
  %13008 = icmp eq i32 %12987, 0
  br i1 %13008, label %13014, label %13009

13009:                                            ; preds = %13005
  %13010 = bitcast %class.LiteralBuffer* %12971 to i8**
  %13011 = load i8*, i8** %13010, align 8
  %13012 = and i64 %12985, 8589934590
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %13007, i8* align 2 %13011, i64 %13012, i1 false) #11
  %13013 = load i16*, i16** %12973, align 8
  br label %13014

13014:                                            ; preds = %13009, %13005
  %13015 = phi i16* [ %13006, %13005 ], [ %13013, %13009 ]
  %13016 = getelementptr inbounds i16, i16* %13015, i64 %12993
  %13017 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  store i16* %13016, i16** %13017, align 8
  br label %13018

13018:                                            ; preds = %12965, %12970, %13014
  store i32 0, i32* %74, align 8
  br label %14210

13019:                                            ; preds = %12959
  store i32 67, i32* %74, align 8
  %13020 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %13021 = load i8*, i8** %13020, align 8
  %13022 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %13023 = load i8*, i8** %13022, align 8
  %13024 = icmp ult i8* %13021, %13023
  br i1 %13024, label %13025, label %13036, !prof !3

13025:                                            ; preds = %13019
  %13026 = load i8, i8* %49, align 1, !range !2
  %13027 = icmp eq i8 %13026, 0
  br i1 %13027, label %13032, label %13028

13028:                                            ; preds = %13025
  %13029 = getelementptr inbounds i8, i8* %13021, i64 1
  store i8* %13029, i8** %13020, align 8
  %13030 = load i8, i8* %13029, align 1
  %13031 = zext i8 %13030 to i16
  br label %13038

13032:                                            ; preds = %13025
  %13033 = getelementptr inbounds i8, i8* %13021, i64 2
  %13034 = bitcast i8* %13033 to i16*
  store i8* %13033, i8** %13020, align 8
  %13035 = load i16, i16* %13034, align 2
  br label %13038

13036:                                            ; preds = %13019
  %13037 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %13038

13038:                                            ; preds = %13036, %13032, %13028
  %13039 = phi i16 [ %13037, %13036 ], [ %13031, %13028 ], [ %13035, %13032 ]
  store i16 %13039, i16* %14, align 2
  %13040 = icmp ugt i16 %13039, 15
  br i1 %13040, label %13041, label %13043

13041:                                            ; preds = %13038
  %13042 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %13042, align 8
  br label %13785

13043:                                            ; preds = %13038
  %13044 = load i8, i8* %44, align 1, !range !2
  %13045 = icmp eq i8 %13044, 0
  br i1 %13045, label %13046, label %13048

13046:                                            ; preds = %13043
  %13047 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %13047, label %13783, label %13048

13048:                                            ; preds = %13043, %13046
  %13049 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %13050 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13049, i64 0, i32 0
  %13051 = load i32, i32* %13050, align 8
  %13052 = icmp eq i32 %13051, 5
  br label %14210

13053:                                            ; preds = %12840, %73
  %13054 = load i16, i16* %14, align 2
  br label %13055

13055:                                            ; preds = %13053, %12835
  %13056 = phi i16 [ %13054, %13053 ], [ %12833, %12835 ]
  %13057 = icmp ult i16 %13056, 128
  br i1 %13057, label %13058, label %13073

13058:                                            ; preds = %13055
  %13059 = zext i16 %13056 to i64
  %13060 = getelementptr inbounds [128 x i8], [128 x i8]* bitcast (<{ [63 x i8], [65 x i8] }>* @_ZN5blinkL21character_scan_flags_E to [128 x i8]*), i64 0, i64 %13059
  %13061 = load i8, i8* %13060, align 1
  %13062 = and i8 %13061, 6
  %13063 = icmp eq i8 %13062, 0
  br i1 %13063, label %13073, label %13064

13064:                                            ; preds = %13058
  %13065 = call zeroext i1 @_ZN5blink13HTMLTokenizer21SkipWhitespacesHelperERNS_15SegmentedStringERDs(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %13065, label %13066, label %13068

13066:                                            ; preds = %13064
  %13067 = load i16, i16* %14, align 2
  br label %13073

13068:                                            ; preds = %13064
  %13069 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %13070 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13069, i64 0, i32 0
  %13071 = load i32, i32* %13070, align 8
  %13072 = icmp eq i32 %13071, 5
  br label %14210

13073:                                            ; preds = %13066, %13055, %13058
  %13074 = phi i16 [ %13067, %13066 ], [ %13056, %13055 ], [ %13056, %13058 ]
  switch i16 %13074, label %13187 [
    i16 34, label %13075
    i16 39, label %13128
    i16 62, label %13181
  ]

13075:                                            ; preds = %13073
  %13076 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %13077 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13076, i64 0, i32 8, i32 0, i32 0, i32 0
  %13078 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %13077, align 8
  %13079 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %13078, i64 0, i32 1
  store i8 1, i8* %13079, align 1
  %13080 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %13077, align 8
  %13081 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %13080, i64 0, i32 4
  %13082 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %13080, i64 0, i32 4, i32 0, i32 0, i32 1
  %13083 = load i32, i32* %13082, align 8
  %13084 = icmp eq i32 %13083, 0
  br i1 %13084, label %13094, label %13085

13085:                                            ; preds = %13075
  %13086 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %13080, i64 0, i32 4, i32 0, i32 0, i32 2
  %13087 = load i32, i32* %13086, align 4
  %13088 = icmp eq i32 %13087, 0
  br i1 %13088, label %13090, label %13089

13089:                                            ; preds = %13085
  store i32 0, i32* %13086, align 4
  br label %13090

13090:                                            ; preds = %13089, %13085
  %13091 = bitcast %"class.WTF::Vector.1"* %13081 to i8**
  %13092 = load i8*, i8** %13091, align 8
  %13093 = bitcast %"class.WTF::Vector.1"* %13081 to i64*
  store atomic i64 0, i64* %13093 monotonic, align 8
  store i32 0, i32* %13082, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %13092) #11
  br label %13094

13094:                                            ; preds = %13075, %13090
  store i32 64, i32* %74, align 8
  %13095 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %13096 = load i8*, i8** %13095, align 8
  %13097 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %13098 = load i8*, i8** %13097, align 8
  %13099 = icmp ult i8* %13096, %13098
  br i1 %13099, label %13100, label %13111, !prof !3

13100:                                            ; preds = %13094
  %13101 = load i8, i8* %49, align 1, !range !2
  %13102 = icmp eq i8 %13101, 0
  br i1 %13102, label %13107, label %13103

13103:                                            ; preds = %13100
  %13104 = getelementptr inbounds i8, i8* %13096, i64 1
  store i8* %13104, i8** %13095, align 8
  %13105 = load i8, i8* %13104, align 1
  %13106 = zext i8 %13105 to i16
  br label %13113

13107:                                            ; preds = %13100
  %13108 = getelementptr inbounds i8, i8* %13096, i64 2
  %13109 = bitcast i8* %13108 to i16*
  store i8* %13108, i8** %13095, align 8
  %13110 = load i16, i16* %13109, align 2
  br label %13113

13111:                                            ; preds = %13094
  %13112 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %13113

13113:                                            ; preds = %13111, %13107, %13103
  %13114 = phi i16 [ %13112, %13111 ], [ %13106, %13103 ], [ %13110, %13107 ]
  store i16 %13114, i16* %14, align 2
  %13115 = icmp ugt i16 %13114, 15
  br i1 %13115, label %13116, label %13118

13116:                                            ; preds = %13113
  %13117 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %13117, align 8
  br label %13283

13118:                                            ; preds = %13113
  %13119 = load i8, i8* %44, align 1, !range !2
  %13120 = icmp eq i8 %13119, 0
  br i1 %13120, label %13121, label %13123

13121:                                            ; preds = %13118
  %13122 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %13122, label %13281, label %13123

13123:                                            ; preds = %13118, %13121
  %13124 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %13125 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13124, i64 0, i32 0
  %13126 = load i32, i32* %13125, align 8
  %13127 = icmp eq i32 %13126, 5
  br label %14210

13128:                                            ; preds = %13073
  %13129 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %13130 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13129, i64 0, i32 8, i32 0, i32 0, i32 0
  %13131 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %13130, align 8
  %13132 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %13131, i64 0, i32 1
  store i8 1, i8* %13132, align 1
  %13133 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %13130, align 8
  %13134 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %13133, i64 0, i32 4
  %13135 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %13133, i64 0, i32 4, i32 0, i32 0, i32 1
  %13136 = load i32, i32* %13135, align 8
  %13137 = icmp eq i32 %13136, 0
  br i1 %13137, label %13147, label %13138

13138:                                            ; preds = %13128
  %13139 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %13133, i64 0, i32 4, i32 0, i32 0, i32 2
  %13140 = load i32, i32* %13139, align 4
  %13141 = icmp eq i32 %13140, 0
  br i1 %13141, label %13143, label %13142

13142:                                            ; preds = %13138
  store i32 0, i32* %13139, align 4
  br label %13143

13143:                                            ; preds = %13142, %13138
  %13144 = bitcast %"class.WTF::Vector.1"* %13134 to i8**
  %13145 = load i8*, i8** %13144, align 8
  %13146 = bitcast %"class.WTF::Vector.1"* %13134 to i64*
  store atomic i64 0, i64* %13146 monotonic, align 8
  store i32 0, i32* %13135, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %13145) #11
  br label %13147

13147:                                            ; preds = %13128, %13143
  store i32 65, i32* %74, align 8
  %13148 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %13149 = load i8*, i8** %13148, align 8
  %13150 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %13151 = load i8*, i8** %13150, align 8
  %13152 = icmp ult i8* %13149, %13151
  br i1 %13152, label %13153, label %13164, !prof !3

13153:                                            ; preds = %13147
  %13154 = load i8, i8* %49, align 1, !range !2
  %13155 = icmp eq i8 %13154, 0
  br i1 %13155, label %13160, label %13156

13156:                                            ; preds = %13153
  %13157 = getelementptr inbounds i8, i8* %13149, i64 1
  store i8* %13157, i8** %13148, align 8
  %13158 = load i8, i8* %13157, align 1
  %13159 = zext i8 %13158 to i16
  br label %13166

13160:                                            ; preds = %13153
  %13161 = getelementptr inbounds i8, i8* %13149, i64 2
  %13162 = bitcast i8* %13161 to i16*
  store i8* %13161, i8** %13148, align 8
  %13163 = load i16, i16* %13162, align 2
  br label %13166

13164:                                            ; preds = %13147
  %13165 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %13166

13166:                                            ; preds = %13164, %13160, %13156
  %13167 = phi i16 [ %13165, %13164 ], [ %13159, %13156 ], [ %13163, %13160 ]
  store i16 %13167, i16* %14, align 2
  %13168 = icmp ugt i16 %13167, 15
  br i1 %13168, label %13169, label %13171

13169:                                            ; preds = %13166
  %13170 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %13170, align 8
  br label %13476

13171:                                            ; preds = %13166
  %13172 = load i8, i8* %44, align 1, !range !2
  %13173 = icmp eq i8 %13172, 0
  br i1 %13173, label %13174, label %13176

13174:                                            ; preds = %13171
  %13175 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %13175, label %13474, label %13176

13176:                                            ; preds = %13171, %13174
  %13177 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %13178 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13177, i64 0, i32 0
  %13179 = load i32, i32* %13178, align 8
  %13180 = icmp eq i32 %13179, 5
  br label %14210

13181:                                            ; preds = %13073
  %13182 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %13183 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13182, i64 0, i32 8, i32 0, i32 0, i32 0
  %13184 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %13183, align 8
  %13185 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %13184, i64 0, i32 5
  store i8 1, i8* %13185, align 8
  %13186 = call zeroext i1 @_ZN5blink13HTMLTokenizer15EmitAndResumeInERNS_15SegmentedStringENS0_5StateE(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i32 0)
  br label %14210

13187:                                            ; preds = %13073
  %13188 = icmp eq i16 %13074, 0
  %13189 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %13190 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13189, i64 0, i32 8, i32 0, i32 0, i32 0
  %13191 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %13190, align 8
  %13192 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %13191, i64 0, i32 5
  store i8 1, i8* %13192, align 8
  br i1 %13188, label %13193, label %13247

13193:                                            ; preds = %13187
  %13194 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %13195 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13194, i64 0, i32 0
  %13196 = load i32, i32* %13195, align 8
  %13197 = icmp eq i32 %13196, 2
  br i1 %13197, label %13198, label %13246

13198:                                            ; preds = %13193
  %13199 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13194, i64 0, i32 3
  %13200 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %13201 = getelementptr inbounds %class.LiteralBuffer.0, %class.LiteralBuffer.0* %13200, i64 0, i32 0
  %13202 = load i16*, i16** %13201, align 8
  %13203 = getelementptr inbounds %class.LiteralBuffer, %class.LiteralBuffer* %13199, i64 0, i32 0
  %13204 = load i16*, i16** %13203, align 8
  %13205 = icmp eq i16* %13202, %13204
  %13206 = bitcast i16* %13202 to i8*
  br i1 %13205, label %13246, label %13207

13207:                                            ; preds = %13198
  %13208 = ptrtoint i16* %13202 to i64
  %13209 = ptrtoint i16* %13204 to i64
  %13210 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13194, i64 0, i32 3, i32 1
  %13211 = bitcast i16** %13210 to i64*
  %13212 = load i64, i64* %13211, align 8
  %13213 = sub i64 %13212, %13209
  %13214 = ashr exact i64 %13213, 1
  %13215 = trunc i64 %13214 to i32
  %13216 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 2
  %13217 = bitcast i16** %13216 to i64*
  %13218 = load i64, i64* %13217, align 8
  %13219 = sub i64 %13218, %13208
  %13220 = ashr exact i64 %13219, 1
  %13221 = and i64 %13214, 4294967295
  %13222 = icmp ult i64 %13220, %13221
  br i1 %13222, label %13223, label %13233

13223:                                            ; preds = %13207
  %13224 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 3, i64 0
  %13225 = icmp eq i16* %13202, %13224
  br i1 %13225, label %13227, label %13226

13226:                                            ; preds = %13223
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %13206) #11
  br label %13227

13227:                                            ; preds = %13226, %13223
  %13228 = bitcast %class.LiteralBuffer.0* %13200 to i8**
  %13229 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %13221) #11
  %13230 = call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %13229, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)) #11
  %13231 = bitcast i8* %13230 to i16*
  store i8* %13230, i8** %13228, align 8
  %13232 = getelementptr inbounds i16, i16* %13231, i64 %13221
  store i16* %13232, i16** %13216, align 8
  br label %13233

13233:                                            ; preds = %13227, %13207
  %13234 = phi i16* [ %13231, %13227 ], [ %13202, %13207 ]
  %13235 = phi i8* [ %13230, %13227 ], [ %13206, %13207 ]
  %13236 = icmp eq i32 %13215, 0
  br i1 %13236, label %13242, label %13237

13237:                                            ; preds = %13233
  %13238 = bitcast %class.LiteralBuffer* %13199 to i8**
  %13239 = load i8*, i8** %13238, align 8
  %13240 = and i64 %13213, 8589934590
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %13235, i8* align 2 %13239, i64 %13240, i1 false) #11
  %13241 = load i16*, i16** %13201, align 8
  br label %13242

13242:                                            ; preds = %13237, %13233
  %13243 = phi i16* [ %13234, %13233 ], [ %13241, %13237 ]
  %13244 = getelementptr inbounds i16, i16* %13243, i64 %13221
  %13245 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  store i16* %13244, i16** %13245, align 8
  br label %13246

13246:                                            ; preds = %13193, %13198, %13242
  store i32 0, i32* %74, align 8
  br label %14210

13247:                                            ; preds = %13187
  store i32 67, i32* %74, align 8
  %13248 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %13249 = load i8*, i8** %13248, align 8
  %13250 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %13251 = load i8*, i8** %13250, align 8
  %13252 = icmp ult i8* %13249, %13251
  br i1 %13252, label %13253, label %13264, !prof !3

13253:                                            ; preds = %13247
  %13254 = load i8, i8* %49, align 1, !range !2
  %13255 = icmp eq i8 %13254, 0
  br i1 %13255, label %13260, label %13256

13256:                                            ; preds = %13253
  %13257 = getelementptr inbounds i8, i8* %13249, i64 1
  store i8* %13257, i8** %13248, align 8
  %13258 = load i8, i8* %13257, align 1
  %13259 = zext i8 %13258 to i16
  br label %13266

13260:                                            ; preds = %13253
  %13261 = getelementptr inbounds i8, i8* %13249, i64 2
  %13262 = bitcast i8* %13261 to i16*
  store i8* %13261, i8** %13248, align 8
  %13263 = load i16, i16* %13262, align 2
  br label %13266

13264:                                            ; preds = %13247
  %13265 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %13266

13266:                                            ; preds = %13264, %13260, %13256
  %13267 = phi i16 [ %13265, %13264 ], [ %13259, %13256 ], [ %13263, %13260 ]
  store i16 %13267, i16* %14, align 2
  %13268 = icmp ugt i16 %13267, 15
  br i1 %13268, label %13269, label %13271

13269:                                            ; preds = %13266
  %13270 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %13270, align 8
  br label %13785

13271:                                            ; preds = %13266
  %13272 = load i8, i8* %44, align 1, !range !2
  %13273 = icmp eq i8 %13272, 0
  br i1 %13273, label %13274, label %13276

13274:                                            ; preds = %13271
  %13275 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %13275, label %13783, label %13276

13276:                                            ; preds = %13271, %13274
  %13277 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %13278 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13277, i64 0, i32 0
  %13279 = load i32, i32* %13278, align 8
  %13280 = icmp eq i32 %13279, 5
  br label %14210

13281:                                            ; preds = %13462, %12393, %12617, %12893, %13121, %73, %13467
  %13282 = load i16, i16* %14, align 2
  br label %13283

13283:                                            ; preds = %13116, %12888, %12612, %12388, %13281
  %13284 = phi i16 [ %13282, %13281 ], [ %13114, %13116 ], [ %12886, %12888 ], [ %12610, %12612 ], [ %12386, %12388 ]
  switch i16 %13284, label %13383 [
    i16 34, label %13285
    i16 62, label %13319
    i16 0, label %13325
  ]

13285:                                            ; preds = %13283
  store i32 66, i32* %74, align 8
  %13286 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %13287 = load i8*, i8** %13286, align 8
  %13288 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %13289 = load i8*, i8** %13288, align 8
  %13290 = icmp ult i8* %13287, %13289
  br i1 %13290, label %13291, label %13302, !prof !3

13291:                                            ; preds = %13285
  %13292 = load i8, i8* %49, align 1, !range !2
  %13293 = icmp eq i8 %13292, 0
  br i1 %13293, label %13298, label %13294

13294:                                            ; preds = %13291
  %13295 = getelementptr inbounds i8, i8* %13287, i64 1
  store i8* %13295, i8** %13286, align 8
  %13296 = load i8, i8* %13295, align 1
  %13297 = zext i8 %13296 to i16
  br label %13304

13298:                                            ; preds = %13291
  %13299 = getelementptr inbounds i8, i8* %13287, i64 2
  %13300 = bitcast i8* %13299 to i16*
  store i8* %13299, i8** %13286, align 8
  %13301 = load i16, i16* %13300, align 2
  br label %13304

13302:                                            ; preds = %13285
  %13303 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %13304

13304:                                            ; preds = %13302, %13298, %13294
  %13305 = phi i16 [ %13303, %13302 ], [ %13297, %13294 ], [ %13301, %13298 ]
  store i16 %13305, i16* %14, align 2
  %13306 = icmp ugt i16 %13305, 15
  br i1 %13306, label %13307, label %13309

13307:                                            ; preds = %13304
  %13308 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %13308, align 8
  br label %13669

13309:                                            ; preds = %13304
  %13310 = load i8, i8* %44, align 1, !range !2
  %13311 = icmp eq i8 %13310, 0
  br i1 %13311, label %13312, label %13314

13312:                                            ; preds = %13309
  %13313 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %13313, label %13667, label %13314

13314:                                            ; preds = %13309, %13312
  %13315 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %13316 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13315, i64 0, i32 0
  %13317 = load i32, i32* %13316, align 8
  %13318 = icmp eq i32 %13317, 5
  br label %14210

13319:                                            ; preds = %13283
  %13320 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %13321 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13320, i64 0, i32 8, i32 0, i32 0, i32 0
  %13322 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %13321, align 8
  %13323 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %13322, i64 0, i32 5
  store i8 1, i8* %13323, align 8
  %13324 = call zeroext i1 @_ZN5blink13HTMLTokenizer15EmitAndResumeInERNS_15SegmentedStringENS0_5StateE(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i32 0)
  br label %14210

13325:                                            ; preds = %13283
  %13326 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %13327 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13326, i64 0, i32 8, i32 0, i32 0, i32 0
  %13328 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %13327, align 8
  %13329 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %13328, i64 0, i32 5
  store i8 1, i8* %13329, align 8
  %13330 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %13331 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13330, i64 0, i32 0
  %13332 = load i32, i32* %13331, align 8
  %13333 = icmp eq i32 %13332, 2
  br i1 %13333, label %13334, label %13382

13334:                                            ; preds = %13325
  %13335 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13330, i64 0, i32 3
  %13336 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %13337 = getelementptr inbounds %class.LiteralBuffer.0, %class.LiteralBuffer.0* %13336, i64 0, i32 0
  %13338 = load i16*, i16** %13337, align 8
  %13339 = getelementptr inbounds %class.LiteralBuffer, %class.LiteralBuffer* %13335, i64 0, i32 0
  %13340 = load i16*, i16** %13339, align 8
  %13341 = icmp eq i16* %13338, %13340
  %13342 = bitcast i16* %13338 to i8*
  br i1 %13341, label %13382, label %13343

13343:                                            ; preds = %13334
  %13344 = ptrtoint i16* %13338 to i64
  %13345 = ptrtoint i16* %13340 to i64
  %13346 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13330, i64 0, i32 3, i32 1
  %13347 = bitcast i16** %13346 to i64*
  %13348 = load i64, i64* %13347, align 8
  %13349 = sub i64 %13348, %13345
  %13350 = ashr exact i64 %13349, 1
  %13351 = trunc i64 %13350 to i32
  %13352 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 2
  %13353 = bitcast i16** %13352 to i64*
  %13354 = load i64, i64* %13353, align 8
  %13355 = sub i64 %13354, %13344
  %13356 = ashr exact i64 %13355, 1
  %13357 = and i64 %13350, 4294967295
  %13358 = icmp ult i64 %13356, %13357
  br i1 %13358, label %13359, label %13369

13359:                                            ; preds = %13343
  %13360 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 3, i64 0
  %13361 = icmp eq i16* %13338, %13360
  br i1 %13361, label %13363, label %13362

13362:                                            ; preds = %13359
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %13342) #11
  br label %13363

13363:                                            ; preds = %13362, %13359
  %13364 = bitcast %class.LiteralBuffer.0* %13336 to i8**
  %13365 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %13357) #11
  %13366 = call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %13365, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)) #11
  %13367 = bitcast i8* %13366 to i16*
  store i8* %13366, i8** %13364, align 8
  %13368 = getelementptr inbounds i16, i16* %13367, i64 %13357
  store i16* %13368, i16** %13352, align 8
  br label %13369

13369:                                            ; preds = %13363, %13343
  %13370 = phi i16* [ %13367, %13363 ], [ %13338, %13343 ]
  %13371 = phi i8* [ %13366, %13363 ], [ %13342, %13343 ]
  %13372 = icmp eq i32 %13351, 0
  br i1 %13372, label %13378, label %13373

13373:                                            ; preds = %13369
  %13374 = bitcast %class.LiteralBuffer* %13335 to i8**
  %13375 = load i8*, i8** %13374, align 8
  %13376 = and i64 %13349, 8589934590
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %13371, i8* align 2 %13375, i64 %13376, i1 false) #11
  %13377 = load i16*, i16** %13337, align 8
  br label %13378

13378:                                            ; preds = %13373, %13369
  %13379 = phi i16* [ %13370, %13369 ], [ %13377, %13373 ]
  %13380 = getelementptr inbounds i16, i16* %13379, i64 %13357
  %13381 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  store i16* %13380, i16** %13381, align 8
  br label %13382

13382:                                            ; preds = %13325, %13334, %13378
  store i32 0, i32* %74, align 8
  br label %14210

13383:                                            ; preds = %13283
  %13384 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %13385 = bitcast i16* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %13385)
  store i16 %13284, i16* %6, align 2
  %13386 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13384, i64 0, i32 8, i32 0, i32 0, i32 0
  %13387 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %13386, align 8
  %13388 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %13387, i64 0, i32 4
  %13389 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %13387, i64 0, i32 4, i32 0, i32 0, i32 2
  %13390 = load i32, i32* %13389, align 4
  %13391 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %13387, i64 0, i32 4, i32 0, i32 0, i32 1
  %13392 = load i32, i32* %13391, align 8
  %13393 = icmp eq i32 %13390, %13392
  br i1 %13393, label %13401, label %13394, !prof !4

13394:                                            ; preds = %13383
  %13395 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %13388, i64 0, i32 0, i32 0, i32 0
  %13396 = load i16*, i16** %13395, align 8
  %13397 = zext i32 %13390 to i64
  %13398 = getelementptr inbounds i16, i16* %13396, i64 %13397
  store i16 %13284, i16* %13398, align 2
  %13399 = load i32, i32* %13389, align 4
  %13400 = add i32 %13399, 1
  store i32 %13400, i32* %13389, align 4
  br label %13402

13401:                                            ; preds = %13383
  call void @_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1"* %13388, i16* nonnull dereferenceable(2) %6) #11
  br label %13402

13402:                                            ; preds = %13394, %13401
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %13385)
  %13403 = load i8, i8* %49, align 1, !range !2
  %13404 = icmp eq i8 %13403, 0
  br i1 %13404, label %13411, label %13405

13405:                                            ; preds = %13402
  %13406 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %13407 = load i8*, i8** %13406, align 8
  %13408 = load i8, i8* %13407, align 1
  %13409 = zext i8 %13408 to i16
  %13410 = ptrtoint i8* %13407 to i64
  br label %13417

13411:                                            ; preds = %13402
  %13412 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %13413 = load i16*, i16** %13412, align 8
  %13414 = load i16, i16* %13413, align 2
  %13415 = ptrtoint i16* %13413 to i64
  %13416 = bitcast i16* %13413 to i8*
  br label %13417

13417:                                            ; preds = %13411, %13405
  %13418 = phi i8* [ %13407, %13405 ], [ %13416, %13411 ]
  %13419 = phi i64 [ %13410, %13405 ], [ %13415, %13411 ]
  %13420 = phi i16 [ %13409, %13405 ], [ %13414, %13411 ]
  %13421 = icmp eq i16 %13420, 10
  br i1 %13421, label %13422, label %13443

13422:                                            ; preds = %13417
  %13423 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %13424 = load i8, i8* %13423, align 8, !range !2
  %13425 = icmp eq i8 %13424, 0
  br i1 %13425, label %13443, label %13426, !prof !4

13426:                                            ; preds = %13422
  %13427 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %13428 = load i32, i32* %13427, align 8
  %13429 = add nsw i32 %13428, 1
  store i32 %13429, i32* %13427, align 8
  %13430 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %13431 = load i32, i32* %13430, align 8
  %13432 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %13433 = bitcast i8** %13432 to i64*
  %13434 = load i64, i64* %13433, align 8
  %13435 = sub i64 %13419, %13434
  %13436 = trunc i64 %13435 to i32
  %13437 = xor i8 %13403, 1
  %13438 = zext i8 %13437 to i32
  %13439 = ashr i32 %13436, %13438
  %13440 = add i32 %13431, 1
  %13441 = add i32 %13440, %13439
  %13442 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %13441, i32* %13442, align 4
  br label %13443

13443:                                            ; preds = %13426, %13422, %13417
  %13444 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %13445 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %13446 = load i8*, i8** %13445, align 8
  %13447 = icmp ult i8* %13418, %13446
  br i1 %13447, label %13448, label %13457, !prof !3

13448:                                            ; preds = %13443
  br i1 %13404, label %13453, label %13449

13449:                                            ; preds = %13448
  %13450 = getelementptr inbounds i8, i8* %13418, i64 1
  store i8* %13450, i8** %13444, align 8
  %13451 = load i8, i8* %13450, align 1
  %13452 = zext i8 %13451 to i16
  br label %13459

13453:                                            ; preds = %13448
  %13454 = getelementptr inbounds i8, i8* %13418, i64 2
  %13455 = bitcast i8* %13454 to i16*
  store i8* %13454, i8** %13444, align 8
  %13456 = load i16, i16* %13455, align 2
  br label %13459

13457:                                            ; preds = %13443
  %13458 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %13459

13459:                                            ; preds = %13457, %13453, %13449
  %13460 = phi i16 [ %13458, %13457 ], [ %13452, %13449 ], [ %13456, %13453 ]
  store i16 %13460, i16* %14, align 2
  %13461 = icmp ugt i16 %13460, 15
  br i1 %13461, label %13462, label %13464

13462:                                            ; preds = %13459
  %13463 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %13463, align 8
  br label %13281

13464:                                            ; preds = %13459
  %13465 = load i8, i8* %44, align 1, !range !2
  %13466 = icmp eq i8 %13465, 0
  br i1 %13466, label %13467, label %13469

13467:                                            ; preds = %13464
  %13468 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %13468, label %13281, label %13469

13469:                                            ; preds = %13464, %13467
  %13470 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %13471 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13470, i64 0, i32 0
  %13472 = load i32, i32* %13471, align 8
  %13473 = icmp eq i32 %13472, 5
  br label %14210

13474:                                            ; preds = %13655, %12446, %12670, %12946, %13174, %73, %13660
  %13475 = load i16, i16* %14, align 2
  br label %13476

13476:                                            ; preds = %13169, %12941, %12665, %12441, %13474
  %13477 = phi i16 [ %13475, %13474 ], [ %13167, %13169 ], [ %12939, %12941 ], [ %12663, %12665 ], [ %12439, %12441 ]
  switch i16 %13477, label %13576 [
    i16 39, label %13478
    i16 62, label %13512
    i16 0, label %13518
  ]

13478:                                            ; preds = %13476
  store i32 66, i32* %74, align 8
  %13479 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %13480 = load i8*, i8** %13479, align 8
  %13481 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %13482 = load i8*, i8** %13481, align 8
  %13483 = icmp ult i8* %13480, %13482
  br i1 %13483, label %13484, label %13495, !prof !3

13484:                                            ; preds = %13478
  %13485 = load i8, i8* %49, align 1, !range !2
  %13486 = icmp eq i8 %13485, 0
  br i1 %13486, label %13491, label %13487

13487:                                            ; preds = %13484
  %13488 = getelementptr inbounds i8, i8* %13480, i64 1
  store i8* %13488, i8** %13479, align 8
  %13489 = load i8, i8* %13488, align 1
  %13490 = zext i8 %13489 to i16
  br label %13497

13491:                                            ; preds = %13484
  %13492 = getelementptr inbounds i8, i8* %13480, i64 2
  %13493 = bitcast i8* %13492 to i16*
  store i8* %13492, i8** %13479, align 8
  %13494 = load i16, i16* %13493, align 2
  br label %13497

13495:                                            ; preds = %13478
  %13496 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %13497

13497:                                            ; preds = %13495, %13491, %13487
  %13498 = phi i16 [ %13496, %13495 ], [ %13490, %13487 ], [ %13494, %13491 ]
  store i16 %13498, i16* %14, align 2
  %13499 = icmp ugt i16 %13498, 15
  br i1 %13499, label %13500, label %13502

13500:                                            ; preds = %13497
  %13501 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %13501, align 8
  br label %13669

13502:                                            ; preds = %13497
  %13503 = load i8, i8* %44, align 1, !range !2
  %13504 = icmp eq i8 %13503, 0
  br i1 %13504, label %13505, label %13507

13505:                                            ; preds = %13502
  %13506 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %13506, label %13667, label %13507

13507:                                            ; preds = %13502, %13505
  %13508 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %13509 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13508, i64 0, i32 0
  %13510 = load i32, i32* %13509, align 8
  %13511 = icmp eq i32 %13510, 5
  br label %14210

13512:                                            ; preds = %13476
  %13513 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %13514 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13513, i64 0, i32 8, i32 0, i32 0, i32 0
  %13515 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %13514, align 8
  %13516 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %13515, i64 0, i32 5
  store i8 1, i8* %13516, align 8
  %13517 = call zeroext i1 @_ZN5blink13HTMLTokenizer15EmitAndResumeInERNS_15SegmentedStringENS0_5StateE(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i32 0)
  br label %14210

13518:                                            ; preds = %13476
  %13519 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %13520 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13519, i64 0, i32 8, i32 0, i32 0, i32 0
  %13521 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %13520, align 8
  %13522 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %13521, i64 0, i32 5
  store i8 1, i8* %13522, align 8
  %13523 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %13524 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13523, i64 0, i32 0
  %13525 = load i32, i32* %13524, align 8
  %13526 = icmp eq i32 %13525, 2
  br i1 %13526, label %13527, label %13575

13527:                                            ; preds = %13518
  %13528 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13523, i64 0, i32 3
  %13529 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %13530 = getelementptr inbounds %class.LiteralBuffer.0, %class.LiteralBuffer.0* %13529, i64 0, i32 0
  %13531 = load i16*, i16** %13530, align 8
  %13532 = getelementptr inbounds %class.LiteralBuffer, %class.LiteralBuffer* %13528, i64 0, i32 0
  %13533 = load i16*, i16** %13532, align 8
  %13534 = icmp eq i16* %13531, %13533
  %13535 = bitcast i16* %13531 to i8*
  br i1 %13534, label %13575, label %13536

13536:                                            ; preds = %13527
  %13537 = ptrtoint i16* %13531 to i64
  %13538 = ptrtoint i16* %13533 to i64
  %13539 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13523, i64 0, i32 3, i32 1
  %13540 = bitcast i16** %13539 to i64*
  %13541 = load i64, i64* %13540, align 8
  %13542 = sub i64 %13541, %13538
  %13543 = ashr exact i64 %13542, 1
  %13544 = trunc i64 %13543 to i32
  %13545 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 2
  %13546 = bitcast i16** %13545 to i64*
  %13547 = load i64, i64* %13546, align 8
  %13548 = sub i64 %13547, %13537
  %13549 = ashr exact i64 %13548, 1
  %13550 = and i64 %13543, 4294967295
  %13551 = icmp ult i64 %13549, %13550
  br i1 %13551, label %13552, label %13562

13552:                                            ; preds = %13536
  %13553 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 3, i64 0
  %13554 = icmp eq i16* %13531, %13553
  br i1 %13554, label %13556, label %13555

13555:                                            ; preds = %13552
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %13535) #11
  br label %13556

13556:                                            ; preds = %13555, %13552
  %13557 = bitcast %class.LiteralBuffer.0* %13529 to i8**
  %13558 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %13550) #11
  %13559 = call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %13558, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)) #11
  %13560 = bitcast i8* %13559 to i16*
  store i8* %13559, i8** %13557, align 8
  %13561 = getelementptr inbounds i16, i16* %13560, i64 %13550
  store i16* %13561, i16** %13545, align 8
  br label %13562

13562:                                            ; preds = %13556, %13536
  %13563 = phi i16* [ %13560, %13556 ], [ %13531, %13536 ]
  %13564 = phi i8* [ %13559, %13556 ], [ %13535, %13536 ]
  %13565 = icmp eq i32 %13544, 0
  br i1 %13565, label %13571, label %13566

13566:                                            ; preds = %13562
  %13567 = bitcast %class.LiteralBuffer* %13528 to i8**
  %13568 = load i8*, i8** %13567, align 8
  %13569 = and i64 %13542, 8589934590
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %13564, i8* align 2 %13568, i64 %13569, i1 false) #11
  %13570 = load i16*, i16** %13530, align 8
  br label %13571

13571:                                            ; preds = %13566, %13562
  %13572 = phi i16* [ %13563, %13562 ], [ %13570, %13566 ]
  %13573 = getelementptr inbounds i16, i16* %13572, i64 %13550
  %13574 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  store i16* %13573, i16** %13574, align 8
  br label %13575

13575:                                            ; preds = %13518, %13527, %13571
  store i32 0, i32* %74, align 8
  br label %14210

13576:                                            ; preds = %13476
  %13577 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %13578 = bitcast i16* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %13578)
  store i16 %13477, i16* %7, align 2
  %13579 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13577, i64 0, i32 8, i32 0, i32 0, i32 0
  %13580 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %13579, align 8
  %13581 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %13580, i64 0, i32 4
  %13582 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %13580, i64 0, i32 4, i32 0, i32 0, i32 2
  %13583 = load i32, i32* %13582, align 4
  %13584 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %13580, i64 0, i32 4, i32 0, i32 0, i32 1
  %13585 = load i32, i32* %13584, align 8
  %13586 = icmp eq i32 %13583, %13585
  br i1 %13586, label %13594, label %13587, !prof !4

13587:                                            ; preds = %13576
  %13588 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %13581, i64 0, i32 0, i32 0, i32 0
  %13589 = load i16*, i16** %13588, align 8
  %13590 = zext i32 %13583 to i64
  %13591 = getelementptr inbounds i16, i16* %13589, i64 %13590
  store i16 %13477, i16* %13591, align 2
  %13592 = load i32, i32* %13582, align 4
  %13593 = add i32 %13592, 1
  store i32 %13593, i32* %13582, align 4
  br label %13595

13594:                                            ; preds = %13576
  call void @_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1"* %13581, i16* nonnull dereferenceable(2) %7) #11
  br label %13595

13595:                                            ; preds = %13587, %13594
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %13578)
  %13596 = load i8, i8* %49, align 1, !range !2
  %13597 = icmp eq i8 %13596, 0
  br i1 %13597, label %13604, label %13598

13598:                                            ; preds = %13595
  %13599 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %13600 = load i8*, i8** %13599, align 8
  %13601 = load i8, i8* %13600, align 1
  %13602 = zext i8 %13601 to i16
  %13603 = ptrtoint i8* %13600 to i64
  br label %13610

13604:                                            ; preds = %13595
  %13605 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %13606 = load i16*, i16** %13605, align 8
  %13607 = load i16, i16* %13606, align 2
  %13608 = ptrtoint i16* %13606 to i64
  %13609 = bitcast i16* %13606 to i8*
  br label %13610

13610:                                            ; preds = %13604, %13598
  %13611 = phi i8* [ %13600, %13598 ], [ %13609, %13604 ]
  %13612 = phi i64 [ %13603, %13598 ], [ %13608, %13604 ]
  %13613 = phi i16 [ %13602, %13598 ], [ %13607, %13604 ]
  %13614 = icmp eq i16 %13613, 10
  br i1 %13614, label %13615, label %13636

13615:                                            ; preds = %13610
  %13616 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %13617 = load i8, i8* %13616, align 8, !range !2
  %13618 = icmp eq i8 %13617, 0
  br i1 %13618, label %13636, label %13619, !prof !4

13619:                                            ; preds = %13615
  %13620 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %13621 = load i32, i32* %13620, align 8
  %13622 = add nsw i32 %13621, 1
  store i32 %13622, i32* %13620, align 8
  %13623 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %13624 = load i32, i32* %13623, align 8
  %13625 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %13626 = bitcast i8** %13625 to i64*
  %13627 = load i64, i64* %13626, align 8
  %13628 = sub i64 %13612, %13627
  %13629 = trunc i64 %13628 to i32
  %13630 = xor i8 %13596, 1
  %13631 = zext i8 %13630 to i32
  %13632 = ashr i32 %13629, %13631
  %13633 = add i32 %13624, 1
  %13634 = add i32 %13633, %13632
  %13635 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %13634, i32* %13635, align 4
  br label %13636

13636:                                            ; preds = %13619, %13615, %13610
  %13637 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %13638 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %13639 = load i8*, i8** %13638, align 8
  %13640 = icmp ult i8* %13611, %13639
  br i1 %13640, label %13641, label %13650, !prof !3

13641:                                            ; preds = %13636
  br i1 %13597, label %13646, label %13642

13642:                                            ; preds = %13641
  %13643 = getelementptr inbounds i8, i8* %13611, i64 1
  store i8* %13643, i8** %13637, align 8
  %13644 = load i8, i8* %13643, align 1
  %13645 = zext i8 %13644 to i16
  br label %13652

13646:                                            ; preds = %13641
  %13647 = getelementptr inbounds i8, i8* %13611, i64 2
  %13648 = bitcast i8* %13647 to i16*
  store i8* %13647, i8** %13637, align 8
  %13649 = load i16, i16* %13648, align 2
  br label %13652

13650:                                            ; preds = %13636
  %13651 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %13652

13652:                                            ; preds = %13650, %13646, %13642
  %13653 = phi i16 [ %13651, %13650 ], [ %13645, %13642 ], [ %13649, %13646 ]
  store i16 %13653, i16* %14, align 2
  %13654 = icmp ugt i16 %13653, 15
  br i1 %13654, label %13655, label %13657

13655:                                            ; preds = %13652
  %13656 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %13656, align 8
  br label %13474

13657:                                            ; preds = %13652
  %13658 = load i8, i8* %44, align 1, !range !2
  %13659 = icmp eq i8 %13658, 0
  br i1 %13659, label %13660, label %13662

13660:                                            ; preds = %13657
  %13661 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %13661, label %13474, label %13662

13662:                                            ; preds = %13657, %13660
  %13663 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %13664 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13663, i64 0, i32 0
  %13665 = load i32, i32* %13664, align 8
  %13666 = icmp eq i32 %13665, 5
  br label %14210

13667:                                            ; preds = %13312, %13505, %73
  %13668 = load i16, i16* %14, align 2
  br label %13669

13669:                                            ; preds = %13667, %13500, %13307
  %13670 = phi i16 [ %13668, %13667 ], [ %13498, %13500 ], [ %13305, %13307 ]
  %13671 = icmp ult i16 %13670, 128
  br i1 %13671, label %13672, label %13687

13672:                                            ; preds = %13669
  %13673 = zext i16 %13670 to i64
  %13674 = getelementptr inbounds [128 x i8], [128 x i8]* bitcast (<{ [63 x i8], [65 x i8] }>* @_ZN5blinkL21character_scan_flags_E to [128 x i8]*), i64 0, i64 %13673
  %13675 = load i8, i8* %13674, align 1
  %13676 = and i8 %13675, 6
  %13677 = icmp eq i8 %13676, 0
  br i1 %13677, label %13687, label %13678

13678:                                            ; preds = %13672
  %13679 = call zeroext i1 @_ZN5blink13HTMLTokenizer21SkipWhitespacesHelperERNS_15SegmentedStringERDs(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %13679, label %13680, label %13682

13680:                                            ; preds = %13678
  %13681 = load i16, i16* %14, align 2
  br label %13687

13682:                                            ; preds = %13678
  %13683 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %13684 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13683, i64 0, i32 0
  %13685 = load i32, i32* %13684, align 8
  %13686 = icmp eq i32 %13685, 5
  br label %14210

13687:                                            ; preds = %13680, %13669, %13672
  %13688 = phi i16 [ %13681, %13680 ], [ %13670, %13669 ], [ %13670, %13672 ]
  switch i16 %13688, label %13749 [
    i16 62, label %13689
    i16 0, label %13691
  ]

13689:                                            ; preds = %13687
  %13690 = call zeroext i1 @_ZN5blink13HTMLTokenizer15EmitAndResumeInERNS_15SegmentedStringENS0_5StateE(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i32 0)
  br label %14210

13691:                                            ; preds = %13687
  %13692 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %13693 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13692, i64 0, i32 8, i32 0, i32 0, i32 0
  %13694 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %13693, align 8
  %13695 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %13694, i64 0, i32 5
  store i8 1, i8* %13695, align 8
  %13696 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %13697 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13696, i64 0, i32 0
  %13698 = load i32, i32* %13697, align 8
  %13699 = icmp eq i32 %13698, 2
  br i1 %13699, label %13700, label %13748

13700:                                            ; preds = %13691
  %13701 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13696, i64 0, i32 3
  %13702 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %13703 = getelementptr inbounds %class.LiteralBuffer.0, %class.LiteralBuffer.0* %13702, i64 0, i32 0
  %13704 = load i16*, i16** %13703, align 8
  %13705 = getelementptr inbounds %class.LiteralBuffer, %class.LiteralBuffer* %13701, i64 0, i32 0
  %13706 = load i16*, i16** %13705, align 8
  %13707 = icmp eq i16* %13704, %13706
  %13708 = bitcast i16* %13704 to i8*
  br i1 %13707, label %13748, label %13709

13709:                                            ; preds = %13700
  %13710 = ptrtoint i16* %13704 to i64
  %13711 = ptrtoint i16* %13706 to i64
  %13712 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13696, i64 0, i32 3, i32 1
  %13713 = bitcast i16** %13712 to i64*
  %13714 = load i64, i64* %13713, align 8
  %13715 = sub i64 %13714, %13711
  %13716 = ashr exact i64 %13715, 1
  %13717 = trunc i64 %13716 to i32
  %13718 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 2
  %13719 = bitcast i16** %13718 to i64*
  %13720 = load i64, i64* %13719, align 8
  %13721 = sub i64 %13720, %13710
  %13722 = ashr exact i64 %13721, 1
  %13723 = and i64 %13716, 4294967295
  %13724 = icmp ult i64 %13722, %13723
  br i1 %13724, label %13725, label %13735

13725:                                            ; preds = %13709
  %13726 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 3, i64 0
  %13727 = icmp eq i16* %13704, %13726
  br i1 %13727, label %13729, label %13728

13728:                                            ; preds = %13725
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %13708) #11
  br label %13729

13729:                                            ; preds = %13728, %13725
  %13730 = bitcast %class.LiteralBuffer.0* %13702 to i8**
  %13731 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %13723) #11
  %13732 = call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %13731, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)) #11
  %13733 = bitcast i8* %13732 to i16*
  store i8* %13732, i8** %13730, align 8
  %13734 = getelementptr inbounds i16, i16* %13733, i64 %13723
  store i16* %13734, i16** %13718, align 8
  br label %13735

13735:                                            ; preds = %13729, %13709
  %13736 = phi i16* [ %13733, %13729 ], [ %13704, %13709 ]
  %13737 = phi i8* [ %13732, %13729 ], [ %13708, %13709 ]
  %13738 = icmp eq i32 %13717, 0
  br i1 %13738, label %13744, label %13739

13739:                                            ; preds = %13735
  %13740 = bitcast %class.LiteralBuffer* %13701 to i8**
  %13741 = load i8*, i8** %13740, align 8
  %13742 = and i64 %13715, 8589934590
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %13737, i8* align 2 %13741, i64 %13742, i1 false) #11
  %13743 = load i16*, i16** %13703, align 8
  br label %13744

13744:                                            ; preds = %13739, %13735
  %13745 = phi i16* [ %13736, %13735 ], [ %13743, %13739 ]
  %13746 = getelementptr inbounds i16, i16* %13745, i64 %13723
  %13747 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  store i16* %13746, i16** %13747, align 8
  br label %13748

13748:                                            ; preds = %13691, %13700, %13744
  store i32 0, i32* %74, align 8
  br label %14210

13749:                                            ; preds = %13687
  store i32 67, i32* %74, align 8
  %13750 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %13751 = load i8*, i8** %13750, align 8
  %13752 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %13753 = load i8*, i8** %13752, align 8
  %13754 = icmp ult i8* %13751, %13753
  br i1 %13754, label %13755, label %13766, !prof !3

13755:                                            ; preds = %13749
  %13756 = load i8, i8* %49, align 1, !range !2
  %13757 = icmp eq i8 %13756, 0
  br i1 %13757, label %13762, label %13758

13758:                                            ; preds = %13755
  %13759 = getelementptr inbounds i8, i8* %13751, i64 1
  store i8* %13759, i8** %13750, align 8
  %13760 = load i8, i8* %13759, align 1
  %13761 = zext i8 %13760 to i16
  br label %13768

13762:                                            ; preds = %13755
  %13763 = getelementptr inbounds i8, i8* %13751, i64 2
  %13764 = bitcast i8* %13763 to i16*
  store i8* %13763, i8** %13750, align 8
  %13765 = load i16, i16* %13764, align 2
  br label %13768

13766:                                            ; preds = %13749
  %13767 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %13768

13768:                                            ; preds = %13766, %13762, %13758
  %13769 = phi i16 [ %13767, %13766 ], [ %13761, %13758 ], [ %13765, %13762 ]
  store i16 %13769, i16* %14, align 2
  %13770 = icmp ugt i16 %13769, 15
  br i1 %13770, label %13771, label %13773

13771:                                            ; preds = %13768
  %13772 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %13772, align 8
  br label %13785

13773:                                            ; preds = %13768
  %13774 = load i8, i8* %44, align 1, !range !2
  %13775 = icmp eq i8 %13774, 0
  br i1 %13775, label %13776, label %13778

13776:                                            ; preds = %13773
  %13777 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %13777, label %13783, label %13778

13778:                                            ; preds = %13773, %13776
  %13779 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %13780 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13779, i64 0, i32 0
  %13781 = load i32, i32* %13780, align 8
  %13782 = icmp eq i32 %13781, 5
  br label %14210

13783:                                            ; preds = %13903, %11366, %11648, %11876, %12540, %12764, %13046, %13274, %13776, %73, %13908
  %13784 = load i16, i16* %14, align 2
  br label %13785

13785:                                            ; preds = %13771, %13269, %13041, %12759, %12535, %11871, %11643, %11361, %13783
  %13786 = phi i16 [ %13784, %13783 ], [ %13769, %13771 ], [ %13267, %13269 ], [ %13039, %13041 ], [ %12757, %12759 ], [ %12533, %12535 ], [ %11869, %11871 ], [ %11641, %11643 ], [ %11359, %11361 ]
  switch i16 %13786, label %13843 [
    i16 62, label %13787
    i16 0, label %13789
  ]

13787:                                            ; preds = %13785
  %13788 = call zeroext i1 @_ZN5blink13HTMLTokenizer15EmitAndResumeInERNS_15SegmentedStringENS0_5StateE(%"class.blink::HTMLTokenizer"* %0, %"class.blink::SegmentedString"* dereferenceable(88) %1, i32 0)
  br label %14210

13789:                                            ; preds = %13785
  %13790 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %13791 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13790, i64 0, i32 0
  %13792 = load i32, i32* %13791, align 8
  %13793 = icmp eq i32 %13792, 2
  br i1 %13793, label %13794, label %13842

13794:                                            ; preds = %13789
  %13795 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13790, i64 0, i32 3
  %13796 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %13797 = getelementptr inbounds %class.LiteralBuffer.0, %class.LiteralBuffer.0* %13796, i64 0, i32 0
  %13798 = load i16*, i16** %13797, align 8
  %13799 = getelementptr inbounds %class.LiteralBuffer, %class.LiteralBuffer* %13795, i64 0, i32 0
  %13800 = load i16*, i16** %13799, align 8
  %13801 = icmp eq i16* %13798, %13800
  %13802 = bitcast i16* %13798 to i8*
  br i1 %13801, label %13842, label %13803

13803:                                            ; preds = %13794
  %13804 = ptrtoint i16* %13798 to i64
  %13805 = ptrtoint i16* %13800 to i64
  %13806 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13790, i64 0, i32 3, i32 1
  %13807 = bitcast i16** %13806 to i64*
  %13808 = load i64, i64* %13807, align 8
  %13809 = sub i64 %13808, %13805
  %13810 = ashr exact i64 %13809, 1
  %13811 = trunc i64 %13810 to i32
  %13812 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 2
  %13813 = bitcast i16** %13812 to i64*
  %13814 = load i64, i64* %13813, align 8
  %13815 = sub i64 %13814, %13804
  %13816 = ashr exact i64 %13815, 1
  %13817 = and i64 %13810, 4294967295
  %13818 = icmp ult i64 %13816, %13817
  br i1 %13818, label %13819, label %13829

13819:                                            ; preds = %13803
  %13820 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 3, i64 0
  %13821 = icmp eq i16* %13798, %13820
  br i1 %13821, label %13823, label %13822

13822:                                            ; preds = %13819
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %13802) #11
  br label %13823

13823:                                            ; preds = %13822, %13819
  %13824 = bitcast %class.LiteralBuffer.0* %13796 to i8**
  %13825 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %13817) #11
  %13826 = call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %13825, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)) #11
  %13827 = bitcast i8* %13826 to i16*
  store i8* %13826, i8** %13824, align 8
  %13828 = getelementptr inbounds i16, i16* %13827, i64 %13817
  store i16* %13828, i16** %13812, align 8
  br label %13829

13829:                                            ; preds = %13823, %13803
  %13830 = phi i16* [ %13827, %13823 ], [ %13798, %13803 ]
  %13831 = phi i8* [ %13826, %13823 ], [ %13802, %13803 ]
  %13832 = icmp eq i32 %13811, 0
  br i1 %13832, label %13838, label %13833

13833:                                            ; preds = %13829
  %13834 = bitcast %class.LiteralBuffer* %13795 to i8**
  %13835 = load i8*, i8** %13834, align 8
  %13836 = and i64 %13809, 8589934590
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %13831, i8* align 2 %13835, i64 %13836, i1 false) #11
  %13837 = load i16*, i16** %13797, align 8
  br label %13838

13838:                                            ; preds = %13833, %13829
  %13839 = phi i16* [ %13830, %13829 ], [ %13837, %13833 ]
  %13840 = getelementptr inbounds i16, i16* %13839, i64 %13817
  %13841 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  store i16* %13840, i16** %13841, align 8
  br label %13842

13842:                                            ; preds = %13789, %13794, %13838
  store i32 0, i32* %74, align 8
  br label %14210

13843:                                            ; preds = %13785
  %13844 = load i8, i8* %49, align 1, !range !2
  %13845 = icmp eq i8 %13844, 0
  br i1 %13845, label %13852, label %13846

13846:                                            ; preds = %13843
  %13847 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %13848 = load i8*, i8** %13847, align 8
  %13849 = load i8, i8* %13848, align 1
  %13850 = zext i8 %13849 to i16
  %13851 = ptrtoint i8* %13848 to i64
  br label %13858

13852:                                            ; preds = %13843
  %13853 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %13854 = load i16*, i16** %13853, align 8
  %13855 = load i16, i16* %13854, align 2
  %13856 = ptrtoint i16* %13854 to i64
  %13857 = bitcast i16* %13854 to i8*
  br label %13858

13858:                                            ; preds = %13852, %13846
  %13859 = phi i8* [ %13848, %13846 ], [ %13857, %13852 ]
  %13860 = phi i64 [ %13851, %13846 ], [ %13856, %13852 ]
  %13861 = phi i16 [ %13850, %13846 ], [ %13855, %13852 ]
  %13862 = icmp eq i16 %13861, 10
  br i1 %13862, label %13863, label %13884

13863:                                            ; preds = %13858
  %13864 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %13865 = load i8, i8* %13864, align 8, !range !2
  %13866 = icmp eq i8 %13865, 0
  br i1 %13866, label %13884, label %13867, !prof !4

13867:                                            ; preds = %13863
  %13868 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %13869 = load i32, i32* %13868, align 8
  %13870 = add nsw i32 %13869, 1
  store i32 %13870, i32* %13868, align 8
  %13871 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %13872 = load i32, i32* %13871, align 8
  %13873 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %13874 = bitcast i8** %13873 to i64*
  %13875 = load i64, i64* %13874, align 8
  %13876 = sub i64 %13860, %13875
  %13877 = trunc i64 %13876 to i32
  %13878 = xor i8 %13844, 1
  %13879 = zext i8 %13878 to i32
  %13880 = ashr i32 %13877, %13879
  %13881 = add i32 %13872, 1
  %13882 = add i32 %13881, %13880
  %13883 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %13882, i32* %13883, align 4
  br label %13884

13884:                                            ; preds = %13867, %13863, %13858
  %13885 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %13886 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %13887 = load i8*, i8** %13886, align 8
  %13888 = icmp ult i8* %13859, %13887
  br i1 %13888, label %13889, label %13898, !prof !3

13889:                                            ; preds = %13884
  br i1 %13845, label %13894, label %13890

13890:                                            ; preds = %13889
  %13891 = getelementptr inbounds i8, i8* %13859, i64 1
  store i8* %13891, i8** %13885, align 8
  %13892 = load i8, i8* %13891, align 1
  %13893 = zext i8 %13892 to i16
  br label %13900

13894:                                            ; preds = %13889
  %13895 = getelementptr inbounds i8, i8* %13859, i64 2
  %13896 = bitcast i8* %13895 to i16*
  store i8* %13895, i8** %13885, align 8
  %13897 = load i16, i16* %13896, align 2
  br label %13900

13898:                                            ; preds = %13884
  %13899 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %13900

13900:                                            ; preds = %13898, %13894, %13890
  %13901 = phi i16 [ %13899, %13898 ], [ %13893, %13890 ], [ %13897, %13894 ]
  store i16 %13901, i16* %14, align 2
  %13902 = icmp ugt i16 %13901, 15
  br i1 %13902, label %13903, label %13905

13903:                                            ; preds = %13900
  %13904 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %13904, align 8
  br label %13783

13905:                                            ; preds = %13900
  %13906 = load i8, i8* %44, align 1, !range !2
  %13907 = icmp eq i8 %13906, 0
  br i1 %13907, label %13908, label %13910

13908:                                            ; preds = %13905
  %13909 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %13909, label %13783, label %13910

13910:                                            ; preds = %13905, %13908
  %13911 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %13912 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13911, i64 0, i32 0
  %13913 = load i32, i32* %13912, align 8
  %13914 = icmp eq i32 %13913, 5
  br label %14210

13915:                                            ; preds = %9284, %14022
  %13916 = load i16, i16* %14, align 2
  br label %13917

13917:                                            ; preds = %14018, %13915
  %13918 = phi i16 [ %13916, %13915 ], [ %14016, %14018 ]
  switch i16 %13918, label %13951 [
    i16 93, label %13919
    i16 0, label %13950
  ]

13919:                                            ; preds = %13917
  store i32 69, i32* %74, align 8
  %13920 = load i8*, i8** %9285, align 8
  %13921 = load i8*, i8** %9293, align 8
  %13922 = icmp ult i8* %13920, %13921
  br i1 %13922, label %13923, label %13934, !prof !3

13923:                                            ; preds = %13919
  %13924 = load i8, i8* %49, align 1, !range !2
  %13925 = icmp eq i8 %13924, 0
  br i1 %13925, label %13930, label %13926

13926:                                            ; preds = %13923
  %13927 = getelementptr inbounds i8, i8* %13920, i64 1
  store i8* %13927, i8** %9285, align 8
  %13928 = load i8, i8* %13927, align 1
  %13929 = zext i8 %13928 to i16
  br label %13936

13930:                                            ; preds = %13923
  %13931 = getelementptr inbounds i8, i8* %13920, i64 2
  %13932 = bitcast i8* %13931 to i16*
  store i8* %13931, i8** %9285, align 8
  %13933 = load i16, i16* %13932, align 2
  br label %13936

13934:                                            ; preds = %13919
  %13935 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %13936

13936:                                            ; preds = %13934, %13930, %13926
  %13937 = phi i16 [ %13935, %13934 ], [ %13929, %13926 ], [ %13933, %13930 ]
  store i16 %13937, i16* %14, align 2
  %13938 = icmp ugt i16 %13937, 15
  br i1 %13938, label %13939, label %13940

13939:                                            ; preds = %13936
  store i8 0, i8* %9294, align 8
  br label %14031

13940:                                            ; preds = %13936
  %13941 = load i8, i8* %44, align 1, !range !2
  %13942 = icmp eq i8 %13941, 0
  br i1 %13942, label %13943, label %13945

13943:                                            ; preds = %13940
  %13944 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %13944, label %14029, label %13945

13945:                                            ; preds = %13940, %13943
  %13946 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %13947 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13946, i64 0, i32 0
  %13948 = load i32, i32* %13947, align 8
  %13949 = icmp eq i32 %13948, 5
  br label %14210

13950:                                            ; preds = %13917
  store i32 0, i32* %74, align 8
  br label %78

13951:                                            ; preds = %13917
  %13952 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %13953 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13952, i64 0, i32 0
  store i32 5, i32* %13953, align 8
  %13954 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %13955 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13954, i64 0, i32 3, i32 1
  %13956 = load i16*, i16** %13955, align 8
  %13957 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13954, i64 0, i32 3, i32 2
  %13958 = load i16*, i16** %13957, align 8
  %13959 = icmp eq i16* %13956, %13958
  br i1 %13959, label %13960, label %13963, !prof !4

13960:                                            ; preds = %13951
  %13961 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13954, i64 0, i32 3
  %13962 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %13961) #11
  store i16* %13962, i16** %13955, align 8
  br label %13963

13963:                                            ; preds = %13951, %13960
  %13964 = phi i16* [ %13962, %13960 ], [ %13956, %13951 ]
  %13965 = getelementptr inbounds i16, i16* %13964, i64 1
  store i16* %13965, i16** %13955, align 8
  store i16 %13918, i16* %13964, align 2
  %13966 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %13954, i64 0, i32 4
  %13967 = load i16, i16* %13966, align 8
  %13968 = or i16 %13967, %13918
  store i16 %13968, i16* %13966, align 8
  %13969 = load i8, i8* %49, align 1, !range !2
  %13970 = icmp eq i8 %13969, 0
  br i1 %13970, label %13976, label %13971

13971:                                            ; preds = %13963
  %13972 = load i8*, i8** %9285, align 8
  %13973 = load i8, i8* %13972, align 1
  %13974 = zext i8 %13973 to i16
  %13975 = ptrtoint i8* %13972 to i64
  br label %13981

13976:                                            ; preds = %13963
  %13977 = load i16*, i16** %9286, align 8
  %13978 = load i16, i16* %13977, align 2
  %13979 = ptrtoint i16* %13977 to i64
  %13980 = bitcast i16* %13977 to i8*
  br label %13981

13981:                                            ; preds = %13976, %13971
  %13982 = phi i8* [ %13972, %13971 ], [ %13980, %13976 ]
  %13983 = phi i64 [ %13975, %13971 ], [ %13979, %13976 ]
  %13984 = phi i16 [ %13974, %13971 ], [ %13978, %13976 ]
  %13985 = icmp eq i16 %13984, 10
  br i1 %13985, label %13986, label %14001

13986:                                            ; preds = %13981
  %13987 = load i8, i8* %9287, align 8, !range !2
  %13988 = icmp eq i8 %13987, 0
  br i1 %13988, label %14001, label %13989, !prof !4

13989:                                            ; preds = %13986
  %13990 = load i32, i32* %9288, align 8
  %13991 = add nsw i32 %13990, 1
  store i32 %13991, i32* %9288, align 8
  %13992 = load i32, i32* %9289, align 8
  %13993 = load i64, i64* %9291, align 8
  %13994 = sub i64 %13983, %13993
  %13995 = trunc i64 %13994 to i32
  %13996 = xor i8 %13969, 1
  %13997 = zext i8 %13996 to i32
  %13998 = ashr i32 %13995, %13997
  %13999 = add i32 %13992, 1
  %14000 = add i32 %13999, %13998
  store i32 %14000, i32* %9292, align 4
  br label %14001

14001:                                            ; preds = %13989, %13986, %13981
  %14002 = load i8*, i8** %9293, align 8
  %14003 = icmp ult i8* %13982, %14002
  br i1 %14003, label %14004, label %14013, !prof !3

14004:                                            ; preds = %14001
  br i1 %13970, label %14009, label %14005

14005:                                            ; preds = %14004
  %14006 = getelementptr inbounds i8, i8* %13982, i64 1
  store i8* %14006, i8** %9285, align 8
  %14007 = load i8, i8* %14006, align 1
  %14008 = zext i8 %14007 to i16
  br label %14015

14009:                                            ; preds = %14004
  %14010 = getelementptr inbounds i8, i8* %13982, i64 2
  %14011 = bitcast i8* %14010 to i16*
  store i8* %14010, i8** %9285, align 8
  %14012 = load i16, i16* %14011, align 2
  br label %14015

14013:                                            ; preds = %14001
  %14014 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %14015

14015:                                            ; preds = %14013, %14009, %14005
  %14016 = phi i16 [ %14014, %14013 ], [ %14008, %14005 ], [ %14012, %14009 ]
  store i16 %14016, i16* %14, align 2
  %14017 = icmp ugt i16 %14016, 15
  br i1 %14017, label %14018, label %14019

14018:                                            ; preds = %14015
  store i8 0, i8* %9294, align 8
  br label %13917

14019:                                            ; preds = %14015
  %14020 = load i8, i8* %44, align 1, !range !2
  %14021 = icmp eq i8 %14020, 0
  br i1 %14021, label %14022, label %14024

14022:                                            ; preds = %14019
  %14023 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %14023, label %13915, label %14024

14024:                                            ; preds = %14019, %14022
  %14025 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %14026 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %14025, i64 0, i32 0
  %14027 = load i32, i32* %14026, align 8
  %14028 = icmp eq i32 %14027, 5
  br label %14210

14029:                                            ; preds = %13943, %73
  %14030 = load i16, i16* %14, align 2
  br label %14031

14031:                                            ; preds = %14029, %13939
  %14032 = phi i16 [ %14030, %14029 ], [ %13937, %13939 ]
  %14033 = icmp eq i16 %14032, 93
  br i1 %14033, label %14034, label %14068

14034:                                            ; preds = %14031
  store i32 70, i32* %74, align 8
  %14035 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %14036 = load i8*, i8** %14035, align 8
  %14037 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %14038 = load i8*, i8** %14037, align 8
  %14039 = icmp ult i8* %14036, %14038
  br i1 %14039, label %14040, label %14051, !prof !3

14040:                                            ; preds = %14034
  %14041 = load i8, i8* %49, align 1, !range !2
  %14042 = icmp eq i8 %14041, 0
  br i1 %14042, label %14047, label %14043

14043:                                            ; preds = %14040
  %14044 = getelementptr inbounds i8, i8* %14036, i64 1
  store i8* %14044, i8** %14035, align 8
  %14045 = load i8, i8* %14044, align 1
  %14046 = zext i8 %14045 to i16
  br label %14053

14047:                                            ; preds = %14040
  %14048 = getelementptr inbounds i8, i8* %14036, i64 2
  %14049 = bitcast i8* %14048 to i16*
  store i8* %14048, i8** %14035, align 8
  %14050 = load i16, i16* %14049, align 2
  br label %14053

14051:                                            ; preds = %14034
  %14052 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %14053

14053:                                            ; preds = %14051, %14047, %14043
  %14054 = phi i16 [ %14052, %14051 ], [ %14046, %14043 ], [ %14050, %14047 ]
  store i16 %14054, i16* %14, align 2
  %14055 = icmp ugt i16 %14054, 15
  br i1 %14055, label %14056, label %14058

14056:                                            ; preds = %14053
  %14057 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %14057, align 8
  br label %14088

14058:                                            ; preds = %14053
  %14059 = load i8, i8* %44, align 1, !range !2
  %14060 = icmp eq i8 %14059, 0
  br i1 %14060, label %14061, label %14063

14061:                                            ; preds = %14058
  %14062 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %14062, label %14086, label %14063

14063:                                            ; preds = %14058, %14061
  %14064 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %14065 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %14064, i64 0, i32 0
  %14066 = load i32, i32* %14065, align 8
  %14067 = icmp eq i32 %14066, 5
  br label %14210

14068:                                            ; preds = %14031
  %14069 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %14070 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %14069, i64 0, i32 0
  store i32 5, i32* %14070, align 8
  %14071 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %14072 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %14071, i64 0, i32 3, i32 1
  %14073 = load i16*, i16** %14072, align 8
  %14074 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %14071, i64 0, i32 3, i32 2
  %14075 = load i16*, i16** %14074, align 8
  %14076 = icmp eq i16* %14073, %14075
  br i1 %14076, label %14077, label %14080, !prof !4

14077:                                            ; preds = %14068
  %14078 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %14071, i64 0, i32 3
  %14079 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %14078) #11
  store i16* %14079, i16** %14072, align 8
  br label %14080

14080:                                            ; preds = %14068, %14077
  %14081 = phi i16* [ %14079, %14077 ], [ %14073, %14068 ]
  %14082 = getelementptr inbounds i16, i16* %14081, i64 1
  store i16* %14082, i16** %14072, align 8
  store i16 93, i16* %14081, align 2
  %14083 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %14071, i64 0, i32 4
  %14084 = load i16, i16* %14083, align 8
  %14085 = or i16 %14084, 93
  store i16 %14085, i16* %14083, align 8
  store i32 68, i32* %74, align 8
  br label %9284

14086:                                            ; preds = %14129, %14061, %73, %14134
  %14087 = load i16, i16* %14, align 2
  br label %14088

14088:                                            ; preds = %14056, %14086
  %14089 = phi i16 [ %14087, %14086 ], [ %14054, %14056 ]
  switch i16 %14089, label %14175 [
    i16 93, label %14090
    i16 62, label %14141
  ]

14090:                                            ; preds = %14088
  %14091 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %14092 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %14091, i64 0, i32 0
  store i32 5, i32* %14092, align 8
  %14093 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %14094 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %14093, i64 0, i32 3, i32 1
  %14095 = load i16*, i16** %14094, align 8
  %14096 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %14093, i64 0, i32 3, i32 2
  %14097 = load i16*, i16** %14096, align 8
  %14098 = icmp eq i16* %14095, %14097
  br i1 %14098, label %14099, label %14102, !prof !4

14099:                                            ; preds = %14090
  %14100 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %14093, i64 0, i32 3
  %14101 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %14100) #11
  store i16* %14101, i16** %14094, align 8
  br label %14102

14102:                                            ; preds = %14090, %14099
  %14103 = phi i16* [ %14101, %14099 ], [ %14095, %14090 ]
  %14104 = getelementptr inbounds i16, i16* %14103, i64 1
  store i16* %14104, i16** %14094, align 8
  store i16 93, i16* %14103, align 2
  %14105 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %14093, i64 0, i32 4
  %14106 = load i16, i16* %14105, align 8
  %14107 = or i16 %14106, 93
  store i16 %14107, i16* %14105, align 8
  %14108 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %14109 = load i8*, i8** %14108, align 8
  %14110 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %14111 = load i8*, i8** %14110, align 8
  %14112 = icmp ult i8* %14109, %14111
  br i1 %14112, label %14113, label %14124, !prof !3

14113:                                            ; preds = %14102
  %14114 = load i8, i8* %49, align 1, !range !2
  %14115 = icmp eq i8 %14114, 0
  br i1 %14115, label %14120, label %14116

14116:                                            ; preds = %14113
  %14117 = getelementptr inbounds i8, i8* %14109, i64 1
  store i8* %14117, i8** %14108, align 8
  %14118 = load i8, i8* %14117, align 1
  %14119 = zext i8 %14118 to i16
  br label %14126

14120:                                            ; preds = %14113
  %14121 = getelementptr inbounds i8, i8* %14109, i64 2
  %14122 = bitcast i8* %14121 to i16*
  store i8* %14121, i8** %14108, align 8
  %14123 = load i16, i16* %14122, align 2
  br label %14126

14124:                                            ; preds = %14102
  %14125 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %14126

14126:                                            ; preds = %14124, %14120, %14116
  %14127 = phi i16 [ %14125, %14124 ], [ %14119, %14116 ], [ %14123, %14120 ]
  store i16 %14127, i16* %14, align 2
  %14128 = icmp ugt i16 %14127, 15
  br i1 %14128, label %14129, label %14131

14129:                                            ; preds = %14126
  %14130 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %14130, align 8
  br label %14086

14131:                                            ; preds = %14126
  %14132 = load i8, i8* %44, align 1, !range !2
  %14133 = icmp eq i8 %14132, 0
  br i1 %14133, label %14134, label %14136

14134:                                            ; preds = %14131
  %14135 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %14135, label %14086, label %14136

14136:                                            ; preds = %14131, %14134
  %14137 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %14138 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %14137, i64 0, i32 0
  %14139 = load i32, i32* %14138, align 8
  %14140 = icmp eq i32 %14139, 5
  br label %14210

14141:                                            ; preds = %14088
  store i32 0, i32* %74, align 8
  %14142 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %14143 = load i8*, i8** %14142, align 8
  %14144 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %14145 = load i8*, i8** %14144, align 8
  %14146 = icmp ult i8* %14143, %14145
  br i1 %14146, label %14147, label %14158, !prof !3

14147:                                            ; preds = %14141
  %14148 = load i8, i8* %49, align 1, !range !2
  %14149 = icmp eq i8 %14148, 0
  br i1 %14149, label %14154, label %14150

14150:                                            ; preds = %14147
  %14151 = getelementptr inbounds i8, i8* %14143, i64 1
  store i8* %14151, i8** %14142, align 8
  %14152 = load i8, i8* %14151, align 1
  %14153 = zext i8 %14152 to i16
  br label %14160

14154:                                            ; preds = %14147
  %14155 = getelementptr inbounds i8, i8* %14143, i64 2
  %14156 = bitcast i8* %14155 to i16*
  store i8* %14155, i8** %14142, align 8
  %14157 = load i16, i16* %14156, align 2
  br label %14160

14158:                                            ; preds = %14141
  %14159 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %14160

14160:                                            ; preds = %14158, %14154, %14150
  %14161 = phi i16 [ %14159, %14158 ], [ %14153, %14150 ], [ %14157, %14154 ]
  store i16 %14161, i16* %14, align 2
  %14162 = icmp ugt i16 %14161, 15
  br i1 %14162, label %14163, label %14165

14163:                                            ; preds = %14160
  %14164 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %14164, align 8
  br label %76

14165:                                            ; preds = %14160
  %14166 = load i8, i8* %44, align 1, !range !2
  %14167 = icmp eq i8 %14166, 0
  br i1 %14167, label %14168, label %14170

14168:                                            ; preds = %14165
  %14169 = call zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"* %48, %"class.blink::SegmentedString"* dereferenceable(88) %1, i16* nonnull dereferenceable(2) %14) #11
  br i1 %14169, label %76, label %14170

14170:                                            ; preds = %14165, %14168
  %14171 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %14172 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %14171, i64 0, i32 0
  %14173 = load i32, i32* %14172, align 8
  %14174 = icmp eq i32 %14173, 5
  br label %14210

14175:                                            ; preds = %14088
  %14176 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %14177 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %14176, i64 0, i32 0
  store i32 5, i32* %14177, align 8
  %14178 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %14179 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %14178, i64 0, i32 3, i32 1
  %14180 = load i16*, i16** %14179, align 8
  %14181 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %14178, i64 0, i32 3, i32 2
  %14182 = load i16*, i16** %14181, align 8
  %14183 = icmp eq i16* %14180, %14182
  br i1 %14183, label %14184, label %14187, !prof !4

14184:                                            ; preds = %14175
  %14185 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %14178, i64 0, i32 3
  %14186 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %14185) #11
  store i16* %14186, i16** %14179, align 8
  br label %14187

14187:                                            ; preds = %14175, %14184
  %14188 = phi i16* [ %14186, %14184 ], [ %14180, %14175 ]
  %14189 = getelementptr inbounds i16, i16* %14188, i64 1
  store i16* %14189, i16** %14179, align 8
  store i16 93, i16* %14188, align 2
  %14190 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %14178, i64 0, i32 4
  %14191 = load i16, i16* %14190, align 8
  %14192 = or i16 %14191, 93
  store i16 %14192, i16* %14190, align 8
  %14193 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %14194 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %14193, i64 0, i32 0
  store i32 5, i32* %14194, align 8
  %14195 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %17, align 8
  %14196 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %14195, i64 0, i32 3, i32 1
  %14197 = load i16*, i16** %14196, align 8
  %14198 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %14195, i64 0, i32 3, i32 2
  %14199 = load i16*, i16** %14198, align 8
  %14200 = icmp eq i16* %14197, %14199
  br i1 %14200, label %14201, label %14204, !prof !4

14201:                                            ; preds = %14187
  %14202 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %14195, i64 0, i32 3
  %14203 = call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %14202) #11
  store i16* %14203, i16** %14196, align 8
  br label %14204

14204:                                            ; preds = %14187, %14201
  %14205 = phi i16* [ %14203, %14201 ], [ %14197, %14187 ]
  %14206 = getelementptr inbounds i16, i16* %14205, i64 1
  store i16* %14206, i16** %14196, align 8
  store i16 93, i16* %14205, align 2
  %14207 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %14195, i64 0, i32 4
  %14208 = load i16, i16* %14207, align 8
  %14209 = or i16 %14208, 93
  store i16 %14209, i16* %14207, align 8
  store i32 68, i32* %74, align 8
  br label %9284

14210:                                            ; preds = %1678, %1674, %1715, %508, %504, %367, %301, %545, %11330, %11325, %11277, %11272, %9300, %9295, %9232, %9227, %9179, %9174, %5530, %5422, %4072, %3964, %3331, %3223, %2631, %2523, %73, %822, %8837, %8829, %5643, %5638, %4185, %4180, %3444, %3439, %2744, %2739, %1793, %1744, %1635, %1466, %1410, %1303, %1245, %1116, %1068, %933, %885, %622, %574, %465, %366, %211, %153, %114, %14170, %14136, %14063, %14024, %13945, %13910, %13842, %13787, %13778, %13748, %13689, %13682, %13662, %13575, %13512, %13507, %13469, %13382, %13319, %13314, %13276, %13246, %13181, %13176, %13123, %13068, %13048, %13018, %12953, %12948, %12895, %12842, %12766, %12736, %12672, %12619, %12569, %12562, %12542, %12512, %12448, %12395, %12345, %12340, %12264, %12177, %12114, %12109, %12071, %11984, %11921, %11916, %11878, %11848, %11783, %11778, %11725, %11670, %11650, %11620, %11555, %11550, %11497, %11444, %11368, %11228, %11169, %11162, %11142, %11093, %11034, %11029, %10953, %10918, %10819, %10776, %10759, %10661, %10585, %10456, %10401, %10396, %10313, %10199, %10141, %10092, %10061, %10052, %9953, %9895, %9857, %9774, %9716, %9678, %9579, %9524, %9519, %9481, %9398, %9343, %9338, %9108, %9036, %8981, %8956, %8948, %8943, %8909, %8705, %8617, %8612, %8577, %8483, %8375, %8340, %8281, %8173, %8138, %8079, %8012, %8007, %7929, %7873, %7797, %7673, %7668, %7634, %7598, %7578, %7480, %7475, %7419, %7363, %7272, %7211, %7091, %7086, %7050, %7029, %6960, %6888, %6767, %6706, %6616, %6565, %6514, %6459, %6369, %6318, %6263, %6173, %6122, %6066, %5997, %5925, %5565, %5457, %5347, %5242, %5178, %5088, %5044, %4954, %4903, %4869, %4814, %4724, %4690, %4635, %4556, %4525, %4460, %4403, %4107, %3999, %3889, %3784, %3720, %3650, %3366, %3258, %3148, %3043, %2950, %2666, %2558, %2448, %2343, %2262, %2218, %2152, %2147, %2115, %2015, %1980, %1912, %1873, %1839, %1400, %1240, %1202, %1063, %1028, %1001, %880, %849, %817, %717, %690, %148, %109, %68
  %14211 = phi i1 [ %72, %68 ], [ %14140, %14136 ], [ %721, %717 ], [ %694, %690 ], [ %113, %109 ], [ %10062, %10061 ], [ %9899, %9895 ], [ true, %9953 ], [ %9720, %9716 ], [ true, %9774 ], [ %9861, %9857 ], [ %10056, %10052 ], [ %10400, %10396 ], [ %10402, %10401 ], [ true, %10456 ], [ %10589, %10585 ], [ %10096, %10092 ], [ %10145, %10141 ], [ true, %10199 ], [ %10317, %10313 ], [ %9523, %9519 ], [ %9525, %9524 ], [ true, %9579 ], [ %9682, %9678 ], [ %9342, %9338 ], [ %9344, %9343 ], [ true, %9398 ], [ %9485, %9481 ], [ %8982, %8981 ], [ true, %9036 ], [ %9112, %9108 ], [ %10824, %10819 ], [ true, %10918 ], [ %11170, %11169 ], [ true, %11228 ], [ %12570, %12569 ], [ %13690, %13689 ], [ true, %13748 ], [ %13788, %13787 ], [ true, %13842 ], [ %13914, %13910 ], [ %13782, %13778 ], [ %13686, %13682 ], [ %13318, %13314 ], [ %13324, %13319 ], [ true, %13382 ], [ %13473, %13469 ], [ %12623, %12619 ], [ %13511, %13507 ], [ %13517, %13512 ], [ true, %13575 ], [ %13666, %13662 ], [ %12676, %12672 ], [ true, %12736 ], [ %12770, %12766 ], [ %12566, %12562 ], [ %12344, %12340 ], [ %12346, %12345 ], [ %12399, %12395 ], [ %12452, %12448 ], [ true, %12512 ], [ %12546, %12542 ], [ %11920, %11916 ], [ %11926, %11921 ], [ true, %11984 ], [ %12075, %12071 ], [ %11729, %11725 ], [ %12113, %12109 ], [ %12119, %12114 ], [ true, %12177 ], [ %12268, %12264 ], [ %11782, %11778 ], [ %11788, %11783 ], [ true, %11848 ], [ %11882, %11878 ], [ %11674, %11670 ], [ %11448, %11444 ], [ %11501, %11497 ], [ %11554, %11550 ], [ %11560, %11555 ], [ true, %11620 ], [ %11654, %11650 ], [ %11372, %11368 ], [ %13127, %13123 ], [ %13180, %13176 ], [ %13186, %13181 ], [ true, %13246 ], [ %13280, %13276 ], [ %13072, %13068 ], [ %12846, %12842 ], [ %12899, %12895 ], [ %12952, %12948 ], [ %12958, %12953 ], [ true, %13018 ], [ %13052, %13048 ], [ %11166, %11162 ], [ %11033, %11029 ], [ %11035, %11034 ], [ true, %11093 ], [ %11146, %11142 ], [ %10957, %10953 ], [ %10780, %10776 ], [ %10665, %10661 ], [ true, %10759 ], [ %14067, %14063 ], [ %13949, %13945 ], [ %14028, %14024 ], [ %1843, %1839 ], [ %2119, %2115 ], [ %8959, %8956 ], [ %7090, %7086 ], [ %7092, %7091 ], [ %7276, %7272 ], [ %7638, %7634 ], [ %7877, %7873 ], [ %8913, %8909 ], [ %8947, %8943 ], [ %8949, %8948 ], [ %8142, %8138 ], [ %8581, %8577 ], [ %8616, %8612 ], [ %8639, %8617 ], [ %8709, %8705 ], [ %8344, %8340 ], [ %8379, %8375 ], [ %8487, %8483 ], [ %8177, %8173 ], [ %8285, %8281 ], [ %7933, %7929 ], [ %8011, %8007 ], [ %8013, %8012 ], [ %8083, %8079 ], [ %7672, %7668 ], [ %7674, %7673 ], [ %7801, %7797 ], [ %7602, %7598 ], [ %7367, %7363 ], [ %7423, %7419 ], [ %7479, %7475 ], [ %7506, %7480 ], [ %7582, %7578 ], [ %7215, %7211 ], [ %7054, %7050 ], [ %2151, %2147 ], [ %2153, %2152 ], [ %2222, %2218 ], [ %1984, %1980 ], [ %2019, %2015 ], [ %1877, %1873 ], [ %1916, %1912 ], [ %152, %148 ], [ %14174, %14170 ], [ %4873, %4869 ], [ %5351, %5347 ], [ %5461, %5457 ], [ %5569, %5565 ], [ %5246, %5242 ], [ %5092, %5088 ], [ %6518, %6514 ], [ %6771, %6767 ], [ %6569, %6565 ], [ %3893, %3889 ], [ %4003, %3999 ], [ %4111, %4107 ], [ %3788, %3784 ], [ %3654, %3650 ], [ %4464, %4460 ], [ %4407, %4403 ], [ %3724, %3720 ], [ %1244, %1240 ], [ %1404, %1400 ], [ %6620, %6616 ], [ %6710, %6706 ], [ %6322, %6318 ], [ %6373, %6369 ], [ %6463, %6459 ], [ %6126, %6122 ], [ %6177, %6173 ], [ %6267, %6263 ], [ %5929, %5925 ], [ %6001, %5997 ], [ %6070, %6066 ], [ %5182, %5178 ], [ %4907, %4903 ], [ %4958, %4954 ], [ %5048, %5044 ], [ %4694, %4690 ], [ %4728, %4724 ], [ %4818, %4814 ], [ %4529, %4525 ], [ %4560, %4556 ], [ %4639, %4635 ], [ %6892, %6888 ], [ %6964, %6960 ], [ %7033, %7029 ], [ %3152, %3148 ], [ %3262, %3258 ], [ %3047, %3043 ], [ %2954, %2950 ], [ %1067, %1063 ], [ %1206, %1202 ], [ %3370, %3366 ], [ %2452, %2448 ], [ %2562, %2558 ], [ %821, %817 ], [ %1032, %1028 ], [ %1005, %1001 ], [ %853, %849 ], [ %2347, %2343 ], [ %2266, %2262 ], [ %884, %880 ], [ %2670, %2666 ], [ true, %114 ], [ true, %153 ], [ true, %211 ], [ true, %366 ], [ true, %465 ], [ true, %574 ], [ true, %622 ], [ true, %885 ], [ true, %933 ], [ true, %1068 ], [ true, %1116 ], [ true, %1245 ], [ true, %1303 ], [ true, %1410 ], [ true, %1466 ], [ true, %1635 ], [ true, %1744 ], [ true, %1793 ], [ true, %2739 ], [ true, %2744 ], [ true, %3439 ], [ true, %3444 ], [ true, %4180 ], [ true, %4185 ], [ true, %5638 ], [ true, %5643 ], [ %8833, %8829 ], [ false, %8837 ], [ false, %822 ], [ false, %73 ], [ true, %2523 ], [ true, %2631 ], [ true, %3223 ], [ true, %3331 ], [ true, %3964 ], [ true, %4072 ], [ true, %5422 ], [ true, %5530 ], [ %9183, %9179 ], [ %9178, %9174 ], [ %9236, %9232 ], [ %9231, %9227 ], [ %9304, %9300 ], [ %9299, %9295 ], [ %11281, %11277 ], [ %11276, %11272 ], [ %11334, %11330 ], [ %11329, %11325 ], [ true, %545 ], [ true, %301 ], [ true, %367 ], [ true, %504 ], [ true, %508 ], [ true, %1715 ], [ true, %1674 ], [ true, %1678 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %43) #11
  br label %14212

14212:                                            ; preds = %28, %14210
  %14213 = phi i1 [ %14211, %14210 ], [ true, %28 ]
  ret i1 %14213

14214:                                            ; preds = %11250
  %14215 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  %14216 = load i8*, i8** %11234, align 8
  %14217 = load i8*, i8** %11235, align 8
  br label %14225

14218:                                            ; preds = %11250
  %14219 = load i8, i8* %49, align 1, !range !2
  %14220 = icmp eq i8 %14219, 0
  br i1 %14220, label %14223, label %14221

14221:                                            ; preds = %14218
  %14222 = getelementptr inbounds i8, i8* %11252, i64 1
  store i8* %14222, i8** %11234, align 8
  br label %14225

14223:                                            ; preds = %14218
  %14224 = getelementptr inbounds i8, i8* %11252, i64 2
  store i8* %14224, i8** %11234, align 8
  br label %14225

14225:                                            ; preds = %14223, %14221, %14214
  %14226 = phi i8* [ %11251, %14223 ], [ %11251, %14221 ], [ %14217, %14214 ]
  %14227 = phi i8* [ %14224, %14223 ], [ %14222, %14221 ], [ %14216, %14214 ]
  %14228 = icmp ult i8* %14227, %14226
  br i1 %14228, label %14233, label %14229, !prof !3

14229:                                            ; preds = %14225
  %14230 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  %14231 = load i8*, i8** %11234, align 8
  %14232 = load i8*, i8** %11235, align 8
  br label %14240

14233:                                            ; preds = %14225
  %14234 = load i8, i8* %49, align 1, !range !2
  %14235 = icmp eq i8 %14234, 0
  br i1 %14235, label %14238, label %14236

14236:                                            ; preds = %14233
  %14237 = getelementptr inbounds i8, i8* %14227, i64 1
  store i8* %14237, i8** %11234, align 8
  br label %14240

14238:                                            ; preds = %14233
  %14239 = getelementptr inbounds i8, i8* %14227, i64 2
  store i8* %14239, i8** %11234, align 8
  br label %14240

14240:                                            ; preds = %14238, %14236, %14229
  %14241 = phi i8* [ %14226, %14238 ], [ %14226, %14236 ], [ %14232, %14229 ]
  %14242 = phi i8* [ %14239, %14238 ], [ %14237, %14236 ], [ %14231, %14229 ]
  %14243 = icmp ult i8* %14242, %14241
  br i1 %14243, label %14248, label %14244, !prof !3

14244:                                            ; preds = %14240
  %14245 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  %14246 = load i8*, i8** %11234, align 8
  %14247 = load i8*, i8** %11235, align 8
  br label %14255

14248:                                            ; preds = %14240
  %14249 = load i8, i8* %49, align 1, !range !2
  %14250 = icmp eq i8 %14249, 0
  br i1 %14250, label %14253, label %14251

14251:                                            ; preds = %14248
  %14252 = getelementptr inbounds i8, i8* %14242, i64 1
  store i8* %14252, i8** %11234, align 8
  br label %14255

14253:                                            ; preds = %14248
  %14254 = getelementptr inbounds i8, i8* %14242, i64 2
  store i8* %14254, i8** %11234, align 8
  br label %14255

14255:                                            ; preds = %14253, %14251, %14244
  %14256 = phi i8* [ %14241, %14253 ], [ %14241, %14251 ], [ %14247, %14244 ]
  %14257 = phi i8* [ %14254, %14253 ], [ %14252, %14251 ], [ %14246, %14244 ]
  %14258 = icmp ult i8* %14257, %14256
  br i1 %14258, label %14263, label %14259, !prof !3

14259:                                            ; preds = %14255
  %14260 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  %14261 = load i8*, i8** %11234, align 8
  %14262 = load i8*, i8** %11235, align 8
  br label %14270

14263:                                            ; preds = %14255
  %14264 = load i8, i8* %49, align 1, !range !2
  %14265 = icmp eq i8 %14264, 0
  br i1 %14265, label %14268, label %14266

14266:                                            ; preds = %14263
  %14267 = getelementptr inbounds i8, i8* %14257, i64 1
  store i8* %14267, i8** %11234, align 8
  br label %14270

14268:                                            ; preds = %14263
  %14269 = getelementptr inbounds i8, i8* %14257, i64 2
  store i8* %14269, i8** %11234, align 8
  br label %14270

14270:                                            ; preds = %14268, %14266, %14259
  %14271 = phi i8* [ %14256, %14268 ], [ %14256, %14266 ], [ %14262, %14259 ]
  %14272 = phi i8* [ %14269, %14268 ], [ %14267, %14266 ], [ %14261, %14259 ]
  %14273 = icmp ult i8* %14272, %14271
  br i1 %14273, label %14276, label %14274, !prof !3

14274:                                            ; preds = %14270
  %14275 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %14283

14276:                                            ; preds = %14270
  %14277 = load i8, i8* %49, align 1, !range !2
  %14278 = icmp eq i8 %14277, 0
  br i1 %14278, label %14281, label %14279

14279:                                            ; preds = %14276
  %14280 = getelementptr inbounds i8, i8* %14272, i64 1
  store i8* %14280, i8** %11234, align 8
  br label %14283

14281:                                            ; preds = %14276
  %14282 = getelementptr inbounds i8, i8* %14272, i64 2
  store i8* %14282, i8** %11234, align 8
  br label %14283

14283:                                            ; preds = %14281, %14279, %14274
  store i32 56, i32* %74, align 8
  %14284 = load i8, i8* %44, align 1, !range !2
  %14285 = icmp eq i8 %14284, 0
  br i1 %14285, label %11254, label %11272

14286:                                            ; preds = %11303
  %14287 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  %14288 = load i8*, i8** %11287, align 8
  %14289 = load i8*, i8** %11288, align 8
  br label %14297

14290:                                            ; preds = %11303
  %14291 = load i8, i8* %49, align 1, !range !2
  %14292 = icmp eq i8 %14291, 0
  br i1 %14292, label %14295, label %14293

14293:                                            ; preds = %14290
  %14294 = getelementptr inbounds i8, i8* %11305, i64 1
  store i8* %14294, i8** %11287, align 8
  br label %14297

14295:                                            ; preds = %14290
  %14296 = getelementptr inbounds i8, i8* %11305, i64 2
  store i8* %14296, i8** %11287, align 8
  br label %14297

14297:                                            ; preds = %14295, %14293, %14286
  %14298 = phi i8* [ %11304, %14295 ], [ %11304, %14293 ], [ %14289, %14286 ]
  %14299 = phi i8* [ %14296, %14295 ], [ %14294, %14293 ], [ %14288, %14286 ]
  %14300 = icmp ult i8* %14299, %14298
  br i1 %14300, label %14305, label %14301, !prof !3

14301:                                            ; preds = %14297
  %14302 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  %14303 = load i8*, i8** %11287, align 8
  %14304 = load i8*, i8** %11288, align 8
  br label %14312

14305:                                            ; preds = %14297
  %14306 = load i8, i8* %49, align 1, !range !2
  %14307 = icmp eq i8 %14306, 0
  br i1 %14307, label %14310, label %14308

14308:                                            ; preds = %14305
  %14309 = getelementptr inbounds i8, i8* %14299, i64 1
  store i8* %14309, i8** %11287, align 8
  br label %14312

14310:                                            ; preds = %14305
  %14311 = getelementptr inbounds i8, i8* %14299, i64 2
  store i8* %14311, i8** %11287, align 8
  br label %14312

14312:                                            ; preds = %14310, %14308, %14301
  %14313 = phi i8* [ %14298, %14310 ], [ %14298, %14308 ], [ %14304, %14301 ]
  %14314 = phi i8* [ %14311, %14310 ], [ %14309, %14308 ], [ %14303, %14301 ]
  %14315 = icmp ult i8* %14314, %14313
  br i1 %14315, label %14320, label %14316, !prof !3

14316:                                            ; preds = %14312
  %14317 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  %14318 = load i8*, i8** %11287, align 8
  %14319 = load i8*, i8** %11288, align 8
  br label %14327

14320:                                            ; preds = %14312
  %14321 = load i8, i8* %49, align 1, !range !2
  %14322 = icmp eq i8 %14321, 0
  br i1 %14322, label %14325, label %14323

14323:                                            ; preds = %14320
  %14324 = getelementptr inbounds i8, i8* %14314, i64 1
  store i8* %14324, i8** %11287, align 8
  br label %14327

14325:                                            ; preds = %14320
  %14326 = getelementptr inbounds i8, i8* %14314, i64 2
  store i8* %14326, i8** %11287, align 8
  br label %14327

14327:                                            ; preds = %14325, %14323, %14316
  %14328 = phi i8* [ %14313, %14325 ], [ %14313, %14323 ], [ %14319, %14316 ]
  %14329 = phi i8* [ %14326, %14325 ], [ %14324, %14323 ], [ %14318, %14316 ]
  %14330 = icmp ult i8* %14329, %14328
  br i1 %14330, label %14335, label %14331, !prof !3

14331:                                            ; preds = %14327
  %14332 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  %14333 = load i8*, i8** %11287, align 8
  %14334 = load i8*, i8** %11288, align 8
  br label %14342

14335:                                            ; preds = %14327
  %14336 = load i8, i8* %49, align 1, !range !2
  %14337 = icmp eq i8 %14336, 0
  br i1 %14337, label %14340, label %14338

14338:                                            ; preds = %14335
  %14339 = getelementptr inbounds i8, i8* %14329, i64 1
  store i8* %14339, i8** %11287, align 8
  br label %14342

14340:                                            ; preds = %14335
  %14341 = getelementptr inbounds i8, i8* %14329, i64 2
  store i8* %14341, i8** %11287, align 8
  br label %14342

14342:                                            ; preds = %14340, %14338, %14331
  %14343 = phi i8* [ %14328, %14340 ], [ %14328, %14338 ], [ %14334, %14331 ]
  %14344 = phi i8* [ %14341, %14340 ], [ %14339, %14338 ], [ %14333, %14331 ]
  %14345 = icmp ult i8* %14344, %14343
  br i1 %14345, label %14348, label %14346, !prof !3

14346:                                            ; preds = %14342
  %14347 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %14355

14348:                                            ; preds = %14342
  %14349 = load i8, i8* %49, align 1, !range !2
  %14350 = icmp eq i8 %14349, 0
  br i1 %14350, label %14353, label %14351

14351:                                            ; preds = %14348
  %14352 = getelementptr inbounds i8, i8* %14344, i64 1
  store i8* %14352, i8** %11287, align 8
  br label %14355

14353:                                            ; preds = %14348
  %14354 = getelementptr inbounds i8, i8* %14344, i64 2
  store i8* %14354, i8** %11287, align 8
  br label %14355

14355:                                            ; preds = %14353, %14351, %14346
  store i32 62, i32* %74, align 8
  %14356 = load i8, i8* %44, align 1, !range !2
  %14357 = icmp eq i8 %14356, 0
  br i1 %14357, label %11307, label %11325

14358:                                            ; preds = %9205
  %14359 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  %14360 = load i8*, i8** %9189, align 8
  %14361 = load i8*, i8** %9190, align 8
  br label %14369

14362:                                            ; preds = %9205
  %14363 = load i8, i8* %49, align 1, !range !2
  %14364 = icmp eq i8 %14363, 0
  br i1 %14364, label %14367, label %14365

14365:                                            ; preds = %14362
  %14366 = getelementptr inbounds i8, i8* %9207, i64 1
  store i8* %14366, i8** %9189, align 8
  br label %14369

14367:                                            ; preds = %14362
  %14368 = getelementptr inbounds i8, i8* %9207, i64 2
  store i8* %14368, i8** %9189, align 8
  br label %14369

14369:                                            ; preds = %14367, %14365, %14358
  %14370 = phi i8* [ %9206, %14367 ], [ %9206, %14365 ], [ %14361, %14358 ]
  %14371 = phi i8* [ %14368, %14367 ], [ %14366, %14365 ], [ %14360, %14358 ]
  %14372 = icmp ult i8* %14371, %14370
  br i1 %14372, label %14377, label %14373, !prof !3

14373:                                            ; preds = %14369
  %14374 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  %14375 = load i8*, i8** %9189, align 8
  %14376 = load i8*, i8** %9190, align 8
  br label %14384

14377:                                            ; preds = %14369
  %14378 = load i8, i8* %49, align 1, !range !2
  %14379 = icmp eq i8 %14378, 0
  br i1 %14379, label %14382, label %14380

14380:                                            ; preds = %14377
  %14381 = getelementptr inbounds i8, i8* %14371, i64 1
  store i8* %14381, i8** %9189, align 8
  br label %14384

14382:                                            ; preds = %14377
  %14383 = getelementptr inbounds i8, i8* %14371, i64 2
  store i8* %14383, i8** %9189, align 8
  br label %14384

14384:                                            ; preds = %14382, %14380, %14373
  %14385 = phi i8* [ %14370, %14382 ], [ %14370, %14380 ], [ %14376, %14373 ]
  %14386 = phi i8* [ %14383, %14382 ], [ %14381, %14380 ], [ %14375, %14373 ]
  %14387 = icmp ult i8* %14386, %14385
  br i1 %14387, label %14392, label %14388, !prof !3

14388:                                            ; preds = %14384
  %14389 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  %14390 = load i8*, i8** %9189, align 8
  %14391 = load i8*, i8** %9190, align 8
  br label %14399

14392:                                            ; preds = %14384
  %14393 = load i8, i8* %49, align 1, !range !2
  %14394 = icmp eq i8 %14393, 0
  br i1 %14394, label %14397, label %14395

14395:                                            ; preds = %14392
  %14396 = getelementptr inbounds i8, i8* %14386, i64 1
  store i8* %14396, i8** %9189, align 8
  br label %14399

14397:                                            ; preds = %14392
  %14398 = getelementptr inbounds i8, i8* %14386, i64 2
  store i8* %14398, i8** %9189, align 8
  br label %14399

14399:                                            ; preds = %14397, %14395, %14388
  %14400 = phi i8* [ %14385, %14397 ], [ %14385, %14395 ], [ %14391, %14388 ]
  %14401 = phi i8* [ %14398, %14397 ], [ %14396, %14395 ], [ %14390, %14388 ]
  %14402 = icmp ult i8* %14401, %14400
  br i1 %14402, label %14407, label %14403, !prof !3

14403:                                            ; preds = %14399
  %14404 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  %14405 = load i8*, i8** %9189, align 8
  %14406 = load i8*, i8** %9190, align 8
  br label %14414

14407:                                            ; preds = %14399
  %14408 = load i8, i8* %49, align 1, !range !2
  %14409 = icmp eq i8 %14408, 0
  br i1 %14409, label %14412, label %14410

14410:                                            ; preds = %14407
  %14411 = getelementptr inbounds i8, i8* %14401, i64 1
  store i8* %14411, i8** %9189, align 8
  br label %14414

14412:                                            ; preds = %14407
  %14413 = getelementptr inbounds i8, i8* %14401, i64 2
  store i8* %14413, i8** %9189, align 8
  br label %14414

14414:                                            ; preds = %14412, %14410, %14403
  %14415 = phi i8* [ %14400, %14412 ], [ %14400, %14410 ], [ %14406, %14403 ]
  %14416 = phi i8* [ %14413, %14412 ], [ %14411, %14410 ], [ %14405, %14403 ]
  %14417 = icmp ult i8* %14416, %14415
  br i1 %14417, label %14422, label %14418, !prof !3

14418:                                            ; preds = %14414
  %14419 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  %14420 = load i8*, i8** %9189, align 8
  %14421 = load i8*, i8** %9190, align 8
  br label %14429

14422:                                            ; preds = %14414
  %14423 = load i8, i8* %49, align 1, !range !2
  %14424 = icmp eq i8 %14423, 0
  br i1 %14424, label %14427, label %14425

14425:                                            ; preds = %14422
  %14426 = getelementptr inbounds i8, i8* %14416, i64 1
  store i8* %14426, i8** %9189, align 8
  br label %14429

14427:                                            ; preds = %14422
  %14428 = getelementptr inbounds i8, i8* %14416, i64 2
  store i8* %14428, i8** %9189, align 8
  br label %14429

14429:                                            ; preds = %14427, %14425, %14418
  %14430 = phi i8* [ %14415, %14427 ], [ %14415, %14425 ], [ %14421, %14418 ]
  %14431 = phi i8* [ %14428, %14427 ], [ %14426, %14425 ], [ %14420, %14418 ]
  %14432 = icmp ult i8* %14431, %14430
  br i1 %14432, label %14435, label %14433, !prof !3

14433:                                            ; preds = %14429
  %14434 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %14442

14435:                                            ; preds = %14429
  %14436 = load i8, i8* %49, align 1, !range !2
  %14437 = icmp eq i8 %14436, 0
  br i1 %14437, label %14440, label %14438

14438:                                            ; preds = %14435
  %14439 = getelementptr inbounds i8, i8* %14431, i64 1
  store i8* %14439, i8** %9189, align 8
  br label %14442

14440:                                            ; preds = %14435
  %14441 = getelementptr inbounds i8, i8* %14431, i64 2
  store i8* %14441, i8** %9189, align 8
  br label %14442

14442:                                            ; preds = %14440, %14438, %14433
  store i32 52, i32* %74, align 8
  %14443 = load i8, i8* %44, align 1, !range !2
  %14444 = icmp eq i8 %14443, 0
  br i1 %14444, label %9209, label %9227

14445:                                            ; preds = %9262
  %14446 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  %14447 = load i8*, i8** %9246, align 8
  %14448 = load i8*, i8** %9247, align 8
  br label %14456

14449:                                            ; preds = %9262
  %14450 = load i8, i8* %49, align 1, !range !2
  %14451 = icmp eq i8 %14450, 0
  br i1 %14451, label %14454, label %14452

14452:                                            ; preds = %14449
  %14453 = getelementptr inbounds i8, i8* %9264, i64 1
  store i8* %14453, i8** %9246, align 8
  br label %14456

14454:                                            ; preds = %14449
  %14455 = getelementptr inbounds i8, i8* %9264, i64 2
  store i8* %14455, i8** %9246, align 8
  br label %14456

14456:                                            ; preds = %14454, %14452, %14445
  %14457 = phi i8* [ %9263, %14454 ], [ %9263, %14452 ], [ %14448, %14445 ]
  %14458 = phi i8* [ %14455, %14454 ], [ %14453, %14452 ], [ %14447, %14445 ]
  %14459 = icmp ult i8* %14458, %14457
  br i1 %14459, label %14464, label %14460, !prof !3

14460:                                            ; preds = %14456
  %14461 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  %14462 = load i8*, i8** %9246, align 8
  %14463 = load i8*, i8** %9247, align 8
  br label %14471

14464:                                            ; preds = %14456
  %14465 = load i8, i8* %49, align 1, !range !2
  %14466 = icmp eq i8 %14465, 0
  br i1 %14466, label %14469, label %14467

14467:                                            ; preds = %14464
  %14468 = getelementptr inbounds i8, i8* %14458, i64 1
  store i8* %14468, i8** %9246, align 8
  br label %14471

14469:                                            ; preds = %14464
  %14470 = getelementptr inbounds i8, i8* %14458, i64 2
  store i8* %14470, i8** %9246, align 8
  br label %14471

14471:                                            ; preds = %14469, %14467, %14460
  %14472 = phi i8* [ %14457, %14469 ], [ %14457, %14467 ], [ %14463, %14460 ]
  %14473 = phi i8* [ %14470, %14469 ], [ %14468, %14467 ], [ %14462, %14460 ]
  %14474 = icmp ult i8* %14473, %14472
  br i1 %14474, label %14479, label %14475, !prof !3

14475:                                            ; preds = %14471
  %14476 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  %14477 = load i8*, i8** %9246, align 8
  %14478 = load i8*, i8** %9247, align 8
  br label %14486

14479:                                            ; preds = %14471
  %14480 = load i8, i8* %49, align 1, !range !2
  %14481 = icmp eq i8 %14480, 0
  br i1 %14481, label %14484, label %14482

14482:                                            ; preds = %14479
  %14483 = getelementptr inbounds i8, i8* %14473, i64 1
  store i8* %14483, i8** %9246, align 8
  br label %14486

14484:                                            ; preds = %14479
  %14485 = getelementptr inbounds i8, i8* %14473, i64 2
  store i8* %14485, i8** %9246, align 8
  br label %14486

14486:                                            ; preds = %14484, %14482, %14475
  %14487 = phi i8* [ %14472, %14484 ], [ %14472, %14482 ], [ %14478, %14475 ]
  %14488 = phi i8* [ %14485, %14484 ], [ %14483, %14482 ], [ %14477, %14475 ]
  %14489 = icmp ult i8* %14488, %14487
  br i1 %14489, label %14494, label %14490, !prof !3

14490:                                            ; preds = %14486
  %14491 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  %14492 = load i8*, i8** %9246, align 8
  %14493 = load i8*, i8** %9247, align 8
  br label %14501

14494:                                            ; preds = %14486
  %14495 = load i8, i8* %49, align 1, !range !2
  %14496 = icmp eq i8 %14495, 0
  br i1 %14496, label %14499, label %14497

14497:                                            ; preds = %14494
  %14498 = getelementptr inbounds i8, i8* %14488, i64 1
  store i8* %14498, i8** %9246, align 8
  br label %14501

14499:                                            ; preds = %14494
  %14500 = getelementptr inbounds i8, i8* %14488, i64 2
  store i8* %14500, i8** %9246, align 8
  br label %14501

14501:                                            ; preds = %14499, %14497, %14490
  %14502 = phi i8* [ %14487, %14499 ], [ %14487, %14497 ], [ %14493, %14490 ]
  %14503 = phi i8* [ %14500, %14499 ], [ %14498, %14497 ], [ %14492, %14490 ]
  %14504 = icmp ult i8* %14503, %14502
  br i1 %14504, label %14509, label %14505, !prof !3

14505:                                            ; preds = %14501
  %14506 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  %14507 = load i8*, i8** %9246, align 8
  %14508 = load i8*, i8** %9247, align 8
  br label %14516

14509:                                            ; preds = %14501
  %14510 = load i8, i8* %49, align 1, !range !2
  %14511 = icmp eq i8 %14510, 0
  br i1 %14511, label %14514, label %14512

14512:                                            ; preds = %14509
  %14513 = getelementptr inbounds i8, i8* %14503, i64 1
  store i8* %14513, i8** %9246, align 8
  br label %14516

14514:                                            ; preds = %14509
  %14515 = getelementptr inbounds i8, i8* %14503, i64 2
  store i8* %14515, i8** %9246, align 8
  br label %14516

14516:                                            ; preds = %14514, %14512, %14505
  %14517 = phi i8* [ %14502, %14514 ], [ %14502, %14512 ], [ %14508, %14505 ]
  %14518 = phi i8* [ %14515, %14514 ], [ %14513, %14512 ], [ %14507, %14505 ]
  %14519 = icmp ult i8* %14518, %14517
  br i1 %14519, label %14522, label %14520, !prof !3

14520:                                            ; preds = %14516
  %14521 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %14529

14522:                                            ; preds = %14516
  %14523 = load i8, i8* %49, align 1, !range !2
  %14524 = icmp eq i8 %14523, 0
  br i1 %14524, label %14527, label %14525

14525:                                            ; preds = %14522
  %14526 = getelementptr inbounds i8, i8* %14518, i64 1
  store i8* %14526, i8** %9246, align 8
  br label %14529

14527:                                            ; preds = %14522
  %14528 = getelementptr inbounds i8, i8* %14518, i64 2
  store i8* %14528, i8** %9246, align 8
  br label %14529

14529:                                            ; preds = %14527, %14525, %14520
  store i32 68, i32* %74, align 8
  %14530 = load i8, i8* %44, align 1, !range !2
  %14531 = icmp eq i8 %14530, 0
  br i1 %14531, label %9266, label %9295
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9HTMLToken11BeginEndTagERK13LiteralBufferIhLj32EE(%"class.blink::HTMLToken"*, %class.LiteralBuffer.7* dereferenceable(56)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 0
  store i32 3, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 5
  store i8 0, i8* %4, align 2
  %5 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 7
  store %"class.blink::HTMLToken::Attribute"* null, %"class.blink::HTMLToken::Attribute"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 6
  %7 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %48, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %38, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %15, align 8
  %17 = zext i32 %12 to i64
  %18 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %16, i64 %17
  br label %19

19:                                               ; preds = %34, %14
  %20 = phi %"class.blink::HTMLToken::Attribute"* [ %35, %34 ], [ %16, %14 ]
  %21 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %20, i64 0, i32 1, i32 0
  %22 = load i16*, i16** %21, align 8
  %23 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %20, i64 0, i32 1, i32 3, i64 0
  %24 = icmp eq i16* %22, %23
  br i1 %24, label %27, label %25

25:                                               ; preds = %19
  %26 = bitcast i16* %22 to i8*
  tail call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %26) #11
  br label %27

27:                                               ; preds = %25, %19
  %28 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %20, i64 0, i32 0, i32 0
  %29 = load i16*, i16** %28, align 8
  %30 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %20, i64 0, i32 0, i32 3, i64 0
  %31 = icmp eq i16* %29, %30
  br i1 %31, label %34, label %32

32:                                               ; preds = %27
  %33 = bitcast i16* %29 to i8*
  tail call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %33) #11
  br label %34

34:                                               ; preds = %32, %27
  %35 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %20, i64 1
  %36 = icmp eq %"class.blink::HTMLToken::Attribute"* %35, %18
  br i1 %36, label %37, label %19

37:                                               ; preds = %34
  store i32 0, i32* %11, align 4
  br label %38

38:                                               ; preds = %37, %10
  %39 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 6, i32 0, i32 1, i64 0
  %42 = ptrtoint i8* %41 to i64
  %43 = bitcast %"class.WTF::Vector"* %6 to i64*
  store atomic i64 %42, i64* %43 monotonic, align 8
  store i32 10, i32* %7, align 8
  %44 = bitcast i8* %41 to %"class.blink::HTMLToken::Attribute"*
  %45 = icmp eq %"class.blink::HTMLToken::Attribute"* %40, %44
  br i1 %45, label %48, label %46, !prof !3

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink9HTMLToken9AttributeELj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer"* %47, %"class.blink::HTMLToken::Attribute"* %40) #11
  br label %48

48:                                               ; preds = %2, %38, %46
  %49 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 3
  %50 = getelementptr inbounds %class.LiteralBuffer.7, %class.LiteralBuffer.7* %1, i64 0, i32 1
  %51 = bitcast i8** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %class.LiteralBuffer.7* %1 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %52, %54
  %56 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 3, i32 1
  %57 = bitcast i16** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %class.LiteralBuffer* %49 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = sub i64 %58, %60
  %62 = ashr exact i64 %61, 1
  %63 = add i64 %62, %55
  %64 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 3, i32 2
  %65 = bitcast i16** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %60
  %68 = ashr exact i64 %67, 1
  %69 = icmp ult i64 %68, %63
  %70 = inttoptr i64 %54 to i8*
  %71 = inttoptr i64 %58 to i16*
  br i1 %69, label %72, label %77

72:                                               ; preds = %48
  %73 = tail call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEm(%class.LiteralBuffer* %49, i64 %63) #11
  %74 = getelementptr inbounds %class.LiteralBuffer.7, %class.LiteralBuffer.7* %1, i64 0, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = load i16*, i16** %56, align 8
  br label %77

77:                                               ; preds = %72, %48
  %78 = phi i16* [ %76, %72 ], [ %71, %48 ]
  %79 = phi i8* [ %75, %72 ], [ %70, %48 ]
  %80 = bitcast i16* %78 to i8*
  %81 = getelementptr inbounds i8, i8* %79, i64 %55
  %82 = icmp eq i64 %55, 0
  br i1 %82, label %164, label %83

83:                                               ; preds = %77
  %84 = icmp ult i64 %55, 16
  br i1 %84, label %151, label %85

85:                                               ; preds = %83
  %86 = getelementptr i16, i16* %78, i64 %55
  %87 = bitcast i16* %86 to i8*
  %88 = icmp ugt i8* %81, %80
  %89 = icmp ult i8* %79, %87
  %90 = and i1 %88, %89
  br i1 %90, label %151, label %91

91:                                               ; preds = %85
  %92 = and i64 %55, -16
  %93 = getelementptr i16, i16* %78, i64 %92
  %94 = getelementptr i8, i8* %79, i64 %92
  %95 = add i64 %92, -16
  %96 = lshr exact i64 %95, 4
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 1
  %99 = icmp eq i64 %95, 0
  br i1 %99, label %133, label %100

100:                                              ; preds = %91
  %101 = sub nuw nsw i64 %97, %98
  br label %102

102:                                              ; preds = %102, %100
  %103 = phi i64 [ 0, %100 ], [ %130, %102 ]
  %104 = phi i64 [ %101, %100 ], [ %131, %102 ]
  %105 = getelementptr i16, i16* %78, i64 %103
  %106 = getelementptr i8, i8* %79, i64 %103
  %107 = bitcast i8* %106 to <8 x i8>*
  %108 = load <8 x i8>, <8 x i8>* %107, align 1, !alias.scope !34
  %109 = getelementptr i8, i8* %106, i64 8
  %110 = bitcast i8* %109 to <8 x i8>*
  %111 = load <8 x i8>, <8 x i8>* %110, align 1, !alias.scope !34
  %112 = zext <8 x i8> %108 to <8 x i16>
  %113 = zext <8 x i8> %111 to <8 x i16>
  %114 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %114, align 2, !alias.scope !37, !noalias !34
  %115 = getelementptr i16, i16* %105, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !37, !noalias !34
  %117 = or i64 %103, 16
  %118 = getelementptr i16, i16* %78, i64 %117
  %119 = getelementptr i8, i8* %79, i64 %117
  %120 = bitcast i8* %119 to <8 x i8>*
  %121 = load <8 x i8>, <8 x i8>* %120, align 1, !alias.scope !34
  %122 = getelementptr i8, i8* %119, i64 8
  %123 = bitcast i8* %122 to <8 x i8>*
  %124 = load <8 x i8>, <8 x i8>* %123, align 1, !alias.scope !34
  %125 = zext <8 x i8> %121 to <8 x i16>
  %126 = zext <8 x i8> %124 to <8 x i16>
  %127 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %127, align 2, !alias.scope !37, !noalias !34
  %128 = getelementptr i16, i16* %118, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !37, !noalias !34
  %130 = add i64 %103, 32
  %131 = add i64 %104, -2
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %102, !llvm.loop !39

133:                                              ; preds = %102, %91
  %134 = phi i64 [ 0, %91 ], [ %130, %102 ]
  %135 = icmp eq i64 %98, 0
  br i1 %135, label %149, label %136

136:                                              ; preds = %133
  %137 = getelementptr i16, i16* %78, i64 %134
  %138 = getelementptr i8, i8* %79, i64 %134
  %139 = bitcast i8* %138 to <8 x i8>*
  %140 = load <8 x i8>, <8 x i8>* %139, align 1, !alias.scope !34
  %141 = getelementptr i8, i8* %138, i64 8
  %142 = bitcast i8* %141 to <8 x i8>*
  %143 = load <8 x i8>, <8 x i8>* %142, align 1, !alias.scope !34
  %144 = zext <8 x i8> %140 to <8 x i16>
  %145 = zext <8 x i8> %143 to <8 x i16>
  %146 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %146, align 2, !alias.scope !37, !noalias !34
  %147 = getelementptr i16, i16* %137, i64 8
  %148 = bitcast i16* %147 to <8 x i16>*
  store <8 x i16> %145, <8 x i16>* %148, align 2, !alias.scope !37, !noalias !34
  br label %149

149:                                              ; preds = %133, %136
  %150 = icmp eq i64 %55, %92
  br i1 %150, label %162, label %151

151:                                              ; preds = %149, %85, %83
  %152 = phi i16* [ %78, %85 ], [ %78, %83 ], [ %93, %149 ]
  %153 = phi i8* [ %79, %85 ], [ %79, %83 ], [ %94, %149 ]
  br label %154

154:                                              ; preds = %151, %154
  %155 = phi i16* [ %160, %154 ], [ %152, %151 ]
  %156 = phi i8* [ %159, %154 ], [ %153, %151 ]
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i16
  store i16 %158, i16* %155, align 2
  %159 = getelementptr inbounds i8, i8* %156, i64 1
  %160 = getelementptr inbounds i16, i16* %155, i64 1
  %161 = icmp eq i8* %159, %81
  br i1 %161, label %162, label %154, !llvm.loop !40

162:                                              ; preds = %154, %149
  %163 = load i16*, i16** %56, align 8
  br label %164

164:                                              ; preds = %77, %162
  %165 = phi i16* [ %163, %162 ], [ %78, %77 ]
  %166 = getelementptr inbounds i16, i16* %165, i64 %55
  store i16* %166, i16** %56, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9HTMLToken13BeginStartTagEDs(%"class.blink::HTMLToken"*, i16 zeroext) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 0
  store i32 2, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 5
  store i8 0, i8* %4, align 2
  %5 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 7
  store %"class.blink::HTMLToken::Attribute"* null, %"class.blink::HTMLToken::Attribute"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 6
  %7 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %48, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %38, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %15, align 8
  %17 = zext i32 %12 to i64
  %18 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %16, i64 %17
  br label %19

19:                                               ; preds = %34, %14
  %20 = phi %"class.blink::HTMLToken::Attribute"* [ %35, %34 ], [ %16, %14 ]
  %21 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %20, i64 0, i32 1, i32 0
  %22 = load i16*, i16** %21, align 8
  %23 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %20, i64 0, i32 1, i32 3, i64 0
  %24 = icmp eq i16* %22, %23
  br i1 %24, label %27, label %25

25:                                               ; preds = %19
  %26 = bitcast i16* %22 to i8*
  tail call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %26) #11
  br label %27

27:                                               ; preds = %25, %19
  %28 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %20, i64 0, i32 0, i32 0
  %29 = load i16*, i16** %28, align 8
  %30 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %20, i64 0, i32 0, i32 3, i64 0
  %31 = icmp eq i16* %29, %30
  br i1 %31, label %34, label %32

32:                                               ; preds = %27
  %33 = bitcast i16* %29 to i8*
  tail call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %33) #11
  br label %34

34:                                               ; preds = %32, %27
  %35 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %20, i64 1
  %36 = icmp eq %"class.blink::HTMLToken::Attribute"* %35, %18
  br i1 %36, label %37, label %19

37:                                               ; preds = %34
  store i32 0, i32* %11, align 4
  br label %38

38:                                               ; preds = %37, %10
  %39 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 6, i32 0, i32 1, i64 0
  %42 = ptrtoint i8* %41 to i64
  %43 = bitcast %"class.WTF::Vector"* %6 to i64*
  store atomic i64 %42, i64* %43 monotonic, align 8
  store i32 10, i32* %7, align 8
  %44 = bitcast i8* %41 to %"class.blink::HTMLToken::Attribute"*
  %45 = icmp eq %"class.blink::HTMLToken::Attribute"* %40, %44
  br i1 %45, label %48, label %46, !prof !3

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink9HTMLToken9AttributeELj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer"* %47, %"class.blink::HTMLToken::Attribute"* %40) #11
  br label %48

48:                                               ; preds = %2, %38, %46
  %49 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 3, i32 1
  %50 = load i16*, i16** %49, align 8
  %51 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 3, i32 2
  %52 = load i16*, i16** %51, align 8
  %53 = icmp eq i16* %50, %52
  br i1 %53, label %54, label %57, !prof !4

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 3
  %56 = tail call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %55) #11
  store i16* %56, i16** %49, align 8
  br label %57

57:                                               ; preds = %48, %54
  %58 = phi i16* [ %56, %54 ], [ %50, %48 ]
  %59 = getelementptr inbounds i16, i16* %58, i64 1
  store i16* %59, i16** %49, align 8
  store i16 %1, i16* %58, align 2
  %60 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 4
  %61 = load i16, i16* %60, align 8
  %62 = or i16 %61, %1
  store i16 %62, i16* %60, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9HTMLToken11BeginEndTagEh(%"class.blink::HTMLToken"*, i8 zeroext) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 0
  store i32 3, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 5
  store i8 0, i8* %4, align 2
  %5 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 7
  store %"class.blink::HTMLToken::Attribute"* null, %"class.blink::HTMLToken::Attribute"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 6
  %7 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %48, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %38, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %15, align 8
  %17 = zext i32 %12 to i64
  %18 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %16, i64 %17
  br label %19

19:                                               ; preds = %34, %14
  %20 = phi %"class.blink::HTMLToken::Attribute"* [ %35, %34 ], [ %16, %14 ]
  %21 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %20, i64 0, i32 1, i32 0
  %22 = load i16*, i16** %21, align 8
  %23 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %20, i64 0, i32 1, i32 3, i64 0
  %24 = icmp eq i16* %22, %23
  br i1 %24, label %27, label %25

25:                                               ; preds = %19
  %26 = bitcast i16* %22 to i8*
  tail call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %26) #11
  br label %27

27:                                               ; preds = %25, %19
  %28 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %20, i64 0, i32 0, i32 0
  %29 = load i16*, i16** %28, align 8
  %30 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %20, i64 0, i32 0, i32 3, i64 0
  %31 = icmp eq i16* %29, %30
  br i1 %31, label %34, label %32

32:                                               ; preds = %27
  %33 = bitcast i16* %29 to i8*
  tail call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %33) #11
  br label %34

34:                                               ; preds = %32, %27
  %35 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %20, i64 1
  %36 = icmp eq %"class.blink::HTMLToken::Attribute"* %35, %18
  br i1 %36, label %37, label %19

37:                                               ; preds = %34
  store i32 0, i32* %11, align 4
  br label %38

38:                                               ; preds = %37, %10
  %39 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 6, i32 0, i32 1, i64 0
  %42 = ptrtoint i8* %41 to i64
  %43 = bitcast %"class.WTF::Vector"* %6 to i64*
  store atomic i64 %42, i64* %43 monotonic, align 8
  store i32 10, i32* %7, align 8
  %44 = bitcast i8* %41 to %"class.blink::HTMLToken::Attribute"*
  %45 = icmp eq %"class.blink::HTMLToken::Attribute"* %40, %44
  br i1 %45, label %48, label %46, !prof !3

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink9HTMLToken9AttributeELj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer"* %47, %"class.blink::HTMLToken::Attribute"* %40) #11
  br label %48

48:                                               ; preds = %2, %38, %46
  %49 = zext i8 %1 to i16
  %50 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 3, i32 1
  %51 = load i16*, i16** %50, align 8
  %52 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 3, i32 2
  %53 = load i16*, i16** %52, align 8
  %54 = icmp eq i16* %51, %53
  br i1 %54, label %55, label %58, !prof !4

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 3
  %57 = tail call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %56) #11
  store i16* %57, i16** %50, align 8
  br label %58

58:                                               ; preds = %48, %55
  %59 = phi i16* [ %57, %55 ], [ %51, %48 ]
  %60 = getelementptr inbounds i16, i16* %59, i64 1
  store i16* %60, i16** %50, align 8
  store i16 %49, i16* %59, align 2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink13HTMLTokenizer15EmitAndResumeInERNS_15SegmentedStringENS0_5StateE(%"class.blink::HTMLTokenizer"*, %"class.blink::SegmentedString"* dereferenceable(88), i32) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 4
  %5 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 2
  br i1 %8, label %9, label %57

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5, i64 0, i32 3
  %11 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %12 = getelementptr inbounds %class.LiteralBuffer.0, %class.LiteralBuffer.0* %11, i64 0, i32 0
  %13 = load i16*, i16** %12, align 8
  %14 = getelementptr inbounds %class.LiteralBuffer, %class.LiteralBuffer* %10, i64 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = icmp eq i16* %13, %15
  %17 = bitcast i16* %13 to i8*
  br i1 %16, label %57, label %18

18:                                               ; preds = %9
  %19 = ptrtoint i16* %13 to i64
  %20 = ptrtoint i16* %15 to i64
  %21 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %5, i64 0, i32 3, i32 1
  %22 = bitcast i16** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %23, %20
  %25 = ashr exact i64 %24, 1
  %26 = trunc i64 %25 to i32
  %27 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 2
  %28 = bitcast i16** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %29, %19
  %31 = ashr exact i64 %30, 1
  %32 = and i64 %25, 4294967295
  %33 = icmp ult i64 %31, %32
  br i1 %33, label %34, label %44

34:                                               ; preds = %18
  %35 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 3, i64 0
  %36 = icmp eq i16* %13, %35
  br i1 %36, label %38, label %37

37:                                               ; preds = %34
  tail call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %17) #11
  br label %38

38:                                               ; preds = %37, %34
  %39 = bitcast %class.LiteralBuffer.0* %11 to i8**
  %40 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %32) #11
  %41 = tail call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %40, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)) #11
  %42 = bitcast i8* %41 to i16*
  store i8* %41, i8** %39, align 8
  %43 = getelementptr inbounds i16, i16* %42, i64 %32
  store i16* %43, i16** %27, align 8
  br label %44

44:                                               ; preds = %38, %18
  %45 = phi i16* [ %42, %38 ], [ %13, %18 ]
  %46 = phi i8* [ %41, %38 ], [ %17, %18 ]
  %47 = icmp eq i32 %26, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %44
  %49 = bitcast %class.LiteralBuffer* %10 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = and i64 %24, 8589934590
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %46, i8* align 2 %50, i64 %51, i1 false) #11
  %52 = load i16*, i16** %12, align 8
  br label %53

53:                                               ; preds = %48, %44
  %54 = phi i16* [ %45, %44 ], [ %52, %48 ]
  %55 = getelementptr inbounds i16, i16* %54, i64 %32
  %56 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  store i16* %55, i16** %56, align 8
  br label %57

57:                                               ; preds = %3, %9, %53
  %58 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 0
  store i32 %2, i32* %58, align 8
  %59 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 4
  %60 = load i8, i8* %59, align 1, !range !2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i16
  %67 = ptrtoint i8* %64 to i64
  br label %74

68:                                               ; preds = %57
  %69 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %70 = load i16*, i16** %69, align 8
  %71 = load i16, i16* %70, align 2
  %72 = ptrtoint i16* %70 to i64
  %73 = bitcast i16* %70 to i8*
  br label %74

74:                                               ; preds = %68, %62
  %75 = phi i8* [ %64, %62 ], [ %73, %68 ]
  %76 = phi i64 [ %67, %62 ], [ %72, %68 ]
  %77 = phi i16 [ %66, %62 ], [ %71, %68 ]
  %78 = icmp eq i16 %77, 10
  br i1 %78, label %79, label %100

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %81 = load i8, i8* %80, align 8, !range !2
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %100, label %83, !prof !4

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %85 = load i32, i32* %84, align 8
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %84, align 8
  %87 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %88 = load i32, i32* %87, align 8
  %89 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %90 = bitcast i8** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = sub i64 %76, %91
  %93 = trunc i64 %92 to i32
  %94 = xor i8 %60, 1
  %95 = zext i8 %94 to i32
  %96 = ashr i32 %93, %95
  %97 = add i32 %88, 1
  %98 = add i32 %97, %96
  %99 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  store i32 %98, i32* %99, align 4
  br label %100

100:                                              ; preds = %83, %79, %74
  %101 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %103 = load i8*, i8** %102, align 8
  %104 = icmp ult i8* %75, %103
  br i1 %104, label %105, label %110, !prof !3

105:                                              ; preds = %100
  br i1 %61, label %108, label %106

106:                                              ; preds = %105
  %107 = getelementptr inbounds i8, i8* %75, i64 1
  store i8* %107, i8** %101, align 8
  br label %112

108:                                              ; preds = %105
  %109 = getelementptr inbounds i8, i8* %75, i64 2
  store i8* %109, i8** %101, align 8
  br label %112

110:                                              ; preds = %100
  %111 = tail call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %112

112:                                              ; preds = %106, %108, %110
  ret i1 true
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink13HTMLTokenizer19IsAppropriateEndTagEv(%"class.blink::HTMLTokenizer"*) local_unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 10
  %9 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 10, i32 1
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %class.LiteralBuffer.7* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8
  %16 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 8, i32 1
  %17 = bitcast i16** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %class.LiteralBuffer.0* %15 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = ashr exact i64 %21, 1
  %23 = icmp eq i64 %14, %22
  br i1 %23, label %24, label %87

24:                                               ; preds = %1
  %25 = trunc i64 %14 to i32
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %87, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %30 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %32 = bitcast %"class.logging::CheckError"* %4 to i8*
  %33 = getelementptr inbounds %class.LiteralBuffer.7, %class.LiteralBuffer.7* %8, i64 0, i32 0
  %34 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %36 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  %37 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %38 = bitcast %"class.logging::CheckError"* %7 to i8*
  %39 = getelementptr inbounds %class.LiteralBuffer.0, %class.LiteralBuffer.0* %15, i64 0, i32 0
  %40 = and i64 %14, 4294967295
  br label %46

41:                                               ; preds = %80
  %42 = icmp eq i64 %86, %40
  br i1 %42, label %87, label %43

43:                                               ; preds = %41
  %44 = load i64, i64* %10, align 8
  %45 = load i64, i64* %12, align 8
  br label %46

46:                                               ; preds = %43, %27
  %47 = phi i64 [ %13, %27 ], [ %45, %43 ]
  %48 = phi i64 [ %11, %27 ], [ %44, %43 ]
  %49 = phi i64 [ 0, %27 ], [ %86, %43 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %29, align 8
  %50 = sub i64 %48, %47
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #11
  %51 = icmp ugt i64 %50, %49
  br i1 %51, label %52, label %53

52:                                               ; preds = %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #11
  store i8* null, i8** %29, align 8
  br label %61

53:                                               ; preds = %46
  %54 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %50) #11
  %55 = trunc i64 %49 to i32
  %56 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %55) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0), i8* %54, i8* %56) #11
  %57 = load i8*, i8** %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #11
  store i8* %57, i8** %29, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %53
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.13, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %3) #11
  %60 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  br label %61

61:                                               ; preds = %52, %53, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  %62 = load i8*, i8** %33, align 8
  %63 = getelementptr inbounds i8, i8* %62, i64 %49
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %66 = load i64, i64* %17, align 8
  %67 = load i64, i64* %19, align 8
  %68 = sub i64 %66, %67
  %69 = ashr exact i64 %68, 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #11
  %70 = icmp ugt i64 %69, %49
  br i1 %70, label %71, label %72

71:                                               ; preds = %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #11
  store i8* null, i8** %35, align 8
  br label %80

72:                                               ; preds = %61
  %73 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %69) #11
  %74 = trunc i64 %49 to i32
  %75 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %74) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0), i8* %73, i8* %75) #11
  %76 = load i8*, i8** %37, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #11
  store i8* %76, i8** %35, align 8
  %77 = icmp eq i8* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %72
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.13, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %6) #11
  %79 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #11
  br label %80

80:                                               ; preds = %71, %72, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  %81 = load i16*, i16** %39, align 8
  %82 = getelementptr inbounds i16, i16* %81, i64 %49
  %83 = load i16, i16* %82, align 2
  %84 = zext i16 %83 to i32
  %85 = icmp eq i32 %65, %84
  %86 = add nuw nsw i64 %49, 1
  br i1 %85, label %41, label %87

87:                                               ; preds = %80, %41, %24, %1
  %88 = phi i1 [ false, %1 ], [ true, %24 ], [ true, %41 ], [ false, %80 ]
  ret i1 %88
}

declare zeroext i1 @_ZN5blink17ConsumeHTMLEntityERNS_15SegmentedStringERNS_17DecodedHTMLEntityERbDs(%"class.blink::SegmentedString"* dereferenceable(88), %"class.blink::DecodedHTMLEntity"* dereferenceable(12), i8* dereferenceable(1), i16 zeroext) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9HTMLToken12BeginDOCTYPEEDs(%"class.blink::HTMLToken"*, i16 zeroext) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 0
  store i32 1, i32* %3, align 8
  %4 = tail call noalias i8* @malloc(i64 48) #11
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 1
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 33, i1 false) #11
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 8
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %9, align 8
  %11 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  store i64 %7, i64* %11, align 8
  %12 = icmp eq %"class.blink::DoctypeData"* %10, null
  br i1 %12, label %37, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = icmp eq i16* %15, null
  %17 = bitcast i16* %15 to i8*
  br i1 %16, label %24, label %18, !prof !3

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %10, i64 0, i32 4, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22, !prof !4

22:                                               ; preds = %18
  store i32 0, i32* %19, align 4
  br label %23

23:                                               ; preds = %22, %18
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %17) #11
  store i16* null, i16** %14, align 8
  br label %24

24:                                               ; preds = %23, %13
  %25 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %10, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load i16*, i16** %25, align 8
  %27 = icmp eq i16* %26, null
  %28 = bitcast i16* %26 to i8*
  br i1 %27, label %35, label %29, !prof !3

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %10, i64 0, i32 3, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %34, label %33, !prof !4

33:                                               ; preds = %29
  store i32 0, i32* %30, align 4
  br label %34

34:                                               ; preds = %33, %29
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %28) #11
  br label %35

35:                                               ; preds = %34, %24
  %36 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %10, i64 0, i32 0
  tail call void @free(i8* %36) #11
  br label %37

37:                                               ; preds = %2, %35
  %38 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 3, i32 1
  %39 = load i16*, i16** %38, align 8
  %40 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 3, i32 2
  %41 = load i16*, i16** %40, align 8
  %42 = icmp eq i16* %39, %41
  br i1 %42, label %43, label %46, !prof !4

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 3
  %45 = tail call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer* %44) #11
  store i16* %45, i16** %38, align 8
  br label %46

46:                                               ; preds = %37, %43
  %47 = phi i16* [ %45, %43 ], [ %39, %37 ]
  %48 = getelementptr inbounds i16, i16* %47, i64 1
  store i16* %48, i16** %38, align 8
  store i16 %1, i16* %47, align 2
  %49 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 4
  %50 = load i16, i16* %49, align 8
  %51 = or i16 %50, %1
  store i16 %51, i16* %49, align 8
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13HTMLTokenizer21SkipWhitespacesHelperERNS_15SegmentedStringERDs(%"class.blink::HTMLTokenizer"* nocapture, %"class.blink::SegmentedString"* dereferenceable(88), i16* nocapture dereferenceable(2)) local_unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 4
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i16
  br label %16

12:                                               ; preds = %3
  %13 = bitcast %"class.blink::SegmentedString"* %1 to i16**
  %14 = load i16*, i16** %13, align 8
  %15 = load i16, i16* %14, align 2
  br label %16

16:                                               ; preds = %7, %12
  %17 = phi i16 [ %11, %7 ], [ %15, %12 ]
  store i16 %17, i16* %2, align 2
  %18 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %20 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 7
  %21 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 6
  %22 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 0
  %23 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %24 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %25 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %26 = bitcast %"class.blink::SegmentedString"* %1 to i64*
  %27 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %28 = bitcast i8** %27 to i64*
  %29 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  br label %30

30:                                               ; preds = %205, %16
  %31 = phi i16 [ %17, %16 ], [ %206, %205 ]
  %32 = icmp ult i16 %31, 128
  br i1 %32, label %33, label %60

33:                                               ; preds = %30, %57
  %34 = phi i16 [ %58, %57 ], [ %31, %30 ]
  %35 = zext i16 %34 to i64
  %36 = getelementptr inbounds [128 x i8], [128 x i8]* bitcast (<{ [63 x i8], [65 x i8] }>* @_ZN5blinkL21character_scan_flags_E to [128 x i8]*), i64 0, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = and i8 %37, 4
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %60, label %40

40:                                               ; preds = %33
  %41 = load i8*, i8** %18, align 8
  %42 = load i8*, i8** %19, align 8
  %43 = icmp ult i8* %41, %42
  br i1 %43, label %44, label %55, !prof !3

44:                                               ; preds = %40
  %45 = load i8, i8* %4, align 1, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds i8, i8* %41, i64 1
  store i8* %48, i8** %18, align 8
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i16
  br label %57

51:                                               ; preds = %44
  %52 = getelementptr inbounds i8, i8* %41, i64 2
  %53 = bitcast i8* %52 to i16*
  store i8* %52, i8** %18, align 8
  %54 = load i16, i16* %53, align 2
  br label %57

55:                                               ; preds = %40
  %56 = tail call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %57

57:                                               ; preds = %47, %51, %55
  %58 = phi i16 [ %56, %55 ], [ %50, %47 ], [ %54, %51 ]
  store i16 %58, i16* %2, align 2
  %59 = icmp ult i16 %58, 128
  br i1 %59, label %33, label %60

60:                                               ; preds = %57, %33, %30
  %61 = phi i16 [ %31, %30 ], [ %34, %33 ], [ %58, %57 ]
  switch i16 %61, label %239 [
    i16 10, label %62
    i16 13, label %101
    i16 0, label %167
  ]

62:                                               ; preds = %60
  %63 = load i8, i8* %23, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %67, !prof !4

65:                                               ; preds = %62
  %66 = load i8*, i8** %18, align 8
  br label %82

67:                                               ; preds = %62
  %68 = load i32, i32* %24, align 8
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %24, align 8
  %70 = load i32, i32* %25, align 8
  %71 = load i64, i64* %26, align 8
  %72 = load i64, i64* %28, align 8
  %73 = sub i64 %71, %72
  %74 = trunc i64 %73 to i32
  %75 = load i8, i8* %4, align 1, !range !2
  %76 = xor i8 %75, 1
  %77 = zext i8 %76 to i32
  %78 = ashr i32 %74, %77
  %79 = add i32 %70, 1
  %80 = add i32 %79, %78
  store i32 %80, i32* %29, align 4
  %81 = inttoptr i64 %71 to i8*
  br label %82

82:                                               ; preds = %67, %65
  %83 = phi i8* [ %66, %65 ], [ %81, %67 ]
  %84 = load i8*, i8** %19, align 8
  %85 = icmp ult i8* %83, %84
  br i1 %85, label %86, label %97, !prof !3

86:                                               ; preds = %82
  %87 = load i8, i8* %4, align 1, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %93, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds i8, i8* %83, i64 1
  store i8* %90, i8** %18, align 8
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i16
  br label %99

93:                                               ; preds = %86
  %94 = getelementptr inbounds i8, i8* %83, i64 2
  %95 = bitcast i8* %94 to i16*
  store i8* %94, i8** %18, align 8
  %96 = load i16, i16* %95, align 2
  br label %99

97:                                               ; preds = %82
  %98 = tail call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %99

99:                                               ; preds = %89, %93, %97
  %100 = phi i16 [ %98, %97 ], [ %92, %89 ], [ %96, %93 ]
  store i16 %100, i16* %2, align 2
  br label %205

101:                                              ; preds = %60
  %102 = load i8*, i8** %18, align 8
  %103 = load i8*, i8** %19, align 8
  %104 = icmp ult i8* %102, %103
  br i1 %104, label %105, label %116, !prof !3

105:                                              ; preds = %101
  %106 = load i8, i8* %4, align 1, !range !2
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %112, label %108

108:                                              ; preds = %105
  %109 = getelementptr inbounds i8, i8* %102, i64 1
  store i8* %109, i8** %18, align 8
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i16
  br label %118

112:                                              ; preds = %105
  %113 = getelementptr inbounds i8, i8* %102, i64 2
  %114 = bitcast i8* %113 to i16*
  store i8* %113, i8** %18, align 8
  %115 = load i16, i16* %114, align 2
  br label %118

116:                                              ; preds = %101
  %117 = tail call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %118

118:                                              ; preds = %116, %112, %108
  %119 = phi i16 [ %117, %116 ], [ %111, %108 ], [ %115, %112 ]
  store i16 %119, i16* %2, align 2
  %120 = load i8, i8* %20, align 1, !range !2
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %124, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 7, i32 1
  store i8 1, i8* %123, align 8
  br label %239

124:                                              ; preds = %118
  %125 = icmp eq i16 %119, 10
  br i1 %125, label %126, label %205

126:                                              ; preds = %124
  %127 = load i8, i8* %23, align 8, !range !2
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %129, label %131, !prof !4

129:                                              ; preds = %126
  %130 = load i8*, i8** %18, align 8
  br label %146

131:                                              ; preds = %126
  %132 = load i32, i32* %24, align 8
  %133 = add nsw i32 %132, 1
  store i32 %133, i32* %24, align 8
  %134 = load i32, i32* %25, align 8
  %135 = load i64, i64* %26, align 8
  %136 = load i64, i64* %28, align 8
  %137 = sub i64 %135, %136
  %138 = trunc i64 %137 to i32
  %139 = load i8, i8* %4, align 1, !range !2
  %140 = xor i8 %139, 1
  %141 = zext i8 %140 to i32
  %142 = ashr i32 %138, %141
  %143 = add i32 %134, 1
  %144 = add i32 %143, %142
  store i32 %144, i32* %29, align 4
  %145 = inttoptr i64 %135 to i8*
  br label %146

146:                                              ; preds = %131, %129
  %147 = phi i8* [ %130, %129 ], [ %145, %131 ]
  %148 = load i8*, i8** %19, align 8
  %149 = icmp ult i8* %147, %148
  br i1 %149, label %150, label %161, !prof !3

150:                                              ; preds = %146
  %151 = load i8, i8* %4, align 1, !range !2
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %157, label %153

153:                                              ; preds = %150
  %154 = getelementptr inbounds i8, i8* %147, i64 1
  store i8* %154, i8** %18, align 8
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i16
  br label %163

157:                                              ; preds = %150
  %158 = getelementptr inbounds i8, i8* %147, i64 2
  %159 = bitcast i8* %158 to i16*
  store i8* %158, i8** %18, align 8
  %160 = load i16, i16* %159, align 2
  br label %163

161:                                              ; preds = %146
  %162 = tail call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %163

163:                                              ; preds = %161, %157, %153
  %164 = phi i16 [ %162, %161 ], [ %156, %153 ], [ %160, %157 ]
  store i16 %164, i16* %2, align 2
  %165 = load i8, i8* %20, align 1, !range !2
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %205, label %239

167:                                              ; preds = %60
  %168 = load i8, i8* %20, align 1, !range !2
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %170, label %239

170:                                              ; preds = %167
  %171 = load i8, i8* %21, align 8, !range !2
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %176, label %173

173:                                              ; preds = %170
  %174 = tail call i32 @_ZNK5blink15SegmentedString6lengthEv(%"class.blink::SegmentedString"* %1) #11
  %175 = icmp eq i32 %174, 1
  br i1 %175, label %236, label %176

176:                                              ; preds = %173, %170
  %177 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %22, align 8
  %178 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %177, i64 0, i32 1
  %179 = load i8, i8* %178, align 4, !range !2
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %181, label %184

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %177, i64 0, i32 0
  %183 = load i32, i32* %182, align 8
  switch i32 %183, label %184 [
    i32 0, label %185
    i32 2, label %185
    i32 4, label %185
  ]

184:                                              ; preds = %181, %176
  store i16 -3, i16* %2, align 2
  br label %205

185:                                              ; preds = %181, %181, %181
  %186 = load i8*, i8** %18, align 8
  %187 = load i8*, i8** %19, align 8
  %188 = icmp ult i8* %186, %187
  br i1 %188, label %189, label %200, !prof !3

189:                                              ; preds = %185
  %190 = load i8, i8* %4, align 1, !range !2
  %191 = icmp eq i8 %190, 0
  br i1 %191, label %196, label %192

192:                                              ; preds = %189
  %193 = getelementptr inbounds i8, i8* %186, i64 1
  store i8* %193, i8** %18, align 8
  %194 = load i8, i8* %193, align 1
  %195 = zext i8 %194 to i16
  br label %202

196:                                              ; preds = %189
  %197 = getelementptr inbounds i8, i8* %186, i64 2
  %198 = bitcast i8* %197 to i16*
  store i8* %197, i8** %18, align 8
  %199 = load i16, i16* %198, align 2
  br label %202

200:                                              ; preds = %185
  %201 = tail call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %202

202:                                              ; preds = %200, %196, %192
  %203 = phi i16 [ %201, %200 ], [ %195, %192 ], [ %199, %196 ]
  store i16 %203, i16* %2, align 2
  %204 = icmp eq i16 %203, 0
  br i1 %204, label %207, label %205

205:                                              ; preds = %233, %202, %184, %163, %124, %236, %99
  %206 = phi i16 [ %203, %202 ], [ -3, %184 ], [ %164, %163 ], [ %119, %124 ], [ %237, %236 ], [ %100, %99 ], [ %234, %233 ]
  br label %30

207:                                              ; preds = %202, %233
  %208 = load i8, i8* %20, align 1, !range !2
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %210, label %239

210:                                              ; preds = %207
  %211 = load i8, i8* %21, align 8, !range !2
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %216, label %213

213:                                              ; preds = %210
  %214 = tail call i32 @_ZNK5blink15SegmentedString6lengthEv(%"class.blink::SegmentedString"* %1) #11
  %215 = icmp eq i32 %214, 1
  br i1 %215, label %236, label %216

216:                                              ; preds = %213, %210
  %217 = load i8*, i8** %18, align 8
  %218 = load i8*, i8** %19, align 8
  %219 = icmp ult i8* %217, %218
  br i1 %219, label %220, label %231, !prof !3

220:                                              ; preds = %216
  %221 = load i8, i8* %4, align 1, !range !2
  %222 = icmp eq i8 %221, 0
  br i1 %222, label %227, label %223

223:                                              ; preds = %220
  %224 = getelementptr inbounds i8, i8* %217, i64 1
  store i8* %224, i8** %18, align 8
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i16
  br label %233

227:                                              ; preds = %220
  %228 = getelementptr inbounds i8, i8* %217, i64 2
  %229 = bitcast i8* %228 to i16*
  store i8* %228, i8** %18, align 8
  %230 = load i16, i16* %229, align 2
  br label %233

231:                                              ; preds = %216
  %232 = tail call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %233

233:                                              ; preds = %231, %227, %223
  %234 = phi i16 [ %232, %231 ], [ %226, %223 ], [ %230, %227 ]
  store i16 %234, i16* %2, align 2
  %235 = icmp eq i16 %234, 0
  br i1 %235, label %207, label %205

236:                                              ; preds = %213, %173
  %237 = load i16, i16* %2, align 2
  %238 = icmp eq i16 %237, 0
  br i1 %238, label %239, label %205

239:                                              ; preds = %163, %167, %60, %236, %207, %122
  %240 = phi i1 [ false, %122 ], [ false, %207 ], [ false, %163 ], [ false, %167 ], [ true, %60 ], [ true, %236 ]
  ret i1 %240
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink13HTMLTokenizer18BufferedCharactersEv(%"class.blink::HTMLTokenizer"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.WTF::StringBuilder", align 8
  %3 = bitcast %"class.WTF::StringBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %3) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 48, i1 false)
  %4 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %4, align 8
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 1
  %6 = bitcast %union.anon.14* %5 to i8*
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 2
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 3
  store i8 1, i8* %8, align 4
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 4
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9
  %11 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 9, i32 1
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %class.LiteralBuffer.7* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = icmp eq i64 %16, 0
  %18 = trunc i64 %16 to i32
  %19 = add i32 %18, 2
  %20 = select i1 %17, i32 0, i32 %19
  call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* nonnull %2, i32 %20) #11
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %2, i8 zeroext 60) #11
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %2, i8 zeroext 47) #11
  %21 = getelementptr inbounds %class.LiteralBuffer.7, %class.LiteralBuffer.7* %10, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = load i64, i64* %12, align 8
  %24 = ptrtoint i8* %22 to i64
  %25 = sub i64 %23, %24
  %26 = trunc i64 %25 to i32
  call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* nonnull %2, i8* %22, i32 %26) #11
  %27 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %2) #11
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %2) #11
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %1
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #11
  br label %43

43:                                               ; preds = %1, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %3) #11
  ret %"class.WTF::StringImpl"* %27
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #5

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #5

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13HTMLTokenizer14UpdateStateForERKN3WTF6StringE(%"class.blink::HTMLTokenizer"* nocapture, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTextareaTagE to %"class.blink::QualifiedName"**), align 8
  %4 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %3) #11
  br i1 %4, label %8, label %5

5:                                                ; preds = %2
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTitleTagE to %"class.blink::QualifiedName"**), align 8
  %7 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %6) #11
  br i1 %7, label %8, label %10

8:                                                ; preds = %5, %2
  %9 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 0
  store i32 2, i32* %9, align 8
  br label %44

10:                                               ; preds = %5
  %11 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names13kPlaintextTagE to %"class.blink::QualifiedName"**), align 8
  %12 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %11) #11
  br i1 %12, label %13, label %15

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 0
  store i32 6, i32* %14, align 8
  br label %44

15:                                               ; preds = %10
  %16 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE to %"class.blink::QualifiedName"**), align 8
  %17 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %16) #11
  br i1 %17, label %18, label %20

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 0
  store i32 5, i32* %19, align 8
  br label %44

20:                                               ; preds = %15
  %21 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kStyleTagE to %"class.blink::QualifiedName"**), align 8
  %22 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %21) #11
  br i1 %22, label %42, label %23

23:                                               ; preds = %20
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kIFrameTagE to %"class.blink::QualifiedName"**), align 8
  %25 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %24) #11
  br i1 %25, label %42, label %26

26:                                               ; preds = %23
  %27 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kXmpTagE to %"class.blink::QualifiedName"**), align 8
  %28 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %27) #11
  br i1 %28, label %42, label %29

29:                                               ; preds = %26
  %30 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kNoembedTagE to %"class.blink::QualifiedName"**), align 8
  %31 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %30) #11
  br i1 %31, label %42, label %32

32:                                               ; preds = %29
  %33 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kNoframesTagE to %"class.blink::QualifiedName"**), align 8
  %34 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %33) #11
  br i1 %34, label %42, label %35

35:                                               ; preds = %32
  %36 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kNoscriptTagE to %"class.blink::QualifiedName"**), align 8
  %37 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %36) #11
  br i1 %37, label %38, label %44

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 11, i32 0
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %38, %32, %29, %26, %23, %20
  %43 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %0, i64 0, i32 0
  store i32 4, i32* %43, align 8
  br label %44

44:                                               ; preds = %38, %13, %35, %42, %18, %8
  ret void
}

declare zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8), %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink9HTMLToken9AttributeELj10ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = icmp ult i32 %1, 11
  br i1 %3, label %4, label %25

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %5, align 8
  %7 = icmp eq %"class.blink::HTMLToken::Attribute"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::HTMLToken::Attribute"*
  %10 = icmp eq %"class.blink::HTMLToken::Attribute"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 10, i32* %15, align 8
  br label %51

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %6, i64 %19
  %21 = ptrtoint i8* %8 to i64
  %22 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 10, i32* %23, align 8
  tail call void @_ZN3WTF20VectorTypeOperationsIN5blink9HTMLToken9AttributeENS_18PartitionAllocatorEE4MoveEPS3_S6_S6_b(%"class.blink::HTMLToken::Attribute"* nonnull %6, %"class.blink::HTMLToken::Attribute"* %20, %"class.blink::HTMLToken::Attribute"* %9, i1 zeroext true)
  %24 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink9HTMLToken9AttributeELj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer"* %24, %"class.blink::HTMLToken::Attribute"* nonnull %6) #11
  br label %51

25:                                               ; preds = %2
  %26 = zext i32 %1 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9HTMLToken9AttributeEEEmm(i64 %26) #11
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9HTMLToken9AttributeEEEPKcv, i64 0, i64 0)) #11
  %29 = udiv i64 %27, 192
  %30 = bitcast i8* %28 to %"class.blink::HTMLToken::Attribute"*
  %31 = ptrtoint i8* %28 to i64
  %32 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %32, align 8
  %34 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %33, i64 %36
  %38 = icmp eq %"class.blink::HTMLToken::Attribute"* %33, null
  %39 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %40 = bitcast i8* %39 to %"class.blink::HTMLToken::Attribute"*
  %41 = icmp eq %"class.blink::HTMLToken::Attribute"* %33, %40
  %42 = or i1 %41, %38
  tail call void @_ZN3WTF20VectorTypeOperationsIN5blink9HTMLToken9AttributeENS_18PartitionAllocatorEE4MoveEPS3_S6_S6_b(%"class.blink::HTMLToken::Attribute"* %33, %"class.blink::HTMLToken::Attribute"* %37, %"class.blink::HTMLToken::Attribute"* %30, i1 zeroext %42)
  %43 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %32, align 8
  %44 = icmp eq %"class.blink::HTMLToken::Attribute"* %43, %40
  br i1 %44, label %47, label %45, !prof !3

45:                                               ; preds = %25
  %46 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink9HTMLToken9AttributeELj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer"* %46, %"class.blink::HTMLToken::Attribute"* %43) #11
  br label %47

47:                                               ; preds = %25, %45
  %48 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %31, i64* %48 monotonic, align 8
  %49 = trunc i64 %29 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %16, %47, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9HTMLToken9AttributeEEEmm(i64) local_unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 11173888
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 11173888) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = mul i64 %0, 192
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #5

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF20VectorTypeOperationsIN5blink9HTMLToken9AttributeENS_18PartitionAllocatorEE4MoveEPS3_S6_S6_b(%"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"*, i1 zeroext) local_unnamed_addr #3 comdat align 2 {
  %5 = icmp eq %"class.blink::HTMLToken::Attribute"* %0, %1
  br i1 %5, label %113, label %6

6:                                                ; preds = %4, %109
  %7 = phi %"class.blink::HTMLToken::Attribute"* [ %111, %109 ], [ %0, %4 ]
  %8 = phi %"class.blink::HTMLToken::Attribute"* [ %110, %109 ], [ %2, %4 ]
  %9 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8, i64 0, i32 0, i32 3
  %10 = bitcast [32 x i16]* %9 to i8*
  %11 = bitcast %"class.blink::HTMLToken::Attribute"* %8 to [32 x i16]**
  store [32 x i16]* %9, [32 x i16]** %11, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8, i64 0, i32 0, i32 1
  %13 = bitcast i16** %12 to [32 x i16]**
  store [32 x i16]* %9, [32 x i16]** %13, align 8
  %14 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8, i64 0, i32 1
  %16 = bitcast i16** %14 to %class.LiteralBuffer.0**
  store %class.LiteralBuffer.0* %15, %class.LiteralBuffer.0** %16, align 8
  %17 = icmp eq %"class.blink::HTMLToken::Attribute"* %8, %7
  br i1 %17, label %52, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7, i64 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  %21 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7, i64 0, i32 0, i32 3, i64 0
  %22 = icmp eq i16* %20, %21
  %23 = ptrtoint i16* %20 to i64
  br i1 %22, label %35, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.blink::HTMLToken::Attribute"* %8 to i64*
  store i64 %23, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7, i64 0, i32 0, i32 1
  %27 = bitcast i16** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast i16** %12 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7, i64 0, i32 0, i32 2
  %31 = bitcast i16** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i16** %14 to i64*
  store i64 %32, i64* %33, align 8
  store i16* %21, i16** %19, align 8
  store i16* %21, i16** %26, align 8
  %34 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7, i64 0, i32 0, i32 3, i64 32
  br label %49

35:                                               ; preds = %18
  %36 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7, i64 0, i32 0, i32 1
  %37 = bitcast i16** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %38, %23
  %40 = ashr exact i64 %39, 1
  %41 = trunc i64 %40 to i32
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %35
  %44 = and i64 %39, 8589934590
  %45 = bitcast i16* %20 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %10, i8* align 2 %45, i64 %44, i1 false) #11
  br label %46

46:                                               ; preds = %43, %35
  %47 = and i64 %40, 4294967295
  %48 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8, i64 0, i32 0, i32 3, i64 %47
  br label %49

49:                                               ; preds = %24, %46
  %50 = phi i16** [ %12, %46 ], [ %30, %24 ]
  %51 = phi i16* [ %48, %46 ], [ %34, %24 ]
  store i16* %51, i16** %50, align 8
  br label %52

52:                                               ; preds = %49, %6
  %53 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8, i64 0, i32 1, i32 3
  %54 = bitcast [32 x i16]* %53 to i8*
  %55 = bitcast %class.LiteralBuffer.0* %15 to [32 x i16]**
  store [32 x i16]* %53, [32 x i16]** %55, align 8
  %56 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8, i64 0, i32 1, i32 1
  %57 = bitcast i16** %56 to [32 x i16]**
  store [32 x i16]* %53, [32 x i16]** %57, align 8
  %58 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8, i64 0, i32 1, i32 2
  %59 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8, i64 0, i32 2
  %60 = bitcast %"class.blink::HTMLToken::Attribute::Range"* %59 to i8*
  %61 = bitcast i16** %58 to %"class.blink::HTMLToken::Attribute::Range"**
  store %"class.blink::HTMLToken::Attribute::Range"* %59, %"class.blink::HTMLToken::Attribute::Range"** %61, align 8
  br i1 %17, label %93, label %62

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7, i64 0, i32 1, i32 0
  %64 = load i16*, i16** %63, align 8
  %65 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7, i64 0, i32 1, i32 3, i64 0
  %66 = icmp eq i16* %64, %65
  %67 = ptrtoint i16* %64 to i64
  br i1 %66, label %79, label %68

68:                                               ; preds = %62
  %69 = bitcast %class.LiteralBuffer.0* %15 to i64*
  store i64 %67, i64* %69, align 8
  %70 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7, i64 0, i32 1, i32 1
  %71 = bitcast i16** %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = bitcast i16** %56 to i64*
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7, i64 0, i32 1, i32 2
  %75 = bitcast i16** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast i16** %58 to i64*
  store i64 %76, i64* %77, align 8
  store i16* %65, i16** %63, align 8
  store i16* %65, i16** %70, align 8
  %78 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7, i64 0, i32 1, i32 3, i64 32
  store i16* %78, i16** %74, align 8
  br label %93

79:                                               ; preds = %62
  %80 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7, i64 0, i32 1, i32 1
  %81 = bitcast i16** %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = sub i64 %82, %67
  %84 = ashr exact i64 %83, 1
  %85 = trunc i64 %84 to i32
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %90, label %87

87:                                               ; preds = %79
  %88 = and i64 %83, 8589934590
  %89 = bitcast i16* %64 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %54, i8* align 2 %89, i64 %88, i1 false) #11
  br label %90

90:                                               ; preds = %87, %79
  %91 = and i64 %84, 4294967295
  %92 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8, i64 0, i32 1, i32 3, i64 %91
  store i16* %92, i16** %56, align 8
  br label %93

93:                                               ; preds = %52, %68, %90
  %94 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7, i64 0, i32 2
  %95 = bitcast %"class.blink::HTMLToken::Attribute::Range"* %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %95, i64 16, i1 false) #11
  %96 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7, i64 0, i32 1, i32 0
  %97 = load i16*, i16** %96, align 8
  %98 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7, i64 0, i32 1, i32 3, i64 0
  %99 = icmp eq i16* %97, %98
  br i1 %99, label %102, label %100

100:                                              ; preds = %93
  %101 = bitcast i16* %97 to i8*
  tail call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %101) #11
  br label %102

102:                                              ; preds = %100, %93
  %103 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7, i64 0, i32 0, i32 0
  %104 = load i16*, i16** %103, align 8
  %105 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7, i64 0, i32 0, i32 3, i64 0
  %106 = icmp eq i16* %104, %105
  br i1 %106, label %109, label %107

107:                                              ; preds = %102
  %108 = bitcast i16* %104 to i8*
  tail call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %108) #11
  br label %109

109:                                              ; preds = %107, %102
  %110 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %8, i64 1
  %111 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %7, i64 1
  %112 = icmp eq %"class.blink::HTMLToken::Attribute"* %111, %1
  br i1 %112, label %113, label %6

113:                                              ; preds = %109, %4
  ret void
}

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #5

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink9HTMLToken9AttributeELj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer"*, %"class.blink::HTMLToken::Attribute"*) local_unnamed_addr #6 comdat align 2 {
  %3 = bitcast %"class.blink::HTMLToken::Attribute"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #11
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #5

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i16* @_ZN13LiteralBufferIDsLj256EE4GrowEm(%class.LiteralBuffer*, i64) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %class.LiteralBuffer, %class.LiteralBuffer* %0, i64 0, i32 1
  %4 = bitcast i16** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %class.LiteralBuffer, %class.LiteralBuffer* %0, i64 0, i32 0
  %7 = bitcast %class.LiteralBuffer* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 1
  %11 = getelementptr inbounds %class.LiteralBuffer, %class.LiteralBuffer* %0, i64 0, i32 2
  %12 = bitcast i16** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %13, %8
  %15 = icmp ugt i64 %14, %1
  %16 = select i1 %15, i64 %14, i64 %1
  %17 = icmp eq i64 %16, 0
  %18 = add i64 %16, -1
  %19 = icmp eq i64 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %24, label %21, !prof !4

21:                                               ; preds = %2
  %22 = tail call i64 @llvm.ctlz.i64(i64 %18, i1 true) #11, !range !41
  %23 = sub nuw nsw i64 64, %22
  br label %24

24:                                               ; preds = %2, %21
  %25 = phi i64 [ %23, %21 ], [ 0, %2 ]
  %26 = shl i64 1, %25
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %26) #11
  %28 = tail call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %27, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)) #11
  %29 = bitcast i8* %28 to i16*
  %30 = icmp eq i64 %9, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %24
  %32 = bitcast %class.LiteralBuffer* %0 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %28, i8* align 2 %33, i64 %9, i1 false) #11
  br label %34

34:                                               ; preds = %24, %31
  %35 = load i16*, i16** %6, align 8
  %36 = getelementptr inbounds %class.LiteralBuffer, %class.LiteralBuffer* %0, i64 0, i32 3, i64 0
  %37 = icmp eq i16* %35, %36
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  %39 = bitcast i16* %35 to i8*
  tail call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %39) #11
  br label %40

40:                                               ; preds = %34, %38
  %41 = bitcast %class.LiteralBuffer* %0 to i8**
  store i8* %28, i8** %41, align 8
  %42 = getelementptr inbounds i16, i16* %29, i64 %10
  store i16* %42, i16** %3, align 8
  %43 = getelementptr inbounds i16, i16* %29, i64 %26
  store i16* %43, i16** %11, align 8
  ret i16* %42
}

declare i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64, i8*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"*) local_unnamed_addr #5

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i16* @_ZN13LiteralBufferIDsLj256EE4GrowEv(%class.LiteralBuffer*) local_unnamed_addr #6 comdat align 2 {
  %2 = tail call i16* @_ZN13LiteralBufferIDsLj256EE4GrowEm(%class.LiteralBuffer* %0, i64 0)
  ret i16* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink9HTMLToken9AttributeELj10ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i64 0, i64 0), i8* %15, i8* %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #11
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %31, align 8
  %33 = icmp eq %"class.blink::HTMLToken::Attribute"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 10
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9HTMLToken9AttributeEEEmm(i64 %37) #11
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9HTMLToken9AttributeEEEPKcv, i64 0, i64 0)) #11
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = udiv i64 %38, 192
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 10, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink9HTMLToken9AttributeELj10ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %27) #11
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(192) %"class.blink::HTMLToken::Attribute"* @_ZN3WTF6VectorIN5blink9HTMLToken9AttributeELj10ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %24, i64 %25
  ret %"class.blink::HTMLToken::Attribute"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i16* @_ZN13LiteralBufferIDsLj32EE4GrowEv(%class.LiteralBuffer.0*) local_unnamed_addr #6 comdat align 2 {
  %2 = tail call i16* @_ZN13LiteralBufferIDsLj32EE4GrowEm(%class.LiteralBuffer.0* %0, i64 0)
  ret i16* %2
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i16* @_ZN13LiteralBufferIDsLj32EE4GrowEm(%class.LiteralBuffer.0*, i64) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %class.LiteralBuffer.0, %class.LiteralBuffer.0* %0, i64 0, i32 1
  %4 = bitcast i16** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %class.LiteralBuffer.0, %class.LiteralBuffer.0* %0, i64 0, i32 0
  %7 = bitcast %class.LiteralBuffer.0* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 1
  %11 = getelementptr inbounds %class.LiteralBuffer.0, %class.LiteralBuffer.0* %0, i64 0, i32 2
  %12 = bitcast i16** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %13, %8
  %15 = icmp ugt i64 %14, %1
  %16 = select i1 %15, i64 %14, i64 %1
  %17 = icmp eq i64 %16, 0
  %18 = add i64 %16, -1
  %19 = icmp eq i64 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %24, label %21, !prof !4

21:                                               ; preds = %2
  %22 = tail call i64 @llvm.ctlz.i64(i64 %18, i1 true) #11, !range !41
  %23 = sub nuw nsw i64 64, %22
  br label %24

24:                                               ; preds = %2, %21
  %25 = phi i64 [ %23, %21 ], [ 0, %2 ]
  %26 = shl i64 1, %25
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %26) #11
  %28 = tail call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %27, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)) #11
  %29 = bitcast i8* %28 to i16*
  %30 = icmp eq i64 %9, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %24
  %32 = bitcast %class.LiteralBuffer.0* %0 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %28, i8* align 2 %33, i64 %9, i1 false) #11
  br label %34

34:                                               ; preds = %24, %31
  %35 = load i16*, i16** %6, align 8
  %36 = getelementptr inbounds %class.LiteralBuffer.0, %class.LiteralBuffer.0* %0, i64 0, i32 3, i64 0
  %37 = icmp eq i16* %35, %36
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  %39 = bitcast i16* %35 to i8*
  tail call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %39) #11
  br label %40

40:                                               ; preds = %34, %38
  %41 = bitcast %class.LiteralBuffer.0* %0 to i8**
  store i8* %28, i8** %41, align 8
  %42 = getelementptr inbounds i16, i16* %29, i64 %10
  store i16* %42, i16** %3, align 8
  %43 = getelementptr inbounds i16, i16* %29, i64 %26
  store i16* %43, i16** %11, align 8
  ret i16* %42
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink15SegmentedString15LookAheadInlineERKN3WTF6StringENS1_19TextCaseSensitivityE(%"class.blink::SegmentedString"*, %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #4 comdat align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi i32 [ %10, %8 ], [ 0, %3 ]
  %13 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %0, i64 0, i32 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %20

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %0, i64 0, i32 0, i32 4
  %18 = load i8, i8* %17, align 1, !range !2
  %19 = xor i8 %18, 1
  br label %28

20:                                               ; preds = %11
  %21 = getelementptr inbounds i8, i8* %14, i64 1
  %22 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %0, i64 0, i32 0, i32 4
  %23 = load i8, i8* %22, align 1, !range !2
  %24 = xor i8 %23, 1
  %25 = zext i8 %24 to i64
  %26 = getelementptr inbounds i8, i8* %21, i64 %25
  %27 = ptrtoint i8* %26 to i64
  br label %28

28:                                               ; preds = %16, %20
  %29 = phi i8 [ %18, %16 ], [ %23, %20 ]
  %30 = phi i8 [ %19, %16 ], [ %24, %20 ]
  %31 = phi i64 [ 0, %16 ], [ %27, %20 ]
  %32 = bitcast %"class.blink::SegmentedString"* %0 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = trunc i64 %34 to i32
  %36 = zext i8 %30 to i32
  %37 = ashr i32 %35, %36
  %38 = icmp ugt i32 %12, %37
  br i1 %38, label %98, label %39

39:                                               ; preds = %28
  br i1 %7, label %43, label %40

40:                                               ; preds = %39
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  br label %43

43:                                               ; preds = %39, %40
  %44 = phi i32 [ %42, %40 ], [ 0, %39 ]
  %45 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %0, i64 0, i32 0, i32 5
  %46 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %0, i64 0, i32 0, i32 1
  %47 = bitcast i8** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %33, %48
  %50 = trunc i64 %49 to i32
  %51 = xor i8 %29, 1
  %52 = zext i8 %51 to i32
  %53 = ashr i32 %50, %52
  %54 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %45, i32 %53, i32 %44) #11
  %55 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #11
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %58, label %62

58:                                               ; preds = %43
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %59, align 8
  %60 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %61 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %60, i64* %61, align 8
  br label %69

62:                                               ; preds = %43
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %63, align 8
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 1
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %68 = bitcast i8** %67 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %66, %"class.WTF::StringImpl"** %68, align 8
  br label %69

69:                                               ; preds = %58, %62
  %70 = phi i32 [ %65, %62 ], [ 0, %58 ]
  %71 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %70, i32* %71, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %72, label %80, label %73

73:                                               ; preds = %69
  switch i32 %2, label %78 [
    i32 0, label %74
    i32 1, label %76
  ]

74:                                               ; preds = %73
  %75 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %54, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #11
  br label %83

76:                                               ; preds = %73
  %77 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %54, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #11
  br label %83

78:                                               ; preds = %73
  %79 = call zeroext i1 @_ZNK3WTF10StringImpl22StartsWithIgnoringCaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %54, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #11
  br label %83

80:                                               ; preds = %69
  %81 = icmp eq i32 %70, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #11
  %82 = zext i1 %81 to i32
  br label %100

83:                                               ; preds = %74, %76, %78
  %84 = phi i1 [ %79, %78 ], [ %77, %76 ], [ %75, %74 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #11
  %85 = zext i1 %84 to i32
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  br i1 %89, label %92, label %94

92:                                               ; preds = %83
  %93 = add i32 %91, -1
  store i32 %93, i32* %90, align 4
  br label %94

94:                                               ; preds = %92, %83
  %95 = phi i32 [ %93, %92 ], [ %91, %83 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %100

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #11
  br label %100

98:                                               ; preds = %28
  %99 = tail call i32 @_ZN5blink15SegmentedString17LookAheadSlowCaseERKN3WTF6StringENS1_19TextCaseSensitivityE(%"class.blink::SegmentedString"* %0, %"class.WTF::String"* dereferenceable(8) %1, i32 %2)
  br label %100

100:                                              ; preds = %97, %94, %80, %98
  %101 = phi i32 [ %99, %98 ], [ %82, %80 ], [ %85, %94 ], [ %85, %97 ]
  ret i32 %101
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink15SegmentedString17LookAheadSlowCaseERKN3WTF6StringENS1_19TextCaseSensitivityE(%"class.blink::SegmentedString"*, %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca i16*, align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.blink::SegmentedString", align 8
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %3
  %11 = tail call i32 @_ZNK5blink15SegmentedString6lengthEv(%"class.blink::SegmentedString"* %0) #11
  br label %17

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = tail call i32 @_ZNK5blink15SegmentedString6lengthEv(%"class.blink::SegmentedString"* %0) #11
  %16 = icmp ugt i32 %14, %15
  br i1 %16, label %172, label %17

17:                                               ; preds = %10, %12
  %18 = phi i32 [ 0, %10 ], [ %14, %12 ]
  %19 = bitcast i16** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %4, align 8
  %20 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %18, i16** nonnull dereferenceable(8) %4) #11
  %21 = load i16*, i16** %4, align 8
  call void @_ZN5blink15SegmentedString7AdvanceEjPDs(%"class.blink::SegmentedString"* %0, i32 %18, i16* %21) #11
  %22 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #11
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %25, label %29

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %26, align 8
  %27 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %28 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %27, i64* %28, align 8
  br label %36

29:                                               ; preds = %17
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 1
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %35 = bitcast i8** %34 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"** %35, align 8
  br label %36

36:                                               ; preds = %25, %29
  %37 = phi i32 [ %32, %29 ], [ 0, %25 ]
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %37, i32* %38, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %36
  switch i32 %2, label %45 [
    i32 0, label %41
    i32 1, label %43
  ]

41:                                               ; preds = %40
  %42 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %20, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #11
  br label %49

43:                                               ; preds = %40
  %44 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %20, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #11
  br label %49

45:                                               ; preds = %40
  %46 = call zeroext i1 @_ZNK3WTF10StringImpl22StartsWithIgnoringCaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %20, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #11
  br label %49

47:                                               ; preds = %36
  %48 = icmp eq i32 %37, 0
  br label %49

49:                                               ; preds = %41, %43, %45, %47
  %50 = phi i1 [ %48, %47 ], [ %42, %41 ], [ %44, %43 ], [ %46, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #11
  %51 = zext i1 %50 to i32
  %52 = bitcast %"class.blink::SegmentedString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %52) #11
  %53 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 0, i32 3
  store i8 1, i8* %53, align 8
  %54 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 0, i32 4
  store i8 1, i8* %54, align 1
  %55 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %55, align 8
  br i1 %39, label %106, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %73

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i33
  %65 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %64, i33 1) #11
  %66 = extractvalue { i33, i1 } %65, 1
  %67 = extractvalue { i33, i1 } %65, 0
  %68 = icmp slt i33 %67, 0
  %69 = or i1 %66, %68
  br i1 %69, label %70, label %71, !prof !4

70:                                               ; preds = %61
  call void @llvm.trap() #11
  unreachable

71:                                               ; preds = %61
  %72 = trunc i33 %67 to i32
  store i32 %72, i32* %62, align 4
  br label %73

73:                                               ; preds = %71, %56
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %106, label %77

77:                                               ; preds = %73
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %94, label %83

83:                                               ; preds = %77
  store i8 1, i8* %54, align 1
  %84 = icmp eq %"class.WTF::StringImpl"* %78, null
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 1
  %86 = bitcast %"class.WTF::StringImpl"* %85 to i8*
  %87 = select i1 %84, i8* null, i8* %86
  %88 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 0, i32 0, i32 0
  store i8* %87, i8** %88, align 8
  %89 = zext i32 %75 to i64
  %90 = getelementptr inbounds i8, i8* %87, i64 %89
  %91 = getelementptr inbounds i8, i8* %90, i64 -1
  %92 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 0, i32 2
  store i8* %91, i8** %92, align 8
  %93 = ptrtoint i8* %87 to i64
  br label %109

94:                                               ; preds = %77
  store i8 0, i8* %54, align 1
  %95 = icmp eq %"class.WTF::StringImpl"* %78, null
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 1
  %97 = bitcast %"class.WTF::StringImpl"* %96 to i16*
  %98 = select i1 %95, i16* null, i16* %97
  %99 = bitcast %"class.blink::SegmentedString"* %6 to i16**
  store i16* %98, i16** %99, align 8
  %100 = zext i32 %75 to i64
  %101 = getelementptr inbounds i16, i16* %98, i64 %100
  %102 = getelementptr inbounds i16, i16* %101, i64 -1
  %103 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 0, i32 2
  %104 = bitcast i8** %103 to i16**
  store i16* %102, i16** %104, align 8
  %105 = ptrtoint i16* %98 to i64
  br label %109

106:                                              ; preds = %49, %73
  store i8 1, i8* %54, align 1
  %107 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 0, i32 0, i32 0
  store i8* null, i8** %107, align 8
  %108 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 0, i32 2
  store i8* null, i8** %108, align 8
  br label %109

109:                                              ; preds = %106, %94, %83
  %110 = phi i64 [ %93, %83 ], [ %105, %94 ], [ 0, %106 ]
  %111 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 0, i32 1
  %112 = bitcast i8** %111 to i64*
  store i64 %110, i64* %112, align 8
  %113 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 1
  store i32 0, i32* %113, align 8
  %114 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 2
  store i32 0, i32* %114, align 4
  %115 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 3
  store i32 0, i32* %115, align 8
  %116 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 5
  %117 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 7
  %118 = bitcast %"class.WTF::Deque"* %116 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %118, i8 0, i64 25, i1 false) #11
  br i1 %39, label %124, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 1
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %121, 0
  %123 = zext i1 %122 to i8
  br label %124

124:                                              ; preds = %109, %119
  %125 = phi i8 [ %123, %119 ], [ 1, %109 ]
  store i8 %125, i8* %117, align 1
  call void @_ZN5blink15SegmentedString7PrependERKS0_NS0_11PrependTypeE(%"class.blink::SegmentedString"* %0, %"class.blink::SegmentedString"* nonnull dereferenceable(88) %6, i32 1) #11
  %126 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %116, i64 0, i32 0, i32 0, i32 0, i32 0
  %127 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %126, align 8
  %128 = icmp eq %"class.blink::SegmentedSubstring"* %127, null
  br i1 %128, label %141, label %129

129:                                              ; preds = %124
  %130 = bitcast %"class.blink::SegmentedSubstring"* %127 to i8*
  %131 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 5, i32 1
  %132 = load i32, i32* %131, align 8
  %133 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 5, i32 2
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %132, %134
  br i1 %135, label %139, label %136

136:                                              ; preds = %129
  call void @_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"* %116) #11
  %137 = bitcast %"class.WTF::Deque"* %116 to i8**
  %138 = load i8*, i8** %137, align 8
  br label %139

139:                                              ; preds = %136, %129
  %140 = phi i8* [ %138, %136 ], [ %130, %129 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %140) #11
  store %"class.blink::SegmentedSubstring"* null, %"class.blink::SegmentedSubstring"** %126, align 8
  br label %141

141:                                              ; preds = %139, %124
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %143, label %157, label %144

144:                                              ; preds = %141
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  br i1 %148, label %151, label %153

151:                                              ; preds = %144
  %152 = add i32 %150, -1
  store i32 %152, i32* %149, align 4
  br label %153

153:                                              ; preds = %151, %144
  %154 = phi i32 [ %152, %151 ], [ %150, %144 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %153
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %142) #11
  br label %157

157:                                              ; preds = %141, %153, %156
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %52) #11
  br i1 %39, label %171, label %158

158:                                              ; preds = %157
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %158
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %158
  %168 = phi i32 [ %166, %165 ], [ %164, %158 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #11
  br label %171

171:                                              ; preds = %157, %167, %170
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  br label %172

172:                                              ; preds = %12, %171
  %173 = phi i32 [ %51, %171 ], [ 2, %12 ]
  ret i32 %173
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #5

declare zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #5

declare zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #5

declare zeroext i1 @_ZNK3WTF10StringImpl22StartsWithIgnoringCaseERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #5

declare i32 @_ZNK5blink15SegmentedString6lengthEv(%"class.blink::SegmentedString"*) local_unnamed_addr #5

declare void @_ZN5blink15SegmentedString7AdvanceEjPDs(%"class.blink::SegmentedString"*, i32, i16*) local_unnamed_addr #5

declare void @_ZN5blink15SegmentedString7PrependERKS0_NS0_11PrependTypeE(%"class.blink::SegmentedString"*, %"class.blink::SegmentedString"* dereferenceable(88), i32) local_unnamed_addr #5

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"*) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp ugt i32 %3, %5
  %7 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %7, align 8
  %9 = zext i32 %5 to i64
  %10 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %8, i64 %9
  br i1 %6, label %37, label %11

11:                                               ; preds = %1
  %12 = icmp eq i32 %3, %5
  br i1 %12, label %95, label %13

13:                                               ; preds = %11
  %14 = zext i32 %3 to i64
  %15 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %8, i64 %14
  br label %16

16:                                               ; preds = %13, %34
  %17 = phi %"class.blink::SegmentedSubstring"* [ %35, %34 ], [ %15, %13 ]
  %18 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %17, i64 0, i32 5, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #11
  br label %34

34:                                               ; preds = %33, %30, %16
  %35 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %17, i64 1
  %36 = icmp eq %"class.blink::SegmentedSubstring"* %35, %10
  br i1 %36, label %95, label %16

37:                                               ; preds = %1
  %38 = icmp eq i32 %5, 0
  br i1 %38, label %63, label %39

39:                                               ; preds = %37, %57
  %40 = phi %"class.blink::SegmentedSubstring"* [ %58, %57 ], [ %8, %37 ]
  %41 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %40, i64 0, i32 5, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #11
  br label %57

57:                                               ; preds = %56, %53, %39
  %58 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %40, i64 1
  %59 = icmp eq %"class.blink::SegmentedSubstring"* %58, %10
  br i1 %59, label %60, label %39

60:                                               ; preds = %57
  %61 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %7, align 8
  %62 = load i32, i32* %2, align 8
  br label %63

63:                                               ; preds = %60, %37
  %64 = phi i32 [ %62, %60 ], [ %3, %37 ]
  %65 = phi %"class.blink::SegmentedSubstring"* [ %61, %60 ], [ %8, %37 ]
  %66 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %65, i64 %68
  %70 = icmp eq i32 %64, %67
  br i1 %70, label %95, label %71

71:                                               ; preds = %63
  %72 = zext i32 %64 to i64
  %73 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %65, i64 %72
  br label %74

74:                                               ; preds = %71, %92
  %75 = phi %"class.blink::SegmentedSubstring"* [ %93, %92 ], [ %73, %71 ]
  %76 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %75, i64 0, i32 5, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #11
  br label %92

92:                                               ; preds = %91, %88, %74
  %93 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %75, i64 1
  %94 = icmp eq %"class.blink::SegmentedSubstring"* %93, %69
  br i1 %94, label %95, label %74

95:                                               ; preds = %34, %92, %63, %11
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1"*, i16* dereferenceable(2)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq i16* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %26) #11
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #11
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 1
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i16*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 1
  %37 = ptrtoint i8* %28 to i64
  %38 = load i16*, i16** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i16* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i16* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %28, i8* nonnull align 2 %42, i64 %46, i1 false) #11
  %47 = bitcast %"class.WTF::Vector.1"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #11
  %51 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i16*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i16* %1 to i64
  %56 = ptrtoint i16* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 1
  %59 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq i16* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %71) #11
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #11
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i16*, i16** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i16* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i16* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %73, i8* nonnull align 2 %82, i64 %86, i1 false) #11
  %87 = bitcast %"class.WTF::Vector.1"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #11
  %91 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 1
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i16*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i16* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i16, i16* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i16* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i16* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i16, i16* %100, i64 %103
  %105 = load i16, i16* %101, align 2
  store i16 %105, i16* %104, align 2
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #11
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !4

22:                                               ; preds = %15
  %23 = bitcast %union.anon.14* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon.14* %16 to %"class.WTF::Vector.20"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.20"* %30, i16* nonnull dereferenceable(2) %3) #11
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #11
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !4

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.15", %"class.WTF::Vector.15"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.15"* %41, i8* nonnull dereferenceable(1) %4) #11
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #5

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.20"*, i16* dereferenceable(2)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.20"* %0, i32 %5) #11
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.20"* %0, i32 %5) #11
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.20"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i64 0, i64 0), i8* %15, i8* %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #11
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #11
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #11
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.20"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.20"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.20"* %0, i32 %27) #11
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.20"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.20"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.20"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !4

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #11
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.21"* %19, i16* nonnull %6) #11
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #11
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #11
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !3

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #11
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.21"* %53, i16* %48) #11
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.20"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.21"*, i16*) local_unnamed_addr #6 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #11
  ret void
}

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #5

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.15"*, i8* dereferenceable(1)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.15", %"class.WTF::Vector.15"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.15", %"class.WTF::Vector.15"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.15"* %0, i32 %5) #11
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.15"* %0, i32 %5) #11
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.15"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.15", %"class.WTF::Vector.15"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i64 0, i64 0), i8* %15, i8* %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #11
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.15", %"class.WTF::Vector.15"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #11
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #11
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.15"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.15", %"class.WTF::Vector.15"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.15"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.15"* %0, i32 %27) #11
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.15"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.15", %"class.WTF::Vector.15"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.15", %"class.WTF::Vector.15"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.15"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.15", %"class.WTF::Vector.15"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.15", %"class.WTF::Vector.15"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.15", %"class.WTF::Vector.15"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.15"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.15", %"class.WTF::Vector.15"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !4

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #11
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.16"* %18, i8* nonnull %6) #11
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #11
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #11
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.15", %"class.WTF::Vector.15"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !3

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.15", %"class.WTF::Vector.15"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #11
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.15", %"class.WTF::Vector.15"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !3

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.15", %"class.WTF::Vector.15"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.16"* %46, i8* %42) #11
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.15"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.15", %"class.WTF::Vector.15"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #11
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.16"*, i8*) local_unnamed_addr #6 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #11
  ret void
}

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #5

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplEPKhj(%"class.WTF::StringImpl"*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink23InputStreamPreprocessorINS_13HTMLTokenizerEE32ProcessNextInputSpecialCharacterERNS_15SegmentedStringERDs(%"class.blink::InputStreamPreprocessor"*, %"class.blink::SegmentedString"* dereferenceable(88), i16* dereferenceable(2)) local_unnamed_addr #3 comdat align 2 {
  %4 = load i16, i16* %2, align 2
  %5 = getelementptr inbounds %"class.blink::InputStreamPreprocessor", %"class.blink::InputStreamPreprocessor"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 3
  %7 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 1
  %9 = bitcast %"class.blink::SegmentedString"* %1 to i64*
  %10 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 1
  %11 = bitcast i8** %10 to i64*
  %12 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 4
  %13 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 2
  %14 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 0, i32 2
  %16 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 7
  %17 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %1, i64 0, i32 6
  %18 = getelementptr inbounds %"class.blink::InputStreamPreprocessor", %"class.blink::InputStreamPreprocessor"* %0, i64 0, i32 0
  br label %19

19:                                               ; preds = %104, %3
  %20 = phi i16 [ %105, %104 ], [ %4, %3 ]
  %21 = icmp eq i16 %20, 10
  br i1 %21, label %22, label %66

22:                                               ; preds = %19
  %23 = load i8, i8* %5, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %70, label %25

25:                                               ; preds = %22
  store i8 0, i8* %5, align 8
  %26 = load i8, i8* %6, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %30, !prof !4

28:                                               ; preds = %25
  %29 = load i8*, i8** %14, align 8
  br label %45

30:                                               ; preds = %25
  %31 = load i32, i32* %7, align 8
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %7, align 8
  %33 = load i32, i32* %8, align 8
  %34 = load i64, i64* %9, align 8
  %35 = load i64, i64* %11, align 8
  %36 = sub i64 %34, %35
  %37 = trunc i64 %36 to i32
  %38 = load i8, i8* %12, align 1, !range !2
  %39 = xor i8 %38, 1
  %40 = zext i8 %39 to i32
  %41 = ashr i32 %37, %40
  %42 = add i32 %33, 1
  %43 = add i32 %42, %41
  store i32 %43, i32* %13, align 4
  %44 = inttoptr i64 %34 to i8*
  br label %45

45:                                               ; preds = %30, %28
  %46 = phi i8* [ %29, %28 ], [ %44, %30 ]
  %47 = load i8*, i8** %15, align 8
  %48 = icmp ult i8* %46, %47
  br i1 %48, label %49, label %60, !prof !3

49:                                               ; preds = %45
  %50 = load i8, i8* %12, align 1, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds i8, i8* %46, i64 1
  store i8* %53, i8** %14, align 8
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i16
  br label %62

56:                                               ; preds = %49
  %57 = getelementptr inbounds i8, i8* %46, i64 2
  %58 = bitcast i8* %57 to i16*
  store i8* %57, i8** %14, align 8
  %59 = load i16, i16* %58, align 2
  br label %62

60:                                               ; preds = %45
  %61 = tail call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %62

62:                                               ; preds = %52, %56, %60
  %63 = phi i16 [ %61, %60 ], [ %55, %52 ], [ %59, %56 ]
  store i16 %63, i16* %2, align 2
  %64 = load i8, i8* %16, align 1, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %109

66:                                               ; preds = %19, %62
  %67 = phi i16 [ %63, %62 ], [ %20, %19 ]
  %68 = icmp eq i16 %67, 13
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  store i16 10, i16* %2, align 2
  store i8 1, i8* %5, align 8
  br label %109

70:                                               ; preds = %22, %66
  store i8 0, i8* %5, align 8
  %71 = load i16, i16* %2, align 2
  %72 = icmp eq i16 %71, 0
  br i1 %72, label %73, label %109

73:                                               ; preds = %70
  %74 = load i8, i8* %17, align 8, !range !2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %73
  %77 = tail call i32 @_ZNK5blink15SegmentedString6lengthEv(%"class.blink::SegmentedString"* %1) #11
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %109, label %79

79:                                               ; preds = %73, %76
  %80 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %18, align 8
  %81 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %80, i64 0, i32 1
  %82 = load i8, i8* %81, align 4, !range !2
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %84, label %108

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %80, i64 0, i32 0
  %86 = load i32, i32* %85, align 8
  switch i32 %86, label %108 [
    i32 0, label %87
    i32 2, label %87
    i32 4, label %87
  ]

87:                                               ; preds = %84, %84, %84
  %88 = load i8*, i8** %14, align 8
  %89 = load i8*, i8** %15, align 8
  %90 = icmp ult i8* %88, %89
  br i1 %90, label %91, label %102, !prof !3

91:                                               ; preds = %87
  %92 = load i8, i8* %12, align 1, !range !2
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %98, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds i8, i8* %88, i64 1
  store i8* %95, i8** %14, align 8
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i16
  br label %104

98:                                               ; preds = %91
  %99 = getelementptr inbounds i8, i8* %88, i64 2
  %100 = bitcast i8* %99 to i16*
  store i8* %99, i8** %14, align 8
  %101 = load i16, i16* %100, align 2
  br label %104

102:                                              ; preds = %87
  %103 = tail call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %1) #11
  br label %104

104:                                              ; preds = %94, %98, %102
  %105 = phi i16 [ %103, %102 ], [ %97, %94 ], [ %101, %98 ]
  store i16 %105, i16* %2, align 2
  %106 = load i8, i8* %16, align 1, !range !2
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %19, label %109

108:                                              ; preds = %84, %79
  store i16 -3, i16* %2, align 2
  br label %109

109:                                              ; preds = %62, %104, %76, %70, %69, %108
  %110 = phi i1 [ true, %108 ], [ true, %69 ], [ true, %76 ], [ true, %70 ], [ false, %104 ], [ false, %62 ]
  ret i1 %110
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN13LiteralBufferIhLj32EE4GrowEv(%class.LiteralBuffer.7*) local_unnamed_addr #6 comdat align 2 {
  %2 = tail call i8* @_ZN13LiteralBufferIhLj32EE4GrowEm(%class.LiteralBuffer.7* %0, i64 0)
  ret i8* %2
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN13LiteralBufferIhLj32EE4GrowEm(%class.LiteralBuffer.7*, i64) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %class.LiteralBuffer.7, %class.LiteralBuffer.7* %0, i64 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %class.LiteralBuffer.7, %class.LiteralBuffer.7* %0, i64 0, i32 0
  %7 = bitcast %class.LiteralBuffer.7* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = getelementptr inbounds %class.LiteralBuffer.7, %class.LiteralBuffer.7* %0, i64 0, i32 2
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %8
  %14 = shl i64 %13, 1
  %15 = icmp ugt i64 %14, %1
  %16 = select i1 %15, i64 %14, i64 %1
  %17 = icmp eq i64 %16, 0
  %18 = add i64 %16, -1
  %19 = icmp eq i64 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %24, label %21, !prof !4

21:                                               ; preds = %2
  %22 = tail call i64 @llvm.ctlz.i64(i64 %18, i1 true) #11, !range !41
  %23 = sub nuw nsw i64 64, %22
  br label %24

24:                                               ; preds = %2, %21
  %25 = phi i64 [ %23, %21 ], [ 0, %2 ]
  %26 = shl i64 1, %25
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %26) #11
  %28 = tail call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %27, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)) #11
  %29 = icmp eq i64 %9, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %24
  %31 = load i8*, i8** %6, align 8
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 %31, i64 %9, i1 false) #11
  br label %32

32:                                               ; preds = %24, %30
  %33 = load i8*, i8** %6, align 8
  %34 = getelementptr inbounds %class.LiteralBuffer.7, %class.LiteralBuffer.7* %0, i64 0, i32 3, i64 0
  %35 = icmp eq i8* %33, %34
  br i1 %35, label %37, label %36

36:                                               ; preds = %32
  tail call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %33) #11
  br label %37

37:                                               ; preds = %36, %32
  store i8* %28, i8** %6, align 8
  %38 = getelementptr inbounds i8, i8* %28, i64 %9
  store i8* %38, i8** %3, align 8
  %39 = getelementptr inbounds i8, i8* %28, i64 %26
  store i8* %39, i8** %10, align 8
  ret i8* %38
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!6}
!6 = distinct !{!6, !7}
!7 = distinct !{!7, !"LVerDomain"}
!8 = !{!9}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !11}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !11}
!19 = distinct !{!19, !11}
!20 = !{!21}
!21 = distinct !{!21, !22}
!22 = distinct !{!22, !"LVerDomain"}
!23 = !{!24}
!24 = distinct !{!24, !22}
!25 = distinct !{!25, !11}
!26 = distinct !{!26, !11}
!27 = !{!28}
!28 = distinct !{!28, !29}
!29 = distinct !{!29, !"LVerDomain"}
!30 = !{!31}
!31 = distinct !{!31, !29}
!32 = distinct !{!32, !11}
!33 = distinct !{!33, !11}
!34 = !{!35}
!35 = distinct !{!35, !36}
!36 = distinct !{!36, !"LVerDomain"}
!37 = !{!38}
!38 = distinct !{!38, !36}
!39 = distinct !{!39, !11}
!40 = distinct !{!40, !11}
!41 = !{i64 0, i64 65}
