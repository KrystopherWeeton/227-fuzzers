; ModuleID = '../../third_party/pdfium/core/fpdfapi/page/cpdf_color.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/page/cpdf_color.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_Color = type { %"class.std::__1::vector", %"class.std::__1::unique_ptr", %"class.fxcrt::RetainPtr.22" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float*, float*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { float* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.PatternValue* }
%class.PatternValue = type { %"class.fxcrt::RetainPtr", %"struct.std::__1::array" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.3" }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %class.CPDF_Pattern* }
%class.CPDF_Pattern = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr", %"class.fxcrt::RetainPtr.14", %class.CFX_Matrix, %class.CFX_Matrix }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_Document* }
%class.CPDF_Document = type opaque
%"class.fxcrt::RetainPtr.14" = type { %"class.std::__1::unique_ptr.15" }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %class.CPDF_Object* }
%class.CPDF_Object = type opaque
%class.CFX_Matrix = type { float, float, float, float, float, float }
%"struct.std::__1::array" = type { [16 x float] }
%"class.fxcrt::RetainPtr.22" = type { %"class.std::__1::unique_ptr.23" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %class.CPDF_ColorSpace* }
%class.CPDF_ColorSpace = type <{ %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr.26", %"class.fxcrt::RetainPtr.27", i32, i32, i32, [4 x i8] }>
%"class.fxcrt::UnownedPtr.26" = type { %class.CPDF_Document* }
%"class.fxcrt::RetainPtr.27" = type { %"class.std::__1::unique_ptr.28" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %class.CPDF_Array* }
%class.CPDF_Array = type opaque
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.35", i64 }
%"class.fxcrt::UnownedPtr.35" = type { float* }
%class.CPDF_PatternCS = type { %class.CPDF_ColorSpace.base, %"class.fxcrt::RetainPtr.22" }
%class.CPDF_ColorSpace.base = type <{ %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr.26", %"class.fxcrt::RetainPtr.27", i32, i32, i32 }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

@_ZN10CPDF_ColorC1Ev = hidden unnamed_addr alias void (%class.CPDF_Color*), void (%class.CPDF_Color*)* @_ZN10CPDF_ColorC2Ev
@_ZN10CPDF_ColorC1ERKS_ = hidden unnamed_addr alias void (%class.CPDF_Color*, %class.CPDF_Color*), void (%class.CPDF_Color*, %class.CPDF_Color*)* @_ZN10CPDF_ColorC2ERKS_
@_ZN10CPDF_ColorD1Ev = hidden unnamed_addr alias void (%class.CPDF_Color*), void (%class.CPDF_Color*)* @_ZN10CPDF_ColorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CPDF_ColorC2Ev(%class.CPDF_Color* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CPDF_Color* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 40, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CPDF_ColorC2ERKS_(%class.CPDF_Color*, %class.CPDF_Color* readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = bitcast %class.CPDF_Color* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 40, i1 false)
  %4 = tail call dereferenceable(40) %class.CPDF_Color* @_ZN10CPDF_ColoraSERKS_(%class.CPDF_Color* %0, %class.CPDF_Color* dereferenceable(40) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %class.CPDF_Color* @_ZN10CPDF_ColoraSERKS_(%class.CPDF_Color* returned, %class.CPDF_Color* readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %class.CPDF_Color* %0, %1
  br i1 %3, label %53, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.CPDF_Color, %class.CPDF_Color* %0, i64 0, i32 0
  %6 = getelementptr inbounds %class.CPDF_Color, %class.CPDF_Color* %1, i64 0, i32 0, i32 0, i32 0
  %7 = load float*, float** %6, align 8
  %8 = getelementptr inbounds %class.CPDF_Color, %class.CPDF_Color* %1, i64 0, i32 0, i32 0, i32 1
  %9 = load float*, float** %8, align 8
  tail call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %5, float* %7, float* %9) #8
  %10 = getelementptr inbounds %class.CPDF_Color, %class.CPDF_Color* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %class.PatternValue*, %class.PatternValue** %10, align 8
  %12 = icmp eq %class.PatternValue* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %4
  %14 = tail call i8* @_Znwm(i64 72) #9
  %15 = bitcast i8* %14 to %class.PatternValue*
  tail call void @_ZN12PatternValueC1ERKS_(%class.PatternValue* nonnull %15, %class.PatternValue* nonnull dereferenceable(72) %11) #8
  %16 = ptrtoint i8* %14 to i64
  br label %17

17:                                               ; preds = %4, %13
  %18 = phi i64 [ %16, %13 ], [ 0, %4 ]
  %19 = getelementptr inbounds %class.CPDF_Color, %class.CPDF_Color* %0, i64 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %class.PatternValue*, %class.PatternValue** %20, align 8
  %22 = bitcast %"class.std::__1::unique_ptr"* %19 to i64*
  store i64 %18, i64* %22, align 8
  %23 = icmp eq %class.PatternValue* %21, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %17
  tail call void @_ZN12PatternValueD1Ev(%class.PatternValue* nonnull %21) #8
  %25 = bitcast %class.PatternValue* %21 to i8*
  tail call void @_ZdlPv(i8* %25) #9
  br label %26

26:                                               ; preds = %24, %17
  %27 = getelementptr inbounds %class.CPDF_Color, %class.CPDF_Color* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %28 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %27, align 8
  %29 = getelementptr inbounds %class.CPDF_Color, %class.CPDF_Color* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %30 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %29, align 8
  %31 = icmp eq %class.CPDF_ColorSpace* %28, %30
  br i1 %31, label %53, label %32

32:                                               ; preds = %26
  %33 = icmp eq %class.CPDF_ColorSpace* %30, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %30, i64 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = add nsw i64 %36, 1
  store i64 %37, i64* %35, align 8
  %38 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %27, align 8
  br label %39

39:                                               ; preds = %34, %32
  %40 = phi %class.CPDF_ColorSpace* [ %38, %34 ], [ %28, %32 ]
  store %class.CPDF_ColorSpace* %30, %class.CPDF_ColorSpace** %27, align 8
  %41 = icmp eq %class.CPDF_ColorSpace* %40, null
  br i1 %41, label %53, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %40, i64 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = add nsw i64 %44, -1
  store i64 %45, i64* %43, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %53

47:                                               ; preds = %42
  %48 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %40, i64 0, i32 0
  %49 = bitcast %class.CPDF_ColorSpace* %40 to void (%"class.fxcrt::Retainable"*)***
  %50 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %50, i64 1
  %52 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %51, align 8
  tail call void %52(%"class.fxcrt::Retainable"* nonnull %48) #8
  br label %53

53:                                               ; preds = %47, %42, %39, %26, %2
  ret %class.CPDF_Color* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CPDF_ColorD2Ev(%class.CPDF_Color* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Color, %class.CPDF_Color* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %2, align 8
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %2, align 8
  %4 = icmp eq %class.CPDF_ColorSpace* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %3, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add nsw i64 %7, -1
  store i64 %8, i64* %6, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %3, i64 0, i32 0
  %12 = bitcast %class.CPDF_ColorSpace* %3 to void (%"class.fxcrt::Retainable"*)***
  %13 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %13, i64 1
  %15 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, align 8
  tail call void %15(%"class.fxcrt::Retainable"* nonnull %11) #8
  br label %16

16:                                               ; preds = %1, %5, %10
  %17 = getelementptr inbounds %class.CPDF_Color, %class.CPDF_Color* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %class.PatternValue*, %class.PatternValue** %17, align 8
  store %class.PatternValue* null, %class.PatternValue** %17, align 8
  %19 = icmp eq %class.PatternValue* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  tail call void @_ZN12PatternValueD1Ev(%class.PatternValue* nonnull %18) #8
  %21 = bitcast %class.PatternValue* %18 to i8*
  tail call void @_ZdlPv(i8* %21) #9
  br label %22

22:                                               ; preds = %16, %20
  %23 = getelementptr inbounds %class.CPDF_Color, %class.CPDF_Color* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load float*, float** %23, align 8
  %25 = icmp eq float* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = ptrtoint float* %24 to i64
  %28 = getelementptr inbounds %class.CPDF_Color, %class.CPDF_Color* %0, i64 0, i32 0, i32 0, i32 1
  %29 = bitcast float** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast float* %24 to i8*
  tail call void @_ZdlPv(i8* %30) #9
  br label %31

31:                                               ; preds = %22, %26
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10CPDF_Color9IsPatternEv(%class.CPDF_Color* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Color, %class.CPDF_Color* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %2, align 8
  %4 = icmp eq %class.CPDF_ColorSpace* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %3, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 11
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10CPDF_Color17IsPatternInternalEv(%class.CPDF_Color* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Color, %class.CPDF_Color* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %2, align 8
  %4 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %3, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 11
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CPDF_Color13SetColorSpaceERKN5fxcrt9RetainPtrI15CPDF_ColorSpaceEE(%class.CPDF_Color* nocapture, %"class.fxcrt::RetainPtr.22"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector", align 16
  %4 = getelementptr inbounds %class.CPDF_Color, %class.CPDF_Color* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %4, align 8
  %6 = getelementptr inbounds %"class.fxcrt::RetainPtr.22", %"class.fxcrt::RetainPtr.22"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %6, align 8
  %8 = icmp eq %class.CPDF_ColorSpace* %5, %7
  br i1 %8, label %30, label %9

9:                                                ; preds = %2
  %10 = icmp eq %class.CPDF_ColorSpace* %7, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %7, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = add nsw i64 %13, 1
  store i64 %14, i64* %12, align 8
  %15 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %4, align 8
  br label %16

16:                                               ; preds = %11, %9
  %17 = phi %class.CPDF_ColorSpace* [ %15, %11 ], [ %5, %9 ]
  store %class.CPDF_ColorSpace* %7, %class.CPDF_ColorSpace** %4, align 8
  %18 = icmp eq %class.CPDF_ColorSpace* %17, null
  br i1 %18, label %30, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %17, i64 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = add nsw i64 %21, -1
  store i64 %22, i64* %20, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %19
  %25 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %17, i64 0, i32 0
  %26 = bitcast %class.CPDF_ColorSpace* %17 to void (%"class.fxcrt::Retainable"*)***
  %27 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %27, i64 1
  %29 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %28, align 8
  tail call void %29(%"class.fxcrt::Retainable"* nonnull %25) #8
  br label %30

30:                                               ; preds = %2, %16, %19, %24
  %31 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %4, align 8
  %32 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %31, i64 0, i32 4
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 11
  br i1 %34, label %35, label %50

35:                                               ; preds = %30
  %36 = bitcast %class.CPDF_Color* %0 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %class.CPDF_Color, %class.CPDF_Color* %0, i64 0, i32 0, i32 0, i32 1
  %39 = bitcast float** %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = tail call i8* @_Znwm(i64 72) #9
  %41 = bitcast i8* %40 to %class.PatternValue*
  tail call void @_ZN12PatternValueC1Ev(%class.PatternValue* nonnull %41) #8
  %42 = ptrtoint i8* %40 to i64
  %43 = getelementptr inbounds %class.CPDF_Color, %class.CPDF_Color* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %class.PatternValue*, %class.PatternValue** %44, align 8
  %46 = bitcast %"class.std::__1::unique_ptr"* %43 to i64*
  store i64 %42, i64* %46, align 8
  %47 = icmp eq %class.PatternValue* %45, null
  br i1 %47, label %77, label %48

48:                                               ; preds = %35
  tail call void @_ZN12PatternValueD1Ev(%class.PatternValue* nonnull %45) #8
  %49 = bitcast %class.PatternValue* %45 to i8*
  tail call void @_ZdlPv(i8* %49) #9
  br label %77

50:                                               ; preds = %30
  %51 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #8
  %52 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %6, align 8
  call void @_ZNK15CPDF_ColorSpace27CreateBufAndSetDefaultColorEv(%"class.std::__1::vector"* nonnull sret %3, %class.CPDF_ColorSpace* %52) #8
  %53 = getelementptr inbounds %class.CPDF_Color, %class.CPDF_Color* %0, i64 0, i32 0, i32 0, i32 0
  %54 = load float*, float** %53, align 8
  %55 = icmp eq float* %54, null
  br i1 %55, label %62, label %56

56:                                               ; preds = %50
  %57 = ptrtoint float* %54 to i64
  %58 = getelementptr inbounds %class.CPDF_Color, %class.CPDF_Color* %0, i64 0, i32 0, i32 0, i32 1
  %59 = bitcast float** %58 to i64*
  store i64 %57, i64* %59, align 8
  %60 = bitcast float* %54 to i8*
  call void @_ZdlPv(i8* %60) #9
  %61 = bitcast %class.CPDF_Color* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 24, i1 false) #8
  br label %62

62:                                               ; preds = %50, %56
  %63 = bitcast %"class.std::__1::vector"* %3 to <2 x i64>*
  %64 = load <2 x i64>, <2 x i64>* %63, align 16
  %65 = bitcast %class.CPDF_Color* %0 to <2 x i64>*
  store <2 x i64> %64, <2 x i64>* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %67 = bitcast float** %66 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = getelementptr inbounds %class.CPDF_Color, %class.CPDF_Color* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %70 = bitcast float** %69 to i64*
  store i64 %68, i64* %70, align 8
  %71 = getelementptr inbounds %class.CPDF_Color, %class.CPDF_Color* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %72 = load %class.PatternValue*, %class.PatternValue** %71, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #8
  %73 = getelementptr inbounds %class.CPDF_Color, %class.CPDF_Color* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %class.PatternValue* null, %class.PatternValue** %73, align 8
  %74 = icmp eq %class.PatternValue* %72, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %62
  %76 = bitcast %class.PatternValue* %72 to i8*
  call void @_ZN12PatternValueD1Ev(%class.PatternValue* nonnull %72) #8
  call void @_ZdlPv(i8* %76) #9
  br label %77

77:                                               ; preds = %75, %62, %35, %48
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZNK15CPDF_ColorSpace27CreateBufAndSetDefaultColorEv(%"class.std::__1::vector"* sret, %class.CPDF_ColorSpace*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CPDF_Color21SetValueForNonPatternERKNSt3__16vectorIfNS0_9allocatorIfEEEE(%class.CPDF_Color*, %"class.std::__1::vector"* readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_Color, %class.CPDF_Color* %0, i64 0, i32 0
  %4 = icmp eq %"class.std::__1::vector"* %3, %1
  br i1 %4, label %10, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %7 = load float*, float** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %9 = load float*, float** %8, align 8
  tail call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %3, float* %7, float* %9) #8
  br label %10

10:                                               ; preds = %2, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CPDF_Color18SetValueForPatternERKN5fxcrt9RetainPtrI12CPDF_PatternEERKNSt3__16vectorIfNS6_9allocatorIfEEEE(%class.CPDF_Color* nocapture, %"class.fxcrt::RetainPtr"* nocapture readonly dereferenceable(8), %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::RetainPtr.22", align 8
  %5 = alloca %"class.pdfium::span", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %7 = bitcast float** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 2
  %13 = icmp ugt i64 %12, 16
  br i1 %13, label %76, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %class.CPDF_Color, %class.CPDF_Color* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %16 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %15, align 8
  %17 = icmp eq %class.CPDF_ColorSpace* %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %16, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 11
  br i1 %21, label %39, label %22

22:                                               ; preds = %14, %18
  %23 = bitcast %"class.fxcrt::RetainPtr.22"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #8
  call void @_ZN15CPDF_ColorSpace10GetStockCSENS_6FamilyE(%"class.fxcrt::RetainPtr.22"* nonnull sret %4, i32 11) #8
  call void @_ZN10CPDF_Color13SetColorSpaceERKN5fxcrt9RetainPtrI15CPDF_ColorSpaceEE(%class.CPDF_Color* %0, %"class.fxcrt::RetainPtr.22"* nonnull dereferenceable(8) %4)
  %24 = getelementptr inbounds %"class.fxcrt::RetainPtr.22", %"class.fxcrt::RetainPtr.22"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %24, align 8
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %24, align 8
  %26 = icmp eq %class.CPDF_ColorSpace* %25, null
  br i1 %26, label %38, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %25, i64 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = add nsw i64 %29, -1
  store i64 %30, i64* %28, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %38

32:                                               ; preds = %27
  %33 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %25, i64 0, i32 0
  %34 = bitcast %class.CPDF_ColorSpace* %25 to void (%"class.fxcrt::Retainable"*)***
  %35 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %35, i64 1
  %37 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %36, align 8
  call void %37(%"class.fxcrt::Retainable"* nonnull %33) #8
  br label %38

38:                                               ; preds = %22, %27, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #8
  br label %39

39:                                               ; preds = %38, %18
  %40 = getelementptr inbounds %class.CPDF_Color, %class.CPDF_Color* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %41 = load %class.PatternValue*, %class.PatternValue** %40, align 8
  %42 = getelementptr inbounds %class.PatternValue, %class.PatternValue* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load %class.CPDF_Pattern*, %class.CPDF_Pattern** %42, align 8
  %44 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %class.CPDF_Pattern*, %class.CPDF_Pattern** %44, align 8
  %46 = icmp eq %class.CPDF_Pattern* %43, %45
  br i1 %46, label %68, label %47

47:                                               ; preds = %39
  %48 = icmp eq %class.CPDF_Pattern* %45, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %47
  %50 = getelementptr inbounds %class.CPDF_Pattern, %class.CPDF_Pattern* %45, i64 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = add nsw i64 %51, 1
  store i64 %52, i64* %50, align 8
  %53 = load %class.CPDF_Pattern*, %class.CPDF_Pattern** %42, align 8
  br label %54

54:                                               ; preds = %49, %47
  %55 = phi %class.CPDF_Pattern* [ %53, %49 ], [ %43, %47 ]
  store %class.CPDF_Pattern* %45, %class.CPDF_Pattern** %42, align 8
  %56 = icmp eq %class.CPDF_Pattern* %55, null
  br i1 %56, label %68, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %class.CPDF_Pattern, %class.CPDF_Pattern* %55, i64 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = add nsw i64 %59, -1
  store i64 %60, i64* %58, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %68

62:                                               ; preds = %57
  %63 = getelementptr inbounds %class.CPDF_Pattern, %class.CPDF_Pattern* %55, i64 0, i32 0
  %64 = bitcast %class.CPDF_Pattern* %55 to void (%"class.fxcrt::Retainable"*)***
  %65 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %65, i64 1
  %67 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %66, align 8
  call void %67(%"class.fxcrt::Retainable"* nonnull %63) #8
  br label %68

68:                                               ; preds = %39, %54, %57, %62
  %69 = load %class.PatternValue*, %class.PatternValue** %40, align 8
  %70 = load i64, i64* %9, align 8
  %71 = load i64, i64* %7, align 8
  %72 = sub i64 %71, %70
  %73 = ashr exact i64 %72, 2
  %74 = bitcast %"class.pdfium::span"* %5 to i64*
  store i64 %70, i64* %74, align 8
  %75 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %5, i64 0, i32 1
  store i64 %73, i64* %75, align 8
  call void @_ZN12PatternValue8SetCompsEN6pdfium4spanIKfEE(%class.PatternValue* %69, %"class.pdfium::span"* nonnull %5) #8
  br label %76

76:                                               ; preds = %3, %68
  ret void
}

declare void @_ZN15CPDF_ColorSpace10GetStockCSENS_6FamilyE(%"class.fxcrt::RetainPtr.22"* sret, i32) local_unnamed_addr #3

declare void @_ZN12PatternValue8SetCompsEN6pdfium4spanIKfEE(%class.PatternValue*, %"class.pdfium::span"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK10CPDF_Color15CountComponentsEv(%class.CPDF_Color* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Color, %class.CPDF_Color* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %2, align 8
  %4 = tail call i32 @_ZNK15CPDF_ColorSpace15CountComponentsEv(%class.CPDF_ColorSpace* %3) #8
  ret i32 %4
}

declare i32 @_ZNK15CPDF_ColorSpace15CountComponentsEv(%class.CPDF_ColorSpace*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10CPDF_Color15IsColorSpaceRGBEv(%class.CPDF_Color* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::RetainPtr.22", align 8
  %3 = bitcast %"class.fxcrt::RetainPtr.22"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8
  call void @_ZN15CPDF_ColorSpace10GetStockCSENS_6FamilyE(%"class.fxcrt::RetainPtr.22"* nonnull sret %2, i32 2) #8
  %4 = getelementptr inbounds %class.CPDF_Color, %class.CPDF_Color* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %4, align 8
  %6 = getelementptr inbounds %"class.fxcrt::RetainPtr.22", %"class.fxcrt::RetainPtr.22"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %6, align 8
  %8 = icmp eq %class.CPDF_ColorSpace* %5, %7
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %6, align 8
  %9 = icmp eq %class.CPDF_ColorSpace* %7, null
  br i1 %9, label %21, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %7, i64 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add nsw i64 %12, -1
  store i64 %13, i64* %11, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %10
  %16 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %7, i64 0, i32 0
  %17 = bitcast %class.CPDF_ColorSpace* %7 to void (%"class.fxcrt::Retainable"*)***
  %18 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %18, i64 1
  %20 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %19, align 8
  call void %20(%"class.fxcrt::Retainable"* nonnull %16) #8
  br label %21

21:                                               ; preds = %1, %10, %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10CPDF_Color6GetRGBEPiS0_S0_(%class.CPDF_Color* nocapture readonly, i32* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  %7 = alloca float, align 4
  %8 = alloca %"class.pdfium::span", align 8
  %9 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #8
  store float 0.000000e+00, float* %5, align 4
  %10 = bitcast float* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #8
  store float 0.000000e+00, float* %6, align 4
  %11 = bitcast float* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #8
  store float 0.000000e+00, float* %7, align 4
  %12 = getelementptr inbounds %class.CPDF_Color, %class.CPDF_Color* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %13 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %12, align 8
  %14 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %13, i64 0, i32 4
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 11
  br i1 %16, label %17, label %29

17:                                               ; preds = %4
  %18 = getelementptr inbounds %class.CPDF_Color, %class.CPDF_Color* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %class.PatternValue*, %class.PatternValue** %18, align 8
  %20 = icmp eq %class.PatternValue* %19, null
  br i1 %20, label %60, label %21

21:                                               ; preds = %17
  %22 = bitcast %class.CPDF_ColorSpace* %13 to %class.CPDF_PatternCS* (%class.CPDF_ColorSpace*)***
  %23 = load %class.CPDF_PatternCS* (%class.CPDF_ColorSpace*)**, %class.CPDF_PatternCS* (%class.CPDF_ColorSpace*)*** %22, align 8
  %24 = getelementptr inbounds %class.CPDF_PatternCS* (%class.CPDF_ColorSpace*)*, %class.CPDF_PatternCS* (%class.CPDF_ColorSpace*)** %23, i64 7
  %25 = load %class.CPDF_PatternCS* (%class.CPDF_ColorSpace*)*, %class.CPDF_PatternCS* (%class.CPDF_ColorSpace*)** %24, align 8
  %26 = tail call %class.CPDF_PatternCS* %25(%class.CPDF_ColorSpace* %13) #8
  %27 = load %class.PatternValue*, %class.PatternValue** %18, align 8
  %28 = call zeroext i1 @_ZNK14CPDF_PatternCS13GetPatternRGBERK12PatternValuePfS3_S3_(%class.CPDF_PatternCS* %26, %class.PatternValue* dereferenceable(72) %27, float* nonnull %5, float* nonnull %6, float* nonnull %7) #8
  br i1 %28, label %47, label %60

29:                                               ; preds = %4
  %30 = getelementptr inbounds %class.CPDF_Color, %class.CPDF_Color* %0, i64 0, i32 0, i32 0, i32 0
  %31 = load float*, float** %30, align 8
  %32 = getelementptr inbounds %class.CPDF_Color, %class.CPDF_Color* %0, i64 0, i32 0, i32 0, i32 1
  %33 = load float*, float** %32, align 8
  %34 = icmp eq float* %31, %33
  %35 = ptrtoint float* %31 to i64
  br i1 %34, label %60, label %36

36:                                               ; preds = %29
  %37 = ptrtoint float* %33 to i64
  %38 = sub i64 %37, %35
  %39 = ashr exact i64 %38, 2
  %40 = bitcast %"class.pdfium::span"* %8 to i64*
  store i64 %35, i64* %40, align 8
  %41 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %8, i64 0, i32 1
  store i64 %39, i64* %41, align 8
  %42 = bitcast %class.CPDF_ColorSpace* %13 to i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)***
  %43 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)**, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)*** %42, align 8
  %44 = getelementptr inbounds i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)** %43, i64 2
  %45 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)** %44, align 8
  %46 = call zeroext i1 %45(%class.CPDF_ColorSpace* %13, %"class.pdfium::span"* nonnull %8, float* nonnull %5, float* nonnull %6, float* nonnull %7) #8
  br i1 %46, label %47, label %60

47:                                               ; preds = %21, %36
  %48 = load float, float* %5, align 4
  %49 = fmul float %48, 2.550000e+02
  %50 = fadd float %49, 5.000000e-01
  %51 = fptosi float %50 to i32
  store i32 %51, i32* %1, align 4
  %52 = load float, float* %6, align 4
  %53 = fmul float %52, 2.550000e+02
  %54 = fadd float %53, 5.000000e-01
  %55 = fptosi float %54 to i32
  store i32 %55, i32* %2, align 4
  %56 = load float, float* %7, align 4
  %57 = fmul float %56, 2.550000e+02
  %58 = fadd float %57, 5.000000e-01
  %59 = fptosi float %58 to i32
  store i32 %59, i32* %3, align 4
  br label %60

60:                                               ; preds = %17, %21, %29, %36, %47
  %61 = phi i1 [ true, %47 ], [ false, %36 ], [ false, %17 ], [ false, %29 ], [ false, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #8
  ret i1 %61
}

declare zeroext i1 @_ZNK14CPDF_PatternCS13GetPatternRGBERK12PatternValuePfS3_S3_(%class.CPDF_PatternCS*, %class.PatternValue* dereferenceable(72), float*, float*, float*) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.CPDF_Pattern* @_ZNK10CPDF_Color10GetPatternEv(%class.CPDF_Color* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Color, %class.CPDF_Color* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %class.PatternValue*, %class.PatternValue** %2, align 8
  %4 = icmp eq %class.PatternValue* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.PatternValue, %class.PatternValue* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %class.CPDF_Pattern*, %class.CPDF_Pattern** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %class.CPDF_Pattern* [ %7, %5 ], [ null, %1 ]
  ret %class.CPDF_Pattern* %9
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN12PatternValueC1Ev(%class.PatternValue*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN12PatternValueD1Ev(%class.PatternValue*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"*, float*, float*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint float* %2 to i64
  %5 = ptrtoint float* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast float** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to float*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast float** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds float, float* %1, i64 %22
  %25 = select i1 %23, float* %24, float* %2
  %26 = ptrtoint float* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast float* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #8
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast float* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #8
  %42 = inttoptr i64 %35 to float*
  %43 = getelementptr inbounds float, float* %42, i64 %39
  %44 = ptrtoint float* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds float, float* %16, i64 %28
  store float* %48, float** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %53 = bitcast float** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #9
  %55 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #8
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #10
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #10
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #9
  %75 = bitcast i8* %74 to float*
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %77 = bitcast float** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds float, float* %75, i64 %72
  store float* %79, float** %8, align 8
  %80 = bitcast float** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast float* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #8
  %86 = getelementptr inbounds float, float* %75, i64 %84
  %87 = ptrtoint float* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

declare void @_ZN12PatternValueC1ERKS_(%class.PatternValue*, %class.PatternValue* dereferenceable(72)) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
