; ModuleID = '../../third_party/boringssl/src/crypto/x509/x509_set.c'
source_filename = "../../third_party/boringssl/src/crypto/x509/x509_set.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type { %struct.asn1_string_st*, %struct.asn1_string_st* }
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.X509_pubkey_st = type { %struct.X509_algor_st*, %struct.asn1_string_st*, %struct.evp_pkey_st* }
%struct.evp_pkey_st = type { i32, i32, %union.anon.0, %struct.evp_pkey_asn1_method_st* }
%union.anon.0 = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon }
%union.anon = type { i8* }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.AUTHORITY_KEYID_st = type opaque
%struct.X509_POLICY_CACHE_st = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type opaque
%struct.x509_cert_aux_st = type { %struct.stack_st_ASN1_OBJECT*, %struct.stack_st_ASN1_OBJECT*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_ALGOR* }
%struct.stack_st_ASN1_OBJECT = type opaque
%struct.stack_st_X509_ALGOR = type opaque
%struct.crypto_buffer_st = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }

; Function Attrs: nounwind ssp uwtable
define hidden i64 @X509_get_version(%struct.x509_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %3 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %2, align 8
  %4 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %3, i64 0, i32 0
  %5 = load %struct.asn1_string_st*, %struct.asn1_string_st** %4, align 8
  %6 = icmp eq %struct.asn1_string_st* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = tail call i64 @ASN1_INTEGER_get(%struct.asn1_string_st* nonnull %5) #4
  br label %9

9:                                                ; preds = %1, %7
  %10 = phi i64 [ %8, %7 ], [ 0, %1 ]
  ret i64 %10
}

declare i64 @ASN1_INTEGER_get(%struct.asn1_string_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_set_version(%struct.x509_st* readonly, i64) local_unnamed_addr #0 {
  %3 = icmp eq %struct.x509_st* %0, null
  br i1 %3, label %27, label %4

4:                                                ; preds = %2
  %5 = icmp eq i64 %1, 0
  %6 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %7 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %6, align 8
  %8 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %7, i64 0, i32 0
  %9 = load %struct.asn1_string_st*, %struct.asn1_string_st** %8, align 8
  br i1 %5, label %10, label %13

10:                                               ; preds = %4
  tail call void @ASN1_INTEGER_free(%struct.asn1_string_st* %9) #4
  %11 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %6, align 8
  %12 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %11, i64 0, i32 0
  store %struct.asn1_string_st* null, %struct.asn1_string_st** %12, align 8
  br label %27

13:                                               ; preds = %4
  %14 = icmp eq %struct.asn1_string_st* %9, null
  br i1 %14, label %15, label %24

15:                                               ; preds = %13
  %16 = tail call %struct.asn1_string_st* @ASN1_INTEGER_new() #4
  %17 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %6, align 8
  %18 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %17, i64 0, i32 0
  store %struct.asn1_string_st* %16, %struct.asn1_string_st** %18, align 8
  %19 = icmp eq %struct.asn1_string_st* %16, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %15
  %21 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %6, align 8
  %22 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %21, i64 0, i32 0
  %23 = load %struct.asn1_string_st*, %struct.asn1_string_st** %22, align 8
  br label %24

24:                                               ; preds = %20, %13
  %25 = phi %struct.asn1_string_st* [ %23, %20 ], [ %9, %13 ]
  %26 = tail call i32 @ASN1_INTEGER_set(%struct.asn1_string_st* %25, i64 %1) #4
  br label %27

27:                                               ; preds = %15, %2, %24, %10
  %28 = phi i32 [ 1, %10 ], [ %26, %24 ], [ 0, %2 ], [ 0, %15 ]
  ret i32 %28
}

declare void @ASN1_INTEGER_free(%struct.asn1_string_st*) local_unnamed_addr #1

declare %struct.asn1_string_st* @ASN1_INTEGER_new() local_unnamed_addr #1

declare i32 @ASN1_INTEGER_set(%struct.asn1_string_st*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_set_serialNumber(%struct.x509_st* readonly, %struct.asn1_string_st*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.x509_st* %0, null
  br i1 %3, label %23, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %6 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %5, align 8
  %7 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %6, i64 0, i32 1
  %8 = load %struct.asn1_string_st*, %struct.asn1_string_st** %7, align 8
  %9 = icmp eq %struct.asn1_string_st* %8, %1
  br i1 %9, label %19, label %10

10:                                               ; preds = %4
  %11 = tail call %struct.asn1_string_st* @ASN1_INTEGER_dup(%struct.asn1_string_st* %1) #4
  %12 = icmp eq %struct.asn1_string_st* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %10
  %14 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %5, align 8
  %15 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %14, i64 0, i32 1
  %16 = load %struct.asn1_string_st*, %struct.asn1_string_st** %15, align 8
  tail call void @ASN1_INTEGER_free(%struct.asn1_string_st* %16) #4
  %17 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %5, align 8
  %18 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %17, i64 0, i32 1
  store %struct.asn1_string_st* %11, %struct.asn1_string_st** %18, align 8
  br label %19

19:                                               ; preds = %10, %4, %13
  %20 = phi %struct.asn1_string_st* [ %11, %13 ], [ null, %10 ], [ %1, %4 ]
  %21 = icmp ne %struct.asn1_string_st* %20, null
  %22 = zext i1 %21 to i32
  br label %23

23:                                               ; preds = %2, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %2 ]
  ret i32 %24
}

declare %struct.asn1_string_st* @ASN1_INTEGER_dup(%struct.asn1_string_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_set_issuer_name(%struct.x509_st* readonly, %struct.X509_name_st*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.x509_st* %0, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %6 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %5, align 8
  %7 = icmp eq %struct.x509_cinf_st* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %6, i64 0, i32 3
  %10 = tail call i32 @X509_NAME_set(%struct.X509_name_st** %9, %struct.X509_name_st* %1) #4
  br label %11

11:                                               ; preds = %2, %4, %8
  %12 = phi i32 [ %10, %8 ], [ 0, %4 ], [ 0, %2 ]
  ret i32 %12
}

declare i32 @X509_NAME_set(%struct.X509_name_st**, %struct.X509_name_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_set_subject_name(%struct.x509_st* readonly, %struct.X509_name_st*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.x509_st* %0, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %6 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %5, align 8
  %7 = icmp eq %struct.x509_cinf_st* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %6, i64 0, i32 5
  %10 = tail call i32 @X509_NAME_set(%struct.X509_name_st** %9, %struct.X509_name_st* %1) #4
  br label %11

11:                                               ; preds = %2, %4, %8
  %12 = phi i32 [ %10, %8 ], [ 0, %4 ], [ 0, %2 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_set1_notBefore(%struct.x509_st* readonly, %struct.asn1_string_st*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.x509_st* %0, null
  br i1 %3, label %31, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %6 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %5, align 8
  %7 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %6, i64 0, i32 4
  %8 = load %struct.X509_val_st*, %struct.X509_val_st** %7, align 8
  %9 = icmp eq %struct.X509_val_st* %8, null
  br i1 %9, label %31, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.X509_val_st, %struct.X509_val_st* %8, i64 0, i32 0
  %12 = load %struct.asn1_string_st*, %struct.asn1_string_st** %11, align 8
  %13 = icmp eq %struct.asn1_string_st* %12, %1
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = tail call %struct.asn1_string_st* @ASN1_STRING_dup(%struct.asn1_string_st* %1) #4
  %16 = icmp eq %struct.asn1_string_st* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %14
  %18 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %5, align 8
  %19 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %18, i64 0, i32 4
  %20 = load %struct.X509_val_st*, %struct.X509_val_st** %19, align 8
  %21 = getelementptr inbounds %struct.X509_val_st, %struct.X509_val_st* %20, i64 0, i32 0
  %22 = load %struct.asn1_string_st*, %struct.asn1_string_st** %21, align 8
  tail call void @ASN1_TIME_free(%struct.asn1_string_st* %22) #4
  %23 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %5, align 8
  %24 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %23, i64 0, i32 4
  %25 = load %struct.X509_val_st*, %struct.X509_val_st** %24, align 8
  %26 = getelementptr inbounds %struct.X509_val_st, %struct.X509_val_st* %25, i64 0, i32 0
  store %struct.asn1_string_st* %15, %struct.asn1_string_st** %26, align 8
  br label %27

27:                                               ; preds = %14, %10, %17
  %28 = phi %struct.asn1_string_st* [ %15, %17 ], [ null, %14 ], [ %1, %10 ]
  %29 = icmp ne %struct.asn1_string_st* %28, null
  %30 = zext i1 %29 to i32
  br label %31

31:                                               ; preds = %2, %4, %27
  %32 = phi i32 [ %30, %27 ], [ 0, %4 ], [ 0, %2 ]
  ret i32 %32
}

declare %struct.asn1_string_st* @ASN1_STRING_dup(%struct.asn1_string_st*) local_unnamed_addr #1

declare void @ASN1_TIME_free(%struct.asn1_string_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_set_notBefore(%struct.x509_st* readonly, %struct.asn1_string_st*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.x509_st* %0, null
  br i1 %3, label %31, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %6 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %5, align 8
  %7 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %6, i64 0, i32 4
  %8 = load %struct.X509_val_st*, %struct.X509_val_st** %7, align 8
  %9 = icmp eq %struct.X509_val_st* %8, null
  br i1 %9, label %31, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.X509_val_st, %struct.X509_val_st* %8, i64 0, i32 0
  %12 = load %struct.asn1_string_st*, %struct.asn1_string_st** %11, align 8
  %13 = icmp eq %struct.asn1_string_st* %12, %1
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = tail call %struct.asn1_string_st* @ASN1_STRING_dup(%struct.asn1_string_st* %1) #4
  %16 = icmp eq %struct.asn1_string_st* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %14
  %18 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %5, align 8
  %19 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %18, i64 0, i32 4
  %20 = load %struct.X509_val_st*, %struct.X509_val_st** %19, align 8
  %21 = getelementptr inbounds %struct.X509_val_st, %struct.X509_val_st* %20, i64 0, i32 0
  %22 = load %struct.asn1_string_st*, %struct.asn1_string_st** %21, align 8
  tail call void @ASN1_TIME_free(%struct.asn1_string_st* %22) #4
  %23 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %5, align 8
  %24 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %23, i64 0, i32 4
  %25 = load %struct.X509_val_st*, %struct.X509_val_st** %24, align 8
  %26 = getelementptr inbounds %struct.X509_val_st, %struct.X509_val_st* %25, i64 0, i32 0
  store %struct.asn1_string_st* %15, %struct.asn1_string_st** %26, align 8
  br label %27

27:                                               ; preds = %17, %14, %10
  %28 = phi %struct.asn1_string_st* [ %15, %17 ], [ null, %14 ], [ %1, %10 ]
  %29 = icmp ne %struct.asn1_string_st* %28, null
  %30 = zext i1 %29 to i32
  br label %31

31:                                               ; preds = %2, %4, %27
  %32 = phi i32 [ %30, %27 ], [ 0, %4 ], [ 0, %2 ]
  ret i32 %32
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.asn1_string_st* @X509_get0_notBefore(%struct.x509_st* nocapture readonly) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %3 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %2, align 8
  %4 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %3, i64 0, i32 4
  %5 = load %struct.X509_val_st*, %struct.X509_val_st** %4, align 8
  %6 = getelementptr inbounds %struct.X509_val_st, %struct.X509_val_st* %5, i64 0, i32 0
  %7 = load %struct.asn1_string_st*, %struct.asn1_string_st** %6, align 8
  ret %struct.asn1_string_st* %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.asn1_string_st* @X509_getm_notBefore(%struct.x509_st* nocapture readonly) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %3 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %2, align 8
  %4 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %3, i64 0, i32 4
  %5 = load %struct.X509_val_st*, %struct.X509_val_st** %4, align 8
  %6 = getelementptr inbounds %struct.X509_val_st, %struct.X509_val_st* %5, i64 0, i32 0
  %7 = load %struct.asn1_string_st*, %struct.asn1_string_st** %6, align 8
  ret %struct.asn1_string_st* %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.asn1_string_st* @X509_get_notBefore(%struct.x509_st* nocapture readonly) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %3 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %2, align 8
  %4 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %3, i64 0, i32 4
  %5 = load %struct.X509_val_st*, %struct.X509_val_st** %4, align 8
  %6 = getelementptr inbounds %struct.X509_val_st, %struct.X509_val_st* %5, i64 0, i32 0
  %7 = load %struct.asn1_string_st*, %struct.asn1_string_st** %6, align 8
  ret %struct.asn1_string_st* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_set1_notAfter(%struct.x509_st* readonly, %struct.asn1_string_st*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.x509_st* %0, null
  br i1 %3, label %31, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %6 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %5, align 8
  %7 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %6, i64 0, i32 4
  %8 = load %struct.X509_val_st*, %struct.X509_val_st** %7, align 8
  %9 = icmp eq %struct.X509_val_st* %8, null
  br i1 %9, label %31, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.X509_val_st, %struct.X509_val_st* %8, i64 0, i32 1
  %12 = load %struct.asn1_string_st*, %struct.asn1_string_st** %11, align 8
  %13 = icmp eq %struct.asn1_string_st* %12, %1
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = tail call %struct.asn1_string_st* @ASN1_STRING_dup(%struct.asn1_string_st* %1) #4
  %16 = icmp eq %struct.asn1_string_st* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %14
  %18 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %5, align 8
  %19 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %18, i64 0, i32 4
  %20 = load %struct.X509_val_st*, %struct.X509_val_st** %19, align 8
  %21 = getelementptr inbounds %struct.X509_val_st, %struct.X509_val_st* %20, i64 0, i32 1
  %22 = load %struct.asn1_string_st*, %struct.asn1_string_st** %21, align 8
  tail call void @ASN1_TIME_free(%struct.asn1_string_st* %22) #4
  %23 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %5, align 8
  %24 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %23, i64 0, i32 4
  %25 = load %struct.X509_val_st*, %struct.X509_val_st** %24, align 8
  %26 = getelementptr inbounds %struct.X509_val_st, %struct.X509_val_st* %25, i64 0, i32 1
  store %struct.asn1_string_st* %15, %struct.asn1_string_st** %26, align 8
  br label %27

27:                                               ; preds = %14, %10, %17
  %28 = phi %struct.asn1_string_st* [ %15, %17 ], [ null, %14 ], [ %1, %10 ]
  %29 = icmp ne %struct.asn1_string_st* %28, null
  %30 = zext i1 %29 to i32
  br label %31

31:                                               ; preds = %2, %4, %27
  %32 = phi i32 [ %30, %27 ], [ 0, %4 ], [ 0, %2 ]
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_set_notAfter(%struct.x509_st* readonly, %struct.asn1_string_st*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.x509_st* %0, null
  br i1 %3, label %31, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %6 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %5, align 8
  %7 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %6, i64 0, i32 4
  %8 = load %struct.X509_val_st*, %struct.X509_val_st** %7, align 8
  %9 = icmp eq %struct.X509_val_st* %8, null
  br i1 %9, label %31, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.X509_val_st, %struct.X509_val_st* %8, i64 0, i32 1
  %12 = load %struct.asn1_string_st*, %struct.asn1_string_st** %11, align 8
  %13 = icmp eq %struct.asn1_string_st* %12, %1
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = tail call %struct.asn1_string_st* @ASN1_STRING_dup(%struct.asn1_string_st* %1) #4
  %16 = icmp eq %struct.asn1_string_st* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %14
  %18 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %5, align 8
  %19 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %18, i64 0, i32 4
  %20 = load %struct.X509_val_st*, %struct.X509_val_st** %19, align 8
  %21 = getelementptr inbounds %struct.X509_val_st, %struct.X509_val_st* %20, i64 0, i32 1
  %22 = load %struct.asn1_string_st*, %struct.asn1_string_st** %21, align 8
  tail call void @ASN1_TIME_free(%struct.asn1_string_st* %22) #4
  %23 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %5, align 8
  %24 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %23, i64 0, i32 4
  %25 = load %struct.X509_val_st*, %struct.X509_val_st** %24, align 8
  %26 = getelementptr inbounds %struct.X509_val_st, %struct.X509_val_st* %25, i64 0, i32 1
  store %struct.asn1_string_st* %15, %struct.asn1_string_st** %26, align 8
  br label %27

27:                                               ; preds = %17, %14, %10
  %28 = phi %struct.asn1_string_st* [ %15, %17 ], [ null, %14 ], [ %1, %10 ]
  %29 = icmp ne %struct.asn1_string_st* %28, null
  %30 = zext i1 %29 to i32
  br label %31

31:                                               ; preds = %2, %4, %27
  %32 = phi i32 [ %30, %27 ], [ 0, %4 ], [ 0, %2 ]
  ret i32 %32
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.asn1_string_st* @X509_get0_notAfter(%struct.x509_st* nocapture readonly) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %3 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %2, align 8
  %4 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %3, i64 0, i32 4
  %5 = load %struct.X509_val_st*, %struct.X509_val_st** %4, align 8
  %6 = getelementptr inbounds %struct.X509_val_st, %struct.X509_val_st* %5, i64 0, i32 1
  %7 = load %struct.asn1_string_st*, %struct.asn1_string_st** %6, align 8
  ret %struct.asn1_string_st* %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.asn1_string_st* @X509_getm_notAfter(%struct.x509_st* nocapture readonly) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %3 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %2, align 8
  %4 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %3, i64 0, i32 4
  %5 = load %struct.X509_val_st*, %struct.X509_val_st** %4, align 8
  %6 = getelementptr inbounds %struct.X509_val_st, %struct.X509_val_st* %5, i64 0, i32 1
  %7 = load %struct.asn1_string_st*, %struct.asn1_string_st** %6, align 8
  ret %struct.asn1_string_st* %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.asn1_string_st* @X509_get_notAfter(%struct.x509_st* nocapture readonly) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %3 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %2, align 8
  %4 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %3, i64 0, i32 4
  %5 = load %struct.X509_val_st*, %struct.X509_val_st** %4, align 8
  %6 = getelementptr inbounds %struct.X509_val_st, %struct.X509_val_st* %5, i64 0, i32 1
  %7 = load %struct.asn1_string_st*, %struct.asn1_string_st** %6, align 8
  ret %struct.asn1_string_st* %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @X509_get0_uids(%struct.x509_st* nocapture readonly, %struct.asn1_string_st**, %struct.asn1_string_st**) local_unnamed_addr #3 {
  %4 = icmp eq %struct.asn1_string_st** %1, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %7 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %6, align 8
  %8 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %7, i64 0, i32 7
  %9 = bitcast %struct.asn1_string_st** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %struct.asn1_string_st** %1 to i64*
  store i64 %10, i64* %11, align 8
  br label %12

12:                                               ; preds = %3, %5
  %13 = icmp eq %struct.asn1_string_st** %2, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %16 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %15, align 8
  %17 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %16, i64 0, i32 8
  %18 = bitcast %struct.asn1_string_st** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %struct.asn1_string_st** %2 to i64*
  store i64 %19, i64* %20, align 8
  br label %21

21:                                               ; preds = %12, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_set_pubkey(%struct.x509_st* readonly, %struct.evp_pkey_st*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.x509_st* %0, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %6 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %5, align 8
  %7 = icmp eq %struct.x509_cinf_st* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %6, i64 0, i32 6
  %10 = tail call i32 @X509_PUBKEY_set(%struct.X509_pubkey_st** %9, %struct.evp_pkey_st* %1) #4
  br label %11

11:                                               ; preds = %2, %4, %8
  %12 = phi i32 [ %10, %8 ], [ 0, %4 ], [ 0, %2 ]
  ret i32 %12
}

declare i32 @X509_PUBKEY_set(%struct.X509_pubkey_st**, %struct.evp_pkey_st*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.stack_st_X509_EXTENSION* @X509_get0_extensions(%struct.x509_st* nocapture readonly) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %3 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %2, align 8
  %4 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %3, i64 0, i32 9
  %5 = load %struct.stack_st_X509_EXTENSION*, %struct.stack_st_X509_EXTENSION** %4, align 8
  ret %struct.stack_st_X509_EXTENSION* %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.X509_algor_st* @X509_get0_tbs_sigalg(%struct.x509_st* nocapture readonly) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %3 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %2, align 8
  %4 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %3, i64 0, i32 2
  %5 = load %struct.X509_algor_st*, %struct.X509_algor_st** %4, align 8
  ret %struct.X509_algor_st* %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.X509_pubkey_st* @X509_get_X509_PUBKEY(%struct.x509_st* nocapture readonly) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %3 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %2, align 8
  %4 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %3, i64 0, i32 6
  %5 = load %struct.X509_pubkey_st*, %struct.X509_pubkey_st** %4, align 8
  ret %struct.X509_pubkey_st* %5
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
