; ModuleID = '../../extensions/common/manifest_handler_helpers.cc'
source_filename = "../../extensions/common/manifest_handler_helpers.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::BasicStringPiece"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::allocator.4" = type { i8 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.6" }
%"union.absl::variant_internal::DestructibleUnionImpl.6" = type { %"union.absl::variant_internal::DestructibleUnionImpl.7" }
%"union.absl::variant_internal::DestructibleUnionImpl.7" = type { %"union.absl::variant_internal::DestructibleUnionImpl.8" }
%"union.absl::variant_internal::DestructibleUnionImpl.8" = type { %"union.absl::variant_internal::DestructibleUnionImpl.9" }
%"union.absl::variant_internal::DestructibleUnionImpl.9" = type { %"class.std::__1::basic_string" }
%class.ExtensionIconSet = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.35", %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { i64 }
%"class.std::__1::basic_string.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.46 }
%union.anon.46 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.base::detail::const_dict_iterator_proxy" = type { %"class.base::flat_map"* }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.19" }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.21" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.std::__1::pair"* }
%"class.base::detail::const_dict_iterator" = type { %"class.std::__1::__wrap_iter" }
%"class.std::__1::__wrap_iter" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.47 }
%struct.anon.47 = type { %"struct.std::__1::__padding.48", i8 }
%"struct.std::__1::__padding.48" = type { [1 x i8] }

@.str = private unnamed_addr constant [2 x i8] c".\00", align 1
@_ZN10extensions15manifest_errors15kInvalidIconKeyE = external constant [0 x i8], align 1
@_ZN10extensions15manifest_errors16kInvalidIconPathE = external constant [0 x i8], align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions24manifest_handler_helpers22TokenizeDictionaryPathEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::vector"* noalias sret, i8*, i64) local_unnamed_addr #0 {
  tail call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* sret %0, i8* %1, i64 %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1, i32 1, i32 0) #6
  ret void
}

declare void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions24manifest_handler_helpers24NormalizeAndValidatePathEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %12 = zext i8 %5 to i64
  %13 = select i1 %6, i8* %8, i8* %11
  %14 = select i1 %6, i64 %10, i64 %12
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %30, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds i8, i8* %13, i64 %14
  br label %18

18:                                               ; preds = %22, %16
  %19 = phi i8* [ %23, %22 ], [ %13, %16 ]
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 47
  br i1 %21, label %22, label %25

22:                                               ; preds = %18
  %23 = getelementptr inbounds i8, i8* %19, i64 1
  %24 = icmp eq i8* %23, %17
  br i1 %24, label %30, label %18

25:                                               ; preds = %18
  %26 = ptrtoint i8* %19 to i64
  %27 = ptrtoint i8* %13 to i64
  %28 = sub i64 %26, %27
  %29 = icmp eq i64 %28, -1
  br i1 %29, label %30, label %35

30:                                               ; preds = %22, %25, %1
  br i1 %6, label %31, label %32

31:                                               ; preds = %30
  store i64 0, i64* %9, align 8
  br label %33

32:                                               ; preds = %30
  store i8 0, i8* %4, align 1
  br label %33

33:                                               ; preds = %32, %31
  %34 = phi i8* [ %8, %31 ], [ %11, %32 ]
  store i8 0, i8* %34, align 1
  br label %43

35:                                               ; preds = %25
  %36 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #6
  %37 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::allocator.4"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %2, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 %28, i64 -1, %"class.std::__1::allocator.4"* dereferenceable(1) %37) #6
  %38 = load i8, i8* %4, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  %41 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %41) #7
  br label %42

42:                                               ; preds = %40, %35
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* nonnull align 8 %36, i64 24, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #6
  br label %43

43:                                               ; preds = %33, %42
  %44 = phi i1 [ true, %42 ], [ false, %33 ]
  ret i1 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions24manifest_handler_helpers24NormalizeAndValidatePathERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPS7_(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds i8, i8* %14, i64 %15
  br label %19

19:                                               ; preds = %23, %17
  %20 = phi i8* [ %24, %23 ], [ %14, %17 ]
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 47
  br i1 %22, label %23, label %26

23:                                               ; preds = %19
  %24 = getelementptr inbounds i8, i8* %20, i64 1
  %25 = icmp eq i8* %24, %18
  br i1 %25, label %31, label %19

26:                                               ; preds = %19
  %27 = ptrtoint i8* %20 to i64
  %28 = ptrtoint i8* %14 to i64
  %29 = sub i64 %27, %28
  %30 = icmp eq i64 %29, -1
  br i1 %30, label %31, label %44

31:                                               ; preds = %23, %26, %2
  %32 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %40

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  br label %42

40:                                               ; preds = %31
  store i8 0, i8* %33, align 1
  %41 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  br label %42

42:                                               ; preds = %36, %40
  %43 = phi i8* [ %39, %36 ], [ %41, %40 ]
  store i8 0, i8* %43, align 1
  br label %56

44:                                               ; preds = %26
  %45 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #6
  %46 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::allocator.4"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %3, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 %29, i64 -1, %"class.std::__1::allocator.4"* dereferenceable(1) %46) #6
  %47 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %53) #7
  br label %54

54:                                               ; preds = %51, %44
  %55 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* nonnull align 8 %45, i64 24, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #6
  br label %56

56:                                               ; preds = %42, %54
  %57 = phi i1 [ true, %54 ], [ false, %42 ]
  ret i1 %57
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions24manifest_handler_helpers23LoadIconsFromDictionaryEPKN4base5ValueEP16ExtensionIconSetPNSt3__112basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEE(%"class.base::Value"*, %class.ExtensionIconSet*, %"class.std::__1::basic_string.43"* nocapture) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::detail::const_dict_iterator_proxy", align 8
  %6 = alloca %"class.base::detail::const_dict_iterator", align 8
  %7 = alloca %"class.base::detail::const_dict_iterator", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.std::__1::basic_string.43", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string.43", align 8
  %12 = bitcast %"class.base::detail::const_dict_iterator_proxy"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #6
  %13 = tail call %"class.base::flat_map"* @_ZNK4base5Value9DictItemsEv(%"class.base::Value"* %0) #6
  %14 = getelementptr inbounds %"class.base::detail::const_dict_iterator_proxy", %"class.base::detail::const_dict_iterator_proxy"* %5, i64 0, i32 0
  store %"class.base::flat_map"* %13, %"class.base::flat_map"** %14, align 8
  %15 = bitcast %"class.base::detail::const_dict_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #6
  %16 = getelementptr inbounds %"class.base::detail::const_dict_iterator", %"class.base::detail::const_dict_iterator"* %6, i64 0, i32 0, i32 0
  store %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), %"struct.std::__1::pair"** %16, align 8
  call void @_ZNK4base6detail25const_dict_iterator_proxy5beginEv(%"class.base::detail::const_dict_iterator"* nonnull sret %6, %"class.base::detail::const_dict_iterator_proxy"* nonnull %5) #6
  %17 = bitcast %"class.base::detail::const_dict_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  %18 = getelementptr inbounds %"class.base::detail::const_dict_iterator", %"class.base::detail::const_dict_iterator"* %7, i64 0, i32 0, i32 0
  store %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), %"struct.std::__1::pair"** %18, align 8
  call void @_ZNK4base6detail25const_dict_iterator_proxy3endEv(%"class.base::detail::const_dict_iterator"* nonnull sret %7, %"class.base::detail::const_dict_iterator_proxy"* nonnull %5) #6
  %19 = call zeroext i1 @_ZN4base6detailneERKNS0_19const_dict_iteratorES3_(%"class.base::detail::const_dict_iterator"* nonnull dereferenceable(8) %6, %"class.base::detail::const_dict_iterator"* nonnull dereferenceable(8) %7) #6
  br i1 %19, label %20, label %146

20:                                               ; preds = %3
  %21 = bitcast i32* %8 to i8*
  %22 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %26 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = bitcast %"class.std::__1::basic_string.43"* %11 to i8*
  %29 = bitcast %"class.std::__1::basic_string.43"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = bitcast %"class.std::__1::basic_string.43"* %2 to i8**
  %32 = bitcast %"class.std::__1::basic_string.43"* %2 to i8*
  br label %33

33:                                               ; preds = %20, %143
  %34 = call { %"class.std::__1::basic_string"*, %"class.base::Value"* } @_ZNK4base6detail19const_dict_iteratordeEv(%"class.base::detail::const_dict_iterator"* nonnull %6) #6
  %35 = extractvalue { %"class.std::__1::basic_string"*, %"class.base::Value"* } %34, 0
  %36 = extractvalue { %"class.std::__1::basic_string"*, %"class.base::Value"* } %34, 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #6
  store i32 0, i32* %8, align 4
  %37 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %44 = select i1 %40, i8* %42, i8* %43
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = zext i8 %39 to i64
  %48 = select i1 %40, i64 %46, i64 %47
  %49 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8* %44, i64 %48, i32* nonnull %8) #6
  %50 = xor i1 %49, true
  %51 = load i32, i32* %8, align 4
  %52 = add i32 %51, -1
  %53 = icmp ugt i32 %52, 2047
  %54 = or i1 %53, %50
  br i1 %54, label %55, label %71

55:                                               ; preds = %33
  %56 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %57 = bitcast %"class.std::__1::basic_string.43"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #6
  %58 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors15kInvalidIconKeyE, i64 0, i64 0)) #6
  %59 = load i8, i8* %38, align 1
  %60 = icmp slt i8 %59, 0
  %61 = load i8*, i8** %41, align 8
  %62 = select i1 %60, i8* %61, i8* %56
  %63 = load i64, i64* %45, align 8
  %64 = zext i8 %59 to i64
  %65 = select i1 %60, i64 %63, i64 %64
  call void @_ZN10extensions10ErrorUtils23FormatErrorMessageUTF16EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_(%"class.std::__1::basic_string.43"* nonnull sret %9, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors15kInvalidIconKeyE, i64 0, i64 0), i64 %58, i8* %62, i64 %65) #6
  %66 = load i8, i8* %30, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %55
  %69 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %69) #7
  br label %70

70:                                               ; preds = %55, %68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* nonnull align 8 %57, i64 24, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #6
  br label %146

71:                                               ; preds = %33
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #6
  %72 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = trunc i64 %73 to i8
  %75 = icmp eq i8 %74, 4
  br i1 %75, label %76, label %119

76:                                               ; preds = %71
  %77 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4base5Value9GetStringEv(%"class.base::Value"* %36) #6
  %78 = bitcast %"class.std::__1::basic_string"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.std::__1::basic_string"* %77 to i8*
  %87 = zext i8 %80 to i64
  %88 = select i1 %81, i8* %83, i8* %86
  %89 = select i1 %81, i64 %85, i64 %87
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %105, label %91

91:                                               ; preds = %76
  %92 = getelementptr inbounds i8, i8* %88, i64 %89
  br label %93

93:                                               ; preds = %97, %91
  %94 = phi i8* [ %98, %97 ], [ %88, %91 ]
  %95 = load i8, i8* %94, align 1
  %96 = icmp eq i8 %95, 47
  br i1 %96, label %97, label %100

97:                                               ; preds = %93
  %98 = getelementptr inbounds i8, i8* %94, i64 1
  %99 = icmp eq i8* %98, %92
  br i1 %99, label %105, label %93

100:                                              ; preds = %93
  %101 = ptrtoint i8* %94 to i64
  %102 = ptrtoint i8* %88 to i64
  %103 = sub i64 %101, %102
  %104 = icmp eq i64 %103, -1
  br i1 %104, label %105, label %111

105:                                              ; preds = %97, %100, %76
  %106 = load i8, i8* %27, align 1
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %110

108:                                              ; preds = %105
  store i64 0, i64* %24, align 8
  %109 = load i8*, i8** %23, align 8
  br label %117

110:                                              ; preds = %105
  store i8 0, i8* %27, align 1
  br label %117

111:                                              ; preds = %100
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #6
  %112 = bitcast %"class.std::__1::basic_string"* %77 to %"class.std::__1::allocator.4"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %4, %"class.std::__1::basic_string"* dereferenceable(24) %77, i64 %103, i64 -1, %"class.std::__1::allocator.4"* dereferenceable(1) %112) #6
  %113 = load i8, i8* %27, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %133

115:                                              ; preds = %111
  %116 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %116) #7
  br label %133

117:                                              ; preds = %108, %110
  %118 = phi i8* [ %109, %108 ], [ %22, %110 ]
  store i8 0, i8* %118, align 1
  br label %119

119:                                              ; preds = %117, %71
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #6
  %120 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors16kInvalidIconPathE, i64 0, i64 0)) #6
  %121 = load i8, i8* %38, align 1
  %122 = icmp slt i8 %121, 0
  %123 = load i8*, i8** %41, align 8
  %124 = select i1 %122, i8* %123, i8* %43
  %125 = load i64, i64* %45, align 8
  %126 = zext i8 %121 to i64
  %127 = select i1 %122, i64 %125, i64 %126
  call void @_ZN10extensions10ErrorUtils23FormatErrorMessageUTF16EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_(%"class.std::__1::basic_string.43"* nonnull sret %11, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors16kInvalidIconPathE, i64 0, i64 0), i64 %120, i8* %124, i64 %127) #6
  %128 = load i8, i8* %30, align 1
  %129 = icmp slt i8 %128, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %119
  %131 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %131) #7
  br label %132

132:                                              ; preds = %130, %119
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* nonnull align 8 %28, i64 24, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #6
  br label %135

133:                                              ; preds = %111, %115
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %25, i64 24, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #6
  %134 = load i32, i32* %8, align 4
  call void @_ZN16ExtensionIconSet3AddEiRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.ExtensionIconSet* %1, i32 %134, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10) #6
  br label %135

135:                                              ; preds = %133, %132
  %136 = phi i32 [ 0, %133 ], [ 1, %132 ]
  %137 = load i8, i8* %27, align 1
  %138 = icmp slt i8 %137, 0
  br i1 %138, label %139, label %141

139:                                              ; preds = %135
  %140 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %140) #7
  br label %141

141:                                              ; preds = %139, %135
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #6
  %142 = icmp eq i32 %136, 0
  br i1 %142, label %143, label %146

143:                                              ; preds = %141
  %144 = call dereferenceable(8) %"class.base::detail::const_dict_iterator"* @_ZN4base6detail19const_dict_iteratorppEv(%"class.base::detail::const_dict_iterator"* nonnull %6) #6
  %145 = call zeroext i1 @_ZN4base6detailneERKNS0_19const_dict_iteratorES3_(%"class.base::detail::const_dict_iterator"* nonnull dereferenceable(8) %6, %"class.base::detail::const_dict_iterator"* nonnull dereferenceable(8) %7) #6
  br i1 %145, label %33, label %146

146:                                              ; preds = %141, %143, %3, %70
  %147 = phi i1 [ false, %70 ], [ true, %3 ], [ false, %141 ], [ true, %143 ]
  call void @_ZN4base6detail19const_dict_iteratorD1Ev(%"class.base::detail::const_dict_iterator"* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN4base6detail19const_dict_iteratorD1Ev(%"class.base::detail::const_dict_iterator"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #6
  ret i1 %147
}

declare %"class.base::flat_map"* @_ZNK4base5Value9DictItemsEv(%"class.base::Value"*) local_unnamed_addr #1

declare void @_ZNK4base6detail25const_dict_iterator_proxy5beginEv(%"class.base::detail::const_dict_iterator"* sret, %"class.base::detail::const_dict_iterator_proxy"*) local_unnamed_addr #1

declare void @_ZNK4base6detail25const_dict_iterator_proxy3endEv(%"class.base::detail::const_dict_iterator"* sret, %"class.base::detail::const_dict_iterator_proxy"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base6detailneERKNS0_19const_dict_iteratorES3_(%"class.base::detail::const_dict_iterator"* dereferenceable(8), %"class.base::detail::const_dict_iterator"* dereferenceable(8)) local_unnamed_addr #1

declare { %"class.std::__1::basic_string"*, %"class.base::Value"* } @_ZNK4base6detail19const_dict_iteratordeEv(%"class.base::detail::const_dict_iterator"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8*, i64, i32*) local_unnamed_addr #1

declare void @_ZN10extensions10ErrorUtils23FormatErrorMessageUTF16EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_(%"class.std::__1::basic_string.43"* sret, i8*, i64, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4base5Value9GetStringEv(%"class.base::Value"*) local_unnamed_addr #1

declare void @_ZN16ExtensionIconSet3AddEiRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.ExtensionIconSet*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare dereferenceable(8) %"class.base::detail::const_dict_iterator"* @_ZN4base6detail19const_dict_iteratorppEv(%"class.base::detail::const_dict_iterator"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base6detail19const_dict_iteratorD1Ev(%"class.base::detail::const_dict_iterator"*) unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator.4"* dereferenceable(1)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
