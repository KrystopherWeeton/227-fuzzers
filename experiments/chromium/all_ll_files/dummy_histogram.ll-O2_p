; ModuleID = '../../base/metrics/dummy_histogram.cc'
source_filename = "../../base/metrics/dummy_histogram.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [24 x i8] }
%"class.base::DummyHistogram" = type { %"class.base::HistogramBase.base", [4 x i8] }
%"class.base::HistogramBase.base" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic", [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.base::PickleIterator" = type opaque
%"class.base::HistogramSamples" = type { i32 (...)**, %"struct.base::HistogramSamples::Metadata"* }
%"struct.base::HistogramSamples::Metadata" = type { i64, i64, i32, %"union.base::HistogramSamples::AtomicSingleSample" }
%"union.base::HistogramSamples::AtomicSingleSample" = type { i32 }
%"struct.base::HistogramSamples::LocalMetadata" = type { %"struct.base::HistogramSamples::Metadata" }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.8" }
%"union.absl::variant_internal::DestructibleUnionImpl.8" = type { %"union.absl::variant_internal::DestructibleUnionImpl.9" }
%"union.absl::variant_internal::DestructibleUnionImpl.9" = type { %"union.absl::variant_internal::DestructibleUnionImpl.10" }
%"union.absl::variant_internal::DestructibleUnionImpl.10" = type { %"union.absl::variant_internal::DestructibleUnionImpl.11" }
%"union.absl::variant_internal::DestructibleUnionImpl.11" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.base::Pickle" = type opaque
%"class.base::(anonymous namespace)::DummyHistogramSamples" = type { %"class.base::HistogramSamples" }
%"class.base::SampleCountIterator" = type { i32 (...)** }
%"class.base::(anonymous namespace)::DummySampleCountIterator" = type { %"class.base::SampleCountIterator" }

$_ZN4base14DummyHistogramD0Ev = comdat any

$_ZNK4base14DummyHistogram9CheckNameERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE = comdat any

$_ZN4base14DummyHistogram3AddEi = comdat any

$_ZN4base14DummyHistogram8AddCountEii = comdat any

$_ZN4base14DummyHistogram10AddSamplesERKNS_16HistogramSamplesE = comdat any

$_ZNK4base14DummyHistogram10WriteAsciiEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE = comdat any

$_ZNK4base14DummyHistogram17SerializeInfoImplEPNS_6PickleE = comdat any

$_ZNK4base14DummyHistogram13GetParametersEPNS_15DictionaryValueE = comdat any

@_ZZN4base14DummyHistogram11GetInstanceEvE15dummy_histogram = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN4base14DummyHistogram11GetInstanceEvE15dummy_histogram = internal global i64 0, align 8
@_ZTVN4base14DummyHistogramE = hidden unnamed_addr constant { [21 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::HistogramBase"*)* @_ZN4base13HistogramBaseD2Ev to i8*), i8* bitcast (void (%"class.base::DummyHistogram"*)* @_ZN4base14DummyHistogramD0Ev to i8*), i8* bitcast (void (%"class.base::DummyHistogram"*, %"class.base::BasicStringPiece"*)* @_ZNK4base14DummyHistogram9CheckNameERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE to i8*), i8* bitcast (i64 (%"class.base::DummyHistogram"*)* @_ZNK4base14DummyHistogram9name_hashEv to i8*), i8* bitcast (i32 (%"class.base::DummyHistogram"*)* @_ZNK4base14DummyHistogram16GetHistogramTypeEv to i8*), i8* bitcast (i1 (%"class.base::DummyHistogram"*, i32, i32, i32)* @_ZNK4base14DummyHistogram24HasConstructionArgumentsEiij to i8*), i8* bitcast (void (%"class.base::DummyHistogram"*, i32)* @_ZN4base14DummyHistogram3AddEi to i8*), i8* bitcast (void (%"class.base::DummyHistogram"*, i32, i32)* @_ZN4base14DummyHistogram8AddCountEii to i8*), i8* bitcast (void (%"class.base::DummyHistogram"*, %"class.base::HistogramSamples"*)* @_ZN4base14DummyHistogram10AddSamplesERKNS_16HistogramSamplesE to i8*), i8* bitcast (i1 (%"class.base::DummyHistogram"*, %"class.base::PickleIterator"*)* @_ZN4base14DummyHistogram20AddSamplesFromPickleEPNS_14PickleIteratorE to i8*), i8* bitcast (i32 (%"class.base::HistogramBase"*, %"class.base::HistogramSamples"*)* @_ZNK4base13HistogramBase14FindCorruptionERKNS_16HistogramSamplesE to i8*), i8* bitcast (%"class.base::HistogramSamples"* (%"class.base::DummyHistogram"*)* @_ZNK4base14DummyHistogram15SnapshotSamplesEv to i8*), i8* bitcast (%"class.base::HistogramSamples"* (%"class.base::DummyHistogram"*)* @_ZN4base14DummyHistogram13SnapshotDeltaEv to i8*), i8* bitcast (%"class.base::HistogramSamples"* (%"class.base::DummyHistogram"*)* @_ZNK4base14DummyHistogram18SnapshotFinalDeltaEv to i8*), i8* bitcast (void (%"class.base::DummyHistogram"*, %"class.std::__1::basic_string"*)* @_ZNK4base14DummyHistogram10WriteAsciiEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.base::DictionaryValue"*, %"class.base::DummyHistogram"*)* @_ZNK4base14DummyHistogram11ToGraphDictEv to i8*), i8* bitcast (void (%"class.base::HistogramBase"*)* @_ZNK4base13HistogramBase25ValidateHistogramContentsEv to i8*), i8* bitcast (void (%"class.base::DummyHistogram"*, %"class.base::Pickle"*)* @_ZNK4base14DummyHistogram17SerializeInfoImplEPNS_6PickleE to i8*), i8* bitcast (void (%"class.base::DummyHistogram"*, %"class.base::DictionaryValue"*)* @_ZNK4base14DummyHistogram13GetParametersEPNS_15DictionaryValueE to i8*)] }, align 8
@.str = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"dummy_histogram\00", align 1
@_ZTVN4base12_GLOBAL__N_121DummyHistogramSamplesE = internal unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::(anonymous namespace)::DummyHistogramSamples"*)* @_ZN4base12_GLOBAL__N_121DummyHistogramSamplesD2Ev to i8*), i8* bitcast (void (%"class.base::(anonymous namespace)::DummyHistogramSamples"*)* @_ZN4base12_GLOBAL__N_121DummyHistogramSamplesD0Ev to i8*), i8* bitcast (void (%"class.base::(anonymous namespace)::DummyHistogramSamples"*, i32, i32)* @_ZN4base12_GLOBAL__N_121DummyHistogramSamples10AccumulateEii to i8*), i8* bitcast (i32 (%"class.base::(anonymous namespace)::DummyHistogramSamples"*, i32)* @_ZNK4base12_GLOBAL__N_121DummyHistogramSamples8GetCountEi to i8*), i8* bitcast (i32 (%"class.base::(anonymous namespace)::DummyHistogramSamples"*)* @_ZNK4base12_GLOBAL__N_121DummyHistogramSamples10TotalCountEv to i8*), i8* bitcast (void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)* @_ZN4base16HistogramSamples3AddERKS0_ to i8*), i8* bitcast (i1 (%"class.base::HistogramSamples"*, %"class.base::PickleIterator"*)* @_ZN4base16HistogramSamples13AddFromPickleEPNS_14PickleIteratorE to i8*), i8* bitcast (void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)* @_ZN4base16HistogramSamples8SubtractERKS0_ to i8*), i8* bitcast (%"class.base::SampleCountIterator"* (%"class.base::(anonymous namespace)::DummyHistogramSamples"*)* @_ZNK4base12_GLOBAL__N_121DummyHistogramSamples8IteratorEv to i8*), i8* bitcast (void (%"class.base::HistogramSamples"*, %"class.base::Pickle"*)* @_ZNK4base16HistogramSamples9SerializeEPNS_6PickleE to i8*), i8* bitcast (i1 (%"class.base::(anonymous namespace)::DummyHistogramSamples"*, %"class.base::SampleCountIterator"*, i32)* @_ZN4base12_GLOBAL__N_121DummyHistogramSamples15AddSubtractImplEPNS_19SampleCountIteratorENS_16HistogramSamples8OperatorE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.base::HistogramSamples"*)* @_ZNK4base16HistogramSamples12GetAsciiBodyEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.base::HistogramSamples"*, i8*, i64, i32)* @_ZNK4base16HistogramSamples14GetAsciiHeaderENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi to i8*)] }, align 8
@_ZTVN4base12_GLOBAL__N_124DummySampleCountIteratorE = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::SampleCountIterator"*)* @_ZN4base19SampleCountIteratorD2Ev to i8*), i8* bitcast (void (%"class.base::(anonymous namespace)::DummySampleCountIterator"*)* @_ZN4base12_GLOBAL__N_124DummySampleCountIteratorD0Ev to i8*), i8* bitcast (i1 (%"class.base::(anonymous namespace)::DummySampleCountIterator"*)* @_ZNK4base12_GLOBAL__N_124DummySampleCountIterator4DoneEv to i8*), i8* bitcast (void (%"class.base::(anonymous namespace)::DummySampleCountIterator"*)* @_ZN4base12_GLOBAL__N_124DummySampleCountIterator4NextEv to i8*), i8* bitcast (void (%"class.base::(anonymous namespace)::DummySampleCountIterator"*, i32*, i64*, i32*)* @_ZNK4base12_GLOBAL__N_124DummySampleCountIterator3GetEPiPlS2_ to i8*), i8* bitcast (i1 (%"class.base::SampleCountIterator"*, i64*)* @_ZNK4base19SampleCountIterator14GetBucketIndexEPm to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::DummyHistogram"* @_ZN4base14DummyHistogram11GetInstanceEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base14DummyHistogram11GetInstanceEvE15dummy_histogram to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base14DummyHistogram11GetInstanceEvE15dummy_histogram) #9
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @_ZN4base13HistogramBaseC2EPKc(%"class.base::HistogramBase"* bitcast (%"class.base::NoDestructor"* @_ZZN4base14DummyHistogram11GetInstanceEvE15dummy_histogram to %"class.base::HistogramBase"*), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTVN4base14DummyHistogramE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** bitcast (%"class.base::NoDestructor"* @_ZZN4base14DummyHistogram11GetInstanceEvE15dummy_histogram to i32 (...)***), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base14DummyHistogram11GetInstanceEvE15dummy_histogram) #9
  br label %7

7:                                                ; preds = %3, %6, %0
  ret %"class.base::DummyHistogram"* bitcast (%"class.base::NoDestructor"* @_ZZN4base14DummyHistogram11GetInstanceEvE15dummy_histogram to %"class.base::DummyHistogram"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK4base14DummyHistogram9name_hashEv(%"class.base::DummyHistogram"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::DummyHistogram", %"class.base::DummyHistogram"* %0, i64 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = tail call i64 @strlen(i8* nonnull %4) #9
  br label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #9
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  br label %11

11:                                               ; preds = %6, %8
  %12 = phi i64 [ 0, %8 ], [ %7, %6 ]
  %13 = call i64 @_ZN4base14HashMetricNameENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %4, i64 %12) #9
  ret i64 %13
}

declare i64 @_ZN4base14HashMetricNameENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK4base14DummyHistogram16GetHistogramTypeEv(%"class.base::DummyHistogram"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i32 5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK4base14DummyHistogram24HasConstructionArgumentsEiij(%"class.base::DummyHistogram"* nocapture readnone, i32, i32, i32) unnamed_addr #3 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4base14DummyHistogram20AddSamplesFromPickleEPNS_14PickleIteratorE(%"class.base::DummyHistogram"* nocapture readnone, %"class.base::PickleIterator"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramSamples"* @_ZNK4base14DummyHistogram15SnapshotSamplesEv(%"class.base::DummyHistogram"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 16) #10
  %3 = bitcast i8* %2 to %"class.base::HistogramSamples"*
  %4 = tail call i8* @_Znwm(i64 24) #10
  %5 = bitcast i8* %4 to %"struct.base::HistogramSamples::LocalMetadata"*
  tail call void @_ZN4base16HistogramSamples13LocalMetadataC1Ev(%"struct.base::HistogramSamples::LocalMetadata"* nonnull %5) #9
  %6 = bitcast i8* %4 to %"struct.base::HistogramSamples::Metadata"*
  tail call void @_ZN4base16HistogramSamplesC2EmPNS0_8MetadataE(%"class.base::HistogramSamples"* nonnull %3, i64 0, %"struct.base::HistogramSamples::Metadata"* nonnull %6) #9
  %7 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4base12_GLOBAL__N_121DummyHistogramSamplesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  ret %"class.base::HistogramSamples"* %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramSamples"* @_ZN4base14DummyHistogram13SnapshotDeltaEv(%"class.base::DummyHistogram"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 16) #10
  %3 = bitcast i8* %2 to %"class.base::HistogramSamples"*
  %4 = tail call i8* @_Znwm(i64 24) #10
  %5 = bitcast i8* %4 to %"struct.base::HistogramSamples::LocalMetadata"*
  tail call void @_ZN4base16HistogramSamples13LocalMetadataC1Ev(%"struct.base::HistogramSamples::LocalMetadata"* nonnull %5) #9
  %6 = bitcast i8* %4 to %"struct.base::HistogramSamples::Metadata"*
  tail call void @_ZN4base16HistogramSamplesC2EmPNS0_8MetadataE(%"class.base::HistogramSamples"* nonnull %3, i64 0, %"struct.base::HistogramSamples::Metadata"* nonnull %6) #9
  %7 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4base12_GLOBAL__N_121DummyHistogramSamplesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  ret %"class.base::HistogramSamples"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramSamples"* @_ZNK4base14DummyHistogram18SnapshotFinalDeltaEv(%"class.base::DummyHistogram"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 16) #10
  %3 = bitcast i8* %2 to %"class.base::HistogramSamples"*
  %4 = tail call i8* @_Znwm(i64 24) #10
  %5 = bitcast i8* %4 to %"struct.base::HistogramSamples::LocalMetadata"*
  tail call void @_ZN4base16HistogramSamples13LocalMetadataC1Ev(%"struct.base::HistogramSamples::LocalMetadata"* nonnull %5) #9
  %6 = bitcast i8* %4 to %"struct.base::HistogramSamples::Metadata"*
  tail call void @_ZN4base16HistogramSamplesC2EmPNS0_8MetadataE(%"class.base::HistogramSamples"* nonnull %3, i64 0, %"struct.base::HistogramSamples::Metadata"* nonnull %6) #9
  %7 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4base12_GLOBAL__N_121DummyHistogramSamplesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  ret %"class.base::HistogramSamples"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base14DummyHistogram11ToGraphDictEv(%"class.base::DictionaryValue"* noalias sret, %"class.base::DummyHistogram"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* %0) #9
  ret void
}

declare void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base13HistogramBaseD2Ev(%"class.base::HistogramBase"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14DummyHistogramD0Ev(%"class.base::DummyHistogram"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.base::DummyHistogram"* %0 to %"class.base::HistogramBase"*
  tail call void @_ZN4base13HistogramBaseD2Ev(%"class.base::HistogramBase"* %2) #9
  %3 = bitcast %"class.base::DummyHistogram"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base14DummyHistogram9CheckNameERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::DummyHistogram"*, %"class.base::BasicStringPiece"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14DummyHistogram3AddEi(%"class.base::DummyHistogram"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14DummyHistogram8AddCountEii(%"class.base::DummyHistogram"*, i32, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14DummyHistogram10AddSamplesERKNS_16HistogramSamplesE(%"class.base::DummyHistogram"*, %"class.base::HistogramSamples"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare i32 @_ZNK4base13HistogramBase14FindCorruptionERKNS_16HistogramSamplesE(%"class.base::HistogramBase"*, %"class.base::HistogramSamples"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base14DummyHistogram10WriteAsciiEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::DummyHistogram"*, %"class.std::__1::basic_string"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZNK4base13HistogramBase25ValidateHistogramContentsEv(%"class.base::HistogramBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base14DummyHistogram17SerializeInfoImplEPNS_6PickleE(%"class.base::DummyHistogram"*, %"class.base::Pickle"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base14DummyHistogram13GetParametersEPNS_15DictionaryValueE(%"class.base::DummyHistogram"*, %"class.base::DictionaryValue"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN4base13HistogramBaseC2EPKc(%"class.base::HistogramBase"*, i8*) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN4base16HistogramSamples13LocalMetadataC1Ev(%"struct.base::HistogramSamples::LocalMetadata"*) unnamed_addr #2

declare void @_ZN4base16HistogramSamplesC2EmPNS0_8MetadataE(%"class.base::HistogramSamples"*, i64, %"struct.base::HistogramSamples::Metadata"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base12_GLOBAL__N_121DummyHistogramSamplesD2Ev(%"class.base::(anonymous namespace)::DummyHistogramSamples"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::(anonymous namespace)::DummyHistogramSamples", %"class.base::(anonymous namespace)::DummyHistogramSamples"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4base12_GLOBAL__N_121DummyHistogramSamplesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::(anonymous namespace)::DummyHistogramSamples", %"class.base::(anonymous namespace)::DummyHistogramSamples"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.base::(anonymous namespace)::DummyHistogramSamples", %"class.base::(anonymous namespace)::DummyHistogramSamples"* %0, i64 0, i32 0, i32 1
  %5 = load %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"** %4, align 8
  %6 = icmp eq %"struct.base::HistogramSamples::Metadata"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.base::HistogramSamples::Metadata"* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #10
  br label %9

9:                                                ; preds = %7, %1
  tail call void @_ZN4base16HistogramSamplesD2Ev(%"class.base::HistogramSamples"* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base12_GLOBAL__N_121DummyHistogramSamplesD0Ev(%"class.base::(anonymous namespace)::DummyHistogramSamples"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::(anonymous namespace)::DummyHistogramSamples", %"class.base::(anonymous namespace)::DummyHistogramSamples"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4base12_GLOBAL__N_121DummyHistogramSamplesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::(anonymous namespace)::DummyHistogramSamples", %"class.base::(anonymous namespace)::DummyHistogramSamples"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.base::(anonymous namespace)::DummyHistogramSamples", %"class.base::(anonymous namespace)::DummyHistogramSamples"* %0, i64 0, i32 0, i32 1
  %5 = load %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"** %4, align 8
  %6 = icmp eq %"struct.base::HistogramSamples::Metadata"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.base::HistogramSamples::Metadata"* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #10
  br label %9

9:                                                ; preds = %1, %7
  tail call void @_ZN4base16HistogramSamplesD2Ev(%"class.base::HistogramSamples"* %3) #9
  %10 = bitcast %"class.base::(anonymous namespace)::DummyHistogramSamples"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN4base12_GLOBAL__N_121DummyHistogramSamples10AccumulateEii(%"class.base::(anonymous namespace)::DummyHistogramSamples"* nocapture, i32, i32) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZNK4base12_GLOBAL__N_121DummyHistogramSamples8GetCountEi(%"class.base::(anonymous namespace)::DummyHistogramSamples"* nocapture readnone, i32) unnamed_addr #3 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZNK4base12_GLOBAL__N_121DummyHistogramSamples10TotalCountEv(%"class.base::(anonymous namespace)::DummyHistogramSamples"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i32 0
}

declare void @_ZN4base16HistogramSamples3AddERKS0_(%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"* dereferenceable(16)) unnamed_addr #2

declare zeroext i1 @_ZN4base16HistogramSamples13AddFromPickleEPNS_14PickleIteratorE(%"class.base::HistogramSamples"*, %"class.base::PickleIterator"*) unnamed_addr #2

declare void @_ZN4base16HistogramSamples8SubtractERKS0_(%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal %"class.base::SampleCountIterator"* @_ZNK4base12_GLOBAL__N_121DummyHistogramSamples8IteratorEv(%"class.base::(anonymous namespace)::DummyHistogramSamples"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 8) #10
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4base12_GLOBAL__N_124DummySampleCountIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = bitcast i8* %2 to %"class.base::SampleCountIterator"*
  ret %"class.base::SampleCountIterator"* %4
}

declare void @_ZNK4base16HistogramSamples9SerializeEPNS_6PickleE(%"class.base::HistogramSamples"*, %"class.base::Pickle"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN4base12_GLOBAL__N_121DummyHistogramSamples15AddSubtractImplEPNS_19SampleCountIteratorENS_16HistogramSamples8OperatorE(%"class.base::(anonymous namespace)::DummyHistogramSamples"* nocapture readnone, %"class.base::SampleCountIterator"* nocapture readnone, i32) unnamed_addr #3 align 2 {
  ret i1 true
}

declare void @_ZNK4base16HistogramSamples12GetAsciiBodyEv(%"class.std::__1::basic_string"* sret, %"class.base::HistogramSamples"*) unnamed_addr #2

declare void @_ZNK4base16HistogramSamples14GetAsciiHeaderENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.std::__1::basic_string"* sret, %"class.base::HistogramSamples"*, i8*, i64, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base16HistogramSamplesD2Ev(%"class.base::HistogramSamples"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base19SampleCountIteratorD2Ev(%"class.base::SampleCountIterator"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base12_GLOBAL__N_124DummySampleCountIteratorD0Ev(%"class.base::(anonymous namespace)::DummySampleCountIterator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::(anonymous namespace)::DummySampleCountIterator", %"class.base::(anonymous namespace)::DummySampleCountIterator"* %0, i64 0, i32 0
  tail call void @_ZN4base19SampleCountIteratorD2Ev(%"class.base::SampleCountIterator"* %2) #9
  %3 = bitcast %"class.base::(anonymous namespace)::DummySampleCountIterator"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK4base12_GLOBAL__N_124DummySampleCountIterator4DoneEv(%"class.base::(anonymous namespace)::DummySampleCountIterator"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN4base12_GLOBAL__N_124DummySampleCountIterator4NextEv(%"class.base::(anonymous namespace)::DummySampleCountIterator"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZNK4base12_GLOBAL__N_124DummySampleCountIterator3GetEPiPlS2_(%"class.base::(anonymous namespace)::DummySampleCountIterator"* nocapture, i32* nocapture, i64* nocapture, i32* nocapture) unnamed_addr #3 align 2 {
  ret void
}

declare zeroext i1 @_ZNK4base19SampleCountIterator14GetBucketIndexEPm(%"class.base::SampleCountIterator"*, i64*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
