; ModuleID = '../../third_party/blink/renderer/platform/transforms/matrix_transform_operation.cc'
source_filename = "../../third_party/blink/renderer/platform/transforms/matrix_transform_operation.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::MatrixTransformOperation" = type { %"class.blink::TransformOperation.base", double, double, double, double, double, double }
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted" }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"struct.blink::TransformationMatrix::Decomposed2dType" = type { double, double, double, double, double, double }
%"class.blink::FloatSize" = type { float, float }

$_ZN5blink24MatrixTransformOperationD0Ev = comdat any

$_ZNK5blink24MatrixTransformOperationeqERKNS_18TransformOperationE = comdat any

$_ZNK5blink24MatrixTransformOperation5ApplyERNS_20TransformationMatrixERKNS_9FloatSizeE = comdat any

$_ZNK5blink24MatrixTransformOperation7GetTypeEv = comdat any

$_ZNK5blink18TransformOperation13PrimitiveTypeEv = comdat any

$_ZNK5blink24MatrixTransformOperation22PreservesAxisAlignmentEv = comdat any

$_ZNK5blink24MatrixTransformOperation23IsIdentityOrTranslationEv = comdat any

$_ZNK5blink18TransformOperation24HasNonTrivial3DComponentEv = comdat any

$_ZNK5blink18TransformOperation19BoxSizeDependenciesEv = comdat any

$_ZN5blink18TransformOperationD2Ev = comdat any

@_ZTVN5blink24MatrixTransformOperationE = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::TransformOperation"*)* @_ZN5blink18TransformOperationD2Ev to i8*), i8* bitcast (void (%"class.blink::MatrixTransformOperation"*)* @_ZN5blink24MatrixTransformOperationD0Ev to i8*), i8* bitcast (i1 (%"class.blink::MatrixTransformOperation"*, %"class.blink::TransformOperation"*)* @_ZNK5blink24MatrixTransformOperationeqERKNS_18TransformOperationE to i8*), i8* bitcast (void (%"class.blink::MatrixTransformOperation"*, %"class.blink::TransformationMatrix"*, %"class.blink::FloatSize"*)* @_ZNK5blink24MatrixTransformOperation5ApplyERNS_20TransformationMatrixERKNS_9FloatSizeE to i8*), i8* bitcast (%"class.blink::TransformOperation"* (%"class.blink::MatrixTransformOperation"*, %"class.blink::TransformOperation"*)* @_ZN5blink24MatrixTransformOperation10AccumulateERKNS_18TransformOperationE to i8*), i8* bitcast (%"class.blink::TransformOperation"* (%"class.blink::MatrixTransformOperation"*, %"class.blink::TransformOperation"*, double, i1)* @_ZN5blink24MatrixTransformOperation5BlendEPKNS_18TransformOperationEdb to i8*), i8* bitcast (%"class.blink::TransformOperation"* (%"class.blink::MatrixTransformOperation"*, double)* @_ZN5blink24MatrixTransformOperation4ZoomEd to i8*), i8* bitcast (i32 (%"class.blink::MatrixTransformOperation"*)* @_ZNK5blink24MatrixTransformOperation7GetTypeEv to i8*), i8* bitcast (i32 (%"class.blink::TransformOperation"*)* @_ZNK5blink18TransformOperation13PrimitiveTypeEv to i8*), i8* bitcast (i1 (%"class.blink::MatrixTransformOperation"*)* @_ZNK5blink24MatrixTransformOperation22PreservesAxisAlignmentEv to i8*), i8* bitcast (i1 (%"class.blink::MatrixTransformOperation"*)* @_ZNK5blink24MatrixTransformOperation23IsIdentityOrTranslationEv to i8*), i8* bitcast (i1 (%"class.blink::TransformOperation"*)* @_ZNK5blink18TransformOperation24HasNonTrivial3DComponentEv to i8*), i8* bitcast (i32 (%"class.blink::TransformOperation"*)* @_ZNK5blink18TransformOperation19BoxSizeDependenciesEv to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::TransformOperation"* @_ZN5blink24MatrixTransformOperation10AccumulateERKNS_18TransformOperationE(%"class.blink::MatrixTransformOperation"* nocapture readonly, %"class.blink::TransformOperation"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::TransformationMatrix", align 16
  %4 = alloca %"class.blink::TransformationMatrix", align 16
  %5 = alloca %"struct.blink::TransformationMatrix::Decomposed2dType", align 16
  %6 = alloca %"struct.blink::TransformationMatrix::Decomposed2dType", align 16
  %7 = bitcast %"class.blink::TransformationMatrix"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %7) #6
  %8 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %1, i64 1
  %9 = bitcast %"class.blink::TransformOperation"* %8 to <2 x i64>*
  %10 = load <2 x i64>, <2 x i64>* %9, align 8
  %11 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %1, i64 2
  %12 = bitcast %"class.blink::TransformOperation"* %11 to <2 x i64>*
  %13 = load <2 x i64>, <2 x i64>* %12, align 8
  %14 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %1, i64 3
  %15 = bitcast %"class.blink::TransformOperation"* %14 to <2 x i64>*
  %16 = load <2 x i64>, <2 x i64>* %15, align 8
  %17 = bitcast %"class.blink::TransformationMatrix"* %3 to <2 x i64>*
  store <2 x i64> %10, <2 x i64>* %17, align 16
  %18 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 0, i64 2
  %19 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 1, i64 0
  %20 = bitcast double* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %20, i8 0, i64 16, i1 false) #6
  %21 = bitcast double* %19 to <2 x i64>*
  store <2 x i64> %13, <2 x i64>* %21, align 16
  %22 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 1, i64 2
  %23 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 2, i64 2
  %24 = bitcast double* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %24, i8 0, i64 32, i1 false) #6
  %25 = bitcast double* %23 to <2 x double>*
  store <2 x double> <double 1.000000e+00, double 0.000000e+00>, <2 x double>* %25, align 16
  %26 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 3, i64 0
  %27 = bitcast double* %26 to <2 x i64>*
  store <2 x i64> %16, <2 x i64>* %27, align 16
  %28 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 3, i64 2
  %29 = bitcast double* %28 to <2 x double>*
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %29, align 16
  %30 = bitcast %"class.blink::TransformationMatrix"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %30) #6
  %31 = getelementptr inbounds %"class.blink::MatrixTransformOperation", %"class.blink::MatrixTransformOperation"* %0, i64 0, i32 1
  %32 = bitcast double* %31 to <2 x i64>*
  %33 = load <2 x i64>, <2 x i64>* %32, align 8
  %34 = getelementptr inbounds %"class.blink::MatrixTransformOperation", %"class.blink::MatrixTransformOperation"* %0, i64 0, i32 3
  %35 = bitcast double* %34 to <2 x i64>*
  %36 = load <2 x i64>, <2 x i64>* %35, align 8
  %37 = getelementptr inbounds %"class.blink::MatrixTransformOperation", %"class.blink::MatrixTransformOperation"* %0, i64 0, i32 5
  %38 = bitcast double* %37 to <2 x i64>*
  %39 = load <2 x i64>, <2 x i64>* %38, align 8
  %40 = bitcast %"class.blink::TransformationMatrix"* %4 to <2 x i64>*
  store <2 x i64> %33, <2 x i64>* %40, align 16
  %41 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 0, i64 2
  %42 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 1, i64 0
  %43 = bitcast double* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %43, i8 0, i64 16, i1 false) #6
  %44 = bitcast double* %42 to <2 x i64>*
  store <2 x i64> %36, <2 x i64>* %44, align 16
  %45 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 1, i64 2
  %46 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 2, i64 2
  %47 = bitcast double* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %47, i8 0, i64 32, i1 false) #6
  %48 = bitcast double* %46 to <2 x double>*
  store <2 x double> <double 1.000000e+00, double 0.000000e+00>, <2 x double>* %48, align 16
  %49 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 3, i64 0
  %50 = bitcast double* %49 to <2 x i64>*
  store <2 x i64> %39, <2 x i64>* %50, align 16
  %51 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 3, i64 2
  %52 = bitcast double* %51 to <2 x double>*
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %52, align 16
  %53 = call zeroext i1 @_ZNK5blink20TransformationMatrix12IsInvertibleEv(%"class.blink::TransformationMatrix"* nonnull %3) #6
  br i1 %53, label %54, label %107

54:                                               ; preds = %2
  %55 = call zeroext i1 @_ZNK5blink20TransformationMatrix12IsInvertibleEv(%"class.blink::TransformationMatrix"* nonnull %4) #6
  br i1 %55, label %56, label %107

56:                                               ; preds = %54
  %57 = bitcast %"struct.blink::TransformationMatrix::Decomposed2dType"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %57) #6
  %58 = getelementptr inbounds %"struct.blink::TransformationMatrix::Decomposed2dType", %"struct.blink::TransformationMatrix::Decomposed2dType"* %5, i64 0, i32 2
  %59 = getelementptr inbounds %"struct.blink::TransformationMatrix::Decomposed2dType", %"struct.blink::TransformationMatrix::Decomposed2dType"* %5, i64 0, i32 4
  %60 = bitcast %"struct.blink::TransformationMatrix::Decomposed2dType"* %6 to i8*
  %61 = bitcast %"struct.blink::TransformationMatrix::Decomposed2dType"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %61, i8 -1, i64 48, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %60) #6
  %62 = getelementptr inbounds %"struct.blink::TransformationMatrix::Decomposed2dType", %"struct.blink::TransformationMatrix::Decomposed2dType"* %6, i64 0, i32 2
  %63 = getelementptr inbounds %"struct.blink::TransformationMatrix::Decomposed2dType", %"struct.blink::TransformationMatrix::Decomposed2dType"* %6, i64 0, i32 4
  %64 = bitcast %"struct.blink::TransformationMatrix::Decomposed2dType"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %64, i8 -1, i64 48, i1 false)
  %65 = call zeroext i1 @_ZNK5blink20TransformationMatrix11Decompose2DERNS0_16Decomposed2dTypeE(%"class.blink::TransformationMatrix"* nonnull %3, %"struct.blink::TransformationMatrix::Decomposed2dType"* nonnull dereferenceable(48) %5) #6
  br i1 %65, label %66, label %105

66:                                               ; preds = %56
  %67 = call zeroext i1 @_ZNK5blink20TransformationMatrix11Decompose2DERNS0_16Decomposed2dTypeE(%"class.blink::TransformationMatrix"* nonnull %4, %"struct.blink::TransformationMatrix::Decomposed2dType"* nonnull dereferenceable(48) %6) #6
  br i1 %67, label %68, label %105

68:                                               ; preds = %66
  %69 = bitcast %"struct.blink::TransformationMatrix::Decomposed2dType"* %6 to <2 x double>*
  %70 = load <2 x double>, <2 x double>* %69, align 16
  %71 = fadd <2 x double> %70, <double -1.000000e+00, double -1.000000e+00>
  %72 = bitcast %"struct.blink::TransformationMatrix::Decomposed2dType"* %5 to <2 x double>*
  %73 = load <2 x double>, <2 x double>* %72, align 16
  %74 = fadd <2 x double> %73, %71
  %75 = bitcast %"struct.blink::TransformationMatrix::Decomposed2dType"* %5 to <2 x double>*
  store <2 x double> %74, <2 x double>* %75, align 16
  %76 = bitcast double* %62 to <2 x double>*
  %77 = load <2 x double>, <2 x double>* %76, align 16
  %78 = bitcast double* %58 to <2 x double>*
  %79 = load <2 x double>, <2 x double>* %78, align 16
  %80 = fadd <2 x double> %77, %79
  %81 = bitcast double* %58 to <2 x double>*
  store <2 x double> %80, <2 x double>* %81, align 16
  %82 = bitcast double* %63 to <2 x double>*
  %83 = load <2 x double>, <2 x double>* %82, align 16
  %84 = bitcast double* %59 to <2 x double>*
  %85 = load <2 x double>, <2 x double>* %84, align 16
  %86 = fadd <2 x double> %83, %85
  %87 = bitcast double* %59 to <2 x double>*
  store <2 x double> %86, <2 x double>* %87, align 16
  call void @_ZN5blink20TransformationMatrix11Recompose2DERKNS0_16Decomposed2dTypeE(%"class.blink::TransformationMatrix"* nonnull %3, %"struct.blink::TransformationMatrix::Decomposed2dType"* nonnull dereferenceable(48) %5) #6
  %88 = call noalias i8* @malloc(i64 64) #6
  %89 = getelementptr inbounds i8, i8* %88, i64 8
  %90 = bitcast i8* %89 to i32*
  store i32 1, i32* %90, align 4
  %91 = bitcast i8* %88 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink24MatrixTransformOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %91, align 8
  %92 = getelementptr inbounds i8, i8* %88, i64 16
  %93 = bitcast %"class.blink::TransformationMatrix"* %3 to <2 x i64>*
  %94 = load <2 x i64>, <2 x i64>* %93, align 16
  %95 = bitcast i8* %92 to <2 x i64>*
  store <2 x i64> %94, <2 x i64>* %95, align 8
  %96 = getelementptr inbounds i8, i8* %88, i64 32
  %97 = bitcast double* %19 to <2 x i64>*
  %98 = load <2 x i64>, <2 x i64>* %97, align 16
  %99 = bitcast i8* %96 to <2 x i64>*
  store <2 x i64> %98, <2 x i64>* %99, align 8
  %100 = getelementptr inbounds i8, i8* %88, i64 48
  %101 = bitcast double* %26 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 16
  %103 = bitcast i8* %100 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %103, align 8
  %104 = ptrtoint i8* %88 to i64
  br label %105

105:                                              ; preds = %56, %66, %68
  %106 = phi i64 [ %104, %68 ], [ 0, %66 ], [ 0, %56 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %60) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %57) #6
  br label %107

107:                                              ; preds = %2, %54, %105
  %108 = phi i64 [ %106, %105 ], [ 0, %54 ], [ 0, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %30) #6
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %7) #6
  %109 = inttoptr i64 %108 to %"class.blink::TransformOperation"*
  ret %"class.blink::TransformOperation"* %109
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZNK5blink20TransformationMatrix12IsInvertibleEv(%"class.blink::TransformationMatrix"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink20TransformationMatrix11Decompose2DERNS0_16Decomposed2dTypeE(%"class.blink::TransformationMatrix"*, %"struct.blink::TransformationMatrix::Decomposed2dType"* dereferenceable(48)) local_unnamed_addr #2

declare void @_ZN5blink20TransformationMatrix11Recompose2DERKNS0_16Decomposed2dTypeE(%"class.blink::TransformationMatrix"*, %"struct.blink::TransformationMatrix::Decomposed2dType"* dereferenceable(48)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::TransformOperation"* @_ZN5blink24MatrixTransformOperation5BlendEPKNS_18TransformOperationEdb(%"class.blink::MatrixTransformOperation"* nocapture readonly, %"class.blink::TransformOperation"* readonly, double, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = alloca [4 x [4 x double]], align 8
  %6 = alloca %"class.blink::TransformationMatrix", align 16
  %7 = alloca %"class.blink::TransformationMatrix", align 16
  %8 = bitcast %"class.blink::TransformationMatrix"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %8) #6
  %9 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 0, i64 0
  store double 1.000000e+00, double* %9, align 16
  %10 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 0, i64 1
  %11 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 1, i64 1
  %12 = bitcast double* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 32, i1 false) #6
  store double 1.000000e+00, double* %11, align 8
  %13 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 1, i64 2
  %14 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 2, i64 2
  %15 = bitcast double* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %15, i8 0, i64 32, i1 false) #6
  store double 1.000000e+00, double* %14, align 16
  %16 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 2, i64 3
  %17 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 3, i64 3
  %18 = bitcast double* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 32, i1 false) #6
  store double 1.000000e+00, double* %17, align 8
  %19 = bitcast %"class.blink::TransformationMatrix"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %19) #6
  %20 = getelementptr inbounds %"class.blink::MatrixTransformOperation", %"class.blink::MatrixTransformOperation"* %0, i64 0, i32 1
  %21 = bitcast double* %20 to <2 x i64>*
  %22 = load <2 x i64>, <2 x i64>* %21, align 8
  %23 = getelementptr inbounds %"class.blink::MatrixTransformOperation", %"class.blink::MatrixTransformOperation"* %0, i64 0, i32 3
  %24 = bitcast double* %23 to <2 x i64>*
  %25 = load <2 x i64>, <2 x i64>* %24, align 8
  %26 = getelementptr inbounds %"class.blink::MatrixTransformOperation", %"class.blink::MatrixTransformOperation"* %0, i64 0, i32 5
  %27 = bitcast double* %26 to <2 x i64>*
  %28 = load <2 x i64>, <2 x i64>* %27, align 8
  %29 = bitcast %"class.blink::TransformationMatrix"* %7 to <2 x i64>*
  store <2 x i64> %22, <2 x i64>* %29, align 16
  %30 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %7, i64 0, i32 0, i32 0, i64 0, i64 2
  %31 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %7, i64 0, i32 0, i32 0, i64 1, i64 0
  %32 = bitcast double* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %32, i8 0, i64 16, i1 false) #6
  %33 = bitcast double* %31 to <2 x i64>*
  store <2 x i64> %25, <2 x i64>* %33, align 16
  %34 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %7, i64 0, i32 0, i32 0, i64 1, i64 2
  %35 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %7, i64 0, i32 0, i32 0, i64 2, i64 2
  %36 = bitcast double* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %36, i8 0, i64 32, i1 false) #6
  %37 = bitcast double* %35 to <2 x double>*
  store <2 x double> <double 1.000000e+00, double 0.000000e+00>, <2 x double>* %37, align 16
  %38 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %7, i64 0, i32 0, i32 0, i64 3, i64 0
  %39 = bitcast double* %38 to <2 x i64>*
  store <2 x i64> %28, <2 x i64>* %39, align 16
  %40 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %7, i64 0, i32 0, i32 0, i64 3, i64 2
  %41 = bitcast double* %40 to <2 x double>*
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %41, align 16
  %42 = call zeroext i1 @_ZNK5blink20TransformationMatrix12IsInvertibleEv(%"class.blink::TransformationMatrix"* nonnull %7) #6
  br i1 %42, label %43, label %87

43:                                               ; preds = %4
  %44 = icmp eq %"class.blink::TransformOperation"* %1, null
  br i1 %44, label %66, label %45

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %1, i64 1
  %47 = bitcast %"class.blink::TransformOperation"* %46 to <2 x i64>*
  %48 = load <2 x i64>, <2 x i64>* %47, align 8
  %49 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %1, i64 2
  %50 = bitcast %"class.blink::TransformOperation"* %49 to <2 x i64>*
  %51 = load <2 x i64>, <2 x i64>* %50, align 8
  %52 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %1, i64 3
  %53 = bitcast %"class.blink::TransformOperation"* %52 to <2 x i64>*
  %54 = load <2 x i64>, <2 x i64>* %53, align 8
  %55 = bitcast %"class.blink::TransformationMatrix"* %6 to <2 x i64>*
  store <2 x i64> %48, <2 x i64>* %55, align 16
  %56 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 0, i64 2
  %57 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 1, i64 0
  %58 = bitcast double* %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %58, i8 0, i64 16, i1 false) #6
  %59 = bitcast double* %57 to <2 x i64>*
  store <2 x i64> %51, <2 x i64>* %59, align 16
  call void @llvm.memset.p0i8.i64(i8* align 16 %15, i8 0, i64 32, i1 false) #6
  %60 = bitcast double* %14 to <2 x double>*
  store <2 x double> <double 1.000000e+00, double 0.000000e+00>, <2 x double>* %60, align 16
  %61 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 3, i64 0
  %62 = bitcast double* %61 to <2 x i64>*
  store <2 x i64> %54, <2 x i64>* %62, align 16
  %63 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 3, i64 2
  %64 = bitcast double* %63 to <2 x double>*
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %64, align 16
  %65 = call zeroext i1 @_ZNK5blink20TransformationMatrix12IsInvertibleEv(%"class.blink::TransformationMatrix"* nonnull %6) #6
  br i1 %65, label %66, label %87

66:                                               ; preds = %45, %43
  br i1 %3, label %67, label %69

67:                                               ; preds = %66
  %68 = bitcast [4 x [4 x double]]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %68)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %68, i8* nonnull align 16 %8, i64 128, i1 false) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %8, i8* nonnull align 16 %19, i64 128, i1 false) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %19, i8* nonnull align 8 %68, i64 128, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %68)
  br label %69

69:                                               ; preds = %66, %67
  call void @_ZN5blink20TransformationMatrix5BlendERKS0_d(%"class.blink::TransformationMatrix"* nonnull %7, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %6, double %2) #6
  %70 = bitcast %"class.blink::TransformationMatrix"* %7 to <2 x i64>*
  %71 = load <2 x i64>, <2 x i64>* %70, align 16
  %72 = bitcast double* %31 to <2 x i64>*
  %73 = load <2 x i64>, <2 x i64>* %72, align 16
  %74 = bitcast double* %38 to <2 x i64>*
  %75 = load <2 x i64>, <2 x i64>* %74, align 16
  %76 = call noalias i8* @malloc(i64 64) #6
  %77 = getelementptr inbounds i8, i8* %76, i64 8
  %78 = bitcast i8* %77 to i32*
  store i32 1, i32* %78, align 4
  %79 = bitcast i8* %76 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink24MatrixTransformOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %79, align 8
  %80 = getelementptr inbounds i8, i8* %76, i64 16
  %81 = bitcast i8* %80 to <2 x i64>*
  store <2 x i64> %71, <2 x i64>* %81, align 8
  %82 = getelementptr inbounds i8, i8* %76, i64 32
  %83 = bitcast i8* %82 to <2 x i64>*
  store <2 x i64> %73, <2 x i64>* %83, align 8
  %84 = getelementptr inbounds i8, i8* %76, i64 48
  %85 = bitcast i8* %84 to <2 x i64>*
  store <2 x i64> %75, <2 x i64>* %85, align 8
  %86 = bitcast i8* %76 to %"class.blink::TransformOperation"*
  br label %87

87:                                               ; preds = %45, %4, %69
  %88 = phi %"class.blink::TransformOperation"* [ %86, %69 ], [ null, %4 ], [ null, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %19) #6
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %8) #6
  ret %"class.blink::TransformOperation"* %88
}

declare void @_ZN5blink20TransformationMatrix5BlendERKS0_d(%"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"* dereferenceable(128), double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::TransformOperation"* @_ZN5blink24MatrixTransformOperation4ZoomEd(%"class.blink::MatrixTransformOperation"* nocapture readonly, double) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MatrixTransformOperation", %"class.blink::MatrixTransformOperation"* %0, i64 0, i32 1
  %4 = bitcast double* %3 to <2 x i64>*
  %5 = load <2 x i64>, <2 x i64>* %4, align 8
  %6 = getelementptr inbounds %"class.blink::MatrixTransformOperation", %"class.blink::MatrixTransformOperation"* %0, i64 0, i32 3
  %7 = bitcast double* %6 to <2 x i64>*
  %8 = load <2 x i64>, <2 x i64>* %7, align 8
  %9 = getelementptr inbounds %"class.blink::MatrixTransformOperation", %"class.blink::MatrixTransformOperation"* %0, i64 0, i32 5
  %10 = bitcast double* %9 to <2 x double>*
  %11 = load <2 x double>, <2 x double>* %10, align 8
  %12 = insertelement <2 x double> undef, double %1, i32 0
  %13 = shufflevector <2 x double> %12, <2 x double> undef, <2 x i32> zeroinitializer
  %14 = fmul <2 x double> %11, %13
  %15 = tail call noalias i8* @malloc(i64 64) #6
  %16 = getelementptr inbounds i8, i8* %15, i64 8
  %17 = bitcast i8* %16 to i32*
  store i32 1, i32* %17, align 4
  %18 = bitcast i8* %15 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink24MatrixTransformOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds i8, i8* %15, i64 16
  %20 = bitcast i8* %19 to <2 x i64>*
  store <2 x i64> %5, <2 x i64>* %20, align 8
  %21 = getelementptr inbounds i8, i8* %15, i64 32
  %22 = bitcast i8* %21 to <2 x i64>*
  store <2 x i64> %8, <2 x i64>* %22, align 8
  %23 = getelementptr inbounds i8, i8* %15, i64 48
  %24 = bitcast i8* %23 to <2 x double>*
  store <2 x double> %14, <2 x double>* %24, align 8
  %25 = bitcast i8* %15 to %"class.blink::TransformOperation"*
  ret %"class.blink::TransformOperation"* %25
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24MatrixTransformOperationD0Ev(%"class.blink::MatrixTransformOperation"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.blink::MatrixTransformOperation"* %0 to i8*
  tail call void @free(i8* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink24MatrixTransformOperationeqERKNS_18TransformOperationE(%"class.blink::MatrixTransformOperation"*, %"class.blink::TransformOperation"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::MatrixTransformOperation"* %0 to %"class.blink::TransformOperation"*
  %4 = bitcast %"class.blink::TransformOperation"* %1 to i32 (%"class.blink::TransformOperation"*)***
  %5 = load i32 (%"class.blink::TransformOperation"*)**, i32 (%"class.blink::TransformOperation"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %5, i64 7
  %7 = load i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %6, align 8
  %8 = tail call i32 %7(%"class.blink::TransformOperation"* %1) #6
  %9 = bitcast %"class.blink::MatrixTransformOperation"* %0 to i32 (%"class.blink::TransformOperation"*)***
  %10 = load i32 (%"class.blink::TransformOperation"*)**, i32 (%"class.blink::TransformOperation"*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %10, i64 7
  %12 = load i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %11, align 8
  %13 = tail call i32 %12(%"class.blink::TransformOperation"* %3) #6
  %14 = icmp eq i32 %8, %13
  br i1 %14, label %15, label %57

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::MatrixTransformOperation", %"class.blink::MatrixTransformOperation"* %0, i64 0, i32 1
  %17 = load double, double* %16, align 8
  %18 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %1, i64 1
  %19 = bitcast %"class.blink::TransformOperation"* %18 to double*
  %20 = load double, double* %19, align 8
  %21 = fcmp oeq double %17, %20
  br i1 %21, label %22, label %57

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::MatrixTransformOperation", %"class.blink::MatrixTransformOperation"* %0, i64 0, i32 2
  %24 = load double, double* %23, align 8
  %25 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %1, i64 1, i32 1
  %26 = bitcast %"class.WTF::RefCounted"* %25 to double*
  %27 = load double, double* %26, align 8
  %28 = fcmp oeq double %24, %27
  br i1 %28, label %29, label %57

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::MatrixTransformOperation", %"class.blink::MatrixTransformOperation"* %0, i64 0, i32 3
  %31 = load double, double* %30, align 8
  %32 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %1, i64 2
  %33 = bitcast %"class.blink::TransformOperation"* %32 to double*
  %34 = load double, double* %33, align 8
  %35 = fcmp oeq double %31, %34
  br i1 %35, label %36, label %57

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.blink::MatrixTransformOperation", %"class.blink::MatrixTransformOperation"* %0, i64 0, i32 4
  %38 = load double, double* %37, align 8
  %39 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %1, i64 2, i32 1
  %40 = bitcast %"class.WTF::RefCounted"* %39 to double*
  %41 = load double, double* %40, align 8
  %42 = fcmp oeq double %38, %41
  br i1 %42, label %43, label %57

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.blink::MatrixTransformOperation", %"class.blink::MatrixTransformOperation"* %0, i64 0, i32 5
  %45 = load double, double* %44, align 8
  %46 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %1, i64 3
  %47 = bitcast %"class.blink::TransformOperation"* %46 to double*
  %48 = load double, double* %47, align 8
  %49 = fcmp oeq double %45, %48
  br i1 %49, label %50, label %57

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.blink::MatrixTransformOperation", %"class.blink::MatrixTransformOperation"* %0, i64 0, i32 6
  %52 = load double, double* %51, align 8
  %53 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %1, i64 3, i32 1
  %54 = bitcast %"class.WTF::RefCounted"* %53 to double*
  %55 = load double, double* %54, align 8
  %56 = fcmp oeq double %52, %55
  br label %57

57:                                               ; preds = %15, %22, %29, %36, %43, %50, %2
  %58 = phi i1 [ false, %2 ], [ false, %43 ], [ false, %36 ], [ false, %29 ], [ false, %22 ], [ false, %15 ], [ %56, %50 ]
  ret i1 %58
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink24MatrixTransformOperation5ApplyERNS_20TransformationMatrixERKNS_9FloatSizeE(%"class.blink::MatrixTransformOperation"*, %"class.blink::TransformationMatrix"* dereferenceable(128), %"class.blink::FloatSize"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::TransformationMatrix", align 16
  %5 = bitcast %"class.blink::TransformationMatrix"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.blink::MatrixTransformOperation", %"class.blink::MatrixTransformOperation"* %0, i64 0, i32 1
  %7 = bitcast double* %6 to <2 x i64>*
  %8 = load <2 x i64>, <2 x i64>* %7, align 8
  %9 = getelementptr inbounds %"class.blink::MatrixTransformOperation", %"class.blink::MatrixTransformOperation"* %0, i64 0, i32 3
  %10 = bitcast double* %9 to <2 x i64>*
  %11 = load <2 x i64>, <2 x i64>* %10, align 8
  %12 = getelementptr inbounds %"class.blink::MatrixTransformOperation", %"class.blink::MatrixTransformOperation"* %0, i64 0, i32 5
  %13 = bitcast double* %12 to <2 x i64>*
  %14 = load <2 x i64>, <2 x i64>* %13, align 8
  %15 = bitcast %"class.blink::TransformationMatrix"* %4 to <2 x i64>*
  store <2 x i64> %8, <2 x i64>* %15, align 16
  %16 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 0, i64 2
  %17 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 1, i64 0
  %18 = bitcast double* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %18, i8 0, i64 16, i1 false) #6
  %19 = bitcast double* %17 to <2 x i64>*
  store <2 x i64> %11, <2 x i64>* %19, align 16
  %20 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 1, i64 2
  %21 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 2, i64 2
  %22 = bitcast double* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %22, i8 0, i64 32, i1 false) #6
  %23 = bitcast double* %21 to <2 x double>*
  store <2 x double> <double 1.000000e+00, double 0.000000e+00>, <2 x double>* %23, align 16
  %24 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 3, i64 0
  %25 = bitcast double* %24 to <2 x i64>*
  store <2 x i64> %14, <2 x i64>* %25, align 16
  %26 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 3, i64 2
  %27 = bitcast double* %26 to <2 x double>*
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %27, align 16
  %28 = call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8MultiplyERKS0_(%"class.blink::TransformationMatrix"* %1, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %4) #6
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink24MatrixTransformOperation7GetTypeEv(%"class.blink::MatrixTransformOperation"*) unnamed_addr #0 comdat align 2 {
  ret i32 10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink18TransformOperation13PrimitiveTypeEv(%"class.blink::TransformOperation"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::TransformOperation"* %0 to i32 (%"class.blink::TransformOperation"*)***
  %3 = load i32 (%"class.blink::TransformOperation"*)**, i32 (%"class.blink::TransformOperation"*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %3, i64 7
  %5 = load i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %4, align 8
  %6 = tail call i32 %5(%"class.blink::TransformOperation"* %0) #6
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink24MatrixTransformOperation22PreservesAxisAlignmentEv(%"class.blink::MatrixTransformOperation"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::TransformationMatrix", align 16
  %3 = bitcast %"class.blink::TransformationMatrix"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %3) #6
  %4 = getelementptr inbounds %"class.blink::MatrixTransformOperation", %"class.blink::MatrixTransformOperation"* %0, i64 0, i32 1
  %5 = bitcast double* %4 to <2 x i64>*
  %6 = load <2 x i64>, <2 x i64>* %5, align 8, !noalias !2
  %7 = getelementptr inbounds %"class.blink::MatrixTransformOperation", %"class.blink::MatrixTransformOperation"* %0, i64 0, i32 3
  %8 = bitcast double* %7 to <2 x i64>*
  %9 = load <2 x i64>, <2 x i64>* %8, align 8, !noalias !2
  %10 = getelementptr inbounds %"class.blink::MatrixTransformOperation", %"class.blink::MatrixTransformOperation"* %0, i64 0, i32 5
  %11 = bitcast double* %10 to <2 x i64>*
  %12 = load <2 x i64>, <2 x i64>* %11, align 8, !noalias !2
  %13 = bitcast %"class.blink::TransformationMatrix"* %2 to <2 x i64>*
  store <2 x i64> %6, <2 x i64>* %13, align 16, !alias.scope !2
  %14 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %2, i64 0, i32 0, i32 0, i64 0, i64 2
  %15 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %2, i64 0, i32 0, i32 0, i64 1, i64 0
  %16 = bitcast double* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %16, i8 0, i64 16, i1 false) #6, !alias.scope !2
  %17 = bitcast double* %15 to <2 x i64>*
  store <2 x i64> %9, <2 x i64>* %17, align 16, !alias.scope !2
  %18 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %2, i64 0, i32 0, i32 0, i64 1, i64 2
  %19 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %2, i64 0, i32 0, i32 0, i64 2, i64 2
  %20 = bitcast double* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %20, i8 0, i64 32, i1 false) #6, !alias.scope !2
  %21 = bitcast double* %19 to <2 x double>*
  store <2 x double> <double 1.000000e+00, double 0.000000e+00>, <2 x double>* %21, align 16, !alias.scope !2
  %22 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %2, i64 0, i32 0, i32 0, i64 3, i64 0
  %23 = bitcast double* %22 to <2 x i64>*
  store <2 x i64> %12, <2 x i64>* %23, align 16, !alias.scope !2
  %24 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %2, i64 0, i32 0, i32 0, i64 3, i64 2
  %25 = bitcast double* %24 to <2 x double>*
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %25, align 16, !alias.scope !2
  %26 = call zeroext i1 @_ZNK5blink20TransformationMatrix24Preserves2dAxisAlignmentEv(%"class.blink::TransformationMatrix"* nonnull %2) #6
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %3) #6
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink24MatrixTransformOperation23IsIdentityOrTranslationEv(%"class.blink::MatrixTransformOperation"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::MatrixTransformOperation", %"class.blink::MatrixTransformOperation"* %0, i64 0, i32 1
  %3 = bitcast double* %2 to <4 x double>*
  %4 = load <4 x double>, <4 x double>* %3, align 8, !noalias !5
  %5 = fcmp oeq <4 x double> %4, <double 1.000000e+00, double 0.000000e+00, double 0.000000e+00, double 1.000000e+00>
  %6 = shufflevector <4 x i1> %5, <4 x i1> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %7 = and <4 x i1> %5, %6
  %8 = shufflevector <4 x i1> %7, <4 x i1> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %9 = and <4 x i1> %7, %8
  %10 = extractelement <4 x i1> %9, i32 0
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18TransformOperation24HasNonTrivial3DComponentEv(%"class.blink::TransformOperation"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::TransformOperation"* %0 to i32 (%"class.blink::TransformOperation"*)***
  %3 = load i32 (%"class.blink::TransformOperation"*)**, i32 (%"class.blink::TransformOperation"*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %3, i64 7
  %5 = load i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %4, align 8
  %6 = tail call i32 %5(%"class.blink::TransformOperation"* %0) #6
  %7 = add i32 %6, -11
  %8 = icmp ult i32 %7, 10
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink18TransformOperation19BoxSizeDependenciesEv(%"class.blink::TransformOperation"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18TransformOperationD2Ev(%"class.blink::TransformOperation"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

declare dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8MultiplyERKS0_(%"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"* dereferenceable(128)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink20TransformationMatrix24Preserves2dAxisAlignmentEv(%"class.blink::TransformationMatrix"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK5blink24MatrixTransformOperation6MatrixEv: argument 0"}
!4 = distinct !{!4, !"_ZNK5blink24MatrixTransformOperation6MatrixEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5blink24MatrixTransformOperation6MatrixEv: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink24MatrixTransformOperation6MatrixEv"}
