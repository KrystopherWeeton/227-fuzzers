; ModuleID = '../../base/strings/string_split.cc'
source_filename = "../../base/strings/string_split.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"class.std::__1::basic_string.9"*, %"class.std::__1::basic_string.9"*, %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::basic_string.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.12 }
%union.anon.12 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::basic_string.9"* }
%"class.base::BasicStringPiece.6" = type { i16*, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.13 }
%struct.anon.13 = type { %"struct.std::__1::__padding.14", i8 }
%"struct.std::__1::__padding.14" = type { [1 x i8] }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.base::BasicStringPiece"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"class.base::BasicStringPiece.6"*, %"class.base::BasicStringPiece.6"*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.base::BasicStringPiece.6"* }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.39" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::pair"* }

$_ZNSt3__16vectorINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS5_IS8_EEE7reserveEm = comdat any

$_ZN4base8internal23SplitStringUsingSubstrTINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_16BasicStringPieceIDsS5_EEDsEENS2_6vectorIT_NS6_ISC_EEEET0_SF_NS_18WhitespaceHandlingENS_11SplitResultE = comdat any

$_ZN4base8internal23SplitStringUsingSubstrTINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_16BasicStringPieceIcS5_EEcEENS2_6vectorIT_NS6_ISC_EEEET0_SF_NS_18WhitespaceHandlingENS_11SplitResultE = comdat any

$_ZN4base8internal23SplitStringUsingSubstrTINS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES6_DsEENS3_6vectorIT_NS3_9allocatorIS8_EEEET0_SC_NS_18WhitespaceHandlingENS_11SplitResultE = comdat any

$_ZN4base8internal23SplitStringUsingSubstrTINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_cEENS3_6vectorIT_NS3_9allocatorIS8_EEEET0_SC_NS_18WhitespaceHandlingENS_11SplitResultE = comdat any

$_ZNSt3__16vectorINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS5_IS8_EEE8__appendEm = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJRN4base16BasicStringPieceIcS3_EEEEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE24__emplace_back_slow_pathIJRN4base16BasicStringPieceIDsS3_EEEEEvDpOT_ = comdat any

@_ZN4base16kWhitespaceASCIIE = external constant [0 x i8], align 1
@_ZN4base16kWhitespaceUTF16E = external constant [0 x i16], align 2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* noalias sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #0 {
  %8 = alloca %"class.base::BasicStringPiece", align 8
  %9 = alloca %"class.base::BasicStringPiece", align 8
  %10 = bitcast %"class.base::BasicStringPiece"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10)
  %11 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 0
  store i8* %1, i8** %11, align 8, !noalias !2
  %12 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 1
  store i64 %2, i64* %12, align 8, !noalias !2
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #10, !alias.scope !2
  %16 = icmp eq i64 %2, 0
  br i1 %16, label %90, label %17

17:                                               ; preds = %7
  %18 = bitcast %"class.base::BasicStringPiece"* %9 to i8*
  %19 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 0
  %20 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 1
  %21 = icmp eq i32 %5, 1
  %22 = icmp ne i32 %6, 0
  %23 = bitcast %"class.std::__1::basic_string"** %13 to i64*
  br label %24

24:                                               ; preds = %87, %17
  %25 = phi i64 [ %2, %17 ], [ %89, %87 ]
  %26 = phi i8* [ %1, %17 ], [ %88, %87 ]
  %27 = phi i64 [ 0, %17 ], [ %43, %87 ]
  %28 = call i64 @_ZN4base8internal13find_first_ofENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8* %26, i64 %25, i8* %3, i64 %4, i64 %27) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #10, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 16, i1 false) #10, !noalias !2
  %29 = icmp eq i64 %28, -1
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %8, i64 %27, i64 -1) #10
  %32 = extractvalue { i8*, i64 } %31, 0
  %33 = extractvalue { i8*, i64 } %31, 1
  store i8* %32, i8** %19, align 8, !noalias !2
  store i64 %33, i64* %20, align 8, !noalias !2
  br label %40

34:                                               ; preds = %24
  %35 = sub i64 %28, %27
  %36 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %8, i64 %27, i64 %35) #10
  %37 = extractvalue { i8*, i64 } %36, 0
  %38 = extractvalue { i8*, i64 } %36, 1
  store i8* %37, i8** %19, align 8, !noalias !2
  store i64 %38, i64* %20, align 8, !noalias !2
  %39 = add nuw i64 %28, 1
  br label %40

40:                                               ; preds = %34, %30
  %41 = phi i64 [ %33, %30 ], [ %38, %34 ]
  %42 = phi i8* [ %32, %30 ], [ %37, %34 ]
  %43 = phi i64 [ -1, %30 ], [ %39, %34 ]
  br i1 %21, label %44, label %49

44:                                               ; preds = %40
  %45 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base16kWhitespaceASCIIE, i64 0, i64 0)) #10
  %46 = call { i8*, i64 } @_ZN4base10TrimStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_13TrimPositionsE(i8* %42, i64 %41, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base16kWhitespaceASCIIE, i64 0, i64 0), i64 %45, i32 3) #10
  %47 = extractvalue { i8*, i64 } %46, 0
  %48 = extractvalue { i8*, i64 } %46, 1
  store i8* %47, i8** %19, align 8, !noalias !2
  store i64 %48, i64* %20, align 8, !noalias !2
  br label %49

49:                                               ; preds = %44, %40
  %50 = phi i8* [ %47, %44 ], [ %42, %40 ]
  %51 = phi i64 [ %48, %44 ], [ %41, %40 ]
  %52 = icmp eq i64 %51, 0
  %53 = and i1 %22, %52
  br i1 %53, label %85, label %54

54:                                               ; preds = %49
  %55 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8, !alias.scope !2
  %56 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %14, align 8, !alias.scope !2
  %57 = icmp ult %"class.std::__1::basic_string"* %55, %56
  br i1 %57, label %58, label %84

58:                                               ; preds = %54
  %59 = icmp ugt i64 %51, -17
  br i1 %59, label %60, label %62

60:                                               ; preds = %58
  %61 = bitcast %"class.std::__1::basic_string"* %55 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %61) #11
  unreachable

62:                                               ; preds = %58
  %63 = icmp ult i64 %51, 23
  br i1 %63, label %72, label %64

64:                                               ; preds = %62
  %65 = add nuw i64 %51, 16
  %66 = and i64 %65, -16
  %67 = call i8* @_Znwm(i64 %66) #12
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %67, i8** %68, align 8, !alias.scope !5
  %69 = or i64 %66, -9223372036854775808
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %69, i64* %70, align 8, !alias.scope !5
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %51, i64* %71, align 8, !alias.scope !5
  br label %77

72:                                               ; preds = %62
  %73 = trunc i64 %51 to i8
  %74 = bitcast %"class.std::__1::basic_string"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  store i8 %73, i8* %75, align 1, !alias.scope !5
  %76 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  br i1 %52, label %79, label %77

77:                                               ; preds = %72, %64
  %78 = phi i8* [ %67, %64 ], [ %76, %72 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %78, i8* align 1 %50, i64 %51, i1 false) #10
  br label %79

79:                                               ; preds = %77, %72
  %80 = phi i8* [ %76, %72 ], [ %78, %77 ]
  %81 = getelementptr inbounds i8, i8* %80, i64 %51
  store i8 0, i8* %81, align 1
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 1
  %83 = ptrtoint %"class.std::__1::basic_string"* %82 to i64
  store i64 %83, i64* %23, align 8, !alias.scope !2
  br label %85

84:                                               ; preds = %54
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJRN4base16BasicStringPieceIcS3_EEEEEvDpOT_(%"class.std::__1::vector"* %0, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %9) #10
  br label %85

85:                                               ; preds = %84, %79, %49
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #10, !noalias !2
  %86 = icmp eq i64 %43, -1
  br i1 %86, label %90, label %87

87:                                               ; preds = %85
  %88 = load i8*, i8** %11, align 8, !noalias !2
  %89 = load i64, i64* %12, align 8, !noalias !2
  br label %24

90:                                               ; preds = %85, %7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11SplitStringENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.7"* noalias sret, i16*, i64, i16*, i64, i32, i32) local_unnamed_addr #0 {
  %8 = alloca %"class.base::BasicStringPiece.6", align 8
  %9 = alloca %"class.base::BasicStringPiece.6", align 8
  %10 = bitcast %"class.base::BasicStringPiece.6"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10)
  %11 = getelementptr inbounds %"class.base::BasicStringPiece.6", %"class.base::BasicStringPiece.6"* %8, i64 0, i32 0
  store i16* %1, i16** %11, align 8, !noalias !8
  %12 = getelementptr inbounds %"class.base::BasicStringPiece.6", %"class.base::BasicStringPiece.6"* %8, i64 0, i32 1
  store i64 %2, i64* %12, align 8, !noalias !8
  %13 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.std::__1::vector.7"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #10, !alias.scope !8
  %16 = icmp eq i64 %2, 0
  br i1 %16, label %247, label %17

17:                                               ; preds = %7
  %18 = bitcast %"class.base::BasicStringPiece.6"* %9 to i8*
  %19 = getelementptr inbounds %"class.base::BasicStringPiece.6", %"class.base::BasicStringPiece.6"* %9, i64 0, i32 0
  %20 = getelementptr inbounds %"class.base::BasicStringPiece.6", %"class.base::BasicStringPiece.6"* %9, i64 0, i32 1
  %21 = icmp eq i32 %5, 1
  %22 = icmp ne i32 %6, 0
  %23 = bitcast %"class.std::__1::basic_string.9"** %13 to i64*
  br label %24

24:                                               ; preds = %244, %17
  %25 = phi i64 [ %2, %17 ], [ %246, %244 ]
  %26 = phi i16* [ %1, %17 ], [ %245, %244 ]
  %27 = phi i64 [ 0, %17 ], [ %43, %244 ]
  %28 = call i64 @_ZN4base8internal13find_first_ofENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES5_m(i16* %26, i64 %25, i16* %3, i64 %4, i64 %27) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #10, !noalias !8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 16, i1 false) #10, !noalias !8
  %29 = icmp eq i64 %28, -1
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = call { i16*, i64 } @_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEE6substrEmm(%"class.base::BasicStringPiece.6"* nonnull %8, i64 %27, i64 -1) #10
  %32 = extractvalue { i16*, i64 } %31, 0
  %33 = extractvalue { i16*, i64 } %31, 1
  store i16* %32, i16** %19, align 8, !noalias !8
  store i64 %33, i64* %20, align 8, !noalias !8
  br label %40

34:                                               ; preds = %24
  %35 = sub i64 %28, %27
  %36 = call { i16*, i64 } @_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEE6substrEmm(%"class.base::BasicStringPiece.6"* nonnull %8, i64 %27, i64 %35) #10
  %37 = extractvalue { i16*, i64 } %36, 0
  %38 = extractvalue { i16*, i64 } %36, 1
  store i16* %37, i16** %19, align 8, !noalias !8
  store i64 %38, i64* %20, align 8, !noalias !8
  %39 = add nuw i64 %28, 1
  br label %40

40:                                               ; preds = %34, %30
  %41 = phi i64 [ %33, %30 ], [ %38, %34 ]
  %42 = phi i16* [ %32, %30 ], [ %37, %34 ]
  %43 = phi i64 [ -1, %30 ], [ %39, %34 ]
  br i1 %21, label %44, label %59

44:                                               ; preds = %40
  %45 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), align 2
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %54, label %47

47:                                               ; preds = %44, %47
  %48 = phi i64 [ %50, %47 ], [ 0, %44 ]
  %49 = phi i16* [ %51, %47 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), %44 ]
  %50 = add i64 %48, 1
  %51 = getelementptr inbounds i16, i16* %49, i64 1
  %52 = load i16, i16* %51, align 2
  %53 = icmp eq i16 %52, 0
  br i1 %53, label %54, label %47

54:                                               ; preds = %47, %44
  %55 = phi i64 [ 0, %44 ], [ %50, %47 ]
  %56 = call { i16*, i64 } @_ZN4base10TrimStringENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_13TrimPositionsE(i16* %42, i64 %41, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), i64 %55, i32 3) #10
  %57 = extractvalue { i16*, i64 } %56, 0
  %58 = extractvalue { i16*, i64 } %56, 1
  store i16* %57, i16** %19, align 8, !noalias !8
  store i64 %58, i64* %20, align 8, !noalias !8
  br label %59

59:                                               ; preds = %54, %40
  %60 = phi i16* [ %57, %54 ], [ %42, %40 ]
  %61 = phi i64 [ %58, %54 ], [ %41, %40 ]
  %62 = icmp eq i64 %61, 0
  %63 = and i1 %22, %62
  br i1 %63, label %242, label %64

64:                                               ; preds = %59
  %65 = load %"class.std::__1::basic_string.9"*, %"class.std::__1::basic_string.9"** %13, align 8, !alias.scope !8
  %66 = load %"class.std::__1::basic_string.9"*, %"class.std::__1::basic_string.9"** %14, align 8, !alias.scope !8
  %67 = icmp ult %"class.std::__1::basic_string.9"* %65, %66
  br i1 %67, label %68, label %241

68:                                               ; preds = %64
  %69 = icmp ugt i64 %61, 9223372036854775791
  br i1 %69, label %70, label %72

70:                                               ; preds = %68
  %71 = bitcast %"class.std::__1::basic_string.9"* %65 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %71) #11
  unreachable

72:                                               ; preds = %68
  %73 = icmp ult i64 %61, 11
  br i1 %73, label %87, label %74

74:                                               ; preds = %72
  %75 = add nuw nsw i64 %61, 8
  %76 = and i64 %75, -8
  %77 = icmp slt i64 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %74
  call void @abort() #11
  unreachable

79:                                               ; preds = %74
  %80 = shl i64 %76, 1
  %81 = call i8* @_Znwm(i64 %80) #12
  %82 = bitcast i8* %81 to i16*
  %83 = bitcast %"class.std::__1::basic_string.9"* %65 to i8**
  store i8* %81, i8** %83, align 8, !alias.scope !11
  %84 = or i64 %76, -9223372036854775808
  %85 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %84, i64* %85, align 8, !alias.scope !11
  %86 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %61, i64* %86, align 8, !alias.scope !11
  br label %92

87:                                               ; preds = %72
  %88 = trunc i64 %61 to i8
  %89 = bitcast %"class.std::__1::basic_string.9"* %65 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %89, i64 0, i32 1, i32 1
  store i8 %88, i8* %90, align 1, !alias.scope !11
  %91 = bitcast %"class.std::__1::basic_string.9"* %65 to i16*
  br i1 %62, label %236, label %92

92:                                               ; preds = %87, %79
  %93 = phi i16* [ %82, %79 ], [ %91, %87 ]
  %94 = icmp ult i64 %61, 16
  br i1 %94, label %183, label %95

95:                                               ; preds = %92
  %96 = getelementptr i16, i16* %93, i64 %61
  %97 = getelementptr i16, i16* %60, i64 %61
  %98 = icmp ult i16* %93, %97
  %99 = icmp ult i16* %60, %96
  %100 = and i1 %98, %99
  br i1 %100, label %183, label %101

101:                                              ; preds = %95
  %102 = and i64 %61, -16
  %103 = sub i64 %61, %102
  %104 = getelementptr i16, i16* %60, i64 %102
  %105 = getelementptr i16, i16* %93, i64 %102
  %106 = add i64 %102, -16
  %107 = lshr exact i64 %106, 4
  %108 = add nuw nsw i64 %107, 1
  %109 = and i64 %108, 3
  %110 = icmp ult i64 %106, 48
  br i1 %110, label %162, label %111

111:                                              ; preds = %101
  %112 = sub nsw i64 %108, %109
  br label %113

113:                                              ; preds = %113, %111
  %114 = phi i64 [ 0, %111 ], [ %159, %113 ]
  %115 = phi i64 [ %112, %111 ], [ %160, %113 ]
  %116 = getelementptr i16, i16* %60, i64 %114
  %117 = getelementptr i16, i16* %93, i64 %114
  %118 = bitcast i16* %116 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 2, !alias.scope !14
  %120 = getelementptr i16, i16* %116, i64 8
  %121 = bitcast i16* %120 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !14
  %123 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %119, <8 x i16>* %123, align 2, !alias.scope !17, !noalias !14
  %124 = getelementptr i16, i16* %117, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %125, align 2, !alias.scope !17, !noalias !14
  %126 = or i64 %114, 16
  %127 = getelementptr i16, i16* %60, i64 %126
  %128 = getelementptr i16, i16* %93, i64 %126
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !14
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !14
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !17, !noalias !14
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !17, !noalias !14
  %137 = or i64 %114, 32
  %138 = getelementptr i16, i16* %60, i64 %137
  %139 = getelementptr i16, i16* %93, i64 %137
  %140 = bitcast i16* %138 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !14
  %142 = getelementptr i16, i16* %138, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !14
  %145 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %145, align 2, !alias.scope !17, !noalias !14
  %146 = getelementptr i16, i16* %139, i64 8
  %147 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %147, align 2, !alias.scope !17, !noalias !14
  %148 = or i64 %114, 48
  %149 = getelementptr i16, i16* %60, i64 %148
  %150 = getelementptr i16, i16* %93, i64 %148
  %151 = bitcast i16* %149 to <8 x i16>*
  %152 = load <8 x i16>, <8 x i16>* %151, align 2, !alias.scope !14
  %153 = getelementptr i16, i16* %149, i64 8
  %154 = bitcast i16* %153 to <8 x i16>*
  %155 = load <8 x i16>, <8 x i16>* %154, align 2, !alias.scope !14
  %156 = bitcast i16* %150 to <8 x i16>*
  store <8 x i16> %152, <8 x i16>* %156, align 2, !alias.scope !17, !noalias !14
  %157 = getelementptr i16, i16* %150, i64 8
  %158 = bitcast i16* %157 to <8 x i16>*
  store <8 x i16> %155, <8 x i16>* %158, align 2, !alias.scope !17, !noalias !14
  %159 = add i64 %114, 64
  %160 = add i64 %115, -4
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %113, !llvm.loop !19

162:                                              ; preds = %113, %101
  %163 = phi i64 [ 0, %101 ], [ %159, %113 ]
  %164 = icmp eq i64 %109, 0
  br i1 %164, label %181, label %165

165:                                              ; preds = %162, %165
  %166 = phi i64 [ %178, %165 ], [ %163, %162 ]
  %167 = phi i64 [ %179, %165 ], [ %109, %162 ]
  %168 = getelementptr i16, i16* %60, i64 %166
  %169 = getelementptr i16, i16* %93, i64 %166
  %170 = bitcast i16* %168 to <8 x i16>*
  %171 = load <8 x i16>, <8 x i16>* %170, align 2, !alias.scope !14
  %172 = getelementptr i16, i16* %168, i64 8
  %173 = bitcast i16* %172 to <8 x i16>*
  %174 = load <8 x i16>, <8 x i16>* %173, align 2, !alias.scope !14
  %175 = bitcast i16* %169 to <8 x i16>*
  store <8 x i16> %171, <8 x i16>* %175, align 2, !alias.scope !17, !noalias !14
  %176 = getelementptr i16, i16* %169, i64 8
  %177 = bitcast i16* %176 to <8 x i16>*
  store <8 x i16> %174, <8 x i16>* %177, align 2, !alias.scope !17, !noalias !14
  %178 = add i64 %166, 16
  %179 = add i64 %167, -1
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %165, !llvm.loop !21

181:                                              ; preds = %165, %162
  %182 = icmp eq i64 %61, %102
  br i1 %182, label %236, label %183

183:                                              ; preds = %181, %95, %92
  %184 = phi i64 [ %61, %95 ], [ %61, %92 ], [ %103, %181 ]
  %185 = phi i16* [ %60, %95 ], [ %60, %92 ], [ %104, %181 ]
  %186 = phi i16* [ %93, %95 ], [ %93, %92 ], [ %105, %181 ]
  %187 = add i64 %184, -1
  %188 = and i64 %184, 7
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %201, label %190

190:                                              ; preds = %183, %190
  %191 = phi i64 [ %196, %190 ], [ %184, %183 ]
  %192 = phi i16* [ %198, %190 ], [ %185, %183 ]
  %193 = phi i16* [ %197, %190 ], [ %186, %183 ]
  %194 = phi i64 [ %199, %190 ], [ %188, %183 ]
  %195 = load i16, i16* %192, align 2
  store i16 %195, i16* %193, align 2
  %196 = add i64 %191, -1
  %197 = getelementptr inbounds i16, i16* %193, i64 1
  %198 = getelementptr inbounds i16, i16* %192, i64 1
  %199 = add i64 %194, -1
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %201, label %190, !llvm.loop !23

201:                                              ; preds = %190, %183
  %202 = phi i64 [ %184, %183 ], [ %196, %190 ]
  %203 = phi i16* [ %185, %183 ], [ %198, %190 ]
  %204 = phi i16* [ %186, %183 ], [ %197, %190 ]
  %205 = icmp ult i64 %187, 7
  br i1 %205, label %236, label %206

206:                                              ; preds = %201, %206
  %207 = phi i64 [ %232, %206 ], [ %202, %201 ]
  %208 = phi i16* [ %234, %206 ], [ %203, %201 ]
  %209 = phi i16* [ %233, %206 ], [ %204, %201 ]
  %210 = load i16, i16* %208, align 2
  store i16 %210, i16* %209, align 2
  %211 = getelementptr inbounds i16, i16* %209, i64 1
  %212 = getelementptr inbounds i16, i16* %208, i64 1
  %213 = load i16, i16* %212, align 2
  store i16 %213, i16* %211, align 2
  %214 = getelementptr inbounds i16, i16* %209, i64 2
  %215 = getelementptr inbounds i16, i16* %208, i64 2
  %216 = load i16, i16* %215, align 2
  store i16 %216, i16* %214, align 2
  %217 = getelementptr inbounds i16, i16* %209, i64 3
  %218 = getelementptr inbounds i16, i16* %208, i64 3
  %219 = load i16, i16* %218, align 2
  store i16 %219, i16* %217, align 2
  %220 = getelementptr inbounds i16, i16* %209, i64 4
  %221 = getelementptr inbounds i16, i16* %208, i64 4
  %222 = load i16, i16* %221, align 2
  store i16 %222, i16* %220, align 2
  %223 = getelementptr inbounds i16, i16* %209, i64 5
  %224 = getelementptr inbounds i16, i16* %208, i64 5
  %225 = load i16, i16* %224, align 2
  store i16 %225, i16* %223, align 2
  %226 = getelementptr inbounds i16, i16* %209, i64 6
  %227 = getelementptr inbounds i16, i16* %208, i64 6
  %228 = load i16, i16* %227, align 2
  store i16 %228, i16* %226, align 2
  %229 = getelementptr inbounds i16, i16* %209, i64 7
  %230 = getelementptr inbounds i16, i16* %208, i64 7
  %231 = load i16, i16* %230, align 2
  store i16 %231, i16* %229, align 2
  %232 = add i64 %207, -8
  %233 = getelementptr inbounds i16, i16* %209, i64 8
  %234 = getelementptr inbounds i16, i16* %208, i64 8
  %235 = icmp eq i64 %232, 0
  br i1 %235, label %236, label %206, !llvm.loop !24

236:                                              ; preds = %201, %206, %181, %87
  %237 = phi i16* [ %91, %87 ], [ %93, %181 ], [ %93, %206 ], [ %93, %201 ]
  %238 = getelementptr inbounds i16, i16* %237, i64 %61
  store i16 0, i16* %238, align 2
  %239 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %65, i64 1
  %240 = ptrtoint %"class.std::__1::basic_string.9"* %239 to i64
  store i64 %240, i64* %23, align 8, !alias.scope !8
  br label %242

241:                                              ; preds = %64
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE24__emplace_back_slow_pathIJRN4base16BasicStringPieceIDsS3_EEEEEvDpOT_(%"class.std::__1::vector.7"* %0, %"class.base::BasicStringPiece.6"* nonnull dereferenceable(16) %9) #10
  br label %242

242:                                              ; preds = %241, %236, %59
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #10, !noalias !8
  %243 = icmp eq i64 %43, -1
  br i1 %243, label %247, label %244

244:                                              ; preds = %242
  %245 = load i16*, i16** %11, align 8, !noalias !8
  %246 = load i64, i64* %12, align 8, !noalias !8
  br label %24

247:                                              ; preds = %242, %7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.23"* noalias sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #0 {
  %8 = alloca %"class.base::BasicStringPiece", align 8
  %9 = bitcast %"class.base::BasicStringPiece"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9)
  %10 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 0
  store i8* %1, i8** %10, align 8, !noalias !25
  %11 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 1
  store i64 %2, i64* %11, align 8, !noalias !25
  %12 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.std::__1::vector.23"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #10, !alias.scope !25
  %15 = icmp eq i64 %2, 0
  br i1 %15, label %112, label %16

16:                                               ; preds = %7
  %17 = icmp eq i32 %5, 1
  %18 = icmp ne i32 %6, 0
  %19 = bitcast %"class.base::BasicStringPiece"** %12 to i64*
  %20 = bitcast %"class.std::__1::vector.23"* %0 to i64*
  %21 = bitcast %"class.base::BasicStringPiece"** %13 to i64*
  br label %22

22:                                               ; preds = %109, %16
  %23 = phi i64 [ %2, %16 ], [ %111, %109 ]
  %24 = phi i8* [ %1, %16 ], [ %110, %109 ]
  %25 = phi i64 [ 0, %16 ], [ %41, %109 ]
  %26 = call i64 @_ZN4base8internal13find_first_ofENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8* %24, i64 %23, i8* %3, i64 %4, i64 %25) #10, !noalias !25
  %27 = icmp eq i64 %26, -1
  br i1 %27, label %28, label %32

28:                                               ; preds = %22
  %29 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %8, i64 %25, i64 -1) #10
  %30 = extractvalue { i8*, i64 } %29, 0
  %31 = extractvalue { i8*, i64 } %29, 1
  br label %38

32:                                               ; preds = %22
  %33 = sub i64 %26, %25
  %34 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %8, i64 %25, i64 %33) #10
  %35 = extractvalue { i8*, i64 } %34, 0
  %36 = extractvalue { i8*, i64 } %34, 1
  %37 = add nuw i64 %26, 1
  br label %38

38:                                               ; preds = %32, %28
  %39 = phi i8* [ %30, %28 ], [ %35, %32 ]
  %40 = phi i64 [ %31, %28 ], [ %36, %32 ]
  %41 = phi i64 [ -1, %28 ], [ %37, %32 ]
  br i1 %17, label %42, label %47

42:                                               ; preds = %38
  %43 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base16kWhitespaceASCIIE, i64 0, i64 0)) #10
  %44 = call { i8*, i64 } @_ZN4base10TrimStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_13TrimPositionsE(i8* %39, i64 %40, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base16kWhitespaceASCIIE, i64 0, i64 0), i64 %43, i32 3) #10
  %45 = extractvalue { i8*, i64 } %44, 0
  %46 = extractvalue { i8*, i64 } %44, 1
  br label %47

47:                                               ; preds = %42, %38
  %48 = phi i8* [ %45, %42 ], [ %39, %38 ]
  %49 = phi i64 [ %46, %42 ], [ %40, %38 ]
  %50 = icmp eq i64 %49, 0
  %51 = and i1 %18, %50
  br i1 %51, label %107, label %52

52:                                               ; preds = %47
  %53 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %12, align 8, !alias.scope !25
  %54 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %13, align 8, !alias.scope !25
  %55 = icmp ult %"class.base::BasicStringPiece"* %53, %54
  %56 = ptrtoint %"class.base::BasicStringPiece"* %54 to i64
  br i1 %55, label %57, label %62

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %53, i64 0, i32 0
  store i8* %48, i8** %58, align 8
  %59 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %53, i64 0, i32 1
  store i64 %49, i64* %59, align 8
  %60 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %53, i64 1
  %61 = ptrtoint %"class.base::BasicStringPiece"* %60 to i64
  store i64 %61, i64* %19, align 8, !alias.scope !25
  br label %107

62:                                               ; preds = %52
  %63 = ptrtoint %"class.base::BasicStringPiece"* %53 to i64
  %64 = load i64, i64* %20, align 8, !alias.scope !25
  %65 = sub i64 %63, %64
  %66 = ashr exact i64 %65, 4
  %67 = add nsw i64 %66, 1
  %68 = icmp ugt i64 %67, 1152921504606846975
  br i1 %68, label %69, label %71

69:                                               ; preds = %62
  %70 = bitcast %"class.std::__1::vector.23"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #11
  unreachable

71:                                               ; preds = %62
  %72 = sub i64 %56, %64
  %73 = ashr exact i64 %72, 4
  %74 = icmp ult i64 %73, 576460752303423487
  br i1 %74, label %75, label %83

75:                                               ; preds = %71
  %76 = ashr exact i64 %72, 3
  %77 = icmp ult i64 %76, %67
  %78 = select i1 %77, i64 %67, i64 %76
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %88, label %80

80:                                               ; preds = %75
  %81 = icmp ugt i64 %78, 1152921504606846975
  br i1 %81, label %82, label %83

82:                                               ; preds = %80
  call void @abort() #11
  unreachable

83:                                               ; preds = %80, %71
  %84 = phi i64 [ %78, %80 ], [ 1152921504606846975, %71 ]
  %85 = shl i64 %84, 4
  %86 = call i8* @_Znwm(i64 %85) #12
  %87 = bitcast i8* %86 to %"class.base::BasicStringPiece"*
  br label %88

88:                                               ; preds = %83, %75
  %89 = phi i64 [ %84, %83 ], [ 0, %75 ]
  %90 = phi i8* [ %86, %83 ], [ null, %75 ]
  %91 = phi %"class.base::BasicStringPiece"* [ %87, %83 ], [ null, %75 ]
  %92 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %91, i64 %66
  %93 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %91, i64 %89
  %94 = ptrtoint %"class.base::BasicStringPiece"* %93 to i64
  %95 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %92, i64 0, i32 0
  store i8* %48, i8** %95, align 8, !noalias !25
  %96 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %91, i64 %66, i32 1
  store i64 %49, i64* %96, align 8, !noalias !25
  %97 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %92, i64 1
  %98 = ptrtoint %"class.base::BasicStringPiece"* %97 to i64
  %99 = ptrtoint %"class.base::BasicStringPiece"* %91 to i64
  %100 = icmp sgt i64 %65, 0
  br i1 %100, label %101, label %103

101:                                              ; preds = %88
  %102 = inttoptr i64 %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %102, i64 %65, i1 false) #10
  br label %103

103:                                              ; preds = %101, %88
  store i64 %99, i64* %20, align 8, !alias.scope !25
  store i64 %98, i64* %19, align 8, !alias.scope !25
  store i64 %94, i64* %21, align 8, !alias.scope !25
  %104 = icmp eq i64 %64, 0
  br i1 %104, label %107, label %105

105:                                              ; preds = %103
  %106 = inttoptr i64 %64 to i8*
  call void @_ZdlPv(i8* %106) #12
  br label %107

107:                                              ; preds = %105, %103, %57, %47
  %108 = icmp eq i64 %41, -1
  br i1 %108, label %112, label %109

109:                                              ; preds = %107
  %110 = load i8*, i8** %10, align 8, !noalias !25
  %111 = load i64, i64* %11, align 8, !noalias !25
  br label %22

112:                                              ; preds = %107, %7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.30"* noalias sret, i16*, i64, i16*, i64, i32, i32) local_unnamed_addr #0 {
  %8 = alloca %"class.base::BasicStringPiece.6", align 8
  %9 = bitcast %"class.base::BasicStringPiece.6"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9)
  %10 = getelementptr inbounds %"class.base::BasicStringPiece.6", %"class.base::BasicStringPiece.6"* %8, i64 0, i32 0
  store i16* %1, i16** %10, align 8, !noalias !28
  %11 = getelementptr inbounds %"class.base::BasicStringPiece.6", %"class.base::BasicStringPiece.6"* %8, i64 0, i32 1
  store i64 %2, i64* %11, align 8, !noalias !28
  %12 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %0, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.std::__1::vector.30"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #10, !alias.scope !28
  %15 = icmp eq i64 %2, 0
  br i1 %15, label %122, label %16

16:                                               ; preds = %7
  %17 = icmp eq i32 %5, 1
  %18 = icmp ne i32 %6, 0
  %19 = bitcast %"class.base::BasicStringPiece.6"** %12 to i64*
  %20 = bitcast %"class.std::__1::vector.30"* %0 to i64*
  %21 = bitcast %"class.base::BasicStringPiece.6"** %13 to i64*
  br label %22

22:                                               ; preds = %119, %16
  %23 = phi i64 [ %2, %16 ], [ %121, %119 ]
  %24 = phi i16* [ %1, %16 ], [ %120, %119 ]
  %25 = phi i64 [ 0, %16 ], [ %41, %119 ]
  %26 = call i64 @_ZN4base8internal13find_first_ofENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES5_m(i16* %24, i64 %23, i16* %3, i64 %4, i64 %25) #10, !noalias !28
  %27 = icmp eq i64 %26, -1
  br i1 %27, label %28, label %32

28:                                               ; preds = %22
  %29 = call { i16*, i64 } @_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEE6substrEmm(%"class.base::BasicStringPiece.6"* nonnull %8, i64 %25, i64 -1) #10
  %30 = extractvalue { i16*, i64 } %29, 0
  %31 = extractvalue { i16*, i64 } %29, 1
  br label %38

32:                                               ; preds = %22
  %33 = sub i64 %26, %25
  %34 = call { i16*, i64 } @_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEE6substrEmm(%"class.base::BasicStringPiece.6"* nonnull %8, i64 %25, i64 %33) #10
  %35 = extractvalue { i16*, i64 } %34, 0
  %36 = extractvalue { i16*, i64 } %34, 1
  %37 = add nuw i64 %26, 1
  br label %38

38:                                               ; preds = %32, %28
  %39 = phi i16* [ %30, %28 ], [ %35, %32 ]
  %40 = phi i64 [ %31, %28 ], [ %36, %32 ]
  %41 = phi i64 [ -1, %28 ], [ %37, %32 ]
  br i1 %17, label %42, label %57

42:                                               ; preds = %38
  %43 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), align 2
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %52, label %45

45:                                               ; preds = %42, %45
  %46 = phi i64 [ %48, %45 ], [ 0, %42 ]
  %47 = phi i16* [ %49, %45 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), %42 ]
  %48 = add i64 %46, 1
  %49 = getelementptr inbounds i16, i16* %47, i64 1
  %50 = load i16, i16* %49, align 2
  %51 = icmp eq i16 %50, 0
  br i1 %51, label %52, label %45

52:                                               ; preds = %45, %42
  %53 = phi i64 [ 0, %42 ], [ %48, %45 ]
  %54 = call { i16*, i64 } @_ZN4base10TrimStringENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_13TrimPositionsE(i16* %39, i64 %40, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), i64 %53, i32 3) #10
  %55 = extractvalue { i16*, i64 } %54, 0
  %56 = extractvalue { i16*, i64 } %54, 1
  br label %57

57:                                               ; preds = %52, %38
  %58 = phi i16* [ %55, %52 ], [ %39, %38 ]
  %59 = phi i64 [ %56, %52 ], [ %40, %38 ]
  %60 = icmp eq i64 %59, 0
  %61 = and i1 %18, %60
  br i1 %61, label %117, label %62

62:                                               ; preds = %57
  %63 = load %"class.base::BasicStringPiece.6"*, %"class.base::BasicStringPiece.6"** %12, align 8, !alias.scope !28
  %64 = load %"class.base::BasicStringPiece.6"*, %"class.base::BasicStringPiece.6"** %13, align 8, !alias.scope !28
  %65 = icmp ult %"class.base::BasicStringPiece.6"* %63, %64
  %66 = ptrtoint %"class.base::BasicStringPiece.6"* %64 to i64
  br i1 %65, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.base::BasicStringPiece.6", %"class.base::BasicStringPiece.6"* %63, i64 0, i32 0
  store i16* %58, i16** %68, align 8
  %69 = getelementptr inbounds %"class.base::BasicStringPiece.6", %"class.base::BasicStringPiece.6"* %63, i64 0, i32 1
  store i64 %59, i64* %69, align 8
  %70 = getelementptr inbounds %"class.base::BasicStringPiece.6", %"class.base::BasicStringPiece.6"* %63, i64 1
  %71 = ptrtoint %"class.base::BasicStringPiece.6"* %70 to i64
  store i64 %71, i64* %19, align 8, !alias.scope !28
  br label %117

72:                                               ; preds = %62
  %73 = ptrtoint %"class.base::BasicStringPiece.6"* %63 to i64
  %74 = load i64, i64* %20, align 8, !alias.scope !28
  %75 = sub i64 %73, %74
  %76 = ashr exact i64 %75, 4
  %77 = add nsw i64 %76, 1
  %78 = icmp ugt i64 %77, 1152921504606846975
  br i1 %78, label %79, label %81

79:                                               ; preds = %72
  %80 = bitcast %"class.std::__1::vector.30"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %80) #11
  unreachable

81:                                               ; preds = %72
  %82 = sub i64 %66, %74
  %83 = ashr exact i64 %82, 4
  %84 = icmp ult i64 %83, 576460752303423487
  br i1 %84, label %85, label %93

85:                                               ; preds = %81
  %86 = ashr exact i64 %82, 3
  %87 = icmp ult i64 %86, %77
  %88 = select i1 %87, i64 %77, i64 %86
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %98, label %90

90:                                               ; preds = %85
  %91 = icmp ugt i64 %88, 1152921504606846975
  br i1 %91, label %92, label %93

92:                                               ; preds = %90
  call void @abort() #11
  unreachable

93:                                               ; preds = %90, %81
  %94 = phi i64 [ %88, %90 ], [ 1152921504606846975, %81 ]
  %95 = shl i64 %94, 4
  %96 = call i8* @_Znwm(i64 %95) #12
  %97 = bitcast i8* %96 to %"class.base::BasicStringPiece.6"*
  br label %98

98:                                               ; preds = %93, %85
  %99 = phi i64 [ %94, %93 ], [ 0, %85 ]
  %100 = phi i8* [ %96, %93 ], [ null, %85 ]
  %101 = phi %"class.base::BasicStringPiece.6"* [ %97, %93 ], [ null, %85 ]
  %102 = getelementptr inbounds %"class.base::BasicStringPiece.6", %"class.base::BasicStringPiece.6"* %101, i64 %76
  %103 = getelementptr inbounds %"class.base::BasicStringPiece.6", %"class.base::BasicStringPiece.6"* %101, i64 %99
  %104 = ptrtoint %"class.base::BasicStringPiece.6"* %103 to i64
  %105 = getelementptr inbounds %"class.base::BasicStringPiece.6", %"class.base::BasicStringPiece.6"* %102, i64 0, i32 0
  store i16* %58, i16** %105, align 8, !noalias !28
  %106 = getelementptr inbounds %"class.base::BasicStringPiece.6", %"class.base::BasicStringPiece.6"* %101, i64 %76, i32 1
  store i64 %59, i64* %106, align 8, !noalias !28
  %107 = getelementptr inbounds %"class.base::BasicStringPiece.6", %"class.base::BasicStringPiece.6"* %102, i64 1
  %108 = ptrtoint %"class.base::BasicStringPiece.6"* %107 to i64
  %109 = ptrtoint %"class.base::BasicStringPiece.6"* %101 to i64
  %110 = icmp sgt i64 %75, 0
  br i1 %110, label %111, label %113

111:                                              ; preds = %98
  %112 = inttoptr i64 %74 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %112, i64 %75, i1 false) #10
  br label %113

113:                                              ; preds = %111, %98
  store i64 %109, i64* %20, align 8, !alias.scope !28
  store i64 %108, i64* %19, align 8, !alias.scope !28
  store i64 %104, i64* %21, align 8, !alias.scope !28
  %114 = icmp eq i64 %74, 0
  br i1 %114, label %117, label %115

115:                                              ; preds = %113
  %116 = inttoptr i64 %74 to i8*
  call void @_ZdlPv(i8* %116) #12
  br label %117

117:                                              ; preds = %115, %113, %67, %57
  %118 = icmp eq i64 %41, -1
  br i1 %118, label %122, label %119

119:                                              ; preds = %117
  %120 = load i16*, i16** %10, align 8, !noalias !28
  %121 = load i64, i64* %11, align 8, !noalias !28
  br label %22

122:                                              ; preds = %117, %7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base28SplitStringIntoKeyValuePairsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEccPNS1_6vectorINS1_4pairINS1_12basic_stringIcS3_NS1_9allocatorIcEEEESA_EENS8_ISB_EEEE(i8*, i64, i8 signext, i8 signext, %"class.std::__1::vector.37"*) local_unnamed_addr #0 {
  %6 = alloca i8, align 1
  store i8 %3, i8* %6, align 1
  %7 = call zeroext i1 @_ZN4base39SplitStringIntoKeyValuePairsUsingSubstrENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEcS4_PNS1_6vectorINS1_4pairINS1_12basic_stringIcS3_NS1_9allocatorIcEEEESA_EENS8_ISB_EEEE(i8* %0, i64 %1, i8 signext %2, i8* nonnull %6, i64 1, %"class.std::__1::vector.37"* %4)
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base39SplitStringIntoKeyValuePairsUsingSubstrENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEcS4_PNS1_6vectorINS1_4pairINS1_12basic_stringIcS3_NS1_9allocatorIcEEEESA_EENS8_ISB_EEEE(i8*, i64, i8 signext, i8*, i64, %"class.std::__1::vector.37"*) local_unnamed_addr #0 {
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.base::BasicStringPiece", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::vector.23", align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %5, i64 0, i32 0, i32 0
  %13 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %5, i64 0, i32 0, i32 1
  %15 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %14, align 8
  %16 = icmp eq %"struct.std::__1::pair"* %15, %13
  br i1 %16, label %38, label %17

17:                                               ; preds = %6, %36
  %18 = phi %"struct.std::__1::pair"* [ %19, %36 ], [ %15, %6 ]
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 -1
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 -1, i32 1
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #12
  br label %28

28:                                               ; preds = %25, %17
  %29 = bitcast %"struct.std::__1::pair"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void @_ZdlPv(i8* %35) #12
  br label %36

36:                                               ; preds = %33, %28
  %37 = icmp eq %"struct.std::__1::pair"* %19, %13
  br i1 %37, label %38, label %17

38:                                               ; preds = %36, %6
  store %"struct.std::__1::pair"* %13, %"struct.std::__1::pair"** %14, align 8
  %39 = bitcast %"class.std::__1::vector.23"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #10
  %40 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %11, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %11, i64 0, i32 0, i32 1
  %42 = bitcast %"class.std::__1::vector.23"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 24, i1 false)
  call void @_ZN4base8internal23SplitStringUsingSubstrTINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_cEENS3_6vectorIT_NS3_9allocatorIS8_EEEET0_SC_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.23"* nonnull sret %11, i8* %0, i64 %1, i8* %3, i64 %4, i32 1, i32 1) #10
  %43 = bitcast %"class.base::BasicStringPiece"** %41 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.std::__1::vector.23"* %11 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %44, %46
  %48 = ashr exact i64 %47, 4
  call void @_ZNSt3__16vectorINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS5_IS8_EEE7reserveEm(%"class.std::__1::vector.37"* %5, i64 %48)
  %49 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %40, align 8
  %50 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %41, align 8
  %51 = icmp eq %"class.base::BasicStringPiece"* %49, %50
  br i1 %51, label %76, label %52

52:                                               ; preds = %38
  %53 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  %54 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 0
  %55 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  %56 = bitcast %"struct.std::__1::pair"** %14 to i64*
  %57 = bitcast %"class.std::__1::vector.37"* %5 to i64*
  %58 = sext i8 %2 to i32
  %59 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = bitcast %"class.base::BasicStringPiece"* %9 to i8*
  %66 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 0
  %67 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 1
  %68 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  br label %86

74:                                               ; preds = %218
  %75 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %40, align 8
  br label %76

76:                                               ; preds = %74, %38
  %77 = phi %"class.base::BasicStringPiece"* [ %49, %38 ], [ %75, %74 ]
  %78 = phi i8 [ 1, %38 ], [ %219, %74 ]
  %79 = and i8 %78, 1
  %80 = icmp ne i8 %79, 0
  %81 = icmp eq %"class.base::BasicStringPiece"* %77, null
  br i1 %81, label %85, label %82

82:                                               ; preds = %76
  %83 = ptrtoint %"class.base::BasicStringPiece"* %77 to i64
  store i64 %83, i64* %43, align 8
  %84 = bitcast %"class.base::BasicStringPiece"* %77 to i8*
  call void @_ZdlPv(i8* %84) #12
  br label %85

85:                                               ; preds = %76, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #10
  ret i1 %80

86:                                               ; preds = %52, %218
  %87 = phi i8 [ 1, %52 ], [ %219, %218 ]
  %88 = phi %"class.base::BasicStringPiece"* [ %49, %52 ], [ %220, %218 ]
  %89 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %88, i64 0, i32 0
  %90 = load i8*, i8** %89, align 8
  %91 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %88, i64 0, i32 1
  %92 = load i64, i64* %91, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53)
  store i8* %90, i8** %54, align 8
  store i64 %92, i64* %55, align 8
  %93 = load i64, i64* %56, align 8
  %94 = load i64, i64* %57, align 8
  %95 = sub i64 %93, %94
  %96 = icmp eq i64 %95, -48
  %97 = inttoptr i64 %93 to %"struct.std::__1::pair"*
  br i1 %96, label %100, label %98

98:                                               ; preds = %86
  call void @_ZNSt3__16vectorINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS5_IS8_EEE8__appendEm(%"class.std::__1::vector.37"* %5, i64 1) #10
  %99 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %14, align 8
  br label %125

100:                                              ; preds = %86
  %101 = inttoptr i64 %94 to %"struct.std::__1::pair"*
  %102 = icmp eq %"struct.std::__1::pair"* %101, %97
  br i1 %102, label %124, label %103

103:                                              ; preds = %100, %122
  %104 = phi %"struct.std::__1::pair"* [ %105, %122 ], [ %97, %100 ]
  %105 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %104, i64 -1
  %106 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %104, i64 -1, i32 1
  %107 = bitcast %"class.std::__1::basic_string"* %106 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  call void @_ZdlPv(i8* %113) #12
  br label %114

114:                                              ; preds = %111, %103
  %115 = bitcast %"struct.std::__1::pair"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  %117 = load i8, i8* %116, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %119, label %122

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  call void @_ZdlPv(i8* %121) #12
  br label %122

122:                                              ; preds = %119, %114
  %123 = icmp eq %"struct.std::__1::pair"* %105, %101
  br i1 %123, label %124, label %103

124:                                              ; preds = %122, %100
  store %"struct.std::__1::pair"* %101, %"struct.std::__1::pair"** %14, align 8
  br label %125

125:                                              ; preds = %124, %98
  %126 = phi %"struct.std::__1::pair"* [ %99, %98 ], [ %101, %124 ]
  %127 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %126, i64 -1
  %128 = icmp eq i64 %92, 0
  br i1 %128, label %218, label %129

129:                                              ; preds = %125
  %130 = call i8* @memchr(i8* %90, i32 %58, i64 %92) #10
  %131 = icmp eq i8* %130, null
  br i1 %131, label %218, label %132

132:                                              ; preds = %129
  %133 = ptrtoint i8* %130 to i64
  %134 = ptrtoint i8* %90 to i64
  %135 = sub i64 %133, %134
  %136 = icmp eq i64 %135, -1
  br i1 %136, label %218, label %137

137:                                              ; preds = %132
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #10
  %138 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %7, i64 0, i64 %135) #10
  %139 = extractvalue { i8*, i64 } %138, 0
  %140 = extractvalue { i8*, i64 } %138, 1
  %141 = icmp ugt i64 %140, -17
  br i1 %141, label %142, label %144

142:                                              ; preds = %137
  %143 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %143) #11
  unreachable

144:                                              ; preds = %137
  %145 = icmp ult i64 %140, 23
  br i1 %145, label %151, label %146

146:                                              ; preds = %144
  %147 = add nuw i64 %140, 16
  %148 = and i64 %147, -16
  %149 = call i8* @_Znwm(i64 %148) #12
  store i8* %149, i8** %60, align 8, !alias.scope !31
  %150 = or i64 %148, -9223372036854775808
  store i64 %150, i64* %61, align 8, !alias.scope !31
  store i64 %140, i64* %62, align 8, !alias.scope !31
  br label %154

151:                                              ; preds = %144
  %152 = trunc i64 %140 to i8
  store i8 %152, i8* %64, align 1, !alias.scope !31
  %153 = icmp eq i64 %140, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %151, %146
  %155 = phi i8* [ %149, %146 ], [ %59, %151 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %155, i8* align 1 %139, i64 %140, i1 false) #10
  br label %156

156:                                              ; preds = %154, %151
  %157 = phi i8* [ %59, %151 ], [ %155, %154 ]
  %158 = getelementptr inbounds i8, i8* %157, i64 %140
  store i8 0, i8* %158, align 1
  %159 = bitcast %"struct.std::__1::pair"* %127 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %160 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %159, i64 0, i32 1, i32 0
  %161 = load i8, i8* %160, align 1
  %162 = icmp slt i8 %161, 0
  br i1 %162, label %163, label %166

163:                                              ; preds = %156
  %164 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %127, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load i8*, i8** %164, align 8
  call void @_ZdlPv(i8* %165) #12
  br label %166

166:                                              ; preds = %163, %156
  %167 = bitcast %"struct.std::__1::pair"* %127 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* nonnull align 8 %59, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #10
  %168 = load i64, i64* %55, align 8
  %169 = sub i64 %168, %135
  %170 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %7, i64 %135, i64 %169) #10
  %171 = extractvalue { i8*, i64 } %170, 0
  store i8* %171, i8** %66, align 8
  %172 = extractvalue { i8*, i64 } %170, 1
  store i64 %172, i64* %67, align 8
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %215, label %174

174:                                              ; preds = %166, %179
  %175 = phi i64 [ %180, %179 ], [ 0, %166 ]
  %176 = getelementptr inbounds i8, i8* %171, i64 %175
  %177 = load i8, i8* %176, align 1
  %178 = icmp eq i8 %177, %2
  br i1 %178, label %179, label %182

179:                                              ; preds = %174
  %180 = add nuw i64 %175, 1
  %181 = icmp eq i64 %180, %172
  br i1 %181, label %215, label %174

182:                                              ; preds = %174
  %183 = icmp eq i64 %175, -1
  br i1 %183, label %215, label %184

184:                                              ; preds = %182
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #10
  %185 = sub i64 %172, %175
  %186 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %9, i64 %175, i64 %185) #10
  %187 = extractvalue { i8*, i64 } %186, 0
  %188 = extractvalue { i8*, i64 } %186, 1
  %189 = icmp ugt i64 %188, -17
  br i1 %189, label %190, label %192

190:                                              ; preds = %184
  %191 = bitcast %"class.std::__1::basic_string"* %10 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %191) #11
  unreachable

192:                                              ; preds = %184
  %193 = icmp ult i64 %188, 23
  br i1 %193, label %199, label %194

194:                                              ; preds = %192
  %195 = add nuw i64 %188, 16
  %196 = and i64 %195, -16
  %197 = call i8* @_Znwm(i64 %196) #12
  store i8* %197, i8** %69, align 8, !alias.scope !34
  %198 = or i64 %196, -9223372036854775808
  store i64 %198, i64* %70, align 8, !alias.scope !34
  store i64 %188, i64* %71, align 8, !alias.scope !34
  br label %202

199:                                              ; preds = %192
  %200 = trunc i64 %188 to i8
  store i8 %200, i8* %73, align 1, !alias.scope !34
  %201 = icmp eq i64 %188, 0
  br i1 %201, label %204, label %202

202:                                              ; preds = %199, %194
  %203 = phi i8* [ %197, %194 ], [ %68, %199 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %203, i8* align 1 %187, i64 %188, i1 false) #10
  br label %204

204:                                              ; preds = %202, %199
  %205 = phi i8* [ %68, %199 ], [ %203, %202 ]
  %206 = getelementptr inbounds i8, i8* %205, i64 %188
  store i8 0, i8* %206, align 1
  %207 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %126, i64 -1, i32 1
  %208 = bitcast %"class.std::__1::basic_string"* %207 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %209 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %208, i64 0, i32 1, i32 0
  %210 = load i8, i8* %209, align 1
  %211 = icmp slt i8 %210, 0
  br i1 %211, label %212, label %216

212:                                              ; preds = %204
  %213 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %207, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = load i8*, i8** %213, align 8
  call void @_ZdlPv(i8* %214) #12
  br label %216

215:                                              ; preds = %179, %182, %166
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #10
  br label %218

216:                                              ; preds = %212, %204
  %217 = bitcast %"class.std::__1::basic_string"* %207 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %217, i8* nonnull align 8 %68, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #10
  br label %218

218:                                              ; preds = %129, %125, %132, %215, %216
  %219 = phi i8 [ %87, %216 ], [ 0, %215 ], [ 0, %132 ], [ 0, %125 ], [ 0, %129 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53)
  %220 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %88, i64 1
  %221 = icmp eq %"class.base::BasicStringPiece"* %220, %50
  br i1 %221, label %74, label %86
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27SplitStringPieceUsingSubstrENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.23"* noalias sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #0 {
  tail call void @_ZN4base8internal23SplitStringUsingSubstrTINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_cEENS3_6vectorIT_NS3_9allocatorIS8_EEEET0_SC_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.23"* sret %0, i8* %1, i64 %2, i8* %3, i64 %4, i32 %5, i32 %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS5_IS8_EEE7reserveEm(%"class.std::__1::vector.37"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.std::__1::pair"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.37"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair"*
  br i1 %10, label %12, label %78

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.std::__1::pair"** %13 to i64*
  %15 = icmp ugt i64 %1, 384307168202282325
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #11
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 48
  %21 = mul i64 %1, 48
  %22 = tail call i8* @_Znwm(i64 %21) #12
  %23 = bitcast i8* %22 to %"struct.std::__1::pair"*
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 %20
  %25 = ptrtoint %"struct.std::__1::pair"* %24 to i64
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 %1
  %27 = ptrtoint %"struct.std::__1::pair"* %26 to i64
  %28 = inttoptr i64 %18 to %"struct.std::__1::pair"*
  %29 = icmp eq %"struct.std::__1::pair"* %28, %11
  br i1 %29, label %47, label %30

30:                                               ; preds = %17, %30
  %31 = phi %"struct.std::__1::pair"* [ %33, %30 ], [ %24, %17 ]
  %32 = phi %"struct.std::__1::pair"* [ %34, %30 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %31, i64 -1
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %32, i64 -1
  %35 = bitcast %"struct.std::__1::pair"* %33 to i8*
  %36 = bitcast %"struct.std::__1::pair"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #10
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %31, i64 -1, i32 1
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %32, i64 -1, i32 1
  %39 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  %40 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #10
  %41 = icmp eq %"struct.std::__1::pair"* %34, %11
  br i1 %41, label %42, label %30

42:                                               ; preds = %30
  %43 = ptrtoint %"struct.std::__1::pair"* %33 to i64
  %44 = load i64, i64* %6, align 8
  %45 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %13, align 8
  %46 = inttoptr i64 %44 to %"struct.std::__1::pair"*
  br label %47

47:                                               ; preds = %17, %42
  %48 = phi %"struct.std::__1::pair"* [ %46, %42 ], [ %28, %17 ]
  %49 = phi %"struct.std::__1::pair"* [ %45, %42 ], [ %11, %17 ]
  %50 = phi i64 [ %43, %42 ], [ %25, %17 ]
  %51 = phi i64 [ %44, %42 ], [ %18, %17 ]
  store i64 %50, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %52 = icmp eq %"struct.std::__1::pair"* %49, %48
  br i1 %52, label %74, label %53

53:                                               ; preds = %47, %72
  %54 = phi %"struct.std::__1::pair"* [ %55, %72 ], [ %49, %47 ]
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 -1
  %56 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 -1, i32 1
  %57 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %53
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  tail call void @_ZdlPv(i8* %63) #12
  br label %64

64:                                               ; preds = %61, %53
  %65 = bitcast %"struct.std::__1::pair"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  tail call void @_ZdlPv(i8* %71) #12
  br label %72

72:                                               ; preds = %69, %64
  %73 = icmp eq %"struct.std::__1::pair"* %55, %48
  br i1 %73, label %74, label %53

74:                                               ; preds = %72, %47
  %75 = icmp eq i64 %51, 0
  br i1 %75, label %78, label %76

76:                                               ; preds = %74
  %77 = inttoptr i64 %51 to i8*
  tail call void @_ZdlPv(i8* %77) #12
  br label %78

78:                                               ; preds = %76, %74, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base22SplitStringUsingSubstrENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.7"* noalias sret, i16*, i64, i16*, i64, i32, i32) local_unnamed_addr #0 {
  tail call void @_ZN4base8internal23SplitStringUsingSubstrTINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_16BasicStringPieceIDsS5_EEDsEENS2_6vectorIT_NS6_ISC_EEEET0_SF_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.7"* sret %0, i16* %1, i64 %2, i16* %3, i64 %4, i32 %5, i32 %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal23SplitStringUsingSubstrTINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_16BasicStringPieceIDsS5_EEDsEENS2_6vectorIT_NS6_ISC_EEEET0_SF_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.7"* noalias sret, i16*, i64, i16*, i64, i32, i32) local_unnamed_addr #0 comdat {
  %8 = alloca %"class.base::BasicStringPiece.6", align 8
  %9 = alloca %"class.base::BasicStringPiece.6", align 8
  %10 = getelementptr inbounds %"class.base::BasicStringPiece.6", %"class.base::BasicStringPiece.6"* %8, i64 0, i32 0
  store i16* %1, i16** %10, align 8
  %11 = getelementptr inbounds %"class.base::BasicStringPiece.6", %"class.base::BasicStringPiece.6"* %8, i64 0, i32 1
  store i64 %2, i64* %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.std::__1::vector.7"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #10
  %15 = icmp eq i64 %4, 0
  br i1 %15, label %24, label %16

16:                                               ; preds = %7
  %17 = bitcast %"class.base::BasicStringPiece.6"* %9 to i8*
  %18 = getelementptr inbounds %"class.base::BasicStringPiece.6", %"class.base::BasicStringPiece.6"* %9, i64 0, i32 0
  %19 = getelementptr inbounds %"class.base::BasicStringPiece.6", %"class.base::BasicStringPiece.6"* %9, i64 0, i32 1
  %20 = icmp eq i32 %5, 1
  %21 = icmp ne i32 %6, 0
  %22 = bitcast %"class.std::__1::basic_string.9"** %12 to i64*
  %23 = bitcast %"class.base::BasicStringPiece.6"* %9 to i8*
  br label %25

24:                                               ; preds = %7
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE24__emplace_back_slow_pathIJRN4base16BasicStringPieceIDsS3_EEEEEvDpOT_(%"class.std::__1::vector.7"* %0, %"class.base::BasicStringPiece.6"* nonnull dereferenceable(16) %8) #10
  br label %239

25:                                               ; preds = %235, %16
  %26 = phi i64 [ %2, %16 ], [ %238, %235 ]
  %27 = phi i16* [ %1, %16 ], [ %237, %235 ]
  %28 = phi i64 [ 0, %16 ], [ %236, %235 ]
  %29 = call i64 @_ZN4base8internal4findENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES5_m(i16* %27, i64 %26, i16* %3, i64 %4, i64 %28) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #10
  %30 = icmp eq i64 %29, -1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false)
  %31 = sub i64 %29, %28
  %32 = select i1 %30, i64 -1, i64 %31
  %33 = call { i16*, i64 } @_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEE6substrEmm(%"class.base::BasicStringPiece.6"* nonnull %8, i64 %28, i64 %32)
  %34 = extractvalue { i16*, i64 } %33, 0
  store i16* %34, i16** %18, align 8
  %35 = extractvalue { i16*, i64 } %33, 1
  store i64 %35, i64* %19, align 8
  br i1 %20, label %36, label %51

36:                                               ; preds = %25
  %37 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), align 2
  %38 = icmp eq i16 %37, 0
  br i1 %38, label %46, label %39

39:                                               ; preds = %36, %39
  %40 = phi i64 [ %42, %39 ], [ 0, %36 ]
  %41 = phi i16* [ %43, %39 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), %36 ]
  %42 = add i64 %40, 1
  %43 = getelementptr inbounds i16, i16* %41, i64 1
  %44 = load i16, i16* %43, align 2
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %46, label %39

46:                                               ; preds = %39, %36
  %47 = phi i64 [ 0, %36 ], [ %42, %39 ]
  %48 = call { i16*, i64 } @_ZN4base10TrimStringENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_13TrimPositionsE(i16* %34, i64 %35, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), i64 %47, i32 3) #10
  %49 = extractvalue { i16*, i64 } %48, 0
  %50 = extractvalue { i16*, i64 } %48, 1
  store i16* %49, i16** %18, align 8
  store i64 %50, i64* %19, align 8
  br label %51

51:                                               ; preds = %46, %25
  %52 = phi i16* [ %49, %46 ], [ %34, %25 ]
  %53 = phi i64 [ %50, %46 ], [ %35, %25 ]
  %54 = icmp eq i64 %53, 0
  %55 = and i1 %21, %54
  br i1 %55, label %234, label %56

56:                                               ; preds = %51
  %57 = load %"class.std::__1::basic_string.9"*, %"class.std::__1::basic_string.9"** %12, align 8
  %58 = load %"class.std::__1::basic_string.9"*, %"class.std::__1::basic_string.9"** %13, align 8
  %59 = icmp ult %"class.std::__1::basic_string.9"* %57, %58
  br i1 %59, label %60, label %233

60:                                               ; preds = %56
  %61 = icmp ugt i64 %53, 9223372036854775791
  br i1 %61, label %62, label %64

62:                                               ; preds = %60
  %63 = bitcast %"class.std::__1::basic_string.9"* %57 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %63) #11
  unreachable

64:                                               ; preds = %60
  %65 = icmp ult i64 %53, 11
  br i1 %65, label %79, label %66

66:                                               ; preds = %64
  %67 = add nuw nsw i64 %53, 8
  %68 = and i64 %67, -8
  %69 = icmp slt i64 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %66
  call void @abort() #11
  unreachable

71:                                               ; preds = %66
  %72 = shl i64 %68, 1
  %73 = call i8* @_Znwm(i64 %72) #12
  %74 = bitcast i8* %73 to i16*
  %75 = bitcast %"class.std::__1::basic_string.9"* %57 to i8**
  store i8* %73, i8** %75, align 8, !alias.scope !37
  %76 = or i64 %68, -9223372036854775808
  %77 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %76, i64* %77, align 8, !alias.scope !37
  %78 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %53, i64* %78, align 8, !alias.scope !37
  br label %84

79:                                               ; preds = %64
  %80 = trunc i64 %53 to i8
  %81 = bitcast %"class.std::__1::basic_string.9"* %57 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %81, i64 0, i32 1, i32 1
  store i8 %80, i8* %82, align 1, !alias.scope !37
  %83 = bitcast %"class.std::__1::basic_string.9"* %57 to i16*
  br i1 %54, label %228, label %84

84:                                               ; preds = %79, %71
  %85 = phi i16* [ %74, %71 ], [ %83, %79 ]
  %86 = icmp ult i64 %53, 16
  br i1 %86, label %175, label %87

87:                                               ; preds = %84
  %88 = getelementptr i16, i16* %85, i64 %53
  %89 = getelementptr i16, i16* %52, i64 %53
  %90 = icmp ult i16* %85, %89
  %91 = icmp ult i16* %52, %88
  %92 = and i1 %90, %91
  br i1 %92, label %175, label %93

93:                                               ; preds = %87
  %94 = and i64 %53, -16
  %95 = sub i64 %53, %94
  %96 = getelementptr i16, i16* %52, i64 %94
  %97 = getelementptr i16, i16* %85, i64 %94
  %98 = add i64 %94, -16
  %99 = lshr exact i64 %98, 4
  %100 = add nuw nsw i64 %99, 1
  %101 = and i64 %100, 3
  %102 = icmp ult i64 %98, 48
  br i1 %102, label %154, label %103

103:                                              ; preds = %93
  %104 = sub nsw i64 %100, %101
  br label %105

105:                                              ; preds = %105, %103
  %106 = phi i64 [ 0, %103 ], [ %151, %105 ]
  %107 = phi i64 [ %104, %103 ], [ %152, %105 ]
  %108 = getelementptr i16, i16* %52, i64 %106
  %109 = getelementptr i16, i16* %85, i64 %106
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !40
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !40
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !43, !noalias !40
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !43, !noalias !40
  %118 = or i64 %106, 16
  %119 = getelementptr i16, i16* %52, i64 %118
  %120 = getelementptr i16, i16* %85, i64 %118
  %121 = bitcast i16* %119 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !40
  %123 = getelementptr i16, i16* %119, i64 8
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !40
  %126 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %126, align 2, !alias.scope !43, !noalias !40
  %127 = getelementptr i16, i16* %120, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %128, align 2, !alias.scope !43, !noalias !40
  %129 = or i64 %106, 32
  %130 = getelementptr i16, i16* %52, i64 %129
  %131 = getelementptr i16, i16* %85, i64 %129
  %132 = bitcast i16* %130 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !40
  %134 = getelementptr i16, i16* %130, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2, !alias.scope !40
  %137 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %137, align 2, !alias.scope !43, !noalias !40
  %138 = getelementptr i16, i16* %131, i64 8
  %139 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %136, <8 x i16>* %139, align 2, !alias.scope !43, !noalias !40
  %140 = or i64 %106, 48
  %141 = getelementptr i16, i16* %52, i64 %140
  %142 = getelementptr i16, i16* %85, i64 %140
  %143 = bitcast i16* %141 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !40
  %145 = getelementptr i16, i16* %141, i64 8
  %146 = bitcast i16* %145 to <8 x i16>*
  %147 = load <8 x i16>, <8 x i16>* %146, align 2, !alias.scope !40
  %148 = bitcast i16* %142 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %148, align 2, !alias.scope !43, !noalias !40
  %149 = getelementptr i16, i16* %142, i64 8
  %150 = bitcast i16* %149 to <8 x i16>*
  store <8 x i16> %147, <8 x i16>* %150, align 2, !alias.scope !43, !noalias !40
  %151 = add i64 %106, 64
  %152 = add i64 %107, -4
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %105, !llvm.loop !45

154:                                              ; preds = %105, %93
  %155 = phi i64 [ 0, %93 ], [ %151, %105 ]
  %156 = icmp eq i64 %101, 0
  br i1 %156, label %173, label %157

157:                                              ; preds = %154, %157
  %158 = phi i64 [ %170, %157 ], [ %155, %154 ]
  %159 = phi i64 [ %171, %157 ], [ %101, %154 ]
  %160 = getelementptr i16, i16* %52, i64 %158
  %161 = getelementptr i16, i16* %85, i64 %158
  %162 = bitcast i16* %160 to <8 x i16>*
  %163 = load <8 x i16>, <8 x i16>* %162, align 2, !alias.scope !40
  %164 = getelementptr i16, i16* %160, i64 8
  %165 = bitcast i16* %164 to <8 x i16>*
  %166 = load <8 x i16>, <8 x i16>* %165, align 2, !alias.scope !40
  %167 = bitcast i16* %161 to <8 x i16>*
  store <8 x i16> %163, <8 x i16>* %167, align 2, !alias.scope !43, !noalias !40
  %168 = getelementptr i16, i16* %161, i64 8
  %169 = bitcast i16* %168 to <8 x i16>*
  store <8 x i16> %166, <8 x i16>* %169, align 2, !alias.scope !43, !noalias !40
  %170 = add i64 %158, 16
  %171 = add i64 %159, -1
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %173, label %157, !llvm.loop !46

173:                                              ; preds = %157, %154
  %174 = icmp eq i64 %53, %94
  br i1 %174, label %228, label %175

175:                                              ; preds = %173, %87, %84
  %176 = phi i64 [ %53, %87 ], [ %53, %84 ], [ %95, %173 ]
  %177 = phi i16* [ %52, %87 ], [ %52, %84 ], [ %96, %173 ]
  %178 = phi i16* [ %85, %87 ], [ %85, %84 ], [ %97, %173 ]
  %179 = add i64 %176, -1
  %180 = and i64 %176, 7
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %193, label %182

182:                                              ; preds = %175, %182
  %183 = phi i64 [ %188, %182 ], [ %176, %175 ]
  %184 = phi i16* [ %190, %182 ], [ %177, %175 ]
  %185 = phi i16* [ %189, %182 ], [ %178, %175 ]
  %186 = phi i64 [ %191, %182 ], [ %180, %175 ]
  %187 = load i16, i16* %184, align 2
  store i16 %187, i16* %185, align 2
  %188 = add i64 %183, -1
  %189 = getelementptr inbounds i16, i16* %185, i64 1
  %190 = getelementptr inbounds i16, i16* %184, i64 1
  %191 = add i64 %186, -1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %182, !llvm.loop !47

193:                                              ; preds = %182, %175
  %194 = phi i64 [ %176, %175 ], [ %188, %182 ]
  %195 = phi i16* [ %177, %175 ], [ %190, %182 ]
  %196 = phi i16* [ %178, %175 ], [ %189, %182 ]
  %197 = icmp ult i64 %179, 7
  br i1 %197, label %228, label %198

198:                                              ; preds = %193, %198
  %199 = phi i64 [ %224, %198 ], [ %194, %193 ]
  %200 = phi i16* [ %226, %198 ], [ %195, %193 ]
  %201 = phi i16* [ %225, %198 ], [ %196, %193 ]
  %202 = load i16, i16* %200, align 2
  store i16 %202, i16* %201, align 2
  %203 = getelementptr inbounds i16, i16* %201, i64 1
  %204 = getelementptr inbounds i16, i16* %200, i64 1
  %205 = load i16, i16* %204, align 2
  store i16 %205, i16* %203, align 2
  %206 = getelementptr inbounds i16, i16* %201, i64 2
  %207 = getelementptr inbounds i16, i16* %200, i64 2
  %208 = load i16, i16* %207, align 2
  store i16 %208, i16* %206, align 2
  %209 = getelementptr inbounds i16, i16* %201, i64 3
  %210 = getelementptr inbounds i16, i16* %200, i64 3
  %211 = load i16, i16* %210, align 2
  store i16 %211, i16* %209, align 2
  %212 = getelementptr inbounds i16, i16* %201, i64 4
  %213 = getelementptr inbounds i16, i16* %200, i64 4
  %214 = load i16, i16* %213, align 2
  store i16 %214, i16* %212, align 2
  %215 = getelementptr inbounds i16, i16* %201, i64 5
  %216 = getelementptr inbounds i16, i16* %200, i64 5
  %217 = load i16, i16* %216, align 2
  store i16 %217, i16* %215, align 2
  %218 = getelementptr inbounds i16, i16* %201, i64 6
  %219 = getelementptr inbounds i16, i16* %200, i64 6
  %220 = load i16, i16* %219, align 2
  store i16 %220, i16* %218, align 2
  %221 = getelementptr inbounds i16, i16* %201, i64 7
  %222 = getelementptr inbounds i16, i16* %200, i64 7
  %223 = load i16, i16* %222, align 2
  store i16 %223, i16* %221, align 2
  %224 = add i64 %199, -8
  %225 = getelementptr inbounds i16, i16* %201, i64 8
  %226 = getelementptr inbounds i16, i16* %200, i64 8
  %227 = icmp eq i64 %224, 0
  br i1 %227, label %228, label %198, !llvm.loop !48

228:                                              ; preds = %193, %198, %173, %79
  %229 = phi i16* [ %83, %79 ], [ %85, %173 ], [ %85, %198 ], [ %85, %193 ]
  %230 = getelementptr inbounds i16, i16* %229, i64 %53
  store i16 0, i16* %230, align 2
  %231 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %57, i64 1
  %232 = ptrtoint %"class.std::__1::basic_string.9"* %231 to i64
  store i64 %232, i64* %22, align 8
  br label %234

233:                                              ; preds = %56
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE24__emplace_back_slow_pathIJRN4base16BasicStringPieceIDsS3_EEEEEvDpOT_(%"class.std::__1::vector.7"* %0, %"class.base::BasicStringPiece.6"* nonnull dereferenceable(16) %9) #10
  br label %234

234:                                              ; preds = %51, %233, %228
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #10
  br i1 %30, label %239, label %235

235:                                              ; preds = %234
  %236 = add i64 %29, %4
  %237 = load i16*, i16** %10, align 8
  %238 = load i64, i64* %11, align 8
  br label %25

239:                                              ; preds = %234, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base22SplitStringUsingSubstrENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* noalias sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #0 {
  tail call void @_ZN4base8internal23SplitStringUsingSubstrTINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_16BasicStringPieceIcS5_EEcEENS2_6vectorIT_NS6_ISC_EEEET0_SF_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* sret %0, i8* %1, i64 %2, i8* %3, i64 %4, i32 %5, i32 %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal23SplitStringUsingSubstrTINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_16BasicStringPieceIcS5_EEcEENS2_6vectorIT_NS6_ISC_EEEET0_SF_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* noalias sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #0 comdat {
  %8 = alloca %"class.base::BasicStringPiece", align 8
  %9 = alloca %"class.base::BasicStringPiece", align 8
  %10 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 0
  store i8* %1, i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 1
  store i64 %2, i64* %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #10
  %15 = icmp eq i64 %4, 0
  br i1 %15, label %24, label %16

16:                                               ; preds = %7
  %17 = bitcast %"class.base::BasicStringPiece"* %9 to i8*
  %18 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 0
  %19 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 1
  %20 = icmp eq i32 %5, 1
  %21 = icmp ne i32 %6, 0
  %22 = bitcast %"class.std::__1::basic_string"** %12 to i64*
  %23 = bitcast %"class.base::BasicStringPiece"* %9 to i8*
  br label %25

24:                                               ; preds = %7
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJRN4base16BasicStringPieceIcS3_EEEEEvDpOT_(%"class.std::__1::vector"* %0, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %8) #10
  br label %82

25:                                               ; preds = %78, %16
  %26 = phi i64 [ %2, %16 ], [ %81, %78 ]
  %27 = phi i8* [ %1, %16 ], [ %80, %78 ]
  %28 = phi i64 [ 0, %16 ], [ %79, %78 ]
  %29 = call i64 @_ZN4base8internal4findENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8* %27, i64 %26, i8* %3, i64 %4, i64 %28) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #10
  %30 = icmp eq i64 %29, -1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false)
  %31 = sub i64 %29, %28
  %32 = select i1 %30, i64 -1, i64 %31
  %33 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %8, i64 %28, i64 %32)
  %34 = extractvalue { i8*, i64 } %33, 0
  store i8* %34, i8** %18, align 8
  %35 = extractvalue { i8*, i64 } %33, 1
  store i64 %35, i64* %19, align 8
  br i1 %20, label %36, label %41

36:                                               ; preds = %25
  %37 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base16kWhitespaceASCIIE, i64 0, i64 0)) #10
  %38 = call { i8*, i64 } @_ZN4base10TrimStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_13TrimPositionsE(i8* %34, i64 %35, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base16kWhitespaceASCIIE, i64 0, i64 0), i64 %37, i32 3) #10
  %39 = extractvalue { i8*, i64 } %38, 0
  %40 = extractvalue { i8*, i64 } %38, 1
  store i8* %39, i8** %18, align 8
  store i64 %40, i64* %19, align 8
  br label %41

41:                                               ; preds = %36, %25
  %42 = phi i8* [ %39, %36 ], [ %34, %25 ]
  %43 = phi i64 [ %40, %36 ], [ %35, %25 ]
  %44 = icmp eq i64 %43, 0
  %45 = and i1 %21, %44
  br i1 %45, label %77, label %46

46:                                               ; preds = %41
  %47 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %48 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %49 = icmp ult %"class.std::__1::basic_string"* %47, %48
  br i1 %49, label %50, label %76

50:                                               ; preds = %46
  %51 = icmp ugt i64 %43, -17
  br i1 %51, label %52, label %54

52:                                               ; preds = %50
  %53 = bitcast %"class.std::__1::basic_string"* %47 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %53) #11
  unreachable

54:                                               ; preds = %50
  %55 = icmp ult i64 %43, 23
  br i1 %55, label %64, label %56

56:                                               ; preds = %54
  %57 = add nuw i64 %43, 16
  %58 = and i64 %57, -16
  %59 = call i8* @_Znwm(i64 %58) #12
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %59, i8** %60, align 8, !alias.scope !49
  %61 = or i64 %58, -9223372036854775808
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %61, i64* %62, align 8, !alias.scope !49
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %43, i64* %63, align 8, !alias.scope !49
  br label %69

64:                                               ; preds = %54
  %65 = trunc i64 %43 to i8
  %66 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  store i8 %65, i8* %67, align 1, !alias.scope !49
  %68 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  br i1 %44, label %71, label %69

69:                                               ; preds = %64, %56
  %70 = phi i8* [ %59, %56 ], [ %68, %64 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %70, i8* align 1 %42, i64 %43, i1 false) #10
  br label %71

71:                                               ; preds = %69, %64
  %72 = phi i8* [ %68, %64 ], [ %70, %69 ]
  %73 = getelementptr inbounds i8, i8* %72, i64 %43
  store i8 0, i8* %73, align 1
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 1
  %75 = ptrtoint %"class.std::__1::basic_string"* %74 to i64
  store i64 %75, i64* %22, align 8
  br label %77

76:                                               ; preds = %46
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJRN4base16BasicStringPieceIcS3_EEEEEvDpOT_(%"class.std::__1::vector"* %0, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %9) #10
  br label %77

77:                                               ; preds = %41, %76, %71
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #10
  br i1 %30, label %82, label %78

78:                                               ; preds = %77
  %79 = add i64 %29, %4
  %80 = load i8*, i8** %10, align 8
  %81 = load i64, i64* %11, align 8
  br label %25

82:                                               ; preds = %77, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27SplitStringPieceUsingSubstrENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.30"* noalias sret, i16*, i64, i16*, i64, i32, i32) local_unnamed_addr #0 {
  tail call void @_ZN4base8internal23SplitStringUsingSubstrTINS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES6_DsEENS3_6vectorIT_NS3_9allocatorIS8_EEEET0_SC_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.30"* sret %0, i16* %1, i64 %2, i16* %3, i64 %4, i32 %5, i32 %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal23SplitStringUsingSubstrTINS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES6_DsEENS3_6vectorIT_NS3_9allocatorIS8_EEEET0_SC_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.30"* noalias sret, i16*, i64, i16*, i64, i32, i32) local_unnamed_addr #0 comdat {
  %8 = alloca %"class.base::BasicStringPiece.6", align 8
  %9 = getelementptr inbounds %"class.base::BasicStringPiece.6", %"class.base::BasicStringPiece.6"* %8, i64 0, i32 0
  store i16* %1, i16** %9, align 8
  %10 = getelementptr inbounds %"class.base::BasicStringPiece.6", %"class.base::BasicStringPiece.6"* %8, i64 0, i32 1
  store i64 %2, i64* %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %0, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.std::__1::vector.30"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #10
  %14 = icmp eq i64 %4, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %7
  %16 = icmp eq i32 %5, 1
  %17 = icmp ne i32 %6, 0
  %18 = bitcast %"class.base::BasicStringPiece.6"** %11 to i64*
  %19 = bitcast %"class.std::__1::vector.30"* %0 to i64*
  %20 = bitcast %"class.base::BasicStringPiece.6"** %12 to i64*
  br label %30

21:                                               ; preds = %7
  %22 = bitcast %"class.base::BasicStringPiece.6"** %11 to i64*
  %23 = bitcast %"class.std::__1::vector.30"* %0 to i64*
  %24 = bitcast %"class.base::BasicStringPiece.6"** %12 to i64*
  %25 = tail call i8* @_Znwm(i64 16) #12
  %26 = getelementptr inbounds i8, i8* %25, i64 16
  %27 = ptrtoint i8* %26 to i64
  %28 = bitcast %"class.base::BasicStringPiece.6"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* nonnull align 8 %28, i64 16, i1 false) #10
  %29 = ptrtoint i8* %25 to i64
  store i64 %29, i64* %23, align 8
  store i64 %27, i64* %22, align 8
  store i64 %27, i64* %24, align 8
  br label %121

30:                                               ; preds = %117, %15
  %31 = phi i64 [ %2, %15 ], [ %120, %117 ]
  %32 = phi i16* [ %1, %15 ], [ %119, %117 ]
  %33 = phi i64 [ 0, %15 ], [ %118, %117 ]
  %34 = call i64 @_ZN4base8internal4findENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES5_m(i16* %32, i64 %31, i16* %3, i64 %4, i64 %33) #10
  %35 = icmp eq i64 %34, -1
  %36 = sub i64 %34, %33
  %37 = select i1 %35, i64 -1, i64 %36
  %38 = call { i16*, i64 } @_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEE6substrEmm(%"class.base::BasicStringPiece.6"* nonnull %8, i64 %33, i64 %37)
  %39 = extractvalue { i16*, i64 } %38, 0
  %40 = extractvalue { i16*, i64 } %38, 1
  br i1 %16, label %41, label %56

41:                                               ; preds = %30
  %42 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), align 2
  %43 = icmp eq i16 %42, 0
  br i1 %43, label %51, label %44

44:                                               ; preds = %41, %44
  %45 = phi i64 [ %47, %44 ], [ 0, %41 ]
  %46 = phi i16* [ %48, %44 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), %41 ]
  %47 = add i64 %45, 1
  %48 = getelementptr inbounds i16, i16* %46, i64 1
  %49 = load i16, i16* %48, align 2
  %50 = icmp eq i16 %49, 0
  br i1 %50, label %51, label %44

51:                                               ; preds = %44, %41
  %52 = phi i64 [ 0, %41 ], [ %47, %44 ]
  %53 = call { i16*, i64 } @_ZN4base10TrimStringENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_13TrimPositionsE(i16* %39, i64 %40, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), i64 %52, i32 3) #10
  %54 = extractvalue { i16*, i64 } %53, 0
  %55 = extractvalue { i16*, i64 } %53, 1
  br label %56

56:                                               ; preds = %51, %30
  %57 = phi i64 [ %55, %51 ], [ %40, %30 ]
  %58 = phi i16* [ %54, %51 ], [ %39, %30 ]
  %59 = icmp eq i64 %57, 0
  %60 = and i1 %17, %59
  br i1 %60, label %116, label %61

61:                                               ; preds = %56
  %62 = load %"class.base::BasicStringPiece.6"*, %"class.base::BasicStringPiece.6"** %11, align 8
  %63 = load %"class.base::BasicStringPiece.6"*, %"class.base::BasicStringPiece.6"** %12, align 8
  %64 = icmp ult %"class.base::BasicStringPiece.6"* %62, %63
  %65 = ptrtoint %"class.base::BasicStringPiece.6"* %63 to i64
  br i1 %64, label %66, label %71

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.base::BasicStringPiece.6", %"class.base::BasicStringPiece.6"* %62, i64 0, i32 0
  store i16* %58, i16** %67, align 8
  %68 = getelementptr inbounds %"class.base::BasicStringPiece.6", %"class.base::BasicStringPiece.6"* %62, i64 0, i32 1
  store i64 %57, i64* %68, align 8
  %69 = getelementptr inbounds %"class.base::BasicStringPiece.6", %"class.base::BasicStringPiece.6"* %62, i64 1
  %70 = ptrtoint %"class.base::BasicStringPiece.6"* %69 to i64
  store i64 %70, i64* %18, align 8
  br label %116

71:                                               ; preds = %61
  %72 = ptrtoint %"class.base::BasicStringPiece.6"* %62 to i64
  %73 = load i64, i64* %19, align 8
  %74 = sub i64 %72, %73
  %75 = ashr exact i64 %74, 4
  %76 = add nsw i64 %75, 1
  %77 = icmp ugt i64 %76, 1152921504606846975
  br i1 %77, label %78, label %80

78:                                               ; preds = %71
  %79 = bitcast %"class.std::__1::vector.30"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %79) #11
  unreachable

80:                                               ; preds = %71
  %81 = sub i64 %65, %73
  %82 = ashr exact i64 %81, 4
  %83 = icmp ult i64 %82, 576460752303423487
  br i1 %83, label %84, label %92

84:                                               ; preds = %80
  %85 = ashr exact i64 %81, 3
  %86 = icmp ult i64 %85, %76
  %87 = select i1 %86, i64 %76, i64 %85
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %97, label %89

89:                                               ; preds = %84
  %90 = icmp ugt i64 %87, 1152921504606846975
  br i1 %90, label %91, label %92

91:                                               ; preds = %89
  call void @abort() #11
  unreachable

92:                                               ; preds = %89, %80
  %93 = phi i64 [ %87, %89 ], [ 1152921504606846975, %80 ]
  %94 = shl i64 %93, 4
  %95 = call i8* @_Znwm(i64 %94) #12
  %96 = bitcast i8* %95 to %"class.base::BasicStringPiece.6"*
  br label %97

97:                                               ; preds = %92, %84
  %98 = phi i64 [ %93, %92 ], [ 0, %84 ]
  %99 = phi i8* [ %95, %92 ], [ null, %84 ]
  %100 = phi %"class.base::BasicStringPiece.6"* [ %96, %92 ], [ null, %84 ]
  %101 = getelementptr inbounds %"class.base::BasicStringPiece.6", %"class.base::BasicStringPiece.6"* %100, i64 %75
  %102 = getelementptr inbounds %"class.base::BasicStringPiece.6", %"class.base::BasicStringPiece.6"* %100, i64 %98
  %103 = ptrtoint %"class.base::BasicStringPiece.6"* %102 to i64
  %104 = getelementptr inbounds %"class.base::BasicStringPiece.6", %"class.base::BasicStringPiece.6"* %101, i64 0, i32 0
  store i16* %58, i16** %104, align 8
  %105 = getelementptr inbounds %"class.base::BasicStringPiece.6", %"class.base::BasicStringPiece.6"* %100, i64 %75, i32 1
  store i64 %57, i64* %105, align 8
  %106 = getelementptr inbounds %"class.base::BasicStringPiece.6", %"class.base::BasicStringPiece.6"* %101, i64 1
  %107 = ptrtoint %"class.base::BasicStringPiece.6"* %106 to i64
  %108 = ptrtoint %"class.base::BasicStringPiece.6"* %100 to i64
  %109 = icmp sgt i64 %74, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %97
  %111 = inttoptr i64 %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %111, i64 %74, i1 false) #10
  br label %112

112:                                              ; preds = %110, %97
  store i64 %108, i64* %19, align 8
  store i64 %107, i64* %18, align 8
  store i64 %103, i64* %20, align 8
  %113 = icmp eq i64 %73, 0
  br i1 %113, label %116, label %114

114:                                              ; preds = %112
  %115 = inttoptr i64 %73 to i8*
  call void @_ZdlPv(i8* %115) #12
  br label %116

116:                                              ; preds = %56, %114, %112, %66
  br i1 %35, label %121, label %117

117:                                              ; preds = %116
  %118 = add i64 %34, %4
  %119 = load i16*, i16** %9, align 8
  %120 = load i64, i64* %10, align 8
  br label %30

121:                                              ; preds = %116, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal23SplitStringUsingSubstrTINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_cEENS3_6vectorIT_NS3_9allocatorIS8_EEEET0_SC_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.23"* noalias sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #0 comdat {
  %8 = alloca %"class.base::BasicStringPiece", align 8
  %9 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 0
  store i8* %1, i8** %9, align 8
  %10 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 1
  store i64 %2, i64* %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.std::__1::vector.23"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #10
  %14 = icmp eq i64 %4, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %7
  %16 = icmp eq i32 %5, 1
  %17 = icmp ne i32 %6, 0
  %18 = bitcast %"class.base::BasicStringPiece"** %11 to i64*
  %19 = bitcast %"class.std::__1::vector.23"* %0 to i64*
  %20 = bitcast %"class.base::BasicStringPiece"** %12 to i64*
  br label %30

21:                                               ; preds = %7
  %22 = bitcast %"class.base::BasicStringPiece"** %11 to i64*
  %23 = bitcast %"class.std::__1::vector.23"* %0 to i64*
  %24 = bitcast %"class.base::BasicStringPiece"** %12 to i64*
  %25 = tail call i8* @_Znwm(i64 16) #12
  %26 = getelementptr inbounds i8, i8* %25, i64 16
  %27 = ptrtoint i8* %26 to i64
  %28 = bitcast %"class.base::BasicStringPiece"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* nonnull align 8 %28, i64 16, i1 false) #10
  %29 = ptrtoint i8* %25 to i64
  store i64 %29, i64* %23, align 8
  store i64 %27, i64* %22, align 8
  store i64 %27, i64* %24, align 8
  br label %111

30:                                               ; preds = %107, %15
  %31 = phi i64 [ %2, %15 ], [ %110, %107 ]
  %32 = phi i8* [ %1, %15 ], [ %109, %107 ]
  %33 = phi i64 [ 0, %15 ], [ %108, %107 ]
  %34 = call i64 @_ZN4base8internal4findENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8* %32, i64 %31, i8* %3, i64 %4, i64 %33) #10
  %35 = icmp eq i64 %34, -1
  %36 = sub i64 %34, %33
  %37 = select i1 %35, i64 -1, i64 %36
  %38 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %8, i64 %33, i64 %37)
  %39 = extractvalue { i8*, i64 } %38, 0
  %40 = extractvalue { i8*, i64 } %38, 1
  br i1 %16, label %41, label %46

41:                                               ; preds = %30
  %42 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base16kWhitespaceASCIIE, i64 0, i64 0)) #10
  %43 = call { i8*, i64 } @_ZN4base10TrimStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_13TrimPositionsE(i8* %39, i64 %40, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base16kWhitespaceASCIIE, i64 0, i64 0), i64 %42, i32 3) #10
  %44 = extractvalue { i8*, i64 } %43, 0
  %45 = extractvalue { i8*, i64 } %43, 1
  br label %46

46:                                               ; preds = %41, %30
  %47 = phi i64 [ %45, %41 ], [ %40, %30 ]
  %48 = phi i8* [ %44, %41 ], [ %39, %30 ]
  %49 = icmp eq i64 %47, 0
  %50 = and i1 %17, %49
  br i1 %50, label %106, label %51

51:                                               ; preds = %46
  %52 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %11, align 8
  %53 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %12, align 8
  %54 = icmp ult %"class.base::BasicStringPiece"* %52, %53
  %55 = ptrtoint %"class.base::BasicStringPiece"* %53 to i64
  br i1 %54, label %56, label %61

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %52, i64 0, i32 0
  store i8* %48, i8** %57, align 8
  %58 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %52, i64 0, i32 1
  store i64 %47, i64* %58, align 8
  %59 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %52, i64 1
  %60 = ptrtoint %"class.base::BasicStringPiece"* %59 to i64
  store i64 %60, i64* %18, align 8
  br label %106

61:                                               ; preds = %51
  %62 = ptrtoint %"class.base::BasicStringPiece"* %52 to i64
  %63 = load i64, i64* %19, align 8
  %64 = sub i64 %62, %63
  %65 = ashr exact i64 %64, 4
  %66 = add nsw i64 %65, 1
  %67 = icmp ugt i64 %66, 1152921504606846975
  br i1 %67, label %68, label %70

68:                                               ; preds = %61
  %69 = bitcast %"class.std::__1::vector.23"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %69) #11
  unreachable

70:                                               ; preds = %61
  %71 = sub i64 %55, %63
  %72 = ashr exact i64 %71, 4
  %73 = icmp ult i64 %72, 576460752303423487
  br i1 %73, label %74, label %82

74:                                               ; preds = %70
  %75 = ashr exact i64 %71, 3
  %76 = icmp ult i64 %75, %66
  %77 = select i1 %76, i64 %66, i64 %75
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %87, label %79

79:                                               ; preds = %74
  %80 = icmp ugt i64 %77, 1152921504606846975
  br i1 %80, label %81, label %82

81:                                               ; preds = %79
  call void @abort() #11
  unreachable

82:                                               ; preds = %79, %70
  %83 = phi i64 [ %77, %79 ], [ 1152921504606846975, %70 ]
  %84 = shl i64 %83, 4
  %85 = call i8* @_Znwm(i64 %84) #12
  %86 = bitcast i8* %85 to %"class.base::BasicStringPiece"*
  br label %87

87:                                               ; preds = %82, %74
  %88 = phi i64 [ %83, %82 ], [ 0, %74 ]
  %89 = phi i8* [ %85, %82 ], [ null, %74 ]
  %90 = phi %"class.base::BasicStringPiece"* [ %86, %82 ], [ null, %74 ]
  %91 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %90, i64 %65
  %92 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %90, i64 %88
  %93 = ptrtoint %"class.base::BasicStringPiece"* %92 to i64
  %94 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %91, i64 0, i32 0
  store i8* %48, i8** %94, align 8
  %95 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %90, i64 %65, i32 1
  store i64 %47, i64* %95, align 8
  %96 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %91, i64 1
  %97 = ptrtoint %"class.base::BasicStringPiece"* %96 to i64
  %98 = ptrtoint %"class.base::BasicStringPiece"* %90 to i64
  %99 = icmp sgt i64 %64, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %87
  %101 = inttoptr i64 %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %101, i64 %64, i1 false) #10
  br label %102

102:                                              ; preds = %100, %87
  store i64 %98, i64* %19, align 8
  store i64 %97, i64* %18, align 8
  store i64 %93, i64* %20, align 8
  %103 = icmp eq i64 %63, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %102
  %105 = inttoptr i64 %63 to i8*
  call void @_ZdlPv(i8* %105) #12
  br label %106

106:                                              ; preds = %46, %104, %102, %56
  br i1 %35, label %111, label %107

107:                                              ; preds = %106
  %108 = add i64 %34, %4
  %109 = load i8*, i8** %9, align 8
  %110 = load i64, i64* %10, align 8
  br label %30

111:                                              ; preds = %106, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"*, i64, i64) local_unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS5_IS8_EEE8__appendEm(%"class.std::__1::vector.37"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.std::__1::pair"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.std::__1::pair"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 48
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %30, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.std::__1::pair"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %13, i64 %18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast i8** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = urem i64 %23, 48
  %25 = add i64 %23, 48
  %26 = sub i64 %25, %24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %26, i1 false) #10
  %27 = ptrtoint %"struct.std::__1::pair"* %16 to i64
  br label %28

28:                                               ; preds = %12, %15
  %29 = phi i64 [ %27, %15 ], [ %8, %12 ]
  store i64 %29, i64* %7, align 8
  br label %123

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::vector.37"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %8, %32
  %34 = sdiv exact i64 %33, 48
  %35 = add i64 %34, %1
  %36 = icmp ugt i64 %35, 384307168202282325
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::vector.37"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #11
  unreachable

39:                                               ; preds = %30
  %40 = sub i64 %5, %32
  %41 = sdiv exact i64 %40, 48
  %42 = icmp ult i64 %41, 192153584101141162
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = shl nsw i64 %41, 1
  %45 = icmp ult i64 %44, %35
  %46 = select i1 %45, i64 %35, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %39, %43
  %49 = phi i64 [ %46, %43 ], [ 384307168202282325, %39 ]
  %50 = mul i64 %49, 48
  %51 = tail call i8* @_Znwm(i64 %50) #12
  %52 = bitcast i8* %51 to %"struct.std::__1::pair"*
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %55 = phi %"struct.std::__1::pair"* [ %52, %48 ], [ null, %43 ]
  %56 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 %34
  %57 = ptrtoint %"struct.std::__1::pair"* %56 to i64
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 %54
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 %1
  br label %60

60:                                               ; preds = %53, %60
  %61 = phi %"struct.std::__1::pair"* [ %64, %60 ], [ %56, %53 ]
  %62 = phi i64 [ %65, %60 ], [ %57, %53 ]
  %63 = inttoptr i64 %62 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 48, i1 false) #10
  %64 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %61, i64 1
  %65 = ptrtoint %"struct.std::__1::pair"* %64 to i64
  %66 = icmp eq %"struct.std::__1::pair"* %59, %64
  br i1 %66, label %67, label %60

67:                                               ; preds = %60
  %68 = ptrtoint %"struct.std::__1::pair"* %58 to i64
  %69 = ptrtoint %"struct.std::__1::pair"* %59 to i64
  %70 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %0, i64 0, i32 0, i32 0
  %71 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %70, align 8
  %72 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %73 = icmp eq %"struct.std::__1::pair"* %72, %71
  br i1 %73, label %74, label %76

74:                                               ; preds = %67
  %75 = ptrtoint %"struct.std::__1::pair"* %71 to i64
  br label %92

76:                                               ; preds = %67, %76
  %77 = phi %"struct.std::__1::pair"* [ %79, %76 ], [ %56, %67 ]
  %78 = phi %"struct.std::__1::pair"* [ %80, %76 ], [ %72, %67 ]
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %77, i64 -1
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %78, i64 -1
  %81 = bitcast %"struct.std::__1::pair"* %79 to i8*
  %82 = bitcast %"struct.std::__1::pair"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 24, i1 false) #10
  %83 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %77, i64 -1, i32 1
  %84 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %78, i64 -1, i32 1
  %85 = bitcast %"class.std::__1::basic_string"* %83 to i8*
  %86 = bitcast %"class.std::__1::basic_string"* %84 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 24, i1 false) #10
  %87 = icmp eq %"struct.std::__1::pair"* %80, %71
  br i1 %87, label %88, label %76

88:                                               ; preds = %76
  %89 = ptrtoint %"struct.std::__1::pair"* %79 to i64
  %90 = load i64, i64* %31, align 8
  %91 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  br label %92

92:                                               ; preds = %74, %88
  %93 = phi %"struct.std::__1::pair"* [ %71, %74 ], [ %91, %88 ]
  %94 = phi i64 [ %57, %74 ], [ %89, %88 ]
  %95 = phi i64 [ %75, %74 ], [ %90, %88 ]
  store i64 %94, i64* %31, align 8
  store i64 %69, i64* %7, align 8
  store i64 %68, i64* %4, align 8
  %96 = inttoptr i64 %95 to %"struct.std::__1::pair"*
  %97 = icmp eq %"struct.std::__1::pair"* %93, %96
  br i1 %97, label %119, label %98

98:                                               ; preds = %92, %117
  %99 = phi %"struct.std::__1::pair"* [ %100, %117 ], [ %93, %92 ]
  %100 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %99, i64 -1
  %101 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %99, i64 -1, i32 1
  %102 = bitcast %"class.std::__1::basic_string"* %101 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  br i1 %105, label %106, label %109

106:                                              ; preds = %98
  %107 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i8*, i8** %107, align 8
  tail call void @_ZdlPv(i8* %108) #12
  br label %109

109:                                              ; preds = %106, %98
  %110 = bitcast %"struct.std::__1::pair"* %100 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  tail call void @_ZdlPv(i8* %116) #12
  br label %117

117:                                              ; preds = %114, %109
  %118 = icmp eq %"struct.std::__1::pair"* %100, %96
  br i1 %118, label %119, label %98

119:                                              ; preds = %117, %92
  %120 = icmp eq i64 %95, 0
  br i1 %120, label %123, label %121

121:                                              ; preds = %119
  %122 = inttoptr i64 %95 to i8*
  tail call void @_ZdlPv(i8* %122) #12
  br label %123

123:                                              ; preds = %121, %119, %28
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #2

declare { i8*, i64 } @_ZN4base10TrimStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_13TrimPositionsE(i8*, i64, i8*, i64, i32) local_unnamed_addr #7

declare i64 @_ZN4base8internal13find_first_ofENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8*, i64, i8*, i64, i64) local_unnamed_addr #7

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJRN4base16BasicStringPieceIcS3_EEEEEvDpOT_(%"class.std::__1::vector"*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 0
  %38 = load i8*, i8** %37, align 8, !noalias !52
  %39 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 1
  %40 = load i64, i64* %39, align 8, !noalias !52
  %41 = icmp ugt i64 %40, -17
  br i1 %41, label %42, label %44

42:                                               ; preds = %31
  %43 = bitcast %"class.std::__1::basic_string"* %34 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %43) #11
  unreachable

44:                                               ; preds = %31
  %45 = icmp ult i64 %40, 23
  br i1 %45, label %54, label %46

46:                                               ; preds = %44
  %47 = add nuw i64 %40, 16
  %48 = and i64 %47, -16
  %49 = tail call i8* @_Znwm(i64 %48) #12
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %49, i8** %50, align 8, !alias.scope !52
  %51 = or i64 %48, -9223372036854775808
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %51, i64* %52, align 8, !alias.scope !52
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %40, i64* %53, align 8, !alias.scope !52
  br label %60

54:                                               ; preds = %44
  %55 = trunc i64 %40 to i8
  %56 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  store i8 %55, i8* %57, align 1, !alias.scope !52
  %58 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %59 = icmp eq i64 %40, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %54, %46
  %61 = phi i8* [ %49, %46 ], [ %58, %54 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %61, i8* align 1 %38, i64 %40, i1 false) #10
  br label %62

62:                                               ; preds = %54, %60
  %63 = phi i8* [ %58, %54 ], [ %61, %60 ]
  %64 = getelementptr inbounds i8, i8* %63, i64 %40
  store i8 0, i8* %64, align 1
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %66 = ptrtoint %"class.std::__1::basic_string"* %65 to i64
  %67 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %67, align 8
  %69 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %70 = icmp eq %"class.std::__1::basic_string"* %69, %68
  br i1 %70, label %71, label %73

71:                                               ; preds = %62
  %72 = ptrtoint %"class.std::__1::basic_string"* %68 to i64
  br label %84

73:                                               ; preds = %62, %73
  %74 = phi %"class.std::__1::basic_string"* [ %76, %73 ], [ %34, %62 ]
  %75 = phi %"class.std::__1::basic_string"* [ %77, %73 ], [ %69, %62 ]
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %74, i64 -1
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %75, i64 -1
  %78 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  %79 = bitcast %"class.std::__1::basic_string"* %77 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 24, i1 false) #10
  %80 = icmp eq %"class.std::__1::basic_string"* %77, %68
  br i1 %80, label %81, label %73

81:                                               ; preds = %73
  %82 = load i64, i64* %6, align 8
  %83 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %84

84:                                               ; preds = %71, %81
  %85 = phi %"class.std::__1::basic_string"* [ %68, %71 ], [ %83, %81 ]
  %86 = phi %"class.std::__1::basic_string"* [ %34, %71 ], [ %76, %81 ]
  %87 = phi i64 [ %72, %71 ], [ %82, %81 ]
  %88 = ptrtoint %"class.std::__1::basic_string"* %86 to i64
  store i64 %88, i64* %6, align 8
  store i64 %66, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %89 = inttoptr i64 %87 to %"class.std::__1::basic_string"*
  %90 = icmp eq %"class.std::__1::basic_string"* %85, %89
  br i1 %90, label %103, label %91

91:                                               ; preds = %84, %101
  %92 = phi %"class.std::__1::basic_string"* [ %93, %101 ], [ %85, %84 ]
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %92, i64 -1
  %94 = bitcast %"class.std::__1::basic_string"* %93 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = load i8, i8* %95, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %91
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  tail call void @_ZdlPv(i8* %100) #12
  br label %101

101:                                              ; preds = %98, %91
  %102 = icmp eq %"class.std::__1::basic_string"* %93, %89
  br i1 %102, label %103, label %91

103:                                              ; preds = %101, %84
  %104 = icmp eq i64 %87, 0
  br i1 %104, label %107, label %105

105:                                              ; preds = %103
  %106 = inttoptr i64 %87 to i8*
  tail call void @_ZdlPv(i8* %106) #12
  br label %107

107:                                              ; preds = %103, %105
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare { i16*, i64 } @_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEE6substrEmm(%"class.base::BasicStringPiece.6"*, i64, i64) local_unnamed_addr #0 align 2

declare { i16*, i64 } @_ZN4base10TrimStringENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_13TrimPositionsE(i16*, i64, i16*, i64, i32) local_unnamed_addr #7

declare i64 @_ZN4base8internal13find_first_ofENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES5_m(i16*, i64, i16*, i64, i64) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE24__emplace_back_slow_pathIJRN4base16BasicStringPieceIDsS3_EEEEEvDpOT_(%"class.std::__1::vector.7"*, %"class.base::BasicStringPiece.6"* dereferenceable(16)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string.9"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.7"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.7"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string.9"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string.9"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string.9"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string.9"* %35 to i64
  %37 = getelementptr inbounds %"class.base::BasicStringPiece.6", %"class.base::BasicStringPiece.6"* %1, i64 0, i32 0
  %38 = load i16*, i16** %37, align 8, !noalias !55
  %39 = getelementptr inbounds %"class.base::BasicStringPiece.6", %"class.base::BasicStringPiece.6"* %1, i64 0, i32 1
  %40 = load i64, i64* %39, align 8, !noalias !55
  %41 = icmp ugt i64 %40, 9223372036854775791
  br i1 %41, label %42, label %44

42:                                               ; preds = %31
  %43 = bitcast %"class.std::__1::basic_string.9"* %34 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %43) #11
  unreachable

44:                                               ; preds = %31
  %45 = icmp ult i64 %40, 11
  br i1 %45, label %59, label %46

46:                                               ; preds = %44
  %47 = add nuw nsw i64 %40, 8
  %48 = and i64 %47, -8
  %49 = icmp slt i64 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %46
  tail call void @abort() #11
  unreachable

51:                                               ; preds = %46
  %52 = shl i64 %48, 1
  %53 = tail call i8* @_Znwm(i64 %52) #12
  %54 = bitcast i8* %53 to i16*
  %55 = bitcast %"class.std::__1::basic_string.9"* %34 to i8**
  store i8* %53, i8** %55, align 8, !alias.scope !55
  %56 = or i64 %48, -9223372036854775808
  %57 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %33, i64 %9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %56, i64* %57, align 8, !alias.scope !55
  %58 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %33, i64 %9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %40, i64* %58, align 8, !alias.scope !55
  br label %65

59:                                               ; preds = %44
  %60 = trunc i64 %40 to i8
  %61 = bitcast %"class.std::__1::basic_string.9"* %34 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %61, i64 0, i32 1, i32 1
  store i8 %60, i8* %62, align 1, !alias.scope !55
  %63 = bitcast %"class.std::__1::basic_string.9"* %34 to i16*
  %64 = icmp eq i64 %40, 0
  br i1 %64, label %209, label %65

65:                                               ; preds = %59, %51
  %66 = phi i16* [ %54, %51 ], [ %63, %59 ]
  %67 = icmp ult i64 %40, 16
  br i1 %67, label %156, label %68

68:                                               ; preds = %65
  %69 = getelementptr i16, i16* %66, i64 %40
  %70 = getelementptr i16, i16* %38, i64 %40
  %71 = icmp ult i16* %66, %70
  %72 = icmp ult i16* %38, %69
  %73 = and i1 %71, %72
  br i1 %73, label %156, label %74

74:                                               ; preds = %68
  %75 = and i64 %40, -16
  %76 = sub i64 %40, %75
  %77 = getelementptr i16, i16* %38, i64 %75
  %78 = getelementptr i16, i16* %66, i64 %75
  %79 = add i64 %75, -16
  %80 = lshr exact i64 %79, 4
  %81 = add nuw nsw i64 %80, 1
  %82 = and i64 %81, 3
  %83 = icmp ult i64 %79, 48
  br i1 %83, label %135, label %84

84:                                               ; preds = %74
  %85 = sub nsw i64 %81, %82
  br label %86

86:                                               ; preds = %86, %84
  %87 = phi i64 [ 0, %84 ], [ %132, %86 ]
  %88 = phi i64 [ %85, %84 ], [ %133, %86 ]
  %89 = getelementptr i16, i16* %38, i64 %87
  %90 = getelementptr i16, i16* %66, i64 %87
  %91 = bitcast i16* %89 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !58
  %93 = getelementptr i16, i16* %89, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !58
  %96 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %96, align 2, !alias.scope !61, !noalias !58
  %97 = getelementptr i16, i16* %90, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %98, align 2, !alias.scope !61, !noalias !58
  %99 = or i64 %87, 16
  %100 = getelementptr i16, i16* %38, i64 %99
  %101 = getelementptr i16, i16* %66, i64 %99
  %102 = bitcast i16* %100 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !58
  %104 = getelementptr i16, i16* %100, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !58
  %107 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %107, align 2, !alias.scope !61, !noalias !58
  %108 = getelementptr i16, i16* %101, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %109, align 2, !alias.scope !61, !noalias !58
  %110 = or i64 %87, 32
  %111 = getelementptr i16, i16* %38, i64 %110
  %112 = getelementptr i16, i16* %66, i64 %110
  %113 = bitcast i16* %111 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !58
  %115 = getelementptr i16, i16* %111, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  %117 = load <8 x i16>, <8 x i16>* %116, align 2, !alias.scope !58
  %118 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %118, align 2, !alias.scope !61, !noalias !58
  %119 = getelementptr i16, i16* %112, i64 8
  %120 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %117, <8 x i16>* %120, align 2, !alias.scope !61, !noalias !58
  %121 = or i64 %87, 48
  %122 = getelementptr i16, i16* %38, i64 %121
  %123 = getelementptr i16, i16* %66, i64 %121
  %124 = bitcast i16* %122 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !58
  %126 = getelementptr i16, i16* %122, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  %128 = load <8 x i16>, <8 x i16>* %127, align 2, !alias.scope !58
  %129 = bitcast i16* %123 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %129, align 2, !alias.scope !61, !noalias !58
  %130 = getelementptr i16, i16* %123, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %128, <8 x i16>* %131, align 2, !alias.scope !61, !noalias !58
  %132 = add i64 %87, 64
  %133 = add i64 %88, -4
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %86, !llvm.loop !63

135:                                              ; preds = %86, %74
  %136 = phi i64 [ 0, %74 ], [ %132, %86 ]
  %137 = icmp eq i64 %82, 0
  br i1 %137, label %154, label %138

138:                                              ; preds = %135, %138
  %139 = phi i64 [ %151, %138 ], [ %136, %135 ]
  %140 = phi i64 [ %152, %138 ], [ %82, %135 ]
  %141 = getelementptr i16, i16* %38, i64 %139
  %142 = getelementptr i16, i16* %66, i64 %139
  %143 = bitcast i16* %141 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !58
  %145 = getelementptr i16, i16* %141, i64 8
  %146 = bitcast i16* %145 to <8 x i16>*
  %147 = load <8 x i16>, <8 x i16>* %146, align 2, !alias.scope !58
  %148 = bitcast i16* %142 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %148, align 2, !alias.scope !61, !noalias !58
  %149 = getelementptr i16, i16* %142, i64 8
  %150 = bitcast i16* %149 to <8 x i16>*
  store <8 x i16> %147, <8 x i16>* %150, align 2, !alias.scope !61, !noalias !58
  %151 = add i64 %139, 16
  %152 = add i64 %140, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %138, !llvm.loop !64

154:                                              ; preds = %138, %135
  %155 = icmp eq i64 %40, %75
  br i1 %155, label %209, label %156

156:                                              ; preds = %154, %68, %65
  %157 = phi i64 [ %40, %68 ], [ %40, %65 ], [ %76, %154 ]
  %158 = phi i16* [ %38, %68 ], [ %38, %65 ], [ %77, %154 ]
  %159 = phi i16* [ %66, %68 ], [ %66, %65 ], [ %78, %154 ]
  %160 = add i64 %157, -1
  %161 = and i64 %157, 7
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %174, label %163

163:                                              ; preds = %156, %163
  %164 = phi i64 [ %169, %163 ], [ %157, %156 ]
  %165 = phi i16* [ %171, %163 ], [ %158, %156 ]
  %166 = phi i16* [ %170, %163 ], [ %159, %156 ]
  %167 = phi i64 [ %172, %163 ], [ %161, %156 ]
  %168 = load i16, i16* %165, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %164, -1
  %170 = getelementptr inbounds i16, i16* %166, i64 1
  %171 = getelementptr inbounds i16, i16* %165, i64 1
  %172 = add i64 %167, -1
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %163, !llvm.loop !65

174:                                              ; preds = %163, %156
  %175 = phi i64 [ %157, %156 ], [ %169, %163 ]
  %176 = phi i16* [ %158, %156 ], [ %171, %163 ]
  %177 = phi i16* [ %159, %156 ], [ %170, %163 ]
  %178 = icmp ult i64 %160, 7
  br i1 %178, label %209, label %179

179:                                              ; preds = %174, %179
  %180 = phi i64 [ %205, %179 ], [ %175, %174 ]
  %181 = phi i16* [ %207, %179 ], [ %176, %174 ]
  %182 = phi i16* [ %206, %179 ], [ %177, %174 ]
  %183 = load i16, i16* %181, align 2
  store i16 %183, i16* %182, align 2
  %184 = getelementptr inbounds i16, i16* %182, i64 1
  %185 = getelementptr inbounds i16, i16* %181, i64 1
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %182, i64 2
  %188 = getelementptr inbounds i16, i16* %181, i64 2
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %182, i64 3
  %191 = getelementptr inbounds i16, i16* %181, i64 3
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %182, i64 4
  %194 = getelementptr inbounds i16, i16* %181, i64 4
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = getelementptr inbounds i16, i16* %182, i64 5
  %197 = getelementptr inbounds i16, i16* %181, i64 5
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = getelementptr inbounds i16, i16* %182, i64 6
  %200 = getelementptr inbounds i16, i16* %181, i64 6
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = getelementptr inbounds i16, i16* %182, i64 7
  %203 = getelementptr inbounds i16, i16* %181, i64 7
  %204 = load i16, i16* %203, align 2
  store i16 %204, i16* %202, align 2
  %205 = add i64 %180, -8
  %206 = getelementptr inbounds i16, i16* %182, i64 8
  %207 = getelementptr inbounds i16, i16* %181, i64 8
  %208 = icmp eq i64 %205, 0
  br i1 %208, label %209, label %179, !llvm.loop !66

209:                                              ; preds = %174, %179, %154, %59
  %210 = phi i16* [ %63, %59 ], [ %66, %154 ], [ %66, %179 ], [ %66, %174 ]
  %211 = getelementptr inbounds i16, i16* %210, i64 %40
  store i16 0, i16* %211, align 2
  %212 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %34, i64 1
  %213 = ptrtoint %"class.std::__1::basic_string.9"* %212 to i64
  %214 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 0
  %215 = load %"class.std::__1::basic_string.9"*, %"class.std::__1::basic_string.9"** %214, align 8
  %216 = load %"class.std::__1::basic_string.9"*, %"class.std::__1::basic_string.9"** %3, align 8
  %217 = icmp eq %"class.std::__1::basic_string.9"* %216, %215
  br i1 %217, label %218, label %220

218:                                              ; preds = %209
  %219 = ptrtoint %"class.std::__1::basic_string.9"* %215 to i64
  br label %231

220:                                              ; preds = %209, %220
  %221 = phi %"class.std::__1::basic_string.9"* [ %223, %220 ], [ %34, %209 ]
  %222 = phi %"class.std::__1::basic_string.9"* [ %224, %220 ], [ %216, %209 ]
  %223 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %221, i64 -1
  %224 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %222, i64 -1
  %225 = bitcast %"class.std::__1::basic_string.9"* %223 to i8*
  %226 = bitcast %"class.std::__1::basic_string.9"* %224 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %225, i8* align 8 %226, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %226, i8 0, i64 24, i1 false) #10
  %227 = icmp eq %"class.std::__1::basic_string.9"* %224, %215
  br i1 %227, label %228, label %220

228:                                              ; preds = %220
  %229 = load i64, i64* %6, align 8
  %230 = load %"class.std::__1::basic_string.9"*, %"class.std::__1::basic_string.9"** %3, align 8
  br label %231

231:                                              ; preds = %218, %228
  %232 = phi %"class.std::__1::basic_string.9"* [ %215, %218 ], [ %230, %228 ]
  %233 = phi %"class.std::__1::basic_string.9"* [ %34, %218 ], [ %223, %228 ]
  %234 = phi i64 [ %219, %218 ], [ %229, %228 ]
  %235 = ptrtoint %"class.std::__1::basic_string.9"* %233 to i64
  store i64 %235, i64* %6, align 8
  store i64 %213, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %236 = inttoptr i64 %234 to %"class.std::__1::basic_string.9"*
  %237 = icmp eq %"class.std::__1::basic_string.9"* %232, %236
  br i1 %237, label %250, label %238

238:                                              ; preds = %231, %248
  %239 = phi %"class.std::__1::basic_string.9"* [ %240, %248 ], [ %232, %231 ]
  %240 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %239, i64 -1
  %241 = bitcast %"class.std::__1::basic_string.9"* %240 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %242 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %241, i64 0, i32 1, i32 1
  %243 = load i8, i8* %242, align 1
  %244 = icmp slt i8 %243, 0
  br i1 %244, label %245, label %248

245:                                              ; preds = %238
  %246 = bitcast %"class.std::__1::basic_string.9"* %240 to i8**
  %247 = load i8*, i8** %246, align 8
  tail call void @_ZdlPv(i8* %247) #12
  br label %248

248:                                              ; preds = %245, %238
  %249 = icmp eq %"class.std::__1::basic_string.9"* %240, %236
  br i1 %249, label %250, label %238

250:                                              ; preds = %248, %231
  %251 = icmp eq i64 %234, 0
  br i1 %251, label %254, label %252

252:                                              ; preds = %250
  %253 = inttoptr i64 %234 to i8*
  tail call void @_ZdlPv(i8* %253) #12
  br label %254

254:                                              ; preds = %250, %252
  ret void
}

declare i64 @_ZN4base8internal4findENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES5_m(i16*, i64, i16*, i64, i64) local_unnamed_addr #7

declare i64 @_ZN4base8internal4findENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8*, i64, i8*, i64, i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4base8internalL12SplitStringTINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_16BasicStringPieceIcS5_EEcEENS2_6vectorIT_NS6_ISC_EEEET0_SF_NS_18WhitespaceHandlingENS_11SplitResultE: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internalL12SplitStringTINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_16BasicStringPieceIcS5_EEcEENS2_6vectorIT_NS6_ISC_EEEET0_SF_NS_18WhitespaceHandlingENS_11SplitResultE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN4base8internalL12SplitStringTINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_16BasicStringPieceIDsS5_EEDsEENS2_6vectorIT_NS6_ISC_EEEET0_SF_NS_18WhitespaceHandlingENS_11SplitResultE: argument 0"}
!10 = distinct !{!10, !"_ZN4base8internalL12SplitStringTINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_16BasicStringPieceIDsS5_EEDsEENS2_6vectorIT_NS6_ISC_EEEET0_SF_NS_18WhitespaceHandlingENS_11SplitResultE"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv: argument 0"}
!13 = distinct !{!13, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv"}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.isvectorized", i32 1}
!21 = distinct !{!21, !22}
!22 = !{!"llvm.loop.unroll.disable"}
!23 = distinct !{!23, !22}
!24 = distinct !{!24, !20}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN4base8internalL12SplitStringTINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_cEENS3_6vectorIT_NS3_9allocatorIS8_EEEET0_SC_NS_18WhitespaceHandlingENS_11SplitResultE: argument 0"}
!27 = distinct !{!27, !"_ZN4base8internalL12SplitStringTINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_cEENS3_6vectorIT_NS3_9allocatorIS8_EEEET0_SC_NS_18WhitespaceHandlingENS_11SplitResultE"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN4base8internalL12SplitStringTINS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES6_DsEENS3_6vectorIT_NS3_9allocatorIS8_EEEET0_SC_NS_18WhitespaceHandlingENS_11SplitResultE: argument 0"}
!30 = distinct !{!30, !"_ZN4base8internalL12SplitStringTINS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES6_DsEENS3_6vectorIT_NS3_9allocatorIS8_EEEET0_SC_NS_18WhitespaceHandlingENS_11SplitResultE"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!33 = distinct !{!33, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!36 = distinct !{!36, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv: argument 0"}
!39 = distinct !{!39, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv"}
!40 = !{!41}
!41 = distinct !{!41, !42}
!42 = distinct !{!42, !"LVerDomain"}
!43 = !{!44}
!44 = distinct !{!44, !42}
!45 = distinct !{!45, !20}
!46 = distinct !{!46, !22}
!47 = distinct !{!47, !22}
!48 = distinct !{!48, !20}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!51 = distinct !{!51, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!54 = distinct !{!54, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv: argument 0"}
!57 = distinct !{!57, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv"}
!58 = !{!59}
!59 = distinct !{!59, !60}
!60 = distinct !{!60, !"LVerDomain"}
!61 = !{!62}
!62 = distinct !{!62, !60}
!63 = distinct !{!63, !20}
!64 = distinct !{!64, !22}
!65 = distinct !{!65, !22}
!66 = distinct !{!66, !20}
