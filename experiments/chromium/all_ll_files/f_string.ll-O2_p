; ModuleID = '../../third_party/boringssl/src/crypto/asn1/f_string.c'
source_filename = "../../third_party/boringssl/src/crypto/asn1/f_string.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }

@.str = private unnamed_addr constant [17 x i8] c"0123456789ABCDEF\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"\5C\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2a_ASN1_STRING(%struct.bio_st*, %struct.asn1_string_st* readonly, i32) local_unnamed_addr #0 {
  %4 = alloca [2 x i8], align 1
  %5 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %5) #3
  store i8 -86, i8* %5, align 1
  %6 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i64 0, i64 1
  store i8 -86, i8* %6, align 1
  %7 = icmp eq %struct.asn1_string_st* %1, null
  br i1 %7, label %55, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %8
  %13 = icmp sgt i32 %10, 0
  br i1 %13, label %14, label %55

14:                                               ; preds = %12
  %15 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %1, i64 0, i32 2
  br label %19

16:                                               ; preds = %8
  %17 = tail call i32 @BIO_write(%struct.bio_st* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i32 1) #3
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %55, label %54

19:                                               ; preds = %14, %48
  %20 = phi i64 [ 0, %14 ], [ %50, %48 ]
  %21 = phi i32 [ 0, %14 ], [ %49, %48 ]
  %22 = icmp ne i64 %20, 0
  %23 = trunc i64 %20 to i32
  %24 = urem i32 %23, 35
  %25 = icmp eq i32 %24, 0
  %26 = and i1 %22, %25
  br i1 %26, label %27, label %32

27:                                               ; preds = %19
  %28 = call i32 @BIO_write(%struct.bio_st* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i32 2) #3
  %29 = icmp eq i32 %28, 2
  br i1 %29, label %30, label %54

30:                                               ; preds = %27
  %31 = add nsw i32 %21, 2
  br label %32

32:                                               ; preds = %19, %30
  %33 = phi i32 [ %31, %30 ], [ %21, %19 ]
  %34 = load i8*, i8** %15, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 %20
  %36 = load i8, i8* %35, align 1
  %37 = lshr i8 %36, 4
  %38 = zext i8 %37 to i64
  %39 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %38
  %40 = load i8, i8* %39, align 1
  store i8 %40, i8* %5, align 1
  %41 = load i8, i8* %35, align 1
  %42 = and i8 %41, 15
  %43 = zext i8 %42 to i64
  %44 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %43
  %45 = load i8, i8* %44, align 1
  store i8 %45, i8* %6, align 1
  %46 = call i32 @BIO_write(%struct.bio_st* %0, i8* nonnull %5, i32 2) #3
  %47 = icmp eq i32 %46, 2
  br i1 %47, label %48, label %54

48:                                               ; preds = %32
  %49 = add nsw i32 %33, 2
  %50 = add nuw nsw i64 %20, 1
  %51 = load i32, i32* %9, align 8
  %52 = sext i32 %51 to i64
  %53 = icmp slt i64 %50, %52
  br i1 %53, label %19, label %55

54:                                               ; preds = %27, %32, %16
  br label %55

55:                                               ; preds = %48, %12, %16, %3, %54
  %56 = phi i32 [ -1, %54 ], [ 0, %3 ], [ 1, %16 ], [ 0, %12 ], [ %49, %48 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %5) #3
  ret i32 %56
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @BIO_write(%struct.bio_st*, i8*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
