; ModuleID = '../../third_party/blink/renderer/platform/heap/impl/marking_visitor.cc'
source_filename = "../../third_party/blink/renderer/platform/heap/impl/marking_visitor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.116", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.132", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.150", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.156", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.107", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.blink::Worklist.38"* }
%"class.blink::Worklist.38" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, i64, [64 x %"class.blink::HeapObjectHeader"*] }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::Worklist.45"* }
%"class.blink::Worklist.45" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::Worklist.52"* }
%"class.blink::Worklist.52" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::CustomCallbackItem"] }
%"struct.blink::CustomCallbackItem" = type { void (%"class.blink::LivenessBroker"*, i8*)*, i8* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.blink::Worklist.59"* }
%"class.blink::Worklist.59" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, i64, [256 x i8**] }
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::Worklist.66"* }
%"class.blink::Worklist.66" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::EphemeronPairItem"] }
%"struct.blink::EphemeronPairItem" = type { i8*, %"struct.blink::TraceDescriptor" }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::Worklist.73"* }
%"class.blink::Worklist.73" = type opaque
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::Worklist.80"* }
%"class.blink::Worklist.80" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.87", %"class.std::__1::__compressed_pair.94", %"class.std::__1::__compressed_pair.99", %"class.std::__1::__compressed_pair.101", [4 x i8] }>
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89", %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { i64 }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { float }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type opaque
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.124" }
%"class.WTF::VectorBuffer.124" = type { %"class.WTF::VectorBufferBase.125" }
%"class.WTF::VectorBufferBase.125" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.138" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.38"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.45"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.52"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.59"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.66"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::ConcurrentMarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::View" = type <{ %"class.blink::Worklist.80"*, i32, [4 x i8] }>
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.165", %"class.blink::FreeList", %"class.WTF::Vector.170" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.165" = type { %"class.WTF::VectorBuffer.166" }
%"class.WTF::VectorBuffer.166" = type { %"class.WTF::VectorBufferBase.167" }
%"class.WTF::VectorBufferBase.167" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.170" = type { %"class.WTF::VectorBuffer.171" }
%"class.WTF::VectorBuffer.171" = type { %"class.WTF::VectorBufferBase.172" }
%"class.WTF::VectorBufferBase.172" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.blink::TraceWrapperV8Reference" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }

$_ZN5blink18MarkingVisitorBaseD0Ev = comdat any

$_ZNK5blink7Visitor12IsConcurrentEv = comdat any

$_ZN5blink7Visitor25DeferredTraceIfConcurrentENS_15TraceDescriptorEm = comdat any

$_ZN5blink18MarkingVisitorBase5VisitEPKvNS_15TraceDescriptorE = comdat any

$_ZN5blink7Visitor5VisitERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE = comdat any

$_ZN5blink7Visitor9VisitRootEPKvNS_15TraceDescriptorERKN4base8LocationE = comdat any

$_ZNK5blink24ConcurrentMarkingVisitor12IsConcurrentEv = comdat any

$_ZN5blink24ConcurrentMarkingVisitor25DeferredTraceIfConcurrentENS_15TraceDescriptorEm = comdat any

$_ZN5blink14MarkingVisitorD2Ev = comdat any

$_ZN5blink14MarkingVisitorD0Ev = comdat any

$_ZN5blink7VisitorD2Ev = comdat any

$_ZNSt3__112__hash_tableIPKN5blink16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPKN5blink16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPKN5blink16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm = comdat any

$_ZN5blink8WorklistIPKPKvLi256ELi4EE13FlushToGlobalEi = comdat any

$_ZN5blink8WorklistINS_15TraceDescriptorELi512ELi4EE13FlushToGlobalEi = comdat any

$_ZN5blink8WorklistIPNS_16HeapObjectHeaderELi64ELi4EE13FlushToGlobalEi = comdat any

$_ZN5blink8WorklistIPKvLi16ELi4EE13FlushToGlobalEi = comdat any

$_ZN5blink8WorklistINS_18CustomCallbackItemELi64ELi4EE13FlushToGlobalEi = comdat any

$_ZN5blink8WorklistINS_17EphemeronPairItemELi64ELi4EE13FlushToGlobalEi = comdat any

$_ZN5blink8WorklistINS_30NotSafeToConcurrentlyTraceItemELi64ELi4EE13FlushToGlobalEi = comdat any

$_ZTVN5blink14MarkingVisitorE = comdat any

@_ZTVN5blink18MarkingVisitorBaseE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::Visitor"*)* @_ZN5blink7VisitorD2Ev to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*)* @_ZN5blink18MarkingVisitorBaseD0Ev to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)* @_ZN5blink18MarkingVisitorBase20RegisterWeakCallbackEPFvRKNS_14LivenessBrokerEPKvES5_ to i8*), i8* bitcast (i1 (%"class.blink::Visitor"*)* @_ZNK5blink7Visitor12IsConcurrentEv to i8*), i8* bitcast (i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)* @_ZN5blink7Visitor25DeferredTraceIfConcurrentENS_15TraceDescriptorEm to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)* @_ZN5blink18MarkingVisitorBase5VisitEPKvNS_15TraceDescriptorE to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)* @_ZN5blink18MarkingVisitorBase9VisitWeakEPKvS2_NS_15TraceDescriptorEPFvRKNS_14LivenessBrokerES2_E to i8*), i8* bitcast (void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)* @_ZN5blink7Visitor5VisitERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE to i8*), i8* bitcast (void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)* @_ZN5blink7Visitor9VisitRootEPKvNS_15TraceDescriptorERKN4base8LocationE to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)* @_ZN5blink18MarkingVisitorBase14VisitEphemeronEPKvNS_15TraceDescriptorE to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)* @_ZN5blink18MarkingVisitorBase18VisitWeakContainerEPKvPKS2_NS_15TraceDescriptorES5_PFvRKNS_14LivenessBrokerES2_ES2_ to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, i8**)* @_ZN5blink18MarkingVisitorBase19RegisterMovableSlotEPKPKv to i8*)] }, align 8
@.str = private unnamed_addr constant [71 x i8] c"../../third_party/blink/renderer/platform/heap/impl/marking_visitor.cc\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"header->IsMarked()\00", align 1
@_ZN5blink14MarkingVisitor30RecentlyRetracedWeakContainers13kMaxCacheSizeE = hidden local_unnamed_addr constant i64 8, align 8
@_ZTVN5blink14MarkingVisitorE = linkonce_odr hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::MarkingVisitor"*)* @_ZN5blink14MarkingVisitorD2Ev to i8*), i8* bitcast (void (%"class.blink::MarkingVisitor"*)* @_ZN5blink14MarkingVisitorD0Ev to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)* @_ZN5blink18MarkingVisitorBase20RegisterWeakCallbackEPFvRKNS_14LivenessBrokerEPKvES5_ to i8*), i8* bitcast (i1 (%"class.blink::Visitor"*)* @_ZNK5blink7Visitor12IsConcurrentEv to i8*), i8* bitcast (i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)* @_ZN5blink7Visitor25DeferredTraceIfConcurrentENS_15TraceDescriptorEm to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)* @_ZN5blink18MarkingVisitorBase5VisitEPKvNS_15TraceDescriptorE to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)* @_ZN5blink18MarkingVisitorBase9VisitWeakEPKvS2_NS_15TraceDescriptorEPFvRKNS_14LivenessBrokerES2_E to i8*), i8* bitcast (void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)* @_ZN5blink7Visitor5VisitERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE to i8*), i8* bitcast (void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)* @_ZN5blink7Visitor9VisitRootEPKvNS_15TraceDescriptorERKN4base8LocationE to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)* @_ZN5blink18MarkingVisitorBase14VisitEphemeronEPKvNS_15TraceDescriptorE to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)* @_ZN5blink18MarkingVisitorBase18VisitWeakContainerEPKvPKS2_NS_15TraceDescriptorES5_PFvRKNS_14LivenessBrokerES2_ES2_ to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, i8**)* @_ZN5blink18MarkingVisitorBase19RegisterMovableSlotEPKPKv to i8*)] }, comdat, align 8
@_ZTVN5blink24ConcurrentMarkingVisitorE = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ConcurrentMarkingVisitor"*)* @_ZN5blink24ConcurrentMarkingVisitorD2Ev to i8*), i8* bitcast (void (%"class.blink::ConcurrentMarkingVisitor"*)* @_ZN5blink24ConcurrentMarkingVisitorD0Ev to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)* @_ZN5blink18MarkingVisitorBase20RegisterWeakCallbackEPFvRKNS_14LivenessBrokerEPKvES5_ to i8*), i8* bitcast (i1 (%"class.blink::ConcurrentMarkingVisitor"*)* @_ZNK5blink24ConcurrentMarkingVisitor12IsConcurrentEv to i8*), i8* bitcast (i1 (%"class.blink::ConcurrentMarkingVisitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)* @_ZN5blink24ConcurrentMarkingVisitor25DeferredTraceIfConcurrentENS_15TraceDescriptorEm to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)* @_ZN5blink18MarkingVisitorBase5VisitEPKvNS_15TraceDescriptorE to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)* @_ZN5blink18MarkingVisitorBase9VisitWeakEPKvS2_NS_15TraceDescriptorEPFvRKNS_14LivenessBrokerES2_E to i8*), i8* bitcast (void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)* @_ZN5blink7Visitor5VisitERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE to i8*), i8* bitcast (void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)* @_ZN5blink7Visitor9VisitRootEPKvNS_15TraceDescriptorERKN4base8LocationE to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)* @_ZN5blink18MarkingVisitorBase14VisitEphemeronEPKvNS_15TraceDescriptorE to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)* @_ZN5blink18MarkingVisitorBase18VisitWeakContainerEPKvPKS2_NS_15TraceDescriptorES5_PFvRKNS_14LivenessBrokerES2_ES2_ to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, i8**)* @_ZN5blink18MarkingVisitorBase19RegisterMovableSlotEPKPKv to i8*), i8* bitcast (void (%"class.blink::ConcurrentMarkingVisitor"*)* @_ZN5blink24ConcurrentMarkingVisitor14FlushWorklistsEv to i8*)] }, align 8
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1

@_ZN5blink18MarkingVisitorBaseC1EPNS_11ThreadStateENS0_11MarkingModeEi = hidden unnamed_addr alias void (%"class.blink::MarkingVisitorBase"*, %"class.blink::ThreadState"*, i32, i32), void (%"class.blink::MarkingVisitorBase"*, %"class.blink::ThreadState"*, i32, i32)* @_ZN5blink18MarkingVisitorBaseC2EPNS_11ThreadStateENS0_11MarkingModeEi
@_ZN5blink14MarkingVisitorC1EPNS_11ThreadStateENS_18MarkingVisitorBase11MarkingModeE = hidden unnamed_addr alias void (%"class.blink::MarkingVisitor"*, %"class.blink::ThreadState"*, i32), void (%"class.blink::MarkingVisitor"*, %"class.blink::ThreadState"*, i32)* @_ZN5blink14MarkingVisitorC2EPNS_11ThreadStateENS_18MarkingVisitorBase11MarkingModeE
@_ZN5blink24ConcurrentMarkingVisitorC1EPNS_11ThreadStateENS_18MarkingVisitorBase11MarkingModeEi = hidden unnamed_addr alias void (%"class.blink::ConcurrentMarkingVisitor"*, %"class.blink::ThreadState"*, i32, i32), void (%"class.blink::ConcurrentMarkingVisitor"*, %"class.blink::ThreadState"*, i32, i32)* @_ZN5blink24ConcurrentMarkingVisitorC2EPNS_11ThreadStateENS_18MarkingVisitorBase11MarkingModeEi
@_ZN5blink24ConcurrentMarkingVisitorD1Ev = hidden unnamed_addr alias void (%"class.blink::ConcurrentMarkingVisitor"*), void (%"class.blink::ConcurrentMarkingVisitor"*)* @_ZN5blink24ConcurrentMarkingVisitorD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink18MarkingVisitorBaseC2EPNS_11ThreadStateENS0_11MarkingModeEi(%"class.blink::MarkingVisitorBase"* nocapture, %"class.blink::ThreadState"*, i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 0, i32 1
  store %"class.blink::ThreadState"* %1, %"class.blink::ThreadState"** %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink18MarkingVisitorBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %9, i64 0, i32 6, i32 0, i32 0, i32 0
  %11 = bitcast %"class.blink::Worklist"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View"* %7 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 1, i32 1
  store i32 %3, i32* %14, align 8
  %15 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 2
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %8, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 7, i32 0, i32 0, i32 0
  %18 = bitcast %"class.blink::Worklist.38"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View"* %15 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 2, i32 1
  store i32 %3, i32* %21, align 8
  %22 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 3
  %23 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %8, align 8
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %23, i64 0, i32 8, i32 0, i32 0, i32 0
  %25 = bitcast %"class.blink::Worklist.45"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.blink::Worklist<const void *, 16, 4>::View"* %22 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 3, i32 1
  store i32 %3, i32* %28, align 8
  %29 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 4
  %30 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %8, align 8
  %31 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %30, i64 0, i32 10, i32 0, i32 0, i32 0
  %32 = bitcast %"class.blink::Worklist.52"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View"* %29 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 4, i32 1
  store i32 %3, i32* %35, align 8
  %36 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 5
  %37 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %8, align 8
  %38 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %37, i64 0, i32 11, i32 0, i32 0, i32 0
  %39 = bitcast %"class.blink::Worklist.59"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.blink::Worklist<const void *const *, 256, 4>::View"* %36 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 5, i32 1
  store i32 %3, i32* %42, align 8
  %43 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 6
  %44 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %8, align 8
  %45 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %44, i64 0, i32 12, i32 0, i32 0, i32 0
  %46 = bitcast %"class.blink::Worklist.66"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View"* %43 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 6, i32 1
  store i32 %3, i32* %49, align 8
  %50 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 7
  %51 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %8, align 8
  %52 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %51, i64 0, i32 13, i32 0, i32 0, i32 0
  %53 = bitcast %"class.blink::Worklist.66"** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View"* %50 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 7, i32 1
  store i32 %3, i32* %56, align 8
  %57 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 8
  %58 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %8, align 8
  %59 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %58, i64 0, i32 16, i32 0, i32 0, i32 0
  %60 = bitcast %"class.blink::WeakContainersWorklist"** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.blink::WeakContainersWorklist"** %57 to i64*
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 9
  store i64 0, i64* %63, align 8
  %64 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 10
  store i32 %2, i32* %64, align 8
  %65 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 11
  store i32 %3, i32* %65, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18MarkingVisitorBase24FlushCompactionWorklistsEv(%"class.blink::MarkingVisitorBase"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 10
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 5, i32 0
  %7 = load %"class.blink::Worklist.59"*, %"class.blink::Worklist.59"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 5, i32 1
  %9 = load i32, i32* %8, align 8
  tail call void @_ZN5blink8WorklistIPKPKvLi256ELi4EE13FlushToGlobalEi(%"class.blink::Worklist.59"* %7, i32 %9) #14
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18MarkingVisitorBase20RegisterWeakCallbackEPFvRKNS_14LivenessBrokerEPKvES5_(%"class.blink::MarkingVisitorBase"* nocapture readonly, void (%"class.blink::LivenessBroker"*, i8*)*, i8*) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 4, i32 0
  %5 = load %"class.blink::Worklist.52"*, %"class.blink::Worklist.52"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 4, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds %"class.blink::Worklist.52", %"class.blink::Worklist.52"* %5, i64 0, i32 0, i64 %8, i32 0
  %10 = load %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"* %10, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 64
  br i1 %13, label %18, label %14

14:                                               ; preds = %3
  %15 = add i64 %12, 1
  store i64 %15, i64* %11, align 8
  %16 = getelementptr inbounds %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"* %10, i64 0, i32 2, i64 %12, i32 0
  store void (%"class.blink::LivenessBroker"*, i8*)* %1, void (%"class.blink::LivenessBroker"*, i8*)** %16, align 8
  %17 = getelementptr inbounds %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"* %10, i64 0, i32 2, i64 %12, i32 1
  br label %42

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.blink::Worklist.52", %"class.blink::Worklist.52"* %5, i64 0, i32 1
  %20 = getelementptr inbounds %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %20) #14
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool"* %19, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %24) #14
  br label %25

25:                                               ; preds = %23, %18
  %26 = getelementptr inbounds %"class.blink::Worklist.52", %"class.blink::Worklist.52"* %5, i64 0, i32 1, i32 1
  %27 = bitcast %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"* %10 to i64*
  store i64 %28, i64* %29, align 8
  %30 = ptrtoint %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"* %10 to i64
  store atomic volatile i64 %30, i64* %27 monotonic, align 8
  %31 = getelementptr inbounds %"class.blink::Worklist.52", %"class.blink::Worklist.52"* %5, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i64* %31, i64 1 monotonic
  %33 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %20) #14
  %34 = tail call noalias i8* @malloc(i64 1040) #14
  %35 = bitcast %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"** %9 to i8**
  store i8* %34, i8** %35, align 8
  %36 = getelementptr inbounds i8, i8* %34, i64 8
  %37 = bitcast i8* %36 to i64*
  store i64 1, i64* %37, align 8
  %38 = getelementptr inbounds i8, i8* %34, i64 16
  %39 = bitcast i8* %38 to void (%"class.blink::LivenessBroker"*, i8*)**
  store void (%"class.blink::LivenessBroker"*, i8*)* %1, void (%"class.blink::LivenessBroker"*, i8*)** %39, align 8
  %40 = getelementptr inbounds i8, i8* %34, i64 24
  %41 = bitcast i8* %40 to i8**
  br label %42

42:                                               ; preds = %14, %25
  %43 = phi i8** [ %17, %14 ], [ %41, %25 ]
  store i8* %2, i8** %43, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18MarkingVisitorBase19RegisterMovableSlotEPKPKv(%"class.blink::MarkingVisitorBase"* nocapture readonly, i8**) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 10
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %48

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %9, align 8
  %11 = tail call zeroext i1 @_ZN5blink10ThreadHeap27ShouldRegisterMovingAddressEv(%"class.blink::ThreadHeap"* %10) #14
  br i1 %11, label %12, label %48

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 5, i32 0
  %14 = load %"class.blink::Worklist.59"*, %"class.blink::Worklist.59"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 5, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %"class.blink::Worklist.59", %"class.blink::Worklist.59"* %14, i64 0, i32 0, i64 %17, i32 0
  %19 = load %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Worklist<const void *const *, 256, 4>::Segment", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %19, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 256
  br i1 %22, label %26, label %23

23:                                               ; preds = %12
  %24 = add i64 %21, 1
  store i64 %24, i64* %20, align 8
  %25 = getelementptr inbounds %"class.blink::Worklist<const void *const *, 256, 4>::Segment", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %19, i64 0, i32 2, i64 %21
  store i8** %1, i8*** %25, align 8
  br label %48

26:                                               ; preds = %12
  %27 = getelementptr inbounds %"class.blink::Worklist.59", %"class.blink::Worklist.59"* %14, i64 0, i32 1
  %28 = getelementptr inbounds %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool", %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %28) #14
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %33, label %31, !prof !2

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool", %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool"* %27, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %32) #14
  br label %33

33:                                               ; preds = %31, %26
  %34 = getelementptr inbounds %"class.blink::Worklist.59", %"class.blink::Worklist.59"* %14, i64 0, i32 1, i32 1
  %35 = bitcast %"class.blink::Worklist<const void *const *, 256, 4>::Segment"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %19 to i64*
  store i64 %36, i64* %37, align 8
  %38 = ptrtoint %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %19 to i64
  store atomic volatile i64 %38, i64* %35 monotonic, align 8
  %39 = getelementptr inbounds %"class.blink::Worklist.59", %"class.blink::Worklist.59"* %14, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i64* %39, i64 1 monotonic
  %41 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %28) #14
  %42 = tail call noalias i8* @malloc(i64 2064) #14
  %43 = bitcast %"class.blink::Worklist<const void *const *, 256, 4>::Segment"** %18 to i8**
  store i8* %42, i8** %43, align 8
  %44 = getelementptr inbounds i8, i8* %42, i64 8
  %45 = bitcast i8* %44 to i64*
  store i64 1, i64* %45, align 8
  %46 = getelementptr inbounds i8, i8* %42, i64 16
  %47 = bitcast i8* %46 to i8***
  store i8** %1, i8*** %47, align 8
  br label %48

48:                                               ; preds = %33, %23, %2, %6
  ret void
}

declare zeroext i1 @_ZN5blink10ThreadHeap27ShouldRegisterMovingAddressEv(%"class.blink::ThreadHeap"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18MarkingVisitorBase9VisitWeakEPKvS2_NS_15TraceDescriptorEPFvRKNS_14LivenessBrokerES2_E(%"class.blink::MarkingVisitorBase"* nocapture readonly, i8* nocapture readnone, i8*, i8*, void (%"class.blink::Visitor"*, i8*)* nocapture readnone, void (%"class.blink::LivenessBroker"*, i8*)*) unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds i8, i8* %3, i64 -4
  %8 = bitcast i8* %7 to i16*
  %9 = load atomic i16, i16* %8 acquire, align 2
  %10 = and i16 %9, 1
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %12, label %48

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 3, i32 0
  %14 = load %"class.blink::Worklist.45"*, %"class.blink::Worklist.45"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 3, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %"class.blink::Worklist.45", %"class.blink::Worklist.45"* %14, i64 0, i32 0, i64 %17, i32 0
  %19 = load %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::Segment", %"class.blink::Worklist<const void *, 16, 4>::Segment"* %19, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 16
  br i1 %22, label %26, label %23

23:                                               ; preds = %12
  %24 = add i64 %21, 1
  store i64 %24, i64* %20, align 8
  %25 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::Segment", %"class.blink::Worklist<const void *, 16, 4>::Segment"* %19, i64 0, i32 2, i64 %21
  store i8* %3, i8** %25, align 8
  br label %93

26:                                               ; preds = %12
  %27 = getelementptr inbounds %"class.blink::Worklist.45", %"class.blink::Worklist.45"* %14, i64 0, i32 1
  %28 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::GlobalPool", %"class.blink::Worklist<const void *, 16, 4>::GlobalPool"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %28) #14
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %33, label %31, !prof !2

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::GlobalPool", %"class.blink::Worklist<const void *, 16, 4>::GlobalPool"* %27, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %32) #14
  br label %33

33:                                               ; preds = %31, %26
  %34 = getelementptr inbounds %"class.blink::Worklist.45", %"class.blink::Worklist.45"* %14, i64 0, i32 1, i32 1
  %35 = bitcast %"class.blink::Worklist<const void *, 16, 4>::Segment"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.blink::Worklist<const void *, 16, 4>::Segment"* %19 to i64*
  store i64 %36, i64* %37, align 8
  %38 = ptrtoint %"class.blink::Worklist<const void *, 16, 4>::Segment"* %19 to i64
  store atomic volatile i64 %38, i64* %35 monotonic, align 8
  %39 = getelementptr inbounds %"class.blink::Worklist.45", %"class.blink::Worklist.45"* %14, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i64* %39, i64 1 monotonic
  %41 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %28) #14
  %42 = tail call noalias i8* @malloc(i64 144) #14
  %43 = bitcast %"class.blink::Worklist<const void *, 16, 4>::Segment"** %18 to i8**
  store i8* %42, i8** %43, align 8
  %44 = getelementptr inbounds i8, i8* %42, i64 8
  %45 = bitcast i8* %44 to i64*
  store i64 1, i64* %45, align 8
  %46 = getelementptr inbounds i8, i8* %42, i64 16
  %47 = bitcast i8* %46 to i8**
  store i8* %3, i8** %47, align 8
  br label %93

48:                                               ; preds = %6
  %49 = getelementptr inbounds i8, i8* %3, i64 -2
  %50 = bitcast i8* %49 to i16*
  %51 = load atomic i16, i16* %50 monotonic, align 2
  %52 = and i16 %51, 1
  %53 = icmp eq i16 %52, 0
  br i1 %53, label %54, label %93

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 4, i32 0
  %56 = load %"class.blink::Worklist.52"*, %"class.blink::Worklist.52"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 4, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds %"class.blink::Worklist.52", %"class.blink::Worklist.52"* %56, i64 0, i32 0, i64 %59, i32 0
  %61 = load %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"* %61, i64 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, 64
  br i1 %64, label %69, label %65

65:                                               ; preds = %54
  %66 = add i64 %63, 1
  store i64 %66, i64* %62, align 8
  %67 = getelementptr inbounds %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"* %61, i64 0, i32 2, i64 %63, i32 0
  store void (%"class.blink::LivenessBroker"*, i8*)* %5, void (%"class.blink::LivenessBroker"*, i8*)** %67, align 8
  %68 = getelementptr inbounds %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"* %61, i64 0, i32 2, i64 %63, i32 1
  store i8* %2, i8** %68, align 8
  br label %93

69:                                               ; preds = %54
  %70 = getelementptr inbounds %"class.blink::Worklist.52", %"class.blink::Worklist.52"* %56, i64 0, i32 1
  %71 = getelementptr inbounds %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool"* %70, i64 0, i32 0, i32 0, i32 0
  %72 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %71) #14
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %76, label %74, !prof !2

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool"* %70, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %75) #14
  br label %76

76:                                               ; preds = %74, %69
  %77 = getelementptr inbounds %"class.blink::Worklist.52", %"class.blink::Worklist.52"* %56, i64 0, i32 1, i32 1
  %78 = bitcast %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"* %61 to i64*
  store i64 %79, i64* %80, align 8
  %81 = ptrtoint %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"* %61 to i64
  store atomic volatile i64 %81, i64* %78 monotonic, align 8
  %82 = getelementptr inbounds %"class.blink::Worklist.52", %"class.blink::Worklist.52"* %56, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw add i64* %82, i64 1 monotonic
  %84 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %71) #14
  %85 = tail call noalias i8* @malloc(i64 1040) #14
  %86 = bitcast %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"** %60 to i8**
  store i8* %85, i8** %86, align 8
  %87 = getelementptr inbounds i8, i8* %85, i64 8
  %88 = bitcast i8* %87 to i64*
  store i64 1, i64* %88, align 8
  %89 = getelementptr inbounds i8, i8* %85, i64 16
  %90 = bitcast i8* %89 to void (%"class.blink::LivenessBroker"*, i8*)**
  store void (%"class.blink::LivenessBroker"*, i8*)* %5, void (%"class.blink::LivenessBroker"*, i8*)** %90, align 8
  %91 = getelementptr inbounds i8, i8* %85, i64 24
  %92 = bitcast i8* %91 to i8**
  store i8* %2, i8** %92, align 8
  br label %93

93:                                               ; preds = %48, %76, %65, %33, %23
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18MarkingVisitorBase14VisitEphemeronEPKvNS_15TraceDescriptorE(%"class.blink::MarkingVisitorBase"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds i8, i8* %1, i64 -4
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 acquire, align 2
  %8 = and i16 %7, 1
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %58, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds i8, i8* %1, i64 -2
  %12 = bitcast i8* %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = and i16 %13, 1
  %15 = icmp eq i16 %14, 0
  br i1 %15, label %16, label %58

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 6, i32 0
  %18 = load %"class.blink::Worklist.66"*, %"class.blink::Worklist.66"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 6, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds %"class.blink::Worklist.66", %"class.blink::Worklist.66"* %18, i64 0, i32 0, i64 %21, i32 0
  %23 = load %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"* %23, i64 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 64
  br i1 %26, label %32, label %27

27:                                               ; preds = %16
  %28 = add i64 %25, 1
  store i64 %28, i64* %24, align 8
  %29 = getelementptr inbounds %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"* %23, i64 0, i32 2, i64 %25, i32 0
  store i8* %1, i8** %29, align 8
  %30 = getelementptr inbounds %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"* %23, i64 0, i32 2, i64 %25, i32 1, i32 0
  store i8* %2, i8** %30, align 8
  %31 = getelementptr inbounds %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"* %23, i64 0, i32 2, i64 %25, i32 1, i32 1
  store void (%"class.blink::Visitor"*, i8*)* %3, void (%"class.blink::Visitor"*, i8*)** %31, align 8
  br label %60

32:                                               ; preds = %16
  %33 = getelementptr inbounds %"class.blink::Worklist.66", %"class.blink::Worklist.66"* %18, i64 0, i32 1
  %34 = getelementptr inbounds %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %34) #14
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %39, label %37, !prof !2

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool"* %33, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %38) #14
  br label %39

39:                                               ; preds = %37, %32
  %40 = getelementptr inbounds %"class.blink::Worklist.66", %"class.blink::Worklist.66"* %18, i64 0, i32 1, i32 1
  %41 = bitcast %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"* %23 to i64*
  store i64 %42, i64* %43, align 8
  %44 = ptrtoint %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"* %23 to i64
  store atomic volatile i64 %44, i64* %41 monotonic, align 8
  %45 = getelementptr inbounds %"class.blink::Worklist.66", %"class.blink::Worklist.66"* %18, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i64* %45, i64 1 monotonic
  %47 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %34) #14
  %48 = tail call noalias i8* @malloc(i64 1552) #14
  %49 = bitcast %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"** %22 to i8**
  store i8* %48, i8** %49, align 8
  %50 = getelementptr inbounds i8, i8* %48, i64 8
  %51 = bitcast i8* %50 to i64*
  store i64 1, i64* %51, align 8
  %52 = getelementptr inbounds i8, i8* %48, i64 16
  %53 = bitcast i8* %52 to i8**
  store i8* %1, i8** %53, align 8
  %54 = getelementptr inbounds i8, i8* %48, i64 24
  %55 = bitcast i8* %54 to i8**
  store i8* %2, i8** %55, align 8
  %56 = getelementptr inbounds i8, i8* %48, i64 32
  %57 = bitcast i8* %56 to void (%"class.blink::Visitor"*, i8*)**
  store void (%"class.blink::Visitor"*, i8*)* %3, void (%"class.blink::Visitor"*, i8*)** %57, align 8
  br label %60

58:                                               ; preds = %10, %4
  %59 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 0
  tail call void %3(%"class.blink::Visitor"* %59, i8* %2) #14
  br label %60

60:                                               ; preds = %39, %27, %58
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18MarkingVisitorBase18VisitWeakContainerEPKvPKS2_NS_15TraceDescriptorES5_PFvRKNS_14LivenessBrokerES2_ES2_(%"class.blink::MarkingVisitorBase"*, i8*, i8** nocapture readnone, i8* nocapture readnone, void (%"class.blink::Visitor"*, i8*)* nocapture readnone, %"struct.blink::TraceDescriptor"* nocapture readonly byval(%"struct.blink::TraceDescriptor") align 8, void (%"class.blink::LivenessBroker"*, i8*)*, i8*) unnamed_addr #1 align 2 {
  %9 = alloca %"class.blink::HeapObjectHeader"*, align 8
  %10 = icmp eq i8* %1, null
  br i1 %10, label %137, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds i8, i8* %1, i64 -8
  %13 = getelementptr inbounds i8, i8* %1, i64 -4
  %14 = bitcast i8* %13 to i16*
  %15 = load atomic i16, i16* %14 acquire, align 2
  %16 = and i16 %15, 1
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %54

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 3, i32 0
  %20 = load %"class.blink::Worklist.45"*, %"class.blink::Worklist.45"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 3, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %"class.blink::Worklist.45", %"class.blink::Worklist.45"* %20, i64 0, i32 0, i64 %23, i32 0
  %25 = load %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::Segment", %"class.blink::Worklist<const void *, 16, 4>::Segment"* %25, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %27, 16
  br i1 %28, label %32, label %29

29:                                               ; preds = %18
  %30 = add i64 %27, 1
  store i64 %30, i64* %26, align 8
  %31 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::Segment", %"class.blink::Worklist<const void *, 16, 4>::Segment"* %25, i64 0, i32 2, i64 %27
  store i8* %1, i8** %31, align 8
  br label %137

32:                                               ; preds = %18
  %33 = getelementptr inbounds %"class.blink::Worklist.45", %"class.blink::Worklist.45"* %20, i64 0, i32 1
  %34 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::GlobalPool", %"class.blink::Worklist<const void *, 16, 4>::GlobalPool"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %34) #14
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %39, label %37, !prof !2

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::GlobalPool", %"class.blink::Worklist<const void *, 16, 4>::GlobalPool"* %33, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %38) #14
  br label %39

39:                                               ; preds = %37, %32
  %40 = getelementptr inbounds %"class.blink::Worklist.45", %"class.blink::Worklist.45"* %20, i64 0, i32 1, i32 1
  %41 = bitcast %"class.blink::Worklist<const void *, 16, 4>::Segment"** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.blink::Worklist<const void *, 16, 4>::Segment"* %25 to i64*
  store i64 %42, i64* %43, align 8
  %44 = ptrtoint %"class.blink::Worklist<const void *, 16, 4>::Segment"* %25 to i64
  store atomic volatile i64 %44, i64* %41 monotonic, align 8
  %45 = getelementptr inbounds %"class.blink::Worklist.45", %"class.blink::Worklist.45"* %20, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i64* %45, i64 1 monotonic
  %47 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %34) #14
  %48 = tail call noalias i8* @malloc(i64 144) #14
  %49 = bitcast %"class.blink::Worklist<const void *, 16, 4>::Segment"** %24 to i8**
  store i8* %48, i8** %49, align 8
  %50 = getelementptr inbounds i8, i8* %48, i64 8
  %51 = bitcast i8* %50 to i64*
  store i64 1, i64* %51, align 8
  %52 = getelementptr inbounds i8, i8* %48, i64 16
  %53 = bitcast i8* %52 to i8**
  store i8* %1, i8** %53, align 8
  br label %137

54:                                               ; preds = %11
  %55 = getelementptr inbounds i8, i8* %1, i64 -2
  %56 = bitcast i8* %55 to i16*
  %57 = load atomic i16, i16* %56 monotonic, align 2
  %58 = and i16 %57, 1
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %54
  %61 = or i16 %57, 1
  %62 = cmpxchg i16* %56, i16 %57, i16 %61 monotonic monotonic
  br label %63

63:                                               ; preds = %54, %60
  %64 = load atomic i16, i16* %56 monotonic, align 2
  %65 = icmp ult i16 %64, 4
  br i1 %65, label %66, label %73

66:                                               ; preds = %63
  %67 = ptrtoint i8* %12 to i64
  %68 = and i64 %67, -131072
  %69 = inttoptr i64 %68 to i8*
  %70 = getelementptr inbounds i8, i8* %69, i64 4144
  %71 = bitcast i8* %70 to i64*
  %72 = load i64, i64* %71, align 16
  br label %78

73:                                               ; preds = %63
  %74 = load atomic i16, i16* %56 monotonic, align 2
  %75 = lshr i16 %74, 2
  %76 = zext i16 %75 to i64
  %77 = shl nuw nsw i64 %76, 3
  br label %78

78:                                               ; preds = %66, %73
  %79 = phi i64 [ %72, %66 ], [ %77, %73 ]
  %80 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 9
  %81 = load i64, i64* %80, align 8
  %82 = add i64 %81, %79
  store i64 %82, i64* %80, align 8
  %83 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 8
  %84 = load %"class.blink::WeakContainersWorklist"*, %"class.blink::WeakContainersWorklist"** %83, align 8
  %85 = bitcast %"class.blink::HeapObjectHeader"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85)
  %86 = bitcast %"class.blink::HeapObjectHeader"** %9 to i8**
  store i8* %12, i8** %86, align 8
  %87 = getelementptr inbounds %"class.blink::WeakContainersWorklist", %"class.blink::WeakContainersWorklist"* %84, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %87) #14
  %88 = getelementptr inbounds %"class.blink::WeakContainersWorklist", %"class.blink::WeakContainersWorklist"* %84, i64 0, i32 1, i32 0
  %89 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIPKN5blink16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %88, %"class.blink::HeapObjectHeader"** nonnull dereferenceable(8) %9, %"class.blink::HeapObjectHeader"** nonnull dereferenceable(8) %9) #14
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %87) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85)
  %90 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 4, i32 0
  %91 = load %"class.blink::Worklist.52"*, %"class.blink::Worklist.52"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 4, i32 1
  %93 = load i32, i32* %92, align 8
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds %"class.blink::Worklist.52", %"class.blink::Worklist.52"* %91, i64 0, i32 0, i64 %94, i32 0
  %96 = load %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"* %96, i64 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = icmp eq i64 %98, 64
  br i1 %99, label %104, label %100

100:                                              ; preds = %78
  %101 = add i64 %98, 1
  store i64 %101, i64* %97, align 8
  %102 = getelementptr inbounds %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"* %96, i64 0, i32 2, i64 %98, i32 0
  store void (%"class.blink::LivenessBroker"*, i8*)* %6, void (%"class.blink::LivenessBroker"*, i8*)** %102, align 8
  %103 = getelementptr inbounds %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"* %96, i64 0, i32 2, i64 %98, i32 1
  br label %128

104:                                              ; preds = %78
  %105 = getelementptr inbounds %"class.blink::Worklist.52", %"class.blink::Worklist.52"* %91, i64 0, i32 1
  %106 = getelementptr inbounds %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %106) #14
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %111, label %109, !prof !2

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool"* %105, i64 0, i32 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %110) #14
  br label %111

111:                                              ; preds = %109, %104
  %112 = getelementptr inbounds %"class.blink::Worklist.52", %"class.blink::Worklist.52"* %91, i64 0, i32 1, i32 1
  %113 = bitcast %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"* %96 to i64*
  store i64 %114, i64* %115, align 8
  %116 = ptrtoint %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"* %96 to i64
  store atomic volatile i64 %116, i64* %113 monotonic, align 8
  %117 = getelementptr inbounds %"class.blink::Worklist.52", %"class.blink::Worklist.52"* %91, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = atomicrmw add i64* %117, i64 1 monotonic
  %119 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %106) #14
  %120 = call noalias i8* @malloc(i64 1040) #14
  %121 = bitcast %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"** %95 to i8**
  store i8* %120, i8** %121, align 8
  %122 = getelementptr inbounds i8, i8* %120, i64 8
  %123 = bitcast i8* %122 to i64*
  store i64 1, i64* %123, align 8
  %124 = getelementptr inbounds i8, i8* %120, i64 16
  %125 = bitcast i8* %124 to void (%"class.blink::LivenessBroker"*, i8*)**
  store void (%"class.blink::LivenessBroker"*, i8*)* %6, void (%"class.blink::LivenessBroker"*, i8*)** %125, align 8
  %126 = getelementptr inbounds i8, i8* %120, i64 24
  %127 = bitcast i8* %126 to i8**
  br label %128

128:                                              ; preds = %100, %111
  %129 = phi i8** [ %103, %100 ], [ %127, %111 ]
  store i8* %7, i8** %129, align 8
  %130 = getelementptr inbounds %"struct.blink::TraceDescriptor", %"struct.blink::TraceDescriptor"* %5, i64 0, i32 1
  %131 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %130, align 8
  %132 = icmp eq void (%"class.blink::Visitor"*, i8*)* %131, null
  br i1 %132, label %137, label %133

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 0
  %135 = getelementptr inbounds %"struct.blink::TraceDescriptor", %"struct.blink::TraceDescriptor"* %5, i64 0, i32 0
  %136 = load i8*, i8** %135, align 8
  call void %131(%"class.blink::Visitor"* %134, i8* %136) #14
  br label %137

137:                                              ; preds = %39, %29, %128, %133, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18MarkingVisitorBase22DynamicallyMarkAddressEPKh(%"class.blink::MarkingVisitorBase"* nocapture readonly, i8*) local_unnamed_addr #1 align 2 {
  %3 = ptrtoint i8* %1 to i64
  %4 = and i64 %3, -131072
  %5 = inttoptr i64 %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 4138
  %7 = load i8, i8* %6, align 2
  %8 = icmp eq i8 %7, 1
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %5, i64 4160
  br label %49

11:                                               ; preds = %2
  %12 = getelementptr inbounds i8, i8* %5, i64 4096
  %13 = bitcast i8* %12 to %"class.blink::NormalPage"*
  %14 = getelementptr inbounds i8, i8* %5, i64 4400
  %15 = bitcast i8* %14 to i8**
  %16 = bitcast i8* %14 to i64*
  %17 = load i64, i64* %16, align 16
  %18 = sub i64 %3, %17
  %19 = lshr i64 %18, 3
  %20 = lshr i64 %18, 6
  %21 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %13, i64 0, i32 2, i32 0, i32 1, i64 %20
  %22 = load atomic i8, i8* %21 acquire, align 1
  %23 = trunc i64 %19 to i32
  %24 = and i32 %23, 7
  %25 = shl i32 2, %24
  %26 = trunc i32 %25 to i8
  %27 = add i8 %26, -1
  %28 = and i8 %27, %22
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %11, %30
  %31 = phi i64 [ %32, %30 ], [ %20, %11 ]
  %32 = add i64 %31, -1
  %33 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %13, i64 0, i32 2, i32 0, i32 1, i64 %32
  %34 = load atomic i8, i8* %33 acquire, align 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %30, label %36

36:                                               ; preds = %30, %11
  %37 = phi i64 [ %20, %11 ], [ %32, %30 ]
  %38 = phi i8 [ %28, %11 ], [ %34, %30 ]
  %39 = zext i8 %38 to i32
  %40 = tail call i32 @llvm.ctlz.i32(i32 %39, i1 true) #14, !range !3
  %41 = add nsw i32 %40, -24
  %42 = shl i64 %37, 3
  %43 = or i64 %42, 7
  %44 = sext i32 %41 to i64
  %45 = sub i64 %43, %44
  %46 = shl i64 %45, 3
  %47 = load i8*, i8** %15, align 16
  %48 = getelementptr inbounds i8, i8* %47, i64 %46
  br label %49

49:                                               ; preds = %9, %36
  %50 = phi i8* [ %10, %9 ], [ %48, %36 ]
  %51 = getelementptr inbounds i8, i8* %50, i64 6
  %52 = bitcast i8* %51 to i16*
  %53 = load atomic i16, i16* %52 monotonic, align 2
  %54 = and i16 %53, 1
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %56, label %113

56:                                               ; preds = %49
  %57 = or i16 %53, 1
  %58 = cmpxchg i16* %52, i16 %53, i16 %57 monotonic monotonic
  %59 = extractvalue { i16, i1 } %58, 1
  br i1 %59, label %60, label %113

60:                                               ; preds = %56
  %61 = getelementptr inbounds i8, i8* %50, i64 8
  %62 = getelementptr inbounds i8, i8* %50, i64 4
  %63 = bitcast i8* %62 to i16*
  %64 = load atomic i16, i16* %63 acquire, align 2
  %65 = lshr i16 %64, 2
  %66 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %67 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %66, i64 0, i32 0
  %68 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %67, align 8
  %69 = zext i16 %65 to i64
  %70 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %68, i64 %69
  %71 = bitcast %"struct.blink::GCInfo"** %70 to i64**
  %72 = load i64*, i64** %71, align 8
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 1, i32 0
  %75 = load %"class.blink::Worklist"*, %"class.blink::Worklist"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 1, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %75, i64 0, i32 0, i64 %78, i32 0
  %80 = load %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"* %80, i64 0, i32 1
  %82 = load i64, i64* %81, align 8
  %83 = icmp eq i64 %82, 512
  br i1 %83, label %89, label %84

84:                                               ; preds = %60
  %85 = add i64 %82, 1
  store i64 %85, i64* %81, align 8
  %86 = getelementptr inbounds %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"* %80, i64 0, i32 2, i64 %82, i32 0
  store i8* %61, i8** %86, align 8
  %87 = getelementptr inbounds %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"* %80, i64 0, i32 2, i64 %82, i32 1
  %88 = bitcast void (%"class.blink::Visitor"*, i8*)** %87 to i64*
  store i64 %73, i64* %88, align 8
  br label %113

89:                                               ; preds = %60
  %90 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %75, i64 0, i32 1
  %91 = getelementptr inbounds %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool"* %90, i64 0, i32 0, i32 0, i32 0
  %92 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %91) #14
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %96, label %94, !prof !2

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool"* %90, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %95) #14
  br label %96

96:                                               ; preds = %94, %89
  %97 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %75, i64 0, i32 1, i32 1
  %98 = bitcast %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"* %80 to i64*
  store i64 %99, i64* %100, align 8
  %101 = ptrtoint %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"* %80 to i64
  store atomic volatile i64 %101, i64* %98 monotonic, align 8
  %102 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %75, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = atomicrmw add i64* %102, i64 1 monotonic
  %104 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %91) #14
  %105 = tail call noalias i8* @malloc(i64 8208) #14
  %106 = bitcast %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"** %79 to i8**
  store i8* %105, i8** %106, align 8
  %107 = getelementptr inbounds i8, i8* %105, i64 8
  %108 = bitcast i8* %107 to i64*
  store i64 1, i64* %108, align 8
  %109 = getelementptr inbounds i8, i8* %105, i64 16
  %110 = bitcast i8* %109 to i8**
  store i8* %61, i8** %110, align 8
  %111 = getelementptr inbounds i8, i8* %105, i64 24
  %112 = bitcast i8* %111 to i64*
  store i64 %73, i64* %112, align 8
  br label %113

113:                                              ; preds = %49, %96, %84, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14MarkingVisitor9MarkValueEPvPNS_8BasePageEPNS_11ThreadStateE(i8*, %"class.blink::BasePage"*, %"class.blink::ThreadState"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %1, i64 0, i32 7
  %5 = load i8, i8* %4, align 2
  %6 = icmp eq i8 %5, 1
  br i1 %6, label %45, label %7, !prof !4

7:                                                ; preds = %3
  %8 = bitcast %"class.blink::BasePage"* %1 to %"class.blink::NormalPage"*
  %9 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %1, i64 6, i32 2
  %10 = bitcast %"class.blink::BaseArena"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = ptrtoint i8* %0 to i64
  %13 = sub i64 %12, %11
  %14 = lshr i64 %13, 3
  %15 = lshr i64 %13, 6
  %16 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %8, i64 0, i32 2, i32 0, i32 1, i64 %15
  %17 = load i8, i8* %16, align 1
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 7
  %20 = shl i32 2, %19
  %21 = trunc i32 %20 to i8
  %22 = add i8 %21, -1
  %23 = and i8 %22, %17
  %24 = icmp eq i8 %23, 0
  %25 = inttoptr i64 %11 to i8*
  br i1 %24, label %26, label %32

26:                                               ; preds = %7, %26
  %27 = phi i64 [ %28, %26 ], [ %15, %7 ]
  %28 = add i64 %27, -1
  %29 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %8, i64 0, i32 2, i32 0, i32 1, i64 %28
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %26, label %32

32:                                               ; preds = %26, %7
  %33 = phi i64 [ %15, %7 ], [ %28, %26 ]
  %34 = phi i8 [ %23, %7 ], [ %30, %26 ]
  %35 = zext i8 %34 to i32
  %36 = tail call i32 @llvm.ctlz.i32(i32 %35, i1 true) #14, !range !3
  %37 = add nsw i32 %36, -24
  %38 = shl i64 %33, 3
  %39 = or i64 %38, 7
  %40 = sext i32 %37 to i64
  %41 = sub i64 %39, %40
  %42 = shl i64 %41, 3
  %43 = getelementptr inbounds i8, i8* %25, i64 %42
  %44 = bitcast i8* %43 to %"class.blink::HeapObjectHeader"*
  br label %48

45:                                               ; preds = %3
  %46 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %1, i64 1, i32 2
  %47 = bitcast %"class.blink::BaseArena"** %46 to %"class.blink::HeapObjectHeader"*
  br label %48

48:                                               ; preds = %45, %32
  %49 = phi %"class.blink::HeapObjectHeader"* [ %44, %32 ], [ %47, %45 ]
  %50 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %49, i64 0, i32 2
  %51 = load atomic i16, i16* %50 monotonic, align 2
  %52 = and i16 %51, 1
  %53 = icmp eq i16 %52, 0
  br i1 %53, label %54, label %141

54:                                               ; preds = %48
  %55 = or i16 %51, 1
  %56 = cmpxchg i16* %50, i16 %51, i16 %55 monotonic monotonic
  %57 = extractvalue { i16, i1 } %56, 1
  br i1 %57, label %58, label %141

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %2, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %60 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %49, i64 0, i32 1
  %62 = load atomic i16, i16* %61 acquire, align 2
  %63 = and i16 %62, 1
  %64 = icmp eq i16 %63, 0
  br i1 %64, label %65, label %105, !prof !4

65:                                               ; preds = %58
  %66 = load atomic i16, i16* %50 monotonic, align 2
  %67 = and i16 %66, -2
  store atomic i16 %67, i16* %50 monotonic, align 2
  %68 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %49, i64 1
  %69 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %60, i64 0, i32 0, i32 3, i32 0
  %70 = load %"class.blink::Worklist.45"*, %"class.blink::Worklist.45"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %60, i64 0, i32 0, i32 3, i32 1
  %72 = load i32, i32* %71, align 8
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds %"class.blink::Worklist.45", %"class.blink::Worklist.45"* %70, i64 0, i32 0, i64 %73, i32 0
  %75 = load %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::Segment", %"class.blink::Worklist<const void *, 16, 4>::Segment"* %75, i64 0, i32 1
  %77 = load i64, i64* %76, align 8
  %78 = icmp eq i64 %77, 16
  br i1 %78, label %83, label %79

79:                                               ; preds = %65
  %80 = add i64 %77, 1
  store i64 %80, i64* %76, align 8
  %81 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::Segment", %"class.blink::Worklist<const void *, 16, 4>::Segment"* %75, i64 0, i32 2, i64 %77
  %82 = bitcast i8** %81 to %"class.blink::HeapObjectHeader"**
  store %"class.blink::HeapObjectHeader"* %68, %"class.blink::HeapObjectHeader"** %82, align 8
  br label %141

83:                                               ; preds = %65
  %84 = getelementptr inbounds %"class.blink::Worklist.45", %"class.blink::Worklist.45"* %70, i64 0, i32 1
  %85 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::GlobalPool", %"class.blink::Worklist<const void *, 16, 4>::GlobalPool"* %84, i64 0, i32 0, i32 0, i32 0
  %86 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %85) #14
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %90, label %88, !prof !2

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::GlobalPool", %"class.blink::Worklist<const void *, 16, 4>::GlobalPool"* %84, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %89) #14
  br label %90

90:                                               ; preds = %88, %83
  %91 = getelementptr inbounds %"class.blink::Worklist.45", %"class.blink::Worklist.45"* %70, i64 0, i32 1, i32 1
  %92 = bitcast %"class.blink::Worklist<const void *, 16, 4>::Segment"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.blink::Worklist<const void *, 16, 4>::Segment"* %75 to i64*
  store i64 %93, i64* %94, align 8
  %95 = ptrtoint %"class.blink::Worklist<const void *, 16, 4>::Segment"* %75 to i64
  store atomic volatile i64 %95, i64* %92 monotonic, align 8
  %96 = getelementptr inbounds %"class.blink::Worklist.45", %"class.blink::Worklist.45"* %70, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = atomicrmw add i64* %96, i64 1 monotonic
  %98 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %85) #14
  %99 = tail call noalias i8* @malloc(i64 144) #14
  %100 = bitcast %"class.blink::Worklist<const void *, 16, 4>::Segment"** %74 to i8**
  store i8* %99, i8** %100, align 8
  %101 = getelementptr inbounds i8, i8* %99, i64 8
  %102 = bitcast i8* %101 to i64*
  store i64 1, i64* %102, align 8
  %103 = getelementptr inbounds i8, i8* %99, i64 16
  %104 = bitcast i8* %103 to %"class.blink::HeapObjectHeader"**
  store %"class.blink::HeapObjectHeader"* %68, %"class.blink::HeapObjectHeader"** %104, align 8
  br label %141

105:                                              ; preds = %58
  %106 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %60, i64 0, i32 0, i32 2, i32 0
  %107 = load %"class.blink::Worklist.38"*, %"class.blink::Worklist.38"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %60, i64 0, i32 0, i32 2, i32 1
  %109 = load i32, i32* %108, align 8
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds %"class.blink::Worklist.38", %"class.blink::Worklist.38"* %107, i64 0, i32 0, i64 %110, i32 0
  %112 = load %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"* %112, i64 0, i32 1
  %114 = load i64, i64* %113, align 8
  %115 = icmp eq i64 %114, 64
  br i1 %115, label %119, label %116

116:                                              ; preds = %105
  %117 = add i64 %114, 1
  store i64 %117, i64* %113, align 8
  %118 = getelementptr inbounds %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"* %112, i64 0, i32 2, i64 %114
  store %"class.blink::HeapObjectHeader"* %49, %"class.blink::HeapObjectHeader"** %118, align 8
  br label %141

119:                                              ; preds = %105
  %120 = getelementptr inbounds %"class.blink::Worklist.38", %"class.blink::Worklist.38"* %107, i64 0, i32 1
  %121 = getelementptr inbounds %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool"* %120, i64 0, i32 0, i32 0, i32 0
  %122 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %121) #14
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %126, label %124, !prof !2

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool"* %120, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %125) #14
  br label %126

126:                                              ; preds = %124, %119
  %127 = getelementptr inbounds %"class.blink::Worklist.38", %"class.blink::Worklist.38"* %107, i64 0, i32 1, i32 1
  %128 = bitcast %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"* %112 to i64*
  store i64 %129, i64* %130, align 8
  %131 = ptrtoint %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"* %112 to i64
  store atomic volatile i64 %131, i64* %128 monotonic, align 8
  %132 = getelementptr inbounds %"class.blink::Worklist.38", %"class.blink::Worklist.38"* %107, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = atomicrmw add i64* %132, i64 1 monotonic
  %134 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %121) #14
  %135 = tail call noalias i8* @malloc(i64 528) #14
  %136 = bitcast %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"** %111 to i8**
  store i8* %135, i8** %136, align 8
  %137 = getelementptr inbounds i8, i8* %135, i64 8
  %138 = bitcast i8* %137 to i64*
  store i64 1, i64* %138, align 8
  %139 = getelementptr inbounds i8, i8* %135, i64 16
  %140 = bitcast i8* %139 to %"class.blink::HeapObjectHeader"**
  store %"class.blink::HeapObjectHeader"* %49, %"class.blink::HeapObjectHeader"** %140, align 8
  br label %141

141:                                              ; preds = %48, %126, %116, %90, %79, %54
  %142 = phi i1 [ false, %54 ], [ true, %79 ], [ true, %90 ], [ true, %116 ], [ true, %126 ], [ false, %48 ]
  ret i1 %142
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1 align 2 {
  %2 = ptrtoint i8* %0 to i64
  switch i64 %2, label %3 [
    i64 0, label %16
    i64 -1, label %16
  ]

3:                                                ; preds = %1
  %4 = and i64 %2, -131072
  %5 = inttoptr i64 %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 4120
  %7 = bitcast i8* %6 to %"class.blink::ThreadState"**
  %8 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %8, i64 0, i32 9
  %10 = load i8, i8* %9, align 1, !range !5
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds i8, i8* %5, i64 4096
  %14 = bitcast i8* %13 to %"class.blink::BasePage"*
  %15 = tail call zeroext i1 @_ZN5blink14MarkingVisitor9MarkValueEPvPNS_8BasePageEPNS_11ThreadStateE(i8* nonnull %0, %"class.blink::BasePage"* %14, %"class.blink::ThreadState"* %8)
  br label %16

16:                                               ; preds = %3, %1, %1, %12
  %17 = phi i1 [ false, %1 ], [ %15, %12 ], [ false, %3 ], [ false, %1 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14MarkingVisitor23GenerationalBarrierSlowEPhPNS_11ThreadStateE(i8*, %"class.blink::ThreadState"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %3, align 8
  %5 = tail call %"class.blink::BasePage"* @_ZN5blink10ThreadHeap20LookupPageForAddressEPKh(%"class.blink::ThreadHeap"* %4, i8* %0) #14
  %6 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %5, i64 0, i32 7
  %7 = load i8, i8* %6, align 2
  %8 = icmp eq i8 %7, 1
  br i1 %8, label %9, label %19, !prof !4

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %5, i64 1, i32 2
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::HeapObjectHeader"*
  %12 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %11, i64 0, i32 2
  %13 = load i16, i16* %12, align 2
  %14 = and i16 %13, 1
  %15 = icmp eq i16 %14, 0
  br i1 %15, label %66, label %16, !prof !2

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %5, i64 1, i32 1
  %18 = bitcast %"class.blink::PageMemory"** %17 to i8*
  store i8 1, i8* %18, align 8
  br label %66

19:                                               ; preds = %2
  %20 = bitcast %"class.blink::BasePage"* %5 to %"class.blink::NormalPage"*
  %21 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %5, i64 6, i32 2
  %22 = bitcast %"class.blink::BaseArena"** %21 to %"class.blink::ObjectStartBitmap"*
  %23 = bitcast %"class.blink::BaseArena"** %21 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = ptrtoint i8* %0 to i64
  %26 = sub i64 %25, %24
  %27 = lshr i64 %26, 3
  %28 = lshr i64 %26, 6
  %29 = getelementptr inbounds %"class.blink::ObjectStartBitmap", %"class.blink::ObjectStartBitmap"* %22, i64 0, i32 1, i64 %28
  %30 = load i8, i8* %29, align 1
  %31 = trunc i64 %27 to i32
  %32 = and i32 %31, 7
  %33 = shl i32 2, %32
  %34 = trunc i32 %33 to i8
  %35 = add i8 %34, -1
  %36 = and i8 %35, %30
  %37 = icmp eq i8 %36, 0
  %38 = inttoptr i64 %24 to i8*
  br i1 %37, label %39, label %45

39:                                               ; preds = %19, %39
  %40 = phi i64 [ %41, %39 ], [ %28, %19 ]
  %41 = add i64 %40, -1
  %42 = getelementptr inbounds %"class.blink::ObjectStartBitmap", %"class.blink::ObjectStartBitmap"* %22, i64 0, i32 1, i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %39, label %45

45:                                               ; preds = %39, %19
  %46 = phi i64 [ %28, %19 ], [ %41, %39 ]
  %47 = phi i8 [ %36, %19 ], [ %43, %39 ]
  %48 = zext i8 %47 to i32
  %49 = tail call i32 @llvm.ctlz.i32(i32 %48, i1 true) #14, !range !3
  %50 = add nsw i32 %49, -24
  %51 = shl i64 %46, 3
  %52 = or i64 %51, 7
  %53 = sext i32 %50 to i64
  %54 = sub i64 %52, %53
  %55 = shl i64 %54, 3
  %56 = getelementptr inbounds i8, i8* %38, i64 %55
  %57 = getelementptr inbounds i8, i8* %56, i64 6
  %58 = bitcast i8* %57 to i16*
  %59 = load i16, i16* %58, align 2
  %60 = and i16 %59, 1
  %61 = icmp eq i16 %60, 0
  br i1 %61, label %66, label %62, !prof !2

62:                                               ; preds = %45
  %63 = lshr i64 %25, 9
  %64 = and i64 %63, 255
  %65 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %20, i64 0, i32 1, i32 0, i32 0, i64 %64
  store i8 1, i8* %65, align 1
  br label %66

66:                                               ; preds = %9, %45, %62, %16
  ret void
}

declare %"class.blink::BasePage"* @_ZN5blink10ThreadHeap20LookupPageForAddressEPKh(%"class.blink::ThreadHeap"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = icmp eq i8* %0, null
  br i1 %3, label %47, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds i8, i8* %0, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = and i16 %7, 1
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %47, label %10

10:                                               ; preds = %4
  %11 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %12 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %11, i64 0, i32 1
  %13 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %12) #14
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %17, !prof !4

15:                                               ; preds = %10
  %16 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %12, i8* %16) #14
  br label %17

17:                                               ; preds = %10, %15
  %18 = phi i8* [ %16, %15 ], [ %13, %10 ]
  %19 = bitcast i8* %18 to %"class.blink::ThreadState"**
  %20 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %20, i64 0, i32 9
  %22 = load i8, i8* %21, align 1, !range !5
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %17
  %25 = load i16, i16* %6, align 2
  %26 = and i16 %25, 1
  %27 = icmp eq i16 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %24
  %29 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 230, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0)) #14
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #14
  br label %31

31:                                               ; preds = %24, %28
  %32 = getelementptr inbounds i8, i8* %0, i64 -4
  %33 = bitcast i8* %32 to i16*
  %34 = load i16, i16* %33, align 2
  %35 = lshr i16 %34, 2
  %36 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %37 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %36, i64 0, i32 0
  %38 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %37, align 8
  %39 = zext i16 %35 to i64
  %40 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %38, i64 %39
  %41 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %40, align 8
  %42 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %41, i64 0, i32 0
  %43 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %20, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %45 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %45, i64 0, i32 0, i32 0
  call void %43(%"class.blink::Visitor"* %46, i8* nonnull %0) #14
  br label %47

47:                                               ; preds = %17, %4, %31, %1
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink14MarkingVisitor30RecentlyRetracedWeakContainers8ContainsEPKNS_16HeapObjectHeaderE(%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers"* nocapture readonly, %"class.blink::HeapObjectHeader"*) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = load %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"*** %5, align 8
  %7 = icmp eq %"class.blink::HeapObjectHeader"** %4, %6
  br i1 %7, label %15, label %8

8:                                                ; preds = %2, %12
  %9 = phi %"class.blink::HeapObjectHeader"** [ %13, %12 ], [ %4, %2 ]
  %10 = load %"class.blink::HeapObjectHeader"*, %"class.blink::HeapObjectHeader"** %9, align 8
  %11 = icmp eq %"class.blink::HeapObjectHeader"* %10, %1
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::HeapObjectHeader"*, %"class.blink::HeapObjectHeader"** %9, i64 1
  %14 = icmp eq %"class.blink::HeapObjectHeader"** %13, %6
  br i1 %14, label %15, label %8

15:                                               ; preds = %8, %12, %2
  %16 = phi %"class.blink::HeapObjectHeader"** [ %4, %2 ], [ %9, %8 ], [ %6, %12 ]
  %17 = icmp ne %"class.blink::HeapObjectHeader"** %16, %6
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14MarkingVisitor30RecentlyRetracedWeakContainers6InsertEPKNS_16HeapObjectHeaderE(%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers"*, %"class.blink::HeapObjectHeader"*) local_unnamed_addr #1 align 2 {
  %3 = ptrtoint %"class.blink::HeapObjectHeader"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 1
  %7 = and i64 %6, 7
  store i64 %7, i64* %4, align 8
  %8 = getelementptr inbounds %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = bitcast %"class.blink::HeapObjectHeader"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %14, %7
  %16 = inttoptr i64 %10 to %"class.blink::HeapObjectHeader"**
  br i1 %15, label %77, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"*** %18, align 8
  %20 = icmp eq %"class.blink::HeapObjectHeader"** %19, %16
  br i1 %20, label %25, label %21

21:                                               ; preds = %17
  %22 = inttoptr i64 %10 to i64*
  store i64 %3, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::HeapObjectHeader"*, %"class.blink::HeapObjectHeader"** %16, i64 1
  %24 = ptrtoint %"class.blink::HeapObjectHeader"** %23 to i64
  store i64 %24, i64* %9, align 8
  br label %81

25:                                               ; preds = %17
  %26 = ptrtoint %"class.blink::HeapObjectHeader"** %19 to i64
  %27 = sub i64 %26, %12
  %28 = ashr exact i64 %27, 3
  %29 = add nsw i64 %28, 1
  %30 = icmp ugt i64 %29, 2305843009213693951
  br i1 %30, label %31, label %33

31:                                               ; preds = %25
  %32 = bitcast %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #15
  unreachable

33:                                               ; preds = %25
  %34 = bitcast %"class.blink::HeapObjectHeader"*** %18 to i64*
  %35 = icmp ult i64 %28, 1152921504606846975
  br i1 %35, label %36, label %44

36:                                               ; preds = %33
  %37 = ashr exact i64 %27, 2
  %38 = icmp ult i64 %37, %29
  %39 = select i1 %38, i64 %29, i64 %37
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %36
  %42 = icmp ugt i64 %39, 2305843009213693951
  br i1 %42, label %43, label %44

43:                                               ; preds = %41
  tail call void @abort() #15
  unreachable

44:                                               ; preds = %41, %33
  %45 = phi i64 [ %39, %41 ], [ 2305843009213693951, %33 ]
  %46 = shl i64 %45, 3
  %47 = tail call i8* @_Znwm(i64 %46) #16
  %48 = bitcast i8* %47 to %"class.blink::HeapObjectHeader"**
  br label %49

49:                                               ; preds = %44, %36
  %50 = phi i64 [ %45, %44 ], [ 0, %36 ]
  %51 = phi %"class.blink::HeapObjectHeader"** [ %48, %44 ], [ null, %36 ]
  %52 = getelementptr inbounds %"class.blink::HeapObjectHeader"*, %"class.blink::HeapObjectHeader"** %51, i64 %28
  %53 = getelementptr inbounds %"class.blink::HeapObjectHeader"*, %"class.blink::HeapObjectHeader"** %51, i64 %50
  %54 = ptrtoint %"class.blink::HeapObjectHeader"** %53 to i64
  %55 = bitcast %"class.blink::HeapObjectHeader"** %52 to i64*
  store i64 %3, i64* %55, align 8
  %56 = getelementptr inbounds %"class.blink::HeapObjectHeader"*, %"class.blink::HeapObjectHeader"** %52, i64 1
  %57 = ptrtoint %"class.blink::HeapObjectHeader"** %56 to i64
  %58 = getelementptr inbounds %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers"* %0, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"*** %58, align 8
  %60 = load i64, i64* %9, align 8
  %61 = ptrtoint %"class.blink::HeapObjectHeader"** %59 to i64
  %62 = sub i64 %60, %61
  %63 = ashr exact i64 %62, 3
  %64 = sub nsw i64 0, %63
  %65 = getelementptr inbounds %"class.blink::HeapObjectHeader"*, %"class.blink::HeapObjectHeader"** %52, i64 %64
  %66 = ptrtoint %"class.blink::HeapObjectHeader"** %65 to i64
  %67 = icmp sgt i64 %62, 0
  br i1 %67, label %68, label %72

68:                                               ; preds = %49
  %69 = bitcast %"class.blink::HeapObjectHeader"** %65 to i8*
  %70 = bitcast %"class.blink::HeapObjectHeader"** %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 %62, i1 false) #14
  %71 = load %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"*** %58, align 8
  br label %72

72:                                               ; preds = %68, %49
  %73 = phi %"class.blink::HeapObjectHeader"** [ %59, %49 ], [ %71, %68 ]
  store i64 %66, i64* %11, align 8
  store i64 %57, i64* %9, align 8
  store i64 %54, i64* %34, align 8
  %74 = icmp eq %"class.blink::HeapObjectHeader"** %73, null
  br i1 %74, label %81, label %75

75:                                               ; preds = %72
  %76 = bitcast %"class.blink::HeapObjectHeader"** %73 to i8*
  tail call void @_ZdlPv(i8* %76) #16
  br label %81

77:                                               ; preds = %2
  %78 = inttoptr i64 %12 to %"class.blink::HeapObjectHeader"**
  %79 = getelementptr inbounds %"class.blink::HeapObjectHeader"*, %"class.blink::HeapObjectHeader"** %78, i64 %7
  %80 = bitcast %"class.blink::HeapObjectHeader"** %79 to i64*
  store i64 %3, i64* %80, align 8
  br label %81

81:                                               ; preds = %75, %72, %21, %77
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14MarkingVisitorC2EPNS_11ThreadStateENS_18MarkingVisitorBase11MarkingModeE(%"class.blink::MarkingVisitor"* nocapture, %"class.blink::ThreadState"*, i32) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 0, i32 1
  store %"class.blink::ThreadState"* %1, %"class.blink::ThreadState"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink18MarkingVisitorBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %8, i64 0, i32 6, i32 0, i32 0, i32 0
  %10 = bitcast %"class.blink::Worklist"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View"* %6 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 1, i32 1
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 2
  %15 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %7, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %15, i64 0, i32 7, i32 0, i32 0, i32 0
  %17 = bitcast %"class.blink::Worklist.38"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View"* %14 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 2, i32 1
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 3
  %22 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %7, align 8
  %23 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %22, i64 0, i32 8, i32 0, i32 0, i32 0
  %24 = bitcast %"class.blink::Worklist.45"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.blink::Worklist<const void *, 16, 4>::View"* %21 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 3, i32 1
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 4
  %29 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %7, align 8
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %29, i64 0, i32 10, i32 0, i32 0, i32 0
  %31 = bitcast %"class.blink::Worklist.52"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View"* %28 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 4, i32 1
  store i32 0, i32* %34, align 8
  %35 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 5
  %36 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %7, align 8
  %37 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %36, i64 0, i32 11, i32 0, i32 0, i32 0
  %38 = bitcast %"class.blink::Worklist.59"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::Worklist<const void *const *, 256, 4>::View"* %35 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 5, i32 1
  store i32 0, i32* %41, align 8
  %42 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 6
  %43 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %7, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %43, i64 0, i32 12, i32 0, i32 0, i32 0
  %45 = bitcast %"class.blink::Worklist.66"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View"* %42 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 6, i32 1
  store i32 0, i32* %48, align 8
  %49 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 7
  %50 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %7, align 8
  %51 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %50, i64 0, i32 13, i32 0, i32 0, i32 0
  %52 = bitcast %"class.blink::Worklist.66"** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View"* %49 to i64*
  store i64 %53, i64* %54, align 8
  %55 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 7, i32 1
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 8
  %57 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %7, align 8
  %58 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %57, i64 0, i32 16, i32 0, i32 0, i32 0
  %59 = bitcast %"class.blink::WeakContainersWorklist"** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.blink::WeakContainersWorklist"** %56 to i64*
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 9
  store i64 0, i64* %62, align 8
  %63 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 10
  store i32 %2, i32* %63, align 8
  %64 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 11
  store i32 0, i32* %64, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink14MarkingVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %65 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 1
  %66 = bitcast %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers"* %65 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #14
  %67 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 1, i32 1
  store i64 -1, i64* %67, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14MarkingVisitor25ConservativelyMarkAddressEPNS_8BasePageEPKh(%"class.blink::MarkingVisitor"*, %"class.blink::BasePage"*, i8*) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %1, i64 0, i32 7
  %5 = load i8, i8* %4, align 2
  %6 = icmp eq i8 %5, 1
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %1, i64 1, i32 2
  %9 = bitcast %"class.blink::BaseArena"** %8 to %"class.blink::HeapObjectHeader"*
  br label %13

10:                                               ; preds = %3
  %11 = bitcast %"class.blink::BasePage"* %1 to %"class.blink::NormalPage"*
  %12 = tail call %"class.blink::HeapObjectHeader"* @_ZNK5blink10NormalPage35ConservativelyFindHeaderFromAddressEPKh(%"class.blink::NormalPage"* %11, i8* %2) #14
  br label %13

13:                                               ; preds = %10, %7
  %14 = phi %"class.blink::HeapObjectHeader"* [ %9, %7 ], [ %12, %10 ]
  %15 = icmp eq %"class.blink::HeapObjectHeader"* %14, null
  br i1 %15, label %329, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %14, i64 0, i32 2
  %18 = load i16, i16* %17, align 2
  %19 = and i16 %18, 1
  %20 = icmp eq i16 %19, 0
  br i1 %20, label %159, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 8
  %23 = load %"class.blink::WeakContainersWorklist"*, %"class.blink::WeakContainersWorklist"** %22, align 8
  %24 = ptrtoint %"class.blink::HeapObjectHeader"* %14 to i64
  %25 = lshr i64 %24, 32
  %26 = shl i64 %24, 3
  %27 = and i64 %26, 4294967288
  %28 = add nuw nsw i64 %27, 8
  %29 = xor i64 %28, %25
  %30 = mul i64 %29, -7070675565921424023
  %31 = lshr i64 %30, 47
  %32 = xor i64 %30, %25
  %33 = xor i64 %32, %31
  %34 = mul i64 %33, -7070675565921424023
  %35 = lshr i64 %34, 47
  %36 = xor i64 %35, %34
  %37 = mul i64 %36, -7070675565921424023
  %38 = getelementptr inbounds %"class.blink::WeakContainersWorklist", %"class.blink::WeakContainersWorklist"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %329, label %41

41:                                               ; preds = %21
  %42 = tail call i64 @llvm.ctpop.i64(i64 %39) #14, !range !6
  %43 = icmp ugt i64 %42, 1
  br i1 %43, label %47, label %44

44:                                               ; preds = %41
  %45 = add i64 %39, -1
  %46 = and i64 %45, %37
  br label %51

47:                                               ; preds = %41
  %48 = icmp ult i64 %37, %39
  br i1 %48, label %51, label %49

49:                                               ; preds = %47
  %50 = urem i64 %37, %39
  br label %51

51:                                               ; preds = %49, %47, %44
  %52 = phi i64 [ %46, %44 ], [ %50, %49 ], [ %37, %47 ]
  %53 = getelementptr inbounds %"class.blink::WeakContainersWorklist", %"class.blink::WeakContainersWorklist"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %53, align 8
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %54, i64 %52
  %56 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base"* %56, null
  br i1 %57, label %329, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 0, i32 0
  %60 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %59, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node_base"* %60, null
  br i1 %61, label %329, label %62

62:                                               ; preds = %58
  %63 = add i64 %39, -1
  br label %64

64:                                               ; preds = %85, %62
  %65 = phi %"struct.std::__1::__hash_node_base"* [ %60, %62 ], [ %87, %85 ]
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %65, i64 1
  %67 = bitcast %"struct.std::__1::__hash_node_base"* %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %68, %37
  br i1 %69, label %80, label %70

70:                                               ; preds = %64
  br i1 %43, label %73, label %71

71:                                               ; preds = %70
  %72 = and i64 %68, %63
  br label %77

73:                                               ; preds = %70
  %74 = icmp ult i64 %68, %39
  br i1 %74, label %77, label %75

75:                                               ; preds = %73
  %76 = urem i64 %68, %39
  br label %77

77:                                               ; preds = %75, %73, %71
  %78 = phi i64 [ %72, %71 ], [ %76, %75 ], [ %68, %73 ]
  %79 = icmp eq i64 %78, %52
  br i1 %79, label %85, label %329

80:                                               ; preds = %64
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %65, i64 2
  %82 = bitcast %"struct.std::__1::__hash_node_base"* %81 to %"class.blink::HeapObjectHeader"**
  %83 = load %"class.blink::HeapObjectHeader"*, %"class.blink::HeapObjectHeader"** %82, align 8
  %84 = icmp eq %"class.blink::HeapObjectHeader"* %83, %14
  br i1 %84, label %89, label %85

85:                                               ; preds = %80, %77
  %86 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %65, i64 0, i32 0
  %87 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, align 8
  %88 = icmp eq %"struct.std::__1::__hash_node_base"* %87, null
  br i1 %88, label %329, label %64

89:                                               ; preds = %80
  %90 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 1
  %91 = getelementptr inbounds %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers"* %90, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"*** %91, align 8
  %93 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %94 = load %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"*** %93, align 8
  %95 = icmp eq %"class.blink::HeapObjectHeader"** %92, %94
  br i1 %95, label %103, label %96

96:                                               ; preds = %89, %100
  %97 = phi %"class.blink::HeapObjectHeader"** [ %101, %100 ], [ %92, %89 ]
  %98 = load %"class.blink::HeapObjectHeader"*, %"class.blink::HeapObjectHeader"** %97, align 8
  %99 = icmp eq %"class.blink::HeapObjectHeader"* %98, %14
  br i1 %99, label %103, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.blink::HeapObjectHeader"*, %"class.blink::HeapObjectHeader"** %97, i64 1
  %102 = icmp eq %"class.blink::HeapObjectHeader"** %101, %94
  br i1 %102, label %106, label %96

103:                                              ; preds = %96, %89
  %104 = phi %"class.blink::HeapObjectHeader"** [ %92, %89 ], [ %97, %96 ]
  %105 = icmp eq %"class.blink::HeapObjectHeader"** %104, %94
  br i1 %105, label %106, label %329

106:                                              ; preds = %100, %103
  tail call void @_ZN5blink14MarkingVisitor30RecentlyRetracedWeakContainers6InsertEPKNS_16HeapObjectHeaderE(%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers"* %90, %"class.blink::HeapObjectHeader"* nonnull %14)
  %107 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %14, i64 1
  %108 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %14, i64 0, i32 1
  %109 = load i16, i16* %108, align 2
  %110 = lshr i16 %109, 2
  %111 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %112 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %111, i64 0, i32 0
  %113 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %112, align 8
  %114 = zext i16 %110 to i64
  %115 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %113, i64 %114
  %116 = bitcast %"struct.blink::GCInfo"** %115 to i64**
  %117 = load i64*, i64** %116, align 8
  %118 = load i64, i64* %117, align 8
  %119 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 1, i32 0
  %120 = load %"class.blink::Worklist"*, %"class.blink::Worklist"** %119, align 8
  %121 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 1, i32 1
  %122 = load i32, i32* %121, align 8
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %120, i64 0, i32 0, i64 %123, i32 0
  %125 = load %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"** %124, align 8
  %126 = getelementptr inbounds %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"* %125, i64 0, i32 1
  %127 = load i64, i64* %126, align 8
  %128 = icmp eq i64 %127, 512
  br i1 %128, label %135, label %129

129:                                              ; preds = %106
  %130 = add i64 %127, 1
  store i64 %130, i64* %126, align 8
  %131 = getelementptr inbounds %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"* %125, i64 0, i32 2, i64 %127, i32 0
  %132 = bitcast i8** %131 to %"class.blink::HeapObjectHeader"**
  store %"class.blink::HeapObjectHeader"* %107, %"class.blink::HeapObjectHeader"** %132, align 8
  %133 = getelementptr inbounds %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"* %125, i64 0, i32 2, i64 %127, i32 1
  %134 = bitcast void (%"class.blink::Visitor"*, i8*)** %133 to i64*
  store i64 %118, i64* %134, align 8
  br label %329

135:                                              ; preds = %106
  %136 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %120, i64 0, i32 1
  %137 = getelementptr inbounds %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool"* %136, i64 0, i32 0, i32 0, i32 0
  %138 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %137) #14
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %142, label %140, !prof !2

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool"* %136, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %141) #14
  br label %142

142:                                              ; preds = %140, %135
  %143 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %120, i64 0, i32 1, i32 1
  %144 = bitcast %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"* %125 to i64*
  store i64 %145, i64* %146, align 8
  %147 = ptrtoint %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"* %125 to i64
  store atomic volatile i64 %147, i64* %144 monotonic, align 8
  %148 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %120, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = atomicrmw add i64* %148, i64 1 monotonic
  %150 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %137) #14
  %151 = tail call noalias i8* @malloc(i64 8208) #14
  %152 = bitcast %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"** %124 to i8**
  store i8* %151, i8** %152, align 8
  %153 = getelementptr inbounds i8, i8* %151, i64 8
  %154 = bitcast i8* %153 to i64*
  store i64 1, i64* %154, align 8
  %155 = getelementptr inbounds i8, i8* %151, i64 16
  %156 = bitcast i8* %155 to %"class.blink::HeapObjectHeader"**
  store %"class.blink::HeapObjectHeader"* %107, %"class.blink::HeapObjectHeader"** %156, align 8
  %157 = getelementptr inbounds i8, i8* %151, i64 24
  %158 = bitcast i8* %157 to i64*
  store i64 %118, i64* %158, align 8
  br label %329

159:                                              ; preds = %16
  %160 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %14, i64 0, i32 1
  %161 = load i16, i16* %160, align 2
  %162 = and i16 %161, 1
  %163 = icmp eq i16 %162, 0
  br i1 %163, label %265, label %164

164:                                              ; preds = %159
  %165 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %14, i64 1
  %166 = ptrtoint %"class.blink::HeapObjectHeader"* %165 to i64
  %167 = lshr i16 %161, 2
  %168 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %169 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %168, i64 0, i32 0
  %170 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %169, align 8
  %171 = zext i16 %167 to i64
  %172 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %170, i64 %171
  %173 = bitcast %"struct.blink::GCInfo"** %172 to i64**
  %174 = load i64*, i64** %173, align 8
  %175 = load i64, i64* %174, align 8
  %176 = load atomic i16, i16* %160 acquire, align 2
  %177 = and i16 %176, 1
  %178 = icmp eq i16 %177, 0
  br i1 %178, label %179, label %216

179:                                              ; preds = %164
  %180 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 3, i32 0
  %181 = load %"class.blink::Worklist.45"*, %"class.blink::Worklist.45"** %180, align 8
  %182 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 3, i32 1
  %183 = load i32, i32* %182, align 8
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds %"class.blink::Worklist.45", %"class.blink::Worklist.45"* %181, i64 0, i32 0, i64 %184, i32 0
  %186 = load %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"** %185, align 8
  %187 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::Segment", %"class.blink::Worklist<const void *, 16, 4>::Segment"* %186, i64 0, i32 1
  %188 = load i64, i64* %187, align 8
  %189 = icmp eq i64 %188, 16
  br i1 %189, label %194, label %190

190:                                              ; preds = %179
  %191 = add i64 %188, 1
  store i64 %191, i64* %187, align 8
  %192 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::Segment", %"class.blink::Worklist<const void *, 16, 4>::Segment"* %186, i64 0, i32 2, i64 %188
  %193 = bitcast i8** %192 to %"class.blink::HeapObjectHeader"**
  store %"class.blink::HeapObjectHeader"* %165, %"class.blink::HeapObjectHeader"** %193, align 8
  br label %329

194:                                              ; preds = %179
  %195 = getelementptr inbounds %"class.blink::Worklist.45", %"class.blink::Worklist.45"* %181, i64 0, i32 1
  %196 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::GlobalPool", %"class.blink::Worklist<const void *, 16, 4>::GlobalPool"* %195, i64 0, i32 0, i32 0, i32 0
  %197 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %196) #14
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %201, label %199, !prof !2

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::GlobalPool", %"class.blink::Worklist<const void *, 16, 4>::GlobalPool"* %195, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %200) #14
  br label %201

201:                                              ; preds = %199, %194
  %202 = getelementptr inbounds %"class.blink::Worklist.45", %"class.blink::Worklist.45"* %181, i64 0, i32 1, i32 1
  %203 = bitcast %"class.blink::Worklist<const void *, 16, 4>::Segment"** %202 to i64*
  %204 = load i64, i64* %203, align 8
  %205 = bitcast %"class.blink::Worklist<const void *, 16, 4>::Segment"* %186 to i64*
  store i64 %204, i64* %205, align 8
  %206 = ptrtoint %"class.blink::Worklist<const void *, 16, 4>::Segment"* %186 to i64
  store atomic volatile i64 %206, i64* %203 monotonic, align 8
  %207 = getelementptr inbounds %"class.blink::Worklist.45", %"class.blink::Worklist.45"* %181, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = atomicrmw add i64* %207, i64 1 monotonic
  %209 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %196) #14
  %210 = tail call noalias i8* @malloc(i64 144) #14
  %211 = bitcast %"class.blink::Worklist<const void *, 16, 4>::Segment"** %185 to i8**
  store i8* %210, i8** %211, align 8
  %212 = getelementptr inbounds i8, i8* %210, i64 8
  %213 = bitcast i8* %212 to i64*
  store i64 1, i64* %213, align 8
  %214 = getelementptr inbounds i8, i8* %210, i64 16
  %215 = bitcast i8* %214 to %"class.blink::HeapObjectHeader"**
  store %"class.blink::HeapObjectHeader"* %165, %"class.blink::HeapObjectHeader"** %215, align 8
  br label %329

216:                                              ; preds = %164
  %217 = load atomic i16, i16* %17 monotonic, align 2
  %218 = and i16 %217, 1
  %219 = icmp eq i16 %218, 0
  br i1 %219, label %220, label %329

220:                                              ; preds = %216
  %221 = or i16 %217, 1
  %222 = cmpxchg i16* %17, i16 %217, i16 %221 monotonic monotonic
  %223 = extractvalue { i16, i1 } %222, 1
  br i1 %223, label %224, label %329

224:                                              ; preds = %220
  %225 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 1, i32 0
  %226 = load %"class.blink::Worklist"*, %"class.blink::Worklist"** %225, align 8
  %227 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 1, i32 1
  %228 = load i32, i32* %227, align 8
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %226, i64 0, i32 0, i64 %229, i32 0
  %231 = load %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"** %230, align 8
  %232 = getelementptr inbounds %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"* %231, i64 0, i32 1
  %233 = load i64, i64* %232, align 8
  %234 = icmp eq i64 %233, 512
  br i1 %234, label %241, label %235

235:                                              ; preds = %224
  %236 = add i64 %233, 1
  store i64 %236, i64* %232, align 8
  %237 = getelementptr inbounds %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"* %231, i64 0, i32 2, i64 %233, i32 0
  %238 = bitcast i8** %237 to i64*
  store i64 %166, i64* %238, align 8
  %239 = getelementptr inbounds %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"* %231, i64 0, i32 2, i64 %233, i32 1
  %240 = bitcast void (%"class.blink::Visitor"*, i8*)** %239 to i64*
  store i64 %175, i64* %240, align 8
  br label %329

241:                                              ; preds = %224
  %242 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %226, i64 0, i32 1
  %243 = getelementptr inbounds %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool"* %242, i64 0, i32 0, i32 0, i32 0
  %244 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %243) #14
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %248, label %246, !prof !2

246:                                              ; preds = %241
  %247 = getelementptr inbounds %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool"* %242, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %247) #14
  br label %248

248:                                              ; preds = %246, %241
  %249 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %226, i64 0, i32 1, i32 1
  %250 = bitcast %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"** %249 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = bitcast %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"* %231 to i64*
  store i64 %251, i64* %252, align 8
  %253 = ptrtoint %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"* %231 to i64
  store atomic volatile i64 %253, i64* %250 monotonic, align 8
  %254 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %226, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %255 = atomicrmw add i64* %254, i64 1 monotonic
  %256 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %243) #14
  %257 = tail call noalias i8* @malloc(i64 8208) #14
  %258 = bitcast %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"** %230 to i8**
  store i8* %257, i8** %258, align 8
  %259 = getelementptr inbounds i8, i8* %257, i64 8
  %260 = bitcast i8* %259 to i64*
  store i64 1, i64* %260, align 8
  %261 = getelementptr inbounds i8, i8* %257, i64 16
  %262 = bitcast i8* %261 to i64*
  store i64 %166, i64* %262, align 8
  %263 = getelementptr inbounds i8, i8* %257, i64 24
  %264 = bitcast i8* %263 to i64*
  store i64 %175, i64* %264, align 8
  br label %329

265:                                              ; preds = %159
  %266 = load atomic i16, i16* %17 monotonic, align 2
  %267 = and i16 %266, 1
  %268 = icmp eq i16 %267, 0
  br i1 %268, label %269, label %273

269:                                              ; preds = %265
  %270 = or i16 %266, 1
  %271 = cmpxchg i16* %17, i16 %266, i16 %270 monotonic monotonic
  %272 = load i16, i16* %17, align 2
  br label %273

273:                                              ; preds = %265, %269
  %274 = phi i16 [ %266, %265 ], [ %272, %269 ]
  %275 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %14, i64 1
  %276 = lshr i16 %274, 2
  %277 = icmp eq i16 %276, 0
  br i1 %277, label %278, label %285, !prof !4

278:                                              ; preds = %273
  %279 = ptrtoint %"class.blink::HeapObjectHeader"* %14 to i64
  %280 = and i64 %279, -131072
  %281 = inttoptr i64 %280 to i8*
  %282 = getelementptr inbounds i8, i8* %281, i64 4144
  %283 = bitcast i8* %282 to i64*
  %284 = load i64, i64* %283, align 16
  br label %288

285:                                              ; preds = %273
  %286 = zext i16 %276 to i64
  %287 = shl nuw nsw i64 %286, 3
  br label %288

288:                                              ; preds = %278, %285
  %289 = phi i64 [ %284, %278 ], [ %287, %285 ]
  %290 = add i64 %289, -8
  %291 = lshr i64 %290, 3
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %295, label %293

293:                                              ; preds = %288
  %294 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 0, i32 1
  br label %315

295:                                              ; preds = %326, %288
  %296 = load atomic i16, i16* %17 monotonic, align 2
  %297 = icmp ult i16 %296, 4
  br i1 %297, label %298, label %305

298:                                              ; preds = %295
  %299 = ptrtoint %"class.blink::HeapObjectHeader"* %14 to i64
  %300 = and i64 %299, -131072
  %301 = inttoptr i64 %300 to i8*
  %302 = getelementptr inbounds i8, i8* %301, i64 4144
  %303 = bitcast i8* %302 to i64*
  %304 = load i64, i64* %303, align 16
  br label %310

305:                                              ; preds = %295
  %306 = load atomic i16, i16* %17 monotonic, align 2
  %307 = lshr i16 %306, 2
  %308 = zext i16 %307 to i64
  %309 = shl nuw nsw i64 %308, 3
  br label %310

310:                                              ; preds = %298, %305
  %311 = phi i64 [ %304, %298 ], [ %309, %305 ]
  %312 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 9
  %313 = load i64, i64* %312, align 8
  %314 = add i64 %313, %311
  store i64 %314, i64* %312, align 8
  br label %329

315:                                              ; preds = %326, %293
  %316 = phi i64 [ 0, %293 ], [ %327, %326 ]
  %317 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %275, i64 %316
  %318 = bitcast %"class.blink::HeapObjectHeader"* %317 to i8**
  %319 = load i8*, i8** %318, align 8
  %320 = icmp eq i8* %319, null
  br i1 %320, label %326, label %321

321:                                              ; preds = %315
  %322 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %294, align 8
  %323 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %322, i64 0, i32 0, i32 0, i32 0, i32 0
  %324 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %323, align 8
  %325 = tail call i8* @_ZN5blink10ThreadHeap19CheckAndMarkPointerEPNS_14MarkingVisitorEPh(%"class.blink::ThreadHeap"* %324, %"class.blink::MarkingVisitor"* %0, i8* nonnull %319) #14
  br label %326

326:                                              ; preds = %315, %321
  %327 = add nuw nsw i64 %316, 1
  %328 = icmp eq i64 %327, %291
  br i1 %328, label %295, label %315

329:                                              ; preds = %77, %85, %103, %58, %21, %51, %248, %235, %220, %216, %201, %190, %142, %129, %13, %310
  ret void
}

declare %"class.blink::HeapObjectHeader"* @_ZNK5blink10NormalPage35ConservativelyFindHeaderFromAddressEPKh(%"class.blink::NormalPage"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink10ThreadHeap19CheckAndMarkPointerEPNS_14MarkingVisitorEPh(%"class.blink::ThreadHeap"*, %"class.blink::MarkingVisitor"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14MarkingVisitor21FlushMarkingWorklistsEv(%"class.blink::MarkingVisitor"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load %"class.blink::Worklist"*, %"class.blink::Worklist"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 1, i32 1
  %5 = load i32, i32* %4, align 8
  tail call void @_ZN5blink8WorklistINS_15TraceDescriptorELi512ELi4EE13FlushToGlobalEi(%"class.blink::Worklist"* %3, i32 %5) #14
  %6 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 2, i32 0
  %7 = load %"class.blink::Worklist.38"*, %"class.blink::Worklist.38"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 2, i32 1
  %9 = load i32, i32* %8, align 8
  tail call void @_ZN5blink8WorklistIPNS_16HeapObjectHeaderELi64ELi4EE13FlushToGlobalEi(%"class.blink::Worklist.38"* %7, i32 %9) #14
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink24ConcurrentMarkingVisitorC2EPNS_11ThreadStateENS_18MarkingVisitorBase11MarkingModeEi(%"class.blink::ConcurrentMarkingVisitor"* nocapture, %"class.blink::ThreadState"*, i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 0, i32 1
  store %"class.blink::ThreadState"* %1, %"class.blink::ThreadState"** %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink18MarkingVisitorBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %9, i64 0, i32 6, i32 0, i32 0, i32 0
  %11 = bitcast %"class.blink::Worklist"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View"* %7 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 1, i32 1
  store i32 %3, i32* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 2
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %8, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 7, i32 0, i32 0, i32 0
  %18 = bitcast %"class.blink::Worklist.38"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View"* %15 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 2, i32 1
  store i32 %3, i32* %21, align 8
  %22 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 3
  %23 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %8, align 8
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %23, i64 0, i32 8, i32 0, i32 0, i32 0
  %25 = bitcast %"class.blink::Worklist.45"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.blink::Worklist<const void *, 16, 4>::View"* %22 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 3, i32 1
  store i32 %3, i32* %28, align 8
  %29 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 4
  %30 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %8, align 8
  %31 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %30, i64 0, i32 10, i32 0, i32 0, i32 0
  %32 = bitcast %"class.blink::Worklist.52"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View"* %29 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 4, i32 1
  store i32 %3, i32* %35, align 8
  %36 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 5
  %37 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %8, align 8
  %38 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %37, i64 0, i32 11, i32 0, i32 0, i32 0
  %39 = bitcast %"class.blink::Worklist.59"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.blink::Worklist<const void *const *, 256, 4>::View"* %36 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 5, i32 1
  store i32 %3, i32* %42, align 8
  %43 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 6
  %44 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %8, align 8
  %45 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %44, i64 0, i32 12, i32 0, i32 0, i32 0
  %46 = bitcast %"class.blink::Worklist.66"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View"* %43 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 6, i32 1
  store i32 %3, i32* %49, align 8
  %50 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 7
  %51 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %8, align 8
  %52 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %51, i64 0, i32 13, i32 0, i32 0, i32 0
  %53 = bitcast %"class.blink::Worklist.66"** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View"* %50 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 7, i32 1
  store i32 %3, i32* %56, align 8
  %57 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 8
  %58 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %8, align 8
  %59 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %58, i64 0, i32 16, i32 0, i32 0, i32 0
  %60 = bitcast %"class.blink::WeakContainersWorklist"** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.blink::WeakContainersWorklist"** %57 to i64*
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 9
  store i64 0, i64* %63, align 8
  %64 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 10
  store i32 %2, i32* %64, align 8
  %65 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 11
  store i32 %3, i32* %65, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink24ConcurrentMarkingVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %66 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 1
  %67 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %8, align 8
  %68 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %67, i64 0, i32 15, i32 0, i32 0, i32 0
  %69 = bitcast %"class.blink::Worklist.80"** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::View"* %66 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 1, i32 1
  store i32 %3, i32* %72, align 8
  %73 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 2
  %74 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %8, align 8
  %75 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %74, i64 0, i32 9, i32 0, i32 0, i32 0
  %76 = bitcast %"class.blink::Worklist.45"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.blink::Worklist<const void *, 16, 4>::View"* %73 to i64*
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 2, i32 1
  store i32 %3, i32* %79, align 8
  %80 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 3
  store i64 0, i64* %80, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink24ConcurrentMarkingVisitorD2Ev(%"class.blink::ConcurrentMarkingVisitor"* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink24ConcurrentMarkingVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24ConcurrentMarkingVisitorD0Ev(%"class.blink::ConcurrentMarkingVisitor"* nocapture) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.blink::ConcurrentMarkingVisitor"* %0 to i8*
  tail call void @free(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24ConcurrentMarkingVisitor14FlushWorklistsEv(%"class.blink::ConcurrentMarkingVisitor"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load %"class.blink::Worklist"*, %"class.blink::Worklist"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 1, i32 1
  %5 = load i32, i32* %4, align 8
  tail call void @_ZN5blink8WorklistINS_15TraceDescriptorELi512ELi4EE13FlushToGlobalEi(%"class.blink::Worklist"* %3, i32 %5) #14
  %6 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 2, i32 0
  %7 = load %"class.blink::Worklist.38"*, %"class.blink::Worklist.38"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 2, i32 1
  %9 = load i32, i32* %8, align 8
  tail call void @_ZN5blink8WorklistIPNS_16HeapObjectHeaderELi64ELi4EE13FlushToGlobalEi(%"class.blink::Worklist.38"* %7, i32 %9) #14
  %10 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 3, i32 0
  %11 = load %"class.blink::Worklist.45"*, %"class.blink::Worklist.45"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 3, i32 1
  %13 = load i32, i32* %12, align 8
  tail call void @_ZN5blink8WorklistIPKvLi16ELi4EE13FlushToGlobalEi(%"class.blink::Worklist.45"* %11, i32 %13) #14
  %14 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 2, i32 0
  %15 = load %"class.blink::Worklist.45"*, %"class.blink::Worklist.45"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 2, i32 1
  %17 = load i32, i32* %16, align 8
  tail call void @_ZN5blink8WorklistIPKvLi16ELi4EE13FlushToGlobalEi(%"class.blink::Worklist.45"* %15, i32 %17) #14
  %18 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 4, i32 0
  %19 = load %"class.blink::Worklist.52"*, %"class.blink::Worklist.52"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 4, i32 1
  %21 = load i32, i32* %20, align 8
  tail call void @_ZN5blink8WorklistINS_18CustomCallbackItemELi64ELi4EE13FlushToGlobalEi(%"class.blink::Worklist.52"* %19, i32 %21) #14
  %22 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 6, i32 0
  %23 = load %"class.blink::Worklist.66"*, %"class.blink::Worklist.66"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 6, i32 1
  %25 = load i32, i32* %24, align 8
  tail call void @_ZN5blink8WorklistINS_17EphemeronPairItemELi64ELi4EE13FlushToGlobalEi(%"class.blink::Worklist.66"* %23, i32 %25) #14
  %26 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 7, i32 0
  %27 = load %"class.blink::Worklist.66"*, %"class.blink::Worklist.66"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 7, i32 1
  %29 = load i32, i32* %28, align 8
  tail call void @_ZN5blink8WorklistINS_17EphemeronPairItemELi64ELi4EE13FlushToGlobalEi(%"class.blink::Worklist.66"* %27, i32 %29) #14
  %30 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 1, i32 0
  %31 = load %"class.blink::Worklist.80"*, %"class.blink::Worklist.80"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 1, i32 1
  %33 = load i32, i32* %32, align 8
  tail call void @_ZN5blink8WorklistINS_30NotSafeToConcurrentlyTraceItemELi64ELi4EE13FlushToGlobalEi(%"class.blink::Worklist.80"* %31, i32 %33) #14
  %34 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 10
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %42

37:                                               ; preds = %1
  %38 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 5, i32 0
  %39 = load %"class.blink::Worklist.59"*, %"class.blink::Worklist.59"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 5, i32 1
  %41 = load i32, i32* %40, align 8
  tail call void @_ZN5blink8WorklistIPKPKvLi256ELi4EE13FlushToGlobalEi(%"class.blink::Worklist.59"* %39, i32 %41) #14
  br label %42

42:                                               ; preds = %37, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18MarkingVisitorBaseD0Ev(%"class.blink::MarkingVisitorBase"*) unnamed_addr #1 comdat align 2 {
  %2 = bitcast %"class.blink::MarkingVisitorBase"* %0 to i8*
  tail call void @free(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Visitor12IsConcurrentEv(%"class.blink::Visitor"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink7Visitor25DeferredTraceIfConcurrentENS_15TraceDescriptorEm(%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18MarkingVisitorBase5VisitEPKvNS_15TraceDescriptorE(%"class.blink::MarkingVisitorBase"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*) unnamed_addr #7 comdat align 2 {
  %5 = ptrtoint i8* %2 to i64
  %6 = ptrtoint void (%"class.blink::Visitor"*, i8*)* %3 to i64
  %7 = getelementptr inbounds i8, i8* %2, i64 -4
  %8 = bitcast i8* %7 to i16*
  %9 = load atomic i16, i16* %8 acquire, align 2
  %10 = and i16 %9, 1
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %12, label %48

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 3, i32 0
  %14 = load %"class.blink::Worklist.45"*, %"class.blink::Worklist.45"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 3, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %"class.blink::Worklist.45", %"class.blink::Worklist.45"* %14, i64 0, i32 0, i64 %17, i32 0
  %19 = load %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::Segment", %"class.blink::Worklist<const void *, 16, 4>::Segment"* %19, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 16
  br i1 %22, label %26, label %23

23:                                               ; preds = %12
  %24 = add i64 %21, 1
  store i64 %24, i64* %20, align 8
  %25 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::Segment", %"class.blink::Worklist<const void *, 16, 4>::Segment"* %19, i64 0, i32 2, i64 %21
  store i8* %2, i8** %25, align 8
  br label %99

26:                                               ; preds = %12
  %27 = getelementptr inbounds %"class.blink::Worklist.45", %"class.blink::Worklist.45"* %14, i64 0, i32 1
  %28 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::GlobalPool", %"class.blink::Worklist<const void *, 16, 4>::GlobalPool"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %28) #14
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %33, label %31, !prof !2

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::GlobalPool", %"class.blink::Worklist<const void *, 16, 4>::GlobalPool"* %27, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %32) #14
  br label %33

33:                                               ; preds = %31, %26
  %34 = getelementptr inbounds %"class.blink::Worklist.45", %"class.blink::Worklist.45"* %14, i64 0, i32 1, i32 1
  %35 = bitcast %"class.blink::Worklist<const void *, 16, 4>::Segment"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.blink::Worklist<const void *, 16, 4>::Segment"* %19 to i64*
  store i64 %36, i64* %37, align 8
  %38 = ptrtoint %"class.blink::Worklist<const void *, 16, 4>::Segment"* %19 to i64
  store atomic volatile i64 %38, i64* %35 monotonic, align 8
  %39 = getelementptr inbounds %"class.blink::Worklist.45", %"class.blink::Worklist.45"* %14, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i64* %39, i64 1 monotonic
  %41 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %28) #14
  %42 = tail call noalias i8* @malloc(i64 144) #14
  %43 = bitcast %"class.blink::Worklist<const void *, 16, 4>::Segment"** %18 to i8**
  store i8* %42, i8** %43, align 8
  %44 = getelementptr inbounds i8, i8* %42, i64 8
  %45 = bitcast i8* %44 to i64*
  store i64 1, i64* %45, align 8
  %46 = getelementptr inbounds i8, i8* %42, i64 16
  %47 = bitcast i8* %46 to i8**
  store i8* %2, i8** %47, align 8
  br label %99

48:                                               ; preds = %4
  %49 = getelementptr inbounds i8, i8* %2, i64 -2
  %50 = bitcast i8* %49 to i16*
  %51 = load atomic i16, i16* %50 monotonic, align 2
  %52 = and i16 %51, 1
  %53 = icmp eq i16 %52, 0
  br i1 %53, label %54, label %99

54:                                               ; preds = %48
  %55 = or i16 %51, 1
  %56 = cmpxchg i16* %50, i16 %51, i16 %55 monotonic monotonic
  %57 = extractvalue { i16, i1 } %56, 1
  br i1 %57, label %58, label %99

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 1, i32 0
  %60 = load %"class.blink::Worklist"*, %"class.blink::Worklist"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 1, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %60, i64 0, i32 0, i64 %63, i32 0
  %65 = load %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"* %65, i64 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = icmp eq i64 %67, 512
  br i1 %68, label %75, label %69

69:                                               ; preds = %58
  %70 = add i64 %67, 1
  store i64 %70, i64* %66, align 8
  %71 = getelementptr inbounds %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"* %65, i64 0, i32 2, i64 %67, i32 0
  %72 = bitcast i8** %71 to i64*
  store i64 %5, i64* %72, align 8
  %73 = getelementptr inbounds %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"* %65, i64 0, i32 2, i64 %67, i32 1
  %74 = bitcast void (%"class.blink::Visitor"*, i8*)** %73 to i64*
  store i64 %6, i64* %74, align 8
  br label %99

75:                                               ; preds = %58
  %76 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %60, i64 0, i32 1
  %77 = getelementptr inbounds %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool"* %76, i64 0, i32 0, i32 0, i32 0
  %78 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %77) #14
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %82, label %80, !prof !2

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool"* %76, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %81) #14
  br label %82

82:                                               ; preds = %80, %75
  %83 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %60, i64 0, i32 1, i32 1
  %84 = bitcast %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"* %65 to i64*
  store i64 %85, i64* %86, align 8
  %87 = ptrtoint %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"* %65 to i64
  store atomic volatile i64 %87, i64* %84 monotonic, align 8
  %88 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %60, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = atomicrmw add i64* %88, i64 1 monotonic
  %90 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %77) #14
  %91 = tail call noalias i8* @malloc(i64 8208) #14
  %92 = bitcast %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"** %64 to i8**
  store i8* %91, i8** %92, align 8
  %93 = getelementptr inbounds i8, i8* %91, i64 8
  %94 = bitcast i8* %93 to i64*
  store i64 1, i64* %94, align 8
  %95 = getelementptr inbounds i8, i8* %91, i64 16
  %96 = bitcast i8* %95 to i64*
  store i64 %5, i64* %96, align 8
  %97 = getelementptr inbounds i8, i8* %91, i64 24
  %98 = bitcast i8* %97 to i64*
  store i64 %6, i64* %98, align 8
  br label %99

99:                                               ; preds = %23, %33, %48, %54, %69, %82
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor5VisitERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor9VisitRootEPKvNS_15TraceDescriptorERKN4base8LocationE(%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #1 comdat align 2 {
  %6 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %7 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %7, i64 5
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %8, align 8
  tail call void %9(%"class.blink::Visitor"* %0, i8* %1, i8* %2, void (%"class.blink::Visitor"*, i8*)* %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink24ConcurrentMarkingVisitor12IsConcurrentEv(%"class.blink::ConcurrentMarkingVisitor"*) unnamed_addr #1 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink24ConcurrentMarkingVisitor25DeferredTraceIfConcurrentENS_15TraceDescriptorEm(%"class.blink::ConcurrentMarkingVisitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64) unnamed_addr #1 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.blink::Worklist.80"*, %"class.blink::Worklist.80"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 1, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Worklist.80", %"class.blink::Worklist.80"* %6, i64 0, i32 0, i64 %9, i32 0
  %11 = load %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"* %11, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 64
  br i1 %14, label %20, label %15

15:                                               ; preds = %4
  %16 = add i64 %13, 1
  store i64 %16, i64* %12, align 8
  %17 = getelementptr inbounds %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"* %11, i64 0, i32 2, i64 %13, i32 0, i32 0
  store i8* %1, i8** %17, align 8
  %18 = getelementptr inbounds %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"* %11, i64 0, i32 2, i64 %13, i32 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* %2, void (%"class.blink::Visitor"*, i8*)** %18, align 8
  %19 = getelementptr inbounds %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"* %11, i64 0, i32 2, i64 %13, i32 1
  br label %46

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.blink::Worklist.80", %"class.blink::Worklist.80"* %6, i64 0, i32 1
  %22 = getelementptr inbounds %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %22) #14
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25, !prof !2

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool"* %21, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %26) #14
  br label %27

27:                                               ; preds = %25, %20
  %28 = getelementptr inbounds %"class.blink::Worklist.80", %"class.blink::Worklist.80"* %6, i64 0, i32 1, i32 1
  %29 = bitcast %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"* %11 to i64*
  store i64 %30, i64* %31, align 8
  %32 = ptrtoint %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"* %11 to i64
  store atomic volatile i64 %32, i64* %29 monotonic, align 8
  %33 = getelementptr inbounds %"class.blink::Worklist.80", %"class.blink::Worklist.80"* %6, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i64* %33, i64 1 monotonic
  %35 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %22) #14
  %36 = tail call noalias i8* @malloc(i64 1552) #14
  %37 = bitcast %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"** %10 to i8**
  store i8* %36, i8** %37, align 8
  %38 = getelementptr inbounds i8, i8* %36, i64 8
  %39 = bitcast i8* %38 to i64*
  store i64 1, i64* %39, align 8
  %40 = getelementptr inbounds i8, i8* %36, i64 16
  %41 = bitcast i8* %40 to i8**
  store i8* %1, i8** %41, align 8
  %42 = getelementptr inbounds i8, i8* %36, i64 24
  %43 = bitcast i8* %42 to void (%"class.blink::Visitor"*, i8*)**
  store void (%"class.blink::Visitor"*, i8*)* %2, void (%"class.blink::Visitor"*, i8*)** %43, align 8
  %44 = getelementptr inbounds i8, i8* %36, i64 32
  %45 = bitcast i8* %44 to i64*
  br label %46

46:                                               ; preds = %15, %27
  %47 = phi i64* [ %19, %15 ], [ %45, %27 ]
  store i64 %3, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 9
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %49, %3
  store i64 %50, i64* %48, align 8
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14MarkingVisitorD2Ev(%"class.blink::MarkingVisitor"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink14MarkingVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"*** %3, align 8
  %5 = icmp eq %"class.blink::HeapObjectHeader"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.blink::HeapObjectHeader"** %4 to i64
  %8 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = bitcast %"class.blink::HeapObjectHeader"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.blink::HeapObjectHeader"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14MarkingVisitorD0Ev(%"class.blink::MarkingVisitor"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink14MarkingVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"*** %3, align 8
  %5 = icmp eq %"class.blink::HeapObjectHeader"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.blink::HeapObjectHeader"** %4 to i64
  %8 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = bitcast %"class.blink::HeapObjectHeader"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.blink::HeapObjectHeader"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.blink::MarkingVisitor"* %0 to i8*
  tail call void @free(i8* %12) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7VisitorD2Ev(%"class.blink::Visitor"*) unnamed_addr #1 comdat align 2 {
  ret void
}

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIPKN5blink16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.blink::HeapObjectHeader"** dereferenceable(8), %"class.blink::HeapObjectHeader"** dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %4 = load %"class.blink::HeapObjectHeader"*, %"class.blink::HeapObjectHeader"** %1, align 8
  %5 = ptrtoint %"class.blink::HeapObjectHeader"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #14, !range !6
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base"* %62 to %"class.blink::HeapObjectHeader"**
  %64 = load %"class.blink::HeapObjectHeader"*, %"class.blink::HeapObjectHeader"** %63, align 8
  %65 = icmp eq %"class.blink::HeapObjectHeader"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #16, !noalias !7
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.blink::HeapObjectHeader"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !7
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !7
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !7
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %75, align 8, !noalias !7
  %76 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #14, !range !6
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #14
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPKN5blink16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #14, !range !6
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base"* %118, %"struct.std::__1::__hash_node_base"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #14, !range !6
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %158
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN5blink16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !6
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #14
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPKN5blink16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #14, !range !6
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #14
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #14, !range !6
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #14
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPKN5blink16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN5blink16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #15
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #16
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #16
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !10

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #14, !range !6
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to %"class.blink::HeapObjectHeader"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to %"class.blink::HeapObjectHeader"**
  %112 = load %"class.blink::HeapObjectHeader"*, %"class.blink::HeapObjectHeader"** %102, align 8
  %113 = load %"class.blink::HeapObjectHeader"*, %"class.blink::HeapObjectHeader"** %111, align 8
  %114 = icmp eq %"class.blink::HeapObjectHeader"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #16
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #11

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #11

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8WorklistIPKPKvLi256ELi4EE13FlushToGlobalEi(%"class.blink::Worklist.59"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.blink::Worklist.59", %"class.blink::Worklist.59"* %0, i64 0, i32 0, i64 %3, i32 0
  %5 = load %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Worklist<const void *const *, 256, 4>::Segment", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %5, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %29, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::Worklist.59", %"class.blink::Worklist.59"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool", %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %11) #14
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14, !prof !2

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool", %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool"* %10, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %15) #14
  br label %16

16:                                               ; preds = %14, %9
  %17 = getelementptr inbounds %"class.blink::Worklist.59", %"class.blink::Worklist.59"* %0, i64 0, i32 1, i32 1
  %18 = bitcast %"class.blink::Worklist<const void *const *, 256, 4>::Segment"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %5 to i64*
  store i64 %19, i64* %20, align 8
  %21 = ptrtoint %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %5 to i64
  store atomic volatile i64 %21, i64* %18 monotonic, align 8
  %22 = getelementptr inbounds %"class.blink::Worklist.59", %"class.blink::Worklist.59"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i64* %22, i64 1 monotonic
  %24 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %11) #14
  %25 = tail call noalias i8* @malloc(i64 2064) #14
  %26 = getelementptr inbounds i8, i8* %25, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 0, i64* %27, align 8
  %28 = bitcast %"class.blink::Worklist<const void *const *, 256, 4>::Segment"** %4 to i8**
  store i8* %25, i8** %28, align 8
  br label %29

29:                                               ; preds = %2, %16
  %30 = getelementptr inbounds %"class.blink::Worklist.59", %"class.blink::Worklist.59"* %0, i64 0, i32 0, i64 %3, i32 1
  %31 = load %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::Worklist<const void *const *, 256, 4>::Segment", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %31, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %55, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::Worklist.59", %"class.blink::Worklist.59"* %0, i64 0, i32 1
  %37 = getelementptr inbounds %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool", %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %37) #14
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %42, label %40, !prof !2

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool", %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool"* %36, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %41) #14
  br label %42

42:                                               ; preds = %40, %35
  %43 = getelementptr inbounds %"class.blink::Worklist.59", %"class.blink::Worklist.59"* %0, i64 0, i32 1, i32 1
  %44 = bitcast %"class.blink::Worklist<const void *const *, 256, 4>::Segment"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %31 to i64*
  store i64 %45, i64* %46, align 8
  %47 = ptrtoint %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %31 to i64
  store atomic volatile i64 %47, i64* %44 monotonic, align 8
  %48 = getelementptr inbounds %"class.blink::Worklist.59", %"class.blink::Worklist.59"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i64* %48, i64 1 monotonic
  %50 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %37) #14
  %51 = tail call noalias i8* @malloc(i64 2064) #14
  %52 = getelementptr inbounds i8, i8* %51, i64 8
  %53 = bitcast i8* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = bitcast %"class.blink::Worklist<const void *const *, 256, 4>::Segment"** %30 to i8**
  store i8* %51, i8** %54, align 8
  br label %55

55:                                               ; preds = %29, %42
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #11

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8WorklistINS_15TraceDescriptorELi512ELi4EE13FlushToGlobalEi(%"class.blink::Worklist"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %0, i64 0, i32 0, i64 %3, i32 0
  %5 = load %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"* %5, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %29, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %11) #14
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14, !prof !2

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool"* %10, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %15) #14
  br label %16

16:                                               ; preds = %14, %9
  %17 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %0, i64 0, i32 1, i32 1
  %18 = bitcast %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"* %5 to i64*
  store i64 %19, i64* %20, align 8
  %21 = ptrtoint %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"* %5 to i64
  store atomic volatile i64 %21, i64* %18 monotonic, align 8
  %22 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i64* %22, i64 1 monotonic
  %24 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %11) #14
  %25 = tail call noalias i8* @malloc(i64 8208) #14
  %26 = getelementptr inbounds i8, i8* %25, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 0, i64* %27, align 8
  %28 = bitcast %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"** %4 to i8**
  store i8* %25, i8** %28, align 8
  br label %29

29:                                               ; preds = %2, %16
  %30 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %0, i64 0, i32 0, i64 %3, i32 1
  %31 = load %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"* %31, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %55, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %0, i64 0, i32 1
  %37 = getelementptr inbounds %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %37) #14
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %42, label %40, !prof !2

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool"* %36, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %41) #14
  br label %42

42:                                               ; preds = %40, %35
  %43 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %0, i64 0, i32 1, i32 1
  %44 = bitcast %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"* %31 to i64*
  store i64 %45, i64* %46, align 8
  %47 = ptrtoint %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"* %31 to i64
  store atomic volatile i64 %47, i64* %44 monotonic, align 8
  %48 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i64* %48, i64 1 monotonic
  %50 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %37) #14
  %51 = tail call noalias i8* @malloc(i64 8208) #14
  %52 = getelementptr inbounds i8, i8* %51, i64 8
  %53 = bitcast i8* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = bitcast %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"** %30 to i8**
  store i8* %51, i8** %54, align 8
  br label %55

55:                                               ; preds = %29, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8WorklistIPNS_16HeapObjectHeaderELi64ELi4EE13FlushToGlobalEi(%"class.blink::Worklist.38"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.blink::Worklist.38", %"class.blink::Worklist.38"* %0, i64 0, i32 0, i64 %3, i32 0
  %5 = load %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"* %5, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %29, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::Worklist.38", %"class.blink::Worklist.38"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %11) #14
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14, !prof !2

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool"* %10, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %15) #14
  br label %16

16:                                               ; preds = %14, %9
  %17 = getelementptr inbounds %"class.blink::Worklist.38", %"class.blink::Worklist.38"* %0, i64 0, i32 1, i32 1
  %18 = bitcast %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"* %5 to i64*
  store i64 %19, i64* %20, align 8
  %21 = ptrtoint %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"* %5 to i64
  store atomic volatile i64 %21, i64* %18 monotonic, align 8
  %22 = getelementptr inbounds %"class.blink::Worklist.38", %"class.blink::Worklist.38"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i64* %22, i64 1 monotonic
  %24 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %11) #14
  %25 = tail call noalias i8* @malloc(i64 528) #14
  %26 = getelementptr inbounds i8, i8* %25, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 0, i64* %27, align 8
  %28 = bitcast %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"** %4 to i8**
  store i8* %25, i8** %28, align 8
  br label %29

29:                                               ; preds = %2, %16
  %30 = getelementptr inbounds %"class.blink::Worklist.38", %"class.blink::Worklist.38"* %0, i64 0, i32 0, i64 %3, i32 1
  %31 = load %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"* %31, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %55, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::Worklist.38", %"class.blink::Worklist.38"* %0, i64 0, i32 1
  %37 = getelementptr inbounds %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %37) #14
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %42, label %40, !prof !2

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool"* %36, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %41) #14
  br label %42

42:                                               ; preds = %40, %35
  %43 = getelementptr inbounds %"class.blink::Worklist.38", %"class.blink::Worklist.38"* %0, i64 0, i32 1, i32 1
  %44 = bitcast %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"* %31 to i64*
  store i64 %45, i64* %46, align 8
  %47 = ptrtoint %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"* %31 to i64
  store atomic volatile i64 %47, i64* %44 monotonic, align 8
  %48 = getelementptr inbounds %"class.blink::Worklist.38", %"class.blink::Worklist.38"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i64* %48, i64 1 monotonic
  %50 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %37) #14
  %51 = tail call noalias i8* @malloc(i64 528) #14
  %52 = getelementptr inbounds i8, i8* %51, i64 8
  %53 = bitcast i8* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = bitcast %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"** %30 to i8**
  store i8* %51, i8** %54, align 8
  br label %55

55:                                               ; preds = %29, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8WorklistIPKvLi16ELi4EE13FlushToGlobalEi(%"class.blink::Worklist.45"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.blink::Worklist.45", %"class.blink::Worklist.45"* %0, i64 0, i32 0, i64 %3, i32 0
  %5 = load %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::Segment", %"class.blink::Worklist<const void *, 16, 4>::Segment"* %5, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %29, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::Worklist.45", %"class.blink::Worklist.45"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::GlobalPool", %"class.blink::Worklist<const void *, 16, 4>::GlobalPool"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %11) #14
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14, !prof !2

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::GlobalPool", %"class.blink::Worklist<const void *, 16, 4>::GlobalPool"* %10, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %15) #14
  br label %16

16:                                               ; preds = %14, %9
  %17 = getelementptr inbounds %"class.blink::Worklist.45", %"class.blink::Worklist.45"* %0, i64 0, i32 1, i32 1
  %18 = bitcast %"class.blink::Worklist<const void *, 16, 4>::Segment"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.blink::Worklist<const void *, 16, 4>::Segment"* %5 to i64*
  store i64 %19, i64* %20, align 8
  %21 = ptrtoint %"class.blink::Worklist<const void *, 16, 4>::Segment"* %5 to i64
  store atomic volatile i64 %21, i64* %18 monotonic, align 8
  %22 = getelementptr inbounds %"class.blink::Worklist.45", %"class.blink::Worklist.45"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i64* %22, i64 1 monotonic
  %24 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %11) #14
  %25 = tail call noalias i8* @malloc(i64 144) #14
  %26 = getelementptr inbounds i8, i8* %25, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 0, i64* %27, align 8
  %28 = bitcast %"class.blink::Worklist<const void *, 16, 4>::Segment"** %4 to i8**
  store i8* %25, i8** %28, align 8
  br label %29

29:                                               ; preds = %2, %16
  %30 = getelementptr inbounds %"class.blink::Worklist.45", %"class.blink::Worklist.45"* %0, i64 0, i32 0, i64 %3, i32 1
  %31 = load %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::Segment", %"class.blink::Worklist<const void *, 16, 4>::Segment"* %31, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %55, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::Worklist.45", %"class.blink::Worklist.45"* %0, i64 0, i32 1
  %37 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::GlobalPool", %"class.blink::Worklist<const void *, 16, 4>::GlobalPool"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %37) #14
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %42, label %40, !prof !2

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::GlobalPool", %"class.blink::Worklist<const void *, 16, 4>::GlobalPool"* %36, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %41) #14
  br label %42

42:                                               ; preds = %40, %35
  %43 = getelementptr inbounds %"class.blink::Worklist.45", %"class.blink::Worklist.45"* %0, i64 0, i32 1, i32 1
  %44 = bitcast %"class.blink::Worklist<const void *, 16, 4>::Segment"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.blink::Worklist<const void *, 16, 4>::Segment"* %31 to i64*
  store i64 %45, i64* %46, align 8
  %47 = ptrtoint %"class.blink::Worklist<const void *, 16, 4>::Segment"* %31 to i64
  store atomic volatile i64 %47, i64* %44 monotonic, align 8
  %48 = getelementptr inbounds %"class.blink::Worklist.45", %"class.blink::Worklist.45"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i64* %48, i64 1 monotonic
  %50 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %37) #14
  %51 = tail call noalias i8* @malloc(i64 144) #14
  %52 = getelementptr inbounds i8, i8* %51, i64 8
  %53 = bitcast i8* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = bitcast %"class.blink::Worklist<const void *, 16, 4>::Segment"** %30 to i8**
  store i8* %51, i8** %54, align 8
  br label %55

55:                                               ; preds = %29, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8WorklistINS_18CustomCallbackItemELi64ELi4EE13FlushToGlobalEi(%"class.blink::Worklist.52"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.blink::Worklist.52", %"class.blink::Worklist.52"* %0, i64 0, i32 0, i64 %3, i32 0
  %5 = load %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"* %5, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %29, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::Worklist.52", %"class.blink::Worklist.52"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %11) #14
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14, !prof !2

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool"* %10, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %15) #14
  br label %16

16:                                               ; preds = %14, %9
  %17 = getelementptr inbounds %"class.blink::Worklist.52", %"class.blink::Worklist.52"* %0, i64 0, i32 1, i32 1
  %18 = bitcast %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"* %5 to i64*
  store i64 %19, i64* %20, align 8
  %21 = ptrtoint %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"* %5 to i64
  store atomic volatile i64 %21, i64* %18 monotonic, align 8
  %22 = getelementptr inbounds %"class.blink::Worklist.52", %"class.blink::Worklist.52"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i64* %22, i64 1 monotonic
  %24 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %11) #14
  %25 = tail call noalias i8* @malloc(i64 1040) #14
  %26 = getelementptr inbounds i8, i8* %25, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 0, i64* %27, align 8
  %28 = bitcast %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"** %4 to i8**
  store i8* %25, i8** %28, align 8
  br label %29

29:                                               ; preds = %2, %16
  %30 = getelementptr inbounds %"class.blink::Worklist.52", %"class.blink::Worklist.52"* %0, i64 0, i32 0, i64 %3, i32 1
  %31 = load %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"* %31, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %55, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::Worklist.52", %"class.blink::Worklist.52"* %0, i64 0, i32 1
  %37 = getelementptr inbounds %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %37) #14
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %42, label %40, !prof !2

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool"* %36, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %41) #14
  br label %42

42:                                               ; preds = %40, %35
  %43 = getelementptr inbounds %"class.blink::Worklist.52", %"class.blink::Worklist.52"* %0, i64 0, i32 1, i32 1
  %44 = bitcast %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"* %31 to i64*
  store i64 %45, i64* %46, align 8
  %47 = ptrtoint %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"* %31 to i64
  store atomic volatile i64 %47, i64* %44 monotonic, align 8
  %48 = getelementptr inbounds %"class.blink::Worklist.52", %"class.blink::Worklist.52"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i64* %48, i64 1 monotonic
  %50 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %37) #14
  %51 = tail call noalias i8* @malloc(i64 1040) #14
  %52 = getelementptr inbounds i8, i8* %51, i64 8
  %53 = bitcast i8* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = bitcast %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"** %30 to i8**
  store i8* %51, i8** %54, align 8
  br label %55

55:                                               ; preds = %29, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8WorklistINS_17EphemeronPairItemELi64ELi4EE13FlushToGlobalEi(%"class.blink::Worklist.66"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.blink::Worklist.66", %"class.blink::Worklist.66"* %0, i64 0, i32 0, i64 %3, i32 0
  %5 = load %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"* %5, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %29, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::Worklist.66", %"class.blink::Worklist.66"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %11) #14
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14, !prof !2

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool"* %10, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %15) #14
  br label %16

16:                                               ; preds = %14, %9
  %17 = getelementptr inbounds %"class.blink::Worklist.66", %"class.blink::Worklist.66"* %0, i64 0, i32 1, i32 1
  %18 = bitcast %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"* %5 to i64*
  store i64 %19, i64* %20, align 8
  %21 = ptrtoint %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"* %5 to i64
  store atomic volatile i64 %21, i64* %18 monotonic, align 8
  %22 = getelementptr inbounds %"class.blink::Worklist.66", %"class.blink::Worklist.66"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i64* %22, i64 1 monotonic
  %24 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %11) #14
  %25 = tail call noalias i8* @malloc(i64 1552) #14
  %26 = getelementptr inbounds i8, i8* %25, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 0, i64* %27, align 8
  %28 = bitcast %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"** %4 to i8**
  store i8* %25, i8** %28, align 8
  br label %29

29:                                               ; preds = %2, %16
  %30 = getelementptr inbounds %"class.blink::Worklist.66", %"class.blink::Worklist.66"* %0, i64 0, i32 0, i64 %3, i32 1
  %31 = load %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"* %31, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %55, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::Worklist.66", %"class.blink::Worklist.66"* %0, i64 0, i32 1
  %37 = getelementptr inbounds %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %37) #14
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %42, label %40, !prof !2

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool"* %36, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %41) #14
  br label %42

42:                                               ; preds = %40, %35
  %43 = getelementptr inbounds %"class.blink::Worklist.66", %"class.blink::Worklist.66"* %0, i64 0, i32 1, i32 1
  %44 = bitcast %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"* %31 to i64*
  store i64 %45, i64* %46, align 8
  %47 = ptrtoint %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"* %31 to i64
  store atomic volatile i64 %47, i64* %44 monotonic, align 8
  %48 = getelementptr inbounds %"class.blink::Worklist.66", %"class.blink::Worklist.66"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i64* %48, i64 1 monotonic
  %50 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %37) #14
  %51 = tail call noalias i8* @malloc(i64 1552) #14
  %52 = getelementptr inbounds i8, i8* %51, i64 8
  %53 = bitcast i8* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = bitcast %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"** %30 to i8**
  store i8* %51, i8** %54, align 8
  br label %55

55:                                               ; preds = %29, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8WorklistINS_30NotSafeToConcurrentlyTraceItemELi64ELi4EE13FlushToGlobalEi(%"class.blink::Worklist.80"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.blink::Worklist.80", %"class.blink::Worklist.80"* %0, i64 0, i32 0, i64 %3, i32 0
  %5 = load %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"* %5, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %29, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::Worklist.80", %"class.blink::Worklist.80"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %11) #14
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14, !prof !2

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool"* %10, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %15) #14
  br label %16

16:                                               ; preds = %14, %9
  %17 = getelementptr inbounds %"class.blink::Worklist.80", %"class.blink::Worklist.80"* %0, i64 0, i32 1, i32 1
  %18 = bitcast %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"* %5 to i64*
  store i64 %19, i64* %20, align 8
  %21 = ptrtoint %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"* %5 to i64
  store atomic volatile i64 %21, i64* %18 monotonic, align 8
  %22 = getelementptr inbounds %"class.blink::Worklist.80", %"class.blink::Worklist.80"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i64* %22, i64 1 monotonic
  %24 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %11) #14
  %25 = tail call noalias i8* @malloc(i64 1552) #14
  %26 = getelementptr inbounds i8, i8* %25, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 0, i64* %27, align 8
  %28 = bitcast %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"** %4 to i8**
  store i8* %25, i8** %28, align 8
  br label %29

29:                                               ; preds = %2, %16
  %30 = getelementptr inbounds %"class.blink::Worklist.80", %"class.blink::Worklist.80"* %0, i64 0, i32 0, i64 %3, i32 1
  %31 = load %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"* %31, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %55, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::Worklist.80", %"class.blink::Worklist.80"* %0, i64 0, i32 1
  %37 = getelementptr inbounds %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %37) #14
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %42, label %40, !prof !2

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool"* %36, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %41) #14
  br label %42

42:                                               ; preds = %40, %35
  %43 = getelementptr inbounds %"class.blink::Worklist.80", %"class.blink::Worklist.80"* %0, i64 0, i32 1, i32 1
  %44 = bitcast %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"* %31 to i64*
  store i64 %45, i64* %46, align 8
  %47 = ptrtoint %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"* %31 to i64
  store atomic volatile i64 %47, i64* %44 monotonic, align 8
  %48 = getelementptr inbounds %"class.blink::Worklist.80", %"class.blink::Worklist.80"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i64* %48, i64 1 monotonic
  %50 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %37) #14
  %51 = tail call noalias i8* @malloc(i64 1552) #14
  %52 = getelementptr inbounds i8, i8* %51, i64 8
  %53 = bitcast i8* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = bitcast %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"** %30 to i8**
  store i8* %51, i8** %54, align 8
  br label %55

55:                                               ; preds = %29, %42
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #11

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i32 24, i32 33}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{i8 0, i8 2}
!6 = !{i64 0, i64 65}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNSt3__112__hash_tableIPKN5blink16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__112__hash_tableIPKN5blink16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_"}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
