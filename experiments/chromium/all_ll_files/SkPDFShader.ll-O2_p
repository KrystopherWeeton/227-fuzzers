; ModuleID = '../../third_party/skia/src/pdf/SkPDFShader.cpp'
source_filename = "../../third_party/skia/src/pdf/SkPDFShader.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkPDFImageShaderKey = type { %class.SkMatrix, %struct.SkIRect, %struct.SkBitmapKey, [2 x i32], %struct.SkRGBA4f }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkBitmapKey = type { %struct.SkIRect, i32 }
%struct.SkRGBA4f = type { float, float, float, float }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.101 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.102 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type { %class.SkRefCnt.base, %class.SkMatrixProvider, %class.SkMarkerStack*, %struct.SkImageInfo, %class.SkSurfaceProps, %class.SkM44, %class.SkM44 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkMatrixProvider = type { i32 (...)**, %class.SkM44, %class.SkMatrix }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.103, i32, i32 }
%class.sk_sp.103 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.104, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.104 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.105" }
%"struct.std::__1::atomic.105" = type { %"struct.std::__1::__atomic_base.106" }
%"struct.std::__1::__atomic_base.106" = type { %"struct.std::__1::__atomic_base.107" }
%"struct.std::__1::__atomic_base.107" = type { %"struct.std::__1::__cxx_atomic_impl.108" }
%"struct.std::__1::__cxx_atomic_impl.108" = type { %"struct.std::__1::__cxx_atomic_base_impl.109" }
%"struct.std::__1::__cxx_atomic_base_impl.109" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.SkM44 = type { [16 x float] }
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type { i32, %class.SkAutoTMalloc, i32, %class.SkAutoTMalloc, %"class.std::__1::vector.123", %class.SkGlyphRunList, %"class.std::__1::vector.141" }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.119" }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %struct.SkPoint* }
%struct.SkPoint = type { float, float }
%"class.std::__1::vector.123" = type { %"class.std::__1::__vector_base.124" }
%"class.std::__1::__vector_base.124" = type { %class.SkGlyphRun*, %class.SkGlyphRun*, %"class.std::__1::__compressed_pair.129" }
%class.SkGlyphRun = type { %class.SkZip, %class.SkSpan, %class.SkSpan.126, %class.SkSpan.127, %class.SkFont }
%class.SkZip = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.125" }
%"class.std::__1::__tuple_leaf" = type { i16* }
%"class.std::__1::__tuple_leaf.125" = type { %struct.SkPoint* }
%class.SkSpan = type { i8*, i64 }
%class.SkSpan.126 = type { i32*, i64 }
%class.SkSpan.127 = type { %struct.SkPoint*, i64 }
%class.SkFont = type <{ %class.sk_sp.128, float, float, float, i8, i8, i8, i8 }>
%class.sk_sp.128 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %class.SkGlyphRun* }
%class.SkGlyphRunList = type { %class.SkSpan.134, %class.SkTextBlob*, %struct.SkRect, %struct.SkPoint }
%class.SkSpan.134 = type { %class.SkGlyphRun*, i64 }
%class.SkTextBlob = type { %class.SkNVRefCnt.135, %struct.SkRect, i32, %"struct.std::__1::atomic.136" }
%class.SkNVRefCnt.135 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.136" = type { %"struct.std::__1::__atomic_base.137" }
%"struct.std::__1::__atomic_base.137" = type { %"struct.std::__1::__atomic_base.138" }
%"struct.std::__1::__atomic_base.138" = type { %"struct.std::__1::__cxx_atomic_impl.139" }
%"struct.std::__1::__cxx_atomic_impl.139" = type { %"struct.std::__1::__cxx_atomic_base_impl.140" }
%"struct.std::__1::__cxx_atomic_base_impl.140" = type { i32 }
%"class.std::__1::vector.141" = type { %"class.std::__1::__vector_base.142" }
%"class.std::__1::__vector_base.142" = type { i16*, i16*, %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { i16* }
%class.SkPaint = type <{ %class.sk_sp.235, %class.sk_sp.236, %class.sk_sp.237, %class.sk_sp.238, %class.sk_sp.239, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.235 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.236 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.237 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.238 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.239 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkPDFDocument = type { %class.SkDocument.base, %class.SkTHashMap, %class.SkTHashMap.2, %class.SkTHashMap.11, %class.SkTHashMap.20, %class.SkTHashMap.29, %class.SkTHashMap.38, %class.SkTHashMap.47, %class.SkTHashMap.47, %class.SkTHashMap.56, %class.SkTHashMap.65, %class.SkTHashMap.74, %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference, %"class.std::__1::vector", %"class.std::__1::vector.87", %class.SkPDFOffsetMap, %class.SkCanvas, %"class.std::__1::vector.151", %"class.std::__1::vector.171", %class.sk_sp.178, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %struct.SkUUID, %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference, %"struct.SkPDF::Metadata", float, float, %class.SkExecutor*, %class.SkPDFTagTree, %class.SkMutex, %class.SkSemaphore }
%class.SkDocument.base = type <{ %class.SkRefCnt.base, [4 x i8], %class.SkWStream*, i32 }>
%class.SkWStream = type { i32 (...)** }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.228" }
%"struct.std::__1::pair.228" = type { %struct.SkPDFImageShaderKey, %struct.SkPDFIndirectReference }
%class.SkTHashMap.2 = type { %class.SkTHashTable.3 }
%class.SkTHashTable.3 = type { i32, i32, %class.SkAutoTArray.4 }
%class.SkAutoTArray.4 = type { %"class.std::__1::unique_ptr.5" }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.SkTHashTable<SkTHashMap<SkPDFGradientShader::Key, SkPDFIndirectReference, SkPDFGradientShader::KeyHash>::Pair, SkPDFGradientShader::Key, SkTHashMap<SkPDFGradientShader::Key, SkPDFIndirectReference, SkPDFGradientShader::KeyHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkPDFGradientShader::Key, SkPDFIndirectReference, SkPDFGradientShader::KeyHash>::Pair, SkPDFGradientShader::Key, SkTHashMap<SkPDFGradientShader::Key, SkPDFIndirectReference, SkPDFGradientShader::KeyHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.11 = type { %class.SkTHashTable.12 }
%class.SkTHashTable.12 = type { i32, i32, %class.SkAutoTArray.13 }
%class.SkAutoTArray.13 = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.20 = type { %class.SkTHashTable.21 }
%class.SkTHashTable.21 = type { i32, i32, %class.SkAutoTArray.22 }
%class.SkAutoTArray.22 = type { %"class.std::__1::unique_ptr.23" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::unique_ptr<SkAdvancedTypefaceMetrics, std::__1::default_delete<SkAdvancedTypefaceMetrics> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::unique_ptr<SkAdvancedTypefaceMetrics, std::__1::default_delete<SkAdvancedTypefaceMetrics> >, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::unique_ptr<SkAdvancedTypefaceMetrics, std::__1::default_delete<SkAdvancedTypefaceMetrics> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::unique_ptr<SkAdvancedTypefaceMetrics, std::__1::default_delete<SkAdvancedTypefaceMetrics> >, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.29 = type { %class.SkTHashTable.30 }
%class.SkTHashTable.30 = type { i32, i32, %class.SkAutoTArray.31 }
%class.SkAutoTArray.31 = type { %"class.std::__1::unique_ptr.32" }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.38 = type { %class.SkTHashTable.39 }
%class.SkTHashTable.39 = type { i32, i32, %class.SkAutoTArray.40 }
%class.SkAutoTArray.40 = type { %"class.std::__1::unique_ptr.41" }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<int, std::__1::allocator<int> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<int, std::__1::allocator<int> >, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<int, std::__1::allocator<int> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<int, std::__1::allocator<int> >, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.47 = type { %class.SkTHashTable.48 }
%class.SkTHashTable.48 = type { i32, i32, %class.SkAutoTArray.49 }
%class.SkAutoTArray.49 = type { %"class.std::__1::unique_ptr.50" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.56 = type { %class.SkTHashTable.57 }
%class.SkTHashTable.57 = type { i32, i32, %class.SkAutoTArray.58 }
%class.SkAutoTArray.58 = type { %"class.std::__1::unique_ptr.59" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"struct.SkTHashTable<SkTHashMap<unsigned long, SkPDFFont, SkGoodHash>::Pair, unsigned long, SkTHashMap<unsigned long, SkPDFFont, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned long, SkPDFFont, SkGoodHash>::Pair, unsigned long, SkTHashMap<unsigned long, SkPDFFont, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.65 = type { %class.SkTHashTable.66 }
%class.SkTHashTable.66 = type { i32, i32, %class.SkAutoTArray.67 }
%class.SkAutoTArray.67 = type { %"class.std::__1::unique_ptr.68" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.SkTHashTable<SkTHashMap<SkPDFStrokeGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFStrokeGraphicState, SkTHashMap<SkPDFStrokeGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkPDFStrokeGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFStrokeGraphicState, SkTHashMap<SkPDFStrokeGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.74 = type { %class.SkTHashTable.75 }
%class.SkTHashTable.75 = type { i32, i32, %class.SkAutoTArray.76 }
%class.SkAutoTArray.76 = type { %"class.std::__1::unique_ptr.77" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"struct.SkTHashTable<SkTHashMap<SkPDFFillGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFFillGraphicState, SkTHashMap<SkPDFFillGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkPDFFillGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFFillGraphicState, SkTHashMap<SkPDFFillGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.83"*, %"class.std::__1::unique_ptr.83"*, %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::unique_ptr.83" = type opaque
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::unique_ptr.83"* }
%"class.std::__1::vector.87" = type { %"class.std::__1::__vector_base.88" }
%"class.std::__1::__vector_base.88" = type { %struct.SkPDFNamedDestination*, %struct.SkPDFNamedDestination*, %"class.std::__1::__compressed_pair.89" }
%struct.SkPDFNamedDestination = type <{ %class.sk_sp, %struct.SkPoint, %struct.SkPDFIndirectReference, [4 x i8] }>
%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %struct.SkPDFNamedDestination* }
%class.SkPDFOffsetMap = type { %"class.std::__1::vector.94", i64 }
%"class.std::__1::vector.94" = type { %"class.std::__1::__vector_base.95" }
%"class.std::__1::__vector_base.95" = type { i32*, i32*, %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { i32* }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.101, [384 x i64], %class.sk_sp.102, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.110", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.116" }
%"class.std::__1::vector.151" = type { %"class.std::__1::__vector_base.152" }
%"class.std::__1::__vector_base.152" = type { %"class.std::__1::unique_ptr.153"*, %"class.std::__1::unique_ptr.153"*, %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %class.SkPDFDict* }
%class.SkPDFDict = type { %class.SkPDFObject, %"class.std::__1::vector.156" }
%class.SkPDFObject = type { i32 (...)** }
%"class.std::__1::vector.156" = type { %"class.std::__1::__vector_base.157" }
%"class.std::__1::__vector_base.157" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.158" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"struct.std::__1::pair"* }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.std::__1::unique_ptr.153"* }
%"class.std::__1::vector.171" = type { %"class.std::__1::__vector_base.172" }
%"class.std::__1::__vector_base.172" = type { %struct.SkPDFIndirectReference*, %struct.SkPDFIndirectReference*, %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %struct.SkPDFIndirectReference* }
%class.sk_sp.178 = type { %class.SkPDFDevice* }
%class.SkPDFDevice = type { %class.SkClipStackDevice, %class.SkMatrix, %class.SkTHashSet, %class.SkTHashSet, %class.SkTHashSet, %class.SkTHashSet, i32, %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream, i8, %struct.SkPDFGraphicStackState, %class.SkPDFDocument* }
%class.SkClipStackDevice = type { %class.SkBaseDevice, [320 x i64], %class.SkClipStack }
%class.SkClipStack = type <{ %class.SkDeque, i32, %struct.SkRect, [4 x i8] }>
%class.SkTHashSet = type { %class.SkTHashTable.179 }
%class.SkTHashTable.179 = type { i32, i32, %class.SkAutoTArray.180 }
%class.SkAutoTArray.180 = type { %"class.std::__1::unique_ptr.181" }
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* }
%"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot" = type opaque
%class.SkDynamicMemoryWStream = type { %class.SkWStream, %"struct.SkDynamicMemoryWStream::Block"*, %"struct.SkDynamicMemoryWStream::Block"*, i64 }
%"struct.SkDynamicMemoryWStream::Block" = type opaque
%struct.SkPDFGraphicStackState = type { [3 x %"struct.SkPDFGraphicStackState::Entry"], i32, %class.SkDynamicMemoryWStream* }
%"struct.SkPDFGraphicStackState::Entry" = type { %class.SkMatrix, i32, %struct.SkRGBA4f, float, i32, i32 }
%struct.SkUUID = type { [16 x i8] }
%struct.SkPDFIndirectReference = type { i32 }
%"struct.SkPDF::Metadata" = type <{ %class.SkString, %class.SkString, %class.SkString, %class.SkString, %class.SkString, %class.SkString, %"struct.SkTime::DateTime", %"struct.SkTime::DateTime", float, i8, [3 x i8], i32, %"struct.SkPDF::StructureElementNode"*, %class.SkExecutor*, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.187 }
%class.sk_sp.187 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.SkTime::DateTime" = type { i16, i16, i8, i8, i8, i8, i8, i8 }
%"struct.SkPDF::StructureElementNode" = type <{ %class.SkString, %"class.std::__1::vector.188", i32, [4 x i8], %"class.std::__1::vector.94", %"class.SkPDF::AttributeList", %class.SkString, %class.SkString, i32, [4 x i8] }>
%"class.std::__1::vector.188" = type { %"class.std::__1::__vector_base.189" }
%"class.std::__1::__vector_base.189" = type { %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"*, %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::unique_ptr.190" = type opaque
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.std::__1::unique_ptr.190"* }
%"class.SkPDF::AttributeList" = type { %"class.std::__1::unique_ptr.196" }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %class.SkPDFArray* }
%class.SkPDFArray = type { %class.SkPDFObject, %"class.std::__1::vector.199" }
%"class.std::__1::vector.199" = type { %"class.std::__1::__vector_base.200" }
%"class.std::__1::__vector_base.200" = type { %class.SkPDFUnion*, %class.SkPDFUnion*, %"class.std::__1::__compressed_pair.201" }
%class.SkPDFUnion = type opaque
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %class.SkPDFUnion* }
%class.SkExecutor = type opaque
%class.SkPDFTagTree = type { %class.SkArenaAlloc, %class.SkTHashMap.209, %struct.SkPDFTagNode*, %class.SkTArray, %"class.std::__1::vector.219", %"class.std::__1::vector.94" }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%class.SkTHashMap.209 = type { %class.SkTHashTable.210 }
%class.SkTHashTable.210 = type { i32, i32, %class.SkAutoTArray.211 }
%class.SkAutoTArray.211 = type { %"class.std::__1::unique_ptr.212" }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.SkTHashTable<SkTHashMap<int, SkPDFTagNode *, SkGoodHash>::Pair, int, SkTHashMap<int, SkPDFTagNode *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkPDFTagNode *, SkGoodHash>::Pair, int, SkTHashMap<int, SkPDFTagNode *, SkGoodHash>::Pair>::Slot" = type opaque
%struct.SkPDFTagNode = type opaque
%class.SkTArray = type { %class.SkTArray.218*, i64 }
%class.SkTArray.218 = type opaque
%"class.std::__1::vector.219" = type { %"class.std::__1::__vector_base.220" }
%"class.std::__1::__vector_base.220" = type { %"struct.SkPDFTagTree::IDTreeEntry"*, %"struct.SkPDFTagTree::IDTreeEntry"*, %"class.std::__1::__compressed_pair.221" }
%"struct.SkPDFTagTree::IDTreeEntry" = type { i32, %struct.SkPDFIndirectReference }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"struct.SkPDFTagTree::IDTreeEntry"* }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.sk_sp.241 = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.sk_sp.240 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkBitmap = type { %class.sk_sp.226, %class.SkPixmap, %class.sk_sp.227 }
%class.sk_sp.226 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.227 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"struct.SkShader::GradientInfo" = type { i32, i32*, float*, [2 x %struct.SkPoint], [2 x float], i32, i32 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%class.SkStreamAsset = type { %class.SkStreamSeekable }
%class.SkStreamSeekable = type { %class.SkStreamRewindable }
%class.SkStreamRewindable = type { %class.SkStream }
%class.SkStream = type { i32 (...)** }

$_ZNK12SkTHashTableIN10SkTHashMapI19SkPDFImageShaderKey22SkPDFIndirectReference10SkGoodHashE4PairES1_S5_E4findERKS1_ = comdat any

$_ZN12SkTHashTableIN10SkTHashMapI19SkPDFImageShaderKey22SkPDFIndirectReference10SkGoodHashE4PairES1_S5_E6resizeEi = comdat any

$_ZN12SkTHashTableIN10SkTHashMapI19SkPDFImageShaderKey22SkPDFIndirectReference10SkGoodHashE4PairES1_S5_E12uncheckedSetEOS5_ = comdat any

@__const._Z15SkPDFMakeShaderP13SkPDFDocumentP8SkShaderRK8SkMatrixRK7SkIRect8SkRGBA4fIL11SkAlphaType3EE.key = private unnamed_addr constant %struct.SkPDFImageShaderKey { %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %struct.SkBitmapKey { %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, i32 -1431655766 }, [2 x i32] [i32 -1431655766, i32 -1431655766], %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, align 4
@__const._ZL17make_image_shaderP13SkPDFDocument8SkMatrix10SkTileModeS2_6SkRectPK7SkImage8SkRGBA4fIL11SkAlphaType3EE.canvas = private unnamed_addr constant { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.101, [384 x i64], %class.sk_sp.102, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.110", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.116" } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkDeque { i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), i64 -6148914691236517206, i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 }, %"class.SkCanvas::MCRec"* inttoptr (i64 -6148914691236517206 to %"class.SkCanvas::MCRec"*), %class.sk_sp.101 { %class.SkMarkerStack* inttoptr (i64 -6148914691236517206 to %class.SkMarkerStack*) }, [384 x i64] [i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206], %class.sk_sp.102 { %class.SkBaseDevice* inttoptr (i64 -6148914691236517206 to %class.SkBaseDevice*) }, %class.SkSurfaceProps { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr.110" { %"class.std::__1::__compressed_pair.111" { %"struct.std::__1::__compressed_pair_elem.112" { %class.SkRasterHandleAllocator* inttoptr (i64 -6148914691236517206 to %class.SkRasterHandleAllocator*) } } }, %class.SkSurface_Base* inttoptr (i64 -6148914691236517206 to %class.SkSurface_Base*), %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.std::__1::unique_ptr.116" { %"class.std::__1::__compressed_pair.117" { %"struct.std::__1::__compressed_pair_elem.118" { %class.SkGlyphRunBuilder* inttoptr (i64 -6148914691236517206 to %class.SkGlyphRunBuilder*) } } } }, align 8
@__const._ZL20make_fallback_shaderP13SkPDFDocumentP8SkShaderRK8SkMatrixRK7SkIRect8SkRGBA4fIL11SkAlphaType3EE.p = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.235 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.236 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.237 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.238 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.239 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZN6SkOpts7hash_fnE = external local_unnamed_addr global i32 (i8*, i64, i32)*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_Z15SkPDFMakeShaderP13SkPDFDocumentP8SkShaderRK8SkMatrixRK7SkIRect8SkRGBA4fIL11SkAlphaType3EE(%class.SkPDFDocument*, %class.SkShader*, %class.SkMatrix* dereferenceable(40), %struct.SkIRect* dereferenceable(16), <2 x float>, <2 x float>) local_unnamed_addr #0 {
  %7 = alloca %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair", align 8
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = alloca %class.SkMatrix, align 4
  %11 = alloca { <2 x float>, <2 x float> }, align 8
  %12 = alloca %class.sk_sp.241, align 8
  %13 = alloca %class.SkPaint, align 8
  %14 = alloca %class.sk_sp.236, align 8
  %15 = alloca %class.sk_sp.240, align 8
  %16 = alloca %class.SkMatrix, align 16
  %17 = alloca %class.SkBitmap, align 8
  %18 = alloca %class.SkMatrix, align 16
  %19 = alloca [2 x i32], align 4
  %20 = alloca %class.SkMatrix, align 16
  %21 = alloca %struct.SkPDFImageShaderKey, align 4
  %22 = bitcast %class.SkShader* %1 to i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)***
  %23 = load i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)**, i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)*** %22, align 8
  %24 = getelementptr inbounds i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)*, i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)** %23, i64 8
  %25 = load i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)*, i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)** %24, align 8
  %26 = tail call i32 %25(%class.SkShader* %1, %"struct.SkShader::GradientInfo"* null) #10
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %6
  %29 = tail call i32 @_ZN19SkPDFGradientShader4MakeEP13SkPDFDocumentP8SkShaderRK8SkMatrixRK7SkIRect(%class.SkPDFDocument* %0, %class.SkShader* %1, %class.SkMatrix* dereferenceable(40) %2, %struct.SkIRect* dereferenceable(16) %3) #10
  br label %324

30:                                               ; preds = %6
  %31 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = sext i32 %35 to i64
  %37 = sub nsw i64 %33, %36
  %38 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %39 = load i32, i32* %38, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = sext i32 %42 to i64
  %44 = sub nsw i64 %40, %43
  %45 = icmp slt i64 %37, 1
  %46 = icmp slt i64 %44, 1
  %47 = or i1 %45, %46
  br i1 %47, label %324, label %48

48:                                               ; preds = %30
  %49 = or i64 %44, %37
  %50 = add nsw i64 %49, 2147483648
  %51 = icmp ugt i64 %50, 4294967295
  br i1 %51, label %324, label %52

52:                                               ; preds = %48
  %53 = bitcast %class.SkBitmap* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %53) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %17) #10
  %54 = call %class.SkImage* @_ZNK8SkShader8isAImageEP8SkMatrixP10SkTileMode(%class.SkShader* %1, %class.SkMatrix* null, i32* null) #10
  %55 = icmp eq %class.SkImage* %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %52
  %57 = call zeroext i1 @_ZNK7SkImage11isAlphaOnlyEv(%class.SkImage* nonnull %54) #10
  br i1 %57, label %60, label %58

58:                                               ; preds = %56, %52
  %59 = insertelement <2 x float> %5, float 0.000000e+00, i32 0
  br label %60

60:                                               ; preds = %56, %58
  %61 = phi <2 x float> [ zeroinitializer, %58 ], [ %4, %56 ]
  %62 = phi <2 x float> [ %59, %58 ], [ %5, %56 ]
  %63 = bitcast %class.SkMatrix* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %63) #10
  %64 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %18, i64 0, i32 1
  %65 = bitcast %class.SkMatrix* %18 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %65, align 16
  %66 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %18, i64 0, i32 0, i64 4
  %67 = bitcast float* %66 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %67, align 16
  %68 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %18, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %68, align 16
  store i32 16, i32* %64, align 4
  %69 = bitcast [2 x i32]* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #10
  %70 = getelementptr inbounds [2 x i32], [2 x i32]* %19, i64 0, i64 0
  store i32 -1431655766, i32* %70, align 4
  %71 = getelementptr inbounds [2 x i32], [2 x i32]* %19, i64 0, i64 1
  store i32 -1431655766, i32* %71, align 4
  %72 = call %class.SkImage* @_ZNK8SkShader8isAImageEP8SkMatrixP10SkTileMode(%class.SkShader* %1, %class.SkMatrix* nonnull %18, i32* nonnull %70) #10
  %73 = icmp eq %class.SkImage* %72, null
  br i1 %73, label %138, label %74

74:                                               ; preds = %60
  %75 = bitcast %class.SkMatrix* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %75) #10
  %76 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %20, i64 0, i32 1
  %77 = bitcast %class.SkMatrix* %20 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %77, align 16, !alias.scope !2
  %78 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %20, i64 0, i32 0, i64 4
  %79 = bitcast float* %78 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %79, align 16, !alias.scope !2
  %80 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %20, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %80, align 16, !alias.scope !2
  store i32 16, i32* %76, align 4, !alias.scope !2
  %81 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix* nonnull %20, %class.SkMatrix* dereferenceable(40) %2, %class.SkMatrix* nonnull dereferenceable(40) %18) #10
  %82 = bitcast %struct.SkPDFImageShaderKey* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %82) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %82, i8* align 4 bitcast (%struct.SkPDFImageShaderKey* @__const._Z15SkPDFMakeShaderP13SkPDFDocumentP8SkShaderRK8SkMatrixRK7SkIRect8SkRGBA4fIL11SkAlphaType3EE.key to i8*), i64 100, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %82, i8* nonnull align 16 %75, i64 40, i1 false)
  %83 = getelementptr inbounds %struct.SkPDFImageShaderKey, %struct.SkPDFImageShaderKey* %21, i64 0, i32 1
  %84 = bitcast %struct.SkIRect* %83 to i8*
  %85 = bitcast %struct.SkIRect* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %84, i8* align 4 %85, i64 16, i1 false)
  %86 = getelementptr inbounds %struct.SkPDFImageShaderKey, %struct.SkPDFImageShaderKey* %21, i64 0, i32 2
  call void @_Z20SkBitmapKeyFromImagePK7SkImage(%struct.SkBitmapKey* sret %86, %class.SkImage* nonnull %72) #10
  %87 = getelementptr inbounds %struct.SkPDFImageShaderKey, %struct.SkPDFImageShaderKey* %21, i64 0, i32 3, i64 0
  %88 = load i32, i32* %70, align 4
  store i32 %88, i32* %87, align 4
  %89 = getelementptr inbounds %struct.SkPDFImageShaderKey, %struct.SkPDFImageShaderKey* %21, i64 0, i32 3, i64 1
  %90 = load i32, i32* %71, align 4
  store i32 %90, i32* %89, align 4
  %91 = getelementptr inbounds %struct.SkPDFImageShaderKey, %struct.SkPDFImageShaderKey* %21, i64 0, i32 4
  %92 = bitcast %struct.SkRGBA4f* %91 to <2 x float>*
  store <2 x float> %61, <2 x float>* %92, align 4
  %93 = getelementptr inbounds %struct.SkPDFImageShaderKey, %struct.SkPDFImageShaderKey* %21, i64 0, i32 4, i32 2
  %94 = bitcast float* %93 to <2 x float>*
  store <2 x float> %62, <2 x float>* %94, align 4
  %95 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %0, i64 0, i32 1
  %96 = getelementptr inbounds %class.SkTHashMap, %class.SkTHashMap* %95, i64 0, i32 0
  %97 = call %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair"* @_ZNK12SkTHashTableIN10SkTHashMapI19SkPDFImageShaderKey22SkPDFIndirectReference10SkGoodHashE4PairES1_S5_E4findERKS1_(%class.SkTHashTable* %96, %struct.SkPDFImageShaderKey* nonnull dereferenceable(100) %21) #10
  %98 = icmp eq %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair"* %97, null
  %99 = getelementptr inbounds %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair", %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair"* %97, i64 0, i32 0, i32 1
  %100 = icmp eq %struct.SkPDFIndirectReference* %99, null
  %101 = or i1 %98, %100
  br i1 %101, label %105, label %102

102:                                              ; preds = %74
  %103 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %99, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  br label %136

105:                                              ; preds = %74
  %106 = load i32, i32* %70, align 4
  %107 = load i32, i32* %71, align 4
  %108 = load i32, i32* %34, align 4
  %109 = sitofp i32 %108 to float
  %110 = insertelement <2 x float> undef, float %109, i32 0
  %111 = load i32, i32* %41, align 4
  %112 = sitofp i32 %111 to float
  %113 = insertelement <2 x float> %110, float %112, i32 1
  %114 = load i32, i32* %31, align 4
  %115 = sitofp i32 %114 to float
  %116 = insertelement <2 x float> undef, float %115, i32 0
  %117 = load i32, i32* %38, align 4
  %118 = sitofp i32 %117 to float
  %119 = insertelement <2 x float> %116, float %118, i32 1
  %120 = call fastcc i32 @_ZL17make_image_shaderP13SkPDFDocument8SkMatrix10SkTileModeS2_6SkRectPK7SkImage8SkRGBA4fIL11SkAlphaType3EE(%class.SkPDFDocument* %0, %class.SkMatrix* nonnull byval(%class.SkMatrix) align 8 %20, i32 %106, i32 %107, <2 x float> %113, <2 x float> %119, %class.SkImage* nonnull %72, <2 x float> %61, <2 x float> %62)
  %121 = bitcast %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %121) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %121, i8* nonnull align 4 %82, i64 100, i1 false)
  %122 = getelementptr inbounds %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair", %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair"* %7, i64 0, i32 0, i32 1, i32 0
  store i32 %120, i32* %122, align 4
  %123 = getelementptr inbounds %class.SkTHashMap, %class.SkTHashMap* %95, i64 0, i32 0, i32 0
  %124 = load i32, i32* %123, align 8
  %125 = shl nsw i32 %124, 2
  %126 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %0, i64 0, i32 1, i32 0, i32 1
  %127 = load i32, i32* %126, align 4
  %128 = mul nsw i32 %127, 3
  %129 = icmp slt i32 %125, %128
  br i1 %129, label %134, label %130

130:                                              ; preds = %105
  %131 = icmp sgt i32 %127, 0
  %132 = shl nsw i32 %127, 1
  %133 = select i1 %131, i32 %132, i32 4
  call void @_ZN12SkTHashTableIN10SkTHashMapI19SkPDFImageShaderKey22SkPDFIndirectReference10SkGoodHashE4PairES1_S5_E6resizeEi(%class.SkTHashTable* %96, i32 %133) #10
  br label %134

134:                                              ; preds = %105, %130
  %135 = call %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair"* @_ZN12SkTHashTableIN10SkTHashMapI19SkPDFImageShaderKey22SkPDFIndirectReference10SkGoodHashE4PairES1_S5_E12uncheckedSetEOS5_(%class.SkTHashTable* %96, %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair"* nonnull dereferenceable(104) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %121) #10
  br label %136

136:                                              ; preds = %134, %102
  %137 = phi i32 [ %120, %134 ], [ %104, %102 ]
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %82) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %75) #10
  br label %322

138:                                              ; preds = %60
  %139 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %139)
  %140 = bitcast %class.sk_sp.236* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140)
  %141 = bitcast %class.SkMatrix* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %141)
  %142 = bitcast { <2 x float>, <2 x float> }* %9 to %struct.SkRGBA4f*
  %143 = bitcast { <2 x float>, <2 x float> }* %11 to %struct.SkRect*
  %144 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  store <2 x float> %61, <2 x float>* %144, align 8
  %145 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  store <2 x float> %62, <2 x float>* %145, align 8
  %146 = bitcast %class.SkMatrix* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %146) #10
  %147 = getelementptr inbounds %class.SkShader, %class.SkShader* %1, i64 0, i32 1, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %146, i8* align 4 %147, i64 40, i1 false) #10
  %148 = bitcast { <2 x float>, <2 x float> }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %148) #10
  %149 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 0, i64 0
  %150 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %143, i64 0, i32 1
  %151 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 1, i64 0
  %152 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %143, i64 0, i32 3
  %153 = load i32, i32* %34, align 4
  %154 = sitofp i32 %153 to float
  %155 = insertelement <2 x float> undef, float %154, i32 0
  %156 = load i32, i32* %41, align 4
  %157 = sitofp i32 %156 to float
  %158 = insertelement <2 x float> %155, float %157, i32 1
  %159 = load i32, i32* %31, align 4
  %160 = sitofp i32 %159 to float
  %161 = insertelement <2 x float> undef, float %160, i32 0
  %162 = load i32, i32* %38, align 4
  %163 = sitofp i32 %162 to float
  %164 = insertelement <2 x float> %161, float %163, i32 1
  %165 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 0
  store <2 x float> %158, <2 x float>* %165, align 8
  %166 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 1
  store <2 x float> %164, <2 x float>* %166, align 8
  %167 = call zeroext i1 @_ZN10SkPDFUtils20InverseTransformBBoxERK8SkMatrixP6SkRect(%class.SkMatrix* dereferenceable(40) %2, %struct.SkRect* nonnull %143) #10
  br i1 %167, label %168, label %320

168:                                              ; preds = %138
  %169 = load i32, i32* %31, align 4
  %170 = load i32, i32* %34, align 4
  %171 = sub i32 %169, %170
  %172 = sitofp i32 %171 to float
  %173 = load i32, i32* %38, align 4
  %174 = load i32, i32* %41, align 4
  %175 = sub i32 %173, %174
  %176 = sitofp i32 %175 to float
  %177 = fmul float %172, %176
  %178 = fcmp ogt float %177, 0x4130000000000000
  br i1 %178, label %179, label %190

179:                                              ; preds = %168
  %180 = fdiv float 0x4130000000000000, %177
  %181 = call float @sqrtf(float %180) #10
  %182 = load i32, i32* %31, align 4
  %183 = load i32, i32* %34, align 4
  %184 = load i32, i32* %38, align 4
  %185 = load i32, i32* %41, align 4
  %186 = sub i32 %182, %183
  %187 = sitofp i32 %186 to float
  %188 = sub i32 %184, %185
  %189 = sitofp i32 %188 to float
  br label %190

190:                                              ; preds = %179, %168
  %191 = phi float [ %189, %179 ], [ %176, %168 ]
  %192 = phi float [ %187, %179 ], [ %172, %168 ]
  %193 = phi float [ %181, %179 ], [ 1.000000e+00, %168 ]
  %194 = fmul float %192, %193
  %195 = call float @llvm.ceil.f32(float %194) #10
  %196 = fcmp olt float %195, 0x41DFFFFFE0000000
  %197 = select i1 %196, float %195, float 0x41DFFFFFE0000000
  %198 = fcmp ogt float %197, 0xC1DFFFFFE0000000
  %199 = select i1 %198, float %197, float 0xC1DFFFFFE0000000
  %200 = fptosi float %199 to i32
  %201 = icmp slt i32 %200, 1048576
  %202 = select i1 %201, i32 %200, i32 1048576
  %203 = icmp sgt i32 %202, 1
  %204 = select i1 %203, i32 %202, i32 1
  %205 = fmul float %191, %193
  %206 = call float @llvm.ceil.f32(float %205) #10
  %207 = fcmp olt float %206, 0x41DFFFFFE0000000
  %208 = select i1 %207, float %206, float 0x41DFFFFFE0000000
  %209 = fcmp ogt float %208, 0xC1DFFFFFE0000000
  %210 = select i1 %209, float %208, float 0xC1DFFFFFE0000000
  %211 = fptosi float %210 to i32
  %212 = icmp slt i32 %211, 1048576
  %213 = select i1 %212, i32 %211, i32 1048576
  %214 = icmp sgt i32 %213, 1
  %215 = select i1 %214, i32 %213, i32 1
  %216 = sitofp i32 %204 to float
  %217 = load float, float* %151, align 8
  %218 = load float, float* %149, align 8
  %219 = fsub float %217, %218
  %220 = fdiv float %216, %219
  %221 = sitofp i32 %215 to float
  %222 = load float, float* %152, align 4
  %223 = load float, float* %150, align 4
  %224 = fsub float %222, %223
  %225 = fdiv float %221, %224
  %226 = bitcast %class.sk_sp.241* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %226) #10
  %227 = getelementptr inbounds %class.sk_sp.241, %class.sk_sp.241* %12, i64 0, i32 0
  store %class.SkSurface* inttoptr (i64 -6148914691236517206 to %class.SkSurface*), %class.SkSurface** %227, align 8
  call void @_ZN9SkSurface19MakeRasterN32PremulEiiPK14SkSurfaceProps(%class.sk_sp.241* nonnull sret %12, i32 %204, i32 %215, %class.SkSurfaceProps* null) #10
  %228 = load %class.SkSurface*, %class.SkSurface** %227, align 8
  %229 = call %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface* %228) #10
  %230 = bitcast { <2 x float>, <2 x float> }* %8 to %struct.SkRGBA4f*
  %231 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %231) #10
  %232 = call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 0) #10
  %233 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  %234 = extractvalue { <2 x float>, <2 x float> } %232, 0
  store <2 x float> %234, <2 x float>* %233, align 8
  %235 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  %236 = extractvalue { <2 x float>, <2 x float> } %232, 1
  store <2 x float> %236, <2 x float>* %235, align 8
  call void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas* %229, %struct.SkRGBA4f* nonnull dereferenceable(16) %230, i32 1) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %231) #10
  %237 = bitcast %class.SkPaint* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %237) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %237, i8* align 8 bitcast (%class.SkPaint* @__const._ZL20make_fallback_shaderP13SkPDFDocumentP8SkShaderRK8SkMatrixRK7SkIRect8SkRGBA4fIL11SkAlphaType3EE.p to i8*), i64 72, i1 false) #10
  call void @_ZN7SkPaintC1ERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpace(%class.SkPaint* nonnull %13, %struct.SkRGBA4f* nonnull dereferenceable(16) %142, %class.SkColorSpace* null) #10
  %238 = icmp eq %class.SkShader* %1, null
  br i1 %238, label %242, label %239

239:                                              ; preds = %190
  %240 = getelementptr inbounds %class.SkShader, %class.SkShader* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = atomicrmw add i32* %240, i32 1 monotonic, !noalias !5
  br label %242

242:                                              ; preds = %239, %190
  %243 = getelementptr inbounds %class.sk_sp.236, %class.sk_sp.236* %14, i64 0, i32 0
  store %class.SkShader* %1, %class.SkShader** %243, align 8, !alias.scope !5
  call void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* nonnull %13, %class.sk_sp.236* nonnull %14) #10
  %244 = load %class.SkShader*, %class.SkShader** %243, align 8
  %245 = icmp eq %class.SkShader* %244, null
  br i1 %245, label %256, label %246

246:                                              ; preds = %242
  %247 = getelementptr inbounds %class.SkShader, %class.SkShader* %244, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = atomicrmw add i32* %247, i32 -1 acq_rel
  %249 = icmp eq i32 %248, 1
  br i1 %249, label %250, label %256

250:                                              ; preds = %246
  %251 = bitcast %class.SkShader* %244 to %class.SkRefCntBase*
  %252 = bitcast %class.SkShader* %244 to void (%class.SkRefCntBase*)***
  %253 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %252, align 8
  %254 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %253, i64 2
  %255 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %254, align 8
  call void %255(%class.SkRefCntBase* nonnull %251) #10
  br label %256

256:                                              ; preds = %250, %246, %242
  call void @_ZN8SkCanvas5scaleEff(%class.SkCanvas* %229, float %220, float %225) #10
  %257 = load float, float* %149, align 8
  %258 = fsub float -0.000000e+00, %257
  %259 = load float, float* %150, align 4
  %260 = fsub float -0.000000e+00, %259
  call void @_ZN8SkCanvas9translateEff(%class.SkCanvas* %229, float %258, float %260) #10
  call void @_ZN8SkCanvas9drawPaintERK7SkPaint(%class.SkCanvas* %229, %class.SkPaint* nonnull dereferenceable(72) %13) #10
  %261 = load float, float* %149, align 8
  %262 = load float, float* %150, align 4
  %263 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %10, float %261, float %262) #10
  %264 = fdiv float 1.000000e+00, %220
  %265 = fdiv float 1.000000e+00, %225
  %266 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8preScaleEff(%class.SkMatrix* nonnull %10, float %264, float %265) #10
  %267 = bitcast %class.sk_sp.240* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %267) #10
  %268 = getelementptr inbounds %class.sk_sp.240, %class.sk_sp.240* %15, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %268, align 8
  %269 = load %class.SkSurface*, %class.SkSurface** %227, align 8
  call void @_ZN9SkSurface17makeImageSnapshotEv(%class.sk_sp.240* nonnull sret %15, %class.SkSurface* %269) #10
  %270 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %16, i64 0, i32 1
  %271 = bitcast %class.SkMatrix* %16 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %271, align 16, !alias.scope !8
  %272 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %16, i64 0, i32 0, i64 4
  %273 = bitcast float* %272 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %273, align 16, !alias.scope !8
  %274 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %16, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %274, align 16, !alias.scope !8
  store i32 16, i32* %270, align 4, !alias.scope !8
  %275 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix* nonnull %16, %class.SkMatrix* dereferenceable(40) %2, %class.SkMatrix* nonnull dereferenceable(40) %10) #10
  %276 = load i32, i32* %34, align 4
  %277 = sitofp i32 %276 to float
  %278 = insertelement <2 x float> undef, float %277, i32 0
  %279 = load i32, i32* %41, align 4
  %280 = sitofp i32 %279 to float
  %281 = insertelement <2 x float> %278, float %280, i32 1
  %282 = load i32, i32* %31, align 4
  %283 = sitofp i32 %282 to float
  %284 = insertelement <2 x float> undef, float %283, i32 0
  %285 = load i32, i32* %38, align 4
  %286 = sitofp i32 %285 to float
  %287 = insertelement <2 x float> %284, float %286, i32 1
  %288 = load %class.SkImage*, %class.SkImage** %268, align 8
  %289 = load <2 x float>, <2 x float>* %144, align 8
  %290 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1, i64 0
  %291 = bitcast float* %290 to <2 x float>*
  %292 = load <2 x float>, <2 x float>* %291, align 8
  %293 = call fastcc i32 @_ZL17make_image_shaderP13SkPDFDocument8SkMatrix10SkTileModeS2_6SkRectPK7SkImage8SkRGBA4fIL11SkAlphaType3EE(%class.SkPDFDocument* %0, %class.SkMatrix* nonnull byval(%class.SkMatrix) align 8 %16, i32 0, i32 0, <2 x float> %281, <2 x float> %287, %class.SkImage* %288, <2 x float> %289, <2 x float> %292) #10
  %294 = load %class.SkImage*, %class.SkImage** %268, align 8
  %295 = icmp eq %class.SkImage* %294, null
  br i1 %295, label %306, label %296

296:                                              ; preds = %256
  %297 = getelementptr inbounds %class.SkImage, %class.SkImage* %294, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %298 = atomicrmw add i32* %297, i32 -1 acq_rel
  %299 = icmp eq i32 %298, 1
  br i1 %299, label %300, label %306

300:                                              ; preds = %296
  %301 = bitcast %class.SkImage* %294 to %class.SkRefCntBase*
  %302 = bitcast %class.SkImage* %294 to void (%class.SkRefCntBase*)***
  %303 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %302, align 8
  %304 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %303, i64 2
  %305 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %304, align 8
  call void %305(%class.SkRefCntBase* nonnull %301) #10
  br label %306

306:                                              ; preds = %300, %296, %256
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %267) #10
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %237) #10
  %307 = load %class.SkSurface*, %class.SkSurface** %227, align 8
  %308 = icmp eq %class.SkSurface* %307, null
  br i1 %308, label %319, label %309

309:                                              ; preds = %306
  %310 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %307, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %311 = atomicrmw add i32* %310, i32 -1 acq_rel
  %312 = icmp eq i32 %311, 1
  br i1 %312, label %313, label %319

313:                                              ; preds = %309
  %314 = bitcast %class.SkSurface* %307 to %class.SkRefCntBase*
  %315 = bitcast %class.SkSurface* %307 to void (%class.SkRefCntBase*)***
  %316 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %315, align 8
  %317 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %316, i64 2
  %318 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %317, align 8
  call void %318(%class.SkRefCntBase* nonnull %314) #10
  br label %319

319:                                              ; preds = %313, %309, %306
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %226) #10
  br label %320

320:                                              ; preds = %138, %319
  %321 = phi i32 [ %293, %319 ], [ -1, %138 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %148) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %146) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %139)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %141)
  br label %322

322:                                              ; preds = %136, %320
  %323 = phi i32 [ %321, %320 ], [ %137, %136 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %63) #10
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %53) #10
  br label %324

324:                                              ; preds = %30, %48, %322, %28
  %325 = phi i32 [ %323, %322 ], [ %29, %28 ], [ -1, %48 ], [ -1, %30 ]
  ret i32 %325
}

declare i32 @_ZN19SkPDFGradientShader4MakeEP13SkPDFDocumentP8SkShaderRK8SkMatrixRK7SkIRect(%class.SkPDFDocument*, %class.SkShader*, %class.SkMatrix* dereferenceable(40), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %class.SkImage* @_ZNK8SkShader8isAImageEP8SkMatrixP10SkTileMode(%class.SkShader*, %class.SkMatrix*, i32*) local_unnamed_addr #1

declare void @_Z20SkBitmapKeyFromImagePK7SkImage(%struct.SkBitmapKey* sret, %class.SkImage*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZL17make_image_shaderP13SkPDFDocument8SkMatrix10SkTileModeS2_6SkRectPK7SkImage8SkRGBA4fIL11SkAlphaType3EE(%class.SkPDFDocument*, %class.SkMatrix* byval(%class.SkMatrix) align 8, i32, i32, <2 x float>, <2 x float>, %class.SkImage*, <2 x float>, <2 x float>) unnamed_addr #0 {
  %10 = alloca %struct.SkRect, align 4
  %11 = alloca %class.SkPaint, align 8
  %12 = alloca %struct.SkRGBA4f, align 4
  %13 = alloca %struct.SkRect, align 4
  %14 = alloca %class.SkPaint, align 8
  %15 = alloca %struct.SkRGBA4f, align 4
  %16 = alloca { <2 x float>, <2 x float> }, align 8
  %17 = alloca %class.SkPaint, align 8
  %18 = alloca %struct.SkSamplingOptions, align 4
  %19 = alloca { <2 x float>, <2 x float> }, align 8
  %20 = alloca %class.SkPaint, align 8
  %21 = alloca %struct.SkSamplingOptions, align 4
  %22 = alloca { <2 x float>, <2 x float> }, align 8
  %23 = alloca %class.SkPaint, align 8
  %24 = alloca %struct.SkSamplingOptions, align 4
  %25 = alloca { <2 x float>, <2 x float> }, align 8
  %26 = alloca %class.SkPaint, align 8
  %27 = alloca %struct.SkSamplingOptions, align 4
  %28 = alloca %struct.SkRect, align 4
  %29 = alloca %class.SkPaint, align 8
  %30 = alloca %struct.SkRGBA4f, align 4
  %31 = alloca %struct.SkRect, align 4
  %32 = alloca %class.SkPaint, align 8
  %33 = alloca %struct.SkRGBA4f, align 4
  %34 = alloca %struct.SkRect, align 8
  %35 = alloca { <2 x float>, <2 x float> }, align 8
  %36 = bitcast { <2 x float>, <2 x float> }* %35 to %struct.SkRect*
  %37 = alloca %class.SkCanvas, align 8
  %38 = alloca %class.sk_sp.102, align 8
  %39 = alloca <4 x float>, align 16
  %40 = bitcast <4 x float>* %39 to { <2 x float>, <2 x float> }*
  %41 = bitcast <4 x float>* %39 to %struct.SkRect*
  %42 = alloca %class.SkMatrix, align 4
  %43 = alloca %class.SkMatrix, align 16
  %44 = alloca %class.SkMatrix, align 4
  %45 = alloca %class.SkBitmap, align 8
  %46 = alloca %class.SkBitmap, align 8
  %47 = alloca { i64, i64 }, align 8
  %48 = bitcast { i64, i64 }* %47 to %struct.SkIRect*
  %49 = alloca %class.SkBitmap, align 8
  %50 = alloca %class.SkMatrix, align 4
  %51 = alloca %class.SkBitmap, align 8
  %52 = alloca %class.SkMatrix, align 4
  %53 = alloca { i64, i64 }, align 8
  %54 = bitcast { i64, i64 }* %53 to %struct.SkIRect*
  %55 = alloca %class.SkBitmap, align 8
  %56 = alloca %class.SkMatrix, align 16
  %57 = alloca %class.SkBitmap, align 8
  %58 = alloca %class.SkMatrix, align 16
  %59 = bitcast %struct.SkRect* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #10
  %60 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %34, i64 0, i32 0
  %61 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %34, i64 0, i32 1
  %62 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %34, i64 0, i32 2
  %63 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %34, i64 0, i32 3
  %64 = bitcast %struct.SkRect* %34 to <2 x float>*
  store <2 x float> %4, <2 x float>* %64, align 8
  %65 = bitcast float* %62 to <2 x float>*
  store <2 x float> %5, <2 x float>* %65, align 8
  %66 = call zeroext i1 @_ZN10SkPDFUtils20InverseTransformBBoxERK8SkMatrixP6SkRect(%class.SkMatrix* nonnull dereferenceable(40) %1, %struct.SkRect* nonnull %34) #10
  br i1 %66, label %67, label %631

67:                                               ; preds = %9
  %68 = bitcast { <2 x float>, <2 x float> }* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #10
  %69 = getelementptr inbounds %class.SkImage, %class.SkImage* %6, i64 0, i32 2, i32 1, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %class.SkImage, %class.SkImage* %6, i64 0, i32 2, i32 1, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = sitofp i32 %70 to float
  %74 = insertelement <2 x float> undef, float %73, i32 0
  %75 = sitofp i32 %72 to float
  %76 = insertelement <2 x float> %74, float %75, i32 1
  %77 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %35, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %77, align 8
  %78 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %35, i64 0, i32 1
  store <2 x float> %76, <2 x float>* %78, align 8
  %79 = add i32 %2, -1
  %80 = icmp ult i32 %79, 2
  %81 = add i32 %3, -1
  %82 = icmp ult i32 %81, 2
  %83 = or i1 %80, %82
  br i1 %83, label %84, label %85

84:                                               ; preds = %67
  call void @_ZN6SkRect4joinERKS_(%struct.SkRect* nonnull %34, %struct.SkRect* nonnull dereferenceable(16) %36) #10
  br label %85

85:                                               ; preds = %67, %84
  %86 = load float, float* %62, align 8
  %87 = load float, float* %60, align 8
  %88 = fsub float %86, %87
  %89 = call float @llvm.ceil.f32(float %88)
  %90 = fcmp olt float %89, 0x41DFFFFFE0000000
  %91 = select i1 %90, float %89, float 0x41DFFFFFE0000000
  %92 = fcmp ogt float %91, 0xC1DFFFFFE0000000
  %93 = select i1 %92, float %91, float 0xC1DFFFFFE0000000
  %94 = fptosi float %93 to i32
  %95 = load float, float* %63, align 4
  %96 = load float, float* %61, align 4
  %97 = fsub float %95, %96
  %98 = call float @llvm.ceil.f32(float %97)
  %99 = fcmp olt float %98, 0x41DFFFFFE0000000
  %100 = select i1 %99, float %98, float 0x41DFFFFFE0000000
  %101 = fcmp ogt float %100, 0xC1DFFFFFE0000000
  %102 = select i1 %101, float %100, float 0xC1DFFFFFE0000000
  %103 = fptosi float %102 to i32
  %104 = call i8* @_Znwm(i64 3360) #11, !noalias !11
  %105 = bitcast i8* %104 to %class.SkPDFDevice*
  %106 = zext i32 %103 to i64
  %107 = shl nuw i64 %106, 32
  %108 = zext i32 %94 to i64
  %109 = or i64 %107, %108
  %110 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #10, !noalias !11
  call void @_ZN11SkPDFDeviceC1E7SkISizeP13SkPDFDocumentRK8SkMatrix(%class.SkPDFDevice* nonnull %105, i64 %109, %class.SkPDFDocument* %0, %class.SkMatrix* dereferenceable(40) %110) #10, !noalias !11
  %111 = bitcast %class.SkCanvas* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3232, i8* nonnull %111) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %111, i8* align 8 bitcast ({ i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.101, [384 x i64], %class.sk_sp.102, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.110", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.116" }* @__const._ZL17make_image_shaderP13SkPDFDocument8SkMatrix10SkTileModeS2_6SkRectPK7SkImage8SkRGBA4fIL11SkAlphaType3EE.canvas to i8*), i64 3232, i1 false)
  %112 = getelementptr inbounds %class.sk_sp.102, %class.sk_sp.102* %38, i64 0, i32 0
  %113 = getelementptr inbounds i8, i8* %104, i64 8
  %114 = bitcast i8* %113 to i32*
  %115 = atomicrmw add i32* %114, i32 1 monotonic
  %116 = bitcast %class.sk_sp.102* %38 to i8**
  store i8* %104, i8** %116, align 8
  call void @_ZN8SkCanvasC1E5sk_spI12SkBaseDeviceE(%class.SkCanvas* nonnull %37, %class.sk_sp.102* nonnull %38) #10
  %117 = load %class.SkBaseDevice*, %class.SkBaseDevice** %112, align 8
  %118 = icmp eq %class.SkBaseDevice* %117, null
  br i1 %118, label %129, label %119

119:                                              ; preds = %85
  %120 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %117, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = atomicrmw add i32* %120, i32 -1 acq_rel
  %122 = icmp eq i32 %121, 1
  br i1 %122, label %123, label %129

123:                                              ; preds = %119
  %124 = bitcast %class.SkBaseDevice* %117 to %class.SkRefCntBase*
  %125 = bitcast %class.SkBaseDevice* %117 to void (%class.SkRefCntBase*)***
  %126 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %125, align 8
  %127 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %126, i64 2
  %128 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %127, align 8
  call void %128(%class.SkRefCntBase* nonnull %124) #10
  br label %129

129:                                              ; preds = %85, %119, %123
  %130 = bitcast <4 x float>* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %130) #10
  %131 = getelementptr inbounds <4 x float>, <4 x float>* %39, i64 0, i64 0
  %132 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %41, i64 0, i32 1
  %133 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %40, i64 0, i32 1, i64 0
  %134 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %41, i64 0, i32 3
  %135 = load i32, i32* %69, align 4
  %136 = load i32, i32* %71, align 4
  %137 = sitofp i32 %135 to float
  %138 = sitofp i32 %136 to float
  %139 = load float, float* %60, align 8
  %140 = fsub float -0.000000e+00, %139
  %141 = load float, float* %61, align 4
  %142 = fsub float -0.000000e+00, %141
  call void @_ZN8SkCanvas9translateEff(%class.SkCanvas* nonnull %37, float %140, float %142) #10
  %143 = bitcast %struct.SkRect* %34 to <2 x float>*
  %144 = load <2 x float>, <2 x float>* %143, align 8
  %145 = shufflevector <2 x float> %144, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %146 = insertelement <4 x float> <float 0.000000e+00, float 0.000000e+00, float undef, float undef>, float %137, i32 2
  %147 = insertelement <4 x float> %146, float %138, i32 3
  %148 = fsub <4 x float> %147, %145
  store <4 x float> %148, <4 x float>* %39, align 16
  %149 = extractelement <2 x float> %144, i32 0
  %150 = extractelement <2 x float> %144, i32 1
  %151 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12preTranslateEff(%class.SkMatrix* nonnull %1, float %149, float %150) #10
  %152 = bitcast { <2 x float>, <2 x float> }* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %152)
  %153 = bitcast { <2 x float>, <2 x float> }* %25 to %struct.SkRGBA4f*
  %154 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %25, i64 0, i32 0
  store <2 x float> %7, <2 x float>* %154, align 8
  %155 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %25, i64 0, i32 1
  store <2 x float> %8, <2 x float>* %155, align 8
  %156 = bitcast %class.SkPaint* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %156) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %156, i8* align 8 bitcast (%class.SkPaint* @__const._ZL20make_fallback_shaderP13SkPDFDocumentP8SkShaderRK8SkMatrixRK7SkIRect8SkRGBA4fIL11SkAlphaType3EE.p to i8*), i64 72, i1 false) #10
  call void @_ZN7SkPaintC1ERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpace(%class.SkPaint* nonnull %26, %struct.SkRGBA4f* nonnull dereferenceable(16) %153, %class.SkColorSpace* null) #10
  %157 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %27, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %157) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %157, i8 0, i64 20, i1 false) #10
  call void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas* nonnull %37, %class.SkImage* %6, float 0.000000e+00, float 0.000000e+00, %struct.SkSamplingOptions* nonnull dereferenceable(20) %27, %class.SkPaint* nonnull %26) #10
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %157) #10
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %26) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %156) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %152)
  %158 = icmp eq i32 %2, 2
  br i1 %158, label %159, label %183

159:                                              ; preds = %129
  %160 = bitcast %class.SkMatrix* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %160) #10
  %161 = fmul float %137, 2.000000e+00
  %162 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %42, i64 0, i32 1
  %163 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %42, i64 0, i32 0, i64 0
  %164 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %42, i64 0, i32 0, i64 1
  %165 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %42, i64 0, i32 0, i64 2
  %166 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %42, i64 0, i32 0, i64 3
  %167 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %42, i64 0, i32 0, i64 7
  %168 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %42, i64 0, i32 0, i64 8
  store float -1.000000e+00, float* %163, align 4, !alias.scope !14
  store float 0.000000e+00, float* %164, align 4, !alias.scope !14
  store float %161, float* %165, align 4, !alias.scope !14
  %169 = bitcast float* %166 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %169, align 4, !alias.scope !14
  store float 0.000000e+00, float* %167, align 4, !alias.scope !14
  store float 1.000000e+00, float* %168, align 4, !alias.scope !14
  %170 = fcmp une float %161, 0.000000e+00
  %171 = zext i1 %170 to i32
  %172 = or i32 %171, 18
  store i32 %172, i32* %162, align 4, !alias.scope !14
  %173 = call i32 @_ZNK8SkCanvas12getSaveCountEv(%class.SkCanvas* nonnull %37) #10
  %174 = call i32 @_ZN8SkCanvas4saveEv(%class.SkCanvas* nonnull %37) #10
  call void @_ZN8SkCanvas6concatERK8SkMatrix(%class.SkCanvas* nonnull %37, %class.SkMatrix* nonnull dereferenceable(40) %42) #10
  %175 = bitcast { <2 x float>, <2 x float> }* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %175) #10
  %176 = bitcast { <2 x float>, <2 x float> }* %22 to %struct.SkRGBA4f*
  %177 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %22, i64 0, i32 0
  store <2 x float> %7, <2 x float>* %177, align 8
  %178 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %22, i64 0, i32 1
  store <2 x float> %8, <2 x float>* %178, align 8
  %179 = bitcast %class.SkPaint* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %179) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %179, i8* align 8 bitcast (%class.SkPaint* @__const._ZL20make_fallback_shaderP13SkPDFDocumentP8SkShaderRK8SkMatrixRK7SkIRect8SkRGBA4fIL11SkAlphaType3EE.p to i8*), i64 72, i1 false) #10
  call void @_ZN7SkPaintC1ERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpace(%class.SkPaint* nonnull %23, %struct.SkRGBA4f* nonnull dereferenceable(16) %176, %class.SkColorSpace* null) #10
  %180 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %24, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %180) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %180, i8 0, i64 20, i1 false) #10
  call void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas* nonnull %37, %class.SkImage* %6, float 0.000000e+00, float 0.000000e+00, %struct.SkSamplingOptions* nonnull dereferenceable(20) %24, %class.SkPaint* nonnull %23) #10
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %180) #10
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %23) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %179) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %175) #10
  call void @_ZN8SkCanvas14restoreToCountEi(%class.SkCanvas* nonnull %37, i32 %173) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %160) #10
  %181 = load float, float* %133, align 8
  %182 = fadd float %181, %137
  store float %182, float* %133, align 8
  br label %183

183:                                              ; preds = %159, %129
  %184 = icmp eq i32 %3, 2
  br i1 %184, label %185, label %233

185:                                              ; preds = %183
  %186 = bitcast %class.SkMatrix* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %186) #10
  %187 = fmul float %138, 2.000000e+00
  %188 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %43, i64 0, i32 1
  %189 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %43, i64 0, i32 0, i64 4
  %190 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %43, i64 0, i32 0, i64 5
  %191 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %43, i64 0, i32 0, i64 6
  %192 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %43, i64 0, i32 0, i64 7
  %193 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %43, i64 0, i32 0, i64 8
  %194 = bitcast %class.SkMatrix* %43 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %194, align 16, !alias.scope !17
  store float -1.000000e+00, float* %189, align 16, !alias.scope !17
  store float %187, float* %190, align 4, !alias.scope !17
  store float 0.000000e+00, float* %191, align 8, !alias.scope !17
  store float 0.000000e+00, float* %192, align 4, !alias.scope !17
  store float 1.000000e+00, float* %193, align 16, !alias.scope !17
  %195 = fcmp une float %187, 0.000000e+00
  %196 = zext i1 %195 to i32
  %197 = or i32 %196, 18
  store i32 %197, i32* %188, align 4, !alias.scope !17
  %198 = call i32 @_ZNK8SkCanvas12getSaveCountEv(%class.SkCanvas* nonnull %37) #10
  %199 = call i32 @_ZN8SkCanvas4saveEv(%class.SkCanvas* nonnull %37) #10
  call void @_ZN8SkCanvas6concatERK8SkMatrix(%class.SkCanvas* nonnull %37, %class.SkMatrix* nonnull dereferenceable(40) %43) #10
  %200 = bitcast { <2 x float>, <2 x float> }* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %200) #10
  %201 = bitcast { <2 x float>, <2 x float> }* %19 to %struct.SkRGBA4f*
  %202 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %19, i64 0, i32 0
  store <2 x float> %7, <2 x float>* %202, align 8
  %203 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %19, i64 0, i32 1
  store <2 x float> %8, <2 x float>* %203, align 8
  %204 = bitcast %class.SkPaint* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %204) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %204, i8* align 8 bitcast (%class.SkPaint* @__const._ZL20make_fallback_shaderP13SkPDFDocumentP8SkShaderRK8SkMatrixRK7SkIRect8SkRGBA4fIL11SkAlphaType3EE.p to i8*), i64 72, i1 false) #10
  call void @_ZN7SkPaintC1ERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpace(%class.SkPaint* nonnull %20, %struct.SkRGBA4f* nonnull dereferenceable(16) %201, %class.SkColorSpace* null) #10
  %205 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %21, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %205) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %205, i8 0, i64 20, i1 false) #10
  call void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas* nonnull %37, %class.SkImage* %6, float 0.000000e+00, float 0.000000e+00, %struct.SkSamplingOptions* nonnull dereferenceable(20) %21, %class.SkPaint* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %205) #10
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %204) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %200) #10
  call void @_ZN8SkCanvas14restoreToCountEi(%class.SkCanvas* nonnull %37, i32 %198) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %186) #10
  %206 = load float, float* %134, align 4
  %207 = fadd float %206, %138
  store float %207, float* %134, align 4
  br i1 %158, label %208, label %233

208:                                              ; preds = %185
  %209 = bitcast %class.SkMatrix* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %209) #10
  %210 = fmul float %137, 2.000000e+00
  %211 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %44, i64 0, i32 1
  %212 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %44, i64 0, i32 0, i64 0
  %213 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %44, i64 0, i32 0, i64 1
  %214 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %44, i64 0, i32 0, i64 2
  %215 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %44, i64 0, i32 0, i64 3
  %216 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %44, i64 0, i32 0, i64 4
  %217 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %44, i64 0, i32 0, i64 5
  %218 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %44, i64 0, i32 0, i64 6
  %219 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %44, i64 0, i32 0, i64 7
  %220 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %44, i64 0, i32 0, i64 8
  store float -1.000000e+00, float* %212, align 4, !alias.scope !20
  store float 0.000000e+00, float* %213, align 4, !alias.scope !20
  store float %210, float* %214, align 4, !alias.scope !20
  store float 0.000000e+00, float* %215, align 4, !alias.scope !20
  store float -1.000000e+00, float* %216, align 4, !alias.scope !20
  store float %187, float* %217, align 4, !alias.scope !20
  store float 0.000000e+00, float* %218, align 4, !alias.scope !20
  store float 0.000000e+00, float* %219, align 4, !alias.scope !20
  store float 1.000000e+00, float* %220, align 4, !alias.scope !20
  %221 = fcmp une float %210, 0.000000e+00
  %222 = or i1 %221, %195
  %223 = zext i1 %222 to i32
  %224 = or i32 %223, 18
  store i32 %224, i32* %211, align 4, !alias.scope !20
  %225 = call i32 @_ZNK8SkCanvas12getSaveCountEv(%class.SkCanvas* nonnull %37) #10
  %226 = call i32 @_ZN8SkCanvas4saveEv(%class.SkCanvas* nonnull %37) #10
  call void @_ZN8SkCanvas6concatERK8SkMatrix(%class.SkCanvas* nonnull %37, %class.SkMatrix* nonnull dereferenceable(40) %44) #10
  %227 = bitcast { <2 x float>, <2 x float> }* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %227) #10
  %228 = bitcast { <2 x float>, <2 x float> }* %16 to %struct.SkRGBA4f*
  %229 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %16, i64 0, i32 0
  store <2 x float> %7, <2 x float>* %229, align 8
  %230 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %16, i64 0, i32 1
  store <2 x float> %8, <2 x float>* %230, align 8
  %231 = bitcast %class.SkPaint* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %231) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %231, i8* align 8 bitcast (%class.SkPaint* @__const._ZL20make_fallback_shaderP13SkPDFDocumentP8SkShaderRK8SkMatrixRK7SkIRect8SkRGBA4fIL11SkAlphaType3EE.p to i8*), i64 72, i1 false) #10
  call void @_ZN7SkPaintC1ERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpace(%class.SkPaint* nonnull %17, %struct.SkRGBA4f* nonnull dereferenceable(16) %228, %class.SkColorSpace* null) #10
  %232 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %18, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %232) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %232, i8 0, i64 20, i1 false) #10
  call void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas* nonnull %37, %class.SkImage* %6, float 0.000000e+00, float 0.000000e+00, %struct.SkSamplingOptions* nonnull dereferenceable(20) %18, %class.SkPaint* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %232) #10
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %231) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %227) #10
  call void @_ZN8SkCanvas14restoreToCountEi(%class.SkCanvas* nonnull %37, i32 %225) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %209) #10
  br label %233

233:                                              ; preds = %183, %208, %185
  %234 = bitcast %class.SkBitmap* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %234) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %234, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %45) #10
  %235 = icmp eq i32 %2, 0
  %236 = icmp eq i32 %3, 0
  %237 = or i1 %235, %236
  br i1 %237, label %238, label %246

238:                                              ; preds = %233
  %239 = bitcast %class.SkBitmap* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %239) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %239, i8 -86, i64 56, i1 false) #10, !alias.scope !23
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %46) #10
  %240 = call zeroext i1 @_ZN10SkPDFUtils8ToBitmapEPK7SkImageP8SkBitmap(%class.SkImage* %6, %class.SkBitmap* nonnull %46) #10
  br i1 %240, label %244, label %241

241:                                              ; preds = %238
  %242 = load i32, i32* %69, align 4, !noalias !23
  %243 = load i32, i32* %71, align 4, !noalias !23
  call void @_ZN8SkBitmap14allocN32PixelsEiib(%class.SkBitmap* nonnull %46, i32 %242, i32 %243, i1 zeroext false) #10
  call void @_ZNK8SkBitmap10eraseColorEj(%class.SkBitmap* nonnull %46, i32 0) #10
  br label %244

244:                                              ; preds = %238, %241
  %245 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap* nonnull %45, %class.SkBitmap* nonnull dereferenceable(56) %46) #10
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %46) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %239) #10
  br label %246

246:                                              ; preds = %233, %244
  %247 = or i32 %3, %2
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %378

249:                                              ; preds = %246
  %250 = load float, float* %60, align 8
  %251 = load float, float* %61, align 4
  %252 = extractelement <2 x float> %8, i32 1
  %253 = bitcast %struct.SkRect* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %253) #10
  %254 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %13, i64 0, i32 0
  %255 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %13, i64 0, i32 1
  %256 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %13, i64 0, i32 2
  %257 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %13, i64 0, i32 3
  store float %250, float* %254, align 4
  store float %251, float* %255, align 4
  store float 0.000000e+00, float* %256, align 4
  store float 0.000000e+00, float* %257, align 4
  %258 = fcmp uge float %250, 0.000000e+00
  %259 = fcmp uge float %251, 0.000000e+00
  %260 = or i1 %258, %259
  br i1 %260, label %279, label %261

261:                                              ; preds = %249
  %262 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %45, i64 0, i32 1
  %263 = call i32 @_ZNK8SkPixmap8getColorEii(%class.SkPixmap* %262, i32 0, i32 0) #10
  %264 = call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 %263) #10
  %265 = extractvalue { <2 x float>, <2 x float> } %264, 0
  %266 = extractvalue { <2 x float>, <2 x float> } %264, 1
  %267 = bitcast %class.SkPaint* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %267) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %267, i8* align 8 bitcast (%class.SkPaint* @__const._ZL20make_fallback_shaderP13SkPDFDocumentP8SkShaderRK8SkMatrixRK7SkIRect8SkRGBA4fIL11SkAlphaType3EE.p to i8*), i64 72, i1 false) #10
  %268 = bitcast %struct.SkRGBA4f* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %268) #10
  %269 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %15, i64 0, i32 0
  %270 = extractelement <2 x float> %265, i32 0
  store float %270, float* %269, align 4
  %271 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %15, i64 0, i32 1
  %272 = extractelement <2 x float> %265, i32 1
  store float %272, float* %271, align 4
  %273 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %15, i64 0, i32 2
  %274 = extractelement <2 x float> %266, i32 0
  store float %274, float* %273, align 4
  %275 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %15, i64 0, i32 3
  %276 = extractelement <2 x float> %266, i32 1
  %277 = fmul float %252, %276
  store float %277, float* %275, align 4
  call void @_ZN7SkPaintC1ERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpace(%class.SkPaint* nonnull %14, %struct.SkRGBA4f* nonnull dereferenceable(16) %15, %class.SkColorSpace* null) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %268) #10
  call void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas* nonnull %37, %struct.SkRect* nonnull dereferenceable(16) %13, %class.SkPaint* nonnull dereferenceable(72) %14) #10
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %267) #10
  %278 = load float, float* %61, align 4
  br label %279

279:                                              ; preds = %249, %261
  %280 = phi float [ %251, %249 ], [ %278, %261 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %253) #10
  %281 = load float, float* %62, align 8
  %282 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %45, i64 0, i32 1, i32 2, i32 1, i32 0
  %283 = load i32, i32* %282, align 8
  %284 = bitcast %struct.SkRect* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %284) #10
  %285 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 1
  %286 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 2
  %287 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 3
  %288 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 0
  store float %137, float* %288, align 4
  store float %280, float* %285, align 4
  store float %281, float* %286, align 4
  store float 0.000000e+00, float* %287, align 4
  %289 = fcmp ule float %281, %137
  %290 = fcmp uge float %280, 0.000000e+00
  %291 = or i1 %290, %289
  br i1 %291, label %312, label %292

292:                                              ; preds = %279
  %293 = add nsw i32 %283, -1
  %294 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %45, i64 0, i32 1
  %295 = call i32 @_ZNK8SkPixmap8getColorEii(%class.SkPixmap* %294, i32 %293, i32 0) #10
  %296 = call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 %295) #10
  %297 = extractvalue { <2 x float>, <2 x float> } %296, 0
  %298 = extractvalue { <2 x float>, <2 x float> } %296, 1
  %299 = bitcast %class.SkPaint* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %299) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %299, i8* align 8 bitcast (%class.SkPaint* @__const._ZL20make_fallback_shaderP13SkPDFDocumentP8SkShaderRK8SkMatrixRK7SkIRect8SkRGBA4fIL11SkAlphaType3EE.p to i8*), i64 72, i1 false) #10
  %300 = bitcast %struct.SkRGBA4f* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %300) #10
  %301 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %12, i64 0, i32 0
  %302 = extractelement <2 x float> %297, i32 0
  store float %302, float* %301, align 4
  %303 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %12, i64 0, i32 1
  %304 = extractelement <2 x float> %297, i32 1
  store float %304, float* %303, align 4
  %305 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %12, i64 0, i32 2
  %306 = extractelement <2 x float> %298, i32 0
  store float %306, float* %305, align 4
  %307 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %12, i64 0, i32 3
  %308 = extractelement <2 x float> %298, i32 1
  %309 = fmul float %252, %308
  store float %309, float* %307, align 4
  call void @_ZN7SkPaintC1ERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpace(%class.SkPaint* nonnull %11, %struct.SkRGBA4f* nonnull dereferenceable(16) %12, %class.SkColorSpace* null) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %300) #10
  call void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas* nonnull %37, %struct.SkRect* nonnull dereferenceable(16) %10, %class.SkPaint* nonnull dereferenceable(72) %11) #10
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %299) #10
  %310 = load float, float* %62, align 8
  %311 = load i32, i32* %282, align 8
  br label %312

312:                                              ; preds = %279, %292
  %313 = phi i32 [ %283, %279 ], [ %311, %292 ]
  %314 = phi float [ %281, %279 ], [ %310, %292 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %284) #10
  %315 = load float, float* %63, align 4
  %316 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %45, i64 0, i32 1, i32 2, i32 1, i32 1
  %317 = load i32, i32* %316, align 4
  %318 = bitcast %struct.SkRect* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %318) #10
  %319 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %28, i64 0, i32 1
  %320 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %28, i64 0, i32 2
  %321 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %28, i64 0, i32 3
  %322 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %28, i64 0, i32 0
  store float %137, float* %322, align 4
  store float %138, float* %319, align 4
  store float %314, float* %320, align 4
  store float %315, float* %321, align 4
  %323 = fcmp ule float %314, %137
  %324 = fcmp ule float %315, %138
  %325 = or i1 %323, %324
  br i1 %325, label %347, label %326

326:                                              ; preds = %312
  %327 = add nsw i32 %317, -1
  %328 = add nsw i32 %313, -1
  %329 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %45, i64 0, i32 1
  %330 = call i32 @_ZNK8SkPixmap8getColorEii(%class.SkPixmap* %329, i32 %328, i32 %327) #10
  %331 = call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 %330) #10
  %332 = extractvalue { <2 x float>, <2 x float> } %331, 0
  %333 = extractvalue { <2 x float>, <2 x float> } %331, 1
  %334 = bitcast %class.SkPaint* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %334) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %334, i8* align 8 bitcast (%class.SkPaint* @__const._ZL20make_fallback_shaderP13SkPDFDocumentP8SkShaderRK8SkMatrixRK7SkIRect8SkRGBA4fIL11SkAlphaType3EE.p to i8*), i64 72, i1 false) #10
  %335 = bitcast %struct.SkRGBA4f* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %335) #10
  %336 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %30, i64 0, i32 0
  %337 = extractelement <2 x float> %332, i32 0
  store float %337, float* %336, align 4
  %338 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %30, i64 0, i32 1
  %339 = extractelement <2 x float> %332, i32 1
  store float %339, float* %338, align 4
  %340 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %30, i64 0, i32 2
  %341 = extractelement <2 x float> %333, i32 0
  store float %341, float* %340, align 4
  %342 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %30, i64 0, i32 3
  %343 = extractelement <2 x float> %333, i32 1
  %344 = fmul float %252, %343
  store float %344, float* %342, align 4
  call void @_ZN7SkPaintC1ERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpace(%class.SkPaint* nonnull %29, %struct.SkRGBA4f* nonnull dereferenceable(16) %30, %class.SkColorSpace* null) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %335) #10
  call void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas* nonnull %37, %struct.SkRect* nonnull dereferenceable(16) %28, %class.SkPaint* nonnull dereferenceable(72) %29) #10
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %29) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %334) #10
  %345 = load float, float* %63, align 4
  %346 = load i32, i32* %316, align 4
  br label %347

347:                                              ; preds = %312, %326
  %348 = phi i32 [ %317, %312 ], [ %346, %326 ]
  %349 = phi float [ %315, %312 ], [ %345, %326 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %318) #10
  %350 = load float, float* %60, align 8
  %351 = bitcast %struct.SkRect* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %351) #10
  %352 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %31, i64 0, i32 0
  %353 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %31, i64 0, i32 1
  %354 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %31, i64 0, i32 2
  %355 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %31, i64 0, i32 3
  store float %350, float* %352, align 4
  store float %138, float* %353, align 4
  store float 0.000000e+00, float* %354, align 4
  store float %349, float* %355, align 4
  %356 = fcmp uge float %350, 0.000000e+00
  %357 = fcmp ule float %349, %138
  %358 = or i1 %356, %357
  br i1 %358, label %377, label %359

359:                                              ; preds = %347
  %360 = add nsw i32 %348, -1
  %361 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %45, i64 0, i32 1
  %362 = call i32 @_ZNK8SkPixmap8getColorEii(%class.SkPixmap* %361, i32 0, i32 %360) #10
  %363 = call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 %362) #10
  %364 = extractvalue { <2 x float>, <2 x float> } %363, 0
  %365 = extractvalue { <2 x float>, <2 x float> } %363, 1
  %366 = bitcast %class.SkPaint* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %366) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %366, i8* align 8 bitcast (%class.SkPaint* @__const._ZL20make_fallback_shaderP13SkPDFDocumentP8SkShaderRK8SkMatrixRK7SkIRect8SkRGBA4fIL11SkAlphaType3EE.p to i8*), i64 72, i1 false) #10
  %367 = bitcast %struct.SkRGBA4f* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %367) #10
  %368 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %33, i64 0, i32 0
  %369 = extractelement <2 x float> %364, i32 0
  store float %369, float* %368, align 4
  %370 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %33, i64 0, i32 1
  %371 = extractelement <2 x float> %364, i32 1
  store float %371, float* %370, align 4
  %372 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %33, i64 0, i32 2
  %373 = extractelement <2 x float> %365, i32 0
  store float %373, float* %372, align 4
  %374 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %33, i64 0, i32 3
  %375 = extractelement <2 x float> %365, i32 1
  %376 = fmul float %252, %375
  store float %376, float* %374, align 4
  call void @_ZN7SkPaintC1ERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpace(%class.SkPaint* nonnull %32, %struct.SkRGBA4f* nonnull dereferenceable(16) %33, %class.SkColorSpace* null) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %367) #10
  call void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas* nonnull %37, %struct.SkRect* nonnull dereferenceable(16) %31, %class.SkPaint* nonnull dereferenceable(72) %32) #10
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %32) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %366) #10
  br label %377

377:                                              ; preds = %347, %359
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %351) #10
  br label %378

378:                                              ; preds = %377, %246
  br i1 %235, label %379, label %487

379:                                              ; preds = %378
  %380 = bitcast { i64, i64 }* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %380) #10
  %381 = bitcast { i64, i64 }* %47 to i32*
  %382 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %48, i64 0, i32 1
  %383 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %47, i64 0, i32 1
  %384 = bitcast i64* %383 to i32*
  %385 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %48, i64 0, i32 3
  %386 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %45, i64 0, i32 1, i32 2, i32 1, i32 1
  %387 = load i32, i32* %386, align 4
  %388 = sext i32 %387 to i64
  %389 = icmp slt i64 %388, 2147483647
  %390 = select i1 %389, i64 %388, i64 2147483647
  %391 = icmp sgt i64 %390, -2147483647
  %392 = select i1 %391, i64 %390, i64 -2147483647
  %393 = shl nsw i64 %392, 32
  %394 = or i64 %393, 1
  %395 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %47, i64 0, i32 0
  store i64 0, i64* %395, align 8
  store i64 %394, i64* %383, align 8
  %396 = load float, float* %60, align 8
  %397 = fcmp olt float %396, 0.000000e+00
  br i1 %397, label %398, label %422

398:                                              ; preds = %379
  %399 = bitcast %class.SkBitmap* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %399) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %399, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %49) #10
  %400 = call zeroext i1 @_ZNK8SkBitmap13extractSubsetEPS_RK7SkIRect(%class.SkBitmap* nonnull %45, %class.SkBitmap* nonnull %49, %struct.SkIRect* nonnull dereferenceable(16) %48) #10
  %401 = bitcast %class.SkMatrix* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %401) #10
  %402 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %50, i64 0, i32 1
  %403 = load float, float* %60, align 8
  %404 = fsub float -0.000000e+00, %403
  %405 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %50, i64 0, i32 0, i64 0
  %406 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %50, i64 0, i32 0, i64 1
  %407 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %50, i64 0, i32 0, i64 2
  %408 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %50, i64 0, i32 0, i64 3
  %409 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %50, i64 0, i32 0, i64 7
  %410 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %50, i64 0, i32 0, i64 8
  store float %404, float* %405, align 4, !alias.scope !26
  store float 0.000000e+00, float* %406, align 4, !alias.scope !26
  store float %403, float* %407, align 4, !alias.scope !26
  %411 = bitcast float* %408 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %411, align 4, !alias.scope !26
  store float 0.000000e+00, float* %409, align 4, !alias.scope !26
  store float 1.000000e+00, float* %410, align 4, !alias.scope !26
  %412 = fcmp une float %403, -1.000000e+00
  %413 = fcmp une float %403, 0.000000e+00
  %414 = zext i1 %413 to i32
  %415 = select i1 %412, i32 18, i32 16
  %416 = or i32 %415, %414
  store i32 %416, i32* %402, align 4, !alias.scope !26
  call fastcc void @_ZL18draw_bitmap_matrixP8SkCanvasRK8SkBitmapRK8SkMatrix8SkRGBA4fIL11SkAlphaType3EE(%class.SkCanvas* nonnull %37, %class.SkBitmap* nonnull dereferenceable(56) %49, %class.SkMatrix* nonnull dereferenceable(40) %50, <2 x float> %7, <2 x float> %8)
  br i1 %184, label %417, label %421

417:                                              ; preds = %398
  %418 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9postScaleEff(%class.SkMatrix* nonnull %50, float 1.000000e+00, float -1.000000e+00) #10
  %419 = fmul float %138, 2.000000e+00
  %420 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %50, float 0.000000e+00, float %419) #10
  call fastcc void @_ZL18draw_bitmap_matrixP8SkCanvasRK8SkBitmapRK8SkMatrix8SkRGBA4fIL11SkAlphaType3EE(%class.SkCanvas* nonnull %37, %class.SkBitmap* nonnull dereferenceable(56) %49, %class.SkMatrix* nonnull dereferenceable(40) %50, <2 x float> %7, <2 x float> %8)
  br label %421

421:                                              ; preds = %417, %398
  store float 0.000000e+00, float* %131, align 16
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %401) #10
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %49) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %399) #10
  br label %422

422:                                              ; preds = %421, %379
  %423 = load float, float* %62, align 8
  %424 = fcmp ogt float %423, %137
  br i1 %424, label %425, label %486

425:                                              ; preds = %422
  %426 = bitcast %class.SkBitmap* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %426) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %426, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %51) #10
  %427 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %45, i64 0, i32 1, i32 2, i32 1, i32 0
  %428 = load i32, i32* %427, align 8
  %429 = add nsw i32 %428, -1
  %430 = load i32, i32* %381, align 8
  %431 = sext i32 %430 to i64
  %432 = sext i32 %429 to i64
  %433 = add nsw i64 %431, %432
  %434 = icmp slt i64 %433, 2147483647
  %435 = select i1 %434, i64 %433, i64 2147483647
  %436 = icmp sgt i64 %435, -2147483647
  %437 = select i1 %436, i64 %435, i64 -2147483647
  %438 = trunc i64 %437 to i32
  store i32 %438, i32* %381, align 8
  %439 = load i32, i32* %382, align 4
  %440 = sext i32 %439 to i64
  %441 = icmp slt i64 %440, 2147483647
  %442 = select i1 %441, i64 %440, i64 2147483647
  %443 = icmp sgt i64 %442, -2147483647
  %444 = select i1 %443, i64 %442, i64 -2147483647
  %445 = trunc i64 %444 to i32
  store i32 %445, i32* %382, align 4
  %446 = load i32, i32* %384, align 8
  %447 = sext i32 %446 to i64
  %448 = add nsw i64 %447, %432
  %449 = icmp slt i64 %448, 2147483647
  %450 = select i1 %449, i64 %448, i64 2147483647
  %451 = icmp sgt i64 %450, -2147483647
  %452 = select i1 %451, i64 %450, i64 -2147483647
  %453 = trunc i64 %452 to i32
  store i32 %453, i32* %384, align 8
  %454 = load i32, i32* %385, align 4
  %455 = sext i32 %454 to i64
  %456 = icmp slt i64 %455, 2147483647
  %457 = select i1 %456, i64 %455, i64 2147483647
  %458 = icmp sgt i64 %457, -2147483647
  %459 = select i1 %458, i64 %457, i64 -2147483647
  %460 = trunc i64 %459 to i32
  store i32 %460, i32* %385, align 4
  %461 = call zeroext i1 @_ZNK8SkBitmap13extractSubsetEPS_RK7SkIRect(%class.SkBitmap* nonnull %45, %class.SkBitmap* nonnull %51, %struct.SkIRect* nonnull dereferenceable(16) %48) #10
  %462 = bitcast %class.SkMatrix* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %462) #10
  %463 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %52, i64 0, i32 1
  %464 = load float, float* %62, align 8
  %465 = fsub float %464, %137
  %466 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %52, i64 0, i32 0, i64 0
  %467 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %52, i64 0, i32 0, i64 1
  %468 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %52, i64 0, i32 0, i64 2
  %469 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %52, i64 0, i32 0, i64 3
  %470 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %52, i64 0, i32 0, i64 7
  %471 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %52, i64 0, i32 0, i64 8
  store float %465, float* %466, align 4, !alias.scope !29
  store float 0.000000e+00, float* %467, align 4, !alias.scope !29
  store float %137, float* %468, align 4, !alias.scope !29
  %472 = bitcast float* %469 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %472, align 4, !alias.scope !29
  store float 0.000000e+00, float* %470, align 4, !alias.scope !29
  store float 1.000000e+00, float* %471, align 4, !alias.scope !29
  %473 = fcmp une float %465, 1.000000e+00
  %474 = icmp ne i32 %135, 0
  %475 = zext i1 %474 to i32
  %476 = select i1 %473, i32 18, i32 16
  %477 = or i32 %476, %475
  store i32 %477, i32* %463, align 4, !alias.scope !29
  call fastcc void @_ZL18draw_bitmap_matrixP8SkCanvasRK8SkBitmapRK8SkMatrix8SkRGBA4fIL11SkAlphaType3EE(%class.SkCanvas* nonnull %37, %class.SkBitmap* nonnull dereferenceable(56) %51, %class.SkMatrix* nonnull dereferenceable(40) %52, <2 x float> %7, <2 x float> %8)
  br i1 %184, label %478, label %482

478:                                              ; preds = %425
  %479 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9postScaleEff(%class.SkMatrix* nonnull %52, float 1.000000e+00, float -1.000000e+00) #10
  %480 = fmul float %138, 2.000000e+00
  %481 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %52, float 0.000000e+00, float %480) #10
  call fastcc void @_ZL18draw_bitmap_matrixP8SkCanvasRK8SkBitmapRK8SkMatrix8SkRGBA4fIL11SkAlphaType3EE(%class.SkCanvas* nonnull %37, %class.SkBitmap* nonnull dereferenceable(56) %51, %class.SkMatrix* nonnull dereferenceable(40) %52, <2 x float> %7, <2 x float> %8)
  br label %482

482:                                              ; preds = %478, %425
  %483 = load float, float* %62, align 8
  %484 = load float, float* %60, align 8
  %485 = fsub float %483, %484
  store float %485, float* %133, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %462) #10
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %51) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %426) #10
  br label %486

486:                                              ; preds = %422, %482
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %380) #10
  br label %498

487:                                              ; preds = %378
  %488 = icmp eq i32 %2, 3
  br i1 %488, label %489, label %498

489:                                              ; preds = %487
  %490 = load float, float* %60, align 8
  %491 = fcmp olt float %490, 0.000000e+00
  br i1 %491, label %492, label %493

492:                                              ; preds = %489
  store float 0.000000e+00, float* %131, align 16
  br label %493

493:                                              ; preds = %492, %489
  %494 = load float, float* %62, align 8
  %495 = fcmp ogt float %494, %137
  br i1 %495, label %496, label %498

496:                                              ; preds = %493
  %497 = fsub float %494, %490
  store float %497, float* %133, align 8
  br label %498

498:                                              ; preds = %486, %493, %496, %487
  br i1 %236, label %499, label %605

499:                                              ; preds = %498
  %500 = bitcast { i64, i64 }* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %500) #10
  %501 = bitcast { i64, i64 }* %53 to i32*
  %502 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %54, i64 0, i32 1
  %503 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %53, i64 0, i32 1
  %504 = bitcast i64* %503 to i32*
  %505 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %54, i64 0, i32 3
  %506 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %45, i64 0, i32 1, i32 2, i32 1, i32 0
  %507 = load i32, i32* %506, align 8
  %508 = sext i32 %507 to i64
  %509 = icmp slt i64 %508, 2147483647
  %510 = select i1 %509, i64 %508, i64 2147483647
  %511 = icmp sgt i64 %510, -2147483647
  %512 = select i1 %511, i64 %510, i64 -2147483647
  %513 = and i64 %512, 4294967295
  %514 = or i64 %513, 4294967296
  %515 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %53, i64 0, i32 0
  store i64 0, i64* %515, align 8
  store i64 %514, i64* %503, align 8
  %516 = load float, float* %61, align 4
  %517 = fcmp olt float %516, 0.000000e+00
  br i1 %517, label %518, label %541

518:                                              ; preds = %499
  %519 = bitcast %class.SkBitmap* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %519) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %519, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %55) #10
  %520 = call zeroext i1 @_ZNK8SkBitmap13extractSubsetEPS_RK7SkIRect(%class.SkBitmap* nonnull %45, %class.SkBitmap* nonnull %55, %struct.SkIRect* nonnull dereferenceable(16) %54) #10
  %521 = bitcast %class.SkMatrix* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %521) #10
  %522 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %56, i64 0, i32 1
  %523 = load float, float* %61, align 4
  %524 = fsub float -0.000000e+00, %523
  %525 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %56, i64 0, i32 0, i64 4
  %526 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %56, i64 0, i32 0, i64 5
  %527 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %56, i64 0, i32 0, i64 6
  %528 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %56, i64 0, i32 0, i64 7
  %529 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %56, i64 0, i32 0, i64 8
  %530 = bitcast %class.SkMatrix* %56 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %530, align 16, !alias.scope !32
  store float %524, float* %525, align 16, !alias.scope !32
  store float %523, float* %526, align 4, !alias.scope !32
  store float 0.000000e+00, float* %527, align 8, !alias.scope !32
  store float 0.000000e+00, float* %528, align 4, !alias.scope !32
  store float 1.000000e+00, float* %529, align 16, !alias.scope !32
  %531 = fcmp une float %523, -1.000000e+00
  %532 = fcmp une float %523, 0.000000e+00
  %533 = zext i1 %532 to i32
  %534 = select i1 %531, i32 18, i32 16
  %535 = or i32 %534, %533
  store i32 %535, i32* %522, align 4, !alias.scope !32
  call fastcc void @_ZL18draw_bitmap_matrixP8SkCanvasRK8SkBitmapRK8SkMatrix8SkRGBA4fIL11SkAlphaType3EE(%class.SkCanvas* nonnull %37, %class.SkBitmap* nonnull dereferenceable(56) %55, %class.SkMatrix* nonnull dereferenceable(40) %56, <2 x float> %7, <2 x float> %8)
  br i1 %158, label %536, label %540

536:                                              ; preds = %518
  %537 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9postScaleEff(%class.SkMatrix* nonnull %56, float -1.000000e+00, float 1.000000e+00) #10
  %538 = fmul float %137, 2.000000e+00
  %539 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %56, float %538, float 0.000000e+00) #10
  call fastcc void @_ZL18draw_bitmap_matrixP8SkCanvasRK8SkBitmapRK8SkMatrix8SkRGBA4fIL11SkAlphaType3EE(%class.SkCanvas* nonnull %37, %class.SkBitmap* nonnull dereferenceable(56) %55, %class.SkMatrix* nonnull dereferenceable(40) %56, <2 x float> %7, <2 x float> %8)
  br label %540

540:                                              ; preds = %536, %518
  store float 0.000000e+00, float* %132, align 4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %521) #10
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %55) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %519) #10
  br label %541

541:                                              ; preds = %540, %499
  %542 = load float, float* %63, align 4
  %543 = fcmp ogt float %542, %138
  br i1 %543, label %544, label %604

544:                                              ; preds = %541
  %545 = bitcast %class.SkBitmap* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %545) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %545, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %57) #10
  %546 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %45, i64 0, i32 1, i32 2, i32 1, i32 1
  %547 = load i32, i32* %546, align 4
  %548 = add nsw i32 %547, -1
  %549 = load i32, i32* %501, align 8
  %550 = sext i32 %549 to i64
  %551 = icmp slt i64 %550, 2147483647
  %552 = select i1 %551, i64 %550, i64 2147483647
  %553 = icmp sgt i64 %552, -2147483647
  %554 = select i1 %553, i64 %552, i64 -2147483647
  %555 = trunc i64 %554 to i32
  store i32 %555, i32* %501, align 8
  %556 = load i32, i32* %502, align 4
  %557 = sext i32 %556 to i64
  %558 = sext i32 %548 to i64
  %559 = add nsw i64 %557, %558
  %560 = icmp slt i64 %559, 2147483647
  %561 = select i1 %560, i64 %559, i64 2147483647
  %562 = icmp sgt i64 %561, -2147483647
  %563 = select i1 %562, i64 %561, i64 -2147483647
  %564 = trunc i64 %563 to i32
  store i32 %564, i32* %502, align 4
  %565 = load i32, i32* %504, align 8
  %566 = sext i32 %565 to i64
  %567 = icmp slt i64 %566, 2147483647
  %568 = select i1 %567, i64 %566, i64 2147483647
  %569 = icmp sgt i64 %568, -2147483647
  %570 = select i1 %569, i64 %568, i64 -2147483647
  %571 = trunc i64 %570 to i32
  store i32 %571, i32* %504, align 8
  %572 = load i32, i32* %505, align 4
  %573 = sext i32 %572 to i64
  %574 = add nsw i64 %573, %558
  %575 = icmp slt i64 %574, 2147483647
  %576 = select i1 %575, i64 %574, i64 2147483647
  %577 = icmp sgt i64 %576, -2147483647
  %578 = select i1 %577, i64 %576, i64 -2147483647
  %579 = trunc i64 %578 to i32
  store i32 %579, i32* %505, align 4
  %580 = call zeroext i1 @_ZNK8SkBitmap13extractSubsetEPS_RK7SkIRect(%class.SkBitmap* nonnull %45, %class.SkBitmap* nonnull %57, %struct.SkIRect* nonnull dereferenceable(16) %54) #10
  %581 = bitcast %class.SkMatrix* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %581) #10
  %582 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %58, i64 0, i32 1
  %583 = load float, float* %63, align 4
  %584 = fsub float %583, %138
  %585 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %58, i64 0, i32 0, i64 4
  %586 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %58, i64 0, i32 0, i64 5
  %587 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %58, i64 0, i32 0, i64 6
  %588 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %58, i64 0, i32 0, i64 7
  %589 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %58, i64 0, i32 0, i64 8
  %590 = bitcast %class.SkMatrix* %58 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %590, align 16, !alias.scope !35
  store float %584, float* %585, align 16, !alias.scope !35
  store float %138, float* %586, align 4, !alias.scope !35
  store float 0.000000e+00, float* %587, align 8, !alias.scope !35
  store float 0.000000e+00, float* %588, align 4, !alias.scope !35
  store float 1.000000e+00, float* %589, align 16, !alias.scope !35
  %591 = fcmp une float %584, 1.000000e+00
  %592 = icmp ne i32 %136, 0
  %593 = zext i1 %592 to i32
  %594 = select i1 %591, i32 18, i32 16
  %595 = or i32 %594, %593
  store i32 %595, i32* %582, align 4, !alias.scope !35
  call fastcc void @_ZL18draw_bitmap_matrixP8SkCanvasRK8SkBitmapRK8SkMatrix8SkRGBA4fIL11SkAlphaType3EE(%class.SkCanvas* nonnull %37, %class.SkBitmap* nonnull dereferenceable(56) %57, %class.SkMatrix* nonnull dereferenceable(40) %58, <2 x float> %7, <2 x float> %8)
  br i1 %158, label %596, label %600

596:                                              ; preds = %544
  %597 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9postScaleEff(%class.SkMatrix* nonnull %58, float -1.000000e+00, float 1.000000e+00) #10
  %598 = fmul float %137, 2.000000e+00
  %599 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %58, float %598, float 0.000000e+00) #10
  call fastcc void @_ZL18draw_bitmap_matrixP8SkCanvasRK8SkBitmapRK8SkMatrix8SkRGBA4fIL11SkAlphaType3EE(%class.SkCanvas* nonnull %37, %class.SkBitmap* nonnull dereferenceable(56) %57, %class.SkMatrix* nonnull dereferenceable(40) %58, <2 x float> %7, <2 x float> %8)
  br label %600

600:                                              ; preds = %596, %544
  %601 = load float, float* %63, align 4
  %602 = load float, float* %61, align 4
  %603 = fsub float %601, %602
  store float %603, float* %134, align 4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %581) #10
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %57) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %545) #10
  br label %604

604:                                              ; preds = %541, %600
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %500) #10
  br label %616

605:                                              ; preds = %498
  %606 = icmp eq i32 %3, 3
  br i1 %606, label %607, label %616

607:                                              ; preds = %605
  %608 = load float, float* %61, align 4
  %609 = fcmp olt float %608, 0.000000e+00
  br i1 %609, label %610, label %611

610:                                              ; preds = %607
  store float 0.000000e+00, float* %132, align 4
  br label %611

611:                                              ; preds = %610, %607
  %612 = load float, float* %63, align 4
  %613 = fcmp ogt float %612, %138
  br i1 %613, label %614, label %616

614:                                              ; preds = %611
  %615 = fsub float %612, %608
  store float %615, float* %134, align 4
  br label %616

616:                                              ; preds = %604, %611, %614, %605
  %617 = call %class.SkStreamAsset* @_ZN11SkPDFDevice7contentEv(%class.SkPDFDevice* nonnull %105) #10
  %618 = call %class.SkPDFDict* @_ZN11SkPDFDevice16makeResourceDictEv(%class.SkPDFDevice* nonnull %105) #10
  %619 = call i8* @_Znwm(i64 32) #11
  %620 = bitcast i8* %619 to %class.SkPDFDict*
  call void @_ZN9SkPDFDictC1EPKc(%class.SkPDFDict* nonnull %620, i8* null) #10
  call void @_ZN10SkPDFUtils25PopulateTilingPatternDictEP9SkPDFDictR6SkRectNSt3__110unique_ptrIS0_NS4_14default_deleteIS0_EEEERK8SkMatrix(%class.SkPDFDict* nonnull %620, %struct.SkRect* nonnull dereferenceable(16) %41, %class.SkPDFDict* %618, %class.SkMatrix* nonnull dereferenceable(40) %1) #10
  %621 = call i32 @_Z14SkPDFStreamOutNSt3__110unique_ptrI9SkPDFDictNS_14default_deleteIS1_EEEENS0_I13SkStreamAssetNS2_IS5_EEEEP13SkPDFDocumentb(%class.SkPDFDict* nonnull %620, %class.SkStreamAsset* %617, %class.SkPDFDocument* %0, i1 zeroext true) #10
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %45) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %234) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %130) #10
  call void @_ZN8SkCanvasD1Ev(%class.SkCanvas* nonnull %37) #10
  call void @llvm.lifetime.end.p0i8(i64 3232, i8* nonnull %111) #10
  %622 = atomicrmw add i32* %114, i32 -1 acq_rel
  %623 = icmp eq i32 %622, 1
  br i1 %623, label %624, label %630

624:                                              ; preds = %616
  %625 = bitcast i8* %104 to %class.SkRefCntBase*
  %626 = bitcast i8* %104 to void (%class.SkRefCntBase*)***
  %627 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %626, align 8
  %628 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %627, i64 2
  %629 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %628, align 8
  call void %629(%class.SkRefCntBase* nonnull %625) #10
  br label %630

630:                                              ; preds = %616, %624
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #10
  br label %631

631:                                              ; preds = %9, %630
  %632 = phi i32 [ %621, %630 ], [ -1, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #10
  ret i32 %632
}

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #3

declare zeroext i1 @_ZNK7SkImage11isAlphaOnlyEv(%class.SkImage*) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix*, %class.SkMatrix* dereferenceable(40), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

declare zeroext i1 @_ZN10SkPDFUtils20InverseTransformBBoxERK8SkMatrixP6SkRect(%class.SkMatrix* dereferenceable(40), %struct.SkRect*) local_unnamed_addr #1

declare void @_ZN6SkRect4joinERKS_(%struct.SkRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #4

declare void @_ZN8SkCanvasC1E5sk_spI12SkBaseDeviceE(%class.SkCanvas*, %class.sk_sp.102*) unnamed_addr #1

declare void @_ZN8SkCanvas9translateEff(%class.SkCanvas*, float, float) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12preTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #1

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #1

declare zeroext i1 @_ZNK8SkBitmap13extractSubsetEPS_RK7SkIRect(%class.SkBitmap*, %class.SkBitmap*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL18draw_bitmap_matrixP8SkCanvasRK8SkBitmapRK8SkMatrix8SkRGBA4fIL11SkAlphaType3EE(%class.SkCanvas*, %class.SkBitmap* dereferenceable(56), %class.SkMatrix* dereferenceable(40), <2 x float>, <2 x float>) unnamed_addr #0 {
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRGBA4f*
  %8 = alloca %class.SkPaint, align 8
  %9 = alloca %class.sk_sp.240, align 8
  %10 = alloca %struct.SkSamplingOptions, align 4
  %11 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  store <2 x float> %3, <2 x float>* %11, align 8
  %12 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  store <2 x float> %4, <2 x float>* %12, align 8
  %13 = icmp eq %class.SkCanvas* %0, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %5
  %15 = tail call i32 @_ZNK8SkCanvas12getSaveCountEv(%class.SkCanvas* nonnull %0) #10
  %16 = tail call i32 @_ZN8SkCanvas4saveEv(%class.SkCanvas* nonnull %0) #10
  br label %17

17:                                               ; preds = %5, %14
  %18 = phi i32 [ 0, %5 ], [ %15, %14 ]
  tail call void @_ZN8SkCanvas6concatERK8SkMatrix(%class.SkCanvas* %0, %class.SkMatrix* dereferenceable(40) %2) #10
  %19 = bitcast %class.SkPaint* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %19) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 bitcast (%class.SkPaint* @__const._ZL20make_fallback_shaderP13SkPDFDocumentP8SkShaderRK8SkMatrixRK7SkIRect8SkRGBA4fIL11SkAlphaType3EE.p to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1ERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpace(%class.SkPaint* nonnull %8, %struct.SkRGBA4f* nonnull dereferenceable(16) %7, %class.SkColorSpace* null) #10
  %20 = bitcast %class.sk_sp.240* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZNK8SkBitmap7asImageEv(%class.sk_sp.240* nonnull sret %9, %class.SkBitmap* %1) #10
  %21 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %21) #10
  %22 = getelementptr inbounds %class.sk_sp.240, %class.sk_sp.240* %9, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %21, i8 0, i64 20, i1 false)
  %23 = load %class.SkImage*, %class.SkImage** %22, align 8
  call void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas* %0, %class.SkImage* %23, float 0.000000e+00, float 0.000000e+00, %struct.SkSamplingOptions* nonnull dereferenceable(20) %10, %class.SkPaint* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %21) #10
  %24 = load %class.SkImage*, %class.SkImage** %22, align 8
  %25 = icmp eq %class.SkImage* %24, null
  br i1 %25, label %36, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds %class.SkImage, %class.SkImage* %24, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw add i32* %27, i32 -1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %36

30:                                               ; preds = %26
  %31 = bitcast %class.SkImage* %24 to %class.SkRefCntBase*
  %32 = bitcast %class.SkImage* %24 to void (%class.SkRefCntBase*)***
  %33 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %32, align 8
  %34 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %33, i64 2
  %35 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %34, align 8
  call void %35(%class.SkRefCntBase* nonnull %31) #10
  br label %36

36:                                               ; preds = %17, %26, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %19) #10
  br i1 %13, label %38, label %37

37:                                               ; preds = %36
  call void @_ZN8SkCanvas14restoreToCountEi(%class.SkCanvas* nonnull %0, i32 %18) #10
  br label %38

38:                                               ; preds = %36, %37
  ret void
}

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9postScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #1

declare %class.SkStreamAsset* @_ZN11SkPDFDevice7contentEv(%class.SkPDFDevice*) local_unnamed_addr #1

declare %class.SkPDFDict* @_ZN11SkPDFDevice16makeResourceDictEv(%class.SkPDFDevice*) local_unnamed_addr #1

declare void @_ZN10SkPDFUtils25PopulateTilingPatternDictEP9SkPDFDictR6SkRectNSt3__110unique_ptrIS0_NS4_14default_deleteIS0_EEEERK8SkMatrix(%class.SkPDFDict*, %struct.SkRect* dereferenceable(16), %class.SkPDFDict*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

declare i32 @_Z14SkPDFStreamOutNSt3__110unique_ptrI9SkPDFDictNS_14default_deleteIS1_EEEENS0_I13SkStreamAssetNS2_IS5_EEEEP13SkPDFDocumentb(%class.SkPDFDict*, %class.SkStreamAsset*, %class.SkPDFDocument*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8SkCanvasD1Ev(%class.SkCanvas*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #1

declare void @_ZN11SkPDFDeviceC1E7SkISizeP13SkPDFDocumentRK8SkMatrix(%class.SkPDFDevice*, i64, %class.SkPDFDocument*, %class.SkMatrix* dereferenceable(40)) unnamed_addr #1

declare void @_ZN7SkPaintC1ERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpace(%class.SkPaint*, %struct.SkRGBA4f* dereferenceable(16), %class.SkColorSpace*) unnamed_addr #1

declare void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas*, %class.SkImage*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #3

declare void @_ZN8SkCanvas6concatERK8SkMatrix(%class.SkCanvas*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

declare i32 @_ZNK8SkCanvas12getSaveCountEv(%class.SkCanvas*) local_unnamed_addr #1

declare i32 @_ZN8SkCanvas4saveEv(%class.SkCanvas*) local_unnamed_addr #1

declare void @_ZN8SkCanvas14restoreToCountEi(%class.SkCanvas*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN10SkPDFUtils8ToBitmapEPK7SkImageP8SkBitmap(%class.SkImage*, %class.SkBitmap*) local_unnamed_addr #1

declare void @_ZN8SkBitmap14allocN32PixelsEiib(%class.SkBitmap*, i32, i32, i1 zeroext) local_unnamed_addr #1

declare void @_ZNK8SkBitmap10eraseColorEj(%class.SkBitmap*, i32) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32) local_unnamed_addr #1

declare void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #1

declare i32 @_ZNK8SkPixmap8getColorEii(%class.SkPixmap*, i32, i32) local_unnamed_addr #1

declare void @_ZNK8SkBitmap7asImageEv(%class.sk_sp.240* sret, %class.SkBitmap*) local_unnamed_addr #1

declare void @_ZN9SkPDFDictC1EPKc(%class.SkPDFDict*, i8*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #6

declare void @_ZN9SkSurface19MakeRasterN32PremulEiiPK14SkSurfaceProps(%class.sk_sp.241* sret, i32, i32, %class.SkSurfaceProps*) local_unnamed_addr #1

declare %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface*) local_unnamed_addr #1

declare void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint*, %class.sk_sp.236*) local_unnamed_addr #1

declare void @_ZN8SkCanvas5scaleEff(%class.SkCanvas*, float, float) local_unnamed_addr #1

declare void @_ZN8SkCanvas9drawPaintERK7SkPaint(%class.SkCanvas*, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8preScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #1

declare void @_ZN9SkSurface17makeImageSnapshotEv(%class.sk_sp.240* sret, %class.SkSurface*) local_unnamed_addr #1

declare void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas*, %struct.SkRGBA4f* dereferenceable(16), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair"* @_ZNK12SkTHashTableIN10SkTHashMapI19SkPDFImageShaderKey22SkPDFIndirectReference10SkGoodHashE4PairES1_S5_E4findERKS1_(%class.SkTHashTable*, %struct.SkPDFImageShaderKey* dereferenceable(100)) local_unnamed_addr #7 comdat align 2 {
  %3 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %4 = bitcast %struct.SkPDFImageShaderKey* %1 to i8*
  %5 = tail call i32 %3(i8* %4, i64 100, i32 0) #10
  %6 = icmp eq i32 %5, 0
  %7 = select i1 %6, i32 1, i32 %5
  %8 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 1
  %9 = getelementptr inbounds %struct.SkPDFImageShaderKey, %struct.SkPDFImageShaderKey* %1, i64 0, i32 4, i32 2
  %10 = load i32, i32* %8, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %94

12:                                               ; preds = %2
  %13 = add nsw i32 %10, -1
  %14 = and i32 %7, %13
  %15 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %struct.SkPDFImageShaderKey, %struct.SkPDFImageShaderKey* %1, i64 0, i32 0
  %17 = getelementptr inbounds %struct.SkPDFImageShaderKey, %struct.SkPDFImageShaderKey* %1, i64 0, i32 1
  %18 = bitcast %struct.SkIRect* %17 to i8*
  %19 = getelementptr inbounds %struct.SkPDFImageShaderKey, %struct.SkPDFImageShaderKey* %1, i64 0, i32 2, i32 1
  %20 = getelementptr inbounds %struct.SkPDFImageShaderKey, %struct.SkPDFImageShaderKey* %1, i64 0, i32 2
  %21 = bitcast %struct.SkBitmapKey* %20 to i8*
  %22 = getelementptr inbounds %struct.SkPDFImageShaderKey, %struct.SkPDFImageShaderKey* %1, i64 0, i32 3, i64 0
  %23 = getelementptr inbounds %struct.SkPDFImageShaderKey, %struct.SkPDFImageShaderKey* %1, i64 0, i32 3, i64 1
  %24 = getelementptr inbounds %struct.SkPDFImageShaderKey, %struct.SkPDFImageShaderKey* %1, i64 0, i32 4, i32 3
  %25 = getelementptr inbounds %struct.SkPDFImageShaderKey, %struct.SkPDFImageShaderKey* %1, i64 0, i32 4, i32 0
  %26 = getelementptr inbounds %struct.SkPDFImageShaderKey, %struct.SkPDFImageShaderKey* %1, i64 0, i32 4, i32 1
  br label %27

27:                                               ; preds = %12, %86
  %28 = phi i32 [ 0, %12 ], [ %92, %86 ]
  %29 = phi i32 [ %14, %12 ], [ %91, %86 ]
  %30 = sext i32 %29 to i64
  %31 = load %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"** %15, align 8
  %32 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %31, i64 %30, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %94, label %35

35:                                               ; preds = %27
  %36 = icmp eq i32 %7, %33
  br i1 %36, label %37, label %86

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %31, i64 %30, i32 0
  %39 = getelementptr inbounds %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair", %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = tail call zeroext i1 @_ZeqRK8SkMatrixS1_(%class.SkMatrix* dereferenceable(40) %16, %class.SkMatrix* dereferenceable(40) %39) #10
  br i1 %40, label %41, label %86

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %31, i64 %30, i32 0, i32 0, i32 0, i32 1
  %43 = bitcast %struct.SkIRect* %42 to i8*
  %44 = tail call i32 @bcmp(i8* %18, i8* %43, i64 16) #10
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %86

46:                                               ; preds = %41
  %47 = load i32, i32* %19, align 4
  %48 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %31, i64 %30, i32 0, i32 0, i32 0, i32 2, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %47, %49
  br i1 %50, label %51, label %86

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %31, i64 %30, i32 0, i32 0, i32 0, i32 2
  %53 = bitcast %struct.SkBitmapKey* %52 to i8*
  %54 = tail call i32 @bcmp(i8* %21, i8* %53, i64 16) #10
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %86

56:                                               ; preds = %51
  %57 = load i32, i32* %22, align 4
  %58 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %31, i64 %30, i32 0, i32 0, i32 0, i32 3, i64 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %57, %59
  br i1 %60, label %61, label %86

61:                                               ; preds = %56
  %62 = load i32, i32* %23, align 4
  %63 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %31, i64 %30, i32 0, i32 0, i32 0, i32 3, i64 1
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %62, %64
  br i1 %65, label %66, label %86

66:                                               ; preds = %61
  %67 = load float, float* %24, align 4
  %68 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %31, i64 %30, i32 0, i32 0, i32 0, i32 4, i32 3
  %69 = load float, float* %68, align 4
  %70 = fcmp oeq float %67, %69
  br i1 %70, label %71, label %86

71:                                               ; preds = %66
  %72 = load float, float* %25, align 4
  %73 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %31, i64 %30, i32 0, i32 0, i32 0, i32 4, i32 0
  %74 = load float, float* %73, align 4
  %75 = fcmp oeq float %72, %74
  br i1 %75, label %76, label %86

76:                                               ; preds = %71
  %77 = load float, float* %26, align 4
  %78 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %31, i64 %30, i32 0, i32 0, i32 0, i32 4, i32 1
  %79 = load float, float* %78, align 4
  %80 = fcmp oeq float %77, %79
  br i1 %80, label %81, label %86

81:                                               ; preds = %76
  %82 = load float, float* %9, align 4
  %83 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %31, i64 %30, i32 0, i32 0, i32 0, i32 4, i32 2
  %84 = load float, float* %83, align 4
  %85 = fcmp oeq float %82, %84
  br i1 %85, label %94, label %86

86:                                               ; preds = %46, %66, %71, %76, %37, %41, %51, %56, %61, %81, %35
  %87 = add nsw i32 %29, -1
  %88 = icmp slt i32 %29, 1
  %89 = load i32, i32* %8, align 4
  %90 = select i1 %88, i32 %89, i32 0
  %91 = add nsw i32 %87, %90
  %92 = add nuw nsw i32 %28, 1
  %93 = icmp slt i32 %92, %89
  br i1 %93, label %27, label %94

94:                                               ; preds = %86, %27, %81, %2
  %95 = phi %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair"* [ null, %2 ], [ %38, %81 ], [ null, %27 ], [ null, %86 ]
  ret %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair"* %95
}

declare zeroext i1 @_ZeqRK8SkMatrixS1_(%class.SkMatrix* dereferenceable(40), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkTHashTableIN10SkTHashMapI19SkPDFImageShaderKey22SkPDFIndirectReference10SkGoodHashE4PairES1_S5_E6resizeEi(%class.SkTHashTable*, i32) local_unnamed_addr #7 comdat align 2 {
  %3 = alloca %class.SkAutoTArray, align 8
  %4 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 0
  store i32 0, i32* %6, align 8
  store i32 %1, i32* %4, align 4
  %7 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 2
  %8 = getelementptr inbounds %class.SkAutoTArray, %class.SkAutoTArray* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %class.SkAutoTArray* %7 to i64*
  %10 = load i64, i64* %9, align 8
  store %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"** %8, align 8
  %11 = bitcast %class.SkAutoTArray* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  %12 = bitcast %class.SkAutoTArray* %3 to i64*
  store i64 0, i64* %12, align 8
  %13 = icmp eq i32 %1, 0
  br i1 %13, label %44, label %14

14:                                               ; preds = %2
  %15 = sext i32 %1 to i64
  %16 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %15, i64 108) #10
  %17 = extractvalue { i64, i1 } %16, 1
  %18 = extractvalue { i64, i1 } %16, 0
  %19 = select i1 %17, i64 -1, i64 %18
  %20 = tail call i8* @_Znam(i64 %19) #11
  %21 = bitcast i8* %20 to %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"*
  %22 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %21, i64 %15
  br label %23

23:                                               ; preds = %23, %14
  %24 = phi %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* [ %21, %14 ], [ %34, %23 ]
  %25 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %24, i64 0, i32 0, i32 0, i32 0, i32 1
  %26 = bitcast %struct.SkIRect* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %26, i8 0, i64 60, i1 false) #10
  %27 = bitcast %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %24 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %27, align 4
  %28 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 4
  %29 = bitcast float* %28 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %29, align 4
  %30 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 8
  store float 1.000000e+00, float* %30, align 4
  %31 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 16, i32* %31, align 4
  %32 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %24, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 -1, i32* %32, align 4
  %33 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %24, i64 0, i32 1
  store i32 0, i32* %33, align 4
  %34 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %24, i64 1
  %35 = icmp eq %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %34, %22
  br i1 %35, label %36, label %23

36:                                               ; preds = %23
  %37 = getelementptr inbounds %class.SkAutoTArray, %class.SkAutoTArray* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"** %37, align 8
  %39 = bitcast %class.SkAutoTArray* %3 to i8**
  store i8* %20, i8** %39, align 8
  %40 = icmp eq %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %38, null
  %41 = ptrtoint i8* %20 to i64
  br i1 %40, label %44, label %42

42:                                               ; preds = %36
  %43 = bitcast %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %38 to i8*
  tail call void @_ZdaPv(i8* %43) #11
  br label %44

44:                                               ; preds = %42, %36, %2
  %45 = phi i64 [ %41, %42 ], [ %41, %36 ], [ 0, %2 ]
  %46 = getelementptr inbounds %class.SkAutoTArray, %class.SkAutoTArray* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"** %46, align 8
  %47 = load %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"** %8, align 8
  store i64 %45, i64* %9, align 8
  %48 = icmp eq %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %47, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %44
  %50 = bitcast %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %47 to i8*
  tail call void @_ZdaPv(i8* %50) #11
  br label %51

51:                                               ; preds = %49, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  %52 = icmp sgt i32 %5, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %51
  %54 = inttoptr i64 %10 to %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"*
  %55 = zext i32 %5 to i64
  br label %61

56:                                               ; preds = %69, %51
  %57 = icmp eq i64 %10, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = inttoptr i64 %10 to i8*
  tail call void @_ZdaPv(i8* %59) #11
  br label %60

60:                                               ; preds = %56, %58
  ret void

61:                                               ; preds = %69, %53
  %62 = phi i64 [ 0, %53 ], [ %70, %69 ]
  %63 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %54, i64 %62, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %54, i64 %62, i32 0
  %68 = tail call %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair"* @_ZN12SkTHashTableIN10SkTHashMapI19SkPDFImageShaderKey22SkPDFIndirectReference10SkGoodHashE4PairES1_S5_E12uncheckedSetEOS5_(%class.SkTHashTable* %0, %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair"* dereferenceable(104) %67)
  br label %69

69:                                               ; preds = %66, %61
  %70 = add nuw nsw i64 %62, 1
  %71 = icmp eq i64 %70, %55
  br i1 %71, label %56, label %61
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair"* @_ZN12SkTHashTableIN10SkTHashMapI19SkPDFImageShaderKey22SkPDFIndirectReference10SkGoodHashE4PairES1_S5_E12uncheckedSetEOS5_(%class.SkTHashTable*, %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair"* dereferenceable(104)) local_unnamed_addr #7 comdat align 2 {
  %3 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %4 = bitcast %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair"* %1 to i8*
  %5 = tail call i32 %3(i8* %4, i64 100, i32 0) #10
  %6 = icmp eq i32 %5, 0
  %7 = select i1 %6, i32 1, i32 %5
  %8 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %109

11:                                               ; preds = %2
  %12 = add nsw i32 %9, -1
  %13 = and i32 %7, %12
  %14 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair", %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair"* %1, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair", %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair"* %1, i64 0, i32 0, i32 0, i32 1
  %17 = bitcast %struct.SkIRect* %16 to i8*
  %18 = getelementptr inbounds %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair", %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair"* %1, i64 0, i32 0, i32 0, i32 2, i32 1
  %19 = getelementptr inbounds %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair", %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair"* %1, i64 0, i32 0, i32 0, i32 2
  %20 = bitcast %struct.SkBitmapKey* %19 to i8*
  %21 = getelementptr inbounds %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair", %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair"* %1, i64 0, i32 0, i32 0, i32 3, i64 0
  %22 = getelementptr inbounds %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair", %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair"* %1, i64 0, i32 0, i32 0, i32 3, i64 1
  %23 = getelementptr inbounds %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair", %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair"* %1, i64 0, i32 0, i32 0, i32 4, i32 3
  %24 = getelementptr inbounds %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair", %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair"* %1, i64 0, i32 0, i32 0, i32 4, i32 0
  %25 = getelementptr inbounds %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair", %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair"* %1, i64 0, i32 0, i32 0, i32 4, i32 1
  %26 = getelementptr inbounds %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair", %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair"* %1, i64 0, i32 0, i32 0, i32 4, i32 2
  br label %27

27:                                               ; preds = %11, %101
  %28 = phi i32 [ 0, %11 ], [ %107, %101 ]
  %29 = phi i32 [ %13, %11 ], [ %106, %101 ]
  %30 = sext i32 %29 to i64
  %31 = load %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"** %14, align 8
  %32 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %31, i64 %30
  %33 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %31, i64 %30, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %45

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %32, i64 0, i32 0
  %38 = bitcast %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %38, i8* align 4 %4, i64 100, i1 false) #10
  %39 = getelementptr inbounds %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair", %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair"* %1, i64 0, i32 0, i32 1, i32 0
  %40 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %31, i64 %30, i32 0, i32 0, i32 1, i32 0
  %41 = load i32, i32* %39, align 4
  store i32 %41, i32* %40, align 4
  store i32 %7, i32* %33, align 4
  %42 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = add nsw i32 %43, 1
  store i32 %44, i32* %42, align 8
  br label %109

45:                                               ; preds = %27
  %46 = icmp eq i32 %7, %34
  br i1 %46, label %47, label %101

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = tail call zeroext i1 @_ZeqRK8SkMatrixS1_(%class.SkMatrix* dereferenceable(40) %15, %class.SkMatrix* dereferenceable(40) %48) #10
  br i1 %49, label %50, label %101

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %31, i64 %30, i32 0, i32 0, i32 0, i32 1
  %52 = bitcast %struct.SkIRect* %51 to i8*
  %53 = tail call i32 @bcmp(i8* %17, i8* %52, i64 16) #10
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %101

55:                                               ; preds = %50
  %56 = load i32, i32* %18, align 4
  %57 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %31, i64 %30, i32 0, i32 0, i32 0, i32 2, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %56, %58
  br i1 %59, label %60, label %101

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %31, i64 %30, i32 0, i32 0, i32 0, i32 2
  %62 = bitcast %struct.SkBitmapKey* %61 to i8*
  %63 = tail call i32 @bcmp(i8* %20, i8* %62, i64 16) #10
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %101

65:                                               ; preds = %60
  %66 = load i32, i32* %21, align 4
  %67 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %31, i64 %30, i32 0, i32 0, i32 0, i32 3, i64 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %66, %68
  br i1 %69, label %70, label %101

70:                                               ; preds = %65
  %71 = load i32, i32* %22, align 4
  %72 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %31, i64 %30, i32 0, i32 0, i32 0, i32 3, i64 1
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %71, %73
  br i1 %74, label %75, label %101

75:                                               ; preds = %70
  %76 = load float, float* %23, align 4
  %77 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %31, i64 %30, i32 0, i32 0, i32 0, i32 4, i32 3
  %78 = load float, float* %77, align 4
  %79 = fcmp oeq float %76, %78
  br i1 %79, label %80, label %101

80:                                               ; preds = %75
  %81 = load float, float* %24, align 4
  %82 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %31, i64 %30, i32 0, i32 0, i32 0, i32 4, i32 0
  %83 = load float, float* %82, align 4
  %84 = fcmp oeq float %81, %83
  br i1 %84, label %85, label %101

85:                                               ; preds = %80
  %86 = load float, float* %25, align 4
  %87 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %31, i64 %30, i32 0, i32 0, i32 0, i32 4, i32 1
  %88 = load float, float* %87, align 4
  %89 = fcmp oeq float %86, %88
  br i1 %89, label %90, label %101

90:                                               ; preds = %85
  %91 = load float, float* %26, align 4
  %92 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %31, i64 %30, i32 0, i32 0, i32 0, i32 4, i32 2
  %93 = load float, float* %92, align 4
  %94 = fcmp oeq float %91, %93
  br i1 %94, label %95, label %101

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %32, i64 0, i32 0
  %97 = bitcast %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %97, i8* align 4 %4, i64 100, i1 false) #10
  %98 = getelementptr inbounds %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair", %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair"* %1, i64 0, i32 0, i32 1, i32 0
  %99 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %31, i64 %30, i32 0, i32 0, i32 1, i32 0
  %100 = load i32, i32* %98, align 4
  store i32 %100, i32* %99, align 4
  br label %109

101:                                              ; preds = %55, %75, %80, %85, %47, %50, %60, %65, %70, %90, %45
  %102 = add nsw i32 %29, -1
  %103 = icmp slt i32 %29, 1
  %104 = load i32, i32* %8, align 4
  %105 = select i1 %103, i32 %104, i32 0
  %106 = add nsw i32 %102, %105
  %107 = add nuw nsw i32 %28, 1
  %108 = icmp slt i32 %107, %104
  br i1 %108, label %27, label %109

109:                                              ; preds = %101, %2, %95, %36
  %110 = phi %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair"* [ %96, %95 ], [ %37, %36 ], [ null, %2 ], [ null, %101 ]
  ret %"struct.SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair"* %110
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #8

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN8SkMatrix6ConcatERKS_S1_: argument 0"}
!4 = distinct !{!4, !"_ZN8SkMatrix6ConcatERKS_S1_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_Z9sk_ref_spI8SkShaderE5sk_spIT_EPS2_: argument 0"}
!7 = distinct !{!7, !"_Z9sk_ref_spI8SkShaderE5sk_spIT_EPS2_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN8SkMatrix6ConcatERKS_S1_: argument 0"}
!10 = distinct !{!10, !"_ZN8SkMatrix6ConcatERKS_S1_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_Z10sk_make_spI11SkPDFDeviceJR7SkISizeRP13SkPDFDocumentEE5sk_spIT_EDpOT0_: argument 0"}
!13 = distinct !{!13, !"_Z10sk_make_spI11SkPDFDeviceJR7SkISizeRP13SkPDFDocumentEE5sk_spIT_EDpOT0_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZL15scale_translateffff: argument 0"}
!16 = distinct !{!16, !"_ZL15scale_translateffff"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZL15scale_translateffff: argument 0"}
!19 = distinct !{!19, !"_ZL15scale_translateffff"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZL15scale_translateffff: argument 0"}
!22 = distinct !{!22, !"_ZL15scale_translateffff"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZL9to_bitmapPK7SkImage: argument 0"}
!25 = distinct !{!25, !"_ZL9to_bitmapPK7SkImage"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZL15scale_translateffff: argument 0"}
!28 = distinct !{!28, !"_ZL15scale_translateffff"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZL15scale_translateffff: argument 0"}
!31 = distinct !{!31, !"_ZL15scale_translateffff"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZL15scale_translateffff: argument 0"}
!34 = distinct !{!34, !"_ZL15scale_translateffff"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZL15scale_translateffff: argument 0"}
!37 = distinct !{!37, !"_ZL15scale_translateffff"}
