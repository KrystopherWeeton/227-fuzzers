; ModuleID = '../../services/viz/public/cpp/compositing/compositor_render_pass_mojom_traits.cc'
source_filename = "../../services/viz/public/cpp/compositing/compositor_render_pass_mojom_traits.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.viz::mojom::internal::CompositorRenderPass_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.1", %"struct.mojo::internal::Pointer.2", %"struct.mojo::internal::Pointer.2", %"struct.mojo::internal::Pointer.3", %"struct.mojo::internal::Pointer.4", %"struct.mojo::internal::Pointer.5", i8, [7 x i8], %"struct.mojo::internal::Pointer.6", %"struct.mojo::internal::Pointer.7" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"struct.mojo::internal::Pointer.0" = type { i64 }
%"struct.mojo::internal::Pointer.1" = type { i64 }
%"struct.mojo::internal::Pointer.2" = type { i64 }
%"struct.mojo::internal::Pointer.3" = type { i64 }
%"struct.mojo::internal::Pointer.4" = type { i64 }
%"struct.mojo::internal::Pointer.5" = type { i64 }
%"struct.mojo::internal::Pointer.6" = type { i64 }
%"struct.mojo::internal::Pointer.7" = type { i64 }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.10", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.8"*, %"class.mojo::ScopedHandleBase.8"*, %"class.std::__1::__compressed_pair" }
%"class.mojo::ScopedHandleBase.8" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::ScopedHandleBase.8"* }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.12" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.17 }
%class.scoped_refptr.17 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.21, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.23", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.19 }
%class.scoped_refptr.19 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.20", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.20" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.21 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.22" }>
%"class.base::RefCountedThreadSafe.22" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__cxx_atomic_impl.26" }
%"struct.std::__1::__cxx_atomic_impl.26" = type { %"struct.std::__1::__cxx_atomic_base_impl.27" }
%"struct.std::__1::__cxx_atomic_base_impl.27" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.viz::CompositorRenderPass"* }
%"class.viz::CompositorRenderPass" = type <{ %"class.viz::RenderPassInternal", %"class.util::IdType", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [4 x i8] }>
%"class.viz::RenderPassInternal" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Transform", %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.45", i8, i8, i8, i8, %"class.std::__1::vector.50", %"class.viz::QuadList", %"class.cc::ListContainer.77" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.30" }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.40" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.33", i32, [4 x i8] }>
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.32, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.32 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.45" = type { %"class.absl::optional_internal::optional_data.46" }
%"class.absl::optional_internal::optional_data.46" = type { %"class.absl::optional_internal::optional_data_base.47" }
%"class.absl::optional_internal::optional_data_base.47" = type { %"class.absl::optional_internal::optional_data_dtor_base.48" }
%"class.absl::optional_internal::optional_data_dtor_base.48" = type { i8, %union.anon.49 }
%union.anon.49 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { %"class.std::__1::unique_ptr.52"*, %"class.std::__1::unique_ptr.52"*, %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.viz::CopyOutputRequest"* }
%"class.viz::CopyOutputRequest" = type { i8, %"class.base::OnceCallback", %class.scoped_refptr.21, %"class.gfx::Vector2d", %"class.gfx::Vector2d", %"class.absl::optional.55", %"class.absl::optional.60", %"class.absl::optional.60" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.absl::optional.55" = type { %"class.absl::optional_internal::optional_data.56" }
%"class.absl::optional_internal::optional_data.56" = type { %"class.absl::optional_internal::optional_data_base.57" }
%"class.absl::optional_internal::optional_data_base.57" = type { %"class.absl::optional_internal::optional_data_dtor_base.58" }
%"class.absl::optional_internal::optional_data_dtor_base.58" = type { i8, %union.anon.59 }
%union.anon.59 = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.60" = type { %"class.absl::optional_internal::optional_data.61" }
%"class.absl::optional_internal::optional_data.61" = type { %"class.absl::optional_internal::optional_data_base.62" }
%"class.absl::optional_internal::optional_data_base.62" = type { %"class.absl::optional_internal::optional_data_dtor_base.63" }
%"class.absl::optional_internal::optional_data_dtor_base.63" = type { i8, %union.anon.64 }
%union.anon.64 = type { %"class.gfx::Rect" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.std::__1::unique_ptr.52"* }
%"class.viz::QuadList" = type { %"class.cc::ListContainer" }
%"class.cc::ListContainer" = type { %"class.cc::ListContainerHelper" }
%"class.cc::ListContainerHelper" = type { %"class.std::__1::unique_ptr.71" }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.cc::ListContainerHelper::CharAllocator"* }
%"class.cc::ListContainerHelper::CharAllocator" = type opaque
%"class.cc::ListContainer.77" = type { %"class.cc::ListContainerHelper" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.viz::mojom::internal::FilterOperations_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.109" }
%"struct.mojo::internal::Pointer.109" = type { i64 }
%"class.gfx::mojom::internal::RRectF_Data" = type { %"struct.mojo::internal::StructHeader", i32, [4 x i8], %"struct.mojo::internal::Pointer.110", %"struct.mojo::internal::Pointer.111", %"struct.mojo::internal::Pointer.111", %"struct.mojo::internal::Pointer.111", %"struct.mojo::internal::Pointer.111" }
%"struct.mojo::internal::Pointer.110" = type { i64 }
%"struct.mojo::internal::Pointer.111" = type { i64 }
%"class.mojo::internal::Array_Data.112" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }
%"class.viz::mojom::internal::CompositorRenderPassId_Data" = type { %"struct.mojo::internal::StructHeader", i64 }
%"class.mojo::internal::Array_Data" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.viz::SharedQuadState" = type <{ %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo", %"class.absl::optional.60", i8, [3 x i8], float, i32, i32, i8, [3 x i8], %"class.absl::optional.81", float, i8, [3 x i8] }>
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.absl::optional.81" = type { %"class.absl::optional_internal::optional_data.82" }
%"class.absl::optional_internal::optional_data.82" = type { %"class.absl::optional_internal::optional_data_base.83" }
%"class.absl::optional_internal::optional_data_base.83" = type { %"class.absl::optional_internal::optional_data_dtor_base.84" }
%"class.absl::optional_internal::optional_data_dtor_base.84" = type { i8, %union.anon.85 }
%union.anon.85 = type { i64 }
%"class.viz::mojom::internal::DrawQuad_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0", i8, [7 x i8], %"struct.mojo::internal::Pointer.86", %"class.viz::mojom::internal::DrawQuadState_Data" }
%"struct.mojo::internal::Pointer.86" = type { i64 }
%"class.viz::mojom::internal::DrawQuadState_Data" = type { i32, i32, %"union.viz::mojom::internal::DrawQuadState_Data::Union_" }
%"union.viz::mojom::internal::DrawQuadState_Data::Union_" = type { %"struct.mojo::internal::Pointer.87" }
%"struct.mojo::internal::Pointer.87" = type { i64 }
%"class.viz::DrawQuad" = type <{ i32 (...)**, i32, %"class.gfx::Rect", %"class.gfx::Rect", i8, [3 x i8], %"class.viz::SharedQuadState"*, %"struct.viz::DrawQuad::Resources", [4 x i8] }>
%"struct.viz::DrawQuad::Resources" = type { i32, [4 x %"class.util::IdType.96"] }
%"class.util::IdType.96" = type { %"class.base::StrongAlias.97" }
%"class.base::StrongAlias.97" = type { i32 }
%"class.viz::mojom::internal::SharedQuadState_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.1", %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.98", %"struct.mojo::internal::Pointer.0", i8, [3 x i8], float, i32, i32, float, [4 x i8] }
%"struct.mojo::internal::Pointer.98" = type { i64 }
%"class.gfx::mojom::internal::MaskFilterInfo_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.3" }
%"class.gfx::RRectFBuilder" = type { float, float, float, float, float, float, float, float, float, float, float, float }
%"class.viz::mojom::internal::CopyOutputRequest_Data" = type { %"struct.mojo::internal::StructHeader", i32, [4 x i8], %"struct.mojo::internal::Pointer.113", %"struct.mojo::internal::Pointer.113", %"struct.mojo::internal::Pointer.114", %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Interface_Data" }
%"struct.mojo::internal::Pointer.113" = type { i64 }
%"struct.mojo::internal::Pointer.114" = type { i64 }
%"struct.mojo::internal::Interface_Data" = type { %"struct.mojo::internal::Handle_Data", i32 }
%"struct.mojo::internal::Handle_Data" = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN4mojo12StructTraitsIN3viz5mojom23SharedQuadStateDataViewENS1_15SharedQuadStateEE4ReadES3_PS4_ = comdat any

$_ZN4mojo12StructTraitsIN3gfx5mojom14RRectFDataViewENS1_6RRectFEE4ReadES3_PS4_ = comdat any

$_ZN4mojo8internal10SerializerINS_13ArrayDataViewIN3viz5mojom25CopyOutputRequestDataViewEEENSt3__16vectorINS7_10unique_ptrINS3_17CopyOutputRequestENS7_14default_deleteISA_EEEENS7_9allocatorISD_EEEEE11DeserializeEPNS0_10Array_DataINS0_7PointerINS4_8internal22CopyOutputRequest_DataEEEEEPSG_PNS_7MessageE = comdat any

$_ZN4mojo11ArrayTraitsINSt3__16vectorINS1_10unique_ptrIN3viz17CopyOutputRequestENS1_14default_deleteIS5_EEEENS1_9allocatorIS8_EEEEE6ResizeERSB_m = comdat any

@.str = private unnamed_addr constant [23 x i8] c"Invalid render pass ID\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"AllocateAndConstruct quad failed\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"No shared quad state\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN3viz5mojom28CompositorRenderPassDataViewENSt3__110unique_ptrINS1_20CompositorRenderPassENS4_14default_deleteIS6_EEEEE4ReadES3_PS9_(%"class.viz::mojom::internal::CompositorRenderPass_Data"*, %"class.mojo::Message"*, %"class.std::__1::unique_ptr"*) local_unnamed_addr #0 align 2 {
  %4 = tail call %"class.viz::CompositorRenderPass"* @_ZN3viz20CompositorRenderPass6CreateEv() #8
  %5 = ptrtoint %"class.viz::CompositorRenderPass"* %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %6, align 8
  %8 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  store i64 %5, i64* %8, align 8
  %9 = icmp eq %"class.viz::CompositorRenderPass"* %7, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  tail call void @_ZN3viz20CompositorRenderPassD1Ev(%"class.viz::CompositorRenderPass"* nonnull %7) #8
  %11 = bitcast %"class.viz::CompositorRenderPass"* %7 to i8*
  tail call void @_ZdlPv(i8* %11) #9
  %12 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %6, align 8
  br label %13

13:                                               ; preds = %10, %3
  %14 = phi %"class.viz::CompositorRenderPass"* [ %12, %10 ], [ %4, %3 ]
  %15 = getelementptr inbounds %"class.viz::mojom::internal::CompositorRenderPass_Data", %"class.viz::mojom::internal::CompositorRenderPass_Data"* %0, i64 0, i32 2
  %16 = getelementptr inbounds %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0"* %15, i64 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  %19 = bitcast %"struct.mojo::internal::Pointer.0"* %15 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 %17
  br i1 %18, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds i8, i8* %20, i64 16
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %23, align 1
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %329, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds i8, i8* %20, i64 20
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 1
  %30 = icmp slt i32 %29, 0
  br i1 %30, label %329, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds i8, i8* %20, i64 8
  %33 = bitcast i8* %32 to i32*
  %34 = load i32, i32* %33, align 1
  %35 = getelementptr inbounds i8, i8* %20, i64 12
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 1
  %38 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 %34, i32* %38, align 4
  %39 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %14, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 %37, i32* %39, align 4
  %40 = icmp sgt i32 %34, 0
  %41 = icmp sgt i32 %24, 0
  %42 = and i1 %41, %40
  %43 = sub nuw nsw i32 2147483647, %34
  %44 = icmp ult i32 %43, %24
  %45 = and i1 %44, %42
  %46 = select i1 %45, i32 %43, i32 %24
  %47 = icmp sgt i32 %46, 0
  %48 = select i1 %47, i32 %46, i32 0
  %49 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %14, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 %48, i32* %49, align 4
  %50 = icmp sgt i32 %37, 0
  %51 = sub nuw nsw i32 2147483647, %37
  %52 = icmp ult i32 %51, %29
  %53 = and i1 %50, %52
  %54 = select i1 %53, i32 %51, i32 %29
  %55 = icmp sgt i32 %54, 0
  %56 = select i1 %55, i32 %54, i32 0
  %57 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %14, i64 0, i32 0, i32 0, i32 1, i32 1
  store i32 %56, i32* %57, align 4
  %58 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %6, align 8
  br label %59

59:                                               ; preds = %13, %31
  %60 = phi %"class.viz::CompositorRenderPass"* [ %14, %13 ], [ %58, %31 ]
  %61 = getelementptr inbounds %"class.viz::mojom::internal::CompositorRenderPass_Data", %"class.viz::mojom::internal::CompositorRenderPass_Data"* %0, i64 0, i32 3
  %62 = getelementptr inbounds %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0"* %61, i64 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, 0
  %65 = bitcast %"struct.mojo::internal::Pointer.0"* %61 to i8*
  %66 = getelementptr inbounds i8, i8* %65, i64 %63
  br i1 %64, label %104, label %67

67:                                               ; preds = %59
  %68 = getelementptr inbounds i8, i8* %66, i64 16
  %69 = bitcast i8* %68 to i32*
  %70 = load i32, i32* %69, align 1
  %71 = icmp slt i32 %70, 0
  br i1 %71, label %329, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds i8, i8* %66, i64 20
  %74 = bitcast i8* %73 to i32*
  %75 = load i32, i32* %74, align 1
  %76 = icmp slt i32 %75, 0
  br i1 %76, label %329, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds i8, i8* %66, i64 8
  %79 = bitcast i8* %78 to i32*
  %80 = load i32, i32* %79, align 1
  %81 = getelementptr inbounds i8, i8* %66, i64 12
  %82 = bitcast i8* %81 to i32*
  %83 = load i32, i32* %82, align 1
  %84 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %60, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 %80, i32* %84, align 4
  %85 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %60, i64 0, i32 0, i32 1, i32 0, i32 1
  store i32 %83, i32* %85, align 4
  %86 = icmp sgt i32 %80, 0
  %87 = icmp sgt i32 %70, 0
  %88 = and i1 %87, %86
  %89 = sub nuw nsw i32 2147483647, %80
  %90 = icmp ult i32 %89, %70
  %91 = and i1 %90, %88
  %92 = select i1 %91, i32 %89, i32 %70
  %93 = icmp sgt i32 %92, 0
  %94 = select i1 %93, i32 %92, i32 0
  %95 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %60, i64 0, i32 0, i32 1, i32 1, i32 0
  store i32 %94, i32* %95, align 4
  %96 = icmp sgt i32 %83, 0
  %97 = sub nuw nsw i32 2147483647, %83
  %98 = icmp ult i32 %97, %75
  %99 = and i1 %96, %98
  %100 = select i1 %99, i32 %97, i32 %75
  %101 = icmp sgt i32 %100, 0
  %102 = select i1 %101, i32 %100, i32 0
  %103 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %60, i64 0, i32 0, i32 1, i32 1, i32 1
  store i32 %102, i32* %103, align 4
  br label %104

104:                                              ; preds = %59, %77
  %105 = getelementptr inbounds %"class.viz::mojom::internal::CompositorRenderPass_Data", %"class.viz::mojom::internal::CompositorRenderPass_Data"* %0, i64 0, i32 4
  %106 = getelementptr inbounds %"struct.mojo::internal::Pointer.1", %"struct.mojo::internal::Pointer.1"* %105, i64 0, i32 0
  %107 = load i64, i64* %106, align 8
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %123, label %109

109:                                              ; preds = %104
  %110 = bitcast %"struct.mojo::internal::Pointer.1"* %105 to i8*
  %111 = getelementptr inbounds i8, i8* %110, i64 %107
  %112 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %6, align 8
  %113 = getelementptr inbounds i8, i8* %111, i64 8
  %114 = bitcast i8* %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = icmp eq i64 %115, 0
  %117 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %112, i64 0, i32 0, i32 2, i32 0
  br i1 %116, label %118, label %119

118:                                              ; preds = %109
  tail call void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44* %117) #8
  br label %123

119:                                              ; preds = %109
  %120 = getelementptr inbounds i8, i8* %113, i64 %115
  %121 = getelementptr inbounds i8, i8* %120, i64 8
  %122 = bitcast i8* %121 to float*
  tail call void @_ZN10SkMatrix4412setColMajorfEPKf(%class.SkMatrix44* %117, float* %122) #8
  br label %123

123:                                              ; preds = %119, %118, %104
  %124 = getelementptr inbounds %"class.viz::mojom::internal::CompositorRenderPass_Data", %"class.viz::mojom::internal::CompositorRenderPass_Data"* %0, i64 0, i32 5
  %125 = getelementptr inbounds %"struct.mojo::internal::Pointer.2", %"struct.mojo::internal::Pointer.2"* %124, i64 0, i32 0
  %126 = load i64, i64* %125, align 8
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %135, label %128

128:                                              ; preds = %123
  %129 = bitcast %"struct.mojo::internal::Pointer.2"* %124 to i8*
  %130 = getelementptr inbounds i8, i8* %129, i64 %126
  %131 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %6, align 8
  %132 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %131, i64 0, i32 0, i32 3
  %133 = bitcast i8* %130 to %"class.viz::mojom::internal::FilterOperations_Data"*
  %134 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN3viz5mojom24FilterOperationsDataViewEN2cc16FilterOperationsEE4ReadES3_PS5_(%"class.viz::mojom::internal::FilterOperations_Data"* nonnull %133, %"class.mojo::Message"* %1, %"class.cc::FilterOperations"* %132) #8
  br i1 %134, label %135, label %329

135:                                              ; preds = %123, %128
  %136 = getelementptr inbounds %"class.viz::mojom::internal::CompositorRenderPass_Data", %"class.viz::mojom::internal::CompositorRenderPass_Data"* %0, i64 0, i32 6
  %137 = getelementptr inbounds %"struct.mojo::internal::Pointer.2", %"struct.mojo::internal::Pointer.2"* %136, i64 0, i32 0
  %138 = load i64, i64* %137, align 8
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %147, label %140

140:                                              ; preds = %135
  %141 = bitcast %"struct.mojo::internal::Pointer.2"* %136 to i8*
  %142 = getelementptr inbounds i8, i8* %141, i64 %138
  %143 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %6, align 8
  %144 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %143, i64 0, i32 0, i32 4
  %145 = bitcast i8* %142 to %"class.viz::mojom::internal::FilterOperations_Data"*
  %146 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN3viz5mojom24FilterOperationsDataViewEN2cc16FilterOperationsEE4ReadES3_PS5_(%"class.viz::mojom::internal::FilterOperations_Data"* nonnull %145, %"class.mojo::Message"* %1, %"class.cc::FilterOperations"* %144) #8
  br i1 %146, label %147, label %329

147:                                              ; preds = %135, %140
  %148 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %6, align 8
  %149 = getelementptr inbounds %"class.viz::mojom::internal::CompositorRenderPass_Data", %"class.viz::mojom::internal::CompositorRenderPass_Data"* %0, i64 0, i32 7
  %150 = getelementptr inbounds %"struct.mojo::internal::Pointer.3", %"struct.mojo::internal::Pointer.3"* %149, i64 0, i32 0
  %151 = load i64, i64* %150, align 8
  %152 = icmp eq i64 %151, 0
  %153 = bitcast %"struct.mojo::internal::Pointer.3"* %149 to i8*
  %154 = getelementptr inbounds i8, i8* %153, i64 %151
  %155 = bitcast i8* %154 to %"class.gfx::mojom::internal::RRectF_Data"*
  %156 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %148, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  br i1 %152, label %157, label %158

157:                                              ; preds = %147
  store i8 0, i8* %156, align 4
  br label %167

158:                                              ; preds = %147
  %159 = load i8, i8* %156, align 4, !range !2
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %161, label %164

161:                                              ; preds = %158
  %162 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %148, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %163 = bitcast %union.anon.49* %162 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %163, i8 0, i64 52, i1 false) #8
  store i8 1, i8* %156, align 4
  br label %164

164:                                              ; preds = %158, %161
  %165 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %148, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %166 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN3gfx5mojom14RRectFDataViewENS1_6RRectFEE4ReadES3_PS4_(%"class.gfx::mojom::internal::RRectF_Data"* nonnull %155, %"class.mojo::Message"* %1, %"class.gfx::RRectF"* %165) #8
  br i1 %166, label %167, label %329

167:                                              ; preds = %157, %164
  %168 = getelementptr inbounds %"class.viz::mojom::internal::CompositorRenderPass_Data", %"class.viz::mojom::internal::CompositorRenderPass_Data"* %0, i64 0, i32 8
  %169 = getelementptr inbounds %"struct.mojo::internal::Pointer.4", %"struct.mojo::internal::Pointer.4"* %168, i64 0, i32 0
  %170 = load i64, i64* %169, align 8
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %180, label %172

172:                                              ; preds = %167
  %173 = bitcast %"struct.mojo::internal::Pointer.4"* %168 to i8*
  %174 = getelementptr inbounds i8, i8* %173, i64 %170
  %175 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %6, align 8
  %176 = getelementptr inbounds i8, i8* %174, i64 8
  %177 = bitcast i8* %176 to i32*
  %178 = load i32, i32* %177, align 1
  %179 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %175, i64 0, i32 2, i32 0
  store i32 %178, i32* %179, align 4
  br label %180

180:                                              ; preds = %172, %167
  %181 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %6, align 8
  %182 = getelementptr inbounds %"class.viz::mojom::internal::CompositorRenderPass_Data", %"class.viz::mojom::internal::CompositorRenderPass_Data"* %0, i64 0, i32 9
  %183 = getelementptr inbounds %"struct.mojo::internal::Pointer.5", %"struct.mojo::internal::Pointer.5"* %182, i64 0, i32 0
  %184 = load i64, i64* %183, align 8
  %185 = icmp eq i64 %184, 0
  %186 = bitcast %"struct.mojo::internal::Pointer.5"* %182 to i8*
  %187 = getelementptr inbounds i8, i8* %186, i64 %184
  br i1 %185, label %204, label %188

188:                                              ; preds = %180
  %189 = getelementptr inbounds i8, i8* %187, i64 8
  %190 = bitcast i8* %189 to i32*
  %191 = load i32, i32* %190, align 1
  %192 = icmp slt i32 %191, 0
  br i1 %192, label %329, label %193

193:                                              ; preds = %188
  %194 = getelementptr inbounds i8, i8* %187, i64 12
  %195 = bitcast i8* %194 to i32*
  %196 = load i32, i32* %195, align 1
  %197 = icmp slt i32 %196, 0
  br i1 %197, label %329, label %198

198:                                              ; preds = %193
  %199 = icmp sgt i32 %191, 0
  %200 = select i1 %199, i32 %191, i32 0
  %201 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %181, i64 0, i32 3, i32 0
  store i32 %200, i32* %201, align 4
  %202 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %181, i64 0, i32 3, i32 1
  store i32 %196, i32* %202, align 4
  %203 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %6, align 8
  br label %204

204:                                              ; preds = %180, %198
  %205 = phi %"class.viz::CompositorRenderPass"* [ %181, %180 ], [ %203, %198 ]
  %206 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %205, i64 0, i32 0, i32 10
  %207 = getelementptr inbounds %"class.viz::mojom::internal::CompositorRenderPass_Data", %"class.viz::mojom::internal::CompositorRenderPass_Data"* %0, i64 0, i32 12
  %208 = getelementptr inbounds %"struct.mojo::internal::Pointer.6", %"struct.mojo::internal::Pointer.6"* %207, i64 0, i32 0
  %209 = load i64, i64* %208, align 8
  %210 = icmp eq i64 %209, 0
  %211 = bitcast %"struct.mojo::internal::Pointer.6"* %207 to i8*
  %212 = getelementptr inbounds i8, i8* %211, i64 %209
  %213 = bitcast i8* %212 to %"class.mojo::internal::Array_Data.112"*
  %214 = select i1 %210, %"class.mojo::internal::Array_Data.112"* null, %"class.mojo::internal::Array_Data.112"* %213
  %215 = tail call zeroext i1 @_ZN4mojo8internal10SerializerINS_13ArrayDataViewIN3viz5mojom25CopyOutputRequestDataViewEEENSt3__16vectorINS7_10unique_ptrINS3_17CopyOutputRequestENS7_14default_deleteISA_EEEENS7_9allocatorISD_EEEEE11DeserializeEPNS0_10Array_DataINS0_7PointerINS4_8internal22CopyOutputRequest_DataEEEEEPSG_PNS_7MessageE(%"class.mojo::internal::Array_Data.112"* %214, %"class.std::__1::vector.50"* %206, %"class.mojo::Message"* %1) #8
  br i1 %215, label %216, label %329

216:                                              ; preds = %204
  %217 = getelementptr inbounds %"class.viz::mojom::internal::CompositorRenderPass_Data", %"class.viz::mojom::internal::CompositorRenderPass_Data"* %0, i64 0, i32 1
  %218 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %217, i64 0, i32 0
  %219 = load i64, i64* %218, align 8
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %228, label %221

221:                                              ; preds = %216
  %222 = bitcast %"struct.mojo::internal::Pointer"* %217 to i8*
  %223 = getelementptr inbounds i8, i8* %222, i64 %219
  %224 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %6, align 8
  %225 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %224, i64 0, i32 1
  %226 = bitcast i8* %223 to %"class.viz::mojom::internal::CompositorRenderPassId_Data"*
  %227 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN3viz5mojom30CompositorRenderPassIdDataViewEN4util6IdTypeINS1_20CompositorRenderPassEmLm0ELm1EEEE4ReadES3_PS7_(%"class.viz::mojom::internal::CompositorRenderPassId_Data"* nonnull %226, %"class.util::IdType"* %225) #8
  br i1 %227, label %228, label %329

228:                                              ; preds = %216, %221
  %229 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %6, align 8
  %230 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %229, i64 0, i32 1, i32 0, i32 0
  %231 = load i64, i64* %230, align 8
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %233, label %234

233:                                              ; preds = %228
  tail call void @_ZN3viz32SetDeserializationCrashKeyStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i64 22) #8
  br label %329

234:                                              ; preds = %228
  %235 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %229, i64 0, i32 3, i32 0
  %236 = load i32, i32* %235, align 4
  %237 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %229, i64 0, i32 0, i32 0, i32 1, i32 0
  %238 = load i32, i32* %237, align 4
  %239 = icmp sgt i32 %236, %238
  br i1 %239, label %329, label %240

240:                                              ; preds = %234
  %241 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %229, i64 0, i32 3, i32 1
  %242 = load i32, i32* %241, align 4
  %243 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %229, i64 0, i32 0, i32 0, i32 1, i32 1
  %244 = load i32, i32* %243, align 4
  %245 = icmp sgt i32 %242, %244
  br i1 %245, label %329, label %246

246:                                              ; preds = %240
  %247 = getelementptr inbounds %"class.viz::mojom::internal::CompositorRenderPass_Data", %"class.viz::mojom::internal::CompositorRenderPass_Data"* %0, i64 0, i32 10
  %248 = load i8, i8* %247, align 1
  %249 = and i8 %248, 1
  %250 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %229, i64 0, i32 0, i32 6
  store i8 %249, i8* %250, align 8
  %251 = load i8, i8* %247, align 1
  %252 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %6, align 8
  %253 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %252, i64 0, i32 0, i32 7
  %254 = lshr i8 %251, 1
  %255 = and i8 %254, 1
  store i8 %255, i8* %253, align 1
  %256 = load i8, i8* %247, align 1
  %257 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %6, align 8
  %258 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %257, i64 0, i32 0, i32 8
  %259 = lshr i8 %256, 2
  %260 = and i8 %259, 1
  store i8 %260, i8* %258, align 2
  %261 = load i8, i8* %247, align 1
  %262 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %6, align 8
  %263 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %262, i64 0, i32 0, i32 9
  %264 = lshr i8 %261, 3
  %265 = and i8 %264, 1
  store i8 %265, i8* %263, align 1
  %266 = getelementptr inbounds %"class.viz::mojom::internal::CompositorRenderPass_Data", %"class.viz::mojom::internal::CompositorRenderPass_Data"* %0, i64 0, i32 13
  %267 = getelementptr inbounds %"struct.mojo::internal::Pointer.7", %"struct.mojo::internal::Pointer.7"* %266, i64 0, i32 0
  %268 = load i64, i64* %267, align 8
  %269 = icmp eq i64 %268, 0
  %270 = bitcast %"struct.mojo::internal::Pointer.7"* %266 to i8*
  %271 = getelementptr inbounds i8, i8* %270, i64 %268
  %272 = bitcast i8* %271 to %"class.mojo::internal::Array_Data"*
  %273 = select i1 %269, %"class.mojo::internal::Array_Data"* null, %"class.mojo::internal::Array_Data"* %272
  %274 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %273, i64 0, i32 0, i32 1
  %275 = load i32, i32* %274, align 1
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %329, label %277

277:                                              ; preds = %246
  %278 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %273, i64 1
  br label %283

279:                                              ; preds = %323
  %280 = load i32, i32* %274, align 1
  %281 = zext i32 %280 to i64
  %282 = icmp ult i64 %327, %281
  br i1 %282, label %283, label %329

283:                                              ; preds = %277, %279
  %284 = phi %"class.viz::SharedQuadState"* [ null, %277 ], [ %324, %279 ]
  %285 = phi i64 [ 0, %277 ], [ %327, %279 ]
  %286 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %278, i64 %285
  %287 = bitcast %"class.mojo::internal::Array_Data"* %286 to i64*
  %288 = load i64, i64* %287, align 8
  %289 = icmp eq i64 %288, 0
  %290 = bitcast %"class.mojo::internal::Array_Data"* %286 to i8*
  %291 = getelementptr inbounds i8, i8* %290, i64 %288
  %292 = bitcast i8* %291 to %"class.viz::mojom::internal::DrawQuad_Data"*
  %293 = select i1 %289, %"class.viz::mojom::internal::DrawQuad_Data"* null, %"class.viz::mojom::internal::DrawQuad_Data"* %292
  %294 = getelementptr inbounds %"class.viz::mojom::internal::DrawQuad_Data", %"class.viz::mojom::internal::DrawQuad_Data"* %293, i64 0, i32 6, i32 1
  %295 = load i32, i32* %294, align 1
  %296 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %6, align 8
  %297 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %296, i64 0, i32 0, i32 11
  %298 = tail call %"class.viz::DrawQuad"* @_ZN4mojo20AllocateAndConstructEN3viz5mojom8internal18DrawQuadState_Data17DrawQuadState_TagEPNS0_8QuadListE(i32 %295, %"class.viz::QuadList"* %297) #8
  %299 = icmp eq %"class.viz::DrawQuad"* %298, null
  br i1 %299, label %300, label %301

300:                                              ; preds = %283
  tail call void @_ZN3viz32SetDeserializationCrashKeyStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i64 32) #8
  br label %329

301:                                              ; preds = %283
  %302 = load i64, i64* %287, align 8
  %303 = icmp eq i64 %302, 0
  br i1 %303, label %308, label %304

304:                                              ; preds = %301
  %305 = getelementptr inbounds i8, i8* %290, i64 %302
  %306 = bitcast i8* %305 to %"class.viz::mojom::internal::DrawQuad_Data"*
  %307 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN3viz5mojom16DrawQuadDataViewENS1_8DrawQuadEE4ReadES3_PS4_(%"class.viz::mojom::internal::DrawQuad_Data"* nonnull %306, %"class.mojo::Message"* %1, %"class.viz::DrawQuad"* nonnull %298) #8
  br i1 %307, label %308, label %329

308:                                              ; preds = %301, %304
  %309 = getelementptr inbounds %"class.viz::mojom::internal::DrawQuad_Data", %"class.viz::mojom::internal::DrawQuad_Data"* %293, i64 0, i32 5
  %310 = getelementptr inbounds %"struct.mojo::internal::Pointer.86", %"struct.mojo::internal::Pointer.86"* %309, i64 0, i32 0
  %311 = load i64, i64* %310, align 8
  %312 = icmp eq i64 %311, 0
  %313 = bitcast %"struct.mojo::internal::Pointer.86"* %309 to i8*
  %314 = getelementptr inbounds i8, i8* %313, i64 %311
  %315 = icmp eq i8* %314, null
  %316 = or i1 %312, %315
  br i1 %316, label %323, label %317

317:                                              ; preds = %308
  %318 = bitcast i8* %314 to %"class.viz::mojom::internal::SharedQuadState_Data"*
  %319 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %6, align 8
  %320 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %319, i64 0, i32 0
  %321 = tail call %"class.viz::SharedQuadState"* @_ZN3viz18RenderPassInternal30CreateAndAppendSharedQuadStateEv(%"class.viz::RenderPassInternal"* %320) #8
  %322 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN3viz5mojom23SharedQuadStateDataViewENS1_15SharedQuadStateEE4ReadES3_PS4_(%"class.viz::mojom::internal::SharedQuadState_Data"* nonnull %318, %"class.mojo::Message"* %1, %"class.viz::SharedQuadState"* %321)
  br i1 %322, label %323, label %329

323:                                              ; preds = %317, %308
  %324 = phi %"class.viz::SharedQuadState"* [ %284, %308 ], [ %321, %317 ]
  %325 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %298, i64 0, i32 6
  store %"class.viz::SharedQuadState"* %324, %"class.viz::SharedQuadState"** %325, align 8
  %326 = icmp eq %"class.viz::SharedQuadState"* %324, null
  %327 = add nuw nsw i64 %285, 1
  br i1 %326, label %328, label %279

328:                                              ; preds = %323
  tail call void @_ZN3viz32SetDeserializationCrashKeyStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0), i64 20) #8
  br label %329

329:                                              ; preds = %279, %317, %304, %246, %300, %328, %193, %188, %72, %67, %26, %21, %234, %240, %128, %140, %164, %204, %221, %233
  %330 = phi i1 [ false, %233 ], [ false, %221 ], [ false, %204 ], [ false, %164 ], [ false, %140 ], [ false, %128 ], [ false, %240 ], [ false, %234 ], [ false, %21 ], [ false, %26 ], [ false, %67 ], [ false, %72 ], [ false, %188 ], [ false, %193 ], [ false, %300 ], [ false, %328 ], [ true, %246 ], [ true, %279 ], [ false, %317 ], [ false, %304 ]
  ret i1 %330
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.viz::CompositorRenderPass"* @_ZN3viz20CompositorRenderPass6CreateEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3viz32SetDeserializationCrashKeyStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2

declare %"class.viz::DrawQuad"* @_ZN4mojo20AllocateAndConstructEN3viz5mojom8internal18DrawQuadState_Data17DrawQuadState_TagEPNS0_8QuadListE(i32, %"class.viz::QuadList"*) local_unnamed_addr #2

declare %"class.viz::SharedQuadState"* @_ZN3viz18RenderPassInternal30CreateAndAppendSharedQuadStateEv(%"class.viz::RenderPassInternal"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo12StructTraitsIN3viz5mojom23SharedQuadStateDataViewENS1_15SharedQuadStateEE4ReadES3_PS4_(%"class.viz::mojom::internal::SharedQuadState_Data"*, %"class.mojo::Message"*, %"class.viz::SharedQuadState"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.viz::mojom::internal::SharedQuadState_Data", %"class.viz::mojom::internal::SharedQuadState_Data"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"struct.mojo::internal::Pointer.1", %"struct.mojo::internal::Pointer.1"* %4, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %21, label %8

8:                                                ; preds = %3
  %9 = bitcast %"struct.mojo::internal::Pointer.1"* %4 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 %6
  %11 = getelementptr inbounds i8, i8* %10, i64 8
  %12 = bitcast i8* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  %15 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %2, i64 0, i32 0, i32 0
  br i1 %14, label %16, label %17

16:                                               ; preds = %8
  tail call void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44* %15) #8
  br label %21

17:                                               ; preds = %8
  %18 = getelementptr inbounds i8, i8* %11, i64 %13
  %19 = getelementptr inbounds i8, i8* %18, i64 8
  %20 = bitcast i8* %19 to float*
  tail call void @_ZN10SkMatrix4412setColMajorfEPKf(%class.SkMatrix44* %15, float* %20) #8
  br label %21

21:                                               ; preds = %17, %16, %3
  %22 = getelementptr inbounds %"class.viz::mojom::internal::SharedQuadState_Data", %"class.viz::mojom::internal::SharedQuadState_Data"* %0, i64 0, i32 2
  %23 = getelementptr inbounds %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0"* %22, i64 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  %26 = bitcast %"struct.mojo::internal::Pointer.0"* %22 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 %24
  br i1 %25, label %65, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds i8, i8* %27, i64 16
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 1
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %203, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds i8, i8* %27, i64 20
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %203, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds i8, i8* %27, i64 8
  %40 = bitcast i8* %39 to i32*
  %41 = load i32, i32* %40, align 1
  %42 = getelementptr inbounds i8, i8* %27, i64 12
  %43 = bitcast i8* %42 to i32*
  %44 = load i32, i32* %43, align 1
  %45 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %2, i64 0, i32 1, i32 0, i32 0
  store i32 %41, i32* %45, align 4
  %46 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %2, i64 0, i32 1, i32 0, i32 1
  store i32 %44, i32* %46, align 4
  %47 = icmp sgt i32 %41, 0
  %48 = icmp sgt i32 %31, 0
  %49 = and i1 %48, %47
  %50 = sub nuw nsw i32 2147483647, %41
  %51 = icmp ult i32 %50, %31
  %52 = and i1 %51, %49
  %53 = select i1 %52, i32 %50, i32 %31
  %54 = icmp sgt i32 %53, 0
  %55 = select i1 %54, i32 %53, i32 0
  %56 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %2, i64 0, i32 1, i32 1, i32 0
  store i32 %55, i32* %56, align 4
  %57 = icmp sgt i32 %44, 0
  %58 = sub nuw nsw i32 2147483647, %44
  %59 = icmp ult i32 %58, %36
  %60 = and i1 %57, %59
  %61 = select i1 %60, i32 %58, i32 %36
  %62 = icmp sgt i32 %61, 0
  %63 = select i1 %62, i32 %61, i32 0
  %64 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %2, i64 0, i32 1, i32 1, i32 1
  store i32 %63, i32* %64, align 4
  br label %65

65:                                               ; preds = %21, %38
  %66 = getelementptr inbounds %"class.viz::mojom::internal::SharedQuadState_Data", %"class.viz::mojom::internal::SharedQuadState_Data"* %0, i64 0, i32 3
  %67 = getelementptr inbounds %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0"* %66, i64 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %68, 0
  %70 = bitcast %"struct.mojo::internal::Pointer.0"* %66 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 %68
  br i1 %69, label %109, label %72

72:                                               ; preds = %65
  %73 = getelementptr inbounds i8, i8* %71, i64 16
  %74 = bitcast i8* %73 to i32*
  %75 = load i32, i32* %74, align 1
  %76 = icmp slt i32 %75, 0
  br i1 %76, label %203, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds i8, i8* %71, i64 20
  %79 = bitcast i8* %78 to i32*
  %80 = load i32, i32* %79, align 1
  %81 = icmp slt i32 %80, 0
  br i1 %81, label %203, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds i8, i8* %71, i64 8
  %84 = bitcast i8* %83 to i32*
  %85 = load i32, i32* %84, align 1
  %86 = getelementptr inbounds i8, i8* %71, i64 12
  %87 = bitcast i8* %86 to i32*
  %88 = load i32, i32* %87, align 1
  %89 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %2, i64 0, i32 2, i32 0, i32 0
  store i32 %85, i32* %89, align 4
  %90 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %2, i64 0, i32 2, i32 0, i32 1
  store i32 %88, i32* %90, align 4
  %91 = icmp sgt i32 %85, 0
  %92 = icmp sgt i32 %75, 0
  %93 = and i1 %92, %91
  %94 = sub nuw nsw i32 2147483647, %85
  %95 = icmp ult i32 %94, %75
  %96 = and i1 %95, %93
  %97 = select i1 %96, i32 %94, i32 %75
  %98 = icmp sgt i32 %97, 0
  %99 = select i1 %98, i32 %97, i32 0
  %100 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %2, i64 0, i32 2, i32 1, i32 0
  store i32 %99, i32* %100, align 4
  %101 = icmp sgt i32 %88, 0
  %102 = sub nuw nsw i32 2147483647, %88
  %103 = icmp ult i32 %102, %80
  %104 = and i1 %101, %103
  %105 = select i1 %104, i32 %102, i32 %80
  %106 = icmp sgt i32 %105, 0
  %107 = select i1 %106, i32 %105, i32 0
  %108 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %2, i64 0, i32 2, i32 1, i32 1
  store i32 %107, i32* %108, align 4
  br label %109

109:                                              ; preds = %65, %82
  %110 = getelementptr inbounds %"class.viz::mojom::internal::SharedQuadState_Data", %"class.viz::mojom::internal::SharedQuadState_Data"* %0, i64 0, i32 4
  %111 = getelementptr inbounds %"struct.mojo::internal::Pointer.98", %"struct.mojo::internal::Pointer.98"* %110, i64 0, i32 0
  %112 = load i64, i64* %111, align 8
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %120, label %114

114:                                              ; preds = %109
  %115 = bitcast %"struct.mojo::internal::Pointer.98"* %110 to i8*
  %116 = getelementptr inbounds i8, i8* %115, i64 %112
  %117 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %2, i64 0, i32 3
  %118 = bitcast i8* %116 to %"class.gfx::mojom::internal::MaskFilterInfo_Data"*
  %119 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN3gfx5mojom22MaskFilterInfoDataViewENS1_14MaskFilterInfoEE4ReadES3_PS4_(%"class.gfx::mojom::internal::MaskFilterInfo_Data"* nonnull %118, %"class.mojo::Message"* %1, %"class.gfx::MaskFilterInfo"* %117) #8
  br i1 %119, label %120, label %203

120:                                              ; preds = %109, %114
  %121 = getelementptr inbounds %"class.viz::mojom::internal::SharedQuadState_Data", %"class.viz::mojom::internal::SharedQuadState_Data"* %0, i64 0, i32 5
  %122 = getelementptr inbounds %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0"* %121, i64 0, i32 0
  %123 = load i64, i64* %122, align 8
  %124 = icmp eq i64 %123, 0
  %125 = bitcast %"struct.mojo::internal::Pointer.0"* %121 to i8*
  %126 = getelementptr inbounds i8, i8* %125, i64 %123
  %127 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  br i1 %124, label %128, label %129

128:                                              ; preds = %120
  store i8 0, i8* %127, align 4
  br label %172

129:                                              ; preds = %120
  %130 = load i8, i8* %127, align 4, !range !2
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %132, label %135

132:                                              ; preds = %129
  %133 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %134 = bitcast %union.anon.64* %133 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %134, i8 0, i64 16, i1 false) #8
  store i8 1, i8* %127, align 4
  br label %135

135:                                              ; preds = %132, %129
  %136 = getelementptr inbounds i8, i8* %126, i64 16
  %137 = bitcast i8* %136 to i32*
  %138 = load i32, i32* %137, align 1
  %139 = icmp slt i32 %138, 0
  br i1 %139, label %203, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds i8, i8* %126, i64 20
  %142 = bitcast i8* %141 to i32*
  %143 = load i32, i32* %142, align 1
  %144 = icmp slt i32 %143, 0
  br i1 %144, label %203, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds i8, i8* %126, i64 8
  %147 = bitcast i8* %146 to i32*
  %148 = load i32, i32* %147, align 1
  %149 = getelementptr inbounds i8, i8* %126, i64 12
  %150 = bitcast i8* %149 to i32*
  %151 = load i32, i32* %150, align 1
  %152 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 %148, i32* %152, align 4
  %153 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  store i32 %151, i32* %153, align 4
  %154 = icmp sgt i32 %148, 0
  %155 = icmp sgt i32 %138, 0
  %156 = and i1 %155, %154
  %157 = sub nuw nsw i32 2147483647, %148
  %158 = icmp ult i32 %157, %138
  %159 = and i1 %158, %156
  %160 = select i1 %159, i32 %157, i32 %138
  %161 = icmp sgt i32 %160, 0
  %162 = select i1 %161, i32 %160, i32 0
  %163 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  store i32 %162, i32* %163, align 4
  %164 = icmp sgt i32 %151, 0
  %165 = sub nuw nsw i32 2147483647, %151
  %166 = icmp ult i32 %165, %143
  %167 = and i1 %164, %166
  %168 = select i1 %167, i32 %165, i32 %143
  %169 = icmp sgt i32 %168, 0
  %170 = select i1 %169, i32 %168, i32 0
  %171 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 1
  store i32 %170, i32* %171, align 4
  br label %172

172:                                              ; preds = %128, %145
  %173 = getelementptr inbounds %"class.viz::mojom::internal::SharedQuadState_Data", %"class.viz::mojom::internal::SharedQuadState_Data"* %0, i64 0, i32 6
  %174 = load i8, i8* %173, align 1
  %175 = and i8 %174, 1
  %176 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %2, i64 0, i32 5
  store i8 %175, i8* %176, align 4
  %177 = getelementptr inbounds %"class.viz::mojom::internal::SharedQuadState_Data", %"class.viz::mojom::internal::SharedQuadState_Data"* %0, i64 0, i32 8
  %178 = bitcast float* %177 to i32*
  %179 = load i32, i32* %178, align 1
  %180 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %2, i64 0, i32 7
  %181 = bitcast float* %180 to i32*
  store i32 %179, i32* %181, align 8
  %182 = getelementptr inbounds %"class.viz::mojom::internal::SharedQuadState_Data", %"class.viz::mojom::internal::SharedQuadState_Data"* %0, i64 0, i32 9
  %183 = load i32, i32* %182, align 1
  %184 = icmp ugt i32 %183, 28
  br i1 %184, label %203, label %185

185:                                              ; preds = %172
  %186 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %2, i64 0, i32 8
  store i32 %183, i32* %186, align 4
  %187 = getelementptr inbounds %"class.viz::mojom::internal::SharedQuadState_Data", %"class.viz::mojom::internal::SharedQuadState_Data"* %0, i64 0, i32 10
  %188 = load i32, i32* %187, align 1
  %189 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %2, i64 0, i32 9
  store i32 %188, i32* %189, align 8
  %190 = load i8, i8* %173, align 1
  %191 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %2, i64 0, i32 10
  %192 = lshr i8 %190, 1
  %193 = and i8 %192, 1
  store i8 %193, i8* %191, align 4
  %194 = getelementptr inbounds %"class.viz::mojom::internal::SharedQuadState_Data", %"class.viz::mojom::internal::SharedQuadState_Data"* %0, i64 0, i32 11
  %195 = bitcast float* %194 to i32*
  %196 = load i32, i32* %195, align 1
  %197 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %2, i64 0, i32 13
  %198 = bitcast float* %197 to i32*
  store i32 %196, i32* %198, align 8
  %199 = load i8, i8* %173, align 1
  %200 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %2, i64 0, i32 14
  %201 = lshr i8 %199, 2
  %202 = and i8 %201, 1
  store i8 %202, i8* %200, align 4
  br label %203

203:                                              ; preds = %140, %135, %77, %72, %33, %28, %172, %114, %185
  %204 = phi i1 [ true, %185 ], [ false, %114 ], [ false, %172 ], [ false, %28 ], [ false, %33 ], [ false, %72 ], [ false, %77 ], [ false, %135 ], [ false, %140 ]
  ret i1 %204
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN10SkMatrix4412setColMajorfEPKf(%class.SkMatrix44*, float*) local_unnamed_addr #2

declare void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44*) local_unnamed_addr #2

declare zeroext i1 @_ZN4mojo12StructTraitsIN3gfx5mojom22MaskFilterInfoDataViewENS1_14MaskFilterInfoEE4ReadES3_PS4_(%"class.gfx::mojom::internal::MaskFilterInfo_Data"*, %"class.mojo::Message"*, %"class.gfx::MaskFilterInfo"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @_ZN3viz20CompositorRenderPassD1Ev(%"class.viz::CompositorRenderPass"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare zeroext i1 @_ZN4mojo12StructTraitsIN3viz5mojom24FilterOperationsDataViewEN2cc16FilterOperationsEE4ReadES3_PS5_(%"class.viz::mojom::internal::FilterOperations_Data"*, %"class.mojo::Message"*, %"class.cc::FilterOperations"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo12StructTraitsIN3gfx5mojom14RRectFDataViewENS1_6RRectFEE4ReadES3_PS4_(%"class.gfx::mojom::internal::RRectF_Data"*, %"class.mojo::Message"*, %"class.gfx::RRectF"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.gfx::RRectF", align 4
  %5 = alloca %"class.gfx::RRectFBuilder", align 4
  %6 = alloca %"class.gfx::RRectF", align 4
  %7 = alloca %"class.gfx::RRectFBuilder", align 4
  %8 = alloca %"class.gfx::RRectF", align 4
  %9 = alloca %"class.gfx::RRectFBuilder", align 4
  %10 = getelementptr inbounds %"class.gfx::mojom::internal::RRectF_Data", %"class.gfx::mojom::internal::RRectF_Data"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 1
  %12 = add i32 %11, -1
  %13 = icmp ult i32 %12, 5
  %14 = select i1 %13, i32 %11, i32 0
  %15 = getelementptr inbounds %"class.gfx::mojom::internal::RRectF_Data", %"class.gfx::mojom::internal::RRectF_Data"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"struct.mojo::internal::Pointer.110", %"struct.mojo::internal::Pointer.110"* %15, i64 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  %19 = bitcast %"struct.mojo::internal::Pointer.110"* %15 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 %17
  br i1 %18, label %44, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds i8, i8* %20, i64 16
  %23 = bitcast i8* %22 to float*
  %24 = load float, float* %23, align 1
  %25 = fcmp olt float %24, 0.000000e+00
  br i1 %25, label %164, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds i8, i8* %20, i64 20
  %28 = bitcast i8* %27 to float*
  %29 = load float, float* %28, align 1
  %30 = fcmp olt float %29, 0.000000e+00
  br i1 %30, label %164, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds i8, i8* %20, i64 8
  %33 = bitcast i8* %32 to i32*
  %34 = load i32, i32* %33, align 1
  %35 = getelementptr inbounds i8, i8* %20, i64 12
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 1
  %38 = fcmp ogt float %24, 0x3EB0000000000000
  %39 = select i1 %38, float %24, float 0.000000e+00
  %40 = bitcast float %39 to i32
  %41 = fcmp ogt float %29, 0x3EB0000000000000
  %42 = select i1 %41, float %29, float 0.000000e+00
  %43 = bitcast float %42 to i32
  br label %44

44:                                               ; preds = %3, %31
  %45 = phi i32 [ %34, %31 ], [ 0, %3 ]
  %46 = phi i32 [ %37, %31 ], [ 0, %3 ]
  %47 = phi i32 [ %40, %31 ], [ 0, %3 ]
  %48 = phi i32 [ %43, %31 ], [ 0, %3 ]
  %49 = icmp ult i32 %14, 2
  br i1 %49, label %50, label %61

50:                                               ; preds = %44
  %51 = bitcast %"class.gfx::RRectF"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %51) #8
  %52 = bitcast %"class.gfx::RRectFBuilder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %52) #8
  call void @_ZN3gfx13RRectFBuilderC1Ev(%"class.gfx::RRectFBuilder"* nonnull %5) #8
  %53 = bitcast %"class.gfx::RRectFBuilder"* %5 to i32*
  store i32 %45, i32* %53, align 4
  %54 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %5, i64 0, i32 1
  %55 = bitcast float* %54 to i32*
  store i32 %46, i32* %55, align 4
  %56 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %5, i64 0, i32 2
  %57 = bitcast float* %56 to i32*
  store i32 %47, i32* %57, align 4
  %58 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %5, i64 0, i32 3
  %59 = bitcast float* %58 to i32*
  store i32 %48, i32* %59, align 4
  call void @_ZN3gfx13RRectFBuilder5BuildEv(%"class.gfx::RRectF"* nonnull sret %4, %"class.gfx::RRectFBuilder"* nonnull %5) #8
  %60 = bitcast %"class.gfx::RRectF"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %60, i8* nonnull align 4 %51, i64 52, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %52) #8
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %51) #8
  br label %164

61:                                               ; preds = %44
  %62 = getelementptr inbounds %"class.gfx::mojom::internal::RRectF_Data", %"class.gfx::mojom::internal::RRectF_Data"* %0, i64 0, i32 4
  %63 = getelementptr inbounds %"struct.mojo::internal::Pointer.111", %"struct.mojo::internal::Pointer.111"* %62, i64 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = bitcast %"struct.mojo::internal::Pointer.111"* %62 to i8*
  %68 = getelementptr inbounds i8, i8* %67, i64 %64
  %69 = getelementptr inbounds i8, i8* %68, i64 8
  %70 = bitcast i8* %69 to <2 x float>*
  %71 = load <2 x float>, <2 x float>* %70, align 1
  br label %72

72:                                               ; preds = %66, %61
  %73 = phi <2 x float> [ zeroinitializer, %61 ], [ %71, %66 ]
  %74 = icmp ult i32 %14, 4
  br i1 %74, label %75, label %95

75:                                               ; preds = %72
  %76 = shufflevector <2 x float> %73, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %77 = bitcast %"class.gfx::RRectF"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %77) #8
  %78 = bitcast %"class.gfx::RRectFBuilder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %78) #8
  call void @_ZN3gfx13RRectFBuilderC1Ev(%"class.gfx::RRectFBuilder"* nonnull %7) #8
  %79 = bitcast %"class.gfx::RRectFBuilder"* %7 to i32*
  store i32 %45, i32* %79, align 4
  %80 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %7, i64 0, i32 1
  %81 = bitcast float* %80 to i32*
  store i32 %46, i32* %81, align 4
  %82 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %7, i64 0, i32 2
  %83 = bitcast float* %82 to i32*
  store i32 %47, i32* %83, align 4
  %84 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %7, i64 0, i32 3
  %85 = bitcast float* %84 to i32*
  store i32 %48, i32* %85, align 4
  %86 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %7, i64 0, i32 4
  %87 = bitcast float* %86 to <4 x float>*
  store <4 x float> %76, <4 x float>* %87, align 4
  %88 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %7, i64 0, i32 8
  %89 = extractelement <2 x float> %73, i32 0
  store float %89, float* %88, align 4
  %90 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %7, i64 0, i32 9
  %91 = extractelement <2 x float> %73, i32 1
  store float %91, float* %90, align 4
  %92 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %7, i64 0, i32 10
  store float %89, float* %92, align 4
  %93 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %7, i64 0, i32 11
  store float %91, float* %93, align 4
  call void @_ZN3gfx13RRectFBuilder5BuildEv(%"class.gfx::RRectF"* nonnull sret %6, %"class.gfx::RRectFBuilder"* nonnull %7) #8
  %94 = bitcast %"class.gfx::RRectF"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %94, i8* nonnull align 4 %77, i64 52, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %78) #8
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %77) #8
  br label %164

95:                                               ; preds = %72
  %96 = getelementptr inbounds %"class.gfx::mojom::internal::RRectF_Data", %"class.gfx::mojom::internal::RRectF_Data"* %0, i64 0, i32 5
  %97 = getelementptr inbounds %"struct.mojo::internal::Pointer.111", %"struct.mojo::internal::Pointer.111"* %96, i64 0, i32 0
  %98 = load i64, i64* %97, align 8
  %99 = icmp eq i64 %98, 0
  %100 = bitcast %"struct.mojo::internal::Pointer.111"* %96 to i8*
  %101 = getelementptr inbounds i8, i8* %100, i64 %98
  br i1 %99, label %109, label %102

102:                                              ; preds = %95
  %103 = getelementptr inbounds i8, i8* %101, i64 8
  %104 = bitcast i8* %103 to float*
  %105 = load float, float* %104, align 1
  %106 = getelementptr inbounds i8, i8* %101, i64 12
  %107 = bitcast i8* %106 to float*
  %108 = load float, float* %107, align 1
  br label %109

109:                                              ; preds = %102, %95
  %110 = phi float [ 0.000000e+00, %95 ], [ %108, %102 ]
  %111 = phi float [ 0.000000e+00, %95 ], [ %105, %102 ]
  %112 = getelementptr inbounds %"class.gfx::mojom::internal::RRectF_Data", %"class.gfx::mojom::internal::RRectF_Data"* %0, i64 0, i32 6
  %113 = getelementptr inbounds %"struct.mojo::internal::Pointer.111", %"struct.mojo::internal::Pointer.111"* %112, i64 0, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = icmp eq i64 %114, 0
  %116 = bitcast %"struct.mojo::internal::Pointer.111"* %112 to i8*
  %117 = getelementptr inbounds i8, i8* %116, i64 %114
  br i1 %115, label %125, label %118

118:                                              ; preds = %109
  %119 = getelementptr inbounds i8, i8* %117, i64 8
  %120 = bitcast i8* %119 to float*
  %121 = load float, float* %120, align 1
  %122 = getelementptr inbounds i8, i8* %117, i64 12
  %123 = bitcast i8* %122 to float*
  %124 = load float, float* %123, align 1
  br label %125

125:                                              ; preds = %118, %109
  %126 = phi float [ 0.000000e+00, %109 ], [ %124, %118 ]
  %127 = phi float [ 0.000000e+00, %109 ], [ %121, %118 ]
  %128 = getelementptr inbounds %"class.gfx::mojom::internal::RRectF_Data", %"class.gfx::mojom::internal::RRectF_Data"* %0, i64 0, i32 7
  %129 = getelementptr inbounds %"struct.mojo::internal::Pointer.111", %"struct.mojo::internal::Pointer.111"* %128, i64 0, i32 0
  %130 = load i64, i64* %129, align 8
  %131 = icmp eq i64 %130, 0
  %132 = bitcast %"struct.mojo::internal::Pointer.111"* %128 to i8*
  %133 = getelementptr inbounds i8, i8* %132, i64 %130
  br i1 %131, label %141, label %134

134:                                              ; preds = %125
  %135 = getelementptr inbounds i8, i8* %133, i64 8
  %136 = bitcast i8* %135 to float*
  %137 = load float, float* %136, align 1
  %138 = getelementptr inbounds i8, i8* %133, i64 12
  %139 = bitcast i8* %138 to float*
  %140 = load float, float* %139, align 1
  br label %141

141:                                              ; preds = %125, %134
  %142 = phi float [ 0.000000e+00, %125 ], [ %140, %134 ]
  %143 = phi float [ 0.000000e+00, %125 ], [ %137, %134 ]
  %144 = bitcast %"class.gfx::RRectF"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %144) #8
  %145 = bitcast %"class.gfx::RRectFBuilder"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %145) #8
  call void @_ZN3gfx13RRectFBuilderC1Ev(%"class.gfx::RRectFBuilder"* nonnull %9) #8
  %146 = bitcast %"class.gfx::RRectFBuilder"* %9 to i32*
  store i32 %45, i32* %146, align 4
  %147 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %9, i64 0, i32 1
  %148 = bitcast float* %147 to i32*
  store i32 %46, i32* %148, align 4
  %149 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %9, i64 0, i32 2
  %150 = bitcast float* %149 to i32*
  store i32 %47, i32* %150, align 4
  %151 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %9, i64 0, i32 3
  %152 = bitcast float* %151 to i32*
  store i32 %48, i32* %152, align 4
  %153 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %9, i64 0, i32 4
  %154 = extractelement <2 x float> %73, i32 0
  store float %154, float* %153, align 4
  %155 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %9, i64 0, i32 5
  %156 = extractelement <2 x float> %73, i32 1
  store float %156, float* %155, align 4
  %157 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %9, i64 0, i32 6
  store float %111, float* %157, align 4
  %158 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %9, i64 0, i32 7
  store float %110, float* %158, align 4
  %159 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %9, i64 0, i32 8
  store float %127, float* %159, align 4
  %160 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %9, i64 0, i32 9
  store float %126, float* %160, align 4
  %161 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %9, i64 0, i32 10
  store float %143, float* %161, align 4
  %162 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %9, i64 0, i32 11
  store float %142, float* %162, align 4
  call void @_ZN3gfx13RRectFBuilder5BuildEv(%"class.gfx::RRectF"* nonnull sret %8, %"class.gfx::RRectFBuilder"* nonnull %9) #8
  %163 = bitcast %"class.gfx::RRectF"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %163, i8* nonnull align 4 %144, i64 52, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %145) #8
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %144) #8
  br label %164

164:                                              ; preds = %75, %141, %26, %21, %50
  %165 = phi i1 [ true, %50 ], [ false, %21 ], [ false, %26 ], [ true, %75 ], [ true, %141 ]
  ret i1 %165
}

declare void @_ZN3gfx13RRectFBuilderC1Ev(%"class.gfx::RRectFBuilder"*) unnamed_addr #2

declare void @_ZN3gfx13RRectFBuilder5BuildEv(%"class.gfx::RRectF"* sret, %"class.gfx::RRectFBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal10SerializerINS_13ArrayDataViewIN3viz5mojom25CopyOutputRequestDataViewEEENSt3__16vectorINS7_10unique_ptrINS3_17CopyOutputRequestENS7_14default_deleteISA_EEEENS7_9allocatorISD_EEEEE11DeserializeEPNS0_10Array_DataINS0_7PointerINS4_8internal22CopyOutputRequest_DataEEEEEPSG_PNS_7MessageE(%"class.mojo::internal::Array_Data.112"*, %"class.std::__1::vector.50"*, %"class.mojo::Message"*) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq %"class.mojo::internal::Array_Data.112"* %0, null
  br i1 %4, label %5, label %22

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.52"*, %"class.std::__1::unique_ptr.52"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %1, i64 0, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.52"*, %"class.std::__1::unique_ptr.52"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.52"* %9, %7
  br i1 %10, label %21, label %11

11:                                               ; preds = %5, %19
  %12 = phi %"class.std::__1::unique_ptr.52"* [ %13, %19 ], [ %9, %5 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.52"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.52"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.viz::CopyOutputRequest"*, %"class.viz::CopyOutputRequest"** %14, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %14, align 8
  %16 = icmp eq %"class.viz::CopyOutputRequest"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %11
  tail call void @_ZN3viz17CopyOutputRequestD1Ev(%"class.viz::CopyOutputRequest"* nonnull %15) #8
  %18 = getelementptr inbounds %"class.viz::CopyOutputRequest", %"class.viz::CopyOutputRequest"* %15, i64 0, i32 0
  tail call void @_ZdlPv(i8* %18) #9
  br label %19

19:                                               ; preds = %17, %11
  %20 = icmp eq %"class.std::__1::unique_ptr.52"* %13, %7
  br i1 %20, label %21, label %11

21:                                               ; preds = %19, %5
  store %"class.std::__1::unique_ptr.52"* %7, %"class.std::__1::unique_ptr.52"** %8, align 8
  br label %54

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.mojo::internal::Array_Data.112", %"class.mojo::internal::Array_Data.112"* %0, i64 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 1
  %25 = zext i32 %24 to i64
  %26 = tail call zeroext i1 @_ZN4mojo11ArrayTraitsINSt3__16vectorINS1_10unique_ptrIN3viz17CopyOutputRequestENS1_14default_deleteIS5_EEEENS1_9allocatorIS8_EEEEE6ResizeERSB_m(%"class.std::__1::vector.50"* dereferenceable(24) %1, i64 %25) #8
  br i1 %26, label %27, label %54

27:                                               ; preds = %22
  %28 = load i32, i32* %23, align 1
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %54, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.mojo::internal::Array_Data.112", %"class.mojo::internal::Array_Data.112"* %0, i64 1
  %32 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %1, i64 0, i32 0, i32 0
  br label %33

33:                                               ; preds = %50, %30
  %34 = phi i32 [ %28, %30 ], [ %51, %50 ]
  %35 = phi i64 [ 0, %30 ], [ %40, %50 ]
  %36 = getelementptr inbounds %"class.mojo::internal::Array_Data.112", %"class.mojo::internal::Array_Data.112"* %31, i64 %35
  %37 = bitcast %"class.mojo::internal::Array_Data.112"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, 0
  %40 = add nuw nsw i64 %35, 1
  br i1 %39, label %50, label %41

41:                                               ; preds = %33
  %42 = bitcast %"class.mojo::internal::Array_Data.112"* %36 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 %38
  %44 = bitcast i8* %43 to %"class.viz::mojom::internal::CopyOutputRequest_Data"*
  %45 = load %"class.std::__1::unique_ptr.52"*, %"class.std::__1::unique_ptr.52"** %32, align 8
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.52"* %45, i64 %35
  %47 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN3viz5mojom25CopyOutputRequestDataViewENSt3__110unique_ptrINS1_17CopyOutputRequestENS4_14default_deleteIS6_EEEEE4ReadES3_PS9_(%"class.viz::mojom::internal::CopyOutputRequest_Data"* nonnull %44, %"class.mojo::Message"* %2, %"class.std::__1::unique_ptr.52"* %46) #8
  br i1 %47, label %48, label %54

48:                                               ; preds = %41
  %49 = load i32, i32* %23, align 1
  br label %50

50:                                               ; preds = %48, %33
  %51 = phi i32 [ %49, %48 ], [ %34, %33 ]
  %52 = zext i32 %51 to i64
  %53 = icmp ult i64 %40, %52
  br i1 %53, label %33, label %54

54:                                               ; preds = %50, %41, %27, %22, %21
  %55 = phi i1 [ true, %21 ], [ false, %22 ], [ true, %27 ], [ false, %41 ], [ true, %50 ]
  ret i1 %55
}

; Function Attrs: nounwind
declare void @_ZN3viz17CopyOutputRequestD1Ev(%"class.viz::CopyOutputRequest"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo11ArrayTraitsINSt3__16vectorINS1_10unique_ptrIN3viz17CopyOutputRequestENS1_14default_deleteIS5_EEEENS1_9allocatorIS8_EEEEE6ResizeERSB_m(%"class.std::__1::vector.50"* dereferenceable(24), i64) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::__1::vector.50", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::unique_ptr.52"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.50"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp eq i64 %10, %1
  br i1 %11, label %69, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.50"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #8
  %14 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %3, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #8
  %16 = icmp eq i64 %1, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %12
  %18 = bitcast %"class.std::__1::unique_ptr.52"** %14 to i64*
  br label %38

19:                                               ; preds = %12
  %20 = icmp ugt i64 %1, 2305843009213693951
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector.50"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %22) #10
  unreachable

23:                                               ; preds = %19
  %24 = shl i64 %1, 3
  %25 = tail call i8* @_Znwm(i64 %24) #9
  %26 = bitcast i8* %25 to %"class.std::__1::unique_ptr.52"*
  %27 = bitcast %"class.std::__1::vector.50"* %3 to i8**
  store i8* %25, i8** %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.52"* %26, i64 %1
  store %"class.std::__1::unique_ptr.52"* %28, %"class.std::__1::unique_ptr.52"** %15, align 8
  %29 = bitcast %"class.std::__1::unique_ptr.52"** %14 to i64*
  %30 = ptrtoint i8* %25 to i64
  %31 = add nsw i64 %1, -1
  %32 = getelementptr %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.52"* %26, i64 %31, i32 0, i32 0, i32 0
  %33 = ptrtoint %"class.viz::CopyOutputRequest"** %32 to i64
  %34 = sub i64 8, %30
  %35 = add i64 %34, %33
  %36 = and i64 %35, -8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 %36, i1 false) #8
  %37 = ptrtoint %"class.std::__1::unique_ptr.52"* %28 to i64
  store i64 %37, i64* %29, align 8
  br label %38

38:                                               ; preds = %17, %23
  %39 = phi i64* [ %18, %17 ], [ %29, %23 ]
  %40 = phi i64 [ 0, %17 ], [ %37, %23 ]
  %41 = phi i64 [ 0, %17 ], [ %30, %23 ]
  %42 = bitcast %"class.std::__1::vector.50"* %3 to i64*
  store i64 %41, i64* %7, align 8
  store i64 %8, i64* %42, align 8
  store i64 %40, i64* %5, align 8
  store i64 %6, i64* %39, align 8
  %43 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %44 = bitcast %"class.std::__1::unique_ptr.52"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::unique_ptr.52"** %15 to i64*
  store i64 %40, i64* %44, align 8
  store i64 %45, i64* %46, align 8
  %47 = inttoptr i64 %8 to %"class.std::__1::unique_ptr.52"*
  %48 = icmp eq i64 %8, 0
  %49 = inttoptr i64 %6 to %"class.std::__1::unique_ptr.52"*
  br i1 %48, label %68, label %50

50:                                               ; preds = %38
  %51 = inttoptr i64 %8 to i8*
  %52 = icmp eq %"class.std::__1::unique_ptr.52"* %49, %47
  br i1 %52, label %66, label %53

53:                                               ; preds = %50, %61
  %54 = phi %"class.std::__1::unique_ptr.52"* [ %55, %61 ], [ %49, %50 ]
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.52"* %54, i64 -1
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.52"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.viz::CopyOutputRequest"*, %"class.viz::CopyOutputRequest"** %56, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %56, align 8
  %58 = icmp eq %"class.viz::CopyOutputRequest"* %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %53
  tail call void @_ZN3viz17CopyOutputRequestD1Ev(%"class.viz::CopyOutputRequest"* nonnull %57) #8
  %60 = getelementptr inbounds %"class.viz::CopyOutputRequest", %"class.viz::CopyOutputRequest"* %57, i64 0, i32 0
  tail call void @_ZdlPv(i8* %60) #9
  br label %61

61:                                               ; preds = %59, %53
  %62 = icmp eq %"class.std::__1::unique_ptr.52"* %55, %47
  br i1 %62, label %63, label %53

63:                                               ; preds = %61
  %64 = bitcast %"class.std::__1::vector.50"* %3 to i8**
  %65 = load i8*, i8** %64, align 8
  br label %66

66:                                               ; preds = %63, %50
  %67 = phi i8* [ %65, %63 ], [ %51, %50 ]
  store %"class.std::__1::unique_ptr.52"* %47, %"class.std::__1::unique_ptr.52"** %14, align 8
  tail call void @_ZdlPv(i8* %67) #9
  br label %68

68:                                               ; preds = %38, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #8
  br label %69

69:                                               ; preds = %2, %68
  ret i1 true
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare zeroext i1 @_ZN4mojo12StructTraitsIN3viz5mojom25CopyOutputRequestDataViewENSt3__110unique_ptrINS1_17CopyOutputRequestENS4_14default_deleteIS6_EEEEE4ReadES3_PS9_(%"class.viz::mojom::internal::CopyOutputRequest_Data"*, %"class.mojo::Message"*, %"class.std::__1::unique_ptr.52"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4mojo12StructTraitsIN3viz5mojom30CompositorRenderPassIdDataViewEN4util6IdTypeINS1_20CompositorRenderPassEmLm0ELm1EEEE4ReadES3_PS7_(%"class.viz::mojom::internal::CompositorRenderPassId_Data"*, %"class.util::IdType"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4mojo12StructTraitsIN3viz5mojom16DrawQuadDataViewENS1_8DrawQuadEE4ReadES3_PS4_(%"class.viz::mojom::internal::DrawQuad_Data"*, %"class.mojo::Message"*, %"class.viz::DrawQuad"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
